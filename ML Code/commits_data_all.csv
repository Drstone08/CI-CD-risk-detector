repository,commit_sha,author,timestamp,message,filename,additions,deletions,changes,patch
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,lerna.json,1,1,2,"@@ -16,5 +16,5 @@
       ""registry"": ""https://registry.npmjs.org/""
     }
   },
-  ""version"": ""15.6.0-canary.49""
+  ""version"": ""15.6.0-canary.50""
 }"
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/create-next-app/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""create-next-app"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/eslint-config-next/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""eslint-config-next"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""description"": ""ESLint configuration used by Next.js."",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
@@ -10,7 +10,7 @@
   },
   ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"",
   ""dependencies"": {
-    ""@next/eslint-plugin-next"": ""15.6.0-canary.49"",
+    ""@next/eslint-plugin-next"": ""15.6.0-canary.50"",
     ""@rushstack/eslint-patch"": ""^1.10.3"",
     ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"",
     ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/eslint-plugin-internal/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/eslint-plugin-internal"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""description"": ""ESLint plugin for working on Next.js."",
   ""exports"": {
     ""."": ""./src/eslint-plugin-internal.js"""
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/eslint-plugin-next/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/eslint-plugin-next"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""description"": ""ESLint plugin for Next.js."",
   ""main"": ""dist/index.js"",
   ""types"": ""dist/index.d.ts"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/font/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/font"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/font"""
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next-bundle-analyzer/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/bundle-analyzer"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""main"": ""index.js"",
   ""types"": ""index.d.ts"",
   ""license"": ""MIT"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next-codemod/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/codemod"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""license"": ""MIT"",
   ""repository"": {
     ""type"": ""git"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next-env/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/env"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next-mdx/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/mdx"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
   ""repository"": {"
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next-plugin-storybook/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/plugin-storybook"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-plugin-storybook"""
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next-polyfill-module/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-module"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+, Firefox 60+, Chrome 61+, Safari 10.1+)"",
   ""main"": ""dist/polyfill-module.js"",
   ""license"": ""MIT"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next-polyfill-nomodule/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-nomodule"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""description"": ""A polyfill for non-dead, nomodule browsers."",
   ""main"": ""dist/polyfill-nomodule.js"",
   ""license"": ""MIT"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next-rspack/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next-rspack"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-rspack"""
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next-swc/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/swc"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""private"": true,
   ""files"": [
     ""native/"""
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/next/package.json,7,7,14,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""description"": ""The React Framework"",
   ""main"": ""./dist/server/next.js"",
   ""license"": ""MIT"",
@@ -100,7 +100,7 @@
     ]
   },
   ""dependencies"": {
-    ""@next/env"": ""15.6.0-canary.49"",
+    ""@next/env"": ""15.6.0-canary.50"",
     ""@swc/helpers"": ""0.5.15"",
     ""caniuse-lite"": ""^1.0.30001579"",
     ""postcss"": ""8.4.31"",
@@ -164,11 +164,11 @@
     ""@modelcontextprotocol/sdk"": ""1.18.1"",
     ""@mswjs/interceptors"": ""0.23.0"",
     ""@napi-rs/triples"": ""1.2.0"",
-    ""@next/font"": ""15.6.0-canary.49"",
-    ""@next/polyfill-module"": ""15.6.0-canary.49"",
-    ""@next/polyfill-nomodule"": ""15.6.0-canary.49"",
-    ""@next/react-refresh-utils"": ""15.6.0-canary.49"",
-    ""@next/swc"": ""15.6.0-canary.49"",
+    ""@next/font"": ""15.6.0-canary.50"",
+    ""@next/polyfill-module"": ""15.6.0-canary.50"",
+    ""@next/polyfill-nomodule"": ""15.6.0-canary.50"",
+    ""@next/react-refresh-utils"": ""15.6.0-canary.50"",
+    ""@next/swc"": ""15.6.0-canary.50"",
     ""@opentelemetry/api"": ""1.6.0"",
     ""@playwright/test"": ""1.51.1"",
     ""@rspack/core"": ""1.5.0"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/react-refresh-utils/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/react-refresh-utils"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""description"": ""An experimental package providing utilities for React Refresh."",
   ""repository"": {
     ""url"": ""vercel/next.js"","
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,packages/third-parties/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/third-parties"",
-  ""version"": ""15.6.0-canary.49"",
+  ""version"": ""15.6.0-canary.50"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/third-parties""
@@ -26,7 +26,7 @@
     ""third-party-capital"": ""1.0.20""
   },
   ""devDependencies"": {
-    ""next"": ""15.6.0-canary.49"",
+    ""next"": ""15.6.0-canary.50"",
     ""outdent"": ""0.8.0"",
     ""prettier"": ""2.5.1"",
     ""typescript"": ""5.9.2"""
vercel/next.js,f69066fb20b29e591b40ff20e41181391bda1477,nextjs-bot,2025-10-07T16:08:28Z,v15.6.0-canary.50,pnpm-lock.yaml,8,8,16,"@@ -899,7 +899,7 @@ importers:
   packages/eslint-config-next:
     dependencies:
       '@next/eslint-plugin-next':
-        specifier: 15.6.0-canary.49
+        specifier: 15.6.0-canary.50
         version: link:../eslint-plugin-next
       '@rushstack/eslint-patch':
         specifier: ^1.10.3
@@ -972,7 +972,7 @@ importers:
   packages/next:
     dependencies:
       '@next/env':
-        specifier: 15.6.0-canary.49
+        specifier: 15.6.0-canary.50
         version: link:../next-env
       '@swc/helpers':
         specifier: 0.5.15
@@ -1097,19 +1097,19 @@ importers:
         specifier: 1.2.0
         version: 1.2.0
       '@next/font':
-        specifier: 15.6.0-canary.49
+        specifier: 15.6.0-canary.50
         version: link:../font
       '@next/polyfill-module':
-        specifier: 15.6.0-canary.49
+        specifier: 15.6.0-canary.50
         version: link:../next-polyfill-module
       '@next/polyfill-nomodule':
-        specifier: 15.6.0-canary.49
+        specifier: 15.6.0-canary.50
         version: link:../next-polyfill-nomodule
       '@next/react-refresh-utils':
-        specifier: 15.6.0-canary.49
+        specifier: 15.6.0-canary.50
         version: link:../react-refresh-utils
       '@next/swc':
-        specifier: 15.6.0-canary.49
+        specifier: 15.6.0-canary.50
         version: link:../next-swc
       '@opentelemetry/api':
         specifier: 1.6.0
@@ -1800,7 +1800,7 @@ importers:
         version: 1.0.20
     devDependencies:
       next:
-        specifier: 15.6.0-canary.49
+        specifier: 15.6.0-canary.50
         version: link:../next
       outdent:
         specifier: 0.8.0"
vercel/next.js,75b1ceff2fb29d78f7a8566124a877bc2b7386c2,Steven,2025-10-07T16:03:51Z,"fix(cache-tags): add `/index` to implicit tags and adjust `revalidatePath()` (#84586)

This fixes an issue where the tag was `/` but the build output was
`/index` (and vice-versa) meaning you couldn't use `revalidatePath()` in
some cases because the tag didn't match.

---------

Co-authored-by: JJ Kasper <jj@jjsweb.site>",packages/next/src/server/lib/implicit-tags.test.ts,83,0,83,"@@ -0,0 +1,83 @@
+import type { OpaqueFallbackRouteParams } from '../request/fallback-params'
+import { getImplicitTags } from './implicit-tags'
+
+describe('getImplicitTags()', () => {
+  it.each<{
+    page: string
+    url: { pathname: string; search: string }
+    fallbackRouteParams: null | OpaqueFallbackRouteParams
+    expectedTags: string[]
+  }>([
+    {
+      page: '/',
+      url: { pathname: '/', search: '' },
+      fallbackRouteParams: null,
+      expectedTags: ['_N_T_/layout', '_N_T_/', '_N_T_/index'],
+    },
+    {
+      page: '',
+      url: { pathname: '/', search: '' },
+      fallbackRouteParams: null,
+      expectedTags: ['_N_T_/layout', '_N_T_/', '_N_T_/index'],
+    },
+    {
+      page: '/',
+      url: { pathname: '', search: '' },
+      fallbackRouteParams: null,
+      expectedTags: ['_N_T_/layout'],
+    },
+    {
+      page: '/page',
+      url: { pathname: '', search: '' },
+      fallbackRouteParams: null,
+      expectedTags: ['_N_T_/layout', '_N_T_/page'],
+    },
+    {
+      page: '/page',
+      url: { pathname: '/', search: '' },
+      fallbackRouteParams: null,
+      expectedTags: ['_N_T_/layout', '_N_T_/page', '_N_T_/', '_N_T_/index'],
+    },
+    {
+      page: '/page',
+      url: { pathname: '/page', search: '' },
+      fallbackRouteParams: null,
+      expectedTags: ['_N_T_/layout', '_N_T_/page'],
+    },
+    {
+      page: '/index',
+      url: { pathname: '/', search: '' },
+      fallbackRouteParams: null,
+      expectedTags: [
+        '_N_T_/layout',
+        '_N_T_/index/layout',
+        '_N_T_/',
+        '_N_T_/index',
+      ],
+    },
+    {
+      page: '/hello',
+      url: { pathname: '/hello', search: '' },
+      fallbackRouteParams: null,
+      expectedTags: ['_N_T_/layout', '_N_T_/hello/layout', '_N_T_/hello'],
+    },
+    {
+      page: '/foo/bar/baz',
+      url: { pathname: '/foo/bar/baz', search: '' },
+      fallbackRouteParams: null,
+      expectedTags: [
+        '_N_T_/layout',
+        '_N_T_/foo/layout',
+        '_N_T_/foo/bar/layout',
+        '_N_T_/foo/bar/baz/layout',
+        '_N_T_/foo/bar/baz',
+      ],
+    },
+  ])(
+    'for page $page with url $url and $fallback',
+    async ({ page, url, fallbackRouteParams, expectedTags }) => {
+      const result = await getImplicitTags(page, url, fallbackRouteParams)
+      expect(result.tags).toEqual(expectedTags)
+    }
+  )
+})"
vercel/next.js,75b1ceff2fb29d78f7a8566124a877bc2b7386c2,Steven,2025-10-07T16:03:51Z,"fix(cache-tags): add `/index` to implicit tags and adjust `revalidatePath()` (#84586)

This fixes an issue where the tag was `/` but the build output was
`/index` (and vice-versa) meaning you couldn't use `revalidatePath()` in
some cases because the tag didn't match.

---------

Co-authored-by: JJ Kasper <jj@jjsweb.site>",packages/next/src/server/lib/implicit-tags.ts,14,5,19,"@@ -79,13 +79,13 @@ export async function getImplicitTags(
   },
   fallbackRouteParams: null | OpaqueFallbackRouteParams
 ): Promise<ImplicitTags> {
-  const tags: string[] = []
+  const tags = new Set<string>()
 
   // Add the derived tags from the page.
   const derivedTags = getDerivedTags(page)
   for (let tag of derivedTags) {
     tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${tag}`
-    tags.push(tag)
+    tags.add(tag)
   }
 
   // Add the tags from the pathname. If the route has unknown params, we don't
@@ -95,11 +95,20 @@ export async function getImplicitTags(
     (!fallbackRouteParams || fallbackRouteParams.size === 0)
   ) {
     const tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${url.pathname}`
-    tags.push(tag)
+    tags.add(tag)
   }
 
+  if (tags.has(`${NEXT_CACHE_IMPLICIT_TAG_ID}/`)) {
+    tags.add(`${NEXT_CACHE_IMPLICIT_TAG_ID}/index`)
+  }
+
+  if (tags.has(`${NEXT_CACHE_IMPLICIT_TAG_ID}/index`)) {
+    tags.add(`${NEXT_CACHE_IMPLICIT_TAG_ID}/`)
+  }
+
+  const tagsArray = Array.from(tags)
   return {
-    tags,
-    expirationsByCacheKind: createTagsExpirationsByCacheKind(tags),
+    tags: tagsArray,
+    expirationsByCacheKind: createTagsExpirationsByCacheKind(tagsArray),
   }
 }"
vercel/next.js,75b1ceff2fb29d78f7a8566124a877bc2b7386c2,Steven,2025-10-07T16:03:51Z,"fix(cache-tags): add `/index` to implicit tags and adjust `revalidatePath()` (#84586)

This fixes an issue where the tag was `/` but the build output was
`/index` (and vice-versa) meaning you couldn't use `revalidatePath()` in
some cases because the tag didn't match.

---------

Co-authored-by: JJ Kasper <jj@jjsweb.site>",packages/next/src/server/web/spec-extension/revalidate.ts,18,4,22,"@@ -37,7 +37,7 @@ export function unstable_expirePath(
     return
   }
 
-  let normalizedPath = `${NEXT_CACHE_IMPLICIT_TAG_ID}${originalPath}`
+  let normalizedPath = `${NEXT_CACHE_IMPLICIT_TAG_ID}${originalPath || '/'}`
 
   if (type) {
     normalizedPath += `${normalizedPath.endsWith('/') ? '' : '/'}${type}`
@@ -46,7 +46,13 @@ export function unstable_expirePath(
       `Warning: a dynamic page path ""${originalPath}"" was passed to ""expirePath"", but the ""type"" parameter is missing. This has no effect by default, see more info here https://nextjs.org/docs/app/api-reference/functions/unstable_expirePath`
     )
   }
-  return revalidate([normalizedPath], `unstable_expirePath ${originalPath}`)
+  const tags = [normalizedPath]
+  if (normalizedPath === `${NEXT_CACHE_IMPLICIT_TAG_ID}/`) {
+    tags.push(`${NEXT_CACHE_IMPLICIT_TAG_ID}/index`)
+  } else if (normalizedPath === `${NEXT_CACHE_IMPLICIT_TAG_ID}/index`) {
+    tags.push(`${NEXT_CACHE_IMPLICIT_TAG_ID}/`)
+  }
+  return revalidate(tags, `unstable_expirePath ${originalPath}`)
 }
 
 /**
@@ -71,7 +77,7 @@ export function revalidatePath(originalPath: string, type?: 'layout' | 'page') {
     return
   }
 
-  let normalizedPath = `${NEXT_CACHE_IMPLICIT_TAG_ID}${originalPath}`
+  let normalizedPath = `${NEXT_CACHE_IMPLICIT_TAG_ID}${originalPath || '/'}`
 
   if (type) {
     normalizedPath += `${normalizedPath.endsWith('/') ? '' : '/'}${type}`
@@ -80,7 +86,15 @@ export function revalidatePath(originalPath: string, type?: 'layout' | 'page') {
       `Warning: a dynamic page path ""${originalPath}"" was passed to ""revalidatePath"", but the ""type"" parameter is missing. This has no effect by default, see more info here https://nextjs.org/docs/app/api-reference/functions/revalidatePath`
     )
   }
-  return revalidate([normalizedPath], `revalidatePath ${originalPath}`)
+
+  const tags = [normalizedPath]
+  if (normalizedPath === `${NEXT_CACHE_IMPLICIT_TAG_ID}/`) {
+    tags.push(`${NEXT_CACHE_IMPLICIT_TAG_ID}/index`)
+  } else if (normalizedPath === `${NEXT_CACHE_IMPLICIT_TAG_ID}/index`) {
+    tags.push(`${NEXT_CACHE_IMPLICIT_TAG_ID}/`)
+  }
+
+  return revalidate(tags, `revalidatePath ${originalPath}`)
 }
 
 function revalidate(tags: string[], expression: string) {"
vercel/next.js,75b1ceff2fb29d78f7a8566124a877bc2b7386c2,Steven,2025-10-07T16:03:51Z,"fix(cache-tags): add `/index` to implicit tags and adjust `revalidatePath()` (#84586)

This fixes an issue where the tag was `/` but the build output was
`/index` (and vice-versa) meaning you couldn't use `revalidatePath()` in
some cases because the tag didn't match.

---------

Co-authored-by: JJ Kasper <jj@jjsweb.site>",test/e2e/app-dir/use-cache-custom-handler/use-cache-custom-handler.test.ts,2,2,4,"@@ -28,7 +28,7 @@ describe('use-cache-custom-handler', () => {
     expect(cliOutput).toContain('ModernCustomCacheHandler::refreshTags')
 
     expect(next.cliOutput.slice(outputIndex)).toMatch(
-      /ModernCustomCacheHandler::get \[""(development|[A-Za-z0-9_-]{21})"",""([0-9a-f]{2})+"",\[\]\] \[ '_N_T_\/layout', '_N_T_\/page', '_N_T_\/' \]/
+      /ModernCustomCacheHandler::get \[""(development|[A-Za-z0-9_-]{21})"",""([0-9a-f]{2})+"",\[\]\] \[ '_N_T_\/layout', '_N_T_\/page', '_N_T_\/', '_N_T_\/index' \]/
     )
 
     expect(next.cliOutput.slice(outputIndex)).toMatch(
@@ -52,7 +52,7 @@ describe('use-cache-custom-handler', () => {
     // to compare the cache entries timestamp with the expiration of the
     // implicit tags.
     expect(next.cliOutput.slice(outputIndex)).toContain(
-      `ModernCustomCacheHandler::getExpiration [""_N_T_/layout"",""_N_T_/page"",""_N_T_/""]`
+      `ModernCustomCacheHandler::getExpiration [""_N_T_/layout"",""_N_T_/page"",""_N_T_/"",""_N_T_/index""]`
     )
 
     // Because we use a low `revalidate` value for the ""use cache"" function, new"
vercel/next.js,316c06295ca33cd8c340a64722cf9019b980efbf,Hendrik Liebau,2025-10-07T14:59:00Z,"[dev] Define request ID for RSC requests on the client (#84605)

Previously, we defined a request ID for RSC requests on the server. The
request ID is used to tag debug information sent via WebSocket to the
client, which then routes those chunks to the debug channel associated
with this ID.

However, this meant that the client had to await the server response to
retrieve the request ID from the response headers, before we could pass
the response (and the debug channel) to React.

For #84580, we want to pass the response promise directly to React, to
accurately show timing information about the request in the React
DevTools. To achieve this, we now define the request ID on the client,
and send it to the server via a request header. This means that the
client can create the debug channel immediately, without waiting for the
server response.

closes NAR-426",packages/next/errors.json,2,1,3,"@@ -851,5 +851,6 @@
   ""850"": ""metadataBase is not a valid URL: %s"",
   ""851"": ""Pass either `webpack` or `turbopack`, not both."",
   ""852"": ""Only custom servers can pass `webpack`, `turbo`, or `turbopack`."",
-  ""853"": ""Turbopack build failed""
+  ""853"": ""Turbopack build failed"",
+  ""854"": ""Expected a %s request header.""
 }"
vercel/next.js,316c06295ca33cd8c340a64722cf9019b980efbf,Hendrik Liebau,2025-10-07T14:59:00Z,"[dev] Define request ID for RSC requests on the client (#84605)

Previously, we defined a request ID for RSC requests on the server. The
request ID is used to tag debug information sent via WebSocket to the
client, which then routes those chunks to the debug channel associated
with this ID.

However, this meant that the client had to await the server response to
retrieve the request ID from the response headers, before we could pass
the response (and the debug channel) to React.

For #84580, we want to pass the response promise directly to React, to
accurately show timing information about the request in the React
DevTools. To achieve this, we now define the request ID on the client,
and send it to the server via a request header. This means that the
client can create the debug channel immediately, without waiting for the
server response.

closes NAR-426",packages/next/src/client/components/router-reducer/fetch-server-response.ts,16,5,21,"@@ -21,6 +21,7 @@ import {
   NEXT_DID_POSTPONE_HEADER,
   NEXT_ROUTER_STALE_TIME_HEADER,
   NEXT_HTML_REQUEST_ID_HEADER,
+  NEXT_REQUEST_ID_HEADER,
 } from '../app-router-headers'
 import { callServer } from '../../app-call-server'
 import { findSourceMapURL } from '../../app-find-source-map-url'
@@ -77,6 +78,7 @@ export type RequestHeaders = {
   // A header that is only added in test mode to assert on fetch priority
   'Next-Test-Fetch-Priority'?: RequestInit['priority']
   [NEXT_HTML_REQUEST_ID_HEADER]?: string // dev-only
+  [NEXT_REQUEST_ID_HEADER]?: string // dev-only
 }
 
 function doMpaNavigation(url: string): FetchServerResponseResult {
@@ -230,7 +232,7 @@ export async function fetchServerResponse(
       : res.body
     const response = await (createFromNextReadableStream(
       flightStream,
-      res.headers
+      headers
     ) as Promise<NavigationFlightResponse>)
 
     if (getAppBuildId() !== response.b) {
@@ -299,8 +301,17 @@ export async function createFetch(
     headers['x-deployment-id'] = process.env.NEXT_DEPLOYMENT_ID
   }
 
-  if (process.env.NODE_ENV !== 'production' && self.__next_r) {
-    headers[NEXT_HTML_REQUEST_ID_HEADER] = self.__next_r
+  if (process.env.NODE_ENV !== 'production') {
+    if (self.__next_r) {
+      headers[NEXT_HTML_REQUEST_ID_HEADER] = self.__next_r
+    }
+
+    // Create a new request ID for the server action request. The server uses
+    // this to tag debug information sent via WebSocket to the client, which
+    // then routes those chunks to the debug channel associated with this ID.
+    headers[NEXT_REQUEST_ID_HEADER] = crypto
+      .getRandomValues(new Uint32Array(1))[0]
+      .toString(16)
   }
 
   const fetchOptions: RequestInit = {
@@ -404,12 +415,12 @@ export async function createFetch(
 
 export function createFromNextReadableStream(
   flightStream: ReadableStream<Uint8Array>,
-  responseHeaders: Headers
+  requestHeaders: RequestHeaders
 ): Promise<unknown> {
   return createFromReadableStream(flightStream, {
     callServer,
     findSourceMapURL,
-    debugChannel: createDebugChannel && createDebugChannel(responseHeaders),
+    debugChannel: createDebugChannel && createDebugChannel(requestHeaders),
   })
 }
 "
vercel/next.js,316c06295ca33cd8c340a64722cf9019b980efbf,Hendrik Liebau,2025-10-07T14:59:00Z,"[dev] Define request ID for RSC requests on the client (#84605)

Previously, we defined a request ID for RSC requests on the server. The
request ID is used to tag debug information sent via WebSocket to the
client, which then routes those chunks to the debug channel associated
with this ID.

However, this meant that the client had to await the server response to
retrieve the request ID from the response headers, before we could pass
the response (and the debug channel) to React.

For #84580, we want to pass the response promise directly to React, to
accurately show timing information about the request in the React
DevTools. To achieve this, we now define the request ID on the client,
and send it to the server via a request header. This means that the
client can create the debug channel immediately, without waiting for the
server response.

closes NAR-426",packages/next/src/client/components/router-reducer/reducers/server-action-reducer.ts,13,3,16,"@@ -12,6 +12,7 @@ import {
   NEXT_ROUTER_STATE_TREE_HEADER,
   NEXT_URL,
   RSC_CONTENT_TYPE_HEADER,
+  NEXT_REQUEST_ID_HEADER,
 } from '../../app-router-headers'
 import { UnrecognizedActionError } from '../../unrecognized-action-error'
 
@@ -119,8 +120,17 @@ async function fetchServerAction(
     headers[NEXT_URL] = nextUrl
   }
 
-  if (process.env.NODE_ENV !== 'production' && self.__next_r) {
-    headers[NEXT_HTML_REQUEST_ID_HEADER] = self.__next_r
+  if (process.env.NODE_ENV !== 'production') {
+    if (self.__next_r) {
+      headers[NEXT_HTML_REQUEST_ID_HEADER] = self.__next_r
+    }
+
+    // Create a new request ID for the server action request. The server uses
+    // this to tag debug information sent via WebSocket to the client, which
+    // then routes those chunks to the debug channel associated with this ID.
+    headers[NEXT_REQUEST_ID_HEADER] = crypto
+      .getRandomValues(new Uint32Array(1))[0]
+      .toString(16)
   }
 
   const res = await fetch(state.canonicalUrl, { method: 'POST', headers, body })
@@ -198,7 +208,7 @@ async function fetchServerAction(
         callServer,
         findSourceMapURL,
         temporaryReferences,
-        debugChannel: createDebugChannel && createDebugChannel(res.headers),
+        debugChannel: createDebugChannel && createDebugChannel(headers),
       }
     )
 "
vercel/next.js,316c06295ca33cd8c340a64722cf9019b980efbf,Hendrik Liebau,2025-10-07T14:59:00Z,"[dev] Define request ID for RSC requests on the client (#84605)

Previously, we defined a request ID for RSC requests on the server. The
request ID is used to tag debug information sent via WebSocket to the
client, which then routes those chunks to the debug channel associated
with this ID.

However, this meant that the client had to await the server response to
retrieve the request ID from the response headers, before we could pass
the response (and the debug channel) to React.

For #84580, we want to pass the response promise directly to React, to
accurately show timing information about the request in the React
DevTools. To achieve this, we now define the request ID on the client,
and send it to the server via a request header. This means that the
client can create the debug channel immediately, without waiting for the
server response.

closes NAR-426",packages/next/src/client/components/segment-cache-impl/cache.ts,4,4,8,"@@ -1432,7 +1432,7 @@ export async function fetchRouteOnCacheMiss(
       )
       const serverData = await (createFromNextReadableStream(
         prefetchStream,
-        response.headers
+        headers
       ) as Promise<RootTreePrefetch>)
       if (serverData.buildId !== getAppBuildId()) {
         // The server build does not match the client. Treat as a 404. During
@@ -1484,7 +1484,7 @@ export async function fetchRouteOnCacheMiss(
       )
       const serverData = await (createFromNextReadableStream(
         prefetchStream,
-        response.headers
+        headers
       ) as Promise<NavigationFlightResponse>)
       if (serverData.b !== getAppBuildId()) {
         // The server build does not match the client. Treat as a 404. During
@@ -1630,7 +1630,7 @@ export async function fetchSegmentOnCacheMiss(
     )
     const serverData = await (createFromNextReadableStream(
       prefetchStream,
-      response.headers
+      headers
     ) as Promise<SegmentPrefetch>)
     if (serverData.buildId !== getAppBuildId()) {
       // The server build does not match the client. Treat as a 404. During
@@ -1750,7 +1750,7 @@ export async function fetchSegmentPrefetchesUsingDynamicRequest(
     )
     const serverData = await (createFromNextReadableStream(
       prefetchStream,
-      response.headers
+      headers
     ) as Promise<NavigationFlightResponse>)
 
     const isResponsePartial ="
vercel/next.js,316c06295ca33cd8c340a64722cf9019b980efbf,Hendrik Liebau,2025-10-07T14:59:00Z,"[dev] Define request ID for RSC requests on the client (#84605)

Previously, we defined a request ID for RSC requests on the server. The
request ID is used to tag debug information sent via WebSocket to the
client, which then routes those chunks to the debug channel associated
with this ID.

However, this meant that the client had to await the server response to
retrieve the request ID from the response headers, before we could pass
the response (and the debug channel) to React.

For #84580, we want to pass the response promise directly to React, to
accurately show timing information about the request in the React
DevTools. To achieve this, we now define the request ID on the client,
and send it to the server via a request header. This means that the
client can create the debug channel immediately, without waiting for the
server response.

closes NAR-426",packages/next/src/client/dev/debug-channel.ts,6,4,10,"@@ -23,18 +23,20 @@ export function getOrCreateDebugChannelReadableWriterPair(
   return pair
 }
 
-export function createDebugChannel(responseHeaders: Headers | undefined): {
+export function createDebugChannel(
+  requestHeaders: Record<string, string> | undefined
+): {
   writable?: WritableStream
   readable?: ReadableStream
 } {
   let requestId: string | undefined
 
-  if (responseHeaders) {
-    requestId = responseHeaders.get(NEXT_REQUEST_ID_HEADER) ?? undefined
+  if (requestHeaders) {
+    requestId = requestHeaders[NEXT_REQUEST_ID_HEADER] ?? undefined
 
     if (!requestId) {
       throw new InvariantError(
-        `Expected a ${JSON.stringify(NEXT_REQUEST_ID_HEADER)} response header.`
+        `Expected a ${JSON.stringify(NEXT_REQUEST_ID_HEADER)} request header.`
       )
     }
   } else {"
vercel/next.js,316c06295ca33cd8c340a64722cf9019b980efbf,Hendrik Liebau,2025-10-07T14:59:00Z,"[dev] Define request ID for RSC requests on the client (#84605)

Previously, we defined a request ID for RSC requests on the server. The
request ID is used to tag debug information sent via WebSocket to the
client, which then routes those chunks to the debug channel associated
with this ID.

However, this meant that the client had to await the server response to
retrieve the request ID from the response headers, before we could pass
the response (and the debug channel) to React.

For #84580, we want to pass the response promise directly to React, to
accurately show timing information about the request in the React
DevTools. To achieve this, we now define the request ID on the client,
and send it to the server via a request header. This means that the
client can create the debug channel immediately, without waiting for the
server response.

closes NAR-426",packages/next/src/server/app-render/app-render.tsx,47,21,68,"@@ -287,6 +287,7 @@ interface ParsedRequestHeaders {
   readonly isRSCRequest: boolean
   readonly nonce: string | undefined
   readonly previouslyRevalidatedTags: string[]
+  readonly requestId: string | undefined
   readonly htmlRequestId: string | undefined
 }
 
@@ -332,10 +333,25 @@ function parseRequestHeaders(
     options.previewModeId
   )
 
-  const htmlRequestId =
-    typeof headers[NEXT_HTML_REQUEST_ID_HEADER] === 'string'
-      ? headers[NEXT_HTML_REQUEST_ID_HEADER]
-      : undefined
+  let requestId: string | undefined
+  let htmlRequestId: string | undefined
+
+  if (process.env.NODE_ENV !== 'production') {
+    // The request IDs are only used in development mode to send debug
+    // information to the matching client (identified by the HTML request ID
+    // that was sent to the client with the HTML document) for the current
+    // request (identified by the request ID, as defined by the client).
+
+    requestId =
+      typeof headers[NEXT_REQUEST_ID_HEADER] === 'string'
+        ? headers[NEXT_REQUEST_ID_HEADER]
+        : undefined
+
+    htmlRequestId =
+      typeof headers[NEXT_HTML_REQUEST_ID_HEADER] === 'string'
+        ? headers[NEXT_HTML_REQUEST_ID_HEADER]
+        : undefined
+  }
 
   return {
     flightRouterState,
@@ -347,6 +363,7 @@ function parseRequestHeaders(
     isDevWarmupRequest,
     nonce,
     previouslyRevalidatedTags,
+    requestId,
     htmlRequestId,
   }
 }
@@ -1632,22 +1649,7 @@ async function renderToHTMLOrFlightImpl(
   const { isStaticGeneration } = workStore
 
   let requestId: string
-
-  if (isStaticGeneration) {
-    requestId = Buffer.from(
-      await crypto.subtle.digest('SHA-1', Buffer.from(req.url))
-    ).toString('hex')
-  } else if (process.env.NEXT_RUNTIME === 'edge') {
-    requestId = crypto.randomUUID()
-  } else {
-    requestId = (
-      require('next/dist/compiled/nanoid') as typeof import('next/dist/compiled/nanoid')
-    ).nanoid()
-  }
-
-  if (process.env.NODE_ENV !== 'production') {
-    res.setHeader(NEXT_REQUEST_ID_HEADER, requestId)
-  }
+  let htmlRequestId: string
 
   const {
     flightRouterState,
@@ -1657,9 +1659,33 @@ async function renderToHTMLOrFlightImpl(
     isDevWarmupRequest,
     isHmrRefresh,
     nonce,
-    htmlRequestId = requestId,
   } = parsedRequestHeaders
 
+  if (parsedRequestHeaders.requestId) {
+    // If the client has provided a request ID (in development mode), we use it.
+    requestId = parsedRequestHeaders.requestId
+  } else {
+    // Otherwise we generate a new request ID.
+    if (isStaticGeneration) {
+      requestId = Buffer.from(
+        await crypto.subtle.digest('SHA-1', Buffer.from(req.url))
+      ).toString('hex')
+    } else if (process.env.NEXT_RUNTIME === 'edge') {
+      requestId = crypto.randomUUID()
+    } else {
+      requestId = (
+        require('next/dist/compiled/nanoid') as typeof import('next/dist/compiled/nanoid')
+      ).nanoid()
+    }
+  }
+
+  // If the client has provided an HTML request ID, we use it to associate the
+  // request with the HTML document from which it originated, which is used to
+  // send debug information to the associated WebSocket client. Otherwise, this
+  // is the request for the HTML document, so we use the request ID also as the
+  // HTML request ID.
+  htmlRequestId = parsedRequestHeaders.htmlRequestId || requestId
+
   /**
    * Dynamic parameters. E.g. when you visit `/dashboard/vercel` which is rendered by `/dashboard/[slug]` the value will be {""slug"": ""vercel""}.
    */"
vercel/next.js,b5eba8ff916464232004fc914570365f9110296b,Josh Story,2025-10-07T14:16:07Z,"[Cache Components] Schedule work on timeouts (#84344)

Previously we used the immediate queue to schedule the consecutive tasks
that would prerender and abort and page prerender. This works fine but
since React does not consider immediates as IO for async work tracking
it means we can't use it for scheduling more advanced cases like
static->runtime->dynamic where the IO that unblocks in runtime phase can
be picked up.

While React could change to include immediates as IO the argument here
is that it isn't really IO since it is immediate work while timeouts
generally have to schedule something to fire later with timeout zero
being a sort of special case where later === now.

So instead we are going to move to scheduling our consecutive tasks
using timeout as well that way we can align the Next.js and React
heuristic for identifying IO and make certain kinds of debugging easier
to implement.",packages/next/src/server/app-render/app-render-prerender-utils.ts,11,11,22,"@@ -2,7 +2,7 @@ import { InvariantError } from '../../shared/lib/invariant-error'
 
 /**
  * This is a utility function to make scheduling sequential tasks that run back to back easier.
- * We schedule on the same queue (setImmediate) at the same time to ensure no other events can sneak in between.
+ * We schedule on the same queue (setTimeout) at the same time to ensure no other events can sneak in between.
  */
 export function prerenderAndAbortInSequentialTasks<R>(
   prerender: () => Promise<R>,
@@ -15,18 +15,18 @@ export function prerenderAndAbortInSequentialTasks<R>(
   } else {
     return new Promise((resolve, reject) => {
       let pendingResult: Promise<R>
-      setImmediate(() => {
+      setTimeout(() => {
         try {
           pendingResult = prerender()
           pendingResult.catch(() => {})
         } catch (err) {
           reject(err)
         }
-      })
-      setImmediate(() => {
+      }, 0)
+      setTimeout(() => {
         abort()
         resolve(pendingResult)
-      })
+      }, 0)
     })
   }
 }
@@ -47,21 +47,21 @@ export function prerenderAndAbortInSequentialTasksWithStages<R>(
   } else {
     return new Promise((resolve, reject) => {
       let pendingResult: Promise<R>
-      setImmediate(() => {
+      setTimeout(() => {
         try {
           pendingResult = prerender()
           pendingResult.catch(() => {})
         } catch (err) {
           reject(err)
         }
-      })
-      setImmediate(() => {
+      }, 0)
+      setTimeout(() => {
         advanceStage()
-      })
-      setImmediate(() => {
+      }, 0)
+      setTimeout(() => {
         abort()
         resolve(pendingResult)
-      })
+      }, 0)
     })
   }
 }"
vercel/next.js,b5eba8ff916464232004fc914570365f9110296b,Josh Story,2025-10-07T14:16:07Z,"[Cache Components] Schedule work on timeouts (#84344)

Previously we used the immediate queue to schedule the consecutive tasks
that would prerender and abort and page prerender. This works fine but
since React does not consider immediates as IO for async work tracking
it means we can't use it for scheduling more advanced cases like
static->runtime->dynamic where the IO that unblocks in runtime phase can
be picked up.

While React could change to include immediates as IO the argument here
is that it isn't really IO since it is immediate work while timeouts
generally have to schedule something to fire later with timeout zero
being a sort of special case where later === now.

So instead we are going to move to scheduling our consecutive tasks
using timeout as well that way we can align the Next.js and React
heuristic for identifying IO and make certain kinds of debugging easier
to implement.",packages/next/src/server/app-render/app-render-render-utils.ts,5,5,10,"@@ -2,7 +2,7 @@ import { InvariantError } from '../../shared/lib/invariant-error'
 
 /**
  * This is a utility function to make scheduling sequential tasks that run back to back easier.
- * We schedule on the same queue (setImmediate) at the same time to ensure no other events can sneak in between.
+ * We schedule on the same queue (setTimeout) at the same time to ensure no other events can sneak in between.
  */
 export function scheduleInSequentialTasks<R>(
   render: () => R | Promise<R>,
@@ -15,17 +15,17 @@ export function scheduleInSequentialTasks<R>(
   } else {
     return new Promise((resolve, reject) => {
       let pendingResult: R | Promise<R>
-      setImmediate(() => {
+      setTimeout(() => {
         try {
           pendingResult = render()
         } catch (err) {
           reject(err)
         }
-      })
-      setImmediate(() => {
+      }, 0)
+      setTimeout(() => {
         followup()
         resolve(pendingResult)
-      })
+      }, 0)
     })
   }
 }"
vercel/next.js,b5eba8ff916464232004fc914570365f9110296b,Josh Story,2025-10-07T14:16:07Z,"[Cache Components] Schedule work on timeouts (#84344)

Previously we used the immediate queue to schedule the consecutive tasks
that would prerender and abort and page prerender. This works fine but
since React does not consider immediates as IO for async work tracking
it means we can't use it for scheduling more advanced cases like
static->runtime->dynamic where the IO that unblocks in runtime phase can
be picked up.

While React could change to include immediates as IO the argument here
is that it isn't really IO since it is immediate work while timeouts
generally have to schedule something to fire later with timeout zero
being a sort of special case where later === now.

So instead we are going to move to scheduling our consecutive tasks
using timeout as well that way we can align the Next.js and React
heuristic for identifying IO and make certain kinds of debugging easier
to implement.",packages/next/src/server/lib/patch-fetch.ts,14,2,16,"@@ -27,7 +27,6 @@ import {
   type ServerComponentsHmrCache,
   type SetIncrementalFetchCacheContext,
 } from '../response-cache'
-import { waitAtLeastOneReactRenderTask } from '../../lib/scheduler'
 import { cloneResponse } from './clone-response'
 import type { IncrementalCache } from './incremental-cache'
 
@@ -911,7 +910,7 @@ export function createPatchedFetcher(
                   // make sure we still exclude them from prerenders if
                   // cacheComponents is on so we introduce an artificial task boundary
                   // here.
-                  await waitAtLeastOneReactRenderTask()
+                  await getTimeoutBoundary()
                   break
                 case 'prerender-ppr':
                 case 'prerender-legacy':
@@ -1191,3 +1190,16 @@ export function patchFetch(options: PatchableModule) {
   // Set the global fetch to the patched fetch.
   globalThis.fetch = createPatchedFetcher(original, options)
 }
+
+let currentTimeoutBoundary: null | Promise<void> = null
+function getTimeoutBoundary() {
+  if (!currentTimeoutBoundary) {
+    currentTimeoutBoundary = new Promise((r) => {
+      setTimeout(() => {
+        currentTimeoutBoundary = null
+        r()
+      }, 0)
+    })
+  }
+  return currentTimeoutBoundary
+}"
vercel/next.js,b5eba8ff916464232004fc914570365f9110296b,Josh Story,2025-10-07T14:16:07Z,"[Cache Components] Schedule work on timeouts (#84344)

Previously we used the immediate queue to schedule the consecutive tasks
that would prerender and abort and page prerender. This works fine but
since React does not consider immediates as IO for async work tracking
it means we can't use it for scheduling more advanced cases like
static->runtime->dynamic where the IO that unblocks in runtime phase can
be picked up.

While React could change to include immediates as IO the argument here
is that it isn't really IO since it is immediate work while timeouts
generally have to schedule something to fire later with timeout zero
being a sort of special case where later === now.

So instead we are going to move to scheduling our consecutive tasks
using timeout as well that way we can align the Next.js and React
heuristic for identifying IO and make certain kinds of debugging easier
to implement.",test/development/app-dir/cache-components-dev-fallback-validation/cache-components-dev-fallback-validation.test.ts,72,72,144,"@@ -55,11 +55,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/partial/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31) @ Page
-       > 1 | export default async function Page(props: {
-           |                               ^"",
+         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26) @ Page
+       > 6 |       Top: {(await props.params).top}, Bottom: {(await props.params).bottom}
+           |                          ^"",
          ""stack"": [
-           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31)"",
+           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -70,11 +70,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/partial/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31) @ Page
-       > 1 | export default async function Page(props: {
-           |                               ^"",
+         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26) @ Page
+       > 6 |       Top: {(await props.params).top}, Bottom: {(await props.params).bottom}
+           |                          ^"",
          ""stack"": [
-           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31)"",
+           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -88,11 +88,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/partial/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31) @ Page
-       > 1 | export default async function Page(props: {
-           |                               ^"",
+         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26) @ Page
+       > 6 |       Top: {(await props.params).top}, Bottom: {(await props.params).bottom}
+           |                          ^"",
          ""stack"": [
-           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31)"",
+           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -103,11 +103,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/partial/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31) @ Page
-       > 1 | export default async function Page(props: {
-           |                               ^"",
+         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26) @ Page
+       > 6 |       Top: {(await props.params).top}, Bottom: {(await props.params).bottom}
+           |                          ^"",
          ""stack"": [
-           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31)"",
+           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -121,11 +121,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/partial/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31) @ Page
-       > 1 | export default async function Page(props: {
-           |                               ^"",
+         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26) @ Page
+       > 6 |       Top: {(await props.params).top}, Bottom: {(await props.params).bottom}
+           |                          ^"",
          ""stack"": [
-           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31)"",
+           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -136,11 +136,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/partial/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31) @ Page
-       > 1 | export default async function Page(props: {
-           |                               ^"",
+         ""source"": ""app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26) @ Page
+       > 6 |       Top: {(await props.params).top}, Bottom: {(await props.params).bottom}
+           |                          ^"",
          ""stack"": [
-           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (1:31)"",
+           ""Page app/partial/[top]/unwrapped/[bottom]/page.tsx (6:26)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -158,11 +158,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/wrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/wrapped/layout.tsx (3:31) @ Layout
-       > 3 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/wrapped/layout.tsx (10:3) @ Layout
+       > 10 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/wrapped/layout.tsx (3:31)"",
+           ""Layout app/none/[top]/wrapped/layout.tsx (10:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -173,11 +173,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/wrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/wrapped/layout.tsx (3:31) @ Layout
-       > 3 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/wrapped/layout.tsx (10:3) @ Layout
+       > 10 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/wrapped/layout.tsx (3:31)"",
+           ""Layout app/none/[top]/wrapped/layout.tsx (10:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -191,11 +191,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/wrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/wrapped/layout.tsx (3:31) @ Layout
-       > 3 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/wrapped/layout.tsx (10:3) @ Layout
+       > 10 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/wrapped/layout.tsx (3:31)"",
+           ""Layout app/none/[top]/wrapped/layout.tsx (10:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -206,11 +206,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/wrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/wrapped/layout.tsx (3:31) @ Layout
-       > 3 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/wrapped/layout.tsx (10:3) @ Layout
+       > 10 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/wrapped/layout.tsx (3:31)"",
+           ""Layout app/none/[top]/wrapped/layout.tsx (10:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -224,11 +224,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/wrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/wrapped/layout.tsx (3:31) @ Layout
-       > 3 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/wrapped/layout.tsx (10:3) @ Layout
+       > 10 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/wrapped/layout.tsx (3:31)"",
+           ""Layout app/none/[top]/wrapped/layout.tsx (10:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -239,11 +239,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/wrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/wrapped/layout.tsx (3:31) @ Layout
-       > 3 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/wrapped/layout.tsx (10:3) @ Layout
+       > 10 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/wrapped/layout.tsx (3:31)"",
+           ""Layout app/none/[top]/wrapped/layout.tsx (10:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -257,11 +257,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/unwrapped/layout.tsx (1:31) @ Layout
-       > 1 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/unwrapped/layout.tsx (8:3) @ Layout
+       >  8 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/unwrapped/layout.tsx (1:31)"",
+           ""Layout app/none/[top]/unwrapped/layout.tsx (8:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -272,11 +272,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/unwrapped/layout.tsx (1:31) @ Layout
-       > 1 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/unwrapped/layout.tsx (8:3) @ Layout
+       >  8 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/unwrapped/layout.tsx (1:31)"",
+           ""Layout app/none/[top]/unwrapped/layout.tsx (8:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -290,11 +290,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/unwrapped/layout.tsx (1:31) @ Layout
-       > 1 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/unwrapped/layout.tsx (8:3) @ Layout
+       >  8 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/unwrapped/layout.tsx (1:31)"",
+           ""Layout app/none/[top]/unwrapped/layout.tsx (8:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -305,11 +305,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/unwrapped/layout.tsx (1:31) @ Layout
-       > 1 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/unwrapped/layout.tsx (8:3) @ Layout
+       >  8 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/unwrapped/layout.tsx (1:31)"",
+           ""Layout app/none/[top]/unwrapped/layout.tsx (8:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -323,11 +323,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/unwrapped/layout.tsx (1:31) @ Layout
-       > 1 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/unwrapped/layout.tsx (8:3) @ Layout
+       >  8 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/unwrapped/layout.tsx (1:31)"",
+           ""Layout app/none/[top]/unwrapped/layout.tsx (8:3)"",
            ""LogSafely <anonymous>"",
          ],
        }
@@ -338,11 +338,11 @@ describe('Cache Components Fallback Validation', () => {
          ""description"": ""Route ""/none/[top]/unwrapped/[bottom]"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
          ""environmentLabel"": ""Server"",
          ""label"": ""Console Error"",
-         ""source"": ""app/none/[top]/unwrapped/layout.tsx (1:31) @ Layout
-       > 1 | export default async function Layout({
-           |                               ^"",
+         ""source"": ""app/none/[top]/unwrapped/layout.tsx (8:3) @ Layout
+       >  8 |   await params
+            |   ^"",
          ""stack"": [
-           ""Layout app/none/[top]/unwrapped/layout.tsx (1:31)"",
+           ""Layout app/none/[top]/unwrapped/layout.tsx (8:3)"",
            ""LogSafely <anonymous>"",
          ],
        }"
vercel/next.js,b5eba8ff916464232004fc914570365f9110296b,Josh Story,2025-10-07T14:16:07Z,"[Cache Components] Schedule work on timeouts (#84344)

Previously we used the immediate queue to schedule the consecutive tasks
that would prerender and abort and page prerender. This works fine but
since React does not consider immediates as IO for async work tracking
it means we can't use it for scheduling more advanced cases like
static->runtime->dynamic where the IO that unblocks in runtime phase can
be picked up.

While React could change to include immediates as IO the argument here
is that it isn't really IO since it is immediate work while timeouts
generally have to schedule something to fire later with timeout zero
being a sort of special case where later === now.

So instead we are going to move to scheduling our consecutive tasks
using timeout as well that way we can align the Next.js and React
heuristic for identifying IO and make certain kinds of debugging easier
to implement.",test/e2e/app-dir/cache-components-errors/cache-components-errors.test.ts,10,32,42,"@@ -159,11 +159,11 @@ describe('Cache Components Errors', () => {
              ""description"": ""Route ""/dynamic-metadata-error-route"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
              ""environmentLabel"": ""Server"",
              ""label"": ""Console Error"",
-             ""source"": ""app/dynamic-metadata-error-route/page.tsx (21:9) @ Dynamic
-           > 21 |   await new Promise((r) => setTimeout(r))
-                |         ^"",
+             ""source"": ""app/dynamic-metadata-error-route/page.tsx (20:16) @ Dynamic
+           > 20 | async function Dynamic() {
+                |                ^"",
              ""stack"": [
-               ""Dynamic app/dynamic-metadata-error-route/page.tsx (21:9)"",
+               ""Dynamic app/dynamic-metadata-error-route/page.tsx (20:16)"",
                ""Page app/dynamic-metadata-error-route/page.tsx (15:7)"",
                ""LogSafely <anonymous>"",
              ],
@@ -3081,35 +3081,13 @@ describe('Cache Components Errors', () => {
             )
 
             if (isTurbopack) {
-              await expect(browser).toDisplayCollapsedRedbox(`
-               {
-                 ""description"": ""Route ""/use-cache-private-without-suspense"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
-                 ""environmentLabel"": ""Server"",
-                 ""label"": ""Console Error"",
-                 ""source"": ""app/use-cache-private-without-suspense/page.tsx (10:7) @ Page
-               > 10 |       <Private />
-                    |       ^"",
-                 ""stack"": [
-                   ""Page app/use-cache-private-without-suspense/page.tsx (10:7)"",
-                   ""LogSafely <anonymous>"",
-                 ],
-               }
-              `)
+              await expect(browser).toDisplayCollapsedRedbox(
+                `""Redbox did not open.""`
+              )
             } else {
-              await expect(browser).toDisplayCollapsedRedbox(`
-               {
-                 ""description"": ""Route ""/use-cache-private-without-suspense"": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a ""use cache"" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense"",
-                 ""environmentLabel"": ""Server"",
-                 ""label"": ""Console Error"",
-                 ""source"": ""app/use-cache-private-without-suspense/page.tsx (10:7) @ Page
-               > 10 |       <Private />
-                    |       ^"",
-                 ""stack"": [
-                   ""Page app/use-cache-private-without-suspense/page.tsx (10:7)"",
-                   ""LogSafely <anonymous>"",
-                 ],
-               }
-              `)
+              await expect(browser).toDisplayCollapsedRedbox(
+                `""Redbox did not open.""`
+              )
             }
           })
         } else {"
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,lerna.json,1,1,2,"@@ -16,5 +16,5 @@
       ""registry"": ""https://registry.npmjs.org/""
     }
   },
-  ""version"": ""15.6.0-canary.48""
+  ""version"": ""15.6.0-canary.49""
 }"
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/create-next-app/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""create-next-app"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/eslint-config-next/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""eslint-config-next"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""description"": ""ESLint configuration used by Next.js."",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
@@ -10,7 +10,7 @@
   },
   ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"",
   ""dependencies"": {
-    ""@next/eslint-plugin-next"": ""15.6.0-canary.48"",
+    ""@next/eslint-plugin-next"": ""15.6.0-canary.49"",
     ""@rushstack/eslint-patch"": ""^1.10.3"",
     ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"",
     ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/eslint-plugin-internal/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/eslint-plugin-internal"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""description"": ""ESLint plugin for working on Next.js."",
   ""exports"": {
     ""."": ""./src/eslint-plugin-internal.js"""
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/eslint-plugin-next/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/eslint-plugin-next"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""description"": ""ESLint plugin for Next.js."",
   ""main"": ""dist/index.js"",
   ""types"": ""dist/index.d.ts"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/font/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/font"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/font"""
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next-bundle-analyzer/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/bundle-analyzer"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""main"": ""index.js"",
   ""types"": ""index.d.ts"",
   ""license"": ""MIT"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next-codemod/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/codemod"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""license"": ""MIT"",
   ""repository"": {
     ""type"": ""git"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next-env/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/env"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next-mdx/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/mdx"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
   ""repository"": {"
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next-plugin-storybook/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/plugin-storybook"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-plugin-storybook"""
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next-polyfill-module/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-module"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+, Firefox 60+, Chrome 61+, Safari 10.1+)"",
   ""main"": ""dist/polyfill-module.js"",
   ""license"": ""MIT"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next-polyfill-nomodule/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-nomodule"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""description"": ""A polyfill for non-dead, nomodule browsers."",
   ""main"": ""dist/polyfill-nomodule.js"",
   ""license"": ""MIT"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next-rspack/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next-rspack"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-rspack"""
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next-swc/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/swc"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""private"": true,
   ""files"": [
     ""native/"""
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/next/package.json,7,7,14,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""description"": ""The React Framework"",
   ""main"": ""./dist/server/next.js"",
   ""license"": ""MIT"",
@@ -100,7 +100,7 @@
     ]
   },
   ""dependencies"": {
-    ""@next/env"": ""15.6.0-canary.48"",
+    ""@next/env"": ""15.6.0-canary.49"",
     ""@swc/helpers"": ""0.5.15"",
     ""caniuse-lite"": ""^1.0.30001579"",
     ""postcss"": ""8.4.31"",
@@ -164,11 +164,11 @@
     ""@modelcontextprotocol/sdk"": ""1.18.1"",
     ""@mswjs/interceptors"": ""0.23.0"",
     ""@napi-rs/triples"": ""1.2.0"",
-    ""@next/font"": ""15.6.0-canary.48"",
-    ""@next/polyfill-module"": ""15.6.0-canary.48"",
-    ""@next/polyfill-nomodule"": ""15.6.0-canary.48"",
-    ""@next/react-refresh-utils"": ""15.6.0-canary.48"",
-    ""@next/swc"": ""15.6.0-canary.48"",
+    ""@next/font"": ""15.6.0-canary.49"",
+    ""@next/polyfill-module"": ""15.6.0-canary.49"",
+    ""@next/polyfill-nomodule"": ""15.6.0-canary.49"",
+    ""@next/react-refresh-utils"": ""15.6.0-canary.49"",
+    ""@next/swc"": ""15.6.0-canary.49"",
     ""@opentelemetry/api"": ""1.6.0"",
     ""@playwright/test"": ""1.51.1"",
     ""@rspack/core"": ""1.5.0"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/react-refresh-utils/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/react-refresh-utils"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""description"": ""An experimental package providing utilities for React Refresh."",
   ""repository"": {
     ""url"": ""vercel/next.js"","
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,packages/third-parties/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/third-parties"",
-  ""version"": ""15.6.0-canary.48"",
+  ""version"": ""15.6.0-canary.49"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/third-parties""
@@ -26,7 +26,7 @@
     ""third-party-capital"": ""1.0.20""
   },
   ""devDependencies"": {
-    ""next"": ""15.6.0-canary.48"",
+    ""next"": ""15.6.0-canary.49"",
     ""outdent"": ""0.8.0"",
     ""prettier"": ""2.5.1"",
     ""typescript"": ""5.9.2"""
vercel/next.js,52a26cdb0ccb8c27d1c484aa22c46d2c9332890e,nextjs-bot,2025-10-07T14:05:33Z,v15.6.0-canary.49,pnpm-lock.yaml,8,8,16,"@@ -899,7 +899,7 @@ importers:
   packages/eslint-config-next:
     dependencies:
       '@next/eslint-plugin-next':
-        specifier: 15.6.0-canary.48
+        specifier: 15.6.0-canary.49
         version: link:../eslint-plugin-next
       '@rushstack/eslint-patch':
         specifier: ^1.10.3
@@ -972,7 +972,7 @@ importers:
   packages/next:
     dependencies:
       '@next/env':
-        specifier: 15.6.0-canary.48
+        specifier: 15.6.0-canary.49
         version: link:../next-env
       '@swc/helpers':
         specifier: 0.5.15
@@ -1097,19 +1097,19 @@ importers:
         specifier: 1.2.0
         version: 1.2.0
       '@next/font':
-        specifier: 15.6.0-canary.48
+        specifier: 15.6.0-canary.49
         version: link:../font
       '@next/polyfill-module':
-        specifier: 15.6.0-canary.48
+        specifier: 15.6.0-canary.49
         version: link:../next-polyfill-module
       '@next/polyfill-nomodule':
-        specifier: 15.6.0-canary.48
+        specifier: 15.6.0-canary.49
         version: link:../next-polyfill-nomodule
       '@next/react-refresh-utils':
-        specifier: 15.6.0-canary.48
+        specifier: 15.6.0-canary.49
         version: link:../react-refresh-utils
       '@next/swc':
-        specifier: 15.6.0-canary.48
+        specifier: 15.6.0-canary.49
         version: link:../next-swc
       '@opentelemetry/api':
         specifier: 1.6.0
@@ -1800,7 +1800,7 @@ importers:
         version: 1.0.20
     devDependencies:
       next:
-        specifier: 15.6.0-canary.48
+        specifier: 15.6.0-canary.49
         version: link:../next
       outdent:
         specifier: 0.8.0"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-binary/webpack-loader-binary.test.ts,3,1,4,"@@ -1,11 +1,13 @@
 import { nextTestSetup } from 'e2e-utils'
 
 describe('webpack-loader-ts-transform', () => {
-  const { next } = nextTestSetup({
+  const { next, skipped } = nextTestSetup({
     files: __dirname,
     skipDeployment: true,
   })
 
+  if (skipped) return
+
   it('should allow passing binary assets to and from a Webpack loader', async () => {
     const $ = await next.render$('/')
     expect($('#text').text()).toBe('Got a buffer of 18 bytes')"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-conditions/webpack-loader-conditions.test.ts,3,1,4,"@@ -4,11 +4,13 @@ import { nextTestSetup } from 'e2e-utils'
 ;(process.env.IS_TURBOPACK_TEST ? describe : describe.skip)(
   'webpack-loader-conditions',
   () => {
-    const { next } = nextTestSetup({
+    const { next, skipped } = nextTestSetup({
       files: __dirname,
       skipDeployment: true,
     })
 
+    if (skipped) return
+
     it('should render correctly on server site', async () => {
       const res = await next.fetch('/')
       const html = (await res.text()).replaceAll(/<!-- -->/g, '')"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-fs/webpack-loader-fs.test.ts,3,1,4,"@@ -1,11 +1,13 @@
 import { nextTestSetup } from 'e2e-utils'
 
 describe('webpack-loader-fs', () => {
-  const { next } = nextTestSetup({
+  const { next, skipped } = nextTestSetup({
     files: __dirname,
     skipDeployment: true,
   })
 
+  if (skipped) return
+
   it('should allow reading the input FS', async () => {
     const $ = await next.render$('/')
     expect($('#test').text()).toBe("
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-resolve/app/file.test-file.ts,1,0,1,"@@ -0,0 +1 @@
+export default 'wrong'"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-resolve/app/layout.tsx,7,0,7,"@@ -0,0 +1,7 @@
+export default function Root({ children }: { children: React.ReactNode }) {
+  return (
+    <html>
+      <body>{children}</body>
+    </html>
+  )
+}"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-resolve/app/page.js,11,0,11,"@@ -0,0 +1,11 @@
+import absolute from './file.test-file?absolute=data1'
+import relative from './file.test-file?relative=data2'
+
+export default function Page() {
+  return (
+    <div>
+      <p id=""absolute"">{absolute}</p>
+      <p id=""relative"">{relative}</p>
+    </div>
+  )
+}"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-resolve/data1.js,1,0,1,"@@ -0,0 +1 @@
+export default 'abc'"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-resolve/data2.js,1,0,1,"@@ -0,0 +1 @@
+export default 'xyz'"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-resolve/next.config.js,19,0,19,"@@ -0,0 +1,19 @@
+/**
+ * @type {import('next').NextConfig}
+ */
+const nextConfig = {
+  turbopack: {
+    rules: {
+      '*.test-file.ts': [require.resolve('./test-file-loader.js')],
+    },
+  },
+  webpack(config) {
+    config.module.rules.push({
+      test: /\.test-file\.ts/,
+      use: require.resolve('./test-file-loader.js'),
+    })
+    return config
+  },
+}
+
+module.exports = nextConfig"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-resolve/test-file-loader.js,21,0,21,"@@ -0,0 +1,21 @@
+const fs = require('fs')
+const path = require('path')
+
+module.exports = async function () {
+  let params = new URLSearchParams(this.resourceQuery.slice(1))
+  let file
+  if (params.has('absolute')) {
+    file = path.join(__dirname, params.get('absolute'))
+  } else if (params.has('relative')) {
+    file = './' + params.get('relative')
+  } else {
+    this.callback(null, ""throw new Error('no file specified')"")
+    return
+  }
+
+  const resolve = this.getResolve({})
+  const result = await resolve(__dirname, file)
+  this.addDependency(result)
+
+  return fs.readFileSync(result, 'utf8')
+}"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-resolve/webpack-loader-resolve.test.ts,19,0,19,"@@ -0,0 +1,19 @@
+import { nextTestSetup } from 'e2e-utils'
+
+describe('webpack-loader-resolve', () => {
+  const { next, skipped } = nextTestSetup({
+    files: __dirname,
+    // This test is skipped because it's only expected to run in turbopack, which isn't enabled for builds
+    skipDeployment: true,
+  })
+
+  if (skipped) {
+    return
+  }
+
+  it('should support resolving absolute path via loader getResolve', async () => {
+    const $ = await next.render$('/')
+    expect($('#absolute').text()).toBe('abc')
+    expect($('#relative').text()).toBe('xyz')
+  })
+})"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-resource-query/turbopack-loader-resource-query.test.ts,3,2,5,"@@ -1,12 +1,13 @@
 import { nextTestSetup } from 'e2e-utils'
 
 describe('webpack-loader-resource-query', () => {
-  const { next } = nextTestSetup({
+  const { next, skipped } = nextTestSetup({
     files: __dirname,
     skipDeployment: true,
   })
 
-  // Recommended for tests that check HTML. Cheerio is a HTML parser that has a jQuery like API.
+  if (skipped) return
+
   it('should pass query to loader', async () => {
     await next.render$('/')
 "
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",test/e2e/app-dir/webpack-loader-ts-transform/webpack-loader-ts-transform.test.ts,2,5,7,"@@ -1,16 +1,13 @@
 import { nextTestSetup } from 'e2e-utils'
 
 describe('webpack-loader-ts-transform', () => {
-  const { next, isTurbopack, skipped } = nextTestSetup({
+  const { next, skipped } = nextTestSetup({
     files: __dirname,
     // This test is skipped because it's only expected to run in turbopack, which isn't enabled for builds
     skipDeployment: true,
   })
 
-  if (!isTurbopack || skipped) {
-    it('should only run the test in turbopack', () => {})
-    return
-  }
+  if (skipped) return
 
   it('should accept Typescript returned from Webpack loaders', async () => {
     const $ = await next.render$('/')"
vercel/next.js,32acdc03e808e92f0f76e52125979d24798e9a16,Niklas Mischkulnig,2025-10-07T14:02:01Z,"Turbopack: absolute requests in webpack loader (#84575)

Recent sass-loader versions use this heavily: `this.getResolver()(..., ""/Users/foo/..../bar.scss"")`",turbopack/crates/turbopack-node/js/src/transforms/webpack-loaders.ts,17,0,17,"@@ -16,6 +16,7 @@ import {
   type TransformIpc,
 } from './transforms'
 import fs from 'fs'
+import path from 'path'
 
 export type IpcInfoMessage =
   | {
@@ -301,6 +302,22 @@ const transform = (
               request: string,
               callback?: (err?: Error, result?: string) => void
             ) => {
+              if (path.isAbsolute(request)) {
+                // Relativize absolute requests. Turbopack disallow them in JS code, but here it's
+                // generated programatically and there is a smaller problem of
+                // non-cacheable/non-portable builds.
+                request = path.relative(lookupPath, request)
+
+                // On Windows, the path might be still absolute if it's on a different drive. Just
+                // let the resolver throw the error in that case.
+                if (
+                  !path.isAbsolute(request) &&
+                  request.split(path.sep)[0] !== '..'
+                ) {
+                  request = './' + request
+                }
+              }
+
               const promise = ipc
                 .sendRequest({
                   type: 'resolve',"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",crates/next-core/src/next_config.rs,0,6,6,"@@ -864,7 +864,6 @@ pub struct ExperimentalConfig {
     trust_host_header: Option<bool>,
 
     url_imports: Option<serde_json::Value>,
-    view_transition: Option<bool>,
     /// This option is to enable running the Webpack build in a worker thread
     /// (doesn't apply to Turbopack).
     webpack_build_worker: Option<bool>,
@@ -1722,11 +1721,6 @@ impl NextConfig {
         Vc::cell(self.experimental.taint.unwrap_or(false))
     }
 
-    #[turbo_tasks::function]
-    pub fn enable_view_transition(&self) -> Vc<bool> {
-        Vc::cell(self.experimental.view_transition.unwrap_or(false))
-    }
-
     #[turbo_tasks::function]
     pub fn enable_cache_components(&self) -> Vc<bool> {
         Vc::cell(self.experimental.cache_components.unwrap_or(false))"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",crates/next-core/src/next_import_map.rs,8,14,22,"@@ -127,14 +127,13 @@ pub async fn get_next_client_import_map(
     match &ty {
         ClientContextType::Pages { .. } => {}
         ClientContextType::App { app_dir } => {
-            let react_flavor = if *next_config.enable_ppr().await?
-                || *next_config.enable_taint().await?
-                || *next_config.enable_view_transition().await?
-            {
-                ""-experimental""
-            } else {
-                """"
-            };
+            // Keep in sync with file:///./../../../packages/next/src/lib/needs-experimental-react.ts
+            let react_flavor =
+                if *next_config.enable_ppr().await? || *next_config.enable_taint().await? {
+                    ""-experimental""
+                } else {
+                    """"
+                };
 
             import_map.insert_exact_alias(
                 rcstr!(""react""),
@@ -833,12 +832,7 @@ async fn apply_vendored_react_aliases_server(
 ) -> Result<()> {
     let ppr = *next_config.enable_ppr().await?;
     let taint = *next_config.enable_taint().await?;
-    let view_transition = *next_config.enable_view_transition().await?;
-    let react_channel = if ppr || taint || view_transition {
-        ""-experimental""
-    } else {
-        """"
-    };
+    let react_channel = if ppr || taint { ""-experimental"" } else { """" };
     let react_condition = if ty.should_use_react_server_condition() {
         ""server""
     } else {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",docs/01-app/03-api-reference/05-config/01-next-config-js/viewTransition.mdx,6,7,13,"@@ -4,7 +4,7 @@ description: Enable ViewTransition API from React in App Router
 version: experimental
 ---
 
-`viewTransition` is an experimental flag that enables the new experimental [View Transitions API](https://developer.mozilla.org/en-US/docs/Web/API/View_Transition_API) in React. This API allows you to leverage the native View Transitions browser API to create seamless transitions between UI states.
+`viewTransition` is an experimental flag that enables the new [View Transitions API](https://developer.mozilla.org/en-US/docs/Web/API/View_Transition_API) in React. This API allows you to leverage the native View Transitions browser API to create seamless transitions between UI states.
 
 To enable this feature, you need to set the `viewTransition` property to `true` in your `next.config.js` file.
 
@@ -19,19 +19,18 @@ const nextConfig = {
 module.exports = nextConfig
 ```
 
-> Important Notice: This feature is not developed or maintained by the Next.js team — it is an experimental API from the React team. It is still in **early stages** and **not recommended for production use**. The implementation is still being iterated on, and its behavior may change in future React releases.
-> Enabling this feature requires understanding the experimental nature of the API. To fully grasp its behavior, refer to the [React pull request](https://github.com/facebook/react/pull/31975) and related discussions.
+> Important Notice: The `<ViewTransition>` Component is already available in React's Canary release channel.
+> `experimental.viewTransition` is only required to enable deeper integration with Next.js features e.g. automatically
+> [adding Transition types](https://react.dev/reference/react/addTransitionType) for navigations. Next.js specific transition types are not implemented yet.
 
 ## Usage
 
-Once enabled, you can import the `ViewTransition` component from React in your application:
+You can import the [`<ViewTransition>` Component](https://react.dev/reference/react/ViewTransition) from React in your application:
 
 ```jsx
-import { unstable_ViewTransition as ViewTransition } from 'react'
+import { ViewTransition } from 'react'
 ```
 
-However, documentation and examples are currently limited, and you will need to refer directly to React’s source code and discussions to understand how this works.
-
 ### Live Demo
 
 Check out our [Next.js View Transition Demo](https://view-transition-example.vercel.app) to see this feature in action."
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",package.json,20,20,40,"@@ -163,8 +163,8 @@
     ""@types/jest"": ""29.5.5"",
     ""@types/node"": ""20.17.6"",
     ""@types/node-fetch"": ""2.6.1"",
-    ""@types/react"": ""19.1.16"",
-    ""@types/react-dom"": ""19.1.10"",
+    ""@types/react"": ""19.2.2"",
+    ""@types/react-dom"": ""19.2.1"",
     ""@types/relay-runtime"": ""14.1.13"",
     ""@types/string-hash"": ""1.1.1"",
     ""@types/trusted-types"": ""2.0.3"",
@@ -199,7 +199,7 @@
     ""eslint-plugin-jsdoc"": ""48.0.4"",
     ""eslint-plugin-mdx"": ""3.1.5"",
     ""eslint-plugin-react"": ""7.35.0"",
-    ""eslint-plugin-react-hooks"": ""0.0.0-experimental-c7862584-20251006"",
+    ""eslint-plugin-react-hooks"": ""0.0.0-experimental-a4eb2dfa-20251006"",
     ""eslint-v8"": ""npm:eslint@^8.57.0"",
     ""event-stream"": ""4.0.1"",
     ""execa"": ""2.0.3"",
@@ -259,16 +259,16 @@
     ""pretty-ms"": ""7.0.0"",
     ""random-seed"": ""0.3.0"",
     ""react"": ""19.0.0"",
-    ""react-builtin"": ""npm:react@19.3.0-canary-c7862584-20251006"",
+    ""react-builtin"": ""npm:react@19.3.0-canary-a4eb2dfa-20251006"",
     ""react-dom"": ""19.0.0"",
-    ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-c7862584-20251006"",
-    ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-c7862584-20251006"",
-    ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-c7862584-20251006"",
-    ""react-is-builtin"": ""npm:react-is@19.3.0-canary-c7862584-20251006"",
-    ""react-server-dom-turbopack"": ""19.3.0-canary-c7862584-20251006"",
-    ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-c7862584-20251006"",
-    ""react-server-dom-webpack"": ""19.3.0-canary-c7862584-20251006"",
-    ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-c7862584-20251006"",
+    ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-a4eb2dfa-20251006"",
+    ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-a4eb2dfa-20251006"",
+    ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-a4eb2dfa-20251006"",
+    ""react-is-builtin"": ""npm:react-is@19.3.0-canary-a4eb2dfa-20251006"",
+    ""react-server-dom-turbopack"": ""19.3.0-canary-a4eb2dfa-20251006"",
+    ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-a4eb2dfa-20251006"",
+    ""react-server-dom-webpack"": ""19.3.0-canary-a4eb2dfa-20251006"",
+    ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-a4eb2dfa-20251006"",
     ""react-ssr-prepass"": ""1.0.8"",
     ""react-virtualized"": ""9.22.3"",
     ""relay-compiler"": ""13.0.2"",
@@ -278,8 +278,8 @@
     ""resolve-from"": ""5.0.0"",
     ""sass"": ""1.54.0"",
     ""satori"": ""0.15.2"",
-    ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-c7862584-20251006"",
-    ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-c7862584-20251006"",
+    ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-a4eb2dfa-20251006"",
+    ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-a4eb2dfa-20251006"",
     ""seedrandom"": ""3.0.5"",
     ""semver"": ""7.3.7"",
     ""serve-handler"": ""6.1.6"",
@@ -319,14 +319,14 @@
       ""@babel/parser"": ""7.27.0"",
       ""@babel/types"": ""7.27.0"",
       ""@babel/traverse"": ""7.27.0"",
-      ""@types/react"": ""19.1.16"",
-      ""@types/react-dom"": ""19.1.10"",
+      ""@types/react"": ""19.2.2"",
+      ""@types/react-dom"": ""19.2.1"",
       ""@types/retry"": ""0.12.0"",
       ""jest-snapshot"": ""30.0.0-alpha.6"",
-      ""react"": ""19.3.0-canary-c7862584-20251006"",
-      ""react-dom"": ""19.3.0-canary-c7862584-20251006"",
-      ""react-is"": ""19.3.0-canary-c7862584-20251006"",
-      ""scheduler"": ""0.28.0-canary-c7862584-20251006""
+      ""react"": ""19.3.0-canary-a4eb2dfa-20251006"",
+      ""react-dom"": ""19.3.0-canary-a4eb2dfa-20251006"",
+      ""react-is"": ""19.3.0-canary-a4eb2dfa-20251006"",
+      ""scheduler"": ""0.28.0-canary-a4eb2dfa-20251006""
     },
     ""packageExtensions"": {
       ""eslint-plugin-react-hooks@0.0.0-experimental-6de32a5a-20250822"": {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-client.development.js,7,9,16,"@@ -31872,12 +31872,10 @@
         ? parentHostFiber
         : Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC;
     };
-    FragmentInstance.prototype.experimental_scrollIntoView = function (
-      alignToTop
-    ) {
+    FragmentInstance.prototype.scrollIntoView = function (alignToTop) {
       if (""object"" === typeof alignToTop)
         throw Error(
-          ""FragmentInstance.experimental_scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead.""
+          ""FragmentInstance.scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead.""
         );
       var children = [];
       traverseVisibleHostChildren(
@@ -32342,11 +32340,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -32383,10 +32381,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-experimental-c7862584-20251006"",
+          version: ""19.3.0-experimental-a4eb2dfa-20251006"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
+          reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -32534,7 +32532,7 @@
       listenToAllSupportedEvents(container);
       return new ReactDOMHydrationRoot(initialChildren);
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-client.production.js,6,6,12,"@@ -17674,7 +17674,7 @@ function validateDocumentPositionWithFiberTree(
         fragmentFiber)
       : !1;
 }
-FragmentInstance.prototype.experimental_scrollIntoView = function (alignToTop) {
+FragmentInstance.prototype.scrollIntoView = function (alignToTop) {
   if (""object"" === typeof alignToTop) throw Error(formatProdErrorMessage(566));
   var children = [];
   traverseVisibleHostChildren(
@@ -19570,14 +19570,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2217 = React.version;
 if (
-  ""19.3.0-experimental-c7862584-20251006"" !==
+  ""19.3.0-experimental-a4eb2dfa-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_2217
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2217,
-      ""19.3.0-experimental-c7862584-20251006""
+      ""19.3.0-experimental-a4eb2dfa-20251006""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -19599,10 +19599,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2914 = {
   bundleType: 0,
-  version: ""19.3.0-experimental-c7862584-20251006"",
+  version: ""19.3.0-experimental-a4eb2dfa-20251006"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
+  reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2915 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -19709,4 +19709,4 @@ exports.hydrateRoot = function (container, initialChildren, options) {
   listenToAllSupportedEvents(container);
   return new ReactDOMHydrationRoot(initialChildren);
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-profiling.development.js,7,9,16,"@@ -31924,12 +31924,10 @@
         ? parentHostFiber
         : Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC;
     };
-    FragmentInstance.prototype.experimental_scrollIntoView = function (
-      alignToTop
-    ) {
+    FragmentInstance.prototype.scrollIntoView = function (alignToTop) {
       if (""object"" === typeof alignToTop)
         throw Error(
-          ""FragmentInstance.experimental_scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead.""
+          ""FragmentInstance.scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead.""
         );
       var children = [];
       traverseVisibleHostChildren(
@@ -32394,11 +32392,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -32435,10 +32433,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-experimental-c7862584-20251006"",
+          version: ""19.3.0-experimental-a4eb2dfa-20251006"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
+          reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -32916,7 +32914,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-profiling.profiling.js,6,6,12,"@@ -19711,7 +19711,7 @@ function validateDocumentPositionWithFiberTree(
         fragmentFiber)
       : !1;
 }
-FragmentInstance.prototype.experimental_scrollIntoView = function (alignToTop) {
+FragmentInstance.prototype.scrollIntoView = function (alignToTop) {
   if (""object"" === typeof alignToTop) throw Error(formatProdErrorMessage(566));
   var children = [];
   traverseVisibleHostChildren(
@@ -21624,14 +21624,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2513 = React.version;
 if (
-  ""19.3.0-experimental-c7862584-20251006"" !==
+  ""19.3.0-experimental-a4eb2dfa-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_2513
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2513,
-      ""19.3.0-experimental-c7862584-20251006""
+      ""19.3.0-experimental-a4eb2dfa-20251006""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -21653,10 +21653,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_3223 = {
   bundleType: 0,
-  version: ""19.3.0-experimental-c7862584-20251006"",
+  version: ""19.3.0-experimental-a4eb2dfa-20251006"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
+  reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_3224 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -21924,7 +21924,7 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
 ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
   ""function"" ===
     typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.browser.development.js,1,1,2,"@@ -10544,5 +10544,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.browser.production.js,1,1,2,"@@ -7157,4 +7157,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.node.development.js,1,1,2,"@@ -10544,5 +10544,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.node.production.js,1,1,2,"@@ -7260,4 +7260,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.browser.development.js,3,3,6,"@@ -9537,11 +9537,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react-experimental""),
@@ -11365,5 +11365,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.browser.production.js,3,3,6,"@@ -7828,12 +7828,12 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       formatProdErrorMessage(
         527,
         isomorphicReactPackageVersion,
-        ""19.3.0-experimental-c7862584-20251006""
+        ""19.3.0-experimental-a4eb2dfa-20251006""
       )
     );
 }
@@ -8088,4 +8088,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.bun.production.js,3,3,6,"@@ -7316,13 +7316,13 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
 }
 var isomorphicReactPackageVersion$jscomp$inline_871 = React.version;
 if (
-  ""19.3.0-experimental-c7862584-20251006"" !==
+  ""19.3.0-experimental-a4eb2dfa-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_871
 )
   throw Error(
     'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
       (isomorphicReactPackageVersion$jscomp$inline_871 +
-        ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+        ""\n  - react-dom:  19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -7413,4 +7413,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.edge.development.js,3,3,6,"@@ -9566,11 +9566,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react-experimental""),
@@ -11390,5 +11390,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.edge.production.js,3,3,6,"@@ -7946,11 +7946,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -8204,4 +8204,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.node.development.js,3,3,6,"@@ -9426,11 +9426,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     function createDrainHandler(destination, request) {
@@ -11560,5 +11560,5 @@
         }
       };
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.node.production.js,3,3,6,"@@ -7825,11 +7825,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -8387,4 +8387,4 @@ exports.resumeToPipeableStream = function (children, postponedState, options) {
     }
   };
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-unstable_testing.development.js,7,9,16,"@@ -32193,12 +32193,10 @@
         ? parentHostFiber
         : Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC;
     };
-    FragmentInstance.prototype.experimental_scrollIntoView = function (
-      alignToTop
-    ) {
+    FragmentInstance.prototype.scrollIntoView = function (alignToTop) {
       if (""object"" === typeof alignToTop)
         throw Error(
-          ""FragmentInstance.experimental_scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead.""
+          ""FragmentInstance.scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead.""
         );
       var children = [];
       traverseVisibleHostChildren(
@@ -32663,11 +32661,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -32704,10 +32702,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-experimental-c7862584-20251006"",
+          version: ""19.3.0-experimental-a4eb2dfa-20251006"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
+          reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -33021,5 +33019,5 @@
         }
       };
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-unstable_testing.production.js,6,6,12,"@@ -17946,7 +17946,7 @@ function validateDocumentPositionWithFiberTree(
         fragmentFiber)
       : !1;
 }
-FragmentInstance.prototype.experimental_scrollIntoView = function (alignToTop) {
+FragmentInstance.prototype.scrollIntoView = function (alignToTop) {
   if (""object"" === typeof alignToTop) throw Error(formatProdErrorMessage(566));
   var children = [];
   traverseVisibleHostChildren(
@@ -19886,14 +19886,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2246 = React.version;
 if (
-  ""19.3.0-experimental-c7862584-20251006"" !==
+  ""19.3.0-experimental-a4eb2dfa-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_2246
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2246,
-      ""19.3.0-experimental-c7862584-20251006""
+      ""19.3.0-experimental-a4eb2dfa-20251006""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -19915,10 +19915,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2948 = {
   bundleType: 0,
-  version: ""19.3.0-experimental-c7862584-20251006"",
+  version: ""19.3.0-experimental-a4eb2dfa-20251006"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
+  reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2949 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -20176,4 +20176,4 @@ exports.observeVisibleRects = function (
     }
   };
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.development.js,1,1,2,"@@ -416,7 +416,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.production.js,1,1,2,"@@ -207,4 +207,4 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.react-server.development.js,1,1,2,"@@ -336,5 +336,5 @@
             }))
           : Internals.d.m(href));
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.react-server.production.js,1,1,2,"@@ -149,4 +149,4 @@ exports.preloadModule = function (href, options) {
       });
     } else Internals.d.m(href);
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/package.json,2,2,4,"@@ -72,10 +72,10 @@
     ""./package.json"": ""./package.json""
   },
   ""dependencies"": {
-    ""scheduler"": ""0.0.0-experimental-c7862584-20251006""
+    ""scheduler"": ""0.0.0-experimental-a4eb2dfa-20251006""
   },
   ""peerDependencies"": {
-    ""react"": ""0.0.0-experimental-c7862584-20251006""
+    ""react"": ""0.0.0-experimental-a4eb2dfa-20251006""
   },
   ""browser"": {
     ""./server.js"": ""./server.browser.js"","
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-client.development.js,3068,789,3857,
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-client.production.js,2657,669,3326,
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-profiling.development.js,3067,788,3855,
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-profiling.profiling.js,2879,824,3703,
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.browser.development.js,153,42,195,"@@ -86,6 +86,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -842,7 +844,8 @@
       return parentContext.insertionMode >= HTML_TABLE_MODE ||
         parentContext.insertionMode < HTML_MODE
         ? createFormatContext(HTML_MODE, null, subtreeScope, null)
-        : parentContext.tagScope !== subtreeScope
+        : null !== parentContext.viewTransition ||
+            parentContext.tagScope !== subtreeScope
           ? createFormatContext(
               parentContext.insertionMode,
               parentContext.selectedValue,
@@ -865,7 +868,8 @@
           };
     }
     function getSuspenseFallbackFormatContext(resumableState, parentContext) {
-      parentContext.tagScope & 32 && (resumableState.instructions |= 128);
+      parentContext.tagScope & 32 &&
+        (resumableState.instructions |= NeedUpgradeToViewTransitions);
       return createFormatContext(
         parentContext.insertionMode,
         parentContext.selectedValue,
@@ -886,6 +890,31 @@
         resumableState
       );
     }
+    function makeId(resumableState, treeId, localId) {
+      resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+      0 < localId && (resumableState += ""H"" + localId.toString(32));
+      return resumableState + ""_"";
+    }
+    function pushViewTransitionAttributes(target, formatContext) {
+      formatContext = formatContext.viewTransition;
+      null !== formatContext &&
+        (""auto"" !== formatContext.name &&
+          (pushStringAttribute(
+            target,
+            ""vt-name"",
+            0 === formatContext.nameIdx
+              ? formatContext.name
+              : formatContext.name + ""_"" + formatContext.nameIdx
+          ),
+          formatContext.nameIdx++),
+        pushStringAttribute(target, ""vt-update"", formatContext.update),
+        ""none"" !== formatContext.enter &&
+          pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+        ""none"" !== formatContext.exit &&
+          pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+        ""none"" !== formatContext.share &&
+          pushStringAttribute(target, ""vt-share"", formatContext.share));
+    }
     function pushStyleAttribute(target, style) {
       if (""object"" !== typeof style)
         throw Error(
@@ -1431,7 +1460,7 @@
       checkHtmlStringCoercion(styleText);
       return ("""" + styleText).replace(styleRegex, styleReplacer);
     }
-    function pushSelfClosing(target, props, tag) {
+    function pushSelfClosing(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       for (var propKey in props)
         if (hasOwnProperty.call(props, propKey)) {
@@ -1448,6 +1477,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTagSelfClosing);
       return null;
     }
@@ -1525,7 +1555,7 @@
       target.push(endChunkForTag(""script""));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
+    function pushStartSingletonElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1544,11 +1574,12 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return tag;
     }
-    function pushStartGenericElement(target, props, tag) {
+    function pushStartGenericElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1567,6 +1598,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return ""string"" === typeof tag
@@ -1672,6 +1704,7 @@
                     pushAttribute(target$jscomp$0, propKey, propValue);
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML, children);
           if (""string"" === typeof children) {
@@ -1720,6 +1753,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
           return children$jscomp$0;
@@ -1833,6 +1867,7 @@
           null === value$jscomp$0 &&
             null !== defaultValue &&
             (value$jscomp$0 = defaultValue);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != children$jscomp$2) {
             console.error(
@@ -1960,6 +1995,7 @@
             ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
             : null !== defaultValue$jscomp$0 &&
               pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTagSelfClosing);
           null != formData &&
             formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2026,6 +2062,7 @@
             formTarget$jscomp$0,
             name$jscomp$0
           );
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null != formData$jscomp$0 &&
             formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2123,6 +2160,7 @@
             pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
           null != formTarget$jscomp$1 &&
             pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null !== formActionName &&
             (target$jscomp$0.push('<input type=""hidden""'),
@@ -2159,6 +2197,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           return null;
         case ""object"":
@@ -2204,6 +2243,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
           if (""string"" === typeof children$jscomp$5) {
@@ -2587,20 +2627,32 @@
             var JSCompiler_inline_result$jscomp$8 = pushSelfClosing(
               target$jscomp$0,
               props,
-              ""meta""
+              ""meta"",
+              formatContext
             );
           else
             textEmbedded && target$jscomp$0.push(""\x3c!-- --\x3e""),
               (JSCompiler_inline_result$jscomp$8 = isFallback$jscomp$1
                 ? null
                 : ""string"" === typeof props.charSet
-                  ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+                  ? pushSelfClosing(
+                      renderState.charsetChunks,
+                      props,
+                      ""meta"",
+                      formatContext
+                    )
                   : ""viewport"" === props.name
-                    ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
+                    ? pushSelfClosing(
+                        renderState.viewportChunks,
+                        props,
+                        ""meta"",
+                        formatContext
+                      )
                     : pushSelfClosing(
                         renderState.hoistableChunks,
                         props,
-                        ""meta""
+                        ""meta"",
+                        formatContext
                       ));
           return JSCompiler_inline_result$jscomp$8;
         case ""listing"":
@@ -2628,6 +2680,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != innerHTML$jscomp$7) {
             if (null != children$jscomp$10)
@@ -2746,7 +2799,7 @@
                       promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
             }
           }
-          return pushSelfClosing(target$jscomp$0, props, ""img"");
+          return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
         case ""base"":
         case ""area"":
         case ""br"":
@@ -2758,7 +2811,7 @@
         case ""source"":
         case ""track"":
         case ""wbr"":
-          return pushSelfClosing(target$jscomp$0, props, type);
+          return pushSelfClosing(target$jscomp$0, props, type, formatContext);
         case ""annotation-xml"":
         case ""color-profile"":
         case ""font-face"":
@@ -2778,13 +2831,15 @@
             var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
               preamble.headChunks,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$9;
         case ""body"":
@@ -2797,13 +2852,15 @@
             var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
               preamble$jscomp$0.bodyChunks,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$10;
         case ""html"":
@@ -2816,13 +2873,15 @@
             var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
               preamble$jscomp$1.htmlChunks,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$11;
         default:
@@ -2874,6 +2933,7 @@
                   }
                 }
               }
+            pushViewTransitionAttributes(target$jscomp$0, formatContext);
             target$jscomp$0.push(endOfStartTag);
             pushInnerHTML(
               target$jscomp$0,
@@ -2883,7 +2943,12 @@
             return children$jscomp$11;
           }
       }
-      return pushStartGenericElement(target$jscomp$0, props, type);
+      return pushStartGenericElement(
+        target$jscomp$0,
+        props,
+        type,
+        formatContext
+      );
     }
     function endChunkForTag(tag) {
       var chunk = endTagCache.get(tag);
@@ -3610,6 +3675,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -3739,6 +3806,13 @@
         ),
         (didWarnAboutNoopUpdateForComponent[warningKey] = !0));
     }
+    function getTreeId(context) {
+      var overflow = context.overflow;
+      context = context.id;
+      return (
+        (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow
+      );
+    }
     function pushTreeContext(baseContext, totalChildren, index) {
       var baseIdWithLeadingBit = baseContext.id;
       baseContext = baseContext.overflow;
@@ -4364,6 +4438,8 @@
           return describeBuiltInComponentFrame(""SuspenseList"");
         case REACT_SUSPENSE_TYPE:
           return describeBuiltInComponentFrame(""Suspense"");
+        case REACT_VIEW_TRANSITION_TYPE:
+          return describeBuiltInComponentFrame(""ViewTransition"");
       }
       return """";
     }
@@ -5765,6 +5841,26 @@
             }
             return;
           case REACT_VIEW_TRANSITION_TYPE:
+            var prevContext$jscomp$0 = task.formatContext,
+              prevKeyPath$jscomp$4 = task.keyPath;
+            var resumableState$jscomp$0 = request.resumableState;
+            if (null == props.name || ""auto"" === props.name) {
+              var treeId = getTreeId(task.treeContext);
+              makeId(resumableState$jscomp$0, treeId, 0);
+            }
+            task.formatContext = prevContext$jscomp$0;
+            task.keyPath = keyPath;
+            if (null != props.name && ""auto"" !== props.name)
+              renderNodeDestructive(request, task, props.children, -1);
+            else {
+              var prevTreeContext = task.treeContext;
+              task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+              renderNode(request, task, props.children, -1);
+              task.treeContext = prevTreeContext;
+            }
+            task.formatContext = prevContext$jscomp$0;
+            task.keyPath = prevKeyPath$jscomp$4;
+            return;
           case REACT_SCOPE_TYPE:
             throw Error(
               ""ReactDOMServer does not yet support scope components.""
@@ -5789,8 +5885,8 @@
                   (task.row = _prevRow);
               }
             } else {
-              var prevKeyPath$jscomp$4 = task.keyPath,
-                prevContext$jscomp$0 = task.formatContext,
+              var prevKeyPath$jscomp$5 = task.keyPath,
+                prevContext$jscomp$1 = task.formatContext,
                 prevRow$jscomp$0 = task.row,
                 parentBoundary = task.blockedBoundary,
                 parentPreamble = task.blockedPreamble,
@@ -5850,7 +5946,7 @@
                 task.keyPath = fallbackKeyPath;
                 task.formatContext = getSuspenseFallbackFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.componentStack =
                   replaceSuspenseComponentStackWithSuspenseFallbackStack(
@@ -5875,8 +5971,8 @@
                 } finally {
                   (task.blockedSegment = parentSegment),
                     (task.blockedPreamble = parentPreamble),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0);
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1);
                 }
                 var suspendedPrimaryTask = createRenderTask(
                   request,
@@ -5910,7 +6006,7 @@
                 task.keyPath = keyPath;
                 task.formatContext = getSuspenseContentFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.row = null;
                 contentRootSegment.status = 6;
@@ -5972,8 +6068,8 @@
                     (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0),
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1),
                     (task.row = prevRow$jscomp$0);
                 }
                 var suspendedFallbackTask = createRenderTask(
@@ -6039,7 +6135,7 @@
               var value$jscomp$0 = props.value,
                 children$jscomp$2 = props.children;
               var prevSnapshot = task.context;
-              var prevKeyPath$jscomp$5 = task.keyPath;
+              var prevKeyPath$jscomp$6 = task.keyPath;
               var prevValue = type._currentValue2;
               type._currentValue2 = value$jscomp$0;
               void 0 !== type._currentRenderer2 &&
@@ -6082,7 +6178,7 @@
               var JSCompiler_inline_result$jscomp$0 = (currentActiveSnapshot =
                 prevSnapshot$jscomp$0.parent);
               task.context = JSCompiler_inline_result$jscomp$0;
-              task.keyPath = prevKeyPath$jscomp$5;
+              task.keyPath = prevKeyPath$jscomp$6;
               prevSnapshot !== task.context &&
                 console.error(
                   ""Popping the context provider did not return back to the original snapshot. This is a bug in React.""
@@ -6096,10 +6192,10 @@
                   ""A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.""
                 );
               var newChildren = render(context$jscomp$0._currentValue2),
-                prevKeyPath$jscomp$6 = task.keyPath;
+                prevKeyPath$jscomp$7 = task.keyPath;
               task.keyPath = keyPath;
               renderNodeDestructive(request, task, newChildren, -1);
-              task.keyPath = prevKeyPath$jscomp$6;
+              task.keyPath = prevKeyPath$jscomp$7;
               return;
             case REACT_LAZY_TYPE:
               var Component = callLazyInitInDEV(type);
@@ -7840,7 +7936,10 @@
       request = request.renderState;
       i = boundary.rootSegmentID;
       boundary = boundary.contentState;
-      var requiresStyleInsertion = request.stylesToHoist;
+      var requiresStyleInsertion = request.stylesToHoist,
+        requiresViewTransitions =
+          (completedSegments.instructions & NeedUpgradeToViewTransitions) !==
+          NothingSent;
       request.stylesToHoist = !1;
       destination.push(request.startInlineScript);
       destination.push(endOfStartTag);
@@ -7853,6 +7952,13 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             destination.push(completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            destination.push(
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           (completedSegments.instructions & SentStyleInsertionFunction) ===
           NothingSent
             ? ((completedSegments.instructions |= SentStyleInsertionFunction),
@@ -7862,6 +7968,13 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             destination.push(completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            destination.push(
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           destination.push(completeBoundaryScript1Partial));
       completedSegments = i.toString(16);
       destination.push(request.boundaryPrefix);
@@ -9470,6 +9583,8 @@
       SentStyleInsertionFunction = 8,
       SentCompletedShellId = 32,
       SentMarkShellTime = 64,
+      NeedUpgradeToViewTransitions = 128,
+      SentUpgradeToViewTransitions = 256,
       EXISTS = null,
       PRELOAD_NO_CREDS = [];
     Object.freeze(PRELOAD_NO_CREDS);
@@ -9562,6 +9677,8 @@
       completeSegmentScriptEnd = '"")\x3c/script>',
       completeBoundaryScriptFunctionOnly =
         '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};',
+      completeBoundaryUpgradeToViewTransitionsInstruction =
+        '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);',
       completeBoundaryScript1Partial = '$RC(""',
       completeBoundaryWithStylesScript1FullPartial =
         '$RM=new Map;$RR=function(n,w,p){function u(q){this._p=null;q()}for(var r=new Map,t=document,h,b,e=t.querySelectorAll(""link[data-precedence],style[data-precedence]""),v=[],k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href""),b),r.set(b.dataset.precedence,h=b));e=0;b=[];var l,a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1,m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g,f[m++]);g=a._p=new Promise(function(q,x){a.onload=u.bind(a,q);a.onerror=u.bind(a,x)});$RM.set(d,a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=t.head,c.insertBefore(a,c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null,n,w),$RX.bind(null,n,""CSS failed to load""))};$RR(""',
@@ -9726,20 +9843,14 @@
           return [!1, unsupportedStartTransition];
         },
         useId: function () {
-          var treeId = currentlyRenderingTask.treeContext;
-          var overflow = treeId.overflow;
-          treeId = treeId.id;
-          treeId =
-            (treeId & ~(1 << (32 - clz32(treeId) - 1))).toString(32) + overflow;
-          var resumableState = currentResumableState;
+          var treeId = getTreeId(currentlyRenderingTask.treeContext),
+            resumableState = currentResumableState;
           if (null === resumableState)
             throw Error(
               ""Invalid hook call. Hooks can only be called inside of the body of a function component.""
             );
-          overflow = localIdCounter++;
-          treeId = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
-          0 < overflow && (treeId += ""H"" + overflow.toString(32));
-          return treeId + ""_"";
+          var localId = localIdCounter++;
+          return makeId(resumableState, treeId, localId);
         },
         useSyncExternalStore: function (
           subscribe,
@@ -9874,5 +9985,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-canary-c7862584-20251006"";
+    exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.browser.production.js,476,323,799,"@@ -389,7 +389,8 @@ function getChildFormatContext(parentContext, type, props) {
   }
   return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
     ? createFormatContext(2, null, subtreeScope, null)
-    : parentContext.tagScope !== subtreeScope
+    : null !== parentContext.viewTransition ||
+        parentContext.tagScope !== subtreeScope
       ? createFormatContext(
           parentContext.insertionMode,
           parentContext.selectedValue,
@@ -433,6 +434,31 @@ function getSuspenseContentFormatContext(resumableState, parentContext) {
     resumableState
   );
 }
+function makeId(resumableState, treeId, localId) {
+  resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+  0 < localId && (resumableState += ""H"" + localId.toString(32));
+  return resumableState + ""_"";
+}
+function pushViewTransitionAttributes(target, formatContext) {
+  formatContext = formatContext.viewTransition;
+  null !== formatContext &&
+    (""auto"" !== formatContext.name &&
+      (pushStringAttribute(
+        target,
+        ""vt-name"",
+        0 === formatContext.nameIdx
+          ? formatContext.name
+          : formatContext.name + ""_"" + formatContext.nameIdx
+      ),
+      formatContext.nameIdx++),
+    pushStringAttribute(target, ""vt-update"", formatContext.update),
+    ""none"" !== formatContext.enter &&
+      pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+    ""none"" !== formatContext.exit &&
+      pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+    ""none"" !== formatContext.share &&
+      pushStringAttribute(target, ""vt-share"", formatContext.share));
+}
 var styleNameCache = new Map();
 function pushStyleAttribute(target, style) {
   if (""object"" !== typeof style) throw Error(formatProdErrorMessage(62));
@@ -772,7 +798,7 @@ var styleRegex = /(<\/|<)(s)(tyle)/gi;
 function styleReplacer(match, prefix, s, suffix) {
   return """" + prefix + (""s"" === s ? ""\\73 "" : ""\\53 "") + suffix;
 }
-function pushSelfClosing(target, props, tag) {
+function pushSelfClosing(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   for (var propKey in props)
     if (hasOwnProperty.call(props, propKey)) {
@@ -786,6 +812,7 @@ function pushSelfClosing(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(""/>"");
   return null;
 }
@@ -851,7 +878,7 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag(""script""));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
+function pushStartSingletonElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -870,11 +897,12 @@ function pushStartSingletonElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push("">"");
   pushInnerHTML(target, innerHTML, tag);
   return tag;
 }
-function pushStartGenericElement(target, props, tag) {
+function pushStartGenericElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -893,6 +921,7 @@ function pushStartGenericElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push("">"");
   pushInnerHTML(target, innerHTML, tag);
   return ""string"" === typeof tag
@@ -953,6 +982,7 @@ function pushStartInstance(
                 pushAttribute(target$jscomp$0, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       pushInnerHTML(target$jscomp$0, innerHTML, children);
       if (""string"" === typeof children) {
@@ -991,6 +1021,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
       return children$jscomp$0;
@@ -1078,6 +1109,7 @@ function pushStartInstance(
       null === value$jscomp$0 &&
         null !== defaultValue &&
         (value$jscomp$0 = defaultValue);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       if (null != children$jscomp$2) {
         if (null != value$jscomp$0) throw Error(formatProdErrorMessage(92));
@@ -1167,6 +1199,7 @@ function pushStartInstance(
         ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
         : null !== defaultValue$jscomp$0 &&
           pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(""/>"");
       null != formData &&
         formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1225,6 +1258,7 @@ function pushStartInstance(
         formTarget$jscomp$0,
         name$jscomp$0
       );
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       null != formData$jscomp$0 &&
         formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1310,6 +1344,7 @@ function pushStartInstance(
         pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
       null != formTarget$jscomp$1 &&
         pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       null !== formActionName &&
         (target$jscomp$0.push('<input type=""hidden""'),
@@ -1341,6 +1376,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       return null;
     case ""object"":
@@ -1378,6 +1414,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
       if (""string"" === typeof children$jscomp$5) {
@@ -1649,17 +1686,33 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
           target$jscomp$0,
           props,
-          ""meta""
+          ""meta"",
+          formatContext
         );
       else
         textEmbedded && target$jscomp$0.push(""\x3c!-- --\x3e""),
           (JSCompiler_inline_result$jscomp$7 = isFallback$jscomp$1
             ? null
             : ""string"" === typeof props.charSet
-              ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+              ? pushSelfClosing(
+                  renderState.charsetChunks,
+                  props,
+                  ""meta"",
+                  formatContext
+                )
               : ""viewport"" === props.name
-                ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
-                : pushSelfClosing(renderState.hoistableChunks, props, ""meta""));
+                ? pushSelfClosing(
+                    renderState.viewportChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  )
+                : pushSelfClosing(
+                    renderState.hoistableChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  ));
       return JSCompiler_inline_result$jscomp$7;
     case ""listing"":
     case ""pre"":
@@ -1686,6 +1739,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       if (null != innerHTML$jscomp$7) {
         if (null != children$jscomp$8) throw Error(formatProdErrorMessage(60));
@@ -1797,7 +1851,7 @@ function pushStartInstance(
                   promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
         }
       }
-      return pushSelfClosing(target$jscomp$0, props, ""img"");
+      return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
     case ""base"":
     case ""area"":
     case ""br"":
@@ -1809,7 +1863,7 @@ function pushStartInstance(
     case ""source"":
     case ""track"":
     case ""wbr"":
-      return pushSelfClosing(target$jscomp$0, props, type);
+      return pushSelfClosing(target$jscomp$0, props, type, formatContext);
     case ""annotation-xml"":
     case ""color-profile"":
     case ""font-face"":
@@ -1829,13 +1883,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
           preamble.headChunks,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$9;
     case ""body"":
@@ -1848,13 +1904,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
           preamble$jscomp$0.bodyChunks,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$10;
     case ""html"":
@@ -1867,13 +1925,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
           preamble$jscomp$1.htmlChunks,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$11;
     default:
@@ -1923,12 +1983,13 @@ function pushStartInstance(
               }
             }
           }
+        pushViewTransitionAttributes(target$jscomp$0, formatContext);
         target$jscomp$0.push("">"");
         pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
         return children$jscomp$9;
       }
   }
-  return pushStartGenericElement(target$jscomp$0, props, type);
+  return pushStartGenericElement(target$jscomp$0, props, type, formatContext);
 }
 var endTagCache = new Map();
 function endChunkForTag(tag) {
@@ -2733,16 +2794,16 @@ function createRenderState(resumableState, generateStaticMarkup) {
       ""\x3c/script>""
     ));
   bootstrapScriptContent = idPrefix + ""P:"";
-  var JSCompiler_object_inline_segmentPrefix_1673 = idPrefix + ""S:"";
+  var JSCompiler_object_inline_segmentPrefix_1688 = idPrefix + ""S:"";
   idPrefix += ""B:"";
-  var JSCompiler_object_inline_preconnects_1687 = new Set(),
-    JSCompiler_object_inline_fontPreloads_1688 = new Set(),
-    JSCompiler_object_inline_highImagePreloads_1689 = new Set(),
-    JSCompiler_object_inline_styles_1690 = new Map(),
-    JSCompiler_object_inline_bootstrapScripts_1691 = new Set(),
-    JSCompiler_object_inline_scripts_1692 = new Set(),
-    JSCompiler_object_inline_bulkPreloads_1693 = new Set(),
-    JSCompiler_object_inline_preloads_1694 = {
+  var JSCompiler_object_inline_preconnects_1702 = new Set(),
+    JSCompiler_object_inline_fontPreloads_1703 = new Set(),
+    JSCompiler_object_inline_highImagePreloads_1704 = new Set(),
+    JSCompiler_object_inline_styles_1705 = new Map(),
+    JSCompiler_object_inline_bootstrapScripts_1706 = new Set(),
+    JSCompiler_object_inline_scripts_1707 = new Set(),
+    JSCompiler_object_inline_bulkPreloads_1708 = new Set(),
+    JSCompiler_object_inline_preloads_1709 = {
       images: new Map(),
       stylesheets: new Map(),
       scripts: new Map(),
@@ -2779,7 +2840,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
       scriptConfig.moduleScriptResources[href] = null;
       scriptConfig = [];
       pushLinkImpl(scriptConfig, props);
-      JSCompiler_object_inline_bootstrapScripts_1691.add(scriptConfig);
+      JSCompiler_object_inline_bootstrapScripts_1706.add(scriptConfig);
       bootstrapChunks.push('<script src=""', escapeTextForBrowser(src), '""');
       ""string"" === typeof integrity &&
         bootstrapChunks.push(
@@ -2826,7 +2887,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
         (props.moduleScriptResources[scriptConfig] = null),
         (props = []),
         pushLinkImpl(props, integrity),
-        JSCompiler_object_inline_bootstrapScripts_1691.add(props),
+        JSCompiler_object_inline_bootstrapScripts_1706.add(props),
         bootstrapChunks.push(
           '<script type=""module"" src=""',
           escapeTextForBrowser(i),
@@ -2848,7 +2909,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
         bootstrapChunks.push(' async="""">\x3c/script>');
   return {
     placeholderPrefix: bootstrapScriptContent,
-    segmentPrefix: JSCompiler_object_inline_segmentPrefix_1673,
+    segmentPrefix: JSCompiler_object_inline_segmentPrefix_1688,
     boundaryPrefix: idPrefix,
     startInlineScript: ""<script"",
     startInlineStyle: ""<style"",
@@ -2868,14 +2929,14 @@ function createRenderState(resumableState, generateStaticMarkup) {
     charsetChunks: [],
     viewportChunks: [],
     hoistableChunks: [],
-    preconnects: JSCompiler_object_inline_preconnects_1687,
-    fontPreloads: JSCompiler_object_inline_fontPreloads_1688,
-    highImagePreloads: JSCompiler_object_inline_highImagePreloads_1689,
-    styles: JSCompiler_object_inline_styles_1690,
-    bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1691,
-    scripts: JSCompiler_object_inline_scripts_1692,
-    bulkPreloads: JSCompiler_object_inline_bulkPreloads_1693,
-    preloads: JSCompiler_object_inline_preloads_1694,
+    preconnects: JSCompiler_object_inline_preconnects_1702,
+    fontPreloads: JSCompiler_object_inline_fontPreloads_1703,
+    highImagePreloads: JSCompiler_object_inline_highImagePreloads_1704,
+    styles: JSCompiler_object_inline_styles_1705,
+    bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1706,
+    scripts: JSCompiler_object_inline_scripts_1707,
+    bulkPreloads: JSCompiler_object_inline_bulkPreloads_1708,
+    preloads: JSCompiler_object_inline_preloads_1709,
     nonce: { script: void 0, style: void 0 },
     stylesToHoist: !1,
     generateStaticMarkup: generateStaticMarkup
@@ -2917,6 +2978,8 @@ function getComponentNameFromType(type) {
       return ""SuspenseList"";
     case REACT_ACTIVITY_TYPE:
       return ""Activity"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {
@@ -3018,6 +3081,11 @@ var classComponentUpdater = {
     enqueueForceUpdate: function () {}
   },
   emptyTreeContext = { id: 1, overflow: """" };
+function getTreeId(context) {
+  var overflow = context.overflow;
+  context = context.id;
+  return (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow;
+}
 function pushTreeContext(baseContext, totalChildren, index) {
   var baseIdWithLeadingBit = baseContext.id;
   baseContext = baseContext.overflow;
@@ -3367,21 +3435,11 @@ var HooksDispatcher = {
       return [!1, unsupportedStartTransition];
     },
     useId: function () {
-      var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
-      var overflow = JSCompiler_inline_result.overflow;
-      JSCompiler_inline_result = JSCompiler_inline_result.id;
-      JSCompiler_inline_result =
-        (
-          JSCompiler_inline_result &
-          ~(1 << (32 - clz32(JSCompiler_inline_result) - 1))
-        ).toString(32) + overflow;
-      var resumableState = currentResumableState;
+      var treeId = getTreeId(currentlyRenderingTask.treeContext),
+        resumableState = currentResumableState;
       if (null === resumableState) throw Error(formatProdErrorMessage(404));
-      overflow = localIdCounter++;
-      JSCompiler_inline_result =
-        ""_"" + resumableState.idPrefix + ""R_"" + JSCompiler_inline_result;
-      0 < overflow && (JSCompiler_inline_result += ""H"" + overflow.toString(32));
-      return JSCompiler_inline_result + ""_"";
+      var localId = localIdCounter++;
+      return makeId(resumableState, treeId, localId);
     },
     useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
       if (void 0 === getServerSnapshot)
@@ -3631,6 +3689,8 @@ function describeComponentStackByType(type) {
       return describeBuiltInComponentFrame(""SuspenseList"");
     case REACT_SUSPENSE_TYPE:
       return describeBuiltInComponentFrame(""Suspense"");
+    case REACT_VIEW_TRANSITION_TYPE:
+      return describeBuiltInComponentFrame(""ViewTransition"");
   }
   return """";
 }
@@ -4204,156 +4264,189 @@ function renderElement(request, task, keyPath, type, props, ref) {
           void 0 === newProps[propName$43] &&
             (newProps[propName$43] = defaultProps[propName$43]);
       }
-      props = newProps;
-      newProps = emptyContextObject;
-      defaultProps = type.contextType;
-      ""object"" === typeof defaultProps &&
-        null !== defaultProps &&
-        (newProps = defaultProps._currentValue2);
-      newProps = new type(props, newProps);
-      var initialState = void 0 !== newProps.state ? newProps.state : null;
-      newProps.updater = classComponentUpdater;
-      newProps.props = props;
-      newProps.state = initialState;
-      defaultProps = { queue: [], replace: !1 };
-      newProps._reactInternals = defaultProps;
-      ref = type.contextType;
-      newProps.context =
-        ""object"" === typeof ref && null !== ref
-          ? ref._currentValue2
+      var JSCompiler_inline_result = newProps;
+      var context = emptyContextObject,
+        contextType = type.contextType;
+      ""object"" === typeof contextType &&
+        null !== contextType &&
+        (context = contextType._currentValue2);
+      var JSCompiler_inline_result$jscomp$0 = new type(
+        JSCompiler_inline_result,
+        context
+      );
+      var initialState =
+        void 0 !== JSCompiler_inline_result$jscomp$0.state
+          ? JSCompiler_inline_result$jscomp$0.state
+          : null;
+      JSCompiler_inline_result$jscomp$0.updater = classComponentUpdater;
+      JSCompiler_inline_result$jscomp$0.props = JSCompiler_inline_result;
+      JSCompiler_inline_result$jscomp$0.state = initialState;
+      var internalInstance = { queue: [], replace: !1 };
+      JSCompiler_inline_result$jscomp$0._reactInternals = internalInstance;
+      var contextType$jscomp$0 = type.contextType;
+      JSCompiler_inline_result$jscomp$0.context =
+        ""object"" === typeof contextType$jscomp$0 &&
+        null !== contextType$jscomp$0
+          ? contextType$jscomp$0._currentValue2
           : emptyContextObject;
-      ref = type.getDerivedStateFromProps;
-      ""function"" === typeof ref &&
-        ((ref = ref(props, initialState)),
-        (initialState =
-          null === ref || void 0 === ref
+      var getDerivedStateFromProps = type.getDerivedStateFromProps;
+      if (""function"" === typeof getDerivedStateFromProps) {
+        var partialState = getDerivedStateFromProps(
+          JSCompiler_inline_result,
+          initialState
+        );
+        var JSCompiler_inline_result$jscomp$1 =
+          null === partialState || void 0 === partialState
             ? initialState
-            : assign({}, initialState, ref)),
-        (newProps.state = initialState));
+            : assign({}, initialState, partialState);
+        JSCompiler_inline_result$jscomp$0.state =
+          JSCompiler_inline_result$jscomp$1;
+      }
       if (
         ""function"" !== typeof type.getDerivedStateFromProps &&
-        ""function"" !== typeof newProps.getSnapshotBeforeUpdate &&
-        (""function"" === typeof newProps.UNSAFE_componentWillMount ||
-          ""function"" === typeof newProps.componentWillMount)
-      )
+        ""function"" !==
+          typeof JSCompiler_inline_result$jscomp$0.getSnapshotBeforeUpdate &&
+        (""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount ||
+          ""function"" ===
+            typeof JSCompiler_inline_result$jscomp$0.componentWillMount)
+      ) {
+        var oldState = JSCompiler_inline_result$jscomp$0.state;
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.componentWillMount();
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount();
+        oldState !== JSCompiler_inline_result$jscomp$0.state &&
+          classComponentUpdater.enqueueReplaceState(
+            JSCompiler_inline_result$jscomp$0,
+            JSCompiler_inline_result$jscomp$0.state,
+            null
+          );
         if (
-          ((type = newProps.state),
-          ""function"" === typeof newProps.componentWillMount &&
-            newProps.componentWillMount(),
-          ""function"" === typeof newProps.UNSAFE_componentWillMount &&
-            newProps.UNSAFE_componentWillMount(),
-          type !== newProps.state &&
-            classComponentUpdater.enqueueReplaceState(
-              newProps,
-              newProps.state,
-              null
-            ),
-          null !== defaultProps.queue && 0 < defaultProps.queue.length)
-        )
-          if (
-            ((type = defaultProps.queue),
-            (ref = defaultProps.replace),
-            (defaultProps.queue = null),
-            (defaultProps.replace = !1),
-            ref && 1 === type.length)
-          )
-            newProps.state = type[0];
+          null !== internalInstance.queue &&
+          0 < internalInstance.queue.length
+        ) {
+          var oldQueue = internalInstance.queue,
+            oldReplace = internalInstance.replace;
+          internalInstance.queue = null;
+          internalInstance.replace = !1;
+          if (oldReplace && 1 === oldQueue.length)
+            JSCompiler_inline_result$jscomp$0.state = oldQueue[0];
           else {
-            defaultProps = ref ? type[0] : newProps.state;
-            initialState = !0;
-            for (ref = ref ? 1 : 0; ref < type.length; ref++)
-              (propName$43 = type[ref]),
-                (propName$43 =
-                  ""function"" === typeof propName$43
-                    ? propName$43.call(newProps, defaultProps, props, void 0)
-                    : propName$43),
-                null != propName$43 &&
-                  (initialState
-                    ? ((initialState = !1),
-                      (defaultProps = assign({}, defaultProps, propName$43)))
-                    : assign(defaultProps, propName$43));
-            newProps.state = defaultProps;
+            for (
+              var nextState = oldReplace
+                  ? oldQueue[0]
+                  : JSCompiler_inline_result$jscomp$0.state,
+                dontMutate = !0,
+                i = oldReplace ? 1 : 0;
+              i < oldQueue.length;
+              i++
+            ) {
+              var partial = oldQueue[i],
+                partialState$jscomp$0 =
+                  ""function"" === typeof partial
+                    ? partial.call(
+                        JSCompiler_inline_result$jscomp$0,
+                        nextState,
+                        JSCompiler_inline_result,
+                        void 0
+                      )
+                    : partial;
+              null != partialState$jscomp$0 &&
+                (dontMutate
+                  ? ((dontMutate = !1),
+                    (nextState = assign({}, nextState, partialState$jscomp$0)))
+                  : assign(nextState, partialState$jscomp$0));
+            }
+            JSCompiler_inline_result$jscomp$0.state = nextState;
           }
-        else defaultProps.queue = null;
-      type = newProps.render();
+        } else internalInstance.queue = null;
+      }
+      var nextChildren = JSCompiler_inline_result$jscomp$0.render();
       if (12 === request.status) throw null;
-      props = task.keyPath;
+      var prevKeyPath = task.keyPath;
       task.keyPath = keyPath;
-      renderNodeDestructive(request, task, type, -1);
-      task.keyPath = props;
+      renderNodeDestructive(request, task, nextChildren, -1);
+      task.keyPath = prevKeyPath;
     } else {
-      type = renderWithHooks(request, task, keyPath, type, props, void 0);
+      var value = renderWithHooks(request, task, keyPath, type, props, void 0);
       if (12 === request.status) throw null;
       finishFunctionComponent(
         request,
         task,
         keyPath,
-        type,
+        value,
         0 !== localIdCounter,
         actionStateCounter,
         actionStateMatchingIndex
       );
     }
-  else if (""string"" === typeof type)
-    if (((newProps = task.blockedSegment), null === newProps))
-      (newProps = props.children),
-        (defaultProps = task.formatContext),
-        (initialState = task.keyPath),
-        (task.formatContext = getChildFormatContext(defaultProps, type, props)),
-        (task.keyPath = keyPath),
-        renderNode(request, task, newProps, -1),
-        (task.formatContext = defaultProps),
-        (task.keyPath = initialState);
-    else {
-      initialState = pushStartInstance(
-        newProps.chunks,
+  else if (""string"" === typeof type) {
+    var segment = task.blockedSegment;
+    if (null === segment) {
+      var children = props.children,
+        prevContext = task.formatContext,
+        prevKeyPath$jscomp$0 = task.keyPath;
+      task.formatContext = getChildFormatContext(prevContext, type, props);
+      task.keyPath = keyPath;
+      renderNode(request, task, children, -1);
+      task.formatContext = prevContext;
+      task.keyPath = prevKeyPath$jscomp$0;
+    } else {
+      var children$40 = pushStartInstance(
+        segment.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
         task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
-        newProps.lastPushedText
+        segment.lastPushedText
       );
-      newProps.lastPushedText = !1;
-      defaultProps = task.formatContext;
-      ref = task.keyPath;
+      segment.lastPushedText = !1;
+      var prevContext$41 = task.formatContext,
+        prevKeyPath$42 = task.keyPath;
       task.keyPath = keyPath;
       if (
         3 ===
-        (task.formatContext = getChildFormatContext(defaultProps, type, props))
-          .insertionMode
+        (task.formatContext = getChildFormatContext(
+          prevContext$41,
+          type,
+          props
+        )).insertionMode
       ) {
-        keyPath = createPendingSegment(
+        var preambleSegment = createPendingSegment(
           request,
           0,
           null,
           task.formatContext,
           !1,
           !1
         );
-        newProps.preambleChildren.push(keyPath);
-        task.blockedSegment = keyPath;
+        segment.preambleChildren.push(preambleSegment);
+        task.blockedSegment = preambleSegment;
         try {
-          (keyPath.status = 6),
-            renderNode(request, task, initialState, -1),
+          (preambleSegment.status = 6),
+            renderNode(request, task, children$40, -1),
             pushSegmentFinale(
-              keyPath.chunks,
+              preambleSegment.chunks,
               request.renderState,
-              keyPath.lastPushedText,
-              keyPath.textEmbedded
+              preambleSegment.lastPushedText,
+              preambleSegment.textEmbedded
             ),
-            (keyPath.status = 1);
+            (preambleSegment.status = 1);
         } finally {
-          task.blockedSegment = newProps;
+          task.blockedSegment = segment;
         }
-      } else renderNode(request, task, initialState, -1);
-      task.formatContext = defaultProps;
-      task.keyPath = ref;
+      } else renderNode(request, task, children$40, -1);
+      task.formatContext = prevContext$41;
+      task.keyPath = prevKeyPath$42;
       a: {
-        task = newProps.chunks;
-        request = request.resumableState;
+        var target = segment.chunks,
+          resumableState = request.resumableState;
         switch (type) {
           case ""title"":
           case ""style"":
@@ -4375,133 +4468,172 @@ function renderElement(request, task, keyPath, type, props, ref) {
           case ""wbr"":
             break a;
           case ""body"":
-            if (1 >= defaultProps.insertionMode) {
-              request.hasBody = !0;
+            if (1 >= prevContext$41.insertionMode) {
+              resumableState.hasBody = !0;
               break a;
             }
             break;
           case ""html"":
-            if (0 === defaultProps.insertionMode) {
-              request.hasHtml = !0;
+            if (0 === prevContext$41.insertionMode) {
+              resumableState.hasHtml = !0;
               break a;
             }
             break;
           case ""head"":
-            if (1 >= defaultProps.insertionMode) break a;
+            if (1 >= prevContext$41.insertionMode) break a;
         }
-        task.push(endChunkForTag(type));
+        target.push(endChunkForTag(type));
       }
-      newProps.lastPushedText = !1;
+      segment.lastPushedText = !1;
     }
-  else {
+  } else {
     switch (type) {
       case REACT_LEGACY_HIDDEN_TYPE:
       case REACT_STRICT_MODE_TYPE:
       case REACT_PROFILER_TYPE:
       case REACT_FRAGMENT_TYPE:
-        type = task.keyPath;
+        var prevKeyPath$jscomp$1 = task.keyPath;
         task.keyPath = keyPath;
         renderNodeDestructive(request, task, props.children, -1);
-        task.keyPath = type;
+        task.keyPath = prevKeyPath$jscomp$1;
         return;
       case REACT_ACTIVITY_TYPE:
-        type = task.blockedSegment;
-        null === type
-          ? ""hidden"" !== props.mode &&
-            ((type = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = type))
-          : ""hidden"" !== props.mode &&
-            (request.renderState.generateStaticMarkup ||
-              type.chunks.push(""\x3c!--&--\x3e""),
-            (type.lastPushedText = !1),
-            (newProps = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = newProps),
-            request.renderState.generateStaticMarkup ||
-              type.chunks.push(""\x3c!--/&--\x3e""),
-            (type.lastPushedText = !1));
+        var segment$jscomp$0 = task.blockedSegment;
+        if (null === segment$jscomp$0) {
+          if (""hidden"" !== props.mode) {
+            var prevKeyPath$jscomp$2 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNode(request, task, props.children, -1);
+            task.keyPath = prevKeyPath$jscomp$2;
+          }
+        } else if (""hidden"" !== props.mode) {
+          request.renderState.generateStaticMarkup ||
+            segment$jscomp$0.chunks.push(""\x3c!--&--\x3e"");
+          segment$jscomp$0.lastPushedText = !1;
+          var prevKeyPath$45 = task.keyPath;
+          task.keyPath = keyPath;
+          renderNode(request, task, props.children, -1);
+          task.keyPath = prevKeyPath$45;
+          request.renderState.generateStaticMarkup ||
+            segment$jscomp$0.chunks.push(""\x3c!--/&--\x3e"");
+          segment$jscomp$0.lastPushedText = !1;
+        }
         return;
       case REACT_SUSPENSE_LIST_TYPE:
         a: {
-          type = props.children;
-          props = props.revealOrder;
+          var children$jscomp$0 = props.children,
+            revealOrder = props.revealOrder;
           if (
-            ""forwards"" === props ||
-            ""backwards"" === props ||
-            ""unstable_legacy-backwards"" === props
+            ""forwards"" === revealOrder ||
+            ""backwards"" === revealOrder ||
+            ""unstable_legacy-backwards"" === revealOrder
           ) {
-            if (isArrayImpl(type)) {
-              renderSuspenseListRows(request, task, keyPath, type, props);
+            if (isArrayImpl(children$jscomp$0)) {
+              renderSuspenseListRows(
+                request,
+                task,
+                keyPath,
+                children$jscomp$0,
+                revealOrder
+              );
               break a;
             }
-            if ((newProps = getIteratorFn(type)))
-              if ((newProps = newProps.call(type))) {
-                defaultProps = newProps.next();
-                if (!defaultProps.done) {
-                  do defaultProps = newProps.next();
-                  while (!defaultProps.done);
-                  renderSuspenseListRows(request, task, keyPath, type, props);
+            var iteratorFn = getIteratorFn(children$jscomp$0);
+            if (iteratorFn) {
+              var iterator = iteratorFn.call(children$jscomp$0);
+              if (iterator) {
+                var step = iterator.next();
+                if (!step.done) {
+                  do step = iterator.next();
+                  while (!step.done);
+                  renderSuspenseListRows(
+                    request,
+                    task,
+                    keyPath,
+                    children$jscomp$0,
+                    revealOrder
+                  );
                 }
                 break a;
               }
+            }
+          }
+          if (""together"" === revealOrder) {
+            var prevKeyPath$39 = task.keyPath,
+              prevRow = task.row,
+              newRow = (task.row = createSuspenseListRow(null));
+            newRow.boundaries = [];
+            newRow.together = !0;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            0 === --newRow.pendingTasks &&
+              finishSuspenseListRow(request, newRow);
+            task.keyPath = prevKeyPath$39;
+            task.row = prevRow;
+            null !== prevRow &&
+              0 < newRow.pendingTasks &&
+              (prevRow.pendingTasks++, (newRow.next = prevRow));
+          } else {
+            var prevKeyPath$jscomp$3 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            task.keyPath = prevKeyPath$jscomp$3;
           }
-          ""together"" === props
-            ? ((props = task.keyPath),
-              (newProps = task.row),
-              (defaultProps = task.row = createSuspenseListRow(null)),
-              (defaultProps.boundaries = []),
-              (defaultProps.together = !0),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              0 === --defaultProps.pendingTasks &&
-                finishSuspenseListRow(request, defaultProps),
-              (task.keyPath = props),
-              (task.row = newProps),
-              null !== newProps &&
-                0 < defaultProps.pendingTasks &&
-                (newProps.pendingTasks++, (defaultProps.next = newProps)))
-            : ((props = task.keyPath),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              (task.keyPath = props));
         }
         return;
       case REACT_VIEW_TRANSITION_TYPE:
+        var prevContext$jscomp$0 = task.formatContext,
+          prevKeyPath$jscomp$4 = task.keyPath;
+        var resumableState$jscomp$0 = request.resumableState;
+        if (null == props.name || ""auto"" === props.name) {
+          var treeId = getTreeId(task.treeContext);
+          makeId(resumableState$jscomp$0, treeId, 0);
+        }
+        task.formatContext = prevContext$jscomp$0;
+        task.keyPath = keyPath;
+        if (null != props.name && ""auto"" !== props.name)
+          renderNodeDestructive(request, task, props.children, -1);
+        else {
+          var prevTreeContext = task.treeContext;
+          task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+          renderNode(request, task, props.children, -1);
+          task.treeContext = prevTreeContext;
+        }
+        task.formatContext = prevContext$jscomp$0;
+        task.keyPath = prevKeyPath$jscomp$4;
+        return;
       case REACT_SCOPE_TYPE:
         throw Error(formatProdErrorMessage(343));
       case REACT_SUSPENSE_TYPE:
         a: if (null !== task.replay) {
-          type = task.keyPath;
-          newProps = task.formatContext;
-          defaultProps = task.row;
+          var prevKeyPath$26 = task.keyPath,
+            prevContext$27 = task.formatContext,
+            prevRow$28 = task.row;
           task.keyPath = keyPath;
           task.formatContext = getSuspenseContentFormatContext(
             request.resumableState,
-            newProps
+            prevContext$27
           );
           task.row = null;
-          keyPath = props.children;
+          var content$29 = props.children;
           try {
-            renderNode(request, task, keyPath, -1);
+            renderNode(request, task, content$29, -1);
           } finally {
-            (task.keyPath = type),
-              (task.formatContext = newProps),
-              (task.row = defaultProps);
+            (task.keyPath = prevKeyPath$26),
+              (task.formatContext = prevContext$27),
+              (task.row = prevRow$28);
           }
         } else {
-          type = task.keyPath;
-          ref = task.formatContext;
-          var prevRow = task.row,
-            parentBoundary = task.blockedBoundary;
-          propName$43 = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState;
-          propName = task.blockedSegment;
-          var fallback = props.fallback;
-          props = props.children;
-          var fallbackAbortSet = new Set();
+          var prevKeyPath$jscomp$5 = task.keyPath,
+            prevContext$jscomp$1 = task.formatContext,
+            prevRow$jscomp$0 = task.row,
+            parentBoundary = task.blockedBoundary,
+            parentPreamble = task.blockedPreamble,
+            parentHoistableState = task.hoistableState,
+            parentSegment = task.blockedSegment,
+            fallback = props.fallback,
+            content = props.children,
+            fallbackAbortSet = new Set();
           var newBoundary = createSuspenseBoundary(
             request,
             task.row,
@@ -4513,14 +4645,14 @@ function renderElement(request, task, keyPath, type, props, ref) {
             (newBoundary.trackedContentKeyPath = keyPath);
           var boundarySegment = createPendingSegment(
             request,
-            propName.chunks.length,
+            parentSegment.chunks.length,
             newBoundary,
             task.formatContext,
             !1,
             !1
           );
-          propName.children.push(boundarySegment);
-          propName.lastPushedText = !1;
+          parentSegment.children.push(boundarySegment);
+          parentSegment.lastPushedText = !1;
           var contentRootSegment = createPendingSegment(
             request,
             0,
@@ -4531,20 +4663,30 @@ function renderElement(request, task, keyPath, type, props, ref) {
           );
           contentRootSegment.parentFlushed = !0;
           if (null !== request.trackedPostpones) {
-            newProps = task.componentStack;
-            defaultProps = [keyPath[0], ""Suspense Fallback"", keyPath[2]];
-            initialState = [defaultProps[1], defaultProps[2], [], null];
-            request.trackedPostpones.workingMap.set(defaultProps, initialState);
-            newBoundary.trackedFallbackNode = initialState;
+            var suspenseComponentStack = task.componentStack,
+              fallbackKeyPath = [keyPath[0], ""Suspense Fallback"", keyPath[2]],
+              fallbackReplayNode = [
+                fallbackKeyPath[1],
+                fallbackKeyPath[2],
+                [],
+                null
+              ];
+            request.trackedPostpones.workingMap.set(
+              fallbackKeyPath,
+              fallbackReplayNode
+            );
+            newBoundary.trackedFallbackNode = fallbackReplayNode;
             task.blockedSegment = boundarySegment;
             task.blockedPreamble = newBoundary.fallbackPreamble;
-            task.keyPath = defaultProps;
+            task.keyPath = fallbackKeyPath;
             task.formatContext = getSuspenseFallbackFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.componentStack =
-              replaceSuspenseComponentStackWithSuspenseFallbackStack(newProps);
+              replaceSuspenseComponentStackWithSuspenseFallbackStack(
+                suspenseComponentStack
+              );
             boundarySegment.status = 6;
             try {
               renderNode(request, task, fallback, -1),
@@ -4561,15 +4703,15 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 thrownValue)
               );
             } finally {
-              (task.blockedSegment = propName),
-                (task.blockedPreamble = propName$43),
-                (task.keyPath = type),
-                (task.formatContext = ref);
+              (task.blockedSegment = parentSegment),
+                (task.blockedPreamble = parentPreamble),
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1);
             }
-            task = createRenderTask(
+            var suspendedPrimaryTask = createRenderTask(
               request,
               null,
-              props,
+              content,
               -1,
               newBoundary,
               contentRootSegment,
@@ -4584,10 +4726,10 @@ function renderElement(request, task, keyPath, type, props, ref) {
               task.context,
               task.treeContext,
               null,
-              newProps
+              suspenseComponentStack
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedPrimaryTask);
+            request.pingedTasks.push(suspendedPrimaryTask);
           } else {
             task.blockedBoundary = newBoundary;
             task.blockedPreamble = newBoundary.contentPreamble;
@@ -4596,13 +4738,13 @@ function renderElement(request, task, keyPath, type, props, ref) {
             task.keyPath = keyPath;
             task.formatContext = getSuspenseContentFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.row = null;
             contentRootSegment.status = 6;
             try {
               if (
-                (renderNode(request, task, props, -1),
+                (renderNode(request, task, content, -1),
                 pushSegmentFinale(
                   contentRootSegment.chunks,
                   request.renderState,
@@ -4617,43 +4759,38 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   ((newBoundary.status = 1),
                   !isEligibleForOutlining(request, newBoundary))
                 ) {
-                  null !== prevRow &&
-                    0 === --prevRow.pendingTasks &&
-                    finishSuspenseListRow(request, prevRow);
+                  null !== prevRow$jscomp$0 &&
+                    0 === --prevRow$jscomp$0.pendingTasks &&
+                    finishSuspenseListRow(request, prevRow$jscomp$0);
                   0 === request.pendingRootTasks &&
                     task.blockedPreamble &&
                     preparePreamble(request);
                   break a;
                 }
               } else
-                null !== prevRow &&
-                  prevRow.together &&
-                  tryToResolveTogetherRow(request, prevRow);
+                null !== prevRow$jscomp$0 &&
+                  prevRow$jscomp$0.together &&
+                  tryToResolveTogetherRow(request, prevRow$jscomp$0);
             } catch (thrownValue$30) {
-              (newBoundary.status = 4),
-                12 === request.status
-                  ? ((contentRootSegment.status = 3),
-                    (newProps = request.fatalError))
-                  : ((contentRootSegment.status = 4),
-                    (newProps = thrownValue$30)),
-                (defaultProps = getThrownInfo(task.componentStack)),
-                (initialState = logRecoverableError(
-                  request,
-                  newProps,
-                  defaultProps
-                )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+              newBoundary.status = 4;
+              if (12 === request.status) {
+                contentRootSegment.status = 3;
+                var error = request.fatalError;
+              } else (contentRootSegment.status = 4), (error = thrownValue$30);
+              var thrownInfo = getThrownInfo(task.componentStack);
+              var errorDigest = logRecoverableError(request, error, thrownInfo);
+              newBoundary.errorDigest = errorDigest;
+              untrackBoundary(request, newBoundary);
             } finally {
               (task.blockedBoundary = parentBoundary),
-                (task.blockedPreamble = propName$43),
+                (task.blockedPreamble = parentPreamble),
                 (task.hoistableState = parentHoistableState),
-                (task.blockedSegment = propName),
-                (task.keyPath = type),
-                (task.formatContext = ref),
-                (task.row = prevRow);
+                (task.blockedSegment = parentSegment),
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1),
+                (task.row = prevRow$jscomp$0);
             }
-            task = createRenderTask(
+            var suspendedFallbackTask = createRenderTask(
               request,
               null,
               fallback,
@@ -4675,32 +4812,33 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 task.componentStack
               )
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedFallbackTask);
+            request.pingedTasks.push(suspendedFallbackTask);
           }
         }
         return;
     }
     if (""object"" === typeof type && null !== type)
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
-          if (""ref"" in props)
-            for (fallback in ((newProps = {}), props))
-              ""ref"" !== fallback && (newProps[fallback] = props[fallback]);
-          else newProps = props;
-          type = renderWithHooks(
+          if (""ref"" in props) {
+            var propsWithoutRef = {};
+            for (var key in props)
+              ""ref"" !== key && (propsWithoutRef[key] = props[key]);
+          } else propsWithoutRef = props;
+          var children$jscomp$1 = renderWithHooks(
             request,
             task,
             keyPath,
             type.render,
-            newProps,
+            propsWithoutRef,
             ref
           );
           finishFunctionComponent(
             request,
             task,
             keyPath,
-            type,
+            children$jscomp$1,
             0 !== localIdCounter,
             actionStateCounter,
             actionStateMatchingIndex
@@ -4710,42 +4848,44 @@ function renderElement(request, task, keyPath, type, props, ref) {
           renderElement(request, task, keyPath, type.type, props, ref);
           return;
         case REACT_CONTEXT_TYPE:
-          defaultProps = props.children;
-          newProps = task.keyPath;
-          props = props.value;
-          initialState = type._currentValue2;
-          type._currentValue2 = props;
-          ref = currentActiveSnapshot;
-          currentActiveSnapshot = type = {
-            parent: ref,
-            depth: null === ref ? 0 : ref.depth + 1,
-            context: type,
-            parentValue: initialState,
-            value: props
-          };
-          task.context = type;
+          var children$jscomp$2 = props.children,
+            prevKeyPath$jscomp$6 = task.keyPath,
+            nextValue = props.value;
+          var prevValue = type._currentValue2;
+          type._currentValue2 = nextValue;
+          var prevNode = currentActiveSnapshot,
+            newNode = {
+              parent: prevNode,
+              depth: null === prevNode ? 0 : prevNode.depth + 1,
+              context: type,
+              parentValue: prevValue,
+              value: nextValue
+            };
+          currentActiveSnapshot = newNode;
+          task.context = newNode;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, defaultProps, -1);
-          request = currentActiveSnapshot;
-          if (null === request) throw Error(formatProdErrorMessage(403));
-          request.context._currentValue2 = request.parentValue;
-          request = currentActiveSnapshot = request.parent;
-          task.context = request;
-          task.keyPath = newProps;
+          renderNodeDestructive(request, task, children$jscomp$2, -1);
+          var prevSnapshot = currentActiveSnapshot;
+          if (null === prevSnapshot) throw Error(formatProdErrorMessage(403));
+          prevSnapshot.context._currentValue2 = prevSnapshot.parentValue;
+          var JSCompiler_inline_result$jscomp$2 = (currentActiveSnapshot =
+            prevSnapshot.parent);
+          task.context = JSCompiler_inline_result$jscomp$2;
+          task.keyPath = prevKeyPath$jscomp$6;
           return;
         case REACT_CONSUMER_TYPE:
-          props = props.children;
-          type = props(type._context._currentValue2);
-          props = task.keyPath;
+          var render = props.children,
+            newChildren = render(type._context._currentValue2),
+            prevKeyPath$jscomp$7 = task.keyPath;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, type, -1);
-          task.keyPath = props;
+          renderNodeDestructive(request, task, newChildren, -1);
+          task.keyPath = prevKeyPath$jscomp$7;
           return;
         case REACT_LAZY_TYPE:
-          newProps = type._init;
-          type = newProps(type._payload);
+          var init = type._init;
+          var Component = init(type._payload);
           if (12 === request.status) throw null;
-          renderElement(request, task, keyPath, type, props, ref);
+          renderElement(request, task, keyPath, Component, props, ref);
           return;
       }
     throw Error(
@@ -6124,7 +6264,8 @@ function flushCompletedBoundary(request, destination, boundary) {
   request = request.renderState;
   i = boundary.rootSegmentID;
   boundary = boundary.contentState;
-  var requiresStyleInsertion = request.stylesToHoist;
+  var requiresStyleInsertion = request.stylesToHoist,
+    requiresViewTransitions = 0 !== (completedSegments.instructions & 128);
   request.stylesToHoist = !1;
   destination.push(request.startInlineScript);
   destination.push("">"");
@@ -6139,6 +6280,12 @@ function flushCompletedBoundary(request, destination, boundary) {
         destination.push(
           '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
         )),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        destination.push(
+          '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+        )),
       0 === (completedSegments.instructions & 8)
         ? ((completedSegments.instructions |= 8),
           destination.push(
@@ -6150,6 +6297,12 @@ function flushCompletedBoundary(request, destination, boundary) {
         destination.push(
           '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
         )),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        destination.push(
+          '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+        )),
       destination.push('$RC(""'));
   completedSegments = i.toString(16);
   destination.push(request.boundaryPrefix);
@@ -6601,4 +6754,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.node.development.js,153,42,195,"@@ -86,6 +86,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -842,7 +844,8 @@
       return parentContext.insertionMode >= HTML_TABLE_MODE ||
         parentContext.insertionMode < HTML_MODE
         ? createFormatContext(HTML_MODE, null, subtreeScope, null)
-        : parentContext.tagScope !== subtreeScope
+        : null !== parentContext.viewTransition ||
+            parentContext.tagScope !== subtreeScope
           ? createFormatContext(
               parentContext.insertionMode,
               parentContext.selectedValue,
@@ -865,7 +868,8 @@
           };
     }
     function getSuspenseFallbackFormatContext(resumableState, parentContext) {
-      parentContext.tagScope & 32 && (resumableState.instructions |= 128);
+      parentContext.tagScope & 32 &&
+        (resumableState.instructions |= NeedUpgradeToViewTransitions);
       return createFormatContext(
         parentContext.insertionMode,
         parentContext.selectedValue,
@@ -886,6 +890,31 @@
         resumableState
       );
     }
+    function makeId(resumableState, treeId, localId) {
+      resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+      0 < localId && (resumableState += ""H"" + localId.toString(32));
+      return resumableState + ""_"";
+    }
+    function pushViewTransitionAttributes(target, formatContext) {
+      formatContext = formatContext.viewTransition;
+      null !== formatContext &&
+        (""auto"" !== formatContext.name &&
+          (pushStringAttribute(
+            target,
+            ""vt-name"",
+            0 === formatContext.nameIdx
+              ? formatContext.name
+              : formatContext.name + ""_"" + formatContext.nameIdx
+          ),
+          formatContext.nameIdx++),
+        pushStringAttribute(target, ""vt-update"", formatContext.update),
+        ""none"" !== formatContext.enter &&
+          pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+        ""none"" !== formatContext.exit &&
+          pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+        ""none"" !== formatContext.share &&
+          pushStringAttribute(target, ""vt-share"", formatContext.share));
+    }
     function pushStyleAttribute(target, style) {
       if (""object"" !== typeof style)
         throw Error(
@@ -1431,7 +1460,7 @@
       checkHtmlStringCoercion(styleText);
       return ("""" + styleText).replace(styleRegex, styleReplacer);
     }
-    function pushSelfClosing(target, props, tag) {
+    function pushSelfClosing(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       for (var propKey in props)
         if (hasOwnProperty.call(props, propKey)) {
@@ -1448,6 +1477,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTagSelfClosing);
       return null;
     }
@@ -1525,7 +1555,7 @@
       target.push(endChunkForTag(""script""));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
+    function pushStartSingletonElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1544,11 +1574,12 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return tag;
     }
-    function pushStartGenericElement(target, props, tag) {
+    function pushStartGenericElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1567,6 +1598,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return ""string"" === typeof tag
@@ -1672,6 +1704,7 @@
                     pushAttribute(target$jscomp$0, propKey, propValue);
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML, children);
           if (""string"" === typeof children) {
@@ -1720,6 +1753,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
           return children$jscomp$0;
@@ -1833,6 +1867,7 @@
           null === value$jscomp$0 &&
             null !== defaultValue &&
             (value$jscomp$0 = defaultValue);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != children$jscomp$2) {
             console.error(
@@ -1960,6 +1995,7 @@
             ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
             : null !== defaultValue$jscomp$0 &&
               pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTagSelfClosing);
           null != formData &&
             formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2026,6 +2062,7 @@
             formTarget$jscomp$0,
             name$jscomp$0
           );
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null != formData$jscomp$0 &&
             formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2123,6 +2160,7 @@
             pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
           null != formTarget$jscomp$1 &&
             pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null !== formActionName &&
             (target$jscomp$0.push('<input type=""hidden""'),
@@ -2159,6 +2197,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           return null;
         case ""object"":
@@ -2204,6 +2243,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
           if (""string"" === typeof children$jscomp$5) {
@@ -2587,20 +2627,32 @@
             var JSCompiler_inline_result$jscomp$8 = pushSelfClosing(
               target$jscomp$0,
               props,
-              ""meta""
+              ""meta"",
+              formatContext
             );
           else
             textEmbedded && target$jscomp$0.push(""\x3c!-- --\x3e""),
               (JSCompiler_inline_result$jscomp$8 = isFallback$jscomp$1
                 ? null
                 : ""string"" === typeof props.charSet
-                  ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+                  ? pushSelfClosing(
+                      renderState.charsetChunks,
+                      props,
+                      ""meta"",
+                      formatContext
+                    )
                   : ""viewport"" === props.name
-                    ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
+                    ? pushSelfClosing(
+                        renderState.viewportChunks,
+                        props,
+                        ""meta"",
+                        formatContext
+                      )
                     : pushSelfClosing(
                         renderState.hoistableChunks,
                         props,
-                        ""meta""
+                        ""meta"",
+                        formatContext
                       ));
           return JSCompiler_inline_result$jscomp$8;
         case ""listing"":
@@ -2628,6 +2680,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != innerHTML$jscomp$7) {
             if (null != children$jscomp$10)
@@ -2746,7 +2799,7 @@
                       promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
             }
           }
-          return pushSelfClosing(target$jscomp$0, props, ""img"");
+          return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
         case ""base"":
         case ""area"":
         case ""br"":
@@ -2758,7 +2811,7 @@
         case ""source"":
         case ""track"":
         case ""wbr"":
-          return pushSelfClosing(target$jscomp$0, props, type);
+          return pushSelfClosing(target$jscomp$0, props, type, formatContext);
         case ""annotation-xml"":
         case ""color-profile"":
         case ""font-face"":
@@ -2778,13 +2831,15 @@
             var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
               preamble.headChunks,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$9;
         case ""body"":
@@ -2797,13 +2852,15 @@
             var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
               preamble$jscomp$0.bodyChunks,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$10;
         case ""html"":
@@ -2816,13 +2873,15 @@
             var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
               preamble$jscomp$1.htmlChunks,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$11;
         default:
@@ -2874,6 +2933,7 @@
                   }
                 }
               }
+            pushViewTransitionAttributes(target$jscomp$0, formatContext);
             target$jscomp$0.push(endOfStartTag);
             pushInnerHTML(
               target$jscomp$0,
@@ -2883,7 +2943,12 @@
             return children$jscomp$11;
           }
       }
-      return pushStartGenericElement(target$jscomp$0, props, type);
+      return pushStartGenericElement(
+        target$jscomp$0,
+        props,
+        type,
+        formatContext
+      );
     }
     function endChunkForTag(tag) {
       var chunk = endTagCache.get(tag);
@@ -3610,6 +3675,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -3739,6 +3806,13 @@
         ),
         (didWarnAboutNoopUpdateForComponent[warningKey] = !0));
     }
+    function getTreeId(context) {
+      var overflow = context.overflow;
+      context = context.id;
+      return (
+        (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow
+      );
+    }
     function pushTreeContext(baseContext, totalChildren, index) {
       var baseIdWithLeadingBit = baseContext.id;
       baseContext = baseContext.overflow;
@@ -4364,6 +4438,8 @@
           return describeBuiltInComponentFrame(""SuspenseList"");
         case REACT_SUSPENSE_TYPE:
           return describeBuiltInComponentFrame(""Suspense"");
+        case REACT_VIEW_TRANSITION_TYPE:
+          return describeBuiltInComponentFrame(""ViewTransition"");
       }
       return """";
     }
@@ -5765,6 +5841,26 @@
             }
             return;
           case REACT_VIEW_TRANSITION_TYPE:
+            var prevContext$jscomp$0 = task.formatContext,
+              prevKeyPath$jscomp$4 = task.keyPath;
+            var resumableState$jscomp$0 = request.resumableState;
+            if (null == props.name || ""auto"" === props.name) {
+              var treeId = getTreeId(task.treeContext);
+              makeId(resumableState$jscomp$0, treeId, 0);
+            }
+            task.formatContext = prevContext$jscomp$0;
+            task.keyPath = keyPath;
+            if (null != props.name && ""auto"" !== props.name)
+              renderNodeDestructive(request, task, props.children, -1);
+            else {
+              var prevTreeContext = task.treeContext;
+              task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+              renderNode(request, task, props.children, -1);
+              task.treeContext = prevTreeContext;
+            }
+            task.formatContext = prevContext$jscomp$0;
+            task.keyPath = prevKeyPath$jscomp$4;
+            return;
           case REACT_SCOPE_TYPE:
             throw Error(
               ""ReactDOMServer does not yet support scope components.""
@@ -5789,8 +5885,8 @@
                   (task.row = _prevRow);
               }
             } else {
-              var prevKeyPath$jscomp$4 = task.keyPath,
-                prevContext$jscomp$0 = task.formatContext,
+              var prevKeyPath$jscomp$5 = task.keyPath,
+                prevContext$jscomp$1 = task.formatContext,
                 prevRow$jscomp$0 = task.row,
                 parentBoundary = task.blockedBoundary,
                 parentPreamble = task.blockedPreamble,
@@ -5850,7 +5946,7 @@
                 task.keyPath = fallbackKeyPath;
                 task.formatContext = getSuspenseFallbackFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.componentStack =
                   replaceSuspenseComponentStackWithSuspenseFallbackStack(
@@ -5875,8 +5971,8 @@
                 } finally {
                   (task.blockedSegment = parentSegment),
                     (task.blockedPreamble = parentPreamble),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0);
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1);
                 }
                 var suspendedPrimaryTask = createRenderTask(
                   request,
@@ -5910,7 +6006,7 @@
                 task.keyPath = keyPath;
                 task.formatContext = getSuspenseContentFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.row = null;
                 contentRootSegment.status = 6;
@@ -5972,8 +6068,8 @@
                     (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0),
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1),
                     (task.row = prevRow$jscomp$0);
                 }
                 var suspendedFallbackTask = createRenderTask(
@@ -6039,7 +6135,7 @@
               var value$jscomp$0 = props.value,
                 children$jscomp$2 = props.children;
               var prevSnapshot = task.context;
-              var prevKeyPath$jscomp$5 = task.keyPath;
+              var prevKeyPath$jscomp$6 = task.keyPath;
               var prevValue = type._currentValue2;
               type._currentValue2 = value$jscomp$0;
               void 0 !== type._currentRenderer2 &&
@@ -6082,7 +6178,7 @@
               var JSCompiler_inline_result$jscomp$0 = (currentActiveSnapshot =
                 prevSnapshot$jscomp$0.parent);
               task.context = JSCompiler_inline_result$jscomp$0;
-              task.keyPath = prevKeyPath$jscomp$5;
+              task.keyPath = prevKeyPath$jscomp$6;
               prevSnapshot !== task.context &&
                 console.error(
                   ""Popping the context provider did not return back to the original snapshot. This is a bug in React.""
@@ -6096,10 +6192,10 @@
                   ""A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.""
                 );
               var newChildren = render(context$jscomp$0._currentValue2),
-                prevKeyPath$jscomp$6 = task.keyPath;
+                prevKeyPath$jscomp$7 = task.keyPath;
               task.keyPath = keyPath;
               renderNodeDestructive(request, task, newChildren, -1);
-              task.keyPath = prevKeyPath$jscomp$6;
+              task.keyPath = prevKeyPath$jscomp$7;
               return;
             case REACT_LAZY_TYPE:
               var Component = callLazyInitInDEV(type);
@@ -7840,7 +7936,10 @@
       request = request.renderState;
       i = boundary.rootSegmentID;
       boundary = boundary.contentState;
-      var requiresStyleInsertion = request.stylesToHoist;
+      var requiresStyleInsertion = request.stylesToHoist,
+        requiresViewTransitions =
+          (completedSegments.instructions & NeedUpgradeToViewTransitions) !==
+          NothingSent;
       request.stylesToHoist = !1;
       destination.push(request.startInlineScript);
       destination.push(endOfStartTag);
@@ -7853,6 +7952,13 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             destination.push(completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            destination.push(
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           (completedSegments.instructions & SentStyleInsertionFunction) ===
           NothingSent
             ? ((completedSegments.instructions |= SentStyleInsertionFunction),
@@ -7862,6 +7968,13 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             destination.push(completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            destination.push(
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           destination.push(completeBoundaryScript1Partial));
       completedSegments = i.toString(16);
       destination.push(request.boundaryPrefix);
@@ -9470,6 +9583,8 @@
       SentStyleInsertionFunction = 8,
       SentCompletedShellId = 32,
       SentMarkShellTime = 64,
+      NeedUpgradeToViewTransitions = 128,
+      SentUpgradeToViewTransitions = 256,
       EXISTS = null,
       PRELOAD_NO_CREDS = [];
     Object.freeze(PRELOAD_NO_CREDS);
@@ -9562,6 +9677,8 @@
       completeSegmentScriptEnd = '"")\x3c/script>',
       completeBoundaryScriptFunctionOnly =
         '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};',
+      completeBoundaryUpgradeToViewTransitionsInstruction =
+        '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);',
       completeBoundaryScript1Partial = '$RC(""',
       completeBoundaryWithStylesScript1FullPartial =
         '$RM=new Map;$RR=function(n,w,p){function u(q){this._p=null;q()}for(var r=new Map,t=document,h,b,e=t.querySelectorAll(""link[data-precedence],style[data-precedence]""),v=[],k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href""),b),r.set(b.dataset.precedence,h=b));e=0;b=[];var l,a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1,m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g,f[m++]);g=a._p=new Promise(function(q,x){a.onload=u.bind(a,q);a.onerror=u.bind(a,x)});$RM.set(d,a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=t.head,c.insertBefore(a,c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null,n,w),$RX.bind(null,n,""CSS failed to load""))};$RR(""',
@@ -9726,20 +9843,14 @@
           return [!1, unsupportedStartTransition];
         },
         useId: function () {
-          var treeId = currentlyRenderingTask.treeContext;
-          var overflow = treeId.overflow;
-          treeId = treeId.id;
-          treeId =
-            (treeId & ~(1 << (32 - clz32(treeId) - 1))).toString(32) + overflow;
-          var resumableState = currentResumableState;
+          var treeId = getTreeId(currentlyRenderingTask.treeContext),
+            resumableState = currentResumableState;
           if (null === resumableState)
             throw Error(
               ""Invalid hook call. Hooks can only be called inside of the body of a function component.""
             );
-          overflow = localIdCounter++;
-          treeId = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
-          0 < overflow && (treeId += ""H"" + overflow.toString(32));
-          return treeId + ""_"";
+          var localId = localIdCounter++;
+          return makeId(resumableState, treeId, localId);
         },
         useSyncExternalStore: function (
           subscribe,
@@ -9874,5 +9985,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-canary-c7862584-20251006"";
+    exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.node.production.js,476,323,799,"@@ -374,7 +374,8 @@ function getChildFormatContext(parentContext, type, props) {
   }
   return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
     ? createFormatContext(2, null, subtreeScope, null)
-    : parentContext.tagScope !== subtreeScope
+    : null !== parentContext.viewTransition ||
+        parentContext.tagScope !== subtreeScope
       ? createFormatContext(
           parentContext.insertionMode,
           parentContext.selectedValue,
@@ -418,6 +419,31 @@ function getSuspenseContentFormatContext(resumableState, parentContext) {
     resumableState
   );
 }
+function makeId(resumableState, treeId, localId) {
+  resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+  0 < localId && (resumableState += ""H"" + localId.toString(32));
+  return resumableState + ""_"";
+}
+function pushViewTransitionAttributes(target, formatContext) {
+  formatContext = formatContext.viewTransition;
+  null !== formatContext &&
+    (""auto"" !== formatContext.name &&
+      (pushStringAttribute(
+        target,
+        ""vt-name"",
+        0 === formatContext.nameIdx
+          ? formatContext.name
+          : formatContext.name + ""_"" + formatContext.nameIdx
+      ),
+      formatContext.nameIdx++),
+    pushStringAttribute(target, ""vt-update"", formatContext.update),
+    ""none"" !== formatContext.enter &&
+      pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+    ""none"" !== formatContext.exit &&
+      pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+    ""none"" !== formatContext.share &&
+      pushStringAttribute(target, ""vt-share"", formatContext.share));
+}
 var styleNameCache = new Map();
 function pushStyleAttribute(target, style) {
   if (""object"" !== typeof style)
@@ -770,7 +796,7 @@ var styleRegex = /(<\/|<)(s)(tyle)/gi;
 function styleReplacer(match, prefix, s, suffix) {
   return """" + prefix + (""s"" === s ? ""\\73 "" : ""\\53 "") + suffix;
 }
-function pushSelfClosing(target, props, tag) {
+function pushSelfClosing(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   for (var propKey in props)
     if (hasOwnProperty.call(props, propKey)) {
@@ -787,6 +813,7 @@ function pushSelfClosing(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(""/>"");
   return null;
 }
@@ -852,7 +879,7 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag(""script""));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
+function pushStartSingletonElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -871,11 +898,12 @@ function pushStartSingletonElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push("">"");
   pushInnerHTML(target, innerHTML, tag);
   return tag;
 }
-function pushStartGenericElement(target, props, tag) {
+function pushStartGenericElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -894,6 +922,7 @@ function pushStartGenericElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push("">"");
   pushInnerHTML(target, innerHTML, tag);
   return ""string"" === typeof tag
@@ -953,6 +982,7 @@ function pushStartInstance(
                 pushAttribute(target$jscomp$0, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       pushInnerHTML(target$jscomp$0, innerHTML, children);
       if (""string"" === typeof children) {
@@ -991,6 +1021,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
       return children$jscomp$0;
@@ -1080,6 +1111,7 @@ function pushStartInstance(
       null === value$jscomp$0 &&
         null !== defaultValue &&
         (value$jscomp$0 = defaultValue);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       if (null != children$jscomp$2) {
         if (null != value$jscomp$0)
@@ -1174,6 +1206,7 @@ function pushStartInstance(
         ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
         : null !== defaultValue$jscomp$0 &&
           pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(""/>"");
       null != formData &&
         formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1232,6 +1265,7 @@ function pushStartInstance(
         formTarget$jscomp$0,
         name$jscomp$0
       );
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       null != formData$jscomp$0 &&
         formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1317,6 +1351,7 @@ function pushStartInstance(
         pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
       null != formTarget$jscomp$1 &&
         pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       null !== formActionName &&
         (target$jscomp$0.push('<input type=""hidden""'),
@@ -1350,6 +1385,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       return null;
     case ""object"":
@@ -1387,6 +1423,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
       if (""string"" === typeof children$jscomp$5) {
@@ -1658,17 +1695,33 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
           target$jscomp$0,
           props,
-          ""meta""
+          ""meta"",
+          formatContext
         );
       else
         textEmbedded && target$jscomp$0.push(""\x3c!-- --\x3e""),
           (JSCompiler_inline_result$jscomp$7 = isFallback$jscomp$1
             ? null
             : ""string"" === typeof props.charSet
-              ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+              ? pushSelfClosing(
+                  renderState.charsetChunks,
+                  props,
+                  ""meta"",
+                  formatContext
+                )
               : ""viewport"" === props.name
-                ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
-                : pushSelfClosing(renderState.hoistableChunks, props, ""meta""));
+                ? pushSelfClosing(
+                    renderState.viewportChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  )
+                : pushSelfClosing(
+                    renderState.hoistableChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  ));
       return JSCompiler_inline_result$jscomp$7;
     case ""listing"":
     case ""pre"":
@@ -1695,6 +1748,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       if (null != innerHTML$jscomp$7) {
         if (null != children$jscomp$8)
@@ -1811,7 +1865,7 @@ function pushStartInstance(
                   promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
         }
       }
-      return pushSelfClosing(target$jscomp$0, props, ""img"");
+      return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
     case ""base"":
     case ""area"":
     case ""br"":
@@ -1823,7 +1877,7 @@ function pushStartInstance(
     case ""source"":
     case ""track"":
     case ""wbr"":
-      return pushSelfClosing(target$jscomp$0, props, type);
+      return pushSelfClosing(target$jscomp$0, props, type, formatContext);
     case ""annotation-xml"":
     case ""color-profile"":
     case ""font-face"":
@@ -1843,13 +1897,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
           preamble.headChunks,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$9;
     case ""body"":
@@ -1862,13 +1918,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
           preamble$jscomp$0.bodyChunks,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$10;
     case ""html"":
@@ -1881,13 +1939,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
           preamble$jscomp$1.htmlChunks,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$11;
     default:
@@ -1937,12 +1997,13 @@ function pushStartInstance(
               }
             }
           }
+        pushViewTransitionAttributes(target$jscomp$0, formatContext);
         target$jscomp$0.push("">"");
         pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
         return children$jscomp$9;
       }
   }
-  return pushStartGenericElement(target$jscomp$0, props, type);
+  return pushStartGenericElement(target$jscomp$0, props, type, formatContext);
 }
 var endTagCache = new Map();
 function endChunkForTag(tag) {
@@ -2752,16 +2813,16 @@ function createRenderState(resumableState, generateStaticMarkup) {
       ""\x3c/script>""
     ));
   bootstrapScriptContent = idPrefix + ""P:"";
-  var JSCompiler_object_inline_segmentPrefix_1673 = idPrefix + ""S:"";
+  var JSCompiler_object_inline_segmentPrefix_1688 = idPrefix + ""S:"";
   idPrefix += ""B:"";
-  var JSCompiler_object_inline_preconnects_1687 = new Set(),
-    JSCompiler_object_inline_fontPreloads_1688 = new Set(),
-    JSCompiler_object_inline_highImagePreloads_1689 = new Set(),
-    JSCompiler_object_inline_styles_1690 = new Map(),
-    JSCompiler_object_inline_bootstrapScripts_1691 = new Set(),
-    JSCompiler_object_inline_scripts_1692 = new Set(),
-    JSCompiler_object_inline_bulkPreloads_1693 = new Set(),
-    JSCompiler_object_inline_preloads_1694 = {
+  var JSCompiler_object_inline_preconnects_1702 = new Set(),
+    JSCompiler_object_inline_fontPreloads_1703 = new Set(),
+    JSCompiler_object_inline_highImagePreloads_1704 = new Set(),
+    JSCompiler_object_inline_styles_1705 = new Map(),
+    JSCompiler_object_inline_bootstrapScripts_1706 = new Set(),
+    JSCompiler_object_inline_scripts_1707 = new Set(),
+    JSCompiler_object_inline_bulkPreloads_1708 = new Set(),
+    JSCompiler_object_inline_preloads_1709 = {
       images: new Map(),
       stylesheets: new Map(),
       scripts: new Map(),
@@ -2798,7 +2859,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
       scriptConfig.moduleScriptResources[href] = null;
       scriptConfig = [];
       pushLinkImpl(scriptConfig, props);
-      JSCompiler_object_inline_bootstrapScripts_1691.add(scriptConfig);
+      JSCompiler_object_inline_bootstrapScripts_1706.add(scriptConfig);
       bootstrapChunks.push('<script src=""', escapeTextForBrowser(src), '""');
       ""string"" === typeof integrity &&
         bootstrapChunks.push(
@@ -2845,7 +2906,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
         (props.moduleScriptResources[scriptConfig] = null),
         (props = []),
         pushLinkImpl(props, integrity),
-        JSCompiler_object_inline_bootstrapScripts_1691.add(props),
+        JSCompiler_object_inline_bootstrapScripts_1706.add(props),
         bootstrapChunks.push(
           '<script type=""module"" src=""',
           escapeTextForBrowser(i),
@@ -2867,7 +2928,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
         bootstrapChunks.push(' async="""">\x3c/script>');
   return {
     placeholderPrefix: bootstrapScriptContent,
-    segmentPrefix: JSCompiler_object_inline_segmentPrefix_1673,
+    segmentPrefix: JSCompiler_object_inline_segmentPrefix_1688,
     boundaryPrefix: idPrefix,
     startInlineScript: ""<script"",
     startInlineStyle: ""<style"",
@@ -2887,14 +2948,14 @@ function createRenderState(resumableState, generateStaticMarkup) {
     charsetChunks: [],
     viewportChunks: [],
     hoistableChunks: [],
-    preconnects: JSCompiler_object_inline_preconnects_1687,
-    fontPreloads: JSCompiler_object_inline_fontPreloads_1688,
-    highImagePreloads: JSCompiler_object_inline_highImagePreloads_1689,
-    styles: JSCompiler_object_inline_styles_1690,
-    bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1691,
-    scripts: JSCompiler_object_inline_scripts_1692,
-    bulkPreloads: JSCompiler_object_inline_bulkPreloads_1693,
-    preloads: JSCompiler_object_inline_preloads_1694,
+    preconnects: JSCompiler_object_inline_preconnects_1702,
+    fontPreloads: JSCompiler_object_inline_fontPreloads_1703,
+    highImagePreloads: JSCompiler_object_inline_highImagePreloads_1704,
+    styles: JSCompiler_object_inline_styles_1705,
+    bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1706,
+    scripts: JSCompiler_object_inline_scripts_1707,
+    bulkPreloads: JSCompiler_object_inline_bulkPreloads_1708,
+    preloads: JSCompiler_object_inline_preloads_1709,
     nonce: { script: void 0, style: void 0 },
     stylesToHoist: !1,
     generateStaticMarkup: generateStaticMarkup
@@ -2936,6 +2997,8 @@ function getComponentNameFromType(type) {
       return ""SuspenseList"";
     case REACT_ACTIVITY_TYPE:
       return ""Activity"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {
@@ -3049,6 +3112,11 @@ var classComponentUpdater = {
     enqueueForceUpdate: function () {}
   },
   emptyTreeContext = { id: 1, overflow: """" };
+function getTreeId(context) {
+  var overflow = context.overflow;
+  context = context.id;
+  return (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow;
+}
 function pushTreeContext(baseContext, totalChildren, index) {
   var baseIdWithLeadingBit = baseContext.id;
   baseContext = baseContext.overflow;
@@ -3411,24 +3479,14 @@ var HooksDispatcher = {
       return [!1, unsupportedStartTransition];
     },
     useId: function () {
-      var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
-      var overflow = JSCompiler_inline_result.overflow;
-      JSCompiler_inline_result = JSCompiler_inline_result.id;
-      JSCompiler_inline_result =
-        (
-          JSCompiler_inline_result &
-          ~(1 << (32 - clz32(JSCompiler_inline_result) - 1))
-        ).toString(32) + overflow;
-      var resumableState = currentResumableState;
+      var treeId = getTreeId(currentlyRenderingTask.treeContext),
+        resumableState = currentResumableState;
       if (null === resumableState)
         throw Error(
           ""Invalid hook call. Hooks can only be called inside of the body of a function component.""
         );
-      overflow = localIdCounter++;
-      JSCompiler_inline_result =
-        ""_"" + resumableState.idPrefix + ""R_"" + JSCompiler_inline_result;
-      0 < overflow && (JSCompiler_inline_result += ""H"" + overflow.toString(32));
-      return JSCompiler_inline_result + ""_"";
+      var localId = localIdCounter++;
+      return makeId(resumableState, treeId, localId);
     },
     useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
       if (void 0 === getServerSnapshot)
@@ -3680,6 +3738,8 @@ function describeComponentStackByType(type) {
       return describeBuiltInComponentFrame(""SuspenseList"");
     case REACT_SUSPENSE_TYPE:
       return describeBuiltInComponentFrame(""Suspense"");
+    case REACT_VIEW_TRANSITION_TYPE:
+      return describeBuiltInComponentFrame(""ViewTransition"");
   }
   return """";
 }
@@ -4253,156 +4313,189 @@ function renderElement(request, task, keyPath, type, props, ref) {
           void 0 === newProps[propName$43] &&
             (newProps[propName$43] = defaultProps[propName$43]);
       }
-      props = newProps;
-      newProps = emptyContextObject;
-      defaultProps = type.contextType;
-      ""object"" === typeof defaultProps &&
-        null !== defaultProps &&
-        (newProps = defaultProps._currentValue2);
-      newProps = new type(props, newProps);
-      var initialState = void 0 !== newProps.state ? newProps.state : null;
-      newProps.updater = classComponentUpdater;
-      newProps.props = props;
-      newProps.state = initialState;
-      defaultProps = { queue: [], replace: !1 };
-      newProps._reactInternals = defaultProps;
-      ref = type.contextType;
-      newProps.context =
-        ""object"" === typeof ref && null !== ref
-          ? ref._currentValue2
+      var JSCompiler_inline_result = newProps;
+      var context = emptyContextObject,
+        contextType = type.contextType;
+      ""object"" === typeof contextType &&
+        null !== contextType &&
+        (context = contextType._currentValue2);
+      var JSCompiler_inline_result$jscomp$0 = new type(
+        JSCompiler_inline_result,
+        context
+      );
+      var initialState =
+        void 0 !== JSCompiler_inline_result$jscomp$0.state
+          ? JSCompiler_inline_result$jscomp$0.state
+          : null;
+      JSCompiler_inline_result$jscomp$0.updater = classComponentUpdater;
+      JSCompiler_inline_result$jscomp$0.props = JSCompiler_inline_result;
+      JSCompiler_inline_result$jscomp$0.state = initialState;
+      var internalInstance = { queue: [], replace: !1 };
+      JSCompiler_inline_result$jscomp$0._reactInternals = internalInstance;
+      var contextType$jscomp$0 = type.contextType;
+      JSCompiler_inline_result$jscomp$0.context =
+        ""object"" === typeof contextType$jscomp$0 &&
+        null !== contextType$jscomp$0
+          ? contextType$jscomp$0._currentValue2
           : emptyContextObject;
-      ref = type.getDerivedStateFromProps;
-      ""function"" === typeof ref &&
-        ((ref = ref(props, initialState)),
-        (initialState =
-          null === ref || void 0 === ref
+      var getDerivedStateFromProps = type.getDerivedStateFromProps;
+      if (""function"" === typeof getDerivedStateFromProps) {
+        var partialState = getDerivedStateFromProps(
+          JSCompiler_inline_result,
+          initialState
+        );
+        var JSCompiler_inline_result$jscomp$1 =
+          null === partialState || void 0 === partialState
             ? initialState
-            : assign({}, initialState, ref)),
-        (newProps.state = initialState));
+            : assign({}, initialState, partialState);
+        JSCompiler_inline_result$jscomp$0.state =
+          JSCompiler_inline_result$jscomp$1;
+      }
       if (
         ""function"" !== typeof type.getDerivedStateFromProps &&
-        ""function"" !== typeof newProps.getSnapshotBeforeUpdate &&
-        (""function"" === typeof newProps.UNSAFE_componentWillMount ||
-          ""function"" === typeof newProps.componentWillMount)
-      )
+        ""function"" !==
+          typeof JSCompiler_inline_result$jscomp$0.getSnapshotBeforeUpdate &&
+        (""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount ||
+          ""function"" ===
+            typeof JSCompiler_inline_result$jscomp$0.componentWillMount)
+      ) {
+        var oldState = JSCompiler_inline_result$jscomp$0.state;
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.componentWillMount();
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount();
+        oldState !== JSCompiler_inline_result$jscomp$0.state &&
+          classComponentUpdater.enqueueReplaceState(
+            JSCompiler_inline_result$jscomp$0,
+            JSCompiler_inline_result$jscomp$0.state,
+            null
+          );
         if (
-          ((type = newProps.state),
-          ""function"" === typeof newProps.componentWillMount &&
-            newProps.componentWillMount(),
-          ""function"" === typeof newProps.UNSAFE_componentWillMount &&
-            newProps.UNSAFE_componentWillMount(),
-          type !== newProps.state &&
-            classComponentUpdater.enqueueReplaceState(
-              newProps,
-              newProps.state,
-              null
-            ),
-          null !== defaultProps.queue && 0 < defaultProps.queue.length)
-        )
-          if (
-            ((type = defaultProps.queue),
-            (ref = defaultProps.replace),
-            (defaultProps.queue = null),
-            (defaultProps.replace = !1),
-            ref && 1 === type.length)
-          )
-            newProps.state = type[0];
+          null !== internalInstance.queue &&
+          0 < internalInstance.queue.length
+        ) {
+          var oldQueue = internalInstance.queue,
+            oldReplace = internalInstance.replace;
+          internalInstance.queue = null;
+          internalInstance.replace = !1;
+          if (oldReplace && 1 === oldQueue.length)
+            JSCompiler_inline_result$jscomp$0.state = oldQueue[0];
           else {
-            defaultProps = ref ? type[0] : newProps.state;
-            initialState = !0;
-            for (ref = ref ? 1 : 0; ref < type.length; ref++)
-              (propName$43 = type[ref]),
-                (propName$43 =
-                  ""function"" === typeof propName$43
-                    ? propName$43.call(newProps, defaultProps, props, void 0)
-                    : propName$43),
-                null != propName$43 &&
-                  (initialState
-                    ? ((initialState = !1),
-                      (defaultProps = assign({}, defaultProps, propName$43)))
-                    : assign(defaultProps, propName$43));
-            newProps.state = defaultProps;
+            for (
+              var nextState = oldReplace
+                  ? oldQueue[0]
+                  : JSCompiler_inline_result$jscomp$0.state,
+                dontMutate = !0,
+                i = oldReplace ? 1 : 0;
+              i < oldQueue.length;
+              i++
+            ) {
+              var partial = oldQueue[i],
+                partialState$jscomp$0 =
+                  ""function"" === typeof partial
+                    ? partial.call(
+                        JSCompiler_inline_result$jscomp$0,
+                        nextState,
+                        JSCompiler_inline_result,
+                        void 0
+                      )
+                    : partial;
+              null != partialState$jscomp$0 &&
+                (dontMutate
+                  ? ((dontMutate = !1),
+                    (nextState = assign({}, nextState, partialState$jscomp$0)))
+                  : assign(nextState, partialState$jscomp$0));
+            }
+            JSCompiler_inline_result$jscomp$0.state = nextState;
           }
-        else defaultProps.queue = null;
-      type = newProps.render();
+        } else internalInstance.queue = null;
+      }
+      var nextChildren = JSCompiler_inline_result$jscomp$0.render();
       if (12 === request.status) throw null;
-      props = task.keyPath;
+      var prevKeyPath = task.keyPath;
       task.keyPath = keyPath;
-      renderNodeDestructive(request, task, type, -1);
-      task.keyPath = props;
+      renderNodeDestructive(request, task, nextChildren, -1);
+      task.keyPath = prevKeyPath;
     } else {
-      type = renderWithHooks(request, task, keyPath, type, props, void 0);
+      var value = renderWithHooks(request, task, keyPath, type, props, void 0);
       if (12 === request.status) throw null;
       finishFunctionComponent(
         request,
         task,
         keyPath,
-        type,
+        value,
         0 !== localIdCounter,
         actionStateCounter,
         actionStateMatchingIndex
       );
     }
-  else if (""string"" === typeof type)
-    if (((newProps = task.blockedSegment), null === newProps))
-      (newProps = props.children),
-        (defaultProps = task.formatContext),
-        (initialState = task.keyPath),
-        (task.formatContext = getChildFormatContext(defaultProps, type, props)),
-        (task.keyPath = keyPath),
-        renderNode(request, task, newProps, -1),
-        (task.formatContext = defaultProps),
-        (task.keyPath = initialState);
-    else {
-      initialState = pushStartInstance(
-        newProps.chunks,
+  else if (""string"" === typeof type) {
+    var segment = task.blockedSegment;
+    if (null === segment) {
+      var children = props.children,
+        prevContext = task.formatContext,
+        prevKeyPath$jscomp$0 = task.keyPath;
+      task.formatContext = getChildFormatContext(prevContext, type, props);
+      task.keyPath = keyPath;
+      renderNode(request, task, children, -1);
+      task.formatContext = prevContext;
+      task.keyPath = prevKeyPath$jscomp$0;
+    } else {
+      var children$40 = pushStartInstance(
+        segment.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
         task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
-        newProps.lastPushedText
+        segment.lastPushedText
       );
-      newProps.lastPushedText = !1;
-      defaultProps = task.formatContext;
-      ref = task.keyPath;
+      segment.lastPushedText = !1;
+      var prevContext$41 = task.formatContext,
+        prevKeyPath$42 = task.keyPath;
       task.keyPath = keyPath;
       if (
         3 ===
-        (task.formatContext = getChildFormatContext(defaultProps, type, props))
-          .insertionMode
+        (task.formatContext = getChildFormatContext(
+          prevContext$41,
+          type,
+          props
+        )).insertionMode
       ) {
-        keyPath = createPendingSegment(
+        var preambleSegment = createPendingSegment(
           request,
           0,
           null,
           task.formatContext,
           !1,
           !1
         );
-        newProps.preambleChildren.push(keyPath);
-        task.blockedSegment = keyPath;
+        segment.preambleChildren.push(preambleSegment);
+        task.blockedSegment = preambleSegment;
         try {
-          (keyPath.status = 6),
-            renderNode(request, task, initialState, -1),
+          (preambleSegment.status = 6),
+            renderNode(request, task, children$40, -1),
             pushSegmentFinale(
-              keyPath.chunks,
+              preambleSegment.chunks,
               request.renderState,
-              keyPath.lastPushedText,
-              keyPath.textEmbedded
+              preambleSegment.lastPushedText,
+              preambleSegment.textEmbedded
             ),
-            (keyPath.status = 1);
+            (preambleSegment.status = 1);
         } finally {
-          task.blockedSegment = newProps;
+          task.blockedSegment = segment;
         }
-      } else renderNode(request, task, initialState, -1);
-      task.formatContext = defaultProps;
-      task.keyPath = ref;
+      } else renderNode(request, task, children$40, -1);
+      task.formatContext = prevContext$41;
+      task.keyPath = prevKeyPath$42;
       a: {
-        task = newProps.chunks;
-        request = request.resumableState;
+        var target = segment.chunks,
+          resumableState = request.resumableState;
         switch (type) {
           case ""title"":
           case ""style"":
@@ -4424,133 +4517,172 @@ function renderElement(request, task, keyPath, type, props, ref) {
           case ""wbr"":
             break a;
           case ""body"":
-            if (1 >= defaultProps.insertionMode) {
-              request.hasBody = !0;
+            if (1 >= prevContext$41.insertionMode) {
+              resumableState.hasBody = !0;
               break a;
             }
             break;
           case ""html"":
-            if (0 === defaultProps.insertionMode) {
-              request.hasHtml = !0;
+            if (0 === prevContext$41.insertionMode) {
+              resumableState.hasHtml = !0;
               break a;
             }
             break;
           case ""head"":
-            if (1 >= defaultProps.insertionMode) break a;
+            if (1 >= prevContext$41.insertionMode) break a;
         }
-        task.push(endChunkForTag(type));
+        target.push(endChunkForTag(type));
       }
-      newProps.lastPushedText = !1;
+      segment.lastPushedText = !1;
     }
-  else {
+  } else {
     switch (type) {
       case REACT_LEGACY_HIDDEN_TYPE:
       case REACT_STRICT_MODE_TYPE:
       case REACT_PROFILER_TYPE:
       case REACT_FRAGMENT_TYPE:
-        type = task.keyPath;
+        var prevKeyPath$jscomp$1 = task.keyPath;
         task.keyPath = keyPath;
         renderNodeDestructive(request, task, props.children, -1);
-        task.keyPath = type;
+        task.keyPath = prevKeyPath$jscomp$1;
         return;
       case REACT_ACTIVITY_TYPE:
-        type = task.blockedSegment;
-        null === type
-          ? ""hidden"" !== props.mode &&
-            ((type = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = type))
-          : ""hidden"" !== props.mode &&
-            (request.renderState.generateStaticMarkup ||
-              type.chunks.push(""\x3c!--&--\x3e""),
-            (type.lastPushedText = !1),
-            (newProps = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = newProps),
-            request.renderState.generateStaticMarkup ||
-              type.chunks.push(""\x3c!--/&--\x3e""),
-            (type.lastPushedText = !1));
+        var segment$jscomp$0 = task.blockedSegment;
+        if (null === segment$jscomp$0) {
+          if (""hidden"" !== props.mode) {
+            var prevKeyPath$jscomp$2 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNode(request, task, props.children, -1);
+            task.keyPath = prevKeyPath$jscomp$2;
+          }
+        } else if (""hidden"" !== props.mode) {
+          request.renderState.generateStaticMarkup ||
+            segment$jscomp$0.chunks.push(""\x3c!--&--\x3e"");
+          segment$jscomp$0.lastPushedText = !1;
+          var prevKeyPath$45 = task.keyPath;
+          task.keyPath = keyPath;
+          renderNode(request, task, props.children, -1);
+          task.keyPath = prevKeyPath$45;
+          request.renderState.generateStaticMarkup ||
+            segment$jscomp$0.chunks.push(""\x3c!--/&--\x3e"");
+          segment$jscomp$0.lastPushedText = !1;
+        }
         return;
       case REACT_SUSPENSE_LIST_TYPE:
         a: {
-          type = props.children;
-          props = props.revealOrder;
+          var children$jscomp$0 = props.children,
+            revealOrder = props.revealOrder;
           if (
-            ""forwards"" === props ||
-            ""backwards"" === props ||
-            ""unstable_legacy-backwards"" === props
+            ""forwards"" === revealOrder ||
+            ""backwards"" === revealOrder ||
+            ""unstable_legacy-backwards"" === revealOrder
           ) {
-            if (isArrayImpl(type)) {
-              renderSuspenseListRows(request, task, keyPath, type, props);
+            if (isArrayImpl(children$jscomp$0)) {
+              renderSuspenseListRows(
+                request,
+                task,
+                keyPath,
+                children$jscomp$0,
+                revealOrder
+              );
               break a;
             }
-            if ((newProps = getIteratorFn(type)))
-              if ((newProps = newProps.call(type))) {
-                defaultProps = newProps.next();
-                if (!defaultProps.done) {
-                  do defaultProps = newProps.next();
-                  while (!defaultProps.done);
-                  renderSuspenseListRows(request, task, keyPath, type, props);
+            var iteratorFn = getIteratorFn(children$jscomp$0);
+            if (iteratorFn) {
+              var iterator = iteratorFn.call(children$jscomp$0);
+              if (iterator) {
+                var step = iterator.next();
+                if (!step.done) {
+                  do step = iterator.next();
+                  while (!step.done);
+                  renderSuspenseListRows(
+                    request,
+                    task,
+                    keyPath,
+                    children$jscomp$0,
+                    revealOrder
+                  );
                 }
                 break a;
               }
+            }
+          }
+          if (""together"" === revealOrder) {
+            var prevKeyPath$39 = task.keyPath,
+              prevRow = task.row,
+              newRow = (task.row = createSuspenseListRow(null));
+            newRow.boundaries = [];
+            newRow.together = !0;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            0 === --newRow.pendingTasks &&
+              finishSuspenseListRow(request, newRow);
+            task.keyPath = prevKeyPath$39;
+            task.row = prevRow;
+            null !== prevRow &&
+              0 < newRow.pendingTasks &&
+              (prevRow.pendingTasks++, (newRow.next = prevRow));
+          } else {
+            var prevKeyPath$jscomp$3 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            task.keyPath = prevKeyPath$jscomp$3;
           }
-          ""together"" === props
-            ? ((props = task.keyPath),
-              (newProps = task.row),
-              (defaultProps = task.row = createSuspenseListRow(null)),
-              (defaultProps.boundaries = []),
-              (defaultProps.together = !0),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              0 === --defaultProps.pendingTasks &&
-                finishSuspenseListRow(request, defaultProps),
-              (task.keyPath = props),
-              (task.row = newProps),
-              null !== newProps &&
-                0 < defaultProps.pendingTasks &&
-                (newProps.pendingTasks++, (defaultProps.next = newProps)))
-            : ((props = task.keyPath),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              (task.keyPath = props));
         }
         return;
       case REACT_VIEW_TRANSITION_TYPE:
+        var prevContext$jscomp$0 = task.formatContext,
+          prevKeyPath$jscomp$4 = task.keyPath;
+        var resumableState$jscomp$0 = request.resumableState;
+        if (null == props.name || ""auto"" === props.name) {
+          var treeId = getTreeId(task.treeContext);
+          makeId(resumableState$jscomp$0, treeId, 0);
+        }
+        task.formatContext = prevContext$jscomp$0;
+        task.keyPath = keyPath;
+        if (null != props.name && ""auto"" !== props.name)
+          renderNodeDestructive(request, task, props.children, -1);
+        else {
+          var prevTreeContext = task.treeContext;
+          task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+          renderNode(request, task, props.children, -1);
+          task.treeContext = prevTreeContext;
+        }
+        task.formatContext = prevContext$jscomp$0;
+        task.keyPath = prevKeyPath$jscomp$4;
+        return;
       case REACT_SCOPE_TYPE:
         throw Error(""ReactDOMServer does not yet support scope components."");
       case REACT_SUSPENSE_TYPE:
         a: if (null !== task.replay) {
-          type = task.keyPath;
-          newProps = task.formatContext;
-          defaultProps = task.row;
+          var prevKeyPath$26 = task.keyPath,
+            prevContext$27 = task.formatContext,
+            prevRow$28 = task.row;
           task.keyPath = keyPath;
           task.formatContext = getSuspenseContentFormatContext(
             request.resumableState,
-            newProps
+            prevContext$27
           );
           task.row = null;
-          keyPath = props.children;
+          var content$29 = props.children;
           try {
-            renderNode(request, task, keyPath, -1);
+            renderNode(request, task, content$29, -1);
           } finally {
-            (task.keyPath = type),
-              (task.formatContext = newProps),
-              (task.row = defaultProps);
+            (task.keyPath = prevKeyPath$26),
+              (task.formatContext = prevContext$27),
+              (task.row = prevRow$28);
           }
         } else {
-          type = task.keyPath;
-          ref = task.formatContext;
-          var prevRow = task.row,
-            parentBoundary = task.blockedBoundary;
-          propName$43 = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState;
-          propName = task.blockedSegment;
-          var fallback = props.fallback;
-          props = props.children;
-          var fallbackAbortSet = new Set();
+          var prevKeyPath$jscomp$5 = task.keyPath,
+            prevContext$jscomp$1 = task.formatContext,
+            prevRow$jscomp$0 = task.row,
+            parentBoundary = task.blockedBoundary,
+            parentPreamble = task.blockedPreamble,
+            parentHoistableState = task.hoistableState,
+            parentSegment = task.blockedSegment,
+            fallback = props.fallback,
+            content = props.children,
+            fallbackAbortSet = new Set();
           var newBoundary = createSuspenseBoundary(
             request,
             task.row,
@@ -4562,14 +4694,14 @@ function renderElement(request, task, keyPath, type, props, ref) {
             (newBoundary.trackedContentKeyPath = keyPath);
           var boundarySegment = createPendingSegment(
             request,
-            propName.chunks.length,
+            parentSegment.chunks.length,
             newBoundary,
             task.formatContext,
             !1,
             !1
           );
-          propName.children.push(boundarySegment);
-          propName.lastPushedText = !1;
+          parentSegment.children.push(boundarySegment);
+          parentSegment.lastPushedText = !1;
           var contentRootSegment = createPendingSegment(
             request,
             0,
@@ -4580,20 +4712,30 @@ function renderElement(request, task, keyPath, type, props, ref) {
           );
           contentRootSegment.parentFlushed = !0;
           if (null !== request.trackedPostpones) {
-            newProps = task.componentStack;
-            defaultProps = [keyPath[0], ""Suspense Fallback"", keyPath[2]];
-            initialState = [defaultProps[1], defaultProps[2], [], null];
-            request.trackedPostpones.workingMap.set(defaultProps, initialState);
-            newBoundary.trackedFallbackNode = initialState;
+            var suspenseComponentStack = task.componentStack,
+              fallbackKeyPath = [keyPath[0], ""Suspense Fallback"", keyPath[2]],
+              fallbackReplayNode = [
+                fallbackKeyPath[1],
+                fallbackKeyPath[2],
+                [],
+                null
+              ];
+            request.trackedPostpones.workingMap.set(
+              fallbackKeyPath,
+              fallbackReplayNode
+            );
+            newBoundary.trackedFallbackNode = fallbackReplayNode;
             task.blockedSegment = boundarySegment;
             task.blockedPreamble = newBoundary.fallbackPreamble;
-            task.keyPath = defaultProps;
+            task.keyPath = fallbackKeyPath;
             task.formatContext = getSuspenseFallbackFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.componentStack =
-              replaceSuspenseComponentStackWithSuspenseFallbackStack(newProps);
+              replaceSuspenseComponentStackWithSuspenseFallbackStack(
+                suspenseComponentStack
+              );
             boundarySegment.status = 6;
             try {
               renderNode(request, task, fallback, -1),
@@ -4610,15 +4752,15 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 thrownValue)
               );
             } finally {
-              (task.blockedSegment = propName),
-                (task.blockedPreamble = propName$43),
-                (task.keyPath = type),
-                (task.formatContext = ref);
+              (task.blockedSegment = parentSegment),
+                (task.blockedPreamble = parentPreamble),
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1);
             }
-            task = createRenderTask(
+            var suspendedPrimaryTask = createRenderTask(
               request,
               null,
-              props,
+              content,
               -1,
               newBoundary,
               contentRootSegment,
@@ -4633,10 +4775,10 @@ function renderElement(request, task, keyPath, type, props, ref) {
               task.context,
               task.treeContext,
               null,
-              newProps
+              suspenseComponentStack
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedPrimaryTask);
+            request.pingedTasks.push(suspendedPrimaryTask);
           } else {
             task.blockedBoundary = newBoundary;
             task.blockedPreamble = newBoundary.contentPreamble;
@@ -4645,13 +4787,13 @@ function renderElement(request, task, keyPath, type, props, ref) {
             task.keyPath = keyPath;
             task.formatContext = getSuspenseContentFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.row = null;
             contentRootSegment.status = 6;
             try {
               if (
-                (renderNode(request, task, props, -1),
+                (renderNode(request, task, content, -1),
                 pushSegmentFinale(
                   contentRootSegment.chunks,
                   request.renderState,
@@ -4666,43 +4808,38 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   ((newBoundary.status = 1),
                   !isEligibleForOutlining(request, newBoundary))
                 ) {
-                  null !== prevRow &&
-                    0 === --prevRow.pendingTasks &&
-                    finishSuspenseListRow(request, prevRow);
+                  null !== prevRow$jscomp$0 &&
+                    0 === --prevRow$jscomp$0.pendingTasks &&
+                    finishSuspenseListRow(request, prevRow$jscomp$0);
                   0 === request.pendingRootTasks &&
                     task.blockedPreamble &&
                     preparePreamble(request);
                   break a;
                 }
               } else
-                null !== prevRow &&
-                  prevRow.together &&
-                  tryToResolveTogetherRow(request, prevRow);
+                null !== prevRow$jscomp$0 &&
+                  prevRow$jscomp$0.together &&
+                  tryToResolveTogetherRow(request, prevRow$jscomp$0);
             } catch (thrownValue$30) {
-              (newBoundary.status = 4),
-                12 === request.status
-                  ? ((contentRootSegment.status = 3),
-                    (newProps = request.fatalError))
-                  : ((contentRootSegment.status = 4),
-                    (newProps = thrownValue$30)),
-                (defaultProps = getThrownInfo(task.componentStack)),
-                (initialState = logRecoverableError(
-                  request,
-                  newProps,
-                  defaultProps
-                )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+              newBoundary.status = 4;
+              if (12 === request.status) {
+                contentRootSegment.status = 3;
+                var error = request.fatalError;
+              } else (contentRootSegment.status = 4), (error = thrownValue$30);
+              var thrownInfo = getThrownInfo(task.componentStack);
+              var errorDigest = logRecoverableError(request, error, thrownInfo);
+              newBoundary.errorDigest = errorDigest;
+              untrackBoundary(request, newBoundary);
             } finally {
               (task.blockedBoundary = parentBoundary),
-                (task.blockedPreamble = propName$43),
+                (task.blockedPreamble = parentPreamble),
                 (task.hoistableState = parentHoistableState),
-                (task.blockedSegment = propName),
-                (task.keyPath = type),
-                (task.formatContext = ref),
-                (task.row = prevRow);
+                (task.blockedSegment = parentSegment),
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1),
+                (task.row = prevRow$jscomp$0);
             }
-            task = createRenderTask(
+            var suspendedFallbackTask = createRenderTask(
               request,
               null,
               fallback,
@@ -4724,32 +4861,33 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 task.componentStack
               )
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedFallbackTask);
+            request.pingedTasks.push(suspendedFallbackTask);
           }
         }
         return;
     }
     if (""object"" === typeof type && null !== type)
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
-          if (""ref"" in props)
-            for (fallback in ((newProps = {}), props))
-              ""ref"" !== fallback && (newProps[fallback] = props[fallback]);
-          else newProps = props;
-          type = renderWithHooks(
+          if (""ref"" in props) {
+            var propsWithoutRef = {};
+            for (var key in props)
+              ""ref"" !== key && (propsWithoutRef[key] = props[key]);
+          } else propsWithoutRef = props;
+          var children$jscomp$1 = renderWithHooks(
             request,
             task,
             keyPath,
             type.render,
-            newProps,
+            propsWithoutRef,
             ref
           );
           finishFunctionComponent(
             request,
             task,
             keyPath,
-            type,
+            children$jscomp$1,
             0 !== localIdCounter,
             actionStateCounter,
             actionStateMatchingIndex
@@ -4759,45 +4897,47 @@ function renderElement(request, task, keyPath, type, props, ref) {
           renderElement(request, task, keyPath, type.type, props, ref);
           return;
         case REACT_CONTEXT_TYPE:
-          defaultProps = props.children;
-          newProps = task.keyPath;
-          props = props.value;
-          initialState = type._currentValue2;
-          type._currentValue2 = props;
-          ref = currentActiveSnapshot;
-          currentActiveSnapshot = type = {
-            parent: ref,
-            depth: null === ref ? 0 : ref.depth + 1,
-            context: type,
-            parentValue: initialState,
-            value: props
-          };
-          task.context = type;
+          var children$jscomp$2 = props.children,
+            prevKeyPath$jscomp$6 = task.keyPath,
+            nextValue = props.value;
+          var prevValue = type._currentValue2;
+          type._currentValue2 = nextValue;
+          var prevNode = currentActiveSnapshot,
+            newNode = {
+              parent: prevNode,
+              depth: null === prevNode ? 0 : prevNode.depth + 1,
+              context: type,
+              parentValue: prevValue,
+              value: nextValue
+            };
+          currentActiveSnapshot = newNode;
+          task.context = newNode;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, defaultProps, -1);
-          request = currentActiveSnapshot;
-          if (null === request)
+          renderNodeDestructive(request, task, children$jscomp$2, -1);
+          var prevSnapshot = currentActiveSnapshot;
+          if (null === prevSnapshot)
             throw Error(
               ""Tried to pop a Context at the root of the app. This is a bug in React.""
             );
-          request.context._currentValue2 = request.parentValue;
-          request = currentActiveSnapshot = request.parent;
-          task.context = request;
-          task.keyPath = newProps;
+          prevSnapshot.context._currentValue2 = prevSnapshot.parentValue;
+          var JSCompiler_inline_result$jscomp$2 = (currentActiveSnapshot =
+            prevSnapshot.parent);
+          task.context = JSCompiler_inline_result$jscomp$2;
+          task.keyPath = prevKeyPath$jscomp$6;
           return;
         case REACT_CONSUMER_TYPE:
-          props = props.children;
-          type = props(type._context._currentValue2);
-          props = task.keyPath;
+          var render = props.children,
+            newChildren = render(type._context._currentValue2),
+            prevKeyPath$jscomp$7 = task.keyPath;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, type, -1);
-          task.keyPath = props;
+          renderNodeDestructive(request, task, newChildren, -1);
+          task.keyPath = prevKeyPath$jscomp$7;
           return;
         case REACT_LAZY_TYPE:
-          newProps = type._init;
-          type = newProps(type._payload);
+          var init = type._init;
+          var Component = init(type._payload);
           if (12 === request.status) throw null;
-          renderElement(request, task, keyPath, type, props, ref);
+          renderElement(request, task, keyPath, Component, props, ref);
           return;
       }
     throw Error(
@@ -6208,7 +6348,8 @@ function flushCompletedBoundary(request, destination, boundary) {
   request = request.renderState;
   i = boundary.rootSegmentID;
   boundary = boundary.contentState;
-  var requiresStyleInsertion = request.stylesToHoist;
+  var requiresStyleInsertion = request.stylesToHoist,
+    requiresViewTransitions = 0 !== (completedSegments.instructions & 128);
   request.stylesToHoist = !1;
   destination.push(request.startInlineScript);
   destination.push("">"");
@@ -6223,6 +6364,12 @@ function flushCompletedBoundary(request, destination, boundary) {
         destination.push(
           '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
         )),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        destination.push(
+          '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+        )),
       0 === (completedSegments.instructions & 8)
         ? ((completedSegments.instructions |= 8),
           destination.push(
@@ -6234,6 +6381,12 @@ function flushCompletedBoundary(request, destination, boundary) {
         destination.push(
           '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
         )),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        destination.push(
+          '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+        )),
       destination.push('$RC(""'));
   completedSegments = i.toString(16);
   destination.push(request.boundaryPrefix);
@@ -6690,4 +6843,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.browser.development.js,230,52,282,"@@ -86,6 +86,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -1141,7 +1143,8 @@
       return parentContext.insertionMode >= HTML_TABLE_MODE ||
         parentContext.insertionMode < HTML_MODE
         ? createFormatContext(HTML_MODE, null, subtreeScope, null)
-        : parentContext.tagScope !== subtreeScope
+        : null !== parentContext.viewTransition ||
+            parentContext.tagScope !== subtreeScope
           ? createFormatContext(
               parentContext.insertionMode,
               parentContext.selectedValue,
@@ -1164,7 +1167,8 @@
           };
     }
     function getSuspenseFallbackFormatContext(resumableState, parentContext) {
-      parentContext.tagScope & 32 && (resumableState.instructions |= 128);
+      parentContext.tagScope & 32 &&
+        (resumableState.instructions |= NeedUpgradeToViewTransitions);
       return createFormatContext(
         parentContext.insertionMode,
         parentContext.selectedValue,
@@ -1185,12 +1189,37 @@
         resumableState
       );
     }
+    function makeId(resumableState, treeId, localId) {
+      resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+      0 < localId && (resumableState += ""H"" + localId.toString(32));
+      return resumableState + ""_"";
+    }
     function pushTextInstance(target, text, renderState, textEmbedded) {
       if ("""" === text) return textEmbedded;
       textEmbedded && target.push(textSeparator);
       target.push(stringToChunk(escapeTextForBrowser(text)));
       return !0;
     }
+    function pushViewTransitionAttributes(target, formatContext) {
+      formatContext = formatContext.viewTransition;
+      null !== formatContext &&
+        (""auto"" !== formatContext.name &&
+          (pushStringAttribute(
+            target,
+            ""vt-name"",
+            0 === formatContext.nameIdx
+              ? formatContext.name
+              : formatContext.name + ""_"" + formatContext.nameIdx
+          ),
+          formatContext.nameIdx++),
+        pushStringAttribute(target, ""vt-update"", formatContext.update),
+        ""none"" !== formatContext.enter &&
+          pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+        ""none"" !== formatContext.exit &&
+          pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+        ""none"" !== formatContext.share &&
+          pushStringAttribute(target, ""vt-share"", formatContext.share));
+    }
     function pushStyleAttribute(target, style) {
       if (""object"" !== typeof style)
         throw Error(
@@ -1753,7 +1782,7 @@
       checkHtmlStringCoercion(styleText);
       return ("""" + styleText).replace(styleRegex, styleReplacer);
     }
-    function pushSelfClosing(target, props, tag) {
+    function pushSelfClosing(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       for (var propKey in props)
         if (hasOwnProperty.call(props, propKey)) {
@@ -1770,6 +1799,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTagSelfClosing);
       return null;
     }
@@ -1847,7 +1877,7 @@
       target.push(endChunkForTag(""script""));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
+    function pushStartSingletonElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1866,11 +1896,12 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return tag;
     }
-    function pushStartGenericElement(target, props, tag) {
+    function pushStartGenericElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1889,6 +1920,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return ""string"" === typeof tag
@@ -1994,6 +2026,7 @@
                     pushAttribute(target$jscomp$0, propKey, propValue);
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML, children);
           if (""string"" === typeof children) {
@@ -2042,6 +2075,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
           return children$jscomp$0;
@@ -2155,6 +2189,7 @@
           null === value$jscomp$0 &&
             null !== defaultValue &&
             (value$jscomp$0 = defaultValue);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != children$jscomp$2) {
             console.error(
@@ -2284,6 +2319,7 @@
             ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
             : null !== defaultValue$jscomp$0 &&
               pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTagSelfClosing);
           null != formData &&
             formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2350,6 +2386,7 @@
             formTarget$jscomp$0,
             name$jscomp$0
           );
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null != formData$jscomp$0 &&
             formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2449,6 +2486,7 @@
             pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
           null != formTarget$jscomp$1 &&
             pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null !== formActionName &&
             (target$jscomp$0.push(startHiddenInputChunk),
@@ -2487,6 +2525,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           return null;
         case ""object"":
@@ -2532,6 +2571,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
           if (""string"" === typeof children$jscomp$5) {
@@ -2923,20 +2963,32 @@
             var JSCompiler_inline_result$jscomp$8 = pushSelfClosing(
               target$jscomp$0,
               props,
-              ""meta""
+              ""meta"",
+              formatContext
             );
           else
             textEmbedded && target$jscomp$0.push(textSeparator),
               (JSCompiler_inline_result$jscomp$8 = isFallback$jscomp$1
                 ? null
                 : ""string"" === typeof props.charSet
-                  ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+                  ? pushSelfClosing(
+                      renderState.charsetChunks,
+                      props,
+                      ""meta"",
+                      formatContext
+                    )
                   : ""viewport"" === props.name
-                    ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
+                    ? pushSelfClosing(
+                        renderState.viewportChunks,
+                        props,
+                        ""meta"",
+                        formatContext
+                      )
                     : pushSelfClosing(
                         renderState.hoistableChunks,
                         props,
-                        ""meta""
+                        ""meta"",
+                        formatContext
                       ));
           return JSCompiler_inline_result$jscomp$8;
         case ""listing"":
@@ -2964,6 +3016,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != innerHTML$jscomp$7) {
             if (null != children$jscomp$10)
@@ -3082,7 +3135,7 @@
                       promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
             }
           }
-          return pushSelfClosing(target$jscomp$0, props, ""img"");
+          return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
         case ""base"":
         case ""area"":
         case ""br"":
@@ -3094,7 +3147,7 @@
         case ""source"":
         case ""track"":
         case ""wbr"":
-          return pushSelfClosing(target$jscomp$0, props, type);
+          return pushSelfClosing(target$jscomp$0, props, type, formatContext);
         case ""annotation-xml"":
         case ""color-profile"":
         case ""font-face"":
@@ -3115,13 +3168,15 @@
             var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
               preamble.headChunks,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$9;
         case ""body"":
@@ -3135,13 +3190,15 @@
             var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
               preamble$jscomp$0.bodyChunks,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$10;
         case ""html"":
@@ -3155,13 +3212,15 @@
             var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
               preamble$jscomp$1.htmlChunks,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$11;
         default:
@@ -3215,6 +3274,7 @@
                   }
                 }
               }
+            pushViewTransitionAttributes(target$jscomp$0, formatContext);
             target$jscomp$0.push(endOfStartTag);
             pushInnerHTML(
               target$jscomp$0,
@@ -3224,7 +3284,12 @@
             return children$jscomp$11;
           }
       }
-      return pushStartGenericElement(target$jscomp$0, props, type);
+      return pushStartGenericElement(
+        target$jscomp$0,
+        props,
+        type,
+        formatContext
+      );
     }
     function endChunkForTag(tag) {
       var chunk = endTagCache.get(tag);
@@ -3769,6 +3834,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -3898,6 +3965,13 @@
         ),
         (didWarnAboutNoopUpdateForComponent[warningKey] = !0));
     }
+    function getTreeId(context) {
+      var overflow = context.overflow;
+      context = context.id;
+      return (
+        (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow
+      );
+    }
     function pushTreeContext(baseContext, totalChildren, index) {
       var baseIdWithLeadingBit = baseContext.id;
       baseContext = baseContext.overflow;
@@ -4523,9 +4597,28 @@
           return describeBuiltInComponentFrame(""SuspenseList"");
         case REACT_SUSPENSE_TYPE:
           return describeBuiltInComponentFrame(""Suspense"");
+        case REACT_VIEW_TRANSITION_TYPE:
+          return describeBuiltInComponentFrame(""ViewTransition"");
       }
       return """";
     }
+    function getViewTransitionClassName(defaultClass, eventClass) {
+      defaultClass =
+        null == defaultClass || ""string"" === typeof defaultClass
+          ? defaultClass
+          : defaultClass.default;
+      eventClass =
+        null == eventClass || ""string"" === typeof eventClass
+          ? eventClass
+          : eventClass.default;
+      return null == eventClass
+        ? ""auto"" === defaultClass
+          ? null
+          : defaultClass
+        : ""auto"" === eventClass
+          ? null
+          : eventClass;
+    }
     function resetOwnerStackLimit() {
       var now = getCurrentTime();
       1e3 < now - lastResetTime &&
@@ -6088,6 +6181,76 @@
             }
             return;
           case REACT_VIEW_TRANSITION_TYPE:
+            var prevContext$jscomp$0 = task.formatContext,
+              prevKeyPath$jscomp$4 = task.keyPath;
+            var resumableState$jscomp$0 = request.resumableState;
+            if (null != props.name && ""auto"" !== props.name)
+              var autoName = props.name;
+            else {
+              var treeId = getTreeId(task.treeContext);
+              autoName = makeId(resumableState$jscomp$0, treeId, 0);
+            }
+            var resumableState$jscomp$1 = request.resumableState,
+              update = getViewTransitionClassName(props.default, props.update),
+              enter = getViewTransitionClassName(props.default, props.enter),
+              exit = getViewTransitionClassName(props.default, props.exit),
+              share = getViewTransitionClassName(props.default, props.share),
+              name$jscomp$0 = props.name,
+              autoName$jscomp$0 = autoName;
+            null == update && (update = ""auto"");
+            null == enter && (enter = ""auto"");
+            null == exit && (exit = ""auto"");
+            if (null == name$jscomp$0) {
+              var parentViewTransition = prevContext$jscomp$0.viewTransition;
+              null !== parentViewTransition
+                ? ((name$jscomp$0 = parentViewTransition.name),
+                  (share = parentViewTransition.share))
+                : ((name$jscomp$0 = ""auto""), (share = ""none""));
+            } else
+              null == share && (share = ""auto""),
+                prevContext$jscomp$0.tagScope & 4 &&
+                  (resumableState$jscomp$1.instructions |=
+                    NeedUpgradeToViewTransitions);
+            prevContext$jscomp$0.tagScope & 8
+              ? (resumableState$jscomp$1.instructions |=
+                  NeedUpgradeToViewTransitions)
+              : (exit = ""none"");
+            prevContext$jscomp$0.tagScope & 16
+              ? (resumableState$jscomp$1.instructions |=
+                  NeedUpgradeToViewTransitions)
+              : (enter = ""none"");
+            var viewTransition = {
+                update: update,
+                enter: enter,
+                exit: exit,
+                share: share,
+                name: name$jscomp$0,
+                autoName: autoName$jscomp$0,
+                nameIdx: 0
+              },
+              subtreeScope = prevContext$jscomp$0.tagScope & -25;
+            subtreeScope =
+              ""none"" !== update ? subtreeScope | 32 : subtreeScope & -33;
+            ""none"" !== enter && (subtreeScope |= 64);
+            var JSCompiler_inline_result$jscomp$0 = createFormatContext(
+              prevContext$jscomp$0.insertionMode,
+              prevContext$jscomp$0.selectedValue,
+              subtreeScope,
+              viewTransition
+            );
+            task.formatContext = JSCompiler_inline_result$jscomp$0;
+            task.keyPath = keyPath;
+            if (null != props.name && ""auto"" !== props.name)
+              renderNodeDestructive(request, task, props.children, -1);
+            else {
+              var prevTreeContext = task.treeContext;
+              task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+              renderNode(request, task, props.children, -1);
+              task.treeContext = prevTreeContext;
+            }
+            task.formatContext = prevContext$jscomp$0;
+            task.keyPath = prevKeyPath$jscomp$4;
+            return;
           case REACT_SCOPE_TYPE:
             throw Error(
               ""ReactDOMServer does not yet support scope components.""
@@ -6112,8 +6275,8 @@
                   (task.row = _prevRow);
               }
             } else {
-              var prevKeyPath$jscomp$4 = task.keyPath,
-                prevContext$jscomp$0 = task.formatContext,
+              var prevKeyPath$jscomp$5 = task.keyPath,
+                prevContext$jscomp$1 = task.formatContext,
                 prevRow$jscomp$0 = task.row,
                 parentBoundary = task.blockedBoundary,
                 parentPreamble = task.blockedPreamble,
@@ -6182,7 +6345,7 @@
                 task.keyPath = fallbackKeyPath;
                 task.formatContext = getSuspenseFallbackFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.componentStack =
                   replaceSuspenseComponentStackWithSuspenseFallbackStack(
@@ -6205,8 +6368,8 @@
                 } finally {
                   (task.blockedSegment = parentSegment),
                     (task.blockedPreamble = parentPreamble),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0);
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1);
                 }
                 var suspendedPrimaryTask = createRenderTask(
                   request,
@@ -6240,7 +6403,7 @@
                 task.keyPath = keyPath;
                 task.formatContext = getSuspenseContentFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.row = null;
                 contentRootSegment.status = 6;
@@ -6300,8 +6463,8 @@
                     (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0),
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1),
                     (task.row = prevRow$jscomp$0);
                 }
                 var suspendedFallbackTask = createRenderTask(
@@ -6367,7 +6530,7 @@
               var value$jscomp$0 = props.value,
                 children$jscomp$2 = props.children;
               var prevSnapshot = task.context;
-              var prevKeyPath$jscomp$5 = task.keyPath;
+              var prevKeyPath$jscomp$6 = task.keyPath;
               var prevValue = type._currentValue;
               type._currentValue = value$jscomp$0;
               void 0 !== type._currentRenderer &&
@@ -6407,10 +6570,10 @@
                   ""Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.""
                 );
               type._currentRenderer = rendererSigil;
-              var JSCompiler_inline_result$jscomp$0 = (currentActiveSnapshot =
+              var JSCompiler_inline_result$jscomp$1 = (currentActiveSnapshot =
                 prevSnapshot$jscomp$0.parent);
-              task.context = JSCompiler_inline_result$jscomp$0;
-              task.keyPath = prevKeyPath$jscomp$5;
+              task.context = JSCompiler_inline_result$jscomp$1;
+              task.keyPath = prevKeyPath$jscomp$6;
               prevSnapshot !== task.context &&
                 console.error(
                   ""Popping the context provider did not return back to the original snapshot. This is a bug in React.""
@@ -6424,10 +6587,10 @@
                   ""A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.""
                 );
               var newChildren = render(context$jscomp$0._currentValue),
-                prevKeyPath$jscomp$6 = task.keyPath;
+                prevKeyPath$jscomp$7 = task.keyPath;
               task.keyPath = keyPath;
               renderNodeDestructive(request, task, newChildren, -1);
-              task.keyPath = prevKeyPath$jscomp$6;
+              task.keyPath = prevKeyPath$jscomp$7;
               return;
             case REACT_LAZY_TYPE:
               var Component = callLazyInitInDEV(type);
@@ -8187,7 +8350,10 @@
       request = request.renderState;
       i = boundary.rootSegmentID;
       boundary = boundary.contentState;
-      var requiresStyleInsertion = request.stylesToHoist;
+      var requiresStyleInsertion = request.stylesToHoist,
+        requiresViewTransitions =
+          (completedSegments.instructions & NeedUpgradeToViewTransitions) !==
+          NothingSent;
       request.stylesToHoist = !1;
       writeChunk(destination, request.startInlineScript);
       writeChunk(destination, endOfStartTag);
@@ -8200,6 +8366,14 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            writeChunk(
+              destination,
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           (completedSegments.instructions & SentStyleInsertionFunction) ===
           NothingSent
             ? ((completedSegments.instructions |= SentStyleInsertionFunction),
@@ -8212,6 +8386,14 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            writeChunk(
+              destination,
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           writeChunk(destination, completeBoundaryScript1Partial));
       completedSegments = stringToChunk(i.toString(16));
       writeChunk(destination, request.boundaryPrefix);
@@ -8785,11 +8967,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react""),
@@ -9883,6 +10065,8 @@
       SentStyleInsertionFunction = 8,
       SentCompletedShellId = 32,
       SentMarkShellTime = 64,
+      NeedUpgradeToViewTransitions = 128,
+      SentUpgradeToViewTransitions = 256,
       EXISTS = null,
       PRELOAD_NO_CREDS = [];
     Object.freeze(PRELOAD_NO_CREDS);
@@ -10027,12 +10211,12 @@
     stringToPrecomputedChunk('<template data-rsi="""" data-sid=""');
     stringToPrecomputedChunk('"" data-pid=""');
     var completeBoundaryScriptFunctionOnly = stringToPrecomputedChunk(
-      '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
-    );
-    stringToChunk(
-      '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
-    );
-    var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""'),
+        '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
+      ),
+      completeBoundaryUpgradeToViewTransitionsInstruction = stringToChunk(
+        '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+      ),
+      completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""'),
       completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(
         '$RM=new Map;$RR=function(n,w,p){function u(q){this._p=null;q()}for(var r=new Map,t=document,h,b,e=t.querySelectorAll(""link[data-precedence],style[data-precedence]""),v=[],k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href""),b),r.set(b.dataset.precedence,h=b));e=0;b=[];var l,a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1,m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g,f[m++]);g=a._p=new Promise(function(q,x){a.onload=u.bind(a,q);a.onerror=u.bind(a,x)});$RM.set(d,a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=t.head,c.insertBefore(a,c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null,n,w),$RX.bind(null,n,""CSS failed to load""))};$RR(""'
       ),
@@ -10212,20 +10396,14 @@
           return [!1, unsupportedStartTransition];
         },
         useId: function () {
-          var treeId = currentlyRenderingTask.treeContext;
-          var overflow = treeId.overflow;
-          treeId = treeId.id;
-          treeId =
-            (treeId & ~(1 << (32 - clz32(treeId) - 1))).toString(32) + overflow;
-          var resumableState = currentResumableState;
+          var treeId = getTreeId(currentlyRenderingTask.treeContext),
+            resumableState = currentResumableState;
           if (null === resumableState)
             throw Error(
               ""Invalid hook call. Hooks can only be called inside of the body of a function component.""
             );
-          overflow = localIdCounter++;
-          treeId = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
-          0 < overflow && (treeId += ""H"" + overflow.toString(32));
-          return treeId + ""_"";
+          var localId = localIdCounter++;
+          return makeId(resumableState, treeId, localId);
         },
         useSyncExternalStore: function (
           subscribe,
@@ -10598,5 +10776,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-canary-c7862584-20251006"";
+    exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.browser.production.js,530,308,838,"@@ -702,7 +702,8 @@ function getChildFormatContext(parentContext, type, props) {
   }
   return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
     ? createFormatContext(2, null, subtreeScope, null)
-    : parentContext.tagScope !== subtreeScope
+    : null !== parentContext.viewTransition ||
+        parentContext.tagScope !== subtreeScope
       ? createFormatContext(
           parentContext.insertionMode,
           parentContext.selectedValue,
@@ -746,13 +747,38 @@ function getSuspenseContentFormatContext(resumableState, parentContext) {
     resumableState
   );
 }
+function makeId(resumableState, treeId, localId) {
+  resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+  0 < localId && (resumableState += ""H"" + localId.toString(32));
+  return resumableState + ""_"";
+}
 var textSeparator = stringToPrecomputedChunk(""\x3c!-- --\x3e"");
 function pushTextInstance(target, text, renderState, textEmbedded) {
   if ("""" === text) return textEmbedded;
   textEmbedded && target.push(textSeparator);
   target.push(stringToChunk(escapeTextForBrowser(text)));
   return !0;
 }
+function pushViewTransitionAttributes(target, formatContext) {
+  formatContext = formatContext.viewTransition;
+  null !== formatContext &&
+    (""auto"" !== formatContext.name &&
+      (pushStringAttribute(
+        target,
+        ""vt-name"",
+        0 === formatContext.nameIdx
+          ? formatContext.name
+          : formatContext.name + ""_"" + formatContext.nameIdx
+      ),
+      formatContext.nameIdx++),
+    pushStringAttribute(target, ""vt-update"", formatContext.update),
+    ""none"" !== formatContext.enter &&
+      pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+    ""none"" !== formatContext.exit &&
+      pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+    ""none"" !== formatContext.share &&
+      pushStringAttribute(target, ""vt-share"", formatContext.share));
+}
 var styleNameCache = new Map(),
   styleAttributeStart = stringToPrecomputedChunk(' style=""'),
   styleAssign = stringToPrecomputedChunk("":""),
@@ -1185,7 +1211,7 @@ var styleRegex = /(<\/|<)(s)(tyle)/gi;
 function styleReplacer(match, prefix, s, suffix) {
   return """" + prefix + (""s"" === s ? ""\\73 "" : ""\\53 "") + suffix;
 }
-function pushSelfClosing(target, props, tag) {
+function pushSelfClosing(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   for (var propKey in props)
     if (hasOwnProperty.call(props, propKey)) {
@@ -1199,6 +1225,7 @@ function pushSelfClosing(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(endOfStartTagSelfClosing);
   return null;
 }
@@ -1270,7 +1297,7 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag(""script""));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
+function pushStartSingletonElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -1289,11 +1316,12 @@ function pushStartSingletonElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(endOfStartTag);
   pushInnerHTML(target, innerHTML, tag);
   return tag;
 }
-function pushStartGenericElement(target, props, tag) {
+function pushStartGenericElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -1312,6 +1340,7 @@ function pushStartGenericElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(endOfStartTag);
   pushInnerHTML(target, innerHTML, tag);
   return ""string"" === typeof tag
@@ -1374,6 +1403,7 @@ function pushStartInstance(
                 pushAttribute(target$jscomp$0, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       pushInnerHTML(target$jscomp$0, innerHTML, children);
       if (""string"" === typeof children) {
@@ -1412,6 +1442,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
       return children$jscomp$0;
@@ -1499,6 +1530,7 @@ function pushStartInstance(
       null === value$jscomp$0 &&
         null !== defaultValue &&
         (value$jscomp$0 = defaultValue);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       if (null != children$jscomp$2) {
         if (null != value$jscomp$0) throw Error(formatProdErrorMessage(92));
@@ -1590,6 +1622,7 @@ function pushStartInstance(
         ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
         : null !== defaultValue$jscomp$0 &&
           pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTagSelfClosing);
       null != formData &&
         formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1648,6 +1681,7 @@ function pushStartInstance(
         formTarget$jscomp$0,
         name$jscomp$0
       );
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       null != formData$jscomp$0 &&
         formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1735,6 +1769,7 @@ function pushStartInstance(
         pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
       null != formTarget$jscomp$1 &&
         pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       null !== formActionName &&
         (target$jscomp$0.push(startHiddenInputChunk),
@@ -1768,6 +1803,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       return null;
     case ""object"":
@@ -1805,6 +1841,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
       if (""string"" === typeof children$jscomp$5) {
@@ -2086,17 +2123,33 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
           target$jscomp$0,
           props,
-          ""meta""
+          ""meta"",
+          formatContext
         );
       else
         textEmbedded && target$jscomp$0.push(textSeparator),
           (JSCompiler_inline_result$jscomp$7 = isFallback$jscomp$1
             ? null
             : ""string"" === typeof props.charSet
-              ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+              ? pushSelfClosing(
+                  renderState.charsetChunks,
+                  props,
+                  ""meta"",
+                  formatContext
+                )
               : ""viewport"" === props.name
-                ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
-                : pushSelfClosing(renderState.hoistableChunks, props, ""meta""));
+                ? pushSelfClosing(
+                    renderState.viewportChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  )
+                : pushSelfClosing(
+                    renderState.hoistableChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  ));
       return JSCompiler_inline_result$jscomp$7;
     case ""listing"":
     case ""pre"":
@@ -2123,6 +2176,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       if (null != innerHTML$jscomp$7) {
         if (null != children$jscomp$8) throw Error(formatProdErrorMessage(60));
@@ -2234,7 +2288,7 @@ function pushStartInstance(
                   promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
         }
       }
-      return pushSelfClosing(target$jscomp$0, props, ""img"");
+      return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
     case ""base"":
     case ""area"":
     case ""br"":
@@ -2246,7 +2300,7 @@ function pushStartInstance(
     case ""source"":
     case ""track"":
     case ""wbr"":
-      return pushSelfClosing(target$jscomp$0, props, type);
+      return pushSelfClosing(target$jscomp$0, props, type, formatContext);
     case ""annotation-xml"":
     case ""color-profile"":
     case ""font-face"":
@@ -2267,13 +2321,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
           preamble.headChunks,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$9;
     case ""body"":
@@ -2287,13 +2343,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
           preamble$jscomp$0.bodyChunks,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$10;
     case ""html"":
@@ -2307,13 +2365,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
           preamble$jscomp$1.htmlChunks,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$11;
     default:
@@ -2363,12 +2423,13 @@ function pushStartInstance(
               }
             }
           }
+        pushViewTransitionAttributes(target$jscomp$0, formatContext);
         target$jscomp$0.push(endOfStartTag);
         pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
         return children$jscomp$9;
       }
   }
-  return pushStartGenericElement(target$jscomp$0, props, type);
+  return pushStartGenericElement(target$jscomp$0, props, type, formatContext);
 }
 var endTagCache = new Map();
 function endChunkForTag(tag) {
@@ -2549,12 +2610,12 @@ var completeSegmentScript1Full = stringToPrecomputedChunk(
 stringToPrecomputedChunk('<template data-rsi="""" data-sid=""');
 stringToPrecomputedChunk('"" data-pid=""');
 var completeBoundaryScriptFunctionOnly = stringToPrecomputedChunk(
-  '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
-);
-stringToChunk(
-  '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
-);
-var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""'),
+    '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
+  ),
+  completeBoundaryUpgradeToViewTransitionsInstruction = stringToChunk(
+    '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+  ),
+  completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""'),
   completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(
     '$RM=new Map;$RR=function(n,w,p){function u(q){this._p=null;q()}for(var r=new Map,t=document,h,b,e=t.querySelectorAll(""link[data-precedence],style[data-precedence]""),v=[],k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href""),b),r.set(b.dataset.precedence,h=b));e=0;b=[];var l,a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1,m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g,f[m++]);g=a._p=new Promise(function(q,x){a.onload=u.bind(a,q);a.onerror=u.bind(a,x)});$RM.set(d,a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=t.head,c.insertBefore(a,c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null,n,w),$RX.bind(null,n,""CSS failed to load""))};$RR(""'
   ),
@@ -3304,6 +3365,8 @@ function getComponentNameFromType(type) {
       return ""SuspenseList"";
     case REACT_ACTIVITY_TYPE:
       return ""Activity"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {
@@ -3405,6 +3468,11 @@ var classComponentUpdater = {
     enqueueForceUpdate: function () {}
   },
   emptyTreeContext = { id: 1, overflow: """" };
+function getTreeId(context) {
+  var overflow = context.overflow;
+  context = context.id;
+  return (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow;
+}
 function pushTreeContext(baseContext, totalChildren, index) {
   var baseIdWithLeadingBit = baseContext.id;
   baseContext = baseContext.overflow;
@@ -3753,21 +3821,11 @@ var HooksDispatcher = {
       return [!1, unsupportedStartTransition];
     },
     useId: function () {
-      var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
-      var overflow = JSCompiler_inline_result.overflow;
-      JSCompiler_inline_result = JSCompiler_inline_result.id;
-      JSCompiler_inline_result =
-        (
-          JSCompiler_inline_result &
-          ~(1 << (32 - clz32(JSCompiler_inline_result) - 1))
-        ).toString(32) + overflow;
-      var resumableState = currentResumableState;
+      var treeId = getTreeId(currentlyRenderingTask.treeContext),
+        resumableState = currentResumableState;
       if (null === resumableState) throw Error(formatProdErrorMessage(404));
-      overflow = localIdCounter++;
-      JSCompiler_inline_result =
-        ""_"" + resumableState.idPrefix + ""R_"" + JSCompiler_inline_result;
-      0 < overflow && (JSCompiler_inline_result += ""H"" + overflow.toString(32));
-      return JSCompiler_inline_result + ""_"";
+      var localId = localIdCounter++;
+      return makeId(resumableState, treeId, localId);
     },
     useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
       if (void 0 === getServerSnapshot)
@@ -4017,9 +4075,28 @@ function describeComponentStackByType(type) {
       return describeBuiltInComponentFrame(""SuspenseList"");
     case REACT_SUSPENSE_TYPE:
       return describeBuiltInComponentFrame(""Suspense"");
+    case REACT_VIEW_TRANSITION_TYPE:
+      return describeBuiltInComponentFrame(""ViewTransition"");
   }
   return """";
 }
+function getViewTransitionClassName(defaultClass, eventClass) {
+  defaultClass =
+    null == defaultClass || ""string"" === typeof defaultClass
+      ? defaultClass
+      : defaultClass.default;
+  eventClass =
+    null == eventClass || ""string"" === typeof eventClass
+      ? eventClass
+      : eventClass.default;
+  return null == eventClass
+    ? ""auto"" === defaultClass
+      ? null
+      : defaultClass
+    : ""auto"" === eventClass
+      ? null
+      : eventClass;
+}
 function isEligibleForOutlining(request, boundary) {
   return (
     (500 < boundary.byteSize || hasSuspenseyContent(boundary.contentState)) &&
@@ -4750,154 +4827,187 @@ function renderElement(request, task, keyPath, type, props, ref) {
           void 0 === newProps[propName$44] &&
             (newProps[propName$44] = defaultProps[propName$44]);
       }
-      props = newProps;
-      newProps = emptyContextObject;
-      defaultProps = type.contextType;
-      ""object"" === typeof defaultProps &&
-        null !== defaultProps &&
-        (newProps = defaultProps._currentValue);
-      newProps = new type(props, newProps);
-      var initialState = void 0 !== newProps.state ? newProps.state : null;
-      newProps.updater = classComponentUpdater;
-      newProps.props = props;
-      newProps.state = initialState;
-      defaultProps = { queue: [], replace: !1 };
-      newProps._reactInternals = defaultProps;
-      ref = type.contextType;
-      newProps.context =
-        ""object"" === typeof ref && null !== ref
-          ? ref._currentValue
+      var JSCompiler_inline_result = newProps;
+      var context = emptyContextObject,
+        contextType = type.contextType;
+      ""object"" === typeof contextType &&
+        null !== contextType &&
+        (context = contextType._currentValue);
+      var JSCompiler_inline_result$jscomp$0 = new type(
+        JSCompiler_inline_result,
+        context
+      );
+      var initialState =
+        void 0 !== JSCompiler_inline_result$jscomp$0.state
+          ? JSCompiler_inline_result$jscomp$0.state
+          : null;
+      JSCompiler_inline_result$jscomp$0.updater = classComponentUpdater;
+      JSCompiler_inline_result$jscomp$0.props = JSCompiler_inline_result;
+      JSCompiler_inline_result$jscomp$0.state = initialState;
+      var internalInstance = { queue: [], replace: !1 };
+      JSCompiler_inline_result$jscomp$0._reactInternals = internalInstance;
+      var contextType$jscomp$0 = type.contextType;
+      JSCompiler_inline_result$jscomp$0.context =
+        ""object"" === typeof contextType$jscomp$0 &&
+        null !== contextType$jscomp$0
+          ? contextType$jscomp$0._currentValue
           : emptyContextObject;
-      ref = type.getDerivedStateFromProps;
-      ""function"" === typeof ref &&
-        ((ref = ref(props, initialState)),
-        (initialState =
-          null === ref || void 0 === ref
+      var getDerivedStateFromProps = type.getDerivedStateFromProps;
+      if (""function"" === typeof getDerivedStateFromProps) {
+        var partialState = getDerivedStateFromProps(
+          JSCompiler_inline_result,
+          initialState
+        );
+        var JSCompiler_inline_result$jscomp$1 =
+          null === partialState || void 0 === partialState
             ? initialState
-            : assign({}, initialState, ref)),
-        (newProps.state = initialState));
+            : assign({}, initialState, partialState);
+        JSCompiler_inline_result$jscomp$0.state =
+          JSCompiler_inline_result$jscomp$1;
+      }
       if (
         ""function"" !== typeof type.getDerivedStateFromProps &&
-        ""function"" !== typeof newProps.getSnapshotBeforeUpdate &&
-        (""function"" === typeof newProps.UNSAFE_componentWillMount ||
-          ""function"" === typeof newProps.componentWillMount)
-      )
+        ""function"" !==
+          typeof JSCompiler_inline_result$jscomp$0.getSnapshotBeforeUpdate &&
+        (""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount ||
+          ""function"" ===
+            typeof JSCompiler_inline_result$jscomp$0.componentWillMount)
+      ) {
+        var oldState = JSCompiler_inline_result$jscomp$0.state;
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.componentWillMount();
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount();
+        oldState !== JSCompiler_inline_result$jscomp$0.state &&
+          classComponentUpdater.enqueueReplaceState(
+            JSCompiler_inline_result$jscomp$0,
+            JSCompiler_inline_result$jscomp$0.state,
+            null
+          );
         if (
-          ((type = newProps.state),
-          ""function"" === typeof newProps.componentWillMount &&
-            newProps.componentWillMount(),
-          ""function"" === typeof newProps.UNSAFE_componentWillMount &&
-            newProps.UNSAFE_componentWillMount(),
-          type !== newProps.state &&
-            classComponentUpdater.enqueueReplaceState(
-              newProps,
-              newProps.state,
-              null
-            ),
-          null !== defaultProps.queue && 0 < defaultProps.queue.length)
-        )
-          if (
-            ((type = defaultProps.queue),
-            (ref = defaultProps.replace),
-            (defaultProps.queue = null),
-            (defaultProps.replace = !1),
-            ref && 1 === type.length)
-          )
-            newProps.state = type[0];
+          null !== internalInstance.queue &&
+          0 < internalInstance.queue.length
+        ) {
+          var oldQueue = internalInstance.queue,
+            oldReplace = internalInstance.replace;
+          internalInstance.queue = null;
+          internalInstance.replace = !1;
+          if (oldReplace && 1 === oldQueue.length)
+            JSCompiler_inline_result$jscomp$0.state = oldQueue[0];
           else {
-            defaultProps = ref ? type[0] : newProps.state;
-            initialState = !0;
-            for (ref = ref ? 1 : 0; ref < type.length; ref++)
-              (propName$44 = type[ref]),
-                (propName$44 =
-                  ""function"" === typeof propName$44
-                    ? propName$44.call(newProps, defaultProps, props, void 0)
-                    : propName$44),
-                null != propName$44 &&
-                  (initialState
-                    ? ((initialState = !1),
-                      (defaultProps = assign({}, defaultProps, propName$44)))
-                    : assign(defaultProps, propName$44));
-            newProps.state = defaultProps;
+            for (
+              var nextState = oldReplace
+                  ? oldQueue[0]
+                  : JSCompiler_inline_result$jscomp$0.state,
+                dontMutate = !0,
+                i = oldReplace ? 1 : 0;
+              i < oldQueue.length;
+              i++
+            ) {
+              var partial = oldQueue[i],
+                partialState$jscomp$0 =
+                  ""function"" === typeof partial
+                    ? partial.call(
+                        JSCompiler_inline_result$jscomp$0,
+                        nextState,
+                        JSCompiler_inline_result,
+                        void 0
+                      )
+                    : partial;
+              null != partialState$jscomp$0 &&
+                (dontMutate
+                  ? ((dontMutate = !1),
+                    (nextState = assign({}, nextState, partialState$jscomp$0)))
+                  : assign(nextState, partialState$jscomp$0));
+            }
+            JSCompiler_inline_result$jscomp$0.state = nextState;
           }
-        else defaultProps.queue = null;
-      type = newProps.render();
+        } else internalInstance.queue = null;
+      }
+      var nextChildren = JSCompiler_inline_result$jscomp$0.render();
       if (12 === request.status) throw null;
-      props = task.keyPath;
+      var prevKeyPath = task.keyPath;
       task.keyPath = keyPath;
-      renderNodeDestructive(request, task, type, -1);
-      task.keyPath = props;
+      renderNodeDestructive(request, task, nextChildren, -1);
+      task.keyPath = prevKeyPath;
     } else {
-      type = renderWithHooks(request, task, keyPath, type, props, void 0);
+      var value = renderWithHooks(request, task, keyPath, type, props, void 0);
       if (12 === request.status) throw null;
       finishFunctionComponent(
         request,
         task,
         keyPath,
-        type,
+        value,
         0 !== localIdCounter,
         actionStateCounter,
         actionStateMatchingIndex
       );
     }
-  else if (""string"" === typeof type)
-    if (((newProps = task.blockedSegment), null === newProps))
-      (newProps = props.children),
-        (defaultProps = task.formatContext),
-        (initialState = task.keyPath),
-        (task.formatContext = getChildFormatContext(defaultProps, type, props)),
-        (task.keyPath = keyPath),
-        renderNode(request, task, newProps, -1),
-        (task.formatContext = defaultProps),
-        (task.keyPath = initialState);
-    else {
-      initialState = pushStartInstance(
-        newProps.chunks,
+  else if (""string"" === typeof type) {
+    var segment = task.blockedSegment;
+    if (null === segment) {
+      var children = props.children,
+        prevContext = task.formatContext,
+        prevKeyPath$jscomp$0 = task.keyPath;
+      task.formatContext = getChildFormatContext(prevContext, type, props);
+      task.keyPath = keyPath;
+      renderNode(request, task, children, -1);
+      task.formatContext = prevContext;
+      task.keyPath = prevKeyPath$jscomp$0;
+    } else {
+      var children$41 = pushStartInstance(
+        segment.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
         task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
-        newProps.lastPushedText
+        segment.lastPushedText
       );
-      newProps.lastPushedText = !1;
-      defaultProps = task.formatContext;
-      ref = task.keyPath;
+      segment.lastPushedText = !1;
+      var prevContext$42 = task.formatContext,
+        prevKeyPath$43 = task.keyPath;
       task.keyPath = keyPath;
       if (
         3 ===
-        (task.formatContext = getChildFormatContext(defaultProps, type, props))
-          .insertionMode
+        (task.formatContext = getChildFormatContext(
+          prevContext$42,
+          type,
+          props
+        )).insertionMode
       ) {
-        keyPath = createPendingSegment(
+        var preambleSegment = createPendingSegment(
           request,
           0,
           null,
           task.formatContext,
           !1,
           !1
         );
-        newProps.preambleChildren.push(keyPath);
-        task.blockedSegment = keyPath;
+        segment.preambleChildren.push(preambleSegment);
+        task.blockedSegment = preambleSegment;
         try {
-          (keyPath.status = 6),
-            renderNode(request, task, initialState, -1),
-            keyPath.lastPushedText &&
-              keyPath.textEmbedded &&
-              keyPath.chunks.push(textSeparator),
-            (keyPath.status = 1),
-            finishedSegment(request, task.blockedBoundary, keyPath);
+          (preambleSegment.status = 6),
+            renderNode(request, task, children$41, -1),
+            preambleSegment.lastPushedText &&
+              preambleSegment.textEmbedded &&
+              preambleSegment.chunks.push(textSeparator),
+            (preambleSegment.status = 1),
+            finishedSegment(request, task.blockedBoundary, preambleSegment);
         } finally {
-          task.blockedSegment = newProps;
+          task.blockedSegment = segment;
         }
-      } else renderNode(request, task, initialState, -1);
-      task.formatContext = defaultProps;
-      task.keyPath = ref;
+      } else renderNode(request, task, children$41, -1);
+      task.formatContext = prevContext$42;
+      task.keyPath = prevKeyPath$43;
       a: {
-        task = newProps.chunks;
-        request = request.resumableState;
+        var target = segment.chunks,
+          resumableState = request.resumableState;
         switch (type) {
           case ""title"":
           case ""style"":
@@ -4919,131 +5029,221 @@ function renderElement(request, task, keyPath, type, props, ref) {
           case ""wbr"":
             break a;
           case ""body"":
-            if (1 >= defaultProps.insertionMode) {
-              request.hasBody = !0;
+            if (1 >= prevContext$42.insertionMode) {
+              resumableState.hasBody = !0;
               break a;
             }
             break;
           case ""html"":
-            if (0 === defaultProps.insertionMode) {
-              request.hasHtml = !0;
+            if (0 === prevContext$42.insertionMode) {
+              resumableState.hasHtml = !0;
               break a;
             }
             break;
           case ""head"":
-            if (1 >= defaultProps.insertionMode) break a;
+            if (1 >= prevContext$42.insertionMode) break a;
         }
-        task.push(endChunkForTag(type));
+        target.push(endChunkForTag(type));
       }
-      newProps.lastPushedText = !1;
+      segment.lastPushedText = !1;
     }
-  else {
+  } else {
     switch (type) {
       case REACT_LEGACY_HIDDEN_TYPE:
       case REACT_STRICT_MODE_TYPE:
       case REACT_PROFILER_TYPE:
       case REACT_FRAGMENT_TYPE:
-        type = task.keyPath;
+        var prevKeyPath$jscomp$1 = task.keyPath;
         task.keyPath = keyPath;
         renderNodeDestructive(request, task, props.children, -1);
-        task.keyPath = type;
+        task.keyPath = prevKeyPath$jscomp$1;
         return;
       case REACT_ACTIVITY_TYPE:
-        type = task.blockedSegment;
-        null === type
-          ? ""hidden"" !== props.mode &&
-            ((type = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = type))
-          : ""hidden"" !== props.mode &&
-            (type.chunks.push(startActivityBoundary),
-            (type.lastPushedText = !1),
-            (newProps = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = newProps),
-            type.chunks.push(endActivityBoundary),
-            (type.lastPushedText = !1));
+        var segment$jscomp$0 = task.blockedSegment;
+        if (null === segment$jscomp$0) {
+          if (""hidden"" !== props.mode) {
+            var prevKeyPath$jscomp$2 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNode(request, task, props.children, -1);
+            task.keyPath = prevKeyPath$jscomp$2;
+          }
+        } else if (""hidden"" !== props.mode) {
+          segment$jscomp$0.chunks.push(startActivityBoundary);
+          segment$jscomp$0.lastPushedText = !1;
+          var prevKeyPath$46 = task.keyPath;
+          task.keyPath = keyPath;
+          renderNode(request, task, props.children, -1);
+          task.keyPath = prevKeyPath$46;
+          segment$jscomp$0.chunks.push(endActivityBoundary);
+          segment$jscomp$0.lastPushedText = !1;
+        }
         return;
       case REACT_SUSPENSE_LIST_TYPE:
         a: {
-          type = props.children;
-          props = props.revealOrder;
+          var children$jscomp$0 = props.children,
+            revealOrder = props.revealOrder;
           if (
-            ""forwards"" === props ||
-            ""backwards"" === props ||
-            ""unstable_legacy-backwards"" === props
+            ""forwards"" === revealOrder ||
+            ""backwards"" === revealOrder ||
+            ""unstable_legacy-backwards"" === revealOrder
           ) {
-            if (isArrayImpl(type)) {
-              renderSuspenseListRows(request, task, keyPath, type, props);
+            if (isArrayImpl(children$jscomp$0)) {
+              renderSuspenseListRows(
+                request,
+                task,
+                keyPath,
+                children$jscomp$0,
+                revealOrder
+              );
               break a;
             }
-            if ((newProps = getIteratorFn(type)))
-              if ((newProps = newProps.call(type))) {
-                defaultProps = newProps.next();
-                if (!defaultProps.done) {
-                  do defaultProps = newProps.next();
-                  while (!defaultProps.done);
-                  renderSuspenseListRows(request, task, keyPath, type, props);
+            var iteratorFn = getIteratorFn(children$jscomp$0);
+            if (iteratorFn) {
+              var iterator = iteratorFn.call(children$jscomp$0);
+              if (iterator) {
+                var step = iterator.next();
+                if (!step.done) {
+                  do step = iterator.next();
+                  while (!step.done);
+                  renderSuspenseListRows(
+                    request,
+                    task,
+                    keyPath,
+                    children$jscomp$0,
+                    revealOrder
+                  );
                 }
                 break a;
               }
+            }
+          }
+          if (""together"" === revealOrder) {
+            var prevKeyPath$40 = task.keyPath,
+              prevRow = task.row,
+              newRow = (task.row = createSuspenseListRow(null));
+            newRow.boundaries = [];
+            newRow.together = !0;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            0 === --newRow.pendingTasks &&
+              finishSuspenseListRow(request, newRow);
+            task.keyPath = prevKeyPath$40;
+            task.row = prevRow;
+            null !== prevRow &&
+              0 < newRow.pendingTasks &&
+              (prevRow.pendingTasks++, (newRow.next = prevRow));
+          } else {
+            var prevKeyPath$jscomp$3 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            task.keyPath = prevKeyPath$jscomp$3;
           }
-          ""together"" === props
-            ? ((props = task.keyPath),
-              (newProps = task.row),
-              (defaultProps = task.row = createSuspenseListRow(null)),
-              (defaultProps.boundaries = []),
-              (defaultProps.together = !0),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              0 === --defaultProps.pendingTasks &&
-                finishSuspenseListRow(request, defaultProps),
-              (task.keyPath = props),
-              (task.row = newProps),
-              null !== newProps &&
-                0 < defaultProps.pendingTasks &&
-                (newProps.pendingTasks++, (defaultProps.next = newProps)))
-            : ((props = task.keyPath),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              (task.keyPath = props));
         }
         return;
       case REACT_VIEW_TRANSITION_TYPE:
+        var prevContext$jscomp$0 = task.formatContext,
+          prevKeyPath$jscomp$4 = task.keyPath;
+        var resumableState$jscomp$0 = request.resumableState;
+        if (null != props.name && ""auto"" !== props.name)
+          var JSCompiler_inline_result$jscomp$2 = props.name;
+        else {
+          var treeId = getTreeId(task.treeContext);
+          JSCompiler_inline_result$jscomp$2 = makeId(
+            resumableState$jscomp$0,
+            treeId,
+            0
+          );
+        }
+        var autoName = JSCompiler_inline_result$jscomp$2,
+          resumableState$jscomp$1 = request.resumableState,
+          update = getViewTransitionClassName(props.default, props.update),
+          enter = getViewTransitionClassName(props.default, props.enter),
+          exit = getViewTransitionClassName(props.default, props.exit),
+          share = getViewTransitionClassName(props.default, props.share),
+          name = props.name;
+        null == update && (update = ""auto"");
+        null == enter && (enter = ""auto"");
+        null == exit && (exit = ""auto"");
+        if (null == name) {
+          var parentViewTransition = prevContext$jscomp$0.viewTransition;
+          null !== parentViewTransition
+            ? ((name = parentViewTransition.name),
+              (share = parentViewTransition.share))
+            : ((name = ""auto""), (share = ""none""));
+        } else
+          null == share && (share = ""auto""),
+            prevContext$jscomp$0.tagScope & 4 &&
+              (resumableState$jscomp$1.instructions |= 128);
+        prevContext$jscomp$0.tagScope & 8
+          ? (resumableState$jscomp$1.instructions |= 128)
+          : (exit = ""none"");
+        prevContext$jscomp$0.tagScope & 16
+          ? (resumableState$jscomp$1.instructions |= 128)
+          : (enter = ""none"");
+        var viewTransition = {
+            update: update,
+            enter: enter,
+            exit: exit,
+            share: share,
+            name: name,
+            autoName: autoName,
+            nameIdx: 0
+          },
+          subtreeScope = prevContext$jscomp$0.tagScope & -25;
+        subtreeScope =
+          ""none"" !== update ? subtreeScope | 32 : subtreeScope & -33;
+        ""none"" !== enter && (subtreeScope |= 64);
+        var JSCompiler_inline_result$jscomp$3 = createFormatContext(
+          prevContext$jscomp$0.insertionMode,
+          prevContext$jscomp$0.selectedValue,
+          subtreeScope,
+          viewTransition
+        );
+        task.formatContext = JSCompiler_inline_result$jscomp$3;
+        task.keyPath = keyPath;
+        if (null != props.name && ""auto"" !== props.name)
+          renderNodeDestructive(request, task, props.children, -1);
+        else {
+          var prevTreeContext = task.treeContext;
+          task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+          renderNode(request, task, props.children, -1);
+          task.treeContext = prevTreeContext;
+        }
+        task.formatContext = prevContext$jscomp$0;
+        task.keyPath = prevKeyPath$jscomp$4;
+        return;
       case REACT_SCOPE_TYPE:
         throw Error(formatProdErrorMessage(343));
       case REACT_SUSPENSE_TYPE:
         a: if (null !== task.replay) {
-          type = task.keyPath;
-          newProps = task.formatContext;
-          defaultProps = task.row;
+          var prevKeyPath$27 = task.keyPath,
+            prevContext$28 = task.formatContext,
+            prevRow$29 = task.row;
           task.keyPath = keyPath;
           task.formatContext = getSuspenseContentFormatContext(
             request.resumableState,
-            newProps
+            prevContext$28
           );
           task.row = null;
-          keyPath = props.children;
+          var content$30 = props.children;
           try {
-            renderNode(request, task, keyPath, -1);
+            renderNode(request, task, content$30, -1);
           } finally {
-            (task.keyPath = type),
-              (task.formatContext = newProps),
-              (task.row = defaultProps);
+            (task.keyPath = prevKeyPath$27),
+              (task.formatContext = prevContext$28),
+              (task.row = prevRow$29);
           }
         } else {
-          type = task.keyPath;
-          ref = task.formatContext;
-          var prevRow = task.row;
-          propName$44 = task.blockedBoundary;
-          propName = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState,
+          var prevKeyPath$jscomp$5 = task.keyPath,
+            prevContext$jscomp$1 = task.formatContext,
+            prevRow$jscomp$0 = task.row,
+            parentBoundary = task.blockedBoundary,
+            parentPreamble = task.blockedPreamble,
+            parentHoistableState = task.hoistableState,
             parentSegment = task.blockedSegment,
-            fallback = props.fallback;
-          props = props.children;
-          var fallbackAbortSet = new Set();
+            fallback = props.fallback,
+            content = props.children,
+            fallbackAbortSet = new Set();
           var newBoundary =
             2 > task.formatContext.insertionMode
               ? createSuspenseBoundary(
@@ -5082,43 +5282,53 @@ function renderElement(request, task, keyPath, type, props, ref) {
           );
           contentRootSegment.parentFlushed = !0;
           if (null !== request.trackedPostpones) {
-            newProps = task.componentStack;
-            defaultProps = [keyPath[0], ""Suspense Fallback"", keyPath[2]];
-            initialState = [defaultProps[1], defaultProps[2], [], null];
-            request.trackedPostpones.workingMap.set(defaultProps, initialState);
-            newBoundary.trackedFallbackNode = initialState;
+            var suspenseComponentStack = task.componentStack,
+              fallbackKeyPath = [keyPath[0], ""Suspense Fallback"", keyPath[2]],
+              fallbackReplayNode = [
+                fallbackKeyPath[1],
+                fallbackKeyPath[2],
+                [],
+                null
+              ];
+            request.trackedPostpones.workingMap.set(
+              fallbackKeyPath,
+              fallbackReplayNode
+            );
+            newBoundary.trackedFallbackNode = fallbackReplayNode;
             task.blockedSegment = boundarySegment;
             task.blockedPreamble = newBoundary.fallbackPreamble;
-            task.keyPath = defaultProps;
+            task.keyPath = fallbackKeyPath;
             task.formatContext = getSuspenseFallbackFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.componentStack =
-              replaceSuspenseComponentStackWithSuspenseFallbackStack(newProps);
+              replaceSuspenseComponentStackWithSuspenseFallbackStack(
+                suspenseComponentStack
+              );
             boundarySegment.status = 6;
             try {
               renderNode(request, task, fallback, -1),
                 boundarySegment.lastPushedText &&
                   boundarySegment.textEmbedded &&
                   boundarySegment.chunks.push(textSeparator),
                 (boundarySegment.status = 1),
-                finishedSegment(request, propName$44, boundarySegment);
+                finishedSegment(request, parentBoundary, boundarySegment);
             } catch (thrownValue) {
               throw (
                 ((boundarySegment.status = 12 === request.status ? 3 : 4),
                 thrownValue)
               );
             } finally {
               (task.blockedSegment = parentSegment),
-                (task.blockedPreamble = propName),
-                (task.keyPath = type),
-                (task.formatContext = ref);
+                (task.blockedPreamble = parentPreamble),
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1);
             }
-            task = createRenderTask(
+            var suspendedPrimaryTask = createRenderTask(
               request,
               null,
-              props,
+              content,
               -1,
               newBoundary,
               contentRootSegment,
@@ -5133,10 +5343,10 @@ function renderElement(request, task, keyPath, type, props, ref) {
               task.context,
               task.treeContext,
               null,
-              newProps
+              suspenseComponentStack
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedPrimaryTask);
+            request.pingedTasks.push(suspendedPrimaryTask);
           } else {
             task.blockedBoundary = newBoundary;
             task.blockedPreamble = newBoundary.contentPreamble;
@@ -5145,13 +5355,13 @@ function renderElement(request, task, keyPath, type, props, ref) {
             task.keyPath = keyPath;
             task.formatContext = getSuspenseContentFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.row = null;
             contentRootSegment.status = 6;
             try {
               if (
-                (renderNode(request, task, props, -1),
+                (renderNode(request, task, content, -1),
                 contentRootSegment.lastPushedText &&
                   contentRootSegment.textEmbedded &&
                   contentRootSegment.chunks.push(textSeparator),
@@ -5164,48 +5374,43 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   ((newBoundary.status = 1),
                   !isEligibleForOutlining(request, newBoundary))
                 ) {
-                  null !== prevRow &&
-                    0 === --prevRow.pendingTasks &&
-                    finishSuspenseListRow(request, prevRow);
+                  null !== prevRow$jscomp$0 &&
+                    0 === --prevRow$jscomp$0.pendingTasks &&
+                    finishSuspenseListRow(request, prevRow$jscomp$0);
                   0 === request.pendingRootTasks &&
                     task.blockedPreamble &&
                     preparePreamble(request);
                   break a;
                 }
               } else
-                null !== prevRow &&
-                  prevRow.together &&
-                  tryToResolveTogetherRow(request, prevRow);
+                null !== prevRow$jscomp$0 &&
+                  prevRow$jscomp$0.together &&
+                  tryToResolveTogetherRow(request, prevRow$jscomp$0);
             } catch (thrownValue$31) {
-              (newBoundary.status = 4),
-                12 === request.status
-                  ? ((contentRootSegment.status = 3),
-                    (newProps = request.fatalError))
-                  : ((contentRootSegment.status = 4),
-                    (newProps = thrownValue$31)),
-                (defaultProps = getThrownInfo(task.componentStack)),
-                (initialState = logRecoverableError(
-                  request,
-                  newProps,
-                  defaultProps
-                )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+              newBoundary.status = 4;
+              if (12 === request.status) {
+                contentRootSegment.status = 3;
+                var error = request.fatalError;
+              } else (contentRootSegment.status = 4), (error = thrownValue$31);
+              var thrownInfo = getThrownInfo(task.componentStack);
+              var errorDigest = logRecoverableError(request, error, thrownInfo);
+              newBoundary.errorDigest = errorDigest;
+              untrackBoundary(request, newBoundary);
             } finally {
-              (task.blockedBoundary = propName$44),
-                (task.blockedPreamble = propName),
+              (task.blockedBoundary = parentBoundary),
+                (task.blockedPreamble = parentPreamble),
                 (task.hoistableState = parentHoistableState),
                 (task.blockedSegment = parentSegment),
-                (task.keyPath = type),
-                (task.formatContext = ref),
-                (task.row = prevRow);
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1),
+                (task.row = prevRow$jscomp$0);
             }
-            task = createRenderTask(
+            var suspendedFallbackTask = createRenderTask(
               request,
               null,
               fallback,
               -1,
-              propName$44,
+              parentBoundary,
               boundarySegment,
               newBoundary.fallbackPreamble,
               newBoundary.fallbackState,
@@ -5222,33 +5427,33 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 task.componentStack
               )
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedFallbackTask);
+            request.pingedTasks.push(suspendedFallbackTask);
           }
         }
         return;
     }
     if (""object"" === typeof type && null !== type)
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
-          if (""ref"" in props)
-            for (parentSegment in ((newProps = {}), props))
-              ""ref"" !== parentSegment &&
-                (newProps[parentSegment] = props[parentSegment]);
-          else newProps = props;
-          type = renderWithHooks(
+          if (""ref"" in props) {
+            var propsWithoutRef = {};
+            for (var key in props)
+              ""ref"" !== key && (propsWithoutRef[key] = props[key]);
+          } else propsWithoutRef = props;
+          var children$jscomp$1 = renderWithHooks(
             request,
             task,
             keyPath,
             type.render,
-            newProps,
+            propsWithoutRef,
             ref
           );
           finishFunctionComponent(
             request,
             task,
             keyPath,
-            type,
+            children$jscomp$1,
             0 !== localIdCounter,
             actionStateCounter,
             actionStateMatchingIndex
@@ -5258,42 +5463,44 @@ function renderElement(request, task, keyPath, type, props, ref) {
           renderElement(request, task, keyPath, type.type, props, ref);
           return;
         case REACT_CONTEXT_TYPE:
-          defaultProps = props.children;
-          newProps = task.keyPath;
-          props = props.value;
-          initialState = type._currentValue;
-          type._currentValue = props;
-          ref = currentActiveSnapshot;
-          currentActiveSnapshot = type = {
-            parent: ref,
-            depth: null === ref ? 0 : ref.depth + 1,
-            context: type,
-            parentValue: initialState,
-            value: props
-          };
-          task.context = type;
+          var children$jscomp$2 = props.children,
+            prevKeyPath$jscomp$6 = task.keyPath,
+            nextValue = props.value;
+          var prevValue = type._currentValue;
+          type._currentValue = nextValue;
+          var prevNode = currentActiveSnapshot,
+            newNode = {
+              parent: prevNode,
+              depth: null === prevNode ? 0 : prevNode.depth + 1,
+              context: type,
+              parentValue: prevValue,
+              value: nextValue
+            };
+          currentActiveSnapshot = newNode;
+          task.context = newNode;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, defaultProps, -1);
-          request = currentActiveSnapshot;
-          if (null === request) throw Error(formatProdErrorMessage(403));
-          request.context._currentValue = request.parentValue;
-          request = currentActiveSnapshot = request.parent;
-          task.context = request;
-          task.keyPath = newProps;
+          renderNodeDestructive(request, task, children$jscomp$2, -1);
+          var prevSnapshot = currentActiveSnapshot;
+          if (null === prevSnapshot) throw Error(formatProdErrorMessage(403));
+          prevSnapshot.context._currentValue = prevSnapshot.parentValue;
+          var JSCompiler_inline_result$jscomp$4 = (currentActiveSnapshot =
+            prevSnapshot.parent);
+          task.context = JSCompiler_inline_result$jscomp$4;
+          task.keyPath = prevKeyPath$jscomp$6;
           return;
         case REACT_CONSUMER_TYPE:
-          props = props.children;
-          type = props(type._context._currentValue);
-          props = task.keyPath;
+          var render = props.children,
+            newChildren = render(type._context._currentValue),
+            prevKeyPath$jscomp$7 = task.keyPath;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, type, -1);
-          task.keyPath = props;
+          renderNodeDestructive(request, task, newChildren, -1);
+          task.keyPath = prevKeyPath$jscomp$7;
           return;
         case REACT_LAZY_TYPE:
-          newProps = type._init;
-          type = newProps(type._payload);
+          var init = type._init;
+          var Component = init(type._payload);
           if (12 === request.status) throw null;
-          renderElement(request, task, keyPath, type, props, ref);
+          renderElement(request, task, keyPath, Component, props, ref);
           return;
       }
     throw Error(
@@ -6679,7 +6886,8 @@ function flushCompletedBoundary(request, destination, boundary) {
   request = request.renderState;
   i = boundary.rootSegmentID;
   boundary = boundary.contentState;
-  var requiresStyleInsertion = request.stylesToHoist;
+  var requiresStyleInsertion = request.stylesToHoist,
+    requiresViewTransitions = 0 !== (completedSegments.instructions & 128);
   request.stylesToHoist = !1;
   writeChunk(destination, request.startInlineScript);
   writeChunk(destination, endOfStartTag);
@@ -6690,13 +6898,27 @@ function flushCompletedBoundary(request, destination, boundary) {
       0 === (completedSegments.instructions & 2) &&
         ((completedSegments.instructions |= 2),
         writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        writeChunk(
+          destination,
+          completeBoundaryUpgradeToViewTransitionsInstruction
+        )),
       0 === (completedSegments.instructions & 8)
         ? ((completedSegments.instructions |= 8),
           writeChunk(destination, completeBoundaryWithStylesScript1FullPartial))
         : writeChunk(destination, completeBoundaryWithStylesScript1Partial))
     : (0 === (completedSegments.instructions & 2) &&
         ((completedSegments.instructions |= 2),
         writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        writeChunk(
+          destination,
+          completeBoundaryUpgradeToViewTransitionsInstruction
+        )),
       writeChunk(destination, completeBoundaryScript1Partial));
   completedSegments = stringToChunk(i.toString(16));
   writeChunk(destination, request.boundaryPrefix);
@@ -7148,12 +7370,12 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-canary-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       formatProdErrorMessage(
         527,
         isomorphicReactPackageVersion,
-        ""19.3.0-canary-c7862584-20251006""
+        ""19.3.0-canary-a4eb2dfa-20251006""
       )
     );
 }
@@ -7408,4 +7630,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.bun.production.js,527,305,832,"@@ -525,7 +525,8 @@ function getChildFormatContext(parentContext, type, props) {
   }
   return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
     ? createFormatContext(2, null, subtreeScope, null)
-    : parentContext.tagScope !== subtreeScope
+    : null !== parentContext.viewTransition ||
+        parentContext.tagScope !== subtreeScope
       ? createFormatContext(
           parentContext.insertionMode,
           parentContext.selectedValue,
@@ -569,6 +570,11 @@ function getSuspenseContentFormatContext(resumableState, parentContext) {
     resumableState
   );
 }
+function makeId(resumableState, treeId, localId) {
+  resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+  0 < localId && (resumableState += ""H"" + localId.toString(32));
+  return resumableState + ""_"";
+}
 function pushTextInstance(target, text, renderState, textEmbedded) {
   if ("""" === text) return textEmbedded;
   textEmbedded && target.push(""\x3c!-- --\x3e"");
@@ -578,6 +584,26 @@ function pushTextInstance(target, text, renderState, textEmbedded) {
 function pushSegmentFinale(target, renderState, lastPushedText, textEmbedded) {
   lastPushedText && textEmbedded && target.push(""\x3c!-- --\x3e"");
 }
+function pushViewTransitionAttributes(target, formatContext) {
+  formatContext = formatContext.viewTransition;
+  null !== formatContext &&
+    (""auto"" !== formatContext.name &&
+      (pushStringAttribute(
+        target,
+        ""vt-name"",
+        0 === formatContext.nameIdx
+          ? formatContext.name
+          : formatContext.name + ""_"" + formatContext.nameIdx
+      ),
+      formatContext.nameIdx++),
+    pushStringAttribute(target, ""vt-update"", formatContext.update),
+    ""none"" !== formatContext.enter &&
+      pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+    ""none"" !== formatContext.exit &&
+      pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+    ""none"" !== formatContext.share &&
+      pushStringAttribute(target, ""vt-share"", formatContext.share));
+}
 var styleNameCache = new Map();
 function pushStyleAttribute(target, style) {
   if (""object"" !== typeof style)
@@ -930,7 +956,7 @@ var styleRegex = /(<\/|<)(s)(tyle)/gi;
 function styleReplacer(match, prefix, s, suffix) {
   return """" + prefix + (""s"" === s ? ""\\73 "" : ""\\53 "") + suffix;
 }
-function pushSelfClosing(target, props, tag) {
+function pushSelfClosing(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   for (var propKey in props)
     if (hasOwnProperty.call(props, propKey)) {
@@ -947,6 +973,7 @@ function pushSelfClosing(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(""/>"");
   return null;
 }
@@ -1012,7 +1039,7 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag(""script""));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
+function pushStartSingletonElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -1031,11 +1058,12 @@ function pushStartSingletonElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push("">"");
   pushInnerHTML(target, innerHTML, tag);
   return tag;
 }
-function pushStartGenericElement(target, props, tag) {
+function pushStartGenericElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -1054,6 +1082,7 @@ function pushStartGenericElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push("">"");
   pushInnerHTML(target, innerHTML, tag);
   return ""string"" === typeof tag
@@ -1113,6 +1142,7 @@ function pushStartInstance(
                 pushAttribute(target$jscomp$0, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       pushInnerHTML(target$jscomp$0, innerHTML, children);
       if (""string"" === typeof children) {
@@ -1151,6 +1181,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
       return children$jscomp$0;
@@ -1240,6 +1271,7 @@ function pushStartInstance(
       null === value$jscomp$0 &&
         null !== defaultValue &&
         (value$jscomp$0 = defaultValue);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       if (null != children$jscomp$2) {
         if (null != value$jscomp$0)
@@ -1334,6 +1366,7 @@ function pushStartInstance(
         ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
         : null !== defaultValue$jscomp$0 &&
           pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(""/>"");
       null != formData &&
         formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1392,6 +1425,7 @@ function pushStartInstance(
         formTarget$jscomp$0,
         name$jscomp$0
       );
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       null != formData$jscomp$0 &&
         formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1477,6 +1511,7 @@ function pushStartInstance(
         pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
       null != formTarget$jscomp$1 &&
         pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       null !== formActionName &&
         (target$jscomp$0.push('<input type=""hidden""'),
@@ -1510,6 +1545,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       return null;
     case ""object"":
@@ -1547,6 +1583,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
       if (""string"" === typeof children$jscomp$5) {
@@ -1818,17 +1855,33 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
           target$jscomp$0,
           props,
-          ""meta""
+          ""meta"",
+          formatContext
         );
       else
         textEmbedded && target$jscomp$0.push(""\x3c!-- --\x3e""),
           (JSCompiler_inline_result$jscomp$7 = isFallback$jscomp$1
             ? null
             : ""string"" === typeof props.charSet
-              ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+              ? pushSelfClosing(
+                  renderState.charsetChunks,
+                  props,
+                  ""meta"",
+                  formatContext
+                )
               : ""viewport"" === props.name
-                ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
-                : pushSelfClosing(renderState.hoistableChunks, props, ""meta""));
+                ? pushSelfClosing(
+                    renderState.viewportChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  )
+                : pushSelfClosing(
+                    renderState.hoistableChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  ));
       return JSCompiler_inline_result$jscomp$7;
     case ""listing"":
     case ""pre"":
@@ -1855,6 +1908,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push("">"");
       if (null != innerHTML$jscomp$7) {
         if (null != children$jscomp$8)
@@ -1971,7 +2025,7 @@ function pushStartInstance(
                   promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
         }
       }
-      return pushSelfClosing(target$jscomp$0, props, ""img"");
+      return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
     case ""base"":
     case ""area"":
     case ""br"":
@@ -1983,7 +2037,7 @@ function pushStartInstance(
     case ""source"":
     case ""track"":
     case ""wbr"":
-      return pushSelfClosing(target$jscomp$0, props, type);
+      return pushSelfClosing(target$jscomp$0, props, type, formatContext);
     case ""annotation-xml"":
     case ""color-profile"":
     case ""font-face"":
@@ -2003,13 +2057,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
           preamble.headChunks,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$9;
     case ""body"":
@@ -2022,13 +2078,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
           preamble$jscomp$0.bodyChunks,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$10;
     case ""html"":
@@ -2041,13 +2099,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
           preamble$jscomp$1.htmlChunks,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$11;
     default:
@@ -2097,12 +2157,13 @@ function pushStartInstance(
               }
             }
           }
+        pushViewTransitionAttributes(target$jscomp$0, formatContext);
         target$jscomp$0.push("">"");
         pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
         return children$jscomp$9;
       }
   }
-  return pushStartGenericElement(target$jscomp$0, props, type);
+  return pushStartGenericElement(target$jscomp$0, props, type, formatContext);
 }
 var endTagCache = new Map();
 function endChunkForTag(tag) {
@@ -2922,6 +2983,8 @@ function getComponentNameFromType(type) {
       return ""SuspenseList"";
     case REACT_ACTIVITY_TYPE:
       return ""Activity"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {
@@ -3035,6 +3098,11 @@ var classComponentUpdater = {
     enqueueForceUpdate: function () {}
   },
   emptyTreeContext = { id: 1, overflow: """" };
+function getTreeId(context) {
+  var overflow = context.overflow;
+  context = context.id;
+  return (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow;
+}
 function pushTreeContext(baseContext, totalChildren, index) {
   var baseIdWithLeadingBit = baseContext.id;
   baseContext = baseContext.overflow;
@@ -3394,24 +3462,14 @@ var HooksDispatcher = {
       return [!1, unsupportedStartTransition];
     },
     useId: function () {
-      var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
-      var overflow = JSCompiler_inline_result.overflow;
-      JSCompiler_inline_result = JSCompiler_inline_result.id;
-      JSCompiler_inline_result =
-        (
-          JSCompiler_inline_result &
-          ~(1 << (32 - clz32(JSCompiler_inline_result) - 1))
-        ).toString(32) + overflow;
-      var resumableState = currentResumableState;
+      var treeId = getTreeId(currentlyRenderingTask.treeContext),
+        resumableState = currentResumableState;
       if (null === resumableState)
         throw Error(
           ""Invalid hook call. Hooks can only be called inside of the body of a function component.""
         );
-      overflow = localIdCounter++;
-      JSCompiler_inline_result =
-        ""_"" + resumableState.idPrefix + ""R_"" + JSCompiler_inline_result;
-      0 < overflow && (JSCompiler_inline_result += ""H"" + overflow.toString(32));
-      return JSCompiler_inline_result + ""_"";
+      var localId = localIdCounter++;
+      return makeId(resumableState, treeId, localId);
     },
     useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
       if (void 0 === getServerSnapshot)
@@ -3663,9 +3721,28 @@ function describeComponentStackByType(type) {
       return describeBuiltInComponentFrame(""SuspenseList"");
     case REACT_SUSPENSE_TYPE:
       return describeBuiltInComponentFrame(""Suspense"");
+    case REACT_VIEW_TRANSITION_TYPE:
+      return describeBuiltInComponentFrame(""ViewTransition"");
   }
   return """";
 }
+function getViewTransitionClassName(defaultClass, eventClass) {
+  defaultClass =
+    null == defaultClass || ""string"" === typeof defaultClass
+      ? defaultClass
+      : defaultClass.default;
+  eventClass =
+    null == eventClass || ""string"" === typeof eventClass
+      ? eventClass
+      : eventClass.default;
+  return null == eventClass
+    ? ""auto"" === defaultClass
+      ? null
+      : defaultClass
+    : ""auto"" === eventClass
+      ? null
+      : eventClass;
+}
 function isEligibleForOutlining(request, boundary) {
   return (
     (500 < boundary.byteSize || hasSuspenseyContent(boundary.contentState)) &&
@@ -4255,157 +4332,190 @@ function renderElement(request, task, keyPath, type, props, ref) {
           void 0 === newProps[propName$43] &&
             (newProps[propName$43] = defaultProps[propName$43]);
       }
-      props = newProps;
-      newProps = emptyContextObject;
-      defaultProps = type.contextType;
-      ""object"" === typeof defaultProps &&
-        null !== defaultProps &&
-        (newProps = defaultProps._currentValue);
-      newProps = new type(props, newProps);
-      var initialState = void 0 !== newProps.state ? newProps.state : null;
-      newProps.updater = classComponentUpdater;
-      newProps.props = props;
-      newProps.state = initialState;
-      defaultProps = { queue: [], replace: !1 };
-      newProps._reactInternals = defaultProps;
-      ref = type.contextType;
-      newProps.context =
-        ""object"" === typeof ref && null !== ref
-          ? ref._currentValue
+      var JSCompiler_inline_result = newProps;
+      var context = emptyContextObject,
+        contextType = type.contextType;
+      ""object"" === typeof contextType &&
+        null !== contextType &&
+        (context = contextType._currentValue);
+      var JSCompiler_inline_result$jscomp$0 = new type(
+        JSCompiler_inline_result,
+        context
+      );
+      var initialState =
+        void 0 !== JSCompiler_inline_result$jscomp$0.state
+          ? JSCompiler_inline_result$jscomp$0.state
+          : null;
+      JSCompiler_inline_result$jscomp$0.updater = classComponentUpdater;
+      JSCompiler_inline_result$jscomp$0.props = JSCompiler_inline_result;
+      JSCompiler_inline_result$jscomp$0.state = initialState;
+      var internalInstance = { queue: [], replace: !1 };
+      JSCompiler_inline_result$jscomp$0._reactInternals = internalInstance;
+      var contextType$jscomp$0 = type.contextType;
+      JSCompiler_inline_result$jscomp$0.context =
+        ""object"" === typeof contextType$jscomp$0 &&
+        null !== contextType$jscomp$0
+          ? contextType$jscomp$0._currentValue
           : emptyContextObject;
-      ref = type.getDerivedStateFromProps;
-      ""function"" === typeof ref &&
-        ((ref = ref(props, initialState)),
-        (initialState =
-          null === ref || void 0 === ref
+      var getDerivedStateFromProps = type.getDerivedStateFromProps;
+      if (""function"" === typeof getDerivedStateFromProps) {
+        var partialState = getDerivedStateFromProps(
+          JSCompiler_inline_result,
+          initialState
+        );
+        var JSCompiler_inline_result$jscomp$1 =
+          null === partialState || void 0 === partialState
             ? initialState
-            : assign({}, initialState, ref)),
-        (newProps.state = initialState));
+            : assign({}, initialState, partialState);
+        JSCompiler_inline_result$jscomp$0.state =
+          JSCompiler_inline_result$jscomp$1;
+      }
       if (
         ""function"" !== typeof type.getDerivedStateFromProps &&
-        ""function"" !== typeof newProps.getSnapshotBeforeUpdate &&
-        (""function"" === typeof newProps.UNSAFE_componentWillMount ||
-          ""function"" === typeof newProps.componentWillMount)
-      )
+        ""function"" !==
+          typeof JSCompiler_inline_result$jscomp$0.getSnapshotBeforeUpdate &&
+        (""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount ||
+          ""function"" ===
+            typeof JSCompiler_inline_result$jscomp$0.componentWillMount)
+      ) {
+        var oldState = JSCompiler_inline_result$jscomp$0.state;
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.componentWillMount();
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount();
+        oldState !== JSCompiler_inline_result$jscomp$0.state &&
+          classComponentUpdater.enqueueReplaceState(
+            JSCompiler_inline_result$jscomp$0,
+            JSCompiler_inline_result$jscomp$0.state,
+            null
+          );
         if (
-          ((type = newProps.state),
-          ""function"" === typeof newProps.componentWillMount &&
-            newProps.componentWillMount(),
-          ""function"" === typeof newProps.UNSAFE_componentWillMount &&
-            newProps.UNSAFE_componentWillMount(),
-          type !== newProps.state &&
-            classComponentUpdater.enqueueReplaceState(
-              newProps,
-              newProps.state,
-              null
-            ),
-          null !== defaultProps.queue && 0 < defaultProps.queue.length)
-        )
-          if (
-            ((type = defaultProps.queue),
-            (ref = defaultProps.replace),
-            (defaultProps.queue = null),
-            (defaultProps.replace = !1),
-            ref && 1 === type.length)
-          )
-            newProps.state = type[0];
+          null !== internalInstance.queue &&
+          0 < internalInstance.queue.length
+        ) {
+          var oldQueue = internalInstance.queue,
+            oldReplace = internalInstance.replace;
+          internalInstance.queue = null;
+          internalInstance.replace = !1;
+          if (oldReplace && 1 === oldQueue.length)
+            JSCompiler_inline_result$jscomp$0.state = oldQueue[0];
           else {
-            defaultProps = ref ? type[0] : newProps.state;
-            initialState = !0;
-            for (ref = ref ? 1 : 0; ref < type.length; ref++)
-              (propName$43 = type[ref]),
-                (propName$43 =
-                  ""function"" === typeof propName$43
-                    ? propName$43.call(newProps, defaultProps, props, void 0)
-                    : propName$43),
-                null != propName$43 &&
-                  (initialState
-                    ? ((initialState = !1),
-                      (defaultProps = assign({}, defaultProps, propName$43)))
-                    : assign(defaultProps, propName$43));
-            newProps.state = defaultProps;
+            for (
+              var nextState = oldReplace
+                  ? oldQueue[0]
+                  : JSCompiler_inline_result$jscomp$0.state,
+                dontMutate = !0,
+                i = oldReplace ? 1 : 0;
+              i < oldQueue.length;
+              i++
+            ) {
+              var partial = oldQueue[i],
+                partialState$jscomp$0 =
+                  ""function"" === typeof partial
+                    ? partial.call(
+                        JSCompiler_inline_result$jscomp$0,
+                        nextState,
+                        JSCompiler_inline_result,
+                        void 0
+                      )
+                    : partial;
+              null != partialState$jscomp$0 &&
+                (dontMutate
+                  ? ((dontMutate = !1),
+                    (nextState = assign({}, nextState, partialState$jscomp$0)))
+                  : assign(nextState, partialState$jscomp$0));
+            }
+            JSCompiler_inline_result$jscomp$0.state = nextState;
           }
-        else defaultProps.queue = null;
-      type = newProps.render();
+        } else internalInstance.queue = null;
+      }
+      var nextChildren = JSCompiler_inline_result$jscomp$0.render();
       if (12 === request.status) throw null;
-      props = task.keyPath;
+      var prevKeyPath = task.keyPath;
       task.keyPath = keyPath;
-      renderNodeDestructive(request, task, type, -1);
-      task.keyPath = props;
+      renderNodeDestructive(request, task, nextChildren, -1);
+      task.keyPath = prevKeyPath;
     } else {
-      type = renderWithHooks(request, task, keyPath, type, props, void 0);
+      var value = renderWithHooks(request, task, keyPath, type, props, void 0);
       if (12 === request.status) throw null;
       finishFunctionComponent(
         request,
         task,
         keyPath,
-        type,
+        value,
         0 !== localIdCounter,
         actionStateCounter,
         actionStateMatchingIndex
       );
     }
-  else if (""string"" === typeof type)
-    if (((newProps = task.blockedSegment), null === newProps))
-      (newProps = props.children),
-        (defaultProps = task.formatContext),
-        (initialState = task.keyPath),
-        (task.formatContext = getChildFormatContext(defaultProps, type, props)),
-        (task.keyPath = keyPath),
-        renderNode(request, task, newProps, -1),
-        (task.formatContext = defaultProps),
-        (task.keyPath = initialState);
-    else {
-      initialState = pushStartInstance(
-        newProps.chunks,
+  else if (""string"" === typeof type) {
+    var segment = task.blockedSegment;
+    if (null === segment) {
+      var children = props.children,
+        prevContext = task.formatContext,
+        prevKeyPath$jscomp$0 = task.keyPath;
+      task.formatContext = getChildFormatContext(prevContext, type, props);
+      task.keyPath = keyPath;
+      renderNode(request, task, children, -1);
+      task.formatContext = prevContext;
+      task.keyPath = prevKeyPath$jscomp$0;
+    } else {
+      var children$40 = pushStartInstance(
+        segment.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
         task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
-        newProps.lastPushedText
+        segment.lastPushedText
       );
-      newProps.lastPushedText = !1;
-      defaultProps = task.formatContext;
-      ref = task.keyPath;
+      segment.lastPushedText = !1;
+      var prevContext$41 = task.formatContext,
+        prevKeyPath$42 = task.keyPath;
       task.keyPath = keyPath;
       if (
         3 ===
-        (task.formatContext = getChildFormatContext(defaultProps, type, props))
-          .insertionMode
+        (task.formatContext = getChildFormatContext(
+          prevContext$41,
+          type,
+          props
+        )).insertionMode
       ) {
-        keyPath = createPendingSegment(
+        var preambleSegment = createPendingSegment(
           request,
           0,
           null,
           task.formatContext,
           !1,
           !1
         );
-        newProps.preambleChildren.push(keyPath);
-        task.blockedSegment = keyPath;
+        segment.preambleChildren.push(preambleSegment);
+        task.blockedSegment = preambleSegment;
         try {
-          (keyPath.status = 6),
-            renderNode(request, task, initialState, -1),
+          (preambleSegment.status = 6),
+            renderNode(request, task, children$40, -1),
             pushSegmentFinale(
-              keyPath.chunks,
+              preambleSegment.chunks,
               request.renderState,
-              keyPath.lastPushedText,
-              keyPath.textEmbedded
+              preambleSegment.lastPushedText,
+              preambleSegment.textEmbedded
             ),
-            (keyPath.status = 1),
-            finishedSegment(request, task.blockedBoundary, keyPath);
+            (preambleSegment.status = 1),
+            finishedSegment(request, task.blockedBoundary, preambleSegment);
         } finally {
-          task.blockedSegment = newProps;
+          task.blockedSegment = segment;
         }
-      } else renderNode(request, task, initialState, -1);
-      task.formatContext = defaultProps;
-      task.keyPath = ref;
+      } else renderNode(request, task, children$40, -1);
+      task.formatContext = prevContext$41;
+      task.keyPath = prevKeyPath$42;
       a: {
-        task = newProps.chunks;
-        request = request.resumableState;
+        var target = segment.chunks,
+          resumableState = request.resumableState;
         switch (type) {
           case ""title"":
           case ""style"":
@@ -4427,131 +4537,221 @@ function renderElement(request, task, keyPath, type, props, ref) {
           case ""wbr"":
             break a;
           case ""body"":
-            if (1 >= defaultProps.insertionMode) {
-              request.hasBody = !0;
+            if (1 >= prevContext$41.insertionMode) {
+              resumableState.hasBody = !0;
               break a;
             }
             break;
           case ""html"":
-            if (0 === defaultProps.insertionMode) {
-              request.hasHtml = !0;
+            if (0 === prevContext$41.insertionMode) {
+              resumableState.hasHtml = !0;
               break a;
             }
             break;
           case ""head"":
-            if (1 >= defaultProps.insertionMode) break a;
+            if (1 >= prevContext$41.insertionMode) break a;
         }
-        task.push(endChunkForTag(type));
+        target.push(endChunkForTag(type));
       }
-      newProps.lastPushedText = !1;
+      segment.lastPushedText = !1;
     }
-  else {
+  } else {
     switch (type) {
       case REACT_LEGACY_HIDDEN_TYPE:
       case REACT_STRICT_MODE_TYPE:
       case REACT_PROFILER_TYPE:
       case REACT_FRAGMENT_TYPE:
-        type = task.keyPath;
+        var prevKeyPath$jscomp$1 = task.keyPath;
         task.keyPath = keyPath;
         renderNodeDestructive(request, task, props.children, -1);
-        task.keyPath = type;
+        task.keyPath = prevKeyPath$jscomp$1;
         return;
       case REACT_ACTIVITY_TYPE:
-        type = task.blockedSegment;
-        null === type
-          ? ""hidden"" !== props.mode &&
-            ((type = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = type))
-          : ""hidden"" !== props.mode &&
-            (type.chunks.push(""\x3c!--&--\x3e""),
-            (type.lastPushedText = !1),
-            (newProps = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = newProps),
-            type.chunks.push(""\x3c!--/&--\x3e""),
-            (type.lastPushedText = !1));
+        var segment$jscomp$0 = task.blockedSegment;
+        if (null === segment$jscomp$0) {
+          if (""hidden"" !== props.mode) {
+            var prevKeyPath$jscomp$2 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNode(request, task, props.children, -1);
+            task.keyPath = prevKeyPath$jscomp$2;
+          }
+        } else if (""hidden"" !== props.mode) {
+          segment$jscomp$0.chunks.push(""\x3c!--&--\x3e"");
+          segment$jscomp$0.lastPushedText = !1;
+          var prevKeyPath$45 = task.keyPath;
+          task.keyPath = keyPath;
+          renderNode(request, task, props.children, -1);
+          task.keyPath = prevKeyPath$45;
+          segment$jscomp$0.chunks.push(""\x3c!--/&--\x3e"");
+          segment$jscomp$0.lastPushedText = !1;
+        }
         return;
       case REACT_SUSPENSE_LIST_TYPE:
         a: {
-          type = props.children;
-          props = props.revealOrder;
+          var children$jscomp$0 = props.children,
+            revealOrder = props.revealOrder;
           if (
-            ""forwards"" === props ||
-            ""backwards"" === props ||
-            ""unstable_legacy-backwards"" === props
+            ""forwards"" === revealOrder ||
+            ""backwards"" === revealOrder ||
+            ""unstable_legacy-backwards"" === revealOrder
           ) {
-            if (isArrayImpl(type)) {
-              renderSuspenseListRows(request, task, keyPath, type, props);
+            if (isArrayImpl(children$jscomp$0)) {
+              renderSuspenseListRows(
+                request,
+                task,
+                keyPath,
+                children$jscomp$0,
+                revealOrder
+              );
               break a;
             }
-            if ((newProps = getIteratorFn(type)))
-              if ((newProps = newProps.call(type))) {
-                defaultProps = newProps.next();
-                if (!defaultProps.done) {
-                  do defaultProps = newProps.next();
-                  while (!defaultProps.done);
-                  renderSuspenseListRows(request, task, keyPath, type, props);
+            var iteratorFn = getIteratorFn(children$jscomp$0);
+            if (iteratorFn) {
+              var iterator = iteratorFn.call(children$jscomp$0);
+              if (iterator) {
+                var step = iterator.next();
+                if (!step.done) {
+                  do step = iterator.next();
+                  while (!step.done);
+                  renderSuspenseListRows(
+                    request,
+                    task,
+                    keyPath,
+                    children$jscomp$0,
+                    revealOrder
+                  );
                 }
                 break a;
               }
+            }
+          }
+          if (""together"" === revealOrder) {
+            var prevKeyPath$39 = task.keyPath,
+              prevRow = task.row,
+              newRow = (task.row = createSuspenseListRow(null));
+            newRow.boundaries = [];
+            newRow.together = !0;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            0 === --newRow.pendingTasks &&
+              finishSuspenseListRow(request, newRow);
+            task.keyPath = prevKeyPath$39;
+            task.row = prevRow;
+            null !== prevRow &&
+              0 < newRow.pendingTasks &&
+              (prevRow.pendingTasks++, (newRow.next = prevRow));
+          } else {
+            var prevKeyPath$jscomp$3 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            task.keyPath = prevKeyPath$jscomp$3;
           }
-          ""together"" === props
-            ? ((props = task.keyPath),
-              (newProps = task.row),
-              (defaultProps = task.row = createSuspenseListRow(null)),
-              (defaultProps.boundaries = []),
-              (defaultProps.together = !0),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              0 === --defaultProps.pendingTasks &&
-                finishSuspenseListRow(request, defaultProps),
-              (task.keyPath = props),
-              (task.row = newProps),
-              null !== newProps &&
-                0 < defaultProps.pendingTasks &&
-                (newProps.pendingTasks++, (defaultProps.next = newProps)))
-            : ((props = task.keyPath),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              (task.keyPath = props));
         }
         return;
       case REACT_VIEW_TRANSITION_TYPE:
+        var prevContext$jscomp$0 = task.formatContext,
+          prevKeyPath$jscomp$4 = task.keyPath;
+        var resumableState$jscomp$0 = request.resumableState;
+        if (null != props.name && ""auto"" !== props.name)
+          var JSCompiler_inline_result$jscomp$2 = props.name;
+        else {
+          var treeId = getTreeId(task.treeContext);
+          JSCompiler_inline_result$jscomp$2 = makeId(
+            resumableState$jscomp$0,
+            treeId,
+            0
+          );
+        }
+        var autoName = JSCompiler_inline_result$jscomp$2,
+          resumableState$jscomp$1 = request.resumableState,
+          update = getViewTransitionClassName(props.default, props.update),
+          enter = getViewTransitionClassName(props.default, props.enter),
+          exit = getViewTransitionClassName(props.default, props.exit),
+          share = getViewTransitionClassName(props.default, props.share),
+          name = props.name;
+        null == update && (update = ""auto"");
+        null == enter && (enter = ""auto"");
+        null == exit && (exit = ""auto"");
+        if (null == name) {
+          var parentViewTransition = prevContext$jscomp$0.viewTransition;
+          null !== parentViewTransition
+            ? ((name = parentViewTransition.name),
+              (share = parentViewTransition.share))
+            : ((name = ""auto""), (share = ""none""));
+        } else
+          null == share && (share = ""auto""),
+            prevContext$jscomp$0.tagScope & 4 &&
+              (resumableState$jscomp$1.instructions |= 128);
+        prevContext$jscomp$0.tagScope & 8
+          ? (resumableState$jscomp$1.instructions |= 128)
+          : (exit = ""none"");
+        prevContext$jscomp$0.tagScope & 16
+          ? (resumableState$jscomp$1.instructions |= 128)
+          : (enter = ""none"");
+        var viewTransition = {
+            update: update,
+            enter: enter,
+            exit: exit,
+            share: share,
+            name: name,
+            autoName: autoName,
+            nameIdx: 0
+          },
+          subtreeScope = prevContext$jscomp$0.tagScope & -25;
+        subtreeScope =
+          ""none"" !== update ? subtreeScope | 32 : subtreeScope & -33;
+        ""none"" !== enter && (subtreeScope |= 64);
+        var JSCompiler_inline_result$jscomp$3 = createFormatContext(
+          prevContext$jscomp$0.insertionMode,
+          prevContext$jscomp$0.selectedValue,
+          subtreeScope,
+          viewTransition
+        );
+        task.formatContext = JSCompiler_inline_result$jscomp$3;
+        task.keyPath = keyPath;
+        if (null != props.name && ""auto"" !== props.name)
+          renderNodeDestructive(request, task, props.children, -1);
+        else {
+          var prevTreeContext = task.treeContext;
+          task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+          renderNode(request, task, props.children, -1);
+          task.treeContext = prevTreeContext;
+        }
+        task.formatContext = prevContext$jscomp$0;
+        task.keyPath = prevKeyPath$jscomp$4;
+        return;
       case REACT_SCOPE_TYPE:
         throw Error(""ReactDOMServer does not yet support scope components."");
       case REACT_SUSPENSE_TYPE:
         a: if (null !== task.replay) {
-          type = task.keyPath;
-          newProps = task.formatContext;
-          defaultProps = task.row;
+          var prevKeyPath$26 = task.keyPath,
+            prevContext$27 = task.formatContext,
+            prevRow$28 = task.row;
           task.keyPath = keyPath;
           task.formatContext = getSuspenseContentFormatContext(
             request.resumableState,
-            newProps
+            prevContext$27
           );
           task.row = null;
-          keyPath = props.children;
+          var content$29 = props.children;
           try {
-            renderNode(request, task, keyPath, -1);
+            renderNode(request, task, content$29, -1);
           } finally {
-            (task.keyPath = type),
-              (task.formatContext = newProps),
-              (task.row = defaultProps);
+            (task.keyPath = prevKeyPath$26),
+              (task.formatContext = prevContext$27),
+              (task.row = prevRow$28);
           }
         } else {
-          type = task.keyPath;
-          ref = task.formatContext;
-          var prevRow = task.row;
-          propName$43 = task.blockedBoundary;
-          propName = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState,
+          var prevKeyPath$jscomp$5 = task.keyPath,
+            prevContext$jscomp$1 = task.formatContext,
+            prevRow$jscomp$0 = task.row,
+            parentBoundary = task.blockedBoundary,
+            parentPreamble = task.blockedPreamble,
+            parentHoistableState = task.hoistableState,
             parentSegment = task.blockedSegment,
-            fallback = props.fallback;
-          props = props.children;
-          var fallbackAbortSet = new Set();
+            fallback = props.fallback,
+            content = props.children,
+            fallbackAbortSet = new Set();
           var newBoundary =
             2 > task.formatContext.insertionMode
               ? createSuspenseBoundary(
@@ -4590,20 +4790,30 @@ function renderElement(request, task, keyPath, type, props, ref) {
           );
           contentRootSegment.parentFlushed = !0;
           if (null !== request.trackedPostpones) {
-            newProps = task.componentStack;
-            defaultProps = [keyPath[0], ""Suspense Fallback"", keyPath[2]];
-            initialState = [defaultProps[1], defaultProps[2], [], null];
-            request.trackedPostpones.workingMap.set(defaultProps, initialState);
-            newBoundary.trackedFallbackNode = initialState;
+            var suspenseComponentStack = task.componentStack,
+              fallbackKeyPath = [keyPath[0], ""Suspense Fallback"", keyPath[2]],
+              fallbackReplayNode = [
+                fallbackKeyPath[1],
+                fallbackKeyPath[2],
+                [],
+                null
+              ];
+            request.trackedPostpones.workingMap.set(
+              fallbackKeyPath,
+              fallbackReplayNode
+            );
+            newBoundary.trackedFallbackNode = fallbackReplayNode;
             task.blockedSegment = boundarySegment;
             task.blockedPreamble = newBoundary.fallbackPreamble;
-            task.keyPath = defaultProps;
+            task.keyPath = fallbackKeyPath;
             task.formatContext = getSuspenseFallbackFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.componentStack =
-              replaceSuspenseComponentStackWithSuspenseFallbackStack(newProps);
+              replaceSuspenseComponentStackWithSuspenseFallbackStack(
+                suspenseComponentStack
+              );
             boundarySegment.status = 6;
             try {
               renderNode(request, task, fallback, -1),
@@ -4614,22 +4824,22 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   boundarySegment.textEmbedded
                 ),
                 (boundarySegment.status = 1),
-                finishedSegment(request, propName$43, boundarySegment);
+                finishedSegment(request, parentBoundary, boundarySegment);
             } catch (thrownValue) {
               throw (
                 ((boundarySegment.status = 12 === request.status ? 3 : 4),
                 thrownValue)
               );
             } finally {
               (task.blockedSegment = parentSegment),
-                (task.blockedPreamble = propName),
-                (task.keyPath = type),
-                (task.formatContext = ref);
+                (task.blockedPreamble = parentPreamble),
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1);
             }
-            task = createRenderTask(
+            var suspendedPrimaryTask = createRenderTask(
               request,
               null,
-              props,
+              content,
               -1,
               newBoundary,
               contentRootSegment,
@@ -4644,10 +4854,10 @@ function renderElement(request, task, keyPath, type, props, ref) {
               task.context,
               task.treeContext,
               null,
-              newProps
+              suspenseComponentStack
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedPrimaryTask);
+            request.pingedTasks.push(suspendedPrimaryTask);
           } else {
             task.blockedBoundary = newBoundary;
             task.blockedPreamble = newBoundary.contentPreamble;
@@ -4656,13 +4866,13 @@ function renderElement(request, task, keyPath, type, props, ref) {
             task.keyPath = keyPath;
             task.formatContext = getSuspenseContentFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.row = null;
             contentRootSegment.status = 6;
             try {
               if (
-                (renderNode(request, task, props, -1),
+                (renderNode(request, task, content, -1),
                 pushSegmentFinale(
                   contentRootSegment.chunks,
                   request.renderState,
@@ -4678,48 +4888,43 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   ((newBoundary.status = 1),
                   !isEligibleForOutlining(request, newBoundary))
                 ) {
-                  null !== prevRow &&
-                    0 === --prevRow.pendingTasks &&
-                    finishSuspenseListRow(request, prevRow);
+                  null !== prevRow$jscomp$0 &&
+                    0 === --prevRow$jscomp$0.pendingTasks &&
+                    finishSuspenseListRow(request, prevRow$jscomp$0);
                   0 === request.pendingRootTasks &&
                     task.blockedPreamble &&
                     preparePreamble(request);
                   break a;
                 }
               } else
-                null !== prevRow &&
-                  prevRow.together &&
-                  tryToResolveTogetherRow(request, prevRow);
+                null !== prevRow$jscomp$0 &&
+                  prevRow$jscomp$0.together &&
+                  tryToResolveTogetherRow(request, prevRow$jscomp$0);
             } catch (thrownValue$30) {
-              (newBoundary.status = 4),
-                12 === request.status
-                  ? ((contentRootSegment.status = 3),
-                    (newProps = request.fatalError))
-                  : ((contentRootSegment.status = 4),
-                    (newProps = thrownValue$30)),
-                (defaultProps = getThrownInfo(task.componentStack)),
-                (initialState = logRecoverableError(
-                  request,
-                  newProps,
-                  defaultProps
-                )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+              newBoundary.status = 4;
+              if (12 === request.status) {
+                contentRootSegment.status = 3;
+                var error = request.fatalError;
+              } else (contentRootSegment.status = 4), (error = thrownValue$30);
+              var thrownInfo = getThrownInfo(task.componentStack);
+              var errorDigest = logRecoverableError(request, error, thrownInfo);
+              newBoundary.errorDigest = errorDigest;
+              untrackBoundary(request, newBoundary);
             } finally {
-              (task.blockedBoundary = propName$43),
-                (task.blockedPreamble = propName),
+              (task.blockedBoundary = parentBoundary),
+                (task.blockedPreamble = parentPreamble),
                 (task.hoistableState = parentHoistableState),
                 (task.blockedSegment = parentSegment),
-                (task.keyPath = type),
-                (task.formatContext = ref),
-                (task.row = prevRow);
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1),
+                (task.row = prevRow$jscomp$0);
             }
-            task = createRenderTask(
+            var suspendedFallbackTask = createRenderTask(
               request,
               null,
               fallback,
               -1,
-              propName$43,
+              parentBoundary,
               boundarySegment,
               newBoundary.fallbackPreamble,
               newBoundary.fallbackState,
@@ -4736,33 +4941,33 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 task.componentStack
               )
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedFallbackTask);
+            request.pingedTasks.push(suspendedFallbackTask);
           }
         }
         return;
     }
     if (""object"" === typeof type && null !== type)
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
-          if (""ref"" in props)
-            for (parentSegment in ((newProps = {}), props))
-              ""ref"" !== parentSegment &&
-                (newProps[parentSegment] = props[parentSegment]);
-          else newProps = props;
-          type = renderWithHooks(
+          if (""ref"" in props) {
+            var propsWithoutRef = {};
+            for (var key in props)
+              ""ref"" !== key && (propsWithoutRef[key] = props[key]);
+          } else propsWithoutRef = props;
+          var children$jscomp$1 = renderWithHooks(
             request,
             task,
             keyPath,
             type.render,
-            newProps,
+            propsWithoutRef,
             ref
           );
           finishFunctionComponent(
             request,
             task,
             keyPath,
-            type,
+            children$jscomp$1,
             0 !== localIdCounter,
             actionStateCounter,
             actionStateMatchingIndex
@@ -4772,45 +4977,47 @@ function renderElement(request, task, keyPath, type, props, ref) {
           renderElement(request, task, keyPath, type.type, props, ref);
           return;
         case REACT_CONTEXT_TYPE:
-          defaultProps = props.children;
-          newProps = task.keyPath;
-          props = props.value;
-          initialState = type._currentValue;
-          type._currentValue = props;
-          ref = currentActiveSnapshot;
-          currentActiveSnapshot = type = {
-            parent: ref,
-            depth: null === ref ? 0 : ref.depth + 1,
-            context: type,
-            parentValue: initialState,
-            value: props
-          };
-          task.context = type;
+          var children$jscomp$2 = props.children,
+            prevKeyPath$jscomp$6 = task.keyPath,
+            nextValue = props.value;
+          var prevValue = type._currentValue;
+          type._currentValue = nextValue;
+          var prevNode = currentActiveSnapshot,
+            newNode = {
+              parent: prevNode,
+              depth: null === prevNode ? 0 : prevNode.depth + 1,
+              context: type,
+              parentValue: prevValue,
+              value: nextValue
+            };
+          currentActiveSnapshot = newNode;
+          task.context = newNode;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, defaultProps, -1);
-          request = currentActiveSnapshot;
-          if (null === request)
+          renderNodeDestructive(request, task, children$jscomp$2, -1);
+          var prevSnapshot = currentActiveSnapshot;
+          if (null === prevSnapshot)
             throw Error(
               ""Tried to pop a Context at the root of the app. This is a bug in React.""
             );
-          request.context._currentValue = request.parentValue;
-          request = currentActiveSnapshot = request.parent;
-          task.context = request;
-          task.keyPath = newProps;
+          prevSnapshot.context._currentValue = prevSnapshot.parentValue;
+          var JSCompiler_inline_result$jscomp$4 = (currentActiveSnapshot =
+            prevSnapshot.parent);
+          task.context = JSCompiler_inline_result$jscomp$4;
+          task.keyPath = prevKeyPath$jscomp$6;
           return;
         case REACT_CONSUMER_TYPE:
-          props = props.children;
-          type = props(type._context._currentValue);
-          props = task.keyPath;
+          var render = props.children,
+            newChildren = render(type._context._currentValue),
+            prevKeyPath$jscomp$7 = task.keyPath;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, type, -1);
-          task.keyPath = props;
+          renderNodeDestructive(request, task, newChildren, -1);
+          task.keyPath = prevKeyPath$jscomp$7;
           return;
         case REACT_LAZY_TYPE:
-          newProps = type._init;
-          type = newProps(type._payload);
+          var init = type._init;
+          var Component = init(type._payload);
           if (12 === request.status) throw null;
-          renderElement(request, task, keyPath, type, props, ref);
+          renderElement(request, task, keyPath, Component, props, ref);
           return;
       }
     throw Error(
@@ -6227,7 +6434,8 @@ function flushCompletedBoundary(request, destination, boundary) {
   request = request.renderState;
   i = boundary.rootSegmentID;
   boundary = boundary.contentState;
-  var requiresStyleInsertion = request.stylesToHoist;
+  var requiresStyleInsertion = request.stylesToHoist,
+    requiresViewTransitions = 0 !== (completedSegments.instructions & 128);
   request.stylesToHoist = !1;
   writeChunk(destination, request.startInlineScript);
   writeChunk(destination, "">"");
@@ -6244,6 +6452,13 @@ function flushCompletedBoundary(request, destination, boundary) {
           destination,
           '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
         )),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        writeChunk(
+          destination,
+          '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+        )),
       0 === (completedSegments.instructions & 8)
         ? ((completedSegments.instructions |= 8),
           writeChunk(
@@ -6257,6 +6472,13 @@ function flushCompletedBoundary(request, destination, boundary) {
           destination,
           '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
         )),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        writeChunk(
+          destination,
+          '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+        )),
       writeChunk(destination, '$RC(""'));
   completedSegments = i.toString(16);
   writeChunk(destination, request.boundaryPrefix);
@@ -6644,15 +6866,15 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
     parentNode[2].push(node);
   }
 }
-var isomorphicReactPackageVersion$jscomp$inline_821 = React.version;
+var isomorphicReactPackageVersion$jscomp$inline_820 = React.version;
 if (
-  ""19.3.0-canary-c7862584-20251006"" !==
-  isomorphicReactPackageVersion$jscomp$inline_821
+  ""19.3.0-canary-a4eb2dfa-20251006"" !==
+  isomorphicReactPackageVersion$jscomp$inline_820
 )
   throw Error(
     'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
-      (isomorphicReactPackageVersion$jscomp$inline_821 +
-        ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+      (isomorphicReactPackageVersion$jscomp$inline_820 +
+        ""\n  - react-dom:  19.3.0-canary-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -6743,4 +6965,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.edge.development.js,230,52,282,"@@ -86,6 +86,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -1137,7 +1139,8 @@
       return parentContext.insertionMode >= HTML_TABLE_MODE ||
         parentContext.insertionMode < HTML_MODE
         ? createFormatContext(HTML_MODE, null, subtreeScope, null)
-        : parentContext.tagScope !== subtreeScope
+        : null !== parentContext.viewTransition ||
+            parentContext.tagScope !== subtreeScope
           ? createFormatContext(
               parentContext.insertionMode,
               parentContext.selectedValue,
@@ -1160,7 +1163,8 @@
           };
     }
     function getSuspenseFallbackFormatContext(resumableState, parentContext) {
-      parentContext.tagScope & 32 && (resumableState.instructions |= 128);
+      parentContext.tagScope & 32 &&
+        (resumableState.instructions |= NeedUpgradeToViewTransitions);
       return createFormatContext(
         parentContext.insertionMode,
         parentContext.selectedValue,
@@ -1181,12 +1185,37 @@
         resumableState
       );
     }
+    function makeId(resumableState, treeId, localId) {
+      resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+      0 < localId && (resumableState += ""H"" + localId.toString(32));
+      return resumableState + ""_"";
+    }
     function pushTextInstance(target, text, renderState, textEmbedded) {
       if ("""" === text) return textEmbedded;
       textEmbedded && target.push(textSeparator);
       target.push(stringToChunk(escapeTextForBrowser(text)));
       return !0;
     }
+    function pushViewTransitionAttributes(target, formatContext) {
+      formatContext = formatContext.viewTransition;
+      null !== formatContext &&
+        (""auto"" !== formatContext.name &&
+          (pushStringAttribute(
+            target,
+            ""vt-name"",
+            0 === formatContext.nameIdx
+              ? formatContext.name
+              : formatContext.name + ""_"" + formatContext.nameIdx
+          ),
+          formatContext.nameIdx++),
+        pushStringAttribute(target, ""vt-update"", formatContext.update),
+        ""none"" !== formatContext.enter &&
+          pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+        ""none"" !== formatContext.exit &&
+          pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+        ""none"" !== formatContext.share &&
+          pushStringAttribute(target, ""vt-share"", formatContext.share));
+    }
     function pushStyleAttribute(target, style) {
       if (""object"" !== typeof style)
         throw Error(
@@ -1749,7 +1778,7 @@
       checkHtmlStringCoercion(styleText);
       return ("""" + styleText).replace(styleRegex, styleReplacer);
     }
-    function pushSelfClosing(target, props, tag) {
+    function pushSelfClosing(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       for (var propKey in props)
         if (hasOwnProperty.call(props, propKey)) {
@@ -1766,6 +1795,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTagSelfClosing);
       return null;
     }
@@ -1843,7 +1873,7 @@
       target.push(endChunkForTag(""script""));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
+    function pushStartSingletonElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1862,11 +1892,12 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return tag;
     }
-    function pushStartGenericElement(target, props, tag) {
+    function pushStartGenericElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1885,6 +1916,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return ""string"" === typeof tag
@@ -1990,6 +2022,7 @@
                     pushAttribute(target$jscomp$0, propKey, propValue);
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML, children);
           if (""string"" === typeof children) {
@@ -2038,6 +2071,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
           return children$jscomp$0;
@@ -2151,6 +2185,7 @@
           null === value$jscomp$0 &&
             null !== defaultValue &&
             (value$jscomp$0 = defaultValue);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != children$jscomp$2) {
             console.error(
@@ -2280,6 +2315,7 @@
             ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
             : null !== defaultValue$jscomp$0 &&
               pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTagSelfClosing);
           null != formData &&
             formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2346,6 +2382,7 @@
             formTarget$jscomp$0,
             name$jscomp$0
           );
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null != formData$jscomp$0 &&
             formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2445,6 +2482,7 @@
             pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
           null != formTarget$jscomp$1 &&
             pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null !== formActionName &&
             (target$jscomp$0.push(startHiddenInputChunk),
@@ -2483,6 +2521,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           return null;
         case ""object"":
@@ -2528,6 +2567,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
           if (""string"" === typeof children$jscomp$5) {
@@ -2919,20 +2959,32 @@
             var JSCompiler_inline_result$jscomp$8 = pushSelfClosing(
               target$jscomp$0,
               props,
-              ""meta""
+              ""meta"",
+              formatContext
             );
           else
             textEmbedded && target$jscomp$0.push(textSeparator),
               (JSCompiler_inline_result$jscomp$8 = isFallback$jscomp$1
                 ? null
                 : ""string"" === typeof props.charSet
-                  ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+                  ? pushSelfClosing(
+                      renderState.charsetChunks,
+                      props,
+                      ""meta"",
+                      formatContext
+                    )
                   : ""viewport"" === props.name
-                    ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
+                    ? pushSelfClosing(
+                        renderState.viewportChunks,
+                        props,
+                        ""meta"",
+                        formatContext
+                      )
                     : pushSelfClosing(
                         renderState.hoistableChunks,
                         props,
-                        ""meta""
+                        ""meta"",
+                        formatContext
                       ));
           return JSCompiler_inline_result$jscomp$8;
         case ""listing"":
@@ -2960,6 +3012,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != innerHTML$jscomp$7) {
             if (null != children$jscomp$10)
@@ -3078,7 +3131,7 @@
                       promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
             }
           }
-          return pushSelfClosing(target$jscomp$0, props, ""img"");
+          return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
         case ""base"":
         case ""area"":
         case ""br"":
@@ -3090,7 +3143,7 @@
         case ""source"":
         case ""track"":
         case ""wbr"":
-          return pushSelfClosing(target$jscomp$0, props, type);
+          return pushSelfClosing(target$jscomp$0, props, type, formatContext);
         case ""annotation-xml"":
         case ""color-profile"":
         case ""font-face"":
@@ -3111,13 +3164,15 @@
             var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
               preamble.headChunks,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$9;
         case ""body"":
@@ -3131,13 +3186,15 @@
             var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
               preamble$jscomp$0.bodyChunks,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$10;
         case ""html"":
@@ -3151,13 +3208,15 @@
             var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
               preamble$jscomp$1.htmlChunks,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$11;
         default:
@@ -3211,6 +3270,7 @@
                   }
                 }
               }
+            pushViewTransitionAttributes(target$jscomp$0, formatContext);
             target$jscomp$0.push(endOfStartTag);
             pushInnerHTML(
               target$jscomp$0,
@@ -3220,7 +3280,12 @@
             return children$jscomp$11;
           }
       }
-      return pushStartGenericElement(target$jscomp$0, props, type);
+      return pushStartGenericElement(
+        target$jscomp$0,
+        props,
+        type,
+        formatContext
+      );
     }
     function endChunkForTag(tag) {
       var chunk = endTagCache.get(tag);
@@ -3765,6 +3830,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -3894,6 +3961,13 @@
         ),
         (didWarnAboutNoopUpdateForComponent[warningKey] = !0));
     }
+    function getTreeId(context) {
+      var overflow = context.overflow;
+      context = context.id;
+      return (
+        (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow
+      );
+    }
     function pushTreeContext(baseContext, totalChildren, index) {
       var baseIdWithLeadingBit = baseContext.id;
       baseContext = baseContext.overflow;
@@ -4525,9 +4599,28 @@
           return describeBuiltInComponentFrame(""SuspenseList"");
         case REACT_SUSPENSE_TYPE:
           return describeBuiltInComponentFrame(""Suspense"");
+        case REACT_VIEW_TRANSITION_TYPE:
+          return describeBuiltInComponentFrame(""ViewTransition"");
       }
       return """";
     }
+    function getViewTransitionClassName(defaultClass, eventClass) {
+      defaultClass =
+        null == defaultClass || ""string"" === typeof defaultClass
+          ? defaultClass
+          : defaultClass.default;
+      eventClass =
+        null == eventClass || ""string"" === typeof eventClass
+          ? eventClass
+          : eventClass.default;
+      return null == eventClass
+        ? ""auto"" === defaultClass
+          ? null
+          : defaultClass
+        : ""auto"" === eventClass
+          ? null
+          : eventClass;
+    }
     function resetOwnerStackLimit() {
       var now = getCurrentTime();
       1e3 < now - lastResetTime &&
@@ -6098,6 +6191,76 @@
             }
             return;
           case REACT_VIEW_TRANSITION_TYPE:
+            var prevContext$jscomp$0 = task.formatContext,
+              prevKeyPath$jscomp$4 = task.keyPath;
+            var resumableState$jscomp$0 = request.resumableState;
+            if (null != props.name && ""auto"" !== props.name)
+              var autoName = props.name;
+            else {
+              var treeId = getTreeId(task.treeContext);
+              autoName = makeId(resumableState$jscomp$0, treeId, 0);
+            }
+            var resumableState$jscomp$1 = request.resumableState,
+              update = getViewTransitionClassName(props.default, props.update),
+              enter = getViewTransitionClassName(props.default, props.enter),
+              exit = getViewTransitionClassName(props.default, props.exit),
+              share = getViewTransitionClassName(props.default, props.share),
+              name$jscomp$0 = props.name,
+              autoName$jscomp$0 = autoName;
+            null == update && (update = ""auto"");
+            null == enter && (enter = ""auto"");
+            null == exit && (exit = ""auto"");
+            if (null == name$jscomp$0) {
+              var parentViewTransition = prevContext$jscomp$0.viewTransition;
+              null !== parentViewTransition
+                ? ((name$jscomp$0 = parentViewTransition.name),
+                  (share = parentViewTransition.share))
+                : ((name$jscomp$0 = ""auto""), (share = ""none""));
+            } else
+              null == share && (share = ""auto""),
+                prevContext$jscomp$0.tagScope & 4 &&
+                  (resumableState$jscomp$1.instructions |=
+                    NeedUpgradeToViewTransitions);
+            prevContext$jscomp$0.tagScope & 8
+              ? (resumableState$jscomp$1.instructions |=
+                  NeedUpgradeToViewTransitions)
+              : (exit = ""none"");
+            prevContext$jscomp$0.tagScope & 16
+              ? (resumableState$jscomp$1.instructions |=
+                  NeedUpgradeToViewTransitions)
+              : (enter = ""none"");
+            var viewTransition = {
+                update: update,
+                enter: enter,
+                exit: exit,
+                share: share,
+                name: name$jscomp$0,
+                autoName: autoName$jscomp$0,
+                nameIdx: 0
+              },
+              subtreeScope = prevContext$jscomp$0.tagScope & -25;
+            subtreeScope =
+              ""none"" !== update ? subtreeScope | 32 : subtreeScope & -33;
+            ""none"" !== enter && (subtreeScope |= 64);
+            var JSCompiler_inline_result$jscomp$0 = createFormatContext(
+              prevContext$jscomp$0.insertionMode,
+              prevContext$jscomp$0.selectedValue,
+              subtreeScope,
+              viewTransition
+            );
+            task.formatContext = JSCompiler_inline_result$jscomp$0;
+            task.keyPath = keyPath;
+            if (null != props.name && ""auto"" !== props.name)
+              renderNodeDestructive(request, task, props.children, -1);
+            else {
+              var prevTreeContext = task.treeContext;
+              task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+              renderNode(request, task, props.children, -1);
+              task.treeContext = prevTreeContext;
+            }
+            task.formatContext = prevContext$jscomp$0;
+            task.keyPath = prevKeyPath$jscomp$4;
+            return;
           case REACT_SCOPE_TYPE:
             throw Error(
               ""ReactDOMServer does not yet support scope components.""
@@ -6122,8 +6285,8 @@
                   (task.row = _prevRow);
               }
             } else {
-              var prevKeyPath$jscomp$4 = task.keyPath,
-                prevContext$jscomp$0 = task.formatContext,
+              var prevKeyPath$jscomp$5 = task.keyPath,
+                prevContext$jscomp$1 = task.formatContext,
                 prevRow$jscomp$0 = task.row,
                 parentBoundary = task.blockedBoundary,
                 parentPreamble = task.blockedPreamble,
@@ -6192,7 +6355,7 @@
                 task.keyPath = fallbackKeyPath;
                 task.formatContext = getSuspenseFallbackFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.componentStack =
                   replaceSuspenseComponentStackWithSuspenseFallbackStack(
@@ -6215,8 +6378,8 @@
                 } finally {
                   (task.blockedSegment = parentSegment),
                     (task.blockedPreamble = parentPreamble),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0);
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1);
                 }
                 var suspendedPrimaryTask = createRenderTask(
                   request,
@@ -6250,7 +6413,7 @@
                 task.keyPath = keyPath;
                 task.formatContext = getSuspenseContentFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.row = null;
                 contentRootSegment.status = 6;
@@ -6310,8 +6473,8 @@
                     (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0),
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1),
                     (task.row = prevRow$jscomp$0);
                 }
                 var suspendedFallbackTask = createRenderTask(
@@ -6377,7 +6540,7 @@
               var value$jscomp$0 = props.value,
                 children$jscomp$2 = props.children;
               var prevSnapshot = task.context;
-              var prevKeyPath$jscomp$5 = task.keyPath;
+              var prevKeyPath$jscomp$6 = task.keyPath;
               var prevValue = type._currentValue;
               type._currentValue = value$jscomp$0;
               void 0 !== type._currentRenderer &&
@@ -6417,10 +6580,10 @@
                   ""Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.""
                 );
               type._currentRenderer = rendererSigil;
-              var JSCompiler_inline_result$jscomp$0 = (currentActiveSnapshot =
+              var JSCompiler_inline_result$jscomp$1 = (currentActiveSnapshot =
                 prevSnapshot$jscomp$0.parent);
-              task.context = JSCompiler_inline_result$jscomp$0;
-              task.keyPath = prevKeyPath$jscomp$5;
+              task.context = JSCompiler_inline_result$jscomp$1;
+              task.keyPath = prevKeyPath$jscomp$6;
               prevSnapshot !== task.context &&
                 console.error(
                   ""Popping the context provider did not return back to the original snapshot. This is a bug in React.""
@@ -6434,10 +6597,10 @@
                   ""A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.""
                 );
               var newChildren = render(context$jscomp$0._currentValue),
-                prevKeyPath$jscomp$6 = task.keyPath;
+                prevKeyPath$jscomp$7 = task.keyPath;
               task.keyPath = keyPath;
               renderNodeDestructive(request, task, newChildren, -1);
-              task.keyPath = prevKeyPath$jscomp$6;
+              task.keyPath = prevKeyPath$jscomp$7;
               return;
             case REACT_LAZY_TYPE:
               var Component = callLazyInitInDEV(type);
@@ -8197,7 +8360,10 @@
       request = request.renderState;
       i = boundary.rootSegmentID;
       boundary = boundary.contentState;
-      var requiresStyleInsertion = request.stylesToHoist;
+      var requiresStyleInsertion = request.stylesToHoist,
+        requiresViewTransitions =
+          (completedSegments.instructions & NeedUpgradeToViewTransitions) !==
+          NothingSent;
       request.stylesToHoist = !1;
       writeChunk(destination, request.startInlineScript);
       writeChunk(destination, endOfStartTag);
@@ -8210,6 +8376,14 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            writeChunk(
+              destination,
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           (completedSegments.instructions & SentStyleInsertionFunction) ===
           NothingSent
             ? ((completedSegments.instructions |= SentStyleInsertionFunction),
@@ -8222,6 +8396,14 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            writeChunk(
+              destination,
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           writeChunk(destination, completeBoundaryScript1Partial));
       completedSegments = stringToChunk(i.toString(16));
       writeChunk(destination, request.boundaryPrefix);
@@ -8808,11 +8990,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react""),
@@ -9900,6 +10082,8 @@
       SentStyleInsertionFunction = 8,
       SentCompletedShellId = 32,
       SentMarkShellTime = 64,
+      NeedUpgradeToViewTransitions = 128,
+      SentUpgradeToViewTransitions = 256,
       EXISTS = null,
       PRELOAD_NO_CREDS = [];
     Object.freeze(PRELOAD_NO_CREDS);
@@ -10044,12 +10228,12 @@
     stringToPrecomputedChunk('<template data-rsi="""" data-sid=""');
     stringToPrecomputedChunk('"" data-pid=""');
     var completeBoundaryScriptFunctionOnly = stringToPrecomputedChunk(
-      '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
-    );
-    stringToChunk(
-      '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
-    );
-    var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""'),
+        '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
+      ),
+      completeBoundaryUpgradeToViewTransitionsInstruction = stringToChunk(
+        '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+      ),
+      completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""'),
       completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(
         '$RM=new Map;$RR=function(n,w,p){function u(q){this._p=null;q()}for(var r=new Map,t=document,h,b,e=t.querySelectorAll(""link[data-precedence],style[data-precedence]""),v=[],k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href""),b),r.set(b.dataset.precedence,h=b));e=0;b=[];var l,a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1,m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g,f[m++]);g=a._p=new Promise(function(q,x){a.onload=u.bind(a,q);a.onerror=u.bind(a,x)});$RM.set(d,a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=t.head,c.insertBefore(a,c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null,n,w),$RX.bind(null,n,""CSS failed to load""))};$RR(""'
       ),
@@ -10231,20 +10415,14 @@
           return [!1, unsupportedStartTransition];
         },
         useId: function () {
-          var treeId = currentlyRenderingTask.treeContext;
-          var overflow = treeId.overflow;
-          treeId = treeId.id;
-          treeId =
-            (treeId & ~(1 << (32 - clz32(treeId) - 1))).toString(32) + overflow;
-          var resumableState = currentResumableState;
+          var treeId = getTreeId(currentlyRenderingTask.treeContext),
+            resumableState = currentResumableState;
           if (null === resumableState)
             throw Error(
               ""Invalid hook call. Hooks can only be called inside of the body of a function component.""
             );
-          overflow = localIdCounter++;
-          treeId = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
-          0 < overflow && (treeId += ""H"" + overflow.toString(32));
-          return treeId + ""_"";
+          var localId = localIdCounter++;
+          return makeId(resumableState, treeId, localId);
         },
         useSyncExternalStore: function (
           subscribe,
@@ -10617,5 +10795,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-canary-c7862584-20251006"";
+    exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.edge.production.js,530,308,838,"@@ -677,7 +677,8 @@ function getChildFormatContext(parentContext, type, props) {
   }
   return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
     ? createFormatContext(2, null, subtreeScope, null)
-    : parentContext.tagScope !== subtreeScope
+    : null !== parentContext.viewTransition ||
+        parentContext.tagScope !== subtreeScope
       ? createFormatContext(
           parentContext.insertionMode,
           parentContext.selectedValue,
@@ -721,13 +722,38 @@ function getSuspenseContentFormatContext(resumableState, parentContext) {
     resumableState
   );
 }
+function makeId(resumableState, treeId, localId) {
+  resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+  0 < localId && (resumableState += ""H"" + localId.toString(32));
+  return resumableState + ""_"";
+}
 var textSeparator = stringToPrecomputedChunk(""\x3c!-- --\x3e"");
 function pushTextInstance(target, text, renderState, textEmbedded) {
   if ("""" === text) return textEmbedded;
   textEmbedded && target.push(textSeparator);
   target.push(stringToChunk(escapeTextForBrowser(text)));
   return !0;
 }
+function pushViewTransitionAttributes(target, formatContext) {
+  formatContext = formatContext.viewTransition;
+  null !== formatContext &&
+    (""auto"" !== formatContext.name &&
+      (pushStringAttribute(
+        target,
+        ""vt-name"",
+        0 === formatContext.nameIdx
+          ? formatContext.name
+          : formatContext.name + ""_"" + formatContext.nameIdx
+      ),
+      formatContext.nameIdx++),
+    pushStringAttribute(target, ""vt-update"", formatContext.update),
+    ""none"" !== formatContext.enter &&
+      pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+    ""none"" !== formatContext.exit &&
+      pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+    ""none"" !== formatContext.share &&
+      pushStringAttribute(target, ""vt-share"", formatContext.share));
+}
 var styleNameCache = new Map(),
   styleAttributeStart = stringToPrecomputedChunk(' style=""'),
   styleAssign = stringToPrecomputedChunk("":""),
@@ -1173,7 +1199,7 @@ var styleRegex = /(<\/|<)(s)(tyle)/gi;
 function styleReplacer(match, prefix, s, suffix) {
   return """" + prefix + (""s"" === s ? ""\\73 "" : ""\\53 "") + suffix;
 }
-function pushSelfClosing(target, props, tag) {
+function pushSelfClosing(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   for (var propKey in props)
     if (hasOwnProperty.call(props, propKey)) {
@@ -1190,6 +1216,7 @@ function pushSelfClosing(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(endOfStartTagSelfClosing);
   return null;
 }
@@ -1261,7 +1288,7 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag(""script""));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
+function pushStartSingletonElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -1280,11 +1307,12 @@ function pushStartSingletonElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(endOfStartTag);
   pushInnerHTML(target, innerHTML, tag);
   return tag;
 }
-function pushStartGenericElement(target, props, tag) {
+function pushStartGenericElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -1303,6 +1331,7 @@ function pushStartGenericElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(endOfStartTag);
   pushInnerHTML(target, innerHTML, tag);
   return ""string"" === typeof tag
@@ -1364,6 +1393,7 @@ function pushStartInstance(
                 pushAttribute(target$jscomp$0, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       pushInnerHTML(target$jscomp$0, innerHTML, children);
       if (""string"" === typeof children) {
@@ -1402,6 +1432,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
       return children$jscomp$0;
@@ -1491,6 +1522,7 @@ function pushStartInstance(
       null === value$jscomp$0 &&
         null !== defaultValue &&
         (value$jscomp$0 = defaultValue);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       if (null != children$jscomp$2) {
         if (null != value$jscomp$0)
@@ -1587,6 +1619,7 @@ function pushStartInstance(
         ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
         : null !== defaultValue$jscomp$0 &&
           pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTagSelfClosing);
       null != formData &&
         formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1645,6 +1678,7 @@ function pushStartInstance(
         formTarget$jscomp$0,
         name$jscomp$0
       );
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       null != formData$jscomp$0 &&
         formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1732,6 +1766,7 @@ function pushStartInstance(
         pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
       null != formTarget$jscomp$1 &&
         pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       null !== formActionName &&
         (target$jscomp$0.push(startHiddenInputChunk),
@@ -1767,6 +1802,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       return null;
     case ""object"":
@@ -1804,6 +1840,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
       if (""string"" === typeof children$jscomp$5) {
@@ -2085,17 +2122,33 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
           target$jscomp$0,
           props,
-          ""meta""
+          ""meta"",
+          formatContext
         );
       else
         textEmbedded && target$jscomp$0.push(textSeparator),
           (JSCompiler_inline_result$jscomp$7 = isFallback$jscomp$1
             ? null
             : ""string"" === typeof props.charSet
-              ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+              ? pushSelfClosing(
+                  renderState.charsetChunks,
+                  props,
+                  ""meta"",
+                  formatContext
+                )
               : ""viewport"" === props.name
-                ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
-                : pushSelfClosing(renderState.hoistableChunks, props, ""meta""));
+                ? pushSelfClosing(
+                    renderState.viewportChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  )
+                : pushSelfClosing(
+                    renderState.hoistableChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  ));
       return JSCompiler_inline_result$jscomp$7;
     case ""listing"":
     case ""pre"":
@@ -2122,6 +2175,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       if (null != innerHTML$jscomp$7) {
         if (null != children$jscomp$8)
@@ -2238,7 +2292,7 @@ function pushStartInstance(
                   promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
         }
       }
-      return pushSelfClosing(target$jscomp$0, props, ""img"");
+      return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
     case ""base"":
     case ""area"":
     case ""br"":
@@ -2250,7 +2304,7 @@ function pushStartInstance(
     case ""source"":
     case ""track"":
     case ""wbr"":
-      return pushSelfClosing(target$jscomp$0, props, type);
+      return pushSelfClosing(target$jscomp$0, props, type, formatContext);
     case ""annotation-xml"":
     case ""color-profile"":
     case ""font-face"":
@@ -2271,13 +2325,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
           preamble.headChunks,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$9;
     case ""body"":
@@ -2291,13 +2347,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
           preamble$jscomp$0.bodyChunks,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$10;
     case ""html"":
@@ -2311,13 +2369,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
           preamble$jscomp$1.htmlChunks,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$11;
     default:
@@ -2367,12 +2427,13 @@ function pushStartInstance(
               }
             }
           }
+        pushViewTransitionAttributes(target$jscomp$0, formatContext);
         target$jscomp$0.push(endOfStartTag);
         pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
         return children$jscomp$9;
       }
   }
-  return pushStartGenericElement(target$jscomp$0, props, type);
+  return pushStartGenericElement(target$jscomp$0, props, type, formatContext);
 }
 var endTagCache = new Map();
 function endChunkForTag(tag) {
@@ -2556,12 +2617,12 @@ var completeSegmentScript1Full = stringToPrecomputedChunk(
 stringToPrecomputedChunk('<template data-rsi="""" data-sid=""');
 stringToPrecomputedChunk('"" data-pid=""');
 var completeBoundaryScriptFunctionOnly = stringToPrecomputedChunk(
-  '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
-);
-stringToChunk(
-  '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
-);
-var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""'),
+    '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
+  ),
+  completeBoundaryUpgradeToViewTransitionsInstruction = stringToChunk(
+    '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+  ),
+  completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""'),
   completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(
     '$RM=new Map;$RR=function(n,w,p){function u(q){this._p=null;q()}for(var r=new Map,t=document,h,b,e=t.querySelectorAll(""link[data-precedence],style[data-precedence]""),v=[],k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href""),b),r.set(b.dataset.precedence,h=b));e=0;b=[];var l,a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1,m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g,f[m++]);g=a._p=new Promise(function(q,x){a.onload=u.bind(a,q);a.onerror=u.bind(a,x)});$RM.set(d,a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=t.head,c.insertBefore(a,c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null,n,w),$RX.bind(null,n,""CSS failed to load""))};$RR(""'
   ),
@@ -3315,6 +3376,8 @@ function getComponentNameFromType(type) {
       return ""SuspenseList"";
     case REACT_ACTIVITY_TYPE:
       return ""Activity"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {
@@ -3428,6 +3491,11 @@ var classComponentUpdater = {
     enqueueForceUpdate: function () {}
   },
   emptyTreeContext = { id: 1, overflow: """" };
+function getTreeId(context) {
+  var overflow = context.overflow;
+  context = context.id;
+  return (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow;
+}
 function pushTreeContext(baseContext, totalChildren, index) {
   var baseIdWithLeadingBit = baseContext.id;
   baseContext = baseContext.overflow;
@@ -3789,24 +3857,14 @@ var HooksDispatcher = {
       return [!1, unsupportedStartTransition];
     },
     useId: function () {
-      var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
-      var overflow = JSCompiler_inline_result.overflow;
-      JSCompiler_inline_result = JSCompiler_inline_result.id;
-      JSCompiler_inline_result =
-        (
-          JSCompiler_inline_result &
-          ~(1 << (32 - clz32(JSCompiler_inline_result) - 1))
-        ).toString(32) + overflow;
-      var resumableState = currentResumableState;
+      var treeId = getTreeId(currentlyRenderingTask.treeContext),
+        resumableState = currentResumableState;
       if (null === resumableState)
         throw Error(
           ""Invalid hook call. Hooks can only be called inside of the body of a function component.""
         );
-      overflow = localIdCounter++;
-      JSCompiler_inline_result =
-        ""_"" + resumableState.idPrefix + ""R_"" + JSCompiler_inline_result;
-      0 < overflow && (JSCompiler_inline_result += ""H"" + overflow.toString(32));
-      return JSCompiler_inline_result + ""_"";
+      var localId = localIdCounter++;
+      return makeId(resumableState, treeId, localId);
     },
     useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
       if (void 0 === getServerSnapshot)
@@ -4063,9 +4121,28 @@ function describeComponentStackByType(type) {
       return describeBuiltInComponentFrame(""SuspenseList"");
     case REACT_SUSPENSE_TYPE:
       return describeBuiltInComponentFrame(""Suspense"");
+    case REACT_VIEW_TRANSITION_TYPE:
+      return describeBuiltInComponentFrame(""ViewTransition"");
   }
   return """";
 }
+function getViewTransitionClassName(defaultClass, eventClass) {
+  defaultClass =
+    null == defaultClass || ""string"" === typeof defaultClass
+      ? defaultClass
+      : defaultClass.default;
+  eventClass =
+    null == eventClass || ""string"" === typeof eventClass
+      ? eventClass
+      : eventClass.default;
+  return null == eventClass
+    ? ""auto"" === defaultClass
+      ? null
+      : defaultClass
+    : ""auto"" === eventClass
+      ? null
+      : eventClass;
+}
 function isEligibleForOutlining(request, boundary) {
   return (
     (500 < boundary.byteSize || hasSuspenseyContent(boundary.contentState)) &&
@@ -4804,154 +4881,187 @@ function renderElement(request, task, keyPath, type, props, ref) {
           void 0 === newProps[propName$44] &&
             (newProps[propName$44] = defaultProps[propName$44]);
       }
-      props = newProps;
-      newProps = emptyContextObject;
-      defaultProps = type.contextType;
-      ""object"" === typeof defaultProps &&
-        null !== defaultProps &&
-        (newProps = defaultProps._currentValue);
-      newProps = new type(props, newProps);
-      var initialState = void 0 !== newProps.state ? newProps.state : null;
-      newProps.updater = classComponentUpdater;
-      newProps.props = props;
-      newProps.state = initialState;
-      defaultProps = { queue: [], replace: !1 };
-      newProps._reactInternals = defaultProps;
-      ref = type.contextType;
-      newProps.context =
-        ""object"" === typeof ref && null !== ref
-          ? ref._currentValue
+      var JSCompiler_inline_result = newProps;
+      var context = emptyContextObject,
+        contextType = type.contextType;
+      ""object"" === typeof contextType &&
+        null !== contextType &&
+        (context = contextType._currentValue);
+      var JSCompiler_inline_result$jscomp$0 = new type(
+        JSCompiler_inline_result,
+        context
+      );
+      var initialState =
+        void 0 !== JSCompiler_inline_result$jscomp$0.state
+          ? JSCompiler_inline_result$jscomp$0.state
+          : null;
+      JSCompiler_inline_result$jscomp$0.updater = classComponentUpdater;
+      JSCompiler_inline_result$jscomp$0.props = JSCompiler_inline_result;
+      JSCompiler_inline_result$jscomp$0.state = initialState;
+      var internalInstance = { queue: [], replace: !1 };
+      JSCompiler_inline_result$jscomp$0._reactInternals = internalInstance;
+      var contextType$jscomp$0 = type.contextType;
+      JSCompiler_inline_result$jscomp$0.context =
+        ""object"" === typeof contextType$jscomp$0 &&
+        null !== contextType$jscomp$0
+          ? contextType$jscomp$0._currentValue
           : emptyContextObject;
-      ref = type.getDerivedStateFromProps;
-      ""function"" === typeof ref &&
-        ((ref = ref(props, initialState)),
-        (initialState =
-          null === ref || void 0 === ref
+      var getDerivedStateFromProps = type.getDerivedStateFromProps;
+      if (""function"" === typeof getDerivedStateFromProps) {
+        var partialState = getDerivedStateFromProps(
+          JSCompiler_inline_result,
+          initialState
+        );
+        var JSCompiler_inline_result$jscomp$1 =
+          null === partialState || void 0 === partialState
             ? initialState
-            : assign({}, initialState, ref)),
-        (newProps.state = initialState));
+            : assign({}, initialState, partialState);
+        JSCompiler_inline_result$jscomp$0.state =
+          JSCompiler_inline_result$jscomp$1;
+      }
       if (
         ""function"" !== typeof type.getDerivedStateFromProps &&
-        ""function"" !== typeof newProps.getSnapshotBeforeUpdate &&
-        (""function"" === typeof newProps.UNSAFE_componentWillMount ||
-          ""function"" === typeof newProps.componentWillMount)
-      )
+        ""function"" !==
+          typeof JSCompiler_inline_result$jscomp$0.getSnapshotBeforeUpdate &&
+        (""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount ||
+          ""function"" ===
+            typeof JSCompiler_inline_result$jscomp$0.componentWillMount)
+      ) {
+        var oldState = JSCompiler_inline_result$jscomp$0.state;
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.componentWillMount();
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount();
+        oldState !== JSCompiler_inline_result$jscomp$0.state &&
+          classComponentUpdater.enqueueReplaceState(
+            JSCompiler_inline_result$jscomp$0,
+            JSCompiler_inline_result$jscomp$0.state,
+            null
+          );
         if (
-          ((type = newProps.state),
-          ""function"" === typeof newProps.componentWillMount &&
-            newProps.componentWillMount(),
-          ""function"" === typeof newProps.UNSAFE_componentWillMount &&
-            newProps.UNSAFE_componentWillMount(),
-          type !== newProps.state &&
-            classComponentUpdater.enqueueReplaceState(
-              newProps,
-              newProps.state,
-              null
-            ),
-          null !== defaultProps.queue && 0 < defaultProps.queue.length)
-        )
-          if (
-            ((type = defaultProps.queue),
-            (ref = defaultProps.replace),
-            (defaultProps.queue = null),
-            (defaultProps.replace = !1),
-            ref && 1 === type.length)
-          )
-            newProps.state = type[0];
+          null !== internalInstance.queue &&
+          0 < internalInstance.queue.length
+        ) {
+          var oldQueue = internalInstance.queue,
+            oldReplace = internalInstance.replace;
+          internalInstance.queue = null;
+          internalInstance.replace = !1;
+          if (oldReplace && 1 === oldQueue.length)
+            JSCompiler_inline_result$jscomp$0.state = oldQueue[0];
           else {
-            defaultProps = ref ? type[0] : newProps.state;
-            initialState = !0;
-            for (ref = ref ? 1 : 0; ref < type.length; ref++)
-              (propName$44 = type[ref]),
-                (propName$44 =
-                  ""function"" === typeof propName$44
-                    ? propName$44.call(newProps, defaultProps, props, void 0)
-                    : propName$44),
-                null != propName$44 &&
-                  (initialState
-                    ? ((initialState = !1),
-                      (defaultProps = assign({}, defaultProps, propName$44)))
-                    : assign(defaultProps, propName$44));
-            newProps.state = defaultProps;
+            for (
+              var nextState = oldReplace
+                  ? oldQueue[0]
+                  : JSCompiler_inline_result$jscomp$0.state,
+                dontMutate = !0,
+                i = oldReplace ? 1 : 0;
+              i < oldQueue.length;
+              i++
+            ) {
+              var partial = oldQueue[i],
+                partialState$jscomp$0 =
+                  ""function"" === typeof partial
+                    ? partial.call(
+                        JSCompiler_inline_result$jscomp$0,
+                        nextState,
+                        JSCompiler_inline_result,
+                        void 0
+                      )
+                    : partial;
+              null != partialState$jscomp$0 &&
+                (dontMutate
+                  ? ((dontMutate = !1),
+                    (nextState = assign({}, nextState, partialState$jscomp$0)))
+                  : assign(nextState, partialState$jscomp$0));
+            }
+            JSCompiler_inline_result$jscomp$0.state = nextState;
           }
-        else defaultProps.queue = null;
-      type = newProps.render();
+        } else internalInstance.queue = null;
+      }
+      var nextChildren = JSCompiler_inline_result$jscomp$0.render();
       if (12 === request.status) throw null;
-      props = task.keyPath;
+      var prevKeyPath = task.keyPath;
       task.keyPath = keyPath;
-      renderNodeDestructive(request, task, type, -1);
-      task.keyPath = props;
+      renderNodeDestructive(request, task, nextChildren, -1);
+      task.keyPath = prevKeyPath;
     } else {
-      type = renderWithHooks(request, task, keyPath, type, props, void 0);
+      var value = renderWithHooks(request, task, keyPath, type, props, void 0);
       if (12 === request.status) throw null;
       finishFunctionComponent(
         request,
         task,
         keyPath,
-        type,
+        value,
         0 !== localIdCounter,
         actionStateCounter,
         actionStateMatchingIndex
       );
     }
-  else if (""string"" === typeof type)
-    if (((newProps = task.blockedSegment), null === newProps))
-      (newProps = props.children),
-        (defaultProps = task.formatContext),
-        (initialState = task.keyPath),
-        (task.formatContext = getChildFormatContext(defaultProps, type, props)),
-        (task.keyPath = keyPath),
-        renderNode(request, task, newProps, -1),
-        (task.formatContext = defaultProps),
-        (task.keyPath = initialState);
-    else {
-      initialState = pushStartInstance(
-        newProps.chunks,
+  else if (""string"" === typeof type) {
+    var segment = task.blockedSegment;
+    if (null === segment) {
+      var children = props.children,
+        prevContext = task.formatContext,
+        prevKeyPath$jscomp$0 = task.keyPath;
+      task.formatContext = getChildFormatContext(prevContext, type, props);
+      task.keyPath = keyPath;
+      renderNode(request, task, children, -1);
+      task.formatContext = prevContext;
+      task.keyPath = prevKeyPath$jscomp$0;
+    } else {
+      var children$41 = pushStartInstance(
+        segment.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
         task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
-        newProps.lastPushedText
+        segment.lastPushedText
       );
-      newProps.lastPushedText = !1;
-      defaultProps = task.formatContext;
-      ref = task.keyPath;
+      segment.lastPushedText = !1;
+      var prevContext$42 = task.formatContext,
+        prevKeyPath$43 = task.keyPath;
       task.keyPath = keyPath;
       if (
         3 ===
-        (task.formatContext = getChildFormatContext(defaultProps, type, props))
-          .insertionMode
+        (task.formatContext = getChildFormatContext(
+          prevContext$42,
+          type,
+          props
+        )).insertionMode
       ) {
-        keyPath = createPendingSegment(
+        var preambleSegment = createPendingSegment(
           request,
           0,
           null,
           task.formatContext,
           !1,
           !1
         );
-        newProps.preambleChildren.push(keyPath);
-        task.blockedSegment = keyPath;
+        segment.preambleChildren.push(preambleSegment);
+        task.blockedSegment = preambleSegment;
         try {
-          (keyPath.status = 6),
-            renderNode(request, task, initialState, -1),
-            keyPath.lastPushedText &&
-              keyPath.textEmbedded &&
-              keyPath.chunks.push(textSeparator),
-            (keyPath.status = 1),
-            finishedSegment(request, task.blockedBoundary, keyPath);
+          (preambleSegment.status = 6),
+            renderNode(request, task, children$41, -1),
+            preambleSegment.lastPushedText &&
+              preambleSegment.textEmbedded &&
+              preambleSegment.chunks.push(textSeparator),
+            (preambleSegment.status = 1),
+            finishedSegment(request, task.blockedBoundary, preambleSegment);
         } finally {
-          task.blockedSegment = newProps;
+          task.blockedSegment = segment;
         }
-      } else renderNode(request, task, initialState, -1);
-      task.formatContext = defaultProps;
-      task.keyPath = ref;
+      } else renderNode(request, task, children$41, -1);
+      task.formatContext = prevContext$42;
+      task.keyPath = prevKeyPath$43;
       a: {
-        task = newProps.chunks;
-        request = request.resumableState;
+        var target = segment.chunks,
+          resumableState = request.resumableState;
         switch (type) {
           case ""title"":
           case ""style"":
@@ -4973,131 +5083,221 @@ function renderElement(request, task, keyPath, type, props, ref) {
           case ""wbr"":
             break a;
           case ""body"":
-            if (1 >= defaultProps.insertionMode) {
-              request.hasBody = !0;
+            if (1 >= prevContext$42.insertionMode) {
+              resumableState.hasBody = !0;
               break a;
             }
             break;
           case ""html"":
-            if (0 === defaultProps.insertionMode) {
-              request.hasHtml = !0;
+            if (0 === prevContext$42.insertionMode) {
+              resumableState.hasHtml = !0;
               break a;
             }
             break;
           case ""head"":
-            if (1 >= defaultProps.insertionMode) break a;
+            if (1 >= prevContext$42.insertionMode) break a;
         }
-        task.push(endChunkForTag(type));
+        target.push(endChunkForTag(type));
       }
-      newProps.lastPushedText = !1;
+      segment.lastPushedText = !1;
     }
-  else {
+  } else {
     switch (type) {
       case REACT_LEGACY_HIDDEN_TYPE:
       case REACT_STRICT_MODE_TYPE:
       case REACT_PROFILER_TYPE:
       case REACT_FRAGMENT_TYPE:
-        type = task.keyPath;
+        var prevKeyPath$jscomp$1 = task.keyPath;
         task.keyPath = keyPath;
         renderNodeDestructive(request, task, props.children, -1);
-        task.keyPath = type;
+        task.keyPath = prevKeyPath$jscomp$1;
         return;
       case REACT_ACTIVITY_TYPE:
-        type = task.blockedSegment;
-        null === type
-          ? ""hidden"" !== props.mode &&
-            ((type = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = type))
-          : ""hidden"" !== props.mode &&
-            (type.chunks.push(startActivityBoundary),
-            (type.lastPushedText = !1),
-            (newProps = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = newProps),
-            type.chunks.push(endActivityBoundary),
-            (type.lastPushedText = !1));
+        var segment$jscomp$0 = task.blockedSegment;
+        if (null === segment$jscomp$0) {
+          if (""hidden"" !== props.mode) {
+            var prevKeyPath$jscomp$2 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNode(request, task, props.children, -1);
+            task.keyPath = prevKeyPath$jscomp$2;
+          }
+        } else if (""hidden"" !== props.mode) {
+          segment$jscomp$0.chunks.push(startActivityBoundary);
+          segment$jscomp$0.lastPushedText = !1;
+          var prevKeyPath$46 = task.keyPath;
+          task.keyPath = keyPath;
+          renderNode(request, task, props.children, -1);
+          task.keyPath = prevKeyPath$46;
+          segment$jscomp$0.chunks.push(endActivityBoundary);
+          segment$jscomp$0.lastPushedText = !1;
+        }
         return;
       case REACT_SUSPENSE_LIST_TYPE:
         a: {
-          type = props.children;
-          props = props.revealOrder;
+          var children$jscomp$0 = props.children,
+            revealOrder = props.revealOrder;
           if (
-            ""forwards"" === props ||
-            ""backwards"" === props ||
-            ""unstable_legacy-backwards"" === props
+            ""forwards"" === revealOrder ||
+            ""backwards"" === revealOrder ||
+            ""unstable_legacy-backwards"" === revealOrder
           ) {
-            if (isArrayImpl(type)) {
-              renderSuspenseListRows(request, task, keyPath, type, props);
+            if (isArrayImpl(children$jscomp$0)) {
+              renderSuspenseListRows(
+                request,
+                task,
+                keyPath,
+                children$jscomp$0,
+                revealOrder
+              );
               break a;
             }
-            if ((newProps = getIteratorFn(type)))
-              if ((newProps = newProps.call(type))) {
-                defaultProps = newProps.next();
-                if (!defaultProps.done) {
-                  do defaultProps = newProps.next();
-                  while (!defaultProps.done);
-                  renderSuspenseListRows(request, task, keyPath, type, props);
+            var iteratorFn = getIteratorFn(children$jscomp$0);
+            if (iteratorFn) {
+              var iterator = iteratorFn.call(children$jscomp$0);
+              if (iterator) {
+                var step = iterator.next();
+                if (!step.done) {
+                  do step = iterator.next();
+                  while (!step.done);
+                  renderSuspenseListRows(
+                    request,
+                    task,
+                    keyPath,
+                    children$jscomp$0,
+                    revealOrder
+                  );
                 }
                 break a;
               }
+            }
+          }
+          if (""together"" === revealOrder) {
+            var prevKeyPath$40 = task.keyPath,
+              prevRow = task.row,
+              newRow = (task.row = createSuspenseListRow(null));
+            newRow.boundaries = [];
+            newRow.together = !0;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            0 === --newRow.pendingTasks &&
+              finishSuspenseListRow(request, newRow);
+            task.keyPath = prevKeyPath$40;
+            task.row = prevRow;
+            null !== prevRow &&
+              0 < newRow.pendingTasks &&
+              (prevRow.pendingTasks++, (newRow.next = prevRow));
+          } else {
+            var prevKeyPath$jscomp$3 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            task.keyPath = prevKeyPath$jscomp$3;
           }
-          ""together"" === props
-            ? ((props = task.keyPath),
-              (newProps = task.row),
-              (defaultProps = task.row = createSuspenseListRow(null)),
-              (defaultProps.boundaries = []),
-              (defaultProps.together = !0),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              0 === --defaultProps.pendingTasks &&
-                finishSuspenseListRow(request, defaultProps),
-              (task.keyPath = props),
-              (task.row = newProps),
-              null !== newProps &&
-                0 < defaultProps.pendingTasks &&
-                (newProps.pendingTasks++, (defaultProps.next = newProps)))
-            : ((props = task.keyPath),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              (task.keyPath = props));
         }
         return;
       case REACT_VIEW_TRANSITION_TYPE:
+        var prevContext$jscomp$0 = task.formatContext,
+          prevKeyPath$jscomp$4 = task.keyPath;
+        var resumableState$jscomp$0 = request.resumableState;
+        if (null != props.name && ""auto"" !== props.name)
+          var JSCompiler_inline_result$jscomp$2 = props.name;
+        else {
+          var treeId = getTreeId(task.treeContext);
+          JSCompiler_inline_result$jscomp$2 = makeId(
+            resumableState$jscomp$0,
+            treeId,
+            0
+          );
+        }
+        var autoName = JSCompiler_inline_result$jscomp$2,
+          resumableState$jscomp$1 = request.resumableState,
+          update = getViewTransitionClassName(props.default, props.update),
+          enter = getViewTransitionClassName(props.default, props.enter),
+          exit = getViewTransitionClassName(props.default, props.exit),
+          share = getViewTransitionClassName(props.default, props.share),
+          name = props.name;
+        null == update && (update = ""auto"");
+        null == enter && (enter = ""auto"");
+        null == exit && (exit = ""auto"");
+        if (null == name) {
+          var parentViewTransition = prevContext$jscomp$0.viewTransition;
+          null !== parentViewTransition
+            ? ((name = parentViewTransition.name),
+              (share = parentViewTransition.share))
+            : ((name = ""auto""), (share = ""none""));
+        } else
+          null == share && (share = ""auto""),
+            prevContext$jscomp$0.tagScope & 4 &&
+              (resumableState$jscomp$1.instructions |= 128);
+        prevContext$jscomp$0.tagScope & 8
+          ? (resumableState$jscomp$1.instructions |= 128)
+          : (exit = ""none"");
+        prevContext$jscomp$0.tagScope & 16
+          ? (resumableState$jscomp$1.instructions |= 128)
+          : (enter = ""none"");
+        var viewTransition = {
+            update: update,
+            enter: enter,
+            exit: exit,
+            share: share,
+            name: name,
+            autoName: autoName,
+            nameIdx: 0
+          },
+          subtreeScope = prevContext$jscomp$0.tagScope & -25;
+        subtreeScope =
+          ""none"" !== update ? subtreeScope | 32 : subtreeScope & -33;
+        ""none"" !== enter && (subtreeScope |= 64);
+        var JSCompiler_inline_result$jscomp$3 = createFormatContext(
+          prevContext$jscomp$0.insertionMode,
+          prevContext$jscomp$0.selectedValue,
+          subtreeScope,
+          viewTransition
+        );
+        task.formatContext = JSCompiler_inline_result$jscomp$3;
+        task.keyPath = keyPath;
+        if (null != props.name && ""auto"" !== props.name)
+          renderNodeDestructive(request, task, props.children, -1);
+        else {
+          var prevTreeContext = task.treeContext;
+          task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+          renderNode(request, task, props.children, -1);
+          task.treeContext = prevTreeContext;
+        }
+        task.formatContext = prevContext$jscomp$0;
+        task.keyPath = prevKeyPath$jscomp$4;
+        return;
       case REACT_SCOPE_TYPE:
         throw Error(""ReactDOMServer does not yet support scope components."");
       case REACT_SUSPENSE_TYPE:
         a: if (null !== task.replay) {
-          type = task.keyPath;
-          newProps = task.formatContext;
-          defaultProps = task.row;
+          var prevKeyPath$27 = task.keyPath,
+            prevContext$28 = task.formatContext,
+            prevRow$29 = task.row;
           task.keyPath = keyPath;
           task.formatContext = getSuspenseContentFormatContext(
             request.resumableState,
-            newProps
+            prevContext$28
           );
           task.row = null;
-          keyPath = props.children;
+          var content$30 = props.children;
           try {
-            renderNode(request, task, keyPath, -1);
+            renderNode(request, task, content$30, -1);
           } finally {
-            (task.keyPath = type),
-              (task.formatContext = newProps),
-              (task.row = defaultProps);
+            (task.keyPath = prevKeyPath$27),
+              (task.formatContext = prevContext$28),
+              (task.row = prevRow$29);
           }
         } else {
-          type = task.keyPath;
-          ref = task.formatContext;
-          var prevRow = task.row;
-          propName$44 = task.blockedBoundary;
-          propName = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState,
+          var prevKeyPath$jscomp$5 = task.keyPath,
+            prevContext$jscomp$1 = task.formatContext,
+            prevRow$jscomp$0 = task.row,
+            parentBoundary = task.blockedBoundary,
+            parentPreamble = task.blockedPreamble,
+            parentHoistableState = task.hoistableState,
             parentSegment = task.blockedSegment,
-            fallback = props.fallback;
-          props = props.children;
-          var fallbackAbortSet = new Set();
+            fallback = props.fallback,
+            content = props.children,
+            fallbackAbortSet = new Set();
           var newBoundary =
             2 > task.formatContext.insertionMode
               ? createSuspenseBoundary(
@@ -5136,43 +5336,53 @@ function renderElement(request, task, keyPath, type, props, ref) {
           );
           contentRootSegment.parentFlushed = !0;
           if (null !== request.trackedPostpones) {
-            newProps = task.componentStack;
-            defaultProps = [keyPath[0], ""Suspense Fallback"", keyPath[2]];
-            initialState = [defaultProps[1], defaultProps[2], [], null];
-            request.trackedPostpones.workingMap.set(defaultProps, initialState);
-            newBoundary.trackedFallbackNode = initialState;
+            var suspenseComponentStack = task.componentStack,
+              fallbackKeyPath = [keyPath[0], ""Suspense Fallback"", keyPath[2]],
+              fallbackReplayNode = [
+                fallbackKeyPath[1],
+                fallbackKeyPath[2],
+                [],
+                null
+              ];
+            request.trackedPostpones.workingMap.set(
+              fallbackKeyPath,
+              fallbackReplayNode
+            );
+            newBoundary.trackedFallbackNode = fallbackReplayNode;
             task.blockedSegment = boundarySegment;
             task.blockedPreamble = newBoundary.fallbackPreamble;
-            task.keyPath = defaultProps;
+            task.keyPath = fallbackKeyPath;
             task.formatContext = getSuspenseFallbackFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.componentStack =
-              replaceSuspenseComponentStackWithSuspenseFallbackStack(newProps);
+              replaceSuspenseComponentStackWithSuspenseFallbackStack(
+                suspenseComponentStack
+              );
             boundarySegment.status = 6;
             try {
               renderNode(request, task, fallback, -1),
                 boundarySegment.lastPushedText &&
                   boundarySegment.textEmbedded &&
                   boundarySegment.chunks.push(textSeparator),
                 (boundarySegment.status = 1),
-                finishedSegment(request, propName$44, boundarySegment);
+                finishedSegment(request, parentBoundary, boundarySegment);
             } catch (thrownValue) {
               throw (
                 ((boundarySegment.status = 12 === request.status ? 3 : 4),
                 thrownValue)
               );
             } finally {
               (task.blockedSegment = parentSegment),
-                (task.blockedPreamble = propName),
-                (task.keyPath = type),
-                (task.formatContext = ref);
+                (task.blockedPreamble = parentPreamble),
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1);
             }
-            task = createRenderTask(
+            var suspendedPrimaryTask = createRenderTask(
               request,
               null,
-              props,
+              content,
               -1,
               newBoundary,
               contentRootSegment,
@@ -5187,10 +5397,10 @@ function renderElement(request, task, keyPath, type, props, ref) {
               task.context,
               task.treeContext,
               null,
-              newProps
+              suspenseComponentStack
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedPrimaryTask);
+            request.pingedTasks.push(suspendedPrimaryTask);
           } else {
             task.blockedBoundary = newBoundary;
             task.blockedPreamble = newBoundary.contentPreamble;
@@ -5199,13 +5409,13 @@ function renderElement(request, task, keyPath, type, props, ref) {
             task.keyPath = keyPath;
             task.formatContext = getSuspenseContentFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.row = null;
             contentRootSegment.status = 6;
             try {
               if (
-                (renderNode(request, task, props, -1),
+                (renderNode(request, task, content, -1),
                 contentRootSegment.lastPushedText &&
                   contentRootSegment.textEmbedded &&
                   contentRootSegment.chunks.push(textSeparator),
@@ -5218,48 +5428,43 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   ((newBoundary.status = 1),
                   !isEligibleForOutlining(request, newBoundary))
                 ) {
-                  null !== prevRow &&
-                    0 === --prevRow.pendingTasks &&
-                    finishSuspenseListRow(request, prevRow);
+                  null !== prevRow$jscomp$0 &&
+                    0 === --prevRow$jscomp$0.pendingTasks &&
+                    finishSuspenseListRow(request, prevRow$jscomp$0);
                   0 === request.pendingRootTasks &&
                     task.blockedPreamble &&
                     preparePreamble(request);
                   break a;
                 }
               } else
-                null !== prevRow &&
-                  prevRow.together &&
-                  tryToResolveTogetherRow(request, prevRow);
+                null !== prevRow$jscomp$0 &&
+                  prevRow$jscomp$0.together &&
+                  tryToResolveTogetherRow(request, prevRow$jscomp$0);
             } catch (thrownValue$31) {
-              (newBoundary.status = 4),
-                12 === request.status
-                  ? ((contentRootSegment.status = 3),
-                    (newProps = request.fatalError))
-                  : ((contentRootSegment.status = 4),
-                    (newProps = thrownValue$31)),
-                (defaultProps = getThrownInfo(task.componentStack)),
-                (initialState = logRecoverableError(
-                  request,
-                  newProps,
-                  defaultProps
-                )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+              newBoundary.status = 4;
+              if (12 === request.status) {
+                contentRootSegment.status = 3;
+                var error = request.fatalError;
+              } else (contentRootSegment.status = 4), (error = thrownValue$31);
+              var thrownInfo = getThrownInfo(task.componentStack);
+              var errorDigest = logRecoverableError(request, error, thrownInfo);
+              newBoundary.errorDigest = errorDigest;
+              untrackBoundary(request, newBoundary);
             } finally {
-              (task.blockedBoundary = propName$44),
-                (task.blockedPreamble = propName),
+              (task.blockedBoundary = parentBoundary),
+                (task.blockedPreamble = parentPreamble),
                 (task.hoistableState = parentHoistableState),
                 (task.blockedSegment = parentSegment),
-                (task.keyPath = type),
-                (task.formatContext = ref),
-                (task.row = prevRow);
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1),
+                (task.row = prevRow$jscomp$0);
             }
-            task = createRenderTask(
+            var suspendedFallbackTask = createRenderTask(
               request,
               null,
               fallback,
               -1,
-              propName$44,
+              parentBoundary,
               boundarySegment,
               newBoundary.fallbackPreamble,
               newBoundary.fallbackState,
@@ -5276,33 +5481,33 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 task.componentStack
               )
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedFallbackTask);
+            request.pingedTasks.push(suspendedFallbackTask);
           }
         }
         return;
     }
     if (""object"" === typeof type && null !== type)
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
-          if (""ref"" in props)
-            for (parentSegment in ((newProps = {}), props))
-              ""ref"" !== parentSegment &&
-                (newProps[parentSegment] = props[parentSegment]);
-          else newProps = props;
-          type = renderWithHooks(
+          if (""ref"" in props) {
+            var propsWithoutRef = {};
+            for (var key in props)
+              ""ref"" !== key && (propsWithoutRef[key] = props[key]);
+          } else propsWithoutRef = props;
+          var children$jscomp$1 = renderWithHooks(
             request,
             task,
             keyPath,
             type.render,
-            newProps,
+            propsWithoutRef,
             ref
           );
           finishFunctionComponent(
             request,
             task,
             keyPath,
-            type,
+            children$jscomp$1,
             0 !== localIdCounter,
             actionStateCounter,
             actionStateMatchingIndex
@@ -5312,45 +5517,47 @@ function renderElement(request, task, keyPath, type, props, ref) {
           renderElement(request, task, keyPath, type.type, props, ref);
           return;
         case REACT_CONTEXT_TYPE:
-          defaultProps = props.children;
-          newProps = task.keyPath;
-          props = props.value;
-          initialState = type._currentValue;
-          type._currentValue = props;
-          ref = currentActiveSnapshot;
-          currentActiveSnapshot = type = {
-            parent: ref,
-            depth: null === ref ? 0 : ref.depth + 1,
-            context: type,
-            parentValue: initialState,
-            value: props
-          };
-          task.context = type;
+          var children$jscomp$2 = props.children,
+            prevKeyPath$jscomp$6 = task.keyPath,
+            nextValue = props.value;
+          var prevValue = type._currentValue;
+          type._currentValue = nextValue;
+          var prevNode = currentActiveSnapshot,
+            newNode = {
+              parent: prevNode,
+              depth: null === prevNode ? 0 : prevNode.depth + 1,
+              context: type,
+              parentValue: prevValue,
+              value: nextValue
+            };
+          currentActiveSnapshot = newNode;
+          task.context = newNode;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, defaultProps, -1);
-          request = currentActiveSnapshot;
-          if (null === request)
+          renderNodeDestructive(request, task, children$jscomp$2, -1);
+          var prevSnapshot = currentActiveSnapshot;
+          if (null === prevSnapshot)
             throw Error(
               ""Tried to pop a Context at the root of the app. This is a bug in React.""
             );
-          request.context._currentValue = request.parentValue;
-          request = currentActiveSnapshot = request.parent;
-          task.context = request;
-          task.keyPath = newProps;
+          prevSnapshot.context._currentValue = prevSnapshot.parentValue;
+          var JSCompiler_inline_result$jscomp$4 = (currentActiveSnapshot =
+            prevSnapshot.parent);
+          task.context = JSCompiler_inline_result$jscomp$4;
+          task.keyPath = prevKeyPath$jscomp$6;
           return;
         case REACT_CONSUMER_TYPE:
-          props = props.children;
-          type = props(type._context._currentValue);
-          props = task.keyPath;
+          var render = props.children,
+            newChildren = render(type._context._currentValue),
+            prevKeyPath$jscomp$7 = task.keyPath;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, type, -1);
-          task.keyPath = props;
+          renderNodeDestructive(request, task, newChildren, -1);
+          task.keyPath = prevKeyPath$jscomp$7;
           return;
         case REACT_LAZY_TYPE:
-          newProps = type._init;
-          type = newProps(type._payload);
+          var init = type._init;
+          var Component = init(type._payload);
           if (12 === request.status) throw null;
-          renderElement(request, task, keyPath, type, props, ref);
+          renderElement(request, task, keyPath, Component, props, ref);
           return;
       }
     throw Error(
@@ -6768,7 +6975,8 @@ function flushCompletedBoundary(request, destination, boundary) {
   request = request.renderState;
   i = boundary.rootSegmentID;
   boundary = boundary.contentState;
-  var requiresStyleInsertion = request.stylesToHoist;
+  var requiresStyleInsertion = request.stylesToHoist,
+    requiresViewTransitions = 0 !== (completedSegments.instructions & 128);
   request.stylesToHoist = !1;
   writeChunk(destination, request.startInlineScript);
   writeChunk(destination, endOfStartTag);
@@ -6779,13 +6987,27 @@ function flushCompletedBoundary(request, destination, boundary) {
       0 === (completedSegments.instructions & 2) &&
         ((completedSegments.instructions |= 2),
         writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        writeChunk(
+          destination,
+          completeBoundaryUpgradeToViewTransitionsInstruction
+        )),
       0 === (completedSegments.instructions & 8)
         ? ((completedSegments.instructions |= 8),
           writeChunk(destination, completeBoundaryWithStylesScript1FullPartial))
         : writeChunk(destination, completeBoundaryWithStylesScript1Partial))
     : (0 === (completedSegments.instructions & 2) &&
         ((completedSegments.instructions |= 2),
         writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        writeChunk(
+          destination,
+          completeBoundaryUpgradeToViewTransitionsInstruction
+        )),
       writeChunk(destination, completeBoundaryScript1Partial));
   completedSegments = stringToChunk(i.toString(16));
   writeChunk(destination, request.boundaryPrefix);
@@ -7252,11 +7474,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-canary-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-canary-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7510,4 +7732,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.node.development.js,226,46,272,"@@ -62,6 +62,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -1081,7 +1083,8 @@
       return parentContext.insertionMode >= HTML_TABLE_MODE ||
         parentContext.insertionMode < HTML_MODE
         ? createFormatContext(HTML_MODE, null, subtreeScope, null)
-        : parentContext.tagScope !== subtreeScope
+        : null !== parentContext.viewTransition ||
+            parentContext.tagScope !== subtreeScope
           ? createFormatContext(
               parentContext.insertionMode,
               parentContext.selectedValue,
@@ -1104,7 +1107,8 @@
           };
     }
     function getSuspenseFallbackFormatContext(resumableState, parentContext) {
-      parentContext.tagScope & 32 && (resumableState.instructions |= 128);
+      parentContext.tagScope & 32 &&
+        (resumableState.instructions |= NeedUpgradeToViewTransitions);
       return createFormatContext(
         parentContext.insertionMode,
         parentContext.selectedValue,
@@ -1125,12 +1129,37 @@
         resumableState
       );
     }
+    function makeId(resumableState, treeId, localId) {
+      resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+      0 < localId && (resumableState += ""H"" + localId.toString(32));
+      return resumableState + ""_"";
+    }
     function pushTextInstance(target, text, renderState, textEmbedded) {
       if ("""" === text) return textEmbedded;
       textEmbedded && target.push(textSeparator);
       target.push(escapeTextForBrowser(text));
       return !0;
     }
+    function pushViewTransitionAttributes(target, formatContext) {
+      formatContext = formatContext.viewTransition;
+      null !== formatContext &&
+        (""auto"" !== formatContext.name &&
+          (pushStringAttribute(
+            target,
+            ""vt-name"",
+            0 === formatContext.nameIdx
+              ? formatContext.name
+              : formatContext.name + ""_"" + formatContext.nameIdx
+          ),
+          formatContext.nameIdx++),
+        pushStringAttribute(target, ""vt-update"", formatContext.update),
+        ""none"" !== formatContext.enter &&
+          pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+        ""none"" !== formatContext.exit &&
+          pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+        ""none"" !== formatContext.share &&
+          pushStringAttribute(target, ""vt-share"", formatContext.share));
+    }
     function pushStyleAttribute(target, style) {
       if (""object"" !== typeof style)
         throw Error(
@@ -1678,7 +1707,7 @@
       checkHtmlStringCoercion(styleText);
       return ("""" + styleText).replace(styleRegex, styleReplacer);
     }
-    function pushSelfClosing(target, props, tag) {
+    function pushSelfClosing(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       for (var propKey in props)
         if (hasOwnProperty.call(props, propKey)) {
@@ -1695,6 +1724,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTagSelfClosing);
       return null;
     }
@@ -1772,7 +1802,7 @@
       target.push(endChunkForTag(""script""));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
+    function pushStartSingletonElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1791,11 +1821,12 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return tag;
     }
-    function pushStartGenericElement(target, props, tag) {
+    function pushStartGenericElement(target, props, tag, formatContext) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
         propKey;
@@ -1814,6 +1845,7 @@
                 pushAttribute(target, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target, formatContext);
       target.push(endOfStartTag);
       pushInnerHTML(target, innerHTML, tag);
       return ""string"" === typeof tag
@@ -1919,6 +1951,7 @@
                     pushAttribute(target$jscomp$0, propKey, propValue);
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML, children);
           if (""string"" === typeof children) {
@@ -1967,6 +2000,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
           return children$jscomp$0;
@@ -2080,6 +2114,7 @@
           null === value$jscomp$0 &&
             null !== defaultValue &&
             (value$jscomp$0 = defaultValue);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != children$jscomp$2) {
             console.error(
@@ -2207,6 +2242,7 @@
             ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
             : null !== defaultValue$jscomp$0 &&
               pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTagSelfClosing);
           null != formData &&
             formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2273,6 +2309,7 @@
             formTarget$jscomp$0,
             name$jscomp$0
           );
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null != formData$jscomp$0 &&
             formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -2370,6 +2407,7 @@
             pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
           null != formTarget$jscomp$1 &&
             pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           null !== formActionName &&
             (target$jscomp$0.push(startHiddenInputChunk),
@@ -2406,6 +2444,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           return null;
         case ""object"":
@@ -2451,6 +2490,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
           if (""string"" === typeof children$jscomp$5) {
@@ -2834,20 +2874,32 @@
             var JSCompiler_inline_result$jscomp$8 = pushSelfClosing(
               target$jscomp$0,
               props,
-              ""meta""
+              ""meta"",
+              formatContext
             );
           else
             textEmbedded && target$jscomp$0.push(textSeparator),
               (JSCompiler_inline_result$jscomp$8 = isFallback$jscomp$1
                 ? null
                 : ""string"" === typeof props.charSet
-                  ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+                  ? pushSelfClosing(
+                      renderState.charsetChunks,
+                      props,
+                      ""meta"",
+                      formatContext
+                    )
                   : ""viewport"" === props.name
-                    ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
+                    ? pushSelfClosing(
+                        renderState.viewportChunks,
+                        props,
+                        ""meta"",
+                        formatContext
+                      )
                     : pushSelfClosing(
                         renderState.hoistableChunks,
                         props,
-                        ""meta""
+                        ""meta"",
+                        formatContext
                       ));
           return JSCompiler_inline_result$jscomp$8;
         case ""listing"":
@@ -2875,6 +2927,7 @@
                     );
                 }
             }
+          pushViewTransitionAttributes(target$jscomp$0, formatContext);
           target$jscomp$0.push(endOfStartTag);
           if (null != innerHTML$jscomp$7) {
             if (null != children$jscomp$10)
@@ -2993,7 +3046,7 @@
                       promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
             }
           }
-          return pushSelfClosing(target$jscomp$0, props, ""img"");
+          return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
         case ""base"":
         case ""area"":
         case ""br"":
@@ -3005,7 +3058,7 @@
         case ""source"":
         case ""track"":
         case ""wbr"":
-          return pushSelfClosing(target$jscomp$0, props, type);
+          return pushSelfClosing(target$jscomp$0, props, type, formatContext);
         case ""annotation-xml"":
         case ""color-profile"":
         case ""font-face"":
@@ -3026,13 +3079,15 @@
             var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
               preamble.headChunks,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""head""
+              ""head"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$9;
         case ""body"":
@@ -3046,13 +3101,15 @@
             var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
               preamble$jscomp$0.bodyChunks,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""body""
+              ""body"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$10;
         case ""html"":
@@ -3066,13 +3123,15 @@
             var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
               preamble$jscomp$1.htmlChunks,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           } else
             JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
               target$jscomp$0,
               props,
-              ""html""
+              ""html"",
+              formatContext
             );
           return JSCompiler_inline_result$jscomp$11;
         default:
@@ -3124,6 +3183,7 @@
                   }
                 }
               }
+            pushViewTransitionAttributes(target$jscomp$0, formatContext);
             target$jscomp$0.push(endOfStartTag);
             pushInnerHTML(
               target$jscomp$0,
@@ -3133,7 +3193,12 @@
             return children$jscomp$11;
           }
       }
-      return pushStartGenericElement(target$jscomp$0, props, type);
+      return pushStartGenericElement(
+        target$jscomp$0,
+        props,
+        type,
+        formatContext
+      );
     }
     function endChunkForTag(tag) {
       var chunk = endTagCache.get(tag);
@@ -3671,6 +3736,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -3800,6 +3867,13 @@
         ),
         (didWarnAboutNoopUpdateForComponent[warningKey] = !0));
     }
+    function getTreeId(context) {
+      var overflow = context.overflow;
+      context = context.id;
+      return (
+        (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow
+      );
+    }
     function pushTreeContext(baseContext, totalChildren, index) {
       var baseIdWithLeadingBit = baseContext.id;
       baseContext = baseContext.overflow;
@@ -4428,9 +4502,28 @@
           return describeBuiltInComponentFrame(""SuspenseList"");
         case REACT_SUSPENSE_TYPE:
           return describeBuiltInComponentFrame(""Suspense"");
+        case REACT_VIEW_TRANSITION_TYPE:
+          return describeBuiltInComponentFrame(""ViewTransition"");
       }
       return """";
     }
+    function getViewTransitionClassName(defaultClass, eventClass) {
+      defaultClass =
+        null == defaultClass || ""string"" === typeof defaultClass
+          ? defaultClass
+          : defaultClass.default;
+      eventClass =
+        null == eventClass || ""string"" === typeof eventClass
+          ? eventClass
+          : eventClass.default;
+      return null == eventClass
+        ? ""auto"" === defaultClass
+          ? null
+          : defaultClass
+        : ""auto"" === eventClass
+          ? null
+          : eventClass;
+    }
     function resetOwnerStackLimit() {
       var now = getCurrentTime();
       1e3 < now - lastResetTime &&
@@ -5997,6 +6090,76 @@
             }
             return;
           case REACT_VIEW_TRANSITION_TYPE:
+            var prevContext$jscomp$0 = task.formatContext,
+              prevKeyPath$jscomp$4 = task.keyPath;
+            var resumableState$jscomp$0 = request.resumableState;
+            if (null != props.name && ""auto"" !== props.name)
+              var autoName = props.name;
+            else {
+              var treeId = getTreeId(task.treeContext);
+              autoName = makeId(resumableState$jscomp$0, treeId, 0);
+            }
+            var resumableState$jscomp$1 = request.resumableState,
+              update = getViewTransitionClassName(props.default, props.update),
+              enter = getViewTransitionClassName(props.default, props.enter),
+              exit = getViewTransitionClassName(props.default, props.exit),
+              share = getViewTransitionClassName(props.default, props.share),
+              name$jscomp$0 = props.name,
+              autoName$jscomp$0 = autoName;
+            null == update && (update = ""auto"");
+            null == enter && (enter = ""auto"");
+            null == exit && (exit = ""auto"");
+            if (null == name$jscomp$0) {
+              var parentViewTransition = prevContext$jscomp$0.viewTransition;
+              null !== parentViewTransition
+                ? ((name$jscomp$0 = parentViewTransition.name),
+                  (share = parentViewTransition.share))
+                : ((name$jscomp$0 = ""auto""), (share = ""none""));
+            } else
+              null == share && (share = ""auto""),
+                prevContext$jscomp$0.tagScope & 4 &&
+                  (resumableState$jscomp$1.instructions |=
+                    NeedUpgradeToViewTransitions);
+            prevContext$jscomp$0.tagScope & 8
+              ? (resumableState$jscomp$1.instructions |=
+                  NeedUpgradeToViewTransitions)
+              : (exit = ""none"");
+            prevContext$jscomp$0.tagScope & 16
+              ? (resumableState$jscomp$1.instructions |=
+                  NeedUpgradeToViewTransitions)
+              : (enter = ""none"");
+            var viewTransition = {
+                update: update,
+                enter: enter,
+                exit: exit,
+                share: share,
+                name: name$jscomp$0,
+                autoName: autoName$jscomp$0,
+                nameIdx: 0
+              },
+              subtreeScope = prevContext$jscomp$0.tagScope & -25;
+            subtreeScope =
+              ""none"" !== update ? subtreeScope | 32 : subtreeScope & -33;
+            ""none"" !== enter && (subtreeScope |= 64);
+            var JSCompiler_inline_result$jscomp$0 = createFormatContext(
+              prevContext$jscomp$0.insertionMode,
+              prevContext$jscomp$0.selectedValue,
+              subtreeScope,
+              viewTransition
+            );
+            task.formatContext = JSCompiler_inline_result$jscomp$0;
+            task.keyPath = keyPath;
+            if (null != props.name && ""auto"" !== props.name)
+              renderNodeDestructive(request, task, props.children, -1);
+            else {
+              var prevTreeContext = task.treeContext;
+              task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+              renderNode(request, task, props.children, -1);
+              task.treeContext = prevTreeContext;
+            }
+            task.formatContext = prevContext$jscomp$0;
+            task.keyPath = prevKeyPath$jscomp$4;
+            return;
           case REACT_SCOPE_TYPE:
             throw Error(
               ""ReactDOMServer does not yet support scope components.""
@@ -6021,8 +6184,8 @@
                   (task.row = _prevRow);
               }
             } else {
-              var prevKeyPath$jscomp$4 = task.keyPath,
-                prevContext$jscomp$0 = task.formatContext,
+              var prevKeyPath$jscomp$5 = task.keyPath,
+                prevContext$jscomp$1 = task.formatContext,
                 prevRow$jscomp$0 = task.row,
                 parentBoundary = task.blockedBoundary,
                 parentPreamble = task.blockedPreamble,
@@ -6091,7 +6254,7 @@
                 task.keyPath = fallbackKeyPath;
                 task.formatContext = getSuspenseFallbackFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.componentStack =
                   replaceSuspenseComponentStackWithSuspenseFallbackStack(
@@ -6114,8 +6277,8 @@
                 } finally {
                   (task.blockedSegment = parentSegment),
                     (task.blockedPreamble = parentPreamble),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0);
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1);
                 }
                 var suspendedPrimaryTask = createRenderTask(
                   request,
@@ -6149,7 +6312,7 @@
                 task.keyPath = keyPath;
                 task.formatContext = getSuspenseContentFormatContext(
                   request.resumableState,
-                  prevContext$jscomp$0
+                  prevContext$jscomp$1
                 );
                 task.row = null;
                 contentRootSegment.status = 6;
@@ -6209,8 +6372,8 @@
                     (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
-                    (task.keyPath = prevKeyPath$jscomp$4),
-                    (task.formatContext = prevContext$jscomp$0),
+                    (task.keyPath = prevKeyPath$jscomp$5),
+                    (task.formatContext = prevContext$jscomp$1),
                     (task.row = prevRow$jscomp$0);
                 }
                 var suspendedFallbackTask = createRenderTask(
@@ -6276,7 +6439,7 @@
               var value$jscomp$0 = props.value,
                 children$jscomp$2 = props.children;
               var prevSnapshot = task.context;
-              var prevKeyPath$jscomp$5 = task.keyPath;
+              var prevKeyPath$jscomp$6 = task.keyPath;
               var prevValue = type._currentValue;
               type._currentValue = value$jscomp$0;
               void 0 !== type._currentRenderer &&
@@ -6316,10 +6479,10 @@
                   ""Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.""
                 );
               type._currentRenderer = rendererSigil;
-              var JSCompiler_inline_result$jscomp$0 = (currentActiveSnapshot =
+              var JSCompiler_inline_result$jscomp$1 = (currentActiveSnapshot =
                 prevSnapshot$jscomp$0.parent);
-              task.context = JSCompiler_inline_result$jscomp$0;
-              task.keyPath = prevKeyPath$jscomp$5;
+              task.context = JSCompiler_inline_result$jscomp$1;
+              task.keyPath = prevKeyPath$jscomp$6;
               prevSnapshot !== task.context &&
                 console.error(
                   ""Popping the context provider did not return back to the original snapshot. This is a bug in React.""
@@ -6333,10 +6496,10 @@
                   ""A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.""
                 );
               var newChildren = render(context$jscomp$0._currentValue),
-                prevKeyPath$jscomp$6 = task.keyPath;
+                prevKeyPath$jscomp$7 = task.keyPath;
               task.keyPath = keyPath;
               renderNodeDestructive(request, task, newChildren, -1);
-              task.keyPath = prevKeyPath$jscomp$6;
+              task.keyPath = prevKeyPath$jscomp$7;
               return;
             case REACT_LAZY_TYPE:
               var Component = callLazyInitInDEV(type);
@@ -8087,7 +8250,10 @@
       request = request.renderState;
       i = boundary.rootSegmentID;
       boundary = boundary.contentState;
-      var requiresStyleInsertion = request.stylesToHoist;
+      var requiresStyleInsertion = request.stylesToHoist,
+        requiresViewTransitions =
+          (completedSegments.instructions & NeedUpgradeToViewTransitions) !==
+          NothingSent;
       request.stylesToHoist = !1;
       writeChunk(destination, request.startInlineScript);
       writeChunk(destination, endOfStartTag);
@@ -8100,6 +8266,14 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            writeChunk(
+              destination,
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           (completedSegments.instructions & SentStyleInsertionFunction) ===
           NothingSent
             ? ((completedSegments.instructions |= SentStyleInsertionFunction),
@@ -8112,6 +8286,14 @@
             NothingSent &&
             ((completedSegments.instructions |= SentCompleteBoundaryFunction),
             writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+          requiresViewTransitions &&
+            (completedSegments.instructions & SentUpgradeToViewTransitions) ===
+              NothingSent &&
+            ((completedSegments.instructions |= SentUpgradeToViewTransitions),
+            writeChunk(
+              destination,
+              completeBoundaryUpgradeToViewTransitionsInstruction
+            )),
           writeChunk(destination, completeBoundaryScript1Partial));
       completedSegments = i.toString(16);
       writeChunk(destination, request.boundaryPrefix);
@@ -8682,11 +8864,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     function createDrainHandler(destination, request) {
@@ -9879,6 +10061,8 @@
       SentStyleInsertionFunction = 8,
       SentCompletedShellId = 32,
       SentMarkShellTime = 64,
+      NeedUpgradeToViewTransitions = 128,
+      SentUpgradeToViewTransitions = 256,
       EXISTS = null,
       PRELOAD_NO_CREDS = [];
     Object.freeze(PRELOAD_NO_CREDS);
@@ -10025,6 +10209,8 @@
     var completeBoundaryScriptFunctionOnly = stringToPrecomputedChunk(
         '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b],e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling,h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild,c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a,b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"",$RB.push(a,b),2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null,$RB)):(a=performance.now(),setTimeout($RV.bind(null,$RB),2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};'
       ),
+      completeBoundaryUpgradeToViewTransitionsInstruction =
+        '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);',
       completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""'),
       completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk(
         '$RM=new Map;$RR=function(n,w,p){function u(q){this._p=null;q()}for(var r=new Map,t=document,h,b,e=t.querySelectorAll(""link[data-precedence],style[data-precedence]""),v=[],k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href""),b),r.set(b.dataset.precedence,h=b));e=0;b=[];var l,a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1,m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g,f[m++]);g=a._p=new Promise(function(q,x){a.onload=u.bind(a,q);a.onerror=u.bind(a,x)});$RM.set(d,a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l,a);c?c.parentNode.insertBefore(a,c.nextSibling):(c=t.head,c.insertBefore(a,c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null,n,w),$RX.bind(null,n,""CSS failed to load""))};$RR(""'
@@ -10206,20 +10392,14 @@
           return [!1, unsupportedStartTransition];
         },
         useId: function () {
-          var treeId = currentlyRenderingTask.treeContext;
-          var overflow = treeId.overflow;
-          treeId = treeId.id;
-          treeId =
-            (treeId & ~(1 << (32 - clz32(treeId) - 1))).toString(32) + overflow;
-          var resumableState = currentResumableState;
+          var treeId = getTreeId(currentlyRenderingTask.treeContext),
+            resumableState = currentResumableState;
           if (null === resumableState)
             throw Error(
               ""Invalid hook call. Hooks can only be called inside of the body of a function component.""
             );
-          overflow = localIdCounter++;
-          treeId = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
-          0 < overflow && (treeId += ""H"" + overflow.toString(32));
-          return treeId + ""_"";
+          var localId = localIdCounter++;
+          return makeId(resumableState, treeId, localId);
         },
         useSyncExternalStore: function (
           subscribe,
@@ -10799,5 +10979,5 @@
         }
       };
     };
-    exports.version = ""19.3.0-canary-c7862584-20251006"";
+    exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.node.production.js,524,302,826,"@@ -627,7 +627,8 @@ function getChildFormatContext(parentContext, type, props) {
   }
   return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
     ? createFormatContext(2, null, subtreeScope, null)
-    : parentContext.tagScope !== subtreeScope
+    : null !== parentContext.viewTransition ||
+        parentContext.tagScope !== subtreeScope
       ? createFormatContext(
           parentContext.insertionMode,
           parentContext.selectedValue,
@@ -671,13 +672,38 @@ function getSuspenseContentFormatContext(resumableState, parentContext) {
     resumableState
   );
 }
+function makeId(resumableState, treeId, localId) {
+  resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId;
+  0 < localId && (resumableState += ""H"" + localId.toString(32));
+  return resumableState + ""_"";
+}
 var textSeparator = stringToPrecomputedChunk(""\x3c!-- --\x3e"");
 function pushTextInstance(target, text, renderState, textEmbedded) {
   if ("""" === text) return textEmbedded;
   textEmbedded && target.push(textSeparator);
   target.push(escapeTextForBrowser(text));
   return !0;
 }
+function pushViewTransitionAttributes(target, formatContext) {
+  formatContext = formatContext.viewTransition;
+  null !== formatContext &&
+    (""auto"" !== formatContext.name &&
+      (pushStringAttribute(
+        target,
+        ""vt-name"",
+        0 === formatContext.nameIdx
+          ? formatContext.name
+          : formatContext.name + ""_"" + formatContext.nameIdx
+      ),
+      formatContext.nameIdx++),
+    pushStringAttribute(target, ""vt-update"", formatContext.update),
+    ""none"" !== formatContext.enter &&
+      pushStringAttribute(target, ""vt-enter"", formatContext.enter),
+    ""none"" !== formatContext.exit &&
+      pushStringAttribute(target, ""vt-exit"", formatContext.exit),
+    ""none"" !== formatContext.share &&
+      pushStringAttribute(target, ""vt-share"", formatContext.share));
+}
 var styleNameCache = new Map(),
   styleAttributeStart = stringToPrecomputedChunk(' style=""'),
   styleAssign = stringToPrecomputedChunk("":""),
@@ -1109,7 +1135,7 @@ var styleRegex = /(<\/|<)(s)(tyle)/gi;
 function styleReplacer(match, prefix, s, suffix) {
   return """" + prefix + (""s"" === s ? ""\\73 "" : ""\\53 "") + suffix;
 }
-function pushSelfClosing(target, props, tag) {
+function pushSelfClosing(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   for (var propKey in props)
     if (hasOwnProperty.call(props, propKey)) {
@@ -1126,6 +1152,7 @@ function pushSelfClosing(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(endOfStartTagSelfClosing);
   return null;
 }
@@ -1195,7 +1222,7 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag(""script""));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
+function pushStartSingletonElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -1214,11 +1241,12 @@ function pushStartSingletonElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(endOfStartTag);
   pushInnerHTML(target, innerHTML, tag);
   return tag;
 }
-function pushStartGenericElement(target, props, tag) {
+function pushStartGenericElement(target, props, tag, formatContext) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
     propKey;
@@ -1237,6 +1265,7 @@ function pushStartGenericElement(target, props, tag) {
             pushAttribute(target, propKey, propValue);
         }
     }
+  pushViewTransitionAttributes(target, formatContext);
   target.push(endOfStartTag);
   pushInnerHTML(target, innerHTML, tag);
   return ""string"" === typeof tag
@@ -1298,6 +1327,7 @@ function pushStartInstance(
                 pushAttribute(target$jscomp$0, propKey, propValue);
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       pushInnerHTML(target$jscomp$0, innerHTML, children);
       if (""string"" === typeof children) {
@@ -1336,6 +1366,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$0, children$jscomp$0);
       return children$jscomp$0;
@@ -1425,6 +1456,7 @@ function pushStartInstance(
       null === value$jscomp$0 &&
         null !== defaultValue &&
         (value$jscomp$0 = defaultValue);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       if (null != children$jscomp$2) {
         if (null != value$jscomp$0)
@@ -1519,6 +1551,7 @@ function pushStartInstance(
         ? pushAttribute(target$jscomp$0, ""value"", value$jscomp$1)
         : null !== defaultValue$jscomp$0 &&
           pushAttribute(target$jscomp$0, ""value"", defaultValue$jscomp$0);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTagSelfClosing);
       null != formData &&
         formData.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1577,6 +1610,7 @@ function pushStartInstance(
         formTarget$jscomp$0,
         name$jscomp$0
       );
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       null != formData$jscomp$0 &&
         formData$jscomp$0.forEach(pushAdditionalFormField, target$jscomp$0);
@@ -1662,6 +1696,7 @@ function pushStartInstance(
         pushAttribute(target$jscomp$0, ""method"", formMethod$jscomp$1);
       null != formTarget$jscomp$1 &&
         pushAttribute(target$jscomp$0, ""target"", formTarget$jscomp$1);
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       null !== formActionName &&
         (target$jscomp$0.push(startHiddenInputChunk),
@@ -1695,6 +1730,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       return null;
     case ""object"":
@@ -1732,6 +1768,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       pushInnerHTML(target$jscomp$0, innerHTML$jscomp$4, children$jscomp$5);
       if (""string"" === typeof children$jscomp$5) {
@@ -2003,17 +2040,33 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$7 = pushSelfClosing(
           target$jscomp$0,
           props,
-          ""meta""
+          ""meta"",
+          formatContext
         );
       else
         textEmbedded && target$jscomp$0.push(textSeparator),
           (JSCompiler_inline_result$jscomp$7 = isFallback$jscomp$1
             ? null
             : ""string"" === typeof props.charSet
-              ? pushSelfClosing(renderState.charsetChunks, props, ""meta"")
+              ? pushSelfClosing(
+                  renderState.charsetChunks,
+                  props,
+                  ""meta"",
+                  formatContext
+                )
               : ""viewport"" === props.name
-                ? pushSelfClosing(renderState.viewportChunks, props, ""meta"")
-                : pushSelfClosing(renderState.hoistableChunks, props, ""meta""));
+                ? pushSelfClosing(
+                    renderState.viewportChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  )
+                : pushSelfClosing(
+                    renderState.hoistableChunks,
+                    props,
+                    ""meta"",
+                    formatContext
+                  ));
       return JSCompiler_inline_result$jscomp$7;
     case ""listing"":
     case ""pre"":
@@ -2040,6 +2093,7 @@ function pushStartInstance(
                 );
             }
         }
+      pushViewTransitionAttributes(target$jscomp$0, formatContext);
       target$jscomp$0.push(endOfStartTag);
       if (null != innerHTML$jscomp$7) {
         if (null != children$jscomp$8)
@@ -2156,7 +2210,7 @@ function pushStartInstance(
                   promotablePreloads.set(key$jscomp$0, resource$jscomp$1)));
         }
       }
-      return pushSelfClosing(target$jscomp$0, props, ""img"");
+      return pushSelfClosing(target$jscomp$0, props, ""img"", formatContext);
     case ""base"":
     case ""area"":
     case ""br"":
@@ -2168,7 +2222,7 @@ function pushStartInstance(
     case ""source"":
     case ""track"":
     case ""wbr"":
-      return pushSelfClosing(target$jscomp$0, props, type);
+      return pushSelfClosing(target$jscomp$0, props, type, formatContext);
     case ""annotation-xml"":
     case ""color-profile"":
     case ""font-face"":
@@ -2189,13 +2243,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
           preamble.headChunks,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""head""
+          ""head"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$9;
     case ""body"":
@@ -2209,13 +2265,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
           preamble$jscomp$0.bodyChunks,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""body""
+          ""body"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$10;
     case ""html"":
@@ -2229,13 +2287,15 @@ function pushStartInstance(
         var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
           preamble$jscomp$1.htmlChunks,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       } else
         JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
           target$jscomp$0,
           props,
-          ""html""
+          ""html"",
+          formatContext
         );
       return JSCompiler_inline_result$jscomp$11;
     default:
@@ -2285,12 +2345,13 @@ function pushStartInstance(
               }
             }
           }
+        pushViewTransitionAttributes(target$jscomp$0, formatContext);
         target$jscomp$0.push(endOfStartTag);
         pushInnerHTML(target$jscomp$0, innerHTML$jscomp$8, children$jscomp$9);
         return children$jscomp$9;
       }
   }
-  return pushStartGenericElement(target$jscomp$0, props, type);
+  return pushStartGenericElement(target$jscomp$0, props, type, formatContext);
 }
 var endTagCache = new Map();
 function endChunkForTag(tag) {
@@ -3221,6 +3282,8 @@ function getComponentNameFromType(type) {
       return ""SuspenseList"";
     case REACT_ACTIVITY_TYPE:
       return ""Activity"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {
@@ -3334,6 +3397,11 @@ var classComponentUpdater = {
     enqueueForceUpdate: function () {}
   },
   emptyTreeContext = { id: 1, overflow: """" };
+function getTreeId(context) {
+  var overflow = context.overflow;
+  context = context.id;
+  return (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow;
+}
 function pushTreeContext(baseContext, totalChildren, index) {
   var baseIdWithLeadingBit = baseContext.id;
   baseContext = baseContext.overflow;
@@ -3692,24 +3760,14 @@ var HooksDispatcher = {
       return [!1, unsupportedStartTransition];
     },
     useId: function () {
-      var JSCompiler_inline_result = currentlyRenderingTask.treeContext;
-      var overflow = JSCompiler_inline_result.overflow;
-      JSCompiler_inline_result = JSCompiler_inline_result.id;
-      JSCompiler_inline_result =
-        (
-          JSCompiler_inline_result &
-          ~(1 << (32 - clz32(JSCompiler_inline_result) - 1))
-        ).toString(32) + overflow;
-      var resumableState = currentResumableState;
+      var treeId = getTreeId(currentlyRenderingTask.treeContext),
+        resumableState = currentResumableState;
       if (null === resumableState)
         throw Error(
           ""Invalid hook call. Hooks can only be called inside of the body of a function component.""
         );
-      overflow = localIdCounter++;
-      JSCompiler_inline_result =
-        ""_"" + resumableState.idPrefix + ""R_"" + JSCompiler_inline_result;
-      0 < overflow && (JSCompiler_inline_result += ""H"" + overflow.toString(32));
-      return JSCompiler_inline_result + ""_"";
+      var localId = localIdCounter++;
+      return makeId(resumableState, treeId, localId);
     },
     useSyncExternalStore: function (subscribe, getSnapshot, getServerSnapshot) {
       if (void 0 === getServerSnapshot)
@@ -3966,9 +4024,28 @@ function describeComponentStackByType(type) {
       return describeBuiltInComponentFrame(""SuspenseList"");
     case REACT_SUSPENSE_TYPE:
       return describeBuiltInComponentFrame(""Suspense"");
+    case REACT_VIEW_TRANSITION_TYPE:
+      return describeBuiltInComponentFrame(""ViewTransition"");
   }
   return """";
 }
+function getViewTransitionClassName(defaultClass, eventClass) {
+  defaultClass =
+    null == defaultClass || ""string"" === typeof defaultClass
+      ? defaultClass
+      : defaultClass.default;
+  eventClass =
+    null == eventClass || ""string"" === typeof eventClass
+      ? eventClass
+      : eventClass.default;
+  return null == eventClass
+    ? ""auto"" === defaultClass
+      ? null
+      : defaultClass
+    : ""auto"" === eventClass
+      ? null
+      : eventClass;
+}
 function isEligibleForOutlining(request, boundary) {
   return (
     (500 < boundary.byteSize || hasSuspenseyContent(boundary.contentState)) &&
@@ -4704,154 +4781,187 @@ function renderElement(request, task, keyPath, type, props, ref) {
           void 0 === newProps[propName$44] &&
             (newProps[propName$44] = defaultProps[propName$44]);
       }
-      props = newProps;
-      newProps = emptyContextObject;
-      defaultProps = type.contextType;
-      ""object"" === typeof defaultProps &&
-        null !== defaultProps &&
-        (newProps = defaultProps._currentValue);
-      newProps = new type(props, newProps);
-      var initialState = void 0 !== newProps.state ? newProps.state : null;
-      newProps.updater = classComponentUpdater;
-      newProps.props = props;
-      newProps.state = initialState;
-      defaultProps = { queue: [], replace: !1 };
-      newProps._reactInternals = defaultProps;
-      ref = type.contextType;
-      newProps.context =
-        ""object"" === typeof ref && null !== ref
-          ? ref._currentValue
+      var JSCompiler_inline_result = newProps;
+      var context = emptyContextObject,
+        contextType = type.contextType;
+      ""object"" === typeof contextType &&
+        null !== contextType &&
+        (context = contextType._currentValue);
+      var JSCompiler_inline_result$jscomp$0 = new type(
+        JSCompiler_inline_result,
+        context
+      );
+      var initialState =
+        void 0 !== JSCompiler_inline_result$jscomp$0.state
+          ? JSCompiler_inline_result$jscomp$0.state
+          : null;
+      JSCompiler_inline_result$jscomp$0.updater = classComponentUpdater;
+      JSCompiler_inline_result$jscomp$0.props = JSCompiler_inline_result;
+      JSCompiler_inline_result$jscomp$0.state = initialState;
+      var internalInstance = { queue: [], replace: !1 };
+      JSCompiler_inline_result$jscomp$0._reactInternals = internalInstance;
+      var contextType$jscomp$0 = type.contextType;
+      JSCompiler_inline_result$jscomp$0.context =
+        ""object"" === typeof contextType$jscomp$0 &&
+        null !== contextType$jscomp$0
+          ? contextType$jscomp$0._currentValue
           : emptyContextObject;
-      ref = type.getDerivedStateFromProps;
-      ""function"" === typeof ref &&
-        ((ref = ref(props, initialState)),
-        (initialState =
-          null === ref || void 0 === ref
+      var getDerivedStateFromProps = type.getDerivedStateFromProps;
+      if (""function"" === typeof getDerivedStateFromProps) {
+        var partialState = getDerivedStateFromProps(
+          JSCompiler_inline_result,
+          initialState
+        );
+        var JSCompiler_inline_result$jscomp$1 =
+          null === partialState || void 0 === partialState
             ? initialState
-            : assign({}, initialState, ref)),
-        (newProps.state = initialState));
+            : assign({}, initialState, partialState);
+        JSCompiler_inline_result$jscomp$0.state =
+          JSCompiler_inline_result$jscomp$1;
+      }
       if (
         ""function"" !== typeof type.getDerivedStateFromProps &&
-        ""function"" !== typeof newProps.getSnapshotBeforeUpdate &&
-        (""function"" === typeof newProps.UNSAFE_componentWillMount ||
-          ""function"" === typeof newProps.componentWillMount)
-      )
+        ""function"" !==
+          typeof JSCompiler_inline_result$jscomp$0.getSnapshotBeforeUpdate &&
+        (""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount ||
+          ""function"" ===
+            typeof JSCompiler_inline_result$jscomp$0.componentWillMount)
+      ) {
+        var oldState = JSCompiler_inline_result$jscomp$0.state;
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.componentWillMount();
+        ""function"" ===
+          typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount &&
+          JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount();
+        oldState !== JSCompiler_inline_result$jscomp$0.state &&
+          classComponentUpdater.enqueueReplaceState(
+            JSCompiler_inline_result$jscomp$0,
+            JSCompiler_inline_result$jscomp$0.state,
+            null
+          );
         if (
-          ((type = newProps.state),
-          ""function"" === typeof newProps.componentWillMount &&
-            newProps.componentWillMount(),
-          ""function"" === typeof newProps.UNSAFE_componentWillMount &&
-            newProps.UNSAFE_componentWillMount(),
-          type !== newProps.state &&
-            classComponentUpdater.enqueueReplaceState(
-              newProps,
-              newProps.state,
-              null
-            ),
-          null !== defaultProps.queue && 0 < defaultProps.queue.length)
-        )
-          if (
-            ((type = defaultProps.queue),
-            (ref = defaultProps.replace),
-            (defaultProps.queue = null),
-            (defaultProps.replace = !1),
-            ref && 1 === type.length)
-          )
-            newProps.state = type[0];
+          null !== internalInstance.queue &&
+          0 < internalInstance.queue.length
+        ) {
+          var oldQueue = internalInstance.queue,
+            oldReplace = internalInstance.replace;
+          internalInstance.queue = null;
+          internalInstance.replace = !1;
+          if (oldReplace && 1 === oldQueue.length)
+            JSCompiler_inline_result$jscomp$0.state = oldQueue[0];
           else {
-            defaultProps = ref ? type[0] : newProps.state;
-            initialState = !0;
-            for (ref = ref ? 1 : 0; ref < type.length; ref++)
-              (propName$44 = type[ref]),
-                (propName$44 =
-                  ""function"" === typeof propName$44
-                    ? propName$44.call(newProps, defaultProps, props, void 0)
-                    : propName$44),
-                null != propName$44 &&
-                  (initialState
-                    ? ((initialState = !1),
-                      (defaultProps = assign({}, defaultProps, propName$44)))
-                    : assign(defaultProps, propName$44));
-            newProps.state = defaultProps;
+            for (
+              var nextState = oldReplace
+                  ? oldQueue[0]
+                  : JSCompiler_inline_result$jscomp$0.state,
+                dontMutate = !0,
+                i = oldReplace ? 1 : 0;
+              i < oldQueue.length;
+              i++
+            ) {
+              var partial = oldQueue[i],
+                partialState$jscomp$0 =
+                  ""function"" === typeof partial
+                    ? partial.call(
+                        JSCompiler_inline_result$jscomp$0,
+                        nextState,
+                        JSCompiler_inline_result,
+                        void 0
+                      )
+                    : partial;
+              null != partialState$jscomp$0 &&
+                (dontMutate
+                  ? ((dontMutate = !1),
+                    (nextState = assign({}, nextState, partialState$jscomp$0)))
+                  : assign(nextState, partialState$jscomp$0));
+            }
+            JSCompiler_inline_result$jscomp$0.state = nextState;
           }
-        else defaultProps.queue = null;
-      type = newProps.render();
+        } else internalInstance.queue = null;
+      }
+      var nextChildren = JSCompiler_inline_result$jscomp$0.render();
       if (12 === request.status) throw null;
-      props = task.keyPath;
+      var prevKeyPath = task.keyPath;
       task.keyPath = keyPath;
-      renderNodeDestructive(request, task, type, -1);
-      task.keyPath = props;
+      renderNodeDestructive(request, task, nextChildren, -1);
+      task.keyPath = prevKeyPath;
     } else {
-      type = renderWithHooks(request, task, keyPath, type, props, void 0);
+      var value = renderWithHooks(request, task, keyPath, type, props, void 0);
       if (12 === request.status) throw null;
       finishFunctionComponent(
         request,
         task,
         keyPath,
-        type,
+        value,
         0 !== localIdCounter,
         actionStateCounter,
         actionStateMatchingIndex
       );
     }
-  else if (""string"" === typeof type)
-    if (((newProps = task.blockedSegment), null === newProps))
-      (newProps = props.children),
-        (defaultProps = task.formatContext),
-        (initialState = task.keyPath),
-        (task.formatContext = getChildFormatContext(defaultProps, type, props)),
-        (task.keyPath = keyPath),
-        renderNode(request, task, newProps, -1),
-        (task.formatContext = defaultProps),
-        (task.keyPath = initialState);
-    else {
-      initialState = pushStartInstance(
-        newProps.chunks,
+  else if (""string"" === typeof type) {
+    var segment = task.blockedSegment;
+    if (null === segment) {
+      var children = props.children,
+        prevContext = task.formatContext,
+        prevKeyPath$jscomp$0 = task.keyPath;
+      task.formatContext = getChildFormatContext(prevContext, type, props);
+      task.keyPath = keyPath;
+      renderNode(request, task, children, -1);
+      task.formatContext = prevContext;
+      task.keyPath = prevKeyPath$jscomp$0;
+    } else {
+      var children$41 = pushStartInstance(
+        segment.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
         task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
-        newProps.lastPushedText
+        segment.lastPushedText
       );
-      newProps.lastPushedText = !1;
-      defaultProps = task.formatContext;
-      ref = task.keyPath;
+      segment.lastPushedText = !1;
+      var prevContext$42 = task.formatContext,
+        prevKeyPath$43 = task.keyPath;
       task.keyPath = keyPath;
       if (
         3 ===
-        (task.formatContext = getChildFormatContext(defaultProps, type, props))
-          .insertionMode
+        (task.formatContext = getChildFormatContext(
+          prevContext$42,
+          type,
+          props
+        )).insertionMode
       ) {
-        keyPath = createPendingSegment(
+        var preambleSegment = createPendingSegment(
           request,
           0,
           null,
           task.formatContext,
           !1,
           !1
         );
-        newProps.preambleChildren.push(keyPath);
-        task.blockedSegment = keyPath;
+        segment.preambleChildren.push(preambleSegment);
+        task.blockedSegment = preambleSegment;
         try {
-          (keyPath.status = 6),
-            renderNode(request, task, initialState, -1),
-            keyPath.lastPushedText &&
-              keyPath.textEmbedded &&
-              keyPath.chunks.push(textSeparator),
-            (keyPath.status = 1),
-            finishedSegment(request, task.blockedBoundary, keyPath);
+          (preambleSegment.status = 6),
+            renderNode(request, task, children$41, -1),
+            preambleSegment.lastPushedText &&
+              preambleSegment.textEmbedded &&
+              preambleSegment.chunks.push(textSeparator),
+            (preambleSegment.status = 1),
+            finishedSegment(request, task.blockedBoundary, preambleSegment);
         } finally {
-          task.blockedSegment = newProps;
+          task.blockedSegment = segment;
         }
-      } else renderNode(request, task, initialState, -1);
-      task.formatContext = defaultProps;
-      task.keyPath = ref;
+      } else renderNode(request, task, children$41, -1);
+      task.formatContext = prevContext$42;
+      task.keyPath = prevKeyPath$43;
       a: {
-        task = newProps.chunks;
-        request = request.resumableState;
+        var target = segment.chunks,
+          resumableState = request.resumableState;
         switch (type) {
           case ""title"":
           case ""style"":
@@ -4873,131 +4983,221 @@ function renderElement(request, task, keyPath, type, props, ref) {
           case ""wbr"":
             break a;
           case ""body"":
-            if (1 >= defaultProps.insertionMode) {
-              request.hasBody = !0;
+            if (1 >= prevContext$42.insertionMode) {
+              resumableState.hasBody = !0;
               break a;
             }
             break;
           case ""html"":
-            if (0 === defaultProps.insertionMode) {
-              request.hasHtml = !0;
+            if (0 === prevContext$42.insertionMode) {
+              resumableState.hasHtml = !0;
               break a;
             }
             break;
           case ""head"":
-            if (1 >= defaultProps.insertionMode) break a;
+            if (1 >= prevContext$42.insertionMode) break a;
         }
-        task.push(endChunkForTag(type));
+        target.push(endChunkForTag(type));
       }
-      newProps.lastPushedText = !1;
+      segment.lastPushedText = !1;
     }
-  else {
+  } else {
     switch (type) {
       case REACT_LEGACY_HIDDEN_TYPE:
       case REACT_STRICT_MODE_TYPE:
       case REACT_PROFILER_TYPE:
       case REACT_FRAGMENT_TYPE:
-        type = task.keyPath;
+        var prevKeyPath$jscomp$1 = task.keyPath;
         task.keyPath = keyPath;
         renderNodeDestructive(request, task, props.children, -1);
-        task.keyPath = type;
+        task.keyPath = prevKeyPath$jscomp$1;
         return;
       case REACT_ACTIVITY_TYPE:
-        type = task.blockedSegment;
-        null === type
-          ? ""hidden"" !== props.mode &&
-            ((type = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = type))
-          : ""hidden"" !== props.mode &&
-            (type.chunks.push(startActivityBoundary),
-            (type.lastPushedText = !1),
-            (newProps = task.keyPath),
-            (task.keyPath = keyPath),
-            renderNode(request, task, props.children, -1),
-            (task.keyPath = newProps),
-            type.chunks.push(endActivityBoundary),
-            (type.lastPushedText = !1));
+        var segment$jscomp$0 = task.blockedSegment;
+        if (null === segment$jscomp$0) {
+          if (""hidden"" !== props.mode) {
+            var prevKeyPath$jscomp$2 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNode(request, task, props.children, -1);
+            task.keyPath = prevKeyPath$jscomp$2;
+          }
+        } else if (""hidden"" !== props.mode) {
+          segment$jscomp$0.chunks.push(startActivityBoundary);
+          segment$jscomp$0.lastPushedText = !1;
+          var prevKeyPath$46 = task.keyPath;
+          task.keyPath = keyPath;
+          renderNode(request, task, props.children, -1);
+          task.keyPath = prevKeyPath$46;
+          segment$jscomp$0.chunks.push(endActivityBoundary);
+          segment$jscomp$0.lastPushedText = !1;
+        }
         return;
       case REACT_SUSPENSE_LIST_TYPE:
         a: {
-          type = props.children;
-          props = props.revealOrder;
+          var children$jscomp$0 = props.children,
+            revealOrder = props.revealOrder;
           if (
-            ""forwards"" === props ||
-            ""backwards"" === props ||
-            ""unstable_legacy-backwards"" === props
+            ""forwards"" === revealOrder ||
+            ""backwards"" === revealOrder ||
+            ""unstable_legacy-backwards"" === revealOrder
           ) {
-            if (isArrayImpl(type)) {
-              renderSuspenseListRows(request, task, keyPath, type, props);
+            if (isArrayImpl(children$jscomp$0)) {
+              renderSuspenseListRows(
+                request,
+                task,
+                keyPath,
+                children$jscomp$0,
+                revealOrder
+              );
               break a;
             }
-            if ((newProps = getIteratorFn(type)))
-              if ((newProps = newProps.call(type))) {
-                defaultProps = newProps.next();
-                if (!defaultProps.done) {
-                  do defaultProps = newProps.next();
-                  while (!defaultProps.done);
-                  renderSuspenseListRows(request, task, keyPath, type, props);
+            var iteratorFn = getIteratorFn(children$jscomp$0);
+            if (iteratorFn) {
+              var iterator = iteratorFn.call(children$jscomp$0);
+              if (iterator) {
+                var step = iterator.next();
+                if (!step.done) {
+                  do step = iterator.next();
+                  while (!step.done);
+                  renderSuspenseListRows(
+                    request,
+                    task,
+                    keyPath,
+                    children$jscomp$0,
+                    revealOrder
+                  );
                 }
                 break a;
               }
+            }
+          }
+          if (""together"" === revealOrder) {
+            var prevKeyPath$40 = task.keyPath,
+              prevRow = task.row,
+              newRow = (task.row = createSuspenseListRow(null));
+            newRow.boundaries = [];
+            newRow.together = !0;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            0 === --newRow.pendingTasks &&
+              finishSuspenseListRow(request, newRow);
+            task.keyPath = prevKeyPath$40;
+            task.row = prevRow;
+            null !== prevRow &&
+              0 < newRow.pendingTasks &&
+              (prevRow.pendingTasks++, (newRow.next = prevRow));
+          } else {
+            var prevKeyPath$jscomp$3 = task.keyPath;
+            task.keyPath = keyPath;
+            renderNodeDestructive(request, task, children$jscomp$0, -1);
+            task.keyPath = prevKeyPath$jscomp$3;
           }
-          ""together"" === props
-            ? ((props = task.keyPath),
-              (newProps = task.row),
-              (defaultProps = task.row = createSuspenseListRow(null)),
-              (defaultProps.boundaries = []),
-              (defaultProps.together = !0),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              0 === --defaultProps.pendingTasks &&
-                finishSuspenseListRow(request, defaultProps),
-              (task.keyPath = props),
-              (task.row = newProps),
-              null !== newProps &&
-                0 < defaultProps.pendingTasks &&
-                (newProps.pendingTasks++, (defaultProps.next = newProps)))
-            : ((props = task.keyPath),
-              (task.keyPath = keyPath),
-              renderNodeDestructive(request, task, type, -1),
-              (task.keyPath = props));
         }
         return;
       case REACT_VIEW_TRANSITION_TYPE:
+        var prevContext$jscomp$0 = task.formatContext,
+          prevKeyPath$jscomp$4 = task.keyPath;
+        var resumableState$jscomp$0 = request.resumableState;
+        if (null != props.name && ""auto"" !== props.name)
+          var JSCompiler_inline_result$jscomp$2 = props.name;
+        else {
+          var treeId = getTreeId(task.treeContext);
+          JSCompiler_inline_result$jscomp$2 = makeId(
+            resumableState$jscomp$0,
+            treeId,
+            0
+          );
+        }
+        var autoName = JSCompiler_inline_result$jscomp$2,
+          resumableState$jscomp$1 = request.resumableState,
+          update = getViewTransitionClassName(props.default, props.update),
+          enter = getViewTransitionClassName(props.default, props.enter),
+          exit = getViewTransitionClassName(props.default, props.exit),
+          share = getViewTransitionClassName(props.default, props.share),
+          name = props.name;
+        null == update && (update = ""auto"");
+        null == enter && (enter = ""auto"");
+        null == exit && (exit = ""auto"");
+        if (null == name) {
+          var parentViewTransition = prevContext$jscomp$0.viewTransition;
+          null !== parentViewTransition
+            ? ((name = parentViewTransition.name),
+              (share = parentViewTransition.share))
+            : ((name = ""auto""), (share = ""none""));
+        } else
+          null == share && (share = ""auto""),
+            prevContext$jscomp$0.tagScope & 4 &&
+              (resumableState$jscomp$1.instructions |= 128);
+        prevContext$jscomp$0.tagScope & 8
+          ? (resumableState$jscomp$1.instructions |= 128)
+          : (exit = ""none"");
+        prevContext$jscomp$0.tagScope & 16
+          ? (resumableState$jscomp$1.instructions |= 128)
+          : (enter = ""none"");
+        var viewTransition = {
+            update: update,
+            enter: enter,
+            exit: exit,
+            share: share,
+            name: name,
+            autoName: autoName,
+            nameIdx: 0
+          },
+          subtreeScope = prevContext$jscomp$0.tagScope & -25;
+        subtreeScope =
+          ""none"" !== update ? subtreeScope | 32 : subtreeScope & -33;
+        ""none"" !== enter && (subtreeScope |= 64);
+        var JSCompiler_inline_result$jscomp$3 = createFormatContext(
+          prevContext$jscomp$0.insertionMode,
+          prevContext$jscomp$0.selectedValue,
+          subtreeScope,
+          viewTransition
+        );
+        task.formatContext = JSCompiler_inline_result$jscomp$3;
+        task.keyPath = keyPath;
+        if (null != props.name && ""auto"" !== props.name)
+          renderNodeDestructive(request, task, props.children, -1);
+        else {
+          var prevTreeContext = task.treeContext;
+          task.treeContext = pushTreeContext(prevTreeContext, 1, 0);
+          renderNode(request, task, props.children, -1);
+          task.treeContext = prevTreeContext;
+        }
+        task.formatContext = prevContext$jscomp$0;
+        task.keyPath = prevKeyPath$jscomp$4;
+        return;
       case REACT_SCOPE_TYPE:
         throw Error(""ReactDOMServer does not yet support scope components."");
       case REACT_SUSPENSE_TYPE:
         a: if (null !== task.replay) {
-          type = task.keyPath;
-          newProps = task.formatContext;
-          defaultProps = task.row;
+          var prevKeyPath$27 = task.keyPath,
+            prevContext$28 = task.formatContext,
+            prevRow$29 = task.row;
           task.keyPath = keyPath;
           task.formatContext = getSuspenseContentFormatContext(
             request.resumableState,
-            newProps
+            prevContext$28
           );
           task.row = null;
-          keyPath = props.children;
+          var content$30 = props.children;
           try {
-            renderNode(request, task, keyPath, -1);
+            renderNode(request, task, content$30, -1);
           } finally {
-            (task.keyPath = type),
-              (task.formatContext = newProps),
-              (task.row = defaultProps);
+            (task.keyPath = prevKeyPath$27),
+              (task.formatContext = prevContext$28),
+              (task.row = prevRow$29);
           }
         } else {
-          type = task.keyPath;
-          ref = task.formatContext;
-          var prevRow = task.row;
-          propName$44 = task.blockedBoundary;
-          propName = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState,
+          var prevKeyPath$jscomp$5 = task.keyPath,
+            prevContext$jscomp$1 = task.formatContext,
+            prevRow$jscomp$0 = task.row,
+            parentBoundary = task.blockedBoundary,
+            parentPreamble = task.blockedPreamble,
+            parentHoistableState = task.hoistableState,
             parentSegment = task.blockedSegment,
-            fallback = props.fallback;
-          props = props.children;
-          var fallbackAbortSet = new Set();
+            fallback = props.fallback,
+            content = props.children,
+            fallbackAbortSet = new Set();
           var newBoundary =
             2 > task.formatContext.insertionMode
               ? createSuspenseBoundary(
@@ -5036,43 +5236,53 @@ function renderElement(request, task, keyPath, type, props, ref) {
           );
           contentRootSegment.parentFlushed = !0;
           if (null !== request.trackedPostpones) {
-            newProps = task.componentStack;
-            defaultProps = [keyPath[0], ""Suspense Fallback"", keyPath[2]];
-            initialState = [defaultProps[1], defaultProps[2], [], null];
-            request.trackedPostpones.workingMap.set(defaultProps, initialState);
-            newBoundary.trackedFallbackNode = initialState;
+            var suspenseComponentStack = task.componentStack,
+              fallbackKeyPath = [keyPath[0], ""Suspense Fallback"", keyPath[2]],
+              fallbackReplayNode = [
+                fallbackKeyPath[1],
+                fallbackKeyPath[2],
+                [],
+                null
+              ];
+            request.trackedPostpones.workingMap.set(
+              fallbackKeyPath,
+              fallbackReplayNode
+            );
+            newBoundary.trackedFallbackNode = fallbackReplayNode;
             task.blockedSegment = boundarySegment;
             task.blockedPreamble = newBoundary.fallbackPreamble;
-            task.keyPath = defaultProps;
+            task.keyPath = fallbackKeyPath;
             task.formatContext = getSuspenseFallbackFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.componentStack =
-              replaceSuspenseComponentStackWithSuspenseFallbackStack(newProps);
+              replaceSuspenseComponentStackWithSuspenseFallbackStack(
+                suspenseComponentStack
+              );
             boundarySegment.status = 6;
             try {
               renderNode(request, task, fallback, -1),
                 boundarySegment.lastPushedText &&
                   boundarySegment.textEmbedded &&
                   boundarySegment.chunks.push(textSeparator),
                 (boundarySegment.status = 1),
-                finishedSegment(request, propName$44, boundarySegment);
+                finishedSegment(request, parentBoundary, boundarySegment);
             } catch (thrownValue) {
               throw (
                 ((boundarySegment.status = 12 === request.status ? 3 : 4),
                 thrownValue)
               );
             } finally {
               (task.blockedSegment = parentSegment),
-                (task.blockedPreamble = propName),
-                (task.keyPath = type),
-                (task.formatContext = ref);
+                (task.blockedPreamble = parentPreamble),
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1);
             }
-            task = createRenderTask(
+            var suspendedPrimaryTask = createRenderTask(
               request,
               null,
-              props,
+              content,
               -1,
               newBoundary,
               contentRootSegment,
@@ -5087,10 +5297,10 @@ function renderElement(request, task, keyPath, type, props, ref) {
               task.context,
               task.treeContext,
               null,
-              newProps
+              suspenseComponentStack
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedPrimaryTask);
+            request.pingedTasks.push(suspendedPrimaryTask);
           } else {
             task.blockedBoundary = newBoundary;
             task.blockedPreamble = newBoundary.contentPreamble;
@@ -5099,13 +5309,13 @@ function renderElement(request, task, keyPath, type, props, ref) {
             task.keyPath = keyPath;
             task.formatContext = getSuspenseContentFormatContext(
               request.resumableState,
-              ref
+              prevContext$jscomp$1
             );
             task.row = null;
             contentRootSegment.status = 6;
             try {
               if (
-                (renderNode(request, task, props, -1),
+                (renderNode(request, task, content, -1),
                 contentRootSegment.lastPushedText &&
                   contentRootSegment.textEmbedded &&
                   contentRootSegment.chunks.push(textSeparator),
@@ -5118,48 +5328,43 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   ((newBoundary.status = 1),
                   !isEligibleForOutlining(request, newBoundary))
                 ) {
-                  null !== prevRow &&
-                    0 === --prevRow.pendingTasks &&
-                    finishSuspenseListRow(request, prevRow);
+                  null !== prevRow$jscomp$0 &&
+                    0 === --prevRow$jscomp$0.pendingTasks &&
+                    finishSuspenseListRow(request, prevRow$jscomp$0);
                   0 === request.pendingRootTasks &&
                     task.blockedPreamble &&
                     preparePreamble(request);
                   break a;
                 }
               } else
-                null !== prevRow &&
-                  prevRow.together &&
-                  tryToResolveTogetherRow(request, prevRow);
+                null !== prevRow$jscomp$0 &&
+                  prevRow$jscomp$0.together &&
+                  tryToResolveTogetherRow(request, prevRow$jscomp$0);
             } catch (thrownValue$31) {
-              (newBoundary.status = 4),
-                12 === request.status
-                  ? ((contentRootSegment.status = 3),
-                    (newProps = request.fatalError))
-                  : ((contentRootSegment.status = 4),
-                    (newProps = thrownValue$31)),
-                (defaultProps = getThrownInfo(task.componentStack)),
-                (initialState = logRecoverableError(
-                  request,
-                  newProps,
-                  defaultProps
-                )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+              newBoundary.status = 4;
+              if (12 === request.status) {
+                contentRootSegment.status = 3;
+                var error = request.fatalError;
+              } else (contentRootSegment.status = 4), (error = thrownValue$31);
+              var thrownInfo = getThrownInfo(task.componentStack);
+              var errorDigest = logRecoverableError(request, error, thrownInfo);
+              newBoundary.errorDigest = errorDigest;
+              untrackBoundary(request, newBoundary);
             } finally {
-              (task.blockedBoundary = propName$44),
-                (task.blockedPreamble = propName),
+              (task.blockedBoundary = parentBoundary),
+                (task.blockedPreamble = parentPreamble),
                 (task.hoistableState = parentHoistableState),
                 (task.blockedSegment = parentSegment),
-                (task.keyPath = type),
-                (task.formatContext = ref),
-                (task.row = prevRow);
+                (task.keyPath = prevKeyPath$jscomp$5),
+                (task.formatContext = prevContext$jscomp$1),
+                (task.row = prevRow$jscomp$0);
             }
-            task = createRenderTask(
+            var suspendedFallbackTask = createRenderTask(
               request,
               null,
               fallback,
               -1,
-              propName$44,
+              parentBoundary,
               boundarySegment,
               newBoundary.fallbackPreamble,
               newBoundary.fallbackState,
@@ -5176,33 +5381,33 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 task.componentStack
               )
             );
-            pushComponentStack(task);
-            request.pingedTasks.push(task);
+            pushComponentStack(suspendedFallbackTask);
+            request.pingedTasks.push(suspendedFallbackTask);
           }
         }
         return;
     }
     if (""object"" === typeof type && null !== type)
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
-          if (""ref"" in props)
-            for (parentSegment in ((newProps = {}), props))
-              ""ref"" !== parentSegment &&
-                (newProps[parentSegment] = props[parentSegment]);
-          else newProps = props;
-          type = renderWithHooks(
+          if (""ref"" in props) {
+            var propsWithoutRef = {};
+            for (var key in props)
+              ""ref"" !== key && (propsWithoutRef[key] = props[key]);
+          } else propsWithoutRef = props;
+          var children$jscomp$1 = renderWithHooks(
             request,
             task,
             keyPath,
             type.render,
-            newProps,
+            propsWithoutRef,
             ref
           );
           finishFunctionComponent(
             request,
             task,
             keyPath,
-            type,
+            children$jscomp$1,
             0 !== localIdCounter,
             actionStateCounter,
             actionStateMatchingIndex
@@ -5212,45 +5417,47 @@ function renderElement(request, task, keyPath, type, props, ref) {
           renderElement(request, task, keyPath, type.type, props, ref);
           return;
         case REACT_CONTEXT_TYPE:
-          defaultProps = props.children;
-          newProps = task.keyPath;
-          props = props.value;
-          initialState = type._currentValue;
-          type._currentValue = props;
-          ref = currentActiveSnapshot;
-          currentActiveSnapshot = type = {
-            parent: ref,
-            depth: null === ref ? 0 : ref.depth + 1,
-            context: type,
-            parentValue: initialState,
-            value: props
-          };
-          task.context = type;
+          var children$jscomp$2 = props.children,
+            prevKeyPath$jscomp$6 = task.keyPath,
+            nextValue = props.value;
+          var prevValue = type._currentValue;
+          type._currentValue = nextValue;
+          var prevNode = currentActiveSnapshot,
+            newNode = {
+              parent: prevNode,
+              depth: null === prevNode ? 0 : prevNode.depth + 1,
+              context: type,
+              parentValue: prevValue,
+              value: nextValue
+            };
+          currentActiveSnapshot = newNode;
+          task.context = newNode;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, defaultProps, -1);
-          request = currentActiveSnapshot;
-          if (null === request)
+          renderNodeDestructive(request, task, children$jscomp$2, -1);
+          var prevSnapshot = currentActiveSnapshot;
+          if (null === prevSnapshot)
             throw Error(
               ""Tried to pop a Context at the root of the app. This is a bug in React.""
             );
-          request.context._currentValue = request.parentValue;
-          request = currentActiveSnapshot = request.parent;
-          task.context = request;
-          task.keyPath = newProps;
+          prevSnapshot.context._currentValue = prevSnapshot.parentValue;
+          var JSCompiler_inline_result$jscomp$4 = (currentActiveSnapshot =
+            prevSnapshot.parent);
+          task.context = JSCompiler_inline_result$jscomp$4;
+          task.keyPath = prevKeyPath$jscomp$6;
           return;
         case REACT_CONSUMER_TYPE:
-          props = props.children;
-          type = props(type._context._currentValue);
-          props = task.keyPath;
+          var render = props.children,
+            newChildren = render(type._context._currentValue),
+            prevKeyPath$jscomp$7 = task.keyPath;
           task.keyPath = keyPath;
-          renderNodeDestructive(request, task, type, -1);
-          task.keyPath = props;
+          renderNodeDestructive(request, task, newChildren, -1);
+          task.keyPath = prevKeyPath$jscomp$7;
           return;
         case REACT_LAZY_TYPE:
-          newProps = type._init;
-          type = newProps(type._payload);
+          var init = type._init;
+          var Component = init(type._payload);
           if (12 === request.status) throw null;
-          renderElement(request, task, keyPath, type, props, ref);
+          renderElement(request, task, keyPath, Component, props, ref);
           return;
       }
     throw Error(
@@ -6668,7 +6875,8 @@ function flushCompletedBoundary(request, destination, boundary) {
   request = request.renderState;
   i = boundary.rootSegmentID;
   boundary = boundary.contentState;
-  var requiresStyleInsertion = request.stylesToHoist;
+  var requiresStyleInsertion = request.stylesToHoist,
+    requiresViewTransitions = 0 !== (completedSegments.instructions & 128);
   request.stylesToHoist = !1;
   writeChunk(destination, request.startInlineScript);
   writeChunk(destination, endOfStartTag);
@@ -6679,13 +6887,27 @@ function flushCompletedBoundary(request, destination, boundary) {
       0 === (completedSegments.instructions & 2) &&
         ((completedSegments.instructions |= 2),
         writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        writeChunk(
+          destination,
+          '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+        )),
       0 === (completedSegments.instructions & 8)
         ? ((completedSegments.instructions |= 8),
           writeChunk(destination, completeBoundaryWithStylesScript1FullPartial))
         : writeChunk(destination, completeBoundaryWithStylesScript1Partial))
     : (0 === (completedSegments.instructions & 2) &&
         ((completedSegments.instructions |= 2),
         writeChunk(destination, completeBoundaryScriptFunctionOnly)),
+      requiresViewTransitions &&
+        0 === (completedSegments.instructions & 256) &&
+        ((completedSegments.instructions |= 256),
+        writeChunk(
+          destination,
+          '$RV=function(A,g){function k(a,b){var e=a.getAttribute(b);e&&(b=a.style,l.push(a,b.viewTransitionName,b.viewTransitionClass),""auto""!==e&&(b.viewTransitionClass=e),(a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_""),b.viewTransitionName=a,B=!0)}var B=!1,K=0,l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null,g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]""),d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name""),c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h],x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name""),y=m.get(D);k(d,y?""vt-share"":""vt-exit"");y&&(k(y,""vt-share""),m.set(D,null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d],G=F.getAttribute(""vt-name""),\nH=m.get(G);H&&(k(F,""vt-share""),k(H,""vt-share""),m.set(G,null))}}c=c.nextSibling}for(var I=g[h+1],t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t,""vt-enter""),t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n,""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u,I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight,document.fonts.ready],b={},e=0;e<u.length;b={g:b.g},e++)if(b.g=u[e],!b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"",q);w.g.addEventListener(""error"",q)}}(b)),a.push(p))}return Promise.race([Promise.all(a),new Promise(function(w){var q=\nperformance.now();setTimeout(w,2300>q&&2E3<q?2300-q:500)})])},types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a],e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null,$RV);'
+        )),
       writeChunk(destination, completeBoundaryScript1Partial));
   completedSegments = i.toString(16);
   writeChunk(destination, request.boundaryPrefix);
@@ -7143,11 +7365,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-canary-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-canary-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7705,4 +7927,4 @@ exports.resumeToPipeableStream = function (children, postponedState, options) {
     }
   };
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.development.js,1,1,2,"@@ -416,7 +416,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-canary-c7862584-20251006"";
+    exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.production.js,1,1,2,"@@ -207,4 +207,4 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.react-server.development.js,1,1,2,"@@ -336,5 +336,5 @@
             }))
           : Internals.d.m(href));
     };
-    exports.version = ""19.3.0-canary-c7862584-20251006"";
+    exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.react-server.production.js,1,1,2,"@@ -149,4 +149,4 @@ exports.preloadModule = function (href, options) {
       });
     } else Internals.d.m(href);
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/package.json,2,2,4,"@@ -67,10 +67,10 @@
     ""./package.json"": ""./package.json""
   },
   ""dependencies"": {
-    ""scheduler"": ""0.28.0-canary-c7862584-20251006""
+    ""scheduler"": ""0.28.0-canary-a4eb2dfa-20251006""
   },
   ""peerDependencies"": {
-    ""react"": ""19.3.0-canary-c7862584-20251006""
+    ""react"": ""19.3.0-canary-a4eb2dfa-20251006""
   },
   ""browser"": {
     ""./server.js"": ""./server.browser.js"","
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.development.js,3,3,6,"@@ -863,6 +863,7 @@
     exports.PureComponent = PureComponent;
     exports.StrictMode = REACT_STRICT_MODE_TYPE;
     exports.Suspense = REACT_SUSPENSE_TYPE;
+    exports.ViewTransition = REACT_VIEW_TRANSITION_TYPE;
     exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
       ReactSharedInternals;
     exports.__COMPILER_RUNTIME = deprecatedAPIs;
@@ -977,6 +978,7 @@
         }
       };
     };
+    exports.addTransitionType = addTransitionType;
     exports.cache = function (fn) {
       return function () {
         return fn.apply(null, arguments);
@@ -1220,8 +1222,6 @@
     };
     exports.startTransition = startTransition;
     exports.unstable_SuspenseList = REACT_SUSPENSE_LIST_TYPE;
-    exports.unstable_ViewTransition = REACT_VIEW_TRANSITION_TYPE;
-    exports.unstable_addTransitionType = addTransitionType;
     exports.unstable_getCacheForType = function (resourceType) {
       var dispatcher = ReactSharedInternals.A;
       return dispatcher
@@ -1356,7 +1356,7 @@
     exports.useTransition = function () {
       return resolveDispatcher().useTransition();
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.production.js,3,3,6,"@@ -390,6 +390,7 @@ exports.Profiler = REACT_PROFILER_TYPE;
 exports.PureComponent = PureComponent;
 exports.StrictMode = REACT_STRICT_MODE_TYPE;
 exports.Suspense = REACT_SUSPENSE_TYPE;
+exports.ViewTransition = REACT_VIEW_TRANSITION_TYPE;
 exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
   ReactSharedInternals;
 exports.__COMPILER_RUNTIME = {
@@ -398,6 +399,7 @@ exports.__COMPILER_RUNTIME = {
     return ReactSharedInternals.H.useMemoCache(size);
   }
 };
+exports.addTransitionType = addTransitionType;
 exports.cache = function (fn) {
   return function () {
     return fn.apply(null, arguments);
@@ -497,8 +499,6 @@ exports.memo = function (type, compare) {
 exports.startTransition = startTransition;
 exports.unstable_Activity = REACT_ACTIVITY_TYPE;
 exports.unstable_SuspenseList = REACT_SUSPENSE_LIST_TYPE;
-exports.unstable_ViewTransition = REACT_VIEW_TRANSITION_TYPE;
-exports.unstable_addTransitionType = addTransitionType;
 exports.unstable_getCacheForType = function (resourceType) {
   var dispatcher = ReactSharedInternals.A;
   return dispatcher ? dispatcher.getCacheForType(resourceType) : resourceType();
@@ -597,4 +597,4 @@ exports.useSyncExternalStore = function (
 exports.useTransition = function () {
   return ReactSharedInternals.H.useTransition();
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.react-server.development.js,2,2,4,"@@ -637,6 +637,7 @@
     exports.Profiler = REACT_PROFILER_TYPE;
     exports.StrictMode = REACT_STRICT_MODE_TYPE;
     exports.Suspense = REACT_SUSPENSE_TYPE;
+    exports.ViewTransition = REACT_VIEW_TRANSITION_TYPE;
     exports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
       ReactSharedInternals;
     exports.cache = function (fn) {
@@ -999,7 +1000,6 @@
       }
     };
     exports.unstable_SuspenseList = REACT_SUSPENSE_LIST_TYPE;
-    exports.unstable_ViewTransition = REACT_VIEW_TRANSITION_TYPE;
     exports.unstable_getCacheForType = function (resourceType) {
       var dispatcher = ReactSharedInternals.A;
       return dispatcher
@@ -1026,5 +1026,5 @@
     exports.useMemo = function (create, deps) {
       return resolveDispatcher().useMemo(create, deps);
     };
-    exports.version = ""19.3.0-experimental-c7862584-20251006"";
+    exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.react-server.production.js,2,2,4,"@@ -357,6 +357,7 @@ exports.Fragment = REACT_FRAGMENT_TYPE;
 exports.Profiler = REACT_PROFILER_TYPE;
 exports.StrictMode = REACT_STRICT_MODE_TYPE;
 exports.Suspense = REACT_SUSPENSE_TYPE;
+exports.ViewTransition = REACT_VIEW_TRANSITION_TYPE;
 exports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
   ReactSharedInternals;
 exports.cache = function (fn) {
@@ -540,7 +541,6 @@ exports.startTransition = function (scope) {
   }
 };
 exports.unstable_SuspenseList = REACT_SUSPENSE_LIST_TYPE;
-exports.unstable_ViewTransition = REACT_VIEW_TRANSITION_TYPE;
 exports.unstable_getCacheForType = function (resourceType) {
   var dispatcher = ReactSharedInternals.A;
   return dispatcher ? dispatcher.getCacheForType(resourceType) : resourceType();
@@ -563,4 +563,4 @@ exports.useId = function () {
 exports.useMemo = function (create, deps) {
   return ReactSharedInternals.H.useMemo(create, deps);
 };
-exports.version = ""19.3.0-experimental-c7862584-20251006"";
+exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-is/cjs/react-is.development.js,1,0,1,"@@ -116,6 +116,7 @@
         type === REACT_STRICT_MODE_TYPE ||
         type === REACT_SUSPENSE_TYPE ||
         type === REACT_SUSPENSE_LIST_TYPE ||
+        type === REACT_VIEW_TRANSITION_TYPE ||
         (""object"" === typeof type &&
           null !== type &&
           (type.$$typeof === REACT_LAZY_TYPE ||"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-is/cjs/react-is.production.js,1,0,1,"@@ -114,6 +114,7 @@ exports.isValidElementType = function (type) {
     type === REACT_STRICT_MODE_TYPE ||
     type === REACT_SUSPENSE_TYPE ||
     type === REACT_SUSPENSE_LIST_TYPE ||
+    type === REACT_VIEW_TRANSITION_TYPE ||
     (""object"" === typeof type &&
       null !== type &&
       (type.$$typeof === REACT_LAZY_TYPE ||"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-is/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-is"",
-  ""version"": ""19.3.0-canary-c7862584-20251006"",
+  ""version"": ""19.3.0-canary-a4eb2dfa-20251006"",
   ""description"": ""Brand checking of React Elements."",
   ""main"": ""index.js"",
   ""sideEffects"": false,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack-experimental/cjs/react-server-dom-turbopack-client.browser.development.js,2,2,4,"@@ -4887,10 +4887,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-experimental-c7862584-20251006"",
+      version: ""19.3.0-experimental-a4eb2dfa-20251006"",
       rendererPackageName: ""react-server-dom-turbopack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"",
+      reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack-experimental/package.json,2,2,4,"@@ -48,7 +48,7 @@
     ""neo-async"": ""^2.6.1""
   },
   ""peerDependencies"": {
-    ""react"": ""0.0.0-experimental-c7862584-20251006"",
-    ""react-dom"": ""0.0.0-experimental-c7862584-20251006""
+    ""react"": ""0.0.0-experimental-a4eb2dfa-20251006"",
+    ""react-dom"": ""0.0.0-experimental-a4eb2dfa-20251006""
   }
 }
\ No newline at end of file"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-client.browser.development.js,7,2,9,"@@ -180,6 +180,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -867,6 +869,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -4668,6 +4672,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       isArrayImpl = Array.isArray,
@@ -4858,10 +4863,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-canary-c7862584-20251006"",
+      version: ""19.3.0-canary-a4eb2dfa-20251006"",
       rendererPackageName: ""react-server-dom-turbopack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-canary-c7862584-20251006"",
+      reconcilerVersion: ""19.3.0-canary-a4eb2dfa-20251006"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-client.edge.development.js,5,0,5,"@@ -205,6 +205,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -1073,6 +1075,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -4706,6 +4710,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       isArrayImpl = Array.isArray,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-client.node.development.js,5,0,5,"@@ -205,6 +205,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -1073,6 +1075,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -4811,6 +4815,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       isArrayImpl = Array.isArray,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-server.browser.development.js,4,1,5,"@@ -668,6 +668,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -4855,7 +4857,8 @@
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
     Symbol.for(""react.postpone"");
-    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
+    var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       SuspenseException = Error(
         ""Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`."""
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-server.browser.production.js,4,1,5,"@@ -541,7 +541,8 @@ var REACT_LEGACY_ELEMENT_TYPE = Symbol.for(""react.element""),
   REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
   REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
 Symbol.for(""react.postpone"");
-var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
 function getIteratorFn(maybeIterable) {
   if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null;
   maybeIterable =
@@ -743,6 +744,8 @@ function describeElementType(type) {
       return ""Suspense"";
     case REACT_SUSPENSE_LIST_TYPE:
       return ""SuspenseList"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-server.edge.development.js,4,1,5,"@@ -675,6 +675,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -4709,7 +4711,8 @@
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
     Symbol.for(""react.postpone"");
-    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
+    var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       LocalPromise = Promise,
       scheduleMicrotask ="
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-server.edge.production.js,4,1,5,"@@ -22,7 +22,8 @@ var ReactDOM = require(""react-dom""),
   REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
   REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
 Symbol.for(""react.postpone"");
-var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
 function getIteratorFn(maybeIterable) {
   if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null;
   maybeIterable =
@@ -734,6 +735,8 @@ function describeElementType(type) {
       return ""Suspense"";
     case REACT_SUSPENSE_LIST_TYPE:
       return ""SuspenseList"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-server.node.development.js,4,1,5,"@@ -726,6 +726,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -5175,7 +5177,8 @@
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
     Symbol.for(""react.postpone"");
-    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
+    var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       scheduleMicrotask = queueMicrotask,
       currentView = null,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-server.node.production.js,4,1,5,"@@ -26,7 +26,8 @@ var async_hooks = require(""async_hooks""),
   REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
   REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
 Symbol.for(""react.postpone"");
-var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
 function getIteratorFn(maybeIterable) {
   if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null;
   maybeIterable =
@@ -760,6 +761,8 @@ function describeElementType(type) {
       return ""Suspense"";
     case REACT_SUSPENSE_LIST_TYPE:
       return ""SuspenseList"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/package.json,2,2,4,"@@ -48,7 +48,7 @@
     ""neo-async"": ""^2.6.1""
   },
   ""peerDependencies"": {
-    ""react"": ""19.3.0-canary-c7862584-20251006"",
-    ""react-dom"": ""19.3.0-canary-c7862584-20251006""
+    ""react"": ""19.3.0-canary-a4eb2dfa-20251006"",
+    ""react-dom"": ""19.3.0-canary-a4eb2dfa-20251006""
   }
 }
\ No newline at end of file"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack-experimental/cjs/react-server-dom-webpack-client.browser.development.js,2,2,4,"@@ -4903,10 +4903,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-experimental-c7862584-20251006"",
+      version: ""19.3.0-experimental-a4eb2dfa-20251006"",
       rendererPackageName: ""react-server-dom-webpack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"",
+      reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack-experimental/package.json,2,2,4,"@@ -64,8 +64,8 @@
     ""webpack-sources"": ""^3.2.0""
   },
   ""peerDependencies"": {
-    ""react"": ""0.0.0-experimental-c7862584-20251006"",
-    ""react-dom"": ""0.0.0-experimental-c7862584-20251006"",
+    ""react"": ""0.0.0-experimental-a4eb2dfa-20251006"",
+    ""react-dom"": ""0.0.0-experimental-a4eb2dfa-20251006"",
     ""webpack"": ""^5.59.0""
   }
 }
\ No newline at end of file"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js,7,2,9,"@@ -187,6 +187,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -874,6 +876,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -4684,6 +4688,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       isArrayImpl = Array.isArray,
@@ -4874,10 +4879,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-canary-c7862584-20251006"",
+      version: ""19.3.0-canary-a4eb2dfa-20251006"",
       rendererPackageName: ""react-server-dom-webpack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-canary-c7862584-20251006"",
+      reconcilerVersion: ""19.3.0-canary-a4eb2dfa-20251006"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js,5,0,5,"@@ -208,6 +208,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -1076,6 +1078,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -4708,6 +4712,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       isArrayImpl = Array.isArray,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js,5,0,5,"@@ -208,6 +208,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -1076,6 +1078,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -4813,6 +4817,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       isArrayImpl = Array.isArray,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js,5,0,5,"@@ -170,6 +170,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -1038,6 +1040,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -4773,6 +4777,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       isArrayImpl = Array.isArray,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js,4,1,5,"@@ -668,6 +668,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -4862,7 +4864,8 @@
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
     Symbol.for(""react.postpone"");
-    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
+    var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       SuspenseException = Error(
         ""Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`."""
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.js,4,1,5,"@@ -541,7 +541,8 @@ var REACT_LEGACY_ELEMENT_TYPE = Symbol.for(""react.element""),
   REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
   REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
 Symbol.for(""react.postpone"");
-var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
 function getIteratorFn(maybeIterable) {
   if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null;
   maybeIterable =
@@ -743,6 +744,8 @@ function describeElementType(type) {
       return ""Suspense"";
     case REACT_SUSPENSE_LIST_TYPE:
       return ""SuspenseList"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js,4,1,5,"@@ -675,6 +675,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -4712,7 +4714,8 @@
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
     Symbol.for(""react.postpone"");
-    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
+    var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       LocalPromise = Promise,
       scheduleMicrotask ="
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.js,4,1,5,"@@ -22,7 +22,8 @@ var ReactDOM = require(""react-dom""),
   REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
   REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
 Symbol.for(""react.postpone"");
-var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
 function getIteratorFn(maybeIterable) {
   if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null;
   maybeIterable =
@@ -734,6 +735,8 @@ function describeElementType(type) {
       return ""Suspense"";
     case REACT_SUSPENSE_LIST_TYPE:
       return ""SuspenseList"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js,4,1,5,"@@ -726,6 +726,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -5178,7 +5180,8 @@
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
     Symbol.for(""react.postpone"");
-    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
+    var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       scheduleMicrotask = queueMicrotask,
       currentView = null,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.js,4,1,5,"@@ -26,7 +26,8 @@ var async_hooks = require(""async_hooks""),
   REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
   REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
 Symbol.for(""react.postpone"");
-var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
 function getIteratorFn(maybeIterable) {
   if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null;
   maybeIterable =
@@ -760,6 +761,8 @@ function describeElementType(type) {
       return ""Suspense"";
     case REACT_SUSPENSE_LIST_TYPE:
       return ""SuspenseList"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js,4,1,5,"@@ -726,6 +726,8 @@
           return ""Suspense"";
         case REACT_SUSPENSE_LIST_TYPE:
           return ""SuspenseList"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (type.$$typeof) {
@@ -5141,7 +5143,8 @@
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
     Symbol.for(""react.postpone"");
-    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
+    var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       ASYNC_ITERATOR = Symbol.asyncIterator,
       scheduleMicrotask = queueMicrotask,
       currentView = null,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.js,4,1,5,"@@ -26,7 +26,8 @@ var async_hooks = require(""async_hooks""),
   REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
   REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel"");
 Symbol.for(""react.postpone"");
-var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
+var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
+  MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
 function getIteratorFn(maybeIterable) {
   if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null;
   maybeIterable =
@@ -760,6 +761,8 @@ function describeElementType(type) {
       return ""Suspense"";
     case REACT_SUSPENSE_LIST_TYPE:
       return ""SuspenseList"";
+    case REACT_VIEW_TRANSITION_TYPE:
+      return ""ViewTransition"";
   }
   if (""object"" === typeof type)
     switch (type.$$typeof) {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/package.json,2,2,4,"@@ -64,8 +64,8 @@
     ""webpack-sources"": ""^3.2.0""
   },
   ""peerDependencies"": {
-    ""react"": ""19.3.0-canary-c7862584-20251006"",
-    ""react-dom"": ""19.3.0-canary-c7862584-20251006"",
+    ""react"": ""19.3.0-canary-a4eb2dfa-20251006"",
+    ""react-dom"": ""19.3.0-canary-a4eb2dfa-20251006"",
     ""webpack"": ""^5.59.0""
   }
 }
\ No newline at end of file"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react-jsx-dev-runtime.development.js,3,0,3,"@@ -31,6 +31,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -297,6 +299,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       REACT_CLIENT_REFERENCE = Symbol.for(""react.client.reference""),
       ReactSharedInternals =
         React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react-jsx-dev-runtime.react-server.development.js,3,0,3,"@@ -31,6 +31,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -297,6 +299,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       REACT_CLIENT_REFERENCE = Symbol.for(""react.client.reference""),
       ReactSharedInternalsServer =
         React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react-jsx-runtime.development.js,3,0,3,"@@ -31,6 +31,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -297,6 +299,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       REACT_CLIENT_REFERENCE = Symbol.for(""react.client.reference""),
       ReactSharedInternals =
         React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react-jsx-runtime.react-server.development.js,3,0,3,"@@ -31,6 +31,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -297,6 +299,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       REACT_CLIENT_REFERENCE = Symbol.for(""react.client.reference""),
       ReactSharedInternalsServer =
         React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.development.js,61,39,100,"@@ -105,6 +105,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -523,6 +525,60 @@
     function releaseAsyncTransition() {
       ReactSharedInternals.asyncTransitions--;
     }
+    function startTransition(scope) {
+      var prevTransition = ReactSharedInternals.T,
+        currentTransition = {};
+      currentTransition.types =
+        null !== prevTransition ? prevTransition.types : null;
+      currentTransition._updatedFibers = new Set();
+      ReactSharedInternals.T = currentTransition;
+      try {
+        var returnValue = scope(),
+          onStartTransitionFinish = ReactSharedInternals.S;
+        null !== onStartTransitionFinish &&
+          onStartTransitionFinish(currentTransition, returnValue);
+        ""object"" === typeof returnValue &&
+          null !== returnValue &&
+          ""function"" === typeof returnValue.then &&
+          (ReactSharedInternals.asyncTransitions++,
+          returnValue.then(releaseAsyncTransition, releaseAsyncTransition),
+          returnValue.then(noop, reportGlobalError));
+      } catch (error) {
+        reportGlobalError(error);
+      } finally {
+        null === prevTransition &&
+          currentTransition._updatedFibers &&
+          ((scope = currentTransition._updatedFibers.size),
+          currentTransition._updatedFibers.clear(),
+          10 < scope &&
+            console.warn(
+              ""Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.""
+            )),
+          null !== prevTransition &&
+            null !== currentTransition.types &&
+            (null !== prevTransition.types &&
+              prevTransition.types !== currentTransition.types &&
+              console.error(
+                ""We expected inner Transitions to have transferred the outer types set and that you cannot add to the outer Transition while inside the inner.This is a bug in React.""
+              ),
+            (prevTransition.types = currentTransition.types)),
+          (ReactSharedInternals.T = prevTransition);
+      }
+    }
+    function addTransitionType(type) {
+      var transition = ReactSharedInternals.T;
+      if (null !== transition) {
+        var transitionTypes = transition.types;
+        null === transitionTypes
+          ? (transition.types = [type])
+          : -1 === transitionTypes.indexOf(type) && transitionTypes.push(type);
+      } else
+        0 === ReactSharedInternals.asyncTransitions &&
+          console.error(
+            ""addTransitionType can only be called inside a `startTransition()` callback. It must be associated with a specific Transition.""
+          ),
+          startTransition(addTransitionType.bind(null, type));
+    }
     function enqueueTask(task) {
       if (null === enqueueTaskImpl)
         try {
@@ -623,6 +679,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       didWarnStateUpdateForUnmountedComponent = {},
       ReactNoopUpdateQueue = {
@@ -800,6 +857,7 @@
     exports.PureComponent = PureComponent;
     exports.StrictMode = REACT_STRICT_MODE_TYPE;
     exports.Suspense = REACT_SUSPENSE_TYPE;
+    exports.ViewTransition = REACT_VIEW_TRANSITION_TYPE;
     exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
       ReactSharedInternals;
     exports.__COMPILER_RUNTIME = deprecatedAPIs;
@@ -914,6 +972,7 @@
         }
       };
     };
+    exports.addTransitionType = addTransitionType;
     exports.cache = function (fn) {
       return function () {
         return fn.apply(null, arguments);
@@ -1149,44 +1208,7 @@
       });
       return compare;
     };
-    exports.startTransition = function (scope) {
-      var prevTransition = ReactSharedInternals.T,
-        currentTransition = {};
-      currentTransition._updatedFibers = new Set();
-      ReactSharedInternals.T = currentTransition;
-      try {
-        var returnValue = scope(),
-          onStartTransitionFinish = ReactSharedInternals.S;
-        null !== onStartTransitionFinish &&
-          onStartTransitionFinish(currentTransition, returnValue);
-        ""object"" === typeof returnValue &&
-          null !== returnValue &&
-          ""function"" === typeof returnValue.then &&
-          (ReactSharedInternals.asyncTransitions++,
-          returnValue.then(releaseAsyncTransition, releaseAsyncTransition),
-          returnValue.then(noop, reportGlobalError));
-      } catch (error) {
-        reportGlobalError(error);
-      } finally {
-        null === prevTransition &&
-          currentTransition._updatedFibers &&
-          ((scope = currentTransition._updatedFibers.size),
-          currentTransition._updatedFibers.clear(),
-          10 < scope &&
-            console.warn(
-              ""Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.""
-            )),
-          null !== prevTransition &&
-            null !== currentTransition.types &&
-            (null !== prevTransition.types &&
-              prevTransition.types !== currentTransition.types &&
-              console.error(
-                ""We expected inner Transitions to have transferred the outer types set and that you cannot add to the outer Transition while inside the inner.This is a bug in React.""
-              ),
-            (prevTransition.types = currentTransition.types)),
-          (ReactSharedInternals.T = prevTransition);
-      }
-    };
+    exports.startTransition = startTransition;
     exports.unstable_useCacheRefresh = function () {
       return resolveDispatcher().useCacheRefresh();
     };
@@ -1276,7 +1298,7 @@
     exports.useTransition = function () {
       return resolveDispatcher().useTransition();
     };
-    exports.version = ""19.3.0-canary-c7862584-20251006"";
+    exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.production.js,98,83,181,"@@ -21,6 +21,7 @@ var REACT_ELEMENT_TYPE = Symbol.for(""react.transitional.element""),
   REACT_MEMO_TYPE = Symbol.for(""react.memo""),
   REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
   REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+  REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
   MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
 function getIteratorFn(maybeIterable) {
   if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null;
@@ -281,67 +282,100 @@ function lazyInitializer(payload) {
   throw payload._result;
 }
 var reportGlobalError =
-    ""function"" === typeof reportError
-      ? reportError
-      : function (error) {
-          if (
-            ""object"" === typeof window &&
-            ""function"" === typeof window.ErrorEvent
-          ) {
-            var event = new window.ErrorEvent(""error"", {
-              bubbles: !0,
-              cancelable: !0,
-              message:
-                ""object"" === typeof error &&
-                null !== error &&
-                ""string"" === typeof error.message
-                  ? String(error.message)
-                  : String(error),
-              error: error
-            });
-            if (!window.dispatchEvent(event)) return;
-          } else if (
-            ""object"" === typeof process &&
-            ""function"" === typeof process.emit
-          ) {
-            process.emit(""uncaughtException"", error);
-            return;
-          }
-          console.error(error);
-        },
-  Children = {
-    map: mapChildren,
-    forEach: function (children, forEachFunc, forEachContext) {
-      mapChildren(
-        children,
-        function () {
-          forEachFunc.apply(this, arguments);
-        },
-        forEachContext
-      );
-    },
-    count: function (children) {
-      var n = 0;
-      mapChildren(children, function () {
-        n++;
-      });
-      return n;
-    },
-    toArray: function (children) {
-      return (
-        mapChildren(children, function (child) {
-          return child;
-        }) || []
+  ""function"" === typeof reportError
+    ? reportError
+    : function (error) {
+        if (
+          ""object"" === typeof window &&
+          ""function"" === typeof window.ErrorEvent
+        ) {
+          var event = new window.ErrorEvent(""error"", {
+            bubbles: !0,
+            cancelable: !0,
+            message:
+              ""object"" === typeof error &&
+              null !== error &&
+              ""string"" === typeof error.message
+                ? String(error.message)
+                : String(error),
+            error: error
+          });
+          if (!window.dispatchEvent(event)) return;
+        } else if (
+          ""object"" === typeof process &&
+          ""function"" === typeof process.emit
+        ) {
+          process.emit(""uncaughtException"", error);
+          return;
+        }
+        console.error(error);
+      };
+function startTransition(scope) {
+  var prevTransition = ReactSharedInternals.T,
+    currentTransition = {};
+  currentTransition.types =
+    null !== prevTransition ? prevTransition.types : null;
+  ReactSharedInternals.T = currentTransition;
+  try {
+    var returnValue = scope(),
+      onStartTransitionFinish = ReactSharedInternals.S;
+    null !== onStartTransitionFinish &&
+      onStartTransitionFinish(currentTransition, returnValue);
+    ""object"" === typeof returnValue &&
+      null !== returnValue &&
+      ""function"" === typeof returnValue.then &&
+      returnValue.then(noop, reportGlobalError);
+  } catch (error) {
+    reportGlobalError(error);
+  } finally {
+    null !== prevTransition &&
+      null !== currentTransition.types &&
+      (prevTransition.types = currentTransition.types),
+      (ReactSharedInternals.T = prevTransition);
+  }
+}
+function addTransitionType(type) {
+  var transition = ReactSharedInternals.T;
+  if (null !== transition) {
+    var transitionTypes = transition.types;
+    null === transitionTypes
+      ? (transition.types = [type])
+      : -1 === transitionTypes.indexOf(type) && transitionTypes.push(type);
+  } else startTransition(addTransitionType.bind(null, type));
+}
+var Children = {
+  map: mapChildren,
+  forEach: function (children, forEachFunc, forEachContext) {
+    mapChildren(
+      children,
+      function () {
+        forEachFunc.apply(this, arguments);
+      },
+      forEachContext
+    );
+  },
+  count: function (children) {
+    var n = 0;
+    mapChildren(children, function () {
+      n++;
+    });
+    return n;
+  },
+  toArray: function (children) {
+    return (
+      mapChildren(children, function (child) {
+        return child;
+      }) || []
+    );
+  },
+  only: function (children) {
+    if (!isValidElement(children))
+      throw Error(
+        ""React.Children.only expected to receive a single React element child.""
       );
-    },
-    only: function (children) {
-      if (!isValidElement(children))
-        throw Error(
-          ""React.Children.only expected to receive a single React element child.""
-        );
-      return children;
-    }
-  };
+    return children;
+  }
+};
 exports.Activity = REACT_ACTIVITY_TYPE;
 exports.Children = Children;
 exports.Component = Component;
@@ -350,6 +384,7 @@ exports.Profiler = REACT_PROFILER_TYPE;
 exports.PureComponent = PureComponent;
 exports.StrictMode = REACT_STRICT_MODE_TYPE;
 exports.Suspense = REACT_SUSPENSE_TYPE;
+exports.ViewTransition = REACT_VIEW_TRANSITION_TYPE;
 exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
   ReactSharedInternals;
 exports.__COMPILER_RUNTIME = {
@@ -358,6 +393,7 @@ exports.__COMPILER_RUNTIME = {
     return ReactSharedInternals.H.useMemoCache(size);
   }
 };
+exports.addTransitionType = addTransitionType;
 exports.cache = function (fn) {
   return function () {
     return fn.apply(null, arguments);
@@ -451,28 +487,7 @@ exports.memo = function (type, compare) {
     compare: void 0 === compare ? null : compare
   };
 };
-exports.startTransition = function (scope) {
-  var prevTransition = ReactSharedInternals.T,
-    currentTransition = {};
-  ReactSharedInternals.T = currentTransition;
-  try {
-    var returnValue = scope(),
-      onStartTransitionFinish = ReactSharedInternals.S;
-    null !== onStartTransitionFinish &&
-      onStartTransitionFinish(currentTransition, returnValue);
-    ""object"" === typeof returnValue &&
-      null !== returnValue &&
-      ""function"" === typeof returnValue.then &&
-      returnValue.then(noop, reportGlobalError);
-  } catch (error) {
-    reportGlobalError(error);
-  } finally {
-    null !== prevTransition &&
-      null !== currentTransition.types &&
-      (prevTransition.types = currentTransition.types),
-      (ReactSharedInternals.T = prevTransition);
-  }
-};
+exports.startTransition = startTransition;
 exports.unstable_useCacheRefresh = function () {
   return ReactSharedInternals.H.useCacheRefresh();
 };
@@ -539,4 +554,4 @@ exports.useSyncExternalStore = function (
 exports.useTransition = function () {
   return ReactSharedInternals.H.useTransition();
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.react-server.development.js,5,1,6,"@@ -67,6 +67,8 @@
           return ""SuspenseList"";
         case REACT_ACTIVITY_TYPE:
           return ""Activity"";
+        case REACT_VIEW_TRANSITION_TYPE:
+          return ""ViewTransition"";
       }
       if (""object"" === typeof type)
         switch (
@@ -508,6 +510,7 @@
       REACT_MEMO_TYPE = Symbol.for(""react.memo""),
       REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
       REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+      REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
       REACT_CLIENT_REFERENCE = Symbol.for(""react.client.reference""),
       hasOwnProperty = Object.prototype.hasOwnProperty,
@@ -572,6 +575,7 @@
     exports.Profiler = REACT_PROFILER_TYPE;
     exports.StrictMode = REACT_STRICT_MODE_TYPE;
     exports.Suspense = REACT_SUSPENSE_TYPE;
+    exports.ViewTransition = REACT_VIEW_TRANSITION_TYPE;
     exports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
       ReactSharedInternals;
     exports.cache = function (fn) {
@@ -846,5 +850,5 @@
     exports.useMemo = function (create, deps) {
       return resolveDispatcher().useMemo(create, deps);
     };
-    exports.version = ""19.3.0-canary-c7862584-20251006"";
+    exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
   })();"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.react-server.production.js,3,1,4,"@@ -37,6 +37,7 @@ var REACT_ELEMENT_TYPE = Symbol.for(""react.transitional.element""),
   REACT_MEMO_TYPE = Symbol.for(""react.memo""),
   REACT_LAZY_TYPE = Symbol.for(""react.lazy""),
   REACT_ACTIVITY_TYPE = Symbol.for(""react.activity""),
+  REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition""),
   MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
 function getIteratorFn(maybeIterable) {
   if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null;
@@ -294,6 +295,7 @@ exports.Fragment = REACT_FRAGMENT_TYPE;
 exports.Profiler = REACT_PROFILER_TYPE;
 exports.StrictMode = REACT_STRICT_MODE_TYPE;
 exports.Suspense = REACT_SUSPENSE_TYPE;
+exports.ViewTransition = REACT_VIEW_TRANSITION_TYPE;
 exports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
   ReactSharedInternals;
 exports.cache = function (fn) {
@@ -423,4 +425,4 @@ exports.useId = function () {
 exports.useMemo = function (create, deps) {
   return ReactSharedInternals.H.useMemo(create, deps);
 };
-exports.version = ""19.3.0-canary-c7862584-20251006"";
+exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/unistore/unistore.js,1,1,2,"@@ -1 +1 @@
-(()=>{var t={232:t=>{function n(t,i){for(var _ in i)t[_]=i[_];return t}t.exports=function(t){var i=[];function u(t){for(var _=[],a=0;a<i.length;a++)i[a]===t?t=null:_.push(i[a]);i=_}function e(_,a,f){t=a?_:n(n({},t),_);for(var o=i,c=0;c<o.length;c++)o[c](t,f)}return t=t||{},{action:function(i){function r(t){e(t,!1,i)}return function(){for(var _=arguments,a=[t],f=0;f<arguments.length;f++)a.push(_[f]);var o=i.apply(this,a);if(null!=o)return o.then?o.then(r):r(o)}},setState:e,subscribe:function(t){return i.push(t),function(){u(t)}},unsubscribe:u,getState:function(){return t}}}}};var i={};function __nccwpck_require__(_){var a=i[_];if(a!==undefined){return a.exports}var f=i[_]={exports:{}};var o=true;try{t[_](f,f.exports,__nccwpck_require__);o=false}finally{if(o)delete i[_]}return f.exports}if(typeof __nccwpck_require__!==""undefined"")__nccwpck_require__.ab=__dirname+""/"";var _=__nccwpck_require__(232);module.exports=_})();
\ No newline at end of file
+(()=>{var t={827:t=>{function n(t,i){for(var _ in i)t[_]=i[_];return t}t.exports=function(t){var i=[];function u(t){for(var _=[],a=0;a<i.length;a++)i[a]===t?t=null:_.push(i[a]);i=_}function e(_,a,f){t=a?_:n(n({},t),_);for(var o=i,c=0;c<o.length;c++)o[c](t,f)}return t=t||{},{action:function(i){function r(t){e(t,!1,i)}return function(){for(var _=arguments,a=[t],f=0;f<arguments.length;f++)a.push(_[f]);var o=i.apply(this,a);if(null!=o)return o.then?o.then(r):r(o)}},setState:e,subscribe:function(t){return i.push(t),function(){u(t)}},unsubscribe:u,getState:function(){return t}}}}};var i={};function __nccwpck_require__(_){var a=i[_];if(a!==undefined){return a.exports}var f=i[_]={exports:{}};var o=true;try{t[_](f,f.exports,__nccwpck_require__);o=false}finally{if(o)delete i[_]}return f.exports}if(typeof __nccwpck_require__!==""undefined"")__nccwpck_require__.ab=__dirname+""/"";var _=__nccwpck_require__(827);module.exports=_})();
\ No newline at end of file"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/lib/needs-experimental-react.ts,3,2,5,"@@ -1,6 +1,7 @@
 import type { NextConfig } from '../server/config-shared'
 
+// Keep in sync with Turbopack's experimental React switch: file://./../../../../crates/next-core/src/next_import_map.rs
 export function needsExperimentalReact(config: NextConfig) {
-  const { ppr, taint, viewTransition } = config.experimental || {}
-  return Boolean(ppr || taint || viewTransition)
+  const { ppr, taint } = config.experimental || {}
+  return Boolean(ppr || taint)
 }"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/server/config-shared.ts,1,1,2,"@@ -653,7 +653,7 @@ export interface ExperimentalConfig {
   useLightningcss?: boolean
 
   /**
-   * Enables view transitions by using the {@link https://github.com/facebook/react/pull/31975 unstable_ViewTransition} Component.
+   * Enables view transitions by using the {@link https://react.dev/reference/react/ViewTransition ViewTransition} Component.
    */
   viewTransition?: boolean
 "
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",pnpm-lock.yaml,777,729,1506,
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",test/e2e/app-dir/view-transitions/fixtures/default/app/basic/page.js,1,1,2,"@@ -1,4 +1,4 @@
-import { unstable_ViewTransition as ViewTransition } from 'react'
+import { ViewTransition } from 'react'
 import { Toggle } from './Toggle'
 
 export default function BasicPage() {"
vercel/next.js,adb2829e4c68e4dc22636309d0d66632a0739fd9,nextjs-bot,2025-10-07T14:01:50Z,"Upgrade React from `c7862584-20251006` to `a4eb2dfa-20251006` (#84589)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",test/lib/next-modes/base.ts,2,2,4,"@@ -217,8 +217,8 @@ export class NextInstance {
         const finalDependencies = {
           react: reactVersion,
           'react-dom': reactVersion,
-          '@types/react': '19.1.16',
-          '@types/react-dom': '19.1.10',
+          '@types/react': '19.2.2',
+          '@types/react-dom': '19.2.1',
           typescript: 'latest',
           '@types/node': 'latest',
           ...this.dependencies,"
vercel/next.js,21f72d3ff85d403f56899cf27e597b2f070c8b35,stefanprobst,2025-10-07T13:18:21Z,"fix(cna): use correct postcss plugins syntax (#79949)

this updates all CNA templates to use the correct object syntax for
postcss plugins.

this was done previously in https://github.com/vercel/next.js/pull/77376
but only for the `--empty` CNA templates.

Co-authored-by: Tim Neutkens <tim@timneutkens.nl>",packages/create-next-app/templates/app-tw/js/postcss.config.mjs,3,1,4,"@@ -1,5 +1,7 @@
 const config = {
-  plugins: [""@tailwindcss/postcss""],
+  plugins: {
+    ""@tailwindcss/postcss"": {},
+  },
 };
 
 export default config;"
vercel/next.js,21f72d3ff85d403f56899cf27e597b2f070c8b35,stefanprobst,2025-10-07T13:18:21Z,"fix(cna): use correct postcss plugins syntax (#79949)

this updates all CNA templates to use the correct object syntax for
postcss plugins.

this was done previously in https://github.com/vercel/next.js/pull/77376
but only for the `--empty` CNA templates.

Co-authored-by: Tim Neutkens <tim@timneutkens.nl>",packages/create-next-app/templates/app-tw/ts/postcss.config.mjs,3,1,4,"@@ -1,5 +1,7 @@
 const config = {
-  plugins: [""@tailwindcss/postcss""],
+  plugins: {
+    ""@tailwindcss/postcss"": {},
+  },
 };
 
 export default config;"
vercel/next.js,21f72d3ff85d403f56899cf27e597b2f070c8b35,stefanprobst,2025-10-07T13:18:21Z,"fix(cna): use correct postcss plugins syntax (#79949)

this updates all CNA templates to use the correct object syntax for
postcss plugins.

this was done previously in https://github.com/vercel/next.js/pull/77376
but only for the `--empty` CNA templates.

Co-authored-by: Tim Neutkens <tim@timneutkens.nl>",packages/create-next-app/templates/default-tw-empty/js/postcss.config.mjs,3,1,4,"@@ -1,5 +1,7 @@
 const config = {
-  plugins: [""@tailwindcss/postcss""],
+  plugins: {
+    ""@tailwindcss/postcss"": {},
+  },
 };
 
 export default config;"
vercel/next.js,21f72d3ff85d403f56899cf27e597b2f070c8b35,stefanprobst,2025-10-07T13:18:21Z,"fix(cna): use correct postcss plugins syntax (#79949)

this updates all CNA templates to use the correct object syntax for
postcss plugins.

this was done previously in https://github.com/vercel/next.js/pull/77376
but only for the `--empty` CNA templates.

Co-authored-by: Tim Neutkens <tim@timneutkens.nl>",packages/create-next-app/templates/default-tw-empty/ts/postcss.config.mjs,3,1,4,"@@ -1,5 +1,7 @@
 const config = {
-  plugins: [""@tailwindcss/postcss""],
+  plugins: {
+    ""@tailwindcss/postcss"": {},
+  },
 };
 
 export default config;"
vercel/next.js,21f72d3ff85d403f56899cf27e597b2f070c8b35,stefanprobst,2025-10-07T13:18:21Z,"fix(cna): use correct postcss plugins syntax (#79949)

this updates all CNA templates to use the correct object syntax for
postcss plugins.

this was done previously in https://github.com/vercel/next.js/pull/77376
but only for the `--empty` CNA templates.

Co-authored-by: Tim Neutkens <tim@timneutkens.nl>",packages/create-next-app/templates/default-tw/js/postcss.config.mjs,3,1,4,"@@ -1,5 +1,7 @@
 const config = {
-  plugins: [""@tailwindcss/postcss""],
+  plugins: {
+    ""@tailwindcss/postcss"": {},
+  },
 };
 
 export default config;"
vercel/next.js,21f72d3ff85d403f56899cf27e597b2f070c8b35,stefanprobst,2025-10-07T13:18:21Z,"fix(cna): use correct postcss plugins syntax (#79949)

this updates all CNA templates to use the correct object syntax for
postcss plugins.

this was done previously in https://github.com/vercel/next.js/pull/77376
but only for the `--empty` CNA templates.

Co-authored-by: Tim Neutkens <tim@timneutkens.nl>",packages/create-next-app/templates/default-tw/ts/postcss.config.mjs,3,1,4,"@@ -1,5 +1,7 @@
 const config = {
-  plugins: [""@tailwindcss/postcss""],
+  plugins: {
+    ""@tailwindcss/postcss"": {},
+  },
 };
 
 export default config;"
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,lerna.json,1,1,2,"@@ -16,5 +16,5 @@
       ""registry"": ""https://registry.npmjs.org/""
     }
   },
-  ""version"": ""15.6.0-canary.47""
+  ""version"": ""15.6.0-canary.48""
 }"
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/create-next-app/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""create-next-app"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/eslint-config-next/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""eslint-config-next"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""description"": ""ESLint configuration used by Next.js."",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
@@ -10,7 +10,7 @@
   },
   ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"",
   ""dependencies"": {
-    ""@next/eslint-plugin-next"": ""15.6.0-canary.47"",
+    ""@next/eslint-plugin-next"": ""15.6.0-canary.48"",
     ""@rushstack/eslint-patch"": ""^1.10.3"",
     ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"",
     ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/eslint-plugin-internal/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/eslint-plugin-internal"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""description"": ""ESLint plugin for working on Next.js."",
   ""exports"": {
     ""."": ""./src/eslint-plugin-internal.js"""
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/eslint-plugin-next/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/eslint-plugin-next"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""description"": ""ESLint plugin for Next.js."",
   ""main"": ""dist/index.js"",
   ""types"": ""dist/index.d.ts"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/font/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/font"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/font"""
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next-bundle-analyzer/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/bundle-analyzer"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""main"": ""index.js"",
   ""types"": ""index.d.ts"",
   ""license"": ""MIT"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next-codemod/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/codemod"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""license"": ""MIT"",
   ""repository"": {
     ""type"": ""git"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next-env/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/env"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next-mdx/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/mdx"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
   ""repository"": {"
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next-plugin-storybook/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/plugin-storybook"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-plugin-storybook"""
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next-polyfill-module/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-module"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+, Firefox 60+, Chrome 61+, Safari 10.1+)"",
   ""main"": ""dist/polyfill-module.js"",
   ""license"": ""MIT"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next-polyfill-nomodule/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-nomodule"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""description"": ""A polyfill for non-dead, nomodule browsers."",
   ""main"": ""dist/polyfill-nomodule.js"",
   ""license"": ""MIT"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next-rspack/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next-rspack"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-rspack"""
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next-swc/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/swc"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""private"": true,
   ""files"": [
     ""native/"""
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/next/package.json,7,7,14,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""description"": ""The React Framework"",
   ""main"": ""./dist/server/next.js"",
   ""license"": ""MIT"",
@@ -100,7 +100,7 @@
     ]
   },
   ""dependencies"": {
-    ""@next/env"": ""15.6.0-canary.47"",
+    ""@next/env"": ""15.6.0-canary.48"",
     ""@swc/helpers"": ""0.5.15"",
     ""caniuse-lite"": ""^1.0.30001579"",
     ""postcss"": ""8.4.31"",
@@ -164,11 +164,11 @@
     ""@modelcontextprotocol/sdk"": ""1.18.1"",
     ""@mswjs/interceptors"": ""0.23.0"",
     ""@napi-rs/triples"": ""1.2.0"",
-    ""@next/font"": ""15.6.0-canary.47"",
-    ""@next/polyfill-module"": ""15.6.0-canary.47"",
-    ""@next/polyfill-nomodule"": ""15.6.0-canary.47"",
-    ""@next/react-refresh-utils"": ""15.6.0-canary.47"",
-    ""@next/swc"": ""15.6.0-canary.47"",
+    ""@next/font"": ""15.6.0-canary.48"",
+    ""@next/polyfill-module"": ""15.6.0-canary.48"",
+    ""@next/polyfill-nomodule"": ""15.6.0-canary.48"",
+    ""@next/react-refresh-utils"": ""15.6.0-canary.48"",
+    ""@next/swc"": ""15.6.0-canary.48"",
     ""@opentelemetry/api"": ""1.6.0"",
     ""@playwright/test"": ""1.51.1"",
     ""@rspack/core"": ""1.5.0"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/react-refresh-utils/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/react-refresh-utils"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""description"": ""An experimental package providing utilities for React Refresh."",
   ""repository"": {
     ""url"": ""vercel/next.js"","
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,packages/third-parties/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/third-parties"",
-  ""version"": ""15.6.0-canary.47"",
+  ""version"": ""15.6.0-canary.48"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/third-parties""
@@ -26,7 +26,7 @@
     ""third-party-capital"": ""1.0.20""
   },
   ""devDependencies"": {
-    ""next"": ""15.6.0-canary.47"",
+    ""next"": ""15.6.0-canary.48"",
     ""outdent"": ""0.8.0"",
     ""prettier"": ""2.5.1"",
     ""typescript"": ""5.9.2"""
vercel/next.js,1da862828f4a9fccac2a2499d27f32cab4fd3882,nextjs-bot,2025-10-07T13:12:56Z,v15.6.0-canary.48,pnpm-lock.yaml,8,8,16,"@@ -899,7 +899,7 @@ importers:
   packages/eslint-config-next:
     dependencies:
       '@next/eslint-plugin-next':
-        specifier: 15.6.0-canary.47
+        specifier: 15.6.0-canary.48
         version: link:../eslint-plugin-next
       '@rushstack/eslint-patch':
         specifier: ^1.10.3
@@ -972,7 +972,7 @@ importers:
   packages/next:
     dependencies:
       '@next/env':
-        specifier: 15.6.0-canary.47
+        specifier: 15.6.0-canary.48
         version: link:../next-env
       '@swc/helpers':
         specifier: 0.5.15
@@ -1097,19 +1097,19 @@ importers:
         specifier: 1.2.0
         version: 1.2.0
       '@next/font':
-        specifier: 15.6.0-canary.47
+        specifier: 15.6.0-canary.48
         version: link:../font
       '@next/polyfill-module':
-        specifier: 15.6.0-canary.47
+        specifier: 15.6.0-canary.48
         version: link:../next-polyfill-module
       '@next/polyfill-nomodule':
-        specifier: 15.6.0-canary.47
+        specifier: 15.6.0-canary.48
         version: link:../next-polyfill-nomodule
       '@next/react-refresh-utils':
-        specifier: 15.6.0-canary.47
+        specifier: 15.6.0-canary.48
         version: link:../react-refresh-utils
       '@next/swc':
-        specifier: 15.6.0-canary.47
+        specifier: 15.6.0-canary.48
         version: link:../next-swc
       '@opentelemetry/api':
         specifier: 1.6.0
@@ -1800,7 +1800,7 @@ importers:
         version: 1.0.20
     devDependencies:
       next:
-        specifier: 15.6.0-canary.47
+        specifier: 15.6.0-canary.48
         version: link:../next
       outdent:
         specifier: 0.8.0"
vercel/next.js,cb92e8dfbba419c03a9b539b6071c66a508cb922,Tim Neutkens,2025-10-07T13:08:10Z,"Build: Add time to logline of every step (#84602)

## What?

Add timing to every step of the `next build` process for both Turbopack
and webpack.

Besides the existing `compiled successfully in` time for
Turbopack/webpack these now also have timings:

```
 ✓ Linting and checking validity of types in 954ms    
 ✓ Collecting page data in 205ms    
 ✓ Generating static pages (4/4) in 307ms
 ✓ Collecting build traces in 3.3s    
 ✓ Finalizing page optimization in 3.3s 
```",packages/next/src/build/duration-to-string.ts,9,0,9,"@@ -11,3 +11,12 @@ export function durationToString(compilerDuration: number) {
   }
   return durationString
 }
+
+export function hrtimeToSeconds(hrtime: [number, number]): number {
+  // hrtime is a tuple of [seconds, nanoseconds]
+  return hrtime[0] + hrtime[1] / 1e9
+}
+
+export function hrtimeDurationToString(hrtime: [number, number]): string {
+  return durationToString(hrtimeToSeconds(hrtime))
+}"
vercel/next.js,cb92e8dfbba419c03a9b539b6071c66a508cb922,Tim Neutkens,2025-10-07T13:08:10Z,"Build: Add time to logline of every step (#84602)

## What?

Add timing to every step of the `next build` process for both Turbopack
and webpack.

Besides the existing `compiled successfully in` time for
Turbopack/webpack these now also have timings:

```
 ✓ Linting and checking validity of types in 954ms    
 ✓ Collecting page data in 205ms    
 ✓ Generating static pages (4/4) in 307ms
 ✓ Collecting build traces in 3.3s    
 ✓ Finalizing page optimization in 3.3s 
```",packages/next/src/build/index.ts,27,3,30,"@@ -209,7 +209,7 @@ import { turbopackBuild } from './turbopack-build'
 import { isPersistentCachingEnabledForBuild } from '../shared/lib/turbopack/utils'
 import { inlineStaticEnv } from '../lib/inline-static-env'
 import { populateStaticEnv } from '../lib/static-env'
-import { durationToString } from './duration-to-string'
+import { durationToString, hrtimeDurationToString } from './duration-to-string'
 import { traceGlobals } from '../trace/shared'
 import { extractNextErrorCode } from '../lib/error-telemetry-utils'
 import { runAfterProductionCompile } from './after-production-compile'
@@ -1846,6 +1846,7 @@ export default async function build(
         traceMemoryUsage('Finished type checking', nextBuildSpan)
       }
 
+      const collectingPageDataStart = process.hrtime()
       const postCompileSpinner = createSpinner('Collecting page data')
 
       const buildManifestPath = path.join(distDir, BUILD_MANIFEST)
@@ -2413,7 +2414,13 @@ export default async function build(
         return returnValue
       })
 
-      if (postCompileSpinner) postCompileSpinner.stopAndPersist()
+      if (postCompileSpinner) {
+        const collectingPageDataEnd = process.hrtime(collectingPageDataStart)
+        postCompileSpinner.setText(
+          `Collecting page data in ${hrtimeDurationToString(collectingPageDataEnd)}`
+        )
+        postCompileSpinner.stopAndPersist()
+      }
       traceMemoryUsage('Finished collecting page data', nextBuildSpan)
 
       if (customAppGetInitialProps) {
@@ -3890,9 +3897,12 @@ export default async function build(
           .traceAsyncFn(() => writeManifest(routesManifestPath, routesManifest))
       }
 
+      const finalizingPageOptimizationStart = process.hrtime()
       const postBuildSpinner = createSpinner('Finalizing page optimization')
       let buildTracesSpinner
+      let buildTracesStart
       if (buildTracesPromise) {
+        buildTracesStart = process.hrtime()
         buildTracesSpinner = createSpinner('Collecting build traces')
       }
 
@@ -4044,6 +4054,12 @@ export default async function build(
       await buildTracesPromise
 
       if (buildTracesSpinner) {
+        if (buildTracesStart) {
+          const buildTracesEnd = process.hrtime(buildTracesStart)
+          buildTracesSpinner.setText(
+            `Collecting build traces in ${hrtimeDurationToString(buildTracesEnd)}`
+          )
+        }
         buildTracesSpinner.stopAndPersist()
         buildTracesSpinner = undefined
       }
@@ -4117,7 +4133,15 @@ export default async function build(
           })
       }
 
-      if (postBuildSpinner) postBuildSpinner.stopAndPersist()
+      if (postBuildSpinner) {
+        const finalizingPageOptimizationEnd = process.hrtime(
+          finalizingPageOptimizationStart
+        )
+        postBuildSpinner.setText(
+          `Finalizing page optimization in ${hrtimeDurationToString(finalizingPageOptimizationEnd)}`
+        )
+        postBuildSpinner.stopAndPersist()
+      }
       console.log()
 
       if (debugOutput) {"
vercel/next.js,cb92e8dfbba419c03a9b539b6071c66a508cb922,Tim Neutkens,2025-10-07T13:08:10Z,"Build: Add time to logline of every step (#84602)

## What?

Add timing to every step of the `next build` process for both Turbopack
and webpack.

Besides the existing `compiled successfully in` time for
Turbopack/webpack these now also have timings:

```
 ✓ Linting and checking validity of types in 954ms    
 ✓ Collecting page data in 205ms    
 ✓ Generating static pages (4/4) in 307ms
 ✓ Collecting build traces in 3.3s    
 ✓ Finalizing page optimization in 3.3s 
```",packages/next/src/build/progress.ts,5,1,6,"@@ -1,4 +1,5 @@
 import * as Log from '../build/output/log'
+import { hrtimeDurationToString } from './duration-to-string'
 import createSpinner from './spinner'
 
 function divideSegments(number: number, segments: number): number[] {
@@ -15,6 +16,8 @@ function divideSegments(number: number, segments: number): number[] {
 }
 
 export const createProgress = (total: number, label: string) => {
+  const progressStart = process.hrtime()
+
   const segments = divideSegments(total, 4)
 
   if (total === 0) {
@@ -74,7 +77,8 @@ export const createProgress = (total: number, label: string) => {
     } else {
       progressSpinner?.stop()
       if (isFinished) {
-        Log.event(message)
+        const progressEnd = process.hrtime(progressStart)
+        Log.event(`${message} in ${hrtimeDurationToString(progressEnd)}`)
       } else {
         Log.info(`${message} ${process.stdout.isTTY ? '\n' : '\r'}`)
       }"
vercel/next.js,cb92e8dfbba419c03a9b539b6071c66a508cb922,Tim Neutkens,2025-10-07T13:08:10Z,"Build: Add time to logline of every step (#84602)

## What?

Add timing to every step of the `next build` process for both Turbopack
and webpack.

Besides the existing `compiled successfully in` time for
Turbopack/webpack these now also have timings:

```
 ✓ Linting and checking validity of types in 954ms    
 ✓ Collecting page data in 205ms    
 ✓ Generating static pages (4/4) in 307ms
 ✓ Collecting build traces in 3.3s    
 ✓ Finalizing page optimization in 3.3s 
```",packages/next/src/build/type-check.ts,8,1,9,"@@ -9,6 +9,7 @@ import { verifyAndLint } from '../lib/verifyAndLint'
 import createSpinner from './spinner'
 import { eventTypeCheckCompleted } from '../telemetry/events'
 import isError from '../lib/is-error'
+import { hrtimeDurationToString } from './duration-to-string'
 
 /**
  * typescript will be loaded in ""next/lib/verify-typescript-setup"" and
@@ -156,7 +157,13 @@ export async function startTypeChecking({
           )
         }),
     ])
-    typeCheckingAndLintingSpinner?.stopAndPersist()
+
+    if (typeCheckingAndLintingSpinner) {
+      typeCheckingAndLintingSpinner.setText(
+        `${typeCheckingAndLintingSpinnerPrefixText} in ${hrtimeDurationToString(typeCheckEnd)}`
+      )
+      typeCheckingAndLintingSpinner.stopAndPersist()
+    }
 
     if (!ignoreTypeScriptErrors && verifyResult) {
       telemetry.record("
vercel/next.js,cb92e8dfbba419c03a9b539b6071c66a508cb922,Tim Neutkens,2025-10-07T13:08:10Z,"Build: Add time to logline of every step (#84602)

## What?

Add timing to every step of the `next build` process for both Turbopack
and webpack.

Besides the existing `compiled successfully in` time for
Turbopack/webpack these now also have timings:

```
 ✓ Linting and checking validity of types in 954ms    
 ✓ Collecting page data in 205ms    
 ✓ Generating static pages (4/4) in 307ms
 ✓ Collecting build traces in 3.3s    
 ✓ Finalizing page optimization in 3.3s 
```",packages/next/src/build/webpack-build/impl.ts,1,6,7,"@@ -40,15 +40,10 @@ import type { UnwrapPromise } from '../../lib/coalesced-function'
 
 import origDebug from 'next/dist/compiled/debug'
 import { Telemetry } from '../../telemetry/storage'
-import { durationToString } from '../duration-to-string'
+import { durationToString, hrtimeToSeconds } from '../duration-to-string'
 
 const debug = origDebug('next:build:webpack-build')
 
-function hrtimeToSeconds(hrtime: [number, number]): number {
-  // hrtime is a tuple of [seconds, nanoseconds]
-  return hrtime[0] + hrtime[1] / 1e9
-}
-
 type CompilerResult = {
   errors: webpack.StatsError[]
   warnings: webpack.StatsError[]"
vercel/next.js,15edf7b9865a5ca887d5b9fc4908b7bc121827e8,Janka Uryga,2025-10-07T13:05:20Z,"fix hidden errors in router-act (#84603)

`createRouterAct` had a couple places where we create a promise via `new
Promise(async (resolve) => { ... })` without accounting for the fact
that some operations inside can throw, in which case the promise would
never resolve. Some tests that use `createRouterAct` like to hang
mysteriously, and i suspect this might be the reason. This PR changes
those places to use an `(async () => { ... })()` IIFE instead.",test/e2e/app-dir/segment-cache/router-act.ts,8,8,16,"@@ -159,7 +159,7 @@ export function createRouterAct(
             // `act` controls the timing of when responses reach the client,
             // but it should not affect the timing of when requests reach the
             // server; we pass the request to the server the immediately.
-            result: new Promise(async (resolve) => {
+            result: (async () => {
               const originalResponse = await page.request.fetch(request, {
                 maxRedirects: 0,
               })
@@ -172,13 +172,13 @@ export function createRouterAct(
               const headers = originalResponse.headers()
               delete headers['transfer-encoding']
 
-              resolve({
+              return {
                 text: await originalResponse.text(),
                 body: await originalResponse.body(),
                 headers,
                 status: originalResponse.status(),
-              })
-            }),
+              }
+            })(),
             didProcess: false,
           })
           if (onDidIssueFirstRequest !== null) {
@@ -417,14 +417,14 @@ ${fulfilled.body}
                     batch.pendingRequests.add({
                       url: req.url(),
                       route: null,
-                      result: new Promise(async (resolve) => {
-                        resolve({
+                      result: (async () => {
+                        return {
                           text: await res.text(),
                           body: await res.body(),
                           headers: res.headers(),
                           status: res.status(),
-                        })
-                      }),
+                        }
+                      })(),
                       didProcess: false,
                     })
                     page.off('response', handleResponse)"
vercel/next.js,1712abe192c2214919403b4076c17dc9032369c6,Hendrik Liebau,2025-10-07T13:01:17Z,"Guard `createDebugChannel` import by feature flag (#84604)

We already do that for the initial load in `app-index.tsx` (via #83699), and should also do it for RSC requests.",packages/next/src/client/components/router-reducer/fetch-server-response.ts,4,1,5,"@@ -41,7 +41,10 @@ let createDebugChannel:
   | typeof import('../../dev/debug-channel').createDebugChannel
   | undefined
 
-if (process.env.NODE_ENV !== 'production') {
+if (
+  process.env.NODE_ENV !== 'production' &&
+  process.env.__NEXT_REACT_DEBUG_CHANNEL
+) {
   createDebugChannel = (
     require('../../dev/debug-channel') as typeof import('../../dev/debug-channel')
   ).createDebugChannel"
vercel/next.js,1712abe192c2214919403b4076c17dc9032369c6,Hendrik Liebau,2025-10-07T13:01:17Z,"Guard `createDebugChannel` import by feature flag (#84604)

We already do that for the initial load in `app-index.tsx` (via #83699), and should also do it for RSC requests.",packages/next/src/client/components/router-reducer/reducers/server-action-reducer.ts,4,1,5,"@@ -65,7 +65,10 @@ let createDebugChannel:
   | typeof import('../../../dev/debug-channel').createDebugChannel
   | undefined
 
-if (process.env.NODE_ENV !== 'production') {
+if (
+  process.env.NODE_ENV !== 'production' &&
+  process.env.__NEXT_REACT_DEBUG_CHANNEL
+) {
   createDebugChannel = (
     require('../../../dev/debug-channel') as typeof import('../../../dev/debug-channel')
   ).createDebugChannel"
vercel/next.js,7453d200579512a6574f9c53edd716e5cc01615c,Niklas Mischkulnig,2025-10-07T10:03:24Z,"Turbopack: improve next/dynamic eventual consistentcy (#84560)

Use bail instead of panic to better recover from eventual consistency situations.",crates/next-api/src/dynamic_imports.rs,7,3,10,"@@ -19,7 +19,7 @@
 //!      to wait until all the dynamic components are being loaded, this ensures hydration mismatch
 //!      won't occur
 
-use anyhow::Result;
+use anyhow::{Context, Result};
 use next_core::{
     next_app::ClientReferencesChunks, next_client_reference::EcmascriptClientReferenceModule,
     next_dynamic::NextDynamicEntryModule,
@@ -66,8 +66,12 @@ pub(crate) async fn collect_next_dynamic_chunks(
                 NextDynamicChunkAvailability::ClientReferences(client_reference_chunks) => {
                     client_reference_chunks
                         .client_component_client_chunks
-                        .get(&parent_client_reference.unwrap())
-                        .unwrap()
+                        .get(
+                            &parent_client_reference.context(
+                                ""Parent client reference not found for next/dynamic import"",
+                            )?,
+                        )
+                        .context(""Client reference chunk group not found for next/dynamic import"")?
                         .availability_info
                 }
                 NextDynamicChunkAvailability::AvailabilityInfo(availability_info) => {"
vercel/next.js,c0a7c842563e3722dea30b00a1ac4fd0a18c6cbf,JJ Kasper,2025-10-07T04:44:38Z,"Add documentation for experimental adapters handling (#83737)

This adds initial documentation for the new adapter interface initially
outlined in this RFC https://github.com/vercel/next.js/discussions/77740

---------

Co-authored-by: vercel[bot] <35613825+vercel[bot]@users.noreply.github.com>
Co-authored-by: Zack Tanner <1939140+ztanner@users.noreply.github.com>",docs/01-app/03-api-reference/05-config/01-next-config-js/adapterPath.mdx,280,0,280,"@@ -0,0 +1,280 @@
+---
+title: experimental.adapterPath
+description: Configure a custom adapter for Next.js to hook into the build process with modifyConfig and onBuildComplete callbacks.
+---
+
+Next.js provides an experimental API that allows you to create custom adapters to hook into the build process. This is useful for deployment platforms or custom build integrations that need to modify the Next.js configuration or process the build output.
+
+## Configuration
+
+To use an adapter, specify the path to your adapter module in `experimental.adapterPath`:
+
+```js filename=""next.config.js""
+/** @type {import('next').NextConfig} */
+const nextConfig = {
+  experimental: {
+    adapterPath: require.resolve('./my-adapter.js'),
+  },
+}
+
+module.exports = nextConfig
+```
+
+## Creating an Adapter
+
+An adapter is a module that exports an object implementing the `NextAdapter` interface:
+
+```typescript
+export interface NextAdapter {
+  name: string
+  modifyConfig?: (
+    config: NextConfigComplete,
+    ctx: {
+      phase: PHASE_TYPE
+    }
+  ) => Promise<NextConfigComplete> | NextConfigComplete
+  onBuildComplete?: (ctx: {
+    routes: {
+      headers: Array<ManifestHeaderRoute>
+      redirects: Array<ManifestRedirectRoute>
+      rewrites: {
+        beforeFiles: Array<ManifestRewriteRoute>
+        afterFiles: Array<ManifestRewriteRoute>
+        fallback: Array<ManifestRewriteRoute>
+      }
+      dynamicRoutes: ReadonlyArray<ManifestRoute>
+    }
+    outputs: AdapterOutputs
+    projectDir: string
+    repoRoot: string
+    distDir: string
+    config: NextConfigComplete
+    nextVersion: string
+  }) => Promise<void> | void
+}
+```
+
+### Basic Adapter Structure
+
+Here's a minimal adapter example:
+
+```js filename=""my-adapter.js""
+/** @type {import('next').NextAdapter} */
+const adapter = {
+  name: 'my-custom-adapter',
+
+  async modifyConfig(config, { phase }) {
+    // Modify the Next.js config based on the build phase
+    if (phase === 'phase-production-build') {
+      return {
+        ...config,
+        // Add your modifications
+      }
+    }
+    return config
+  },
+
+  async onBuildComplete({
+    routes,
+    outputs,
+    projectDir,
+    repoRoot,
+    distDir,
+    config,
+    nextVersion,
+  }) {
+    // Process the build output
+    console.log('Build completed with', outputs.pages.length, 'pages')
+
+    // Access different output types
+    for (const page of outputs.pages) {
+      console.log('Page:', page.pathname, 'at', page.filePath)
+    }
+
+    for (const apiRoute of outputs.pagesApi) {
+      console.log('API Route:', apiRoute.pathname, 'at', apiRoute.filePath)
+    }
+
+    for (const appPage of outputs.appPages) {
+      console.log('App Page:', appPage.pathname, 'at', appPage.filePath)
+    }
+
+    for (const prerender of outputs.prerenders) {
+      console.log('Prerendered:', prerender.pathname)
+    }
+  },
+}
+
+module.exports = adapter
+```
+
+## API Reference
+
+### `modifyConfig(config, context)`
+
+Called for any CLI command that loads the next.config to allow modification of the configuration.
+
+**Parameters:**
+
+- `config`: The complete Next.js configuration object
+- `context.phase`: The current build phase (see [phases](/docs/app/api-reference/config/next-config-js#phase))
+
+**Returns:** The modified configuration object (can be async)
+
+### `onBuildComplete(context)`
+
+Called after the build process completes with detailed information about routes and outputs.
+
+**Parameters:**
+
+- `routes`: Object containing route manifests for headers, redirects, rewrites, and dynamic routes
+- `outputs`: Detailed information about all build outputs organized by type
+- `projectDir`: Absolute path to the Next.js project directory
+- `repoRoot`: Absolute path to the detected repository root
+- `distDir`: Absolute path to the build output directory
+- `config`: The final Next.js configuration (with `modifyConfig` applied)
+- `nextVersion`: Version of Next.js being used
+
+## Output Types
+
+The `outputs` object contains arrays of different output types:
+
+### Pages (`outputs.pages`)
+
+React pages from the `pages/` directory:
+
+```typescript
+{
+  type: 'PAGES'
+  id: string           // Route identifier
+  filePath: string     // Path to the built file
+  pathname: string     // URL pathname
+  runtime: 'nodejs' | 'edge'
+  assets: Record<string, string>  // Traced dependencies
+  config: {
+    maxDuration?: number
+    preferredRegion?: string | string[]
+  }
+}
+```
+
+### API Routes (`outputs.pagesApi`)
+
+API routes from `pages/api/`:
+
+```typescript
+{
+  type: 'PAGES_API'
+  id: string
+  filePath: string
+  pathname: string
+  runtime: 'nodejs' | 'edge'
+  assets: Record<string, string>
+  config: {
+    maxDuration?: number
+    preferredRegion?: string | string[]
+  }
+}
+```
+
+### App Pages (`outputs.appPages`)
+
+React pages from the `app/` directory with `page.{js,ts,jsx,tsx}`:
+
+```typescript
+{
+  type: 'APP_PAGE'
+  id: string
+  filePath: string
+  pathname: string
+  runtime: 'nodejs' | 'edge'
+  assets: Record<string, string>
+  config: {
+    maxDuration?: number
+    preferredRegion?: string | string[]
+  }
+}
+```
+
+### App Routes (`outputs.appRoutes`)
+
+API and metadata routes from `app/` with `route.{js,ts,jsx,tsx}`:
+
+```typescript
+{
+  type: 'APP_ROUTE'
+  // ... same structure as APP_PAGE
+}
+```
+
+### Prerenders (`outputs.prerenders`)
+
+ISR-enabled routes and static prerenders:
+
+```typescript
+{
+  type: 'PRERENDER'
+  id: string
+  pathname: string
+  parentOutputId: string  // ID of the source page/route
+  groupId: number        // Revalidation group identifier
+  fallback?: {
+    filePath: string
+    initialStatus?: number
+    initialHeaders?: Record<string, string | string[]>
+    initialExpiration?: number
+    initialRevalidate?: number
+    postponedState?: string  // PPR postponed state
+  }
+  config: {
+    allowQuery?: string[]     // Allowed query parameters
+    allowHeader?: string[]    // Allowed headers for ISR
+    bypassFor?: RouteHas[]    // Cache bypass conditions
+    renderingMode?: RenderingMode
+    bypassToken?: string
+  }
+}
+```
+
+### Static Files (`outputs.staticFiles`)
+
+Static assets and auto-statically optimized pages:
+
+```typescript
+{
+  type: 'STATIC_FILE'
+  id: string
+  filePath: string
+  pathname: string
+}
+```
+
+### Middleware (`outputs.middleware`)
+
+Middleware function (if present):
+
+```typescript
+{
+  type: 'MIDDLEWARE'
+  id: string
+  filePath: string
+  pathname: string
+  runtime: 'nodejs' | 'edge'
+  assets: Record<string, string>
+  config: {
+    maxDuration?: number
+    preferredRegion?: string | string[]
+    matchers?: MiddlewareMatcher[]
+  }
+}
+```
+
+## Use Cases
+
+Common use cases for adapters include:
+
+- **Deployment Platform Integration**: Automatically configure build outputs for specific hosting platforms
+- **Asset Processing**: Transform or optimize build outputs
+- **Monitoring Integration**: Collect build metrics and route information
+- **Custom Bundling**: Package outputs in platform-specific formats
+- **Build Validation**: Ensure outputs meet specific requirements"
vercel/next.js,c0a7c842563e3722dea30b00a1ac4fd0a18c6cbf,JJ Kasper,2025-10-07T04:44:38Z,"Add documentation for experimental adapters handling (#83737)

This adds initial documentation for the new adapter interface initially
outlined in this RFC https://github.com/vercel/next.js/discussions/77740

---------

Co-authored-by: vercel[bot] <35613825+vercel[bot]@users.noreply.github.com>
Co-authored-by: Zack Tanner <1939140+ztanner@users.noreply.github.com>",docs/02-pages/04-api-reference/04-config/01-next-config-js/adapterPath.mdx,7,0,7,"@@ -0,0 +1,7 @@
+---
+title: experimental.adapterPath
+description: Configure a custom adapter for Next.js to hook into the build process with modifyConfig and buildComplete callbacks.
+source: app/api-reference/config/next-config-js/adapterPath
+---
+
+{/* DO NOT EDIT. The content of this doc is generated from the source above. To edit the content of this page, navigate to the source page in your editor. You can use the `<PagesOnly>Content</PagesOnly>` component to add content that is specific to the Pages Router. Any shared content should not be wrapped in a component. */}"
vercel/next.js,a29b4fa5c3f02c5a8f5a14050a1cdd7736a8bb30,Jude Gao,2025-10-07T03:26:04Z,"[MCP] Fix: Do not dedup by URL for MCP get_page_metadata (#84564)

The `get_page_metadata` MCP tool was incorrectly grouping browser
sessions by URL instead of counting each session individually. When
multiple browser tabs were open to the same URL, the tool would report
only 1 session instead of the actual number of sessions.",packages/next/src/server/mcp/tools/get-page-metadata.ts,10,7,17,"@@ -59,16 +59,17 @@ export function registerGetPageMetadataTool(
           }
         }
 
-        const metadataByUrl = new Map<string, PageMetadata>()
+        const sessionMetadata: Array<{ url: string; metadata: PageMetadata }> =
+          []
         for (const response of responses) {
           if (response.data) {
             // TODO: Add other metadata for the current page render here. Currently, we only have segment trie data.
             const pageMetadata = convertSegmentTrieToPageMetadata(response.data)
-            metadataByUrl.set(response.url, pageMetadata)
+            sessionMetadata.push({ url: response.url, metadata: pageMetadata })
           }
         }
 
-        if (metadataByUrl.size === 0) {
+        if (sessionMetadata.length === 0) {
           return {
             content: [
               {
@@ -79,7 +80,7 @@ export function registerGetPageMetadataTool(
           }
         }
 
-        const output = formatPageMetadata(metadataByUrl)
+        const output = formatPageMetadata(sessionMetadata)
 
         return {
           content: [
@@ -145,10 +146,12 @@ function convertSegmentTrieToPageMetadata(data: SegmentTrieData): PageMetadata {
   }
 }
 
-function formatPageMetadata(metadataByUrl: Map<string, PageMetadata>): string {
-  let output = `# Page metadata from ${metadataByUrl.size} browser session(s)\n\n`
+function formatPageMetadata(
+  sessionMetadata: Array<{ url: string; metadata: PageMetadata }>
+): string {
+  let output = `# Page metadata from ${sessionMetadata.length} browser session(s)\n\n`
 
-  for (const [url, metadata] of metadataByUrl) {
+  for (const { url, metadata } of sessionMetadata) {
     let displayUrl = url
     try {
       const urlObj = new URL(url)"
vercel/next.js,a29b4fa5c3f02c5a8f5a14050a1cdd7736a8bb30,Jude Gao,2025-10-07T03:26:04Z,"[MCP] Fix: Do not dedup by URL for MCP get_page_metadata (#84564)

The `get_page_metadata` MCP tool was incorrectly grouping browser
sessions by URL instead of counting each session individually. When
multiple browser tabs were open to the same URL, the tool would report
only 1 session instead of the actual number of sessions.",test/development/mcp-server/mcp-server-get-page-metadata.test.ts,27,0,27,"@@ -180,6 +180,33 @@ describe('mcp-server get_page_metadata tool', () => {
         await session2.close()
       }
     })
+
+    it('should count multiple browser tabs with the same URL separately', async () => {
+      await new Promise((resolve) => setTimeout(resolve, 500))
+
+      const session1 = await launchStandaloneSession(next.url, '/')
+      const session2 = await launchStandaloneSession(next.url, '/')
+
+      try {
+        await new Promise((resolve) => setTimeout(resolve, 1000))
+
+        let metadata: string = ''
+        await retry(async () => {
+          const sessionId = 'test-same-url-' + Date.now()
+          metadata = await callGetPageMetadata(next.url, sessionId)
+          const rootSessions = (metadata.match(/## Session: \/(?!\w)/g) || [])
+            .length
+          expect(rootSessions).toBeGreaterThanOrEqual(2)
+        })
+
+        const rootSessions = (metadata.match(/## Session: \/(?!\w)/g) || [])
+          .length
+        expect(rootSessions).toBeGreaterThanOrEqual(2)
+      } finally {
+        await session1.close()
+        await session2.close()
+      }
+    })
   })
 
   describe('pages router', () => {"
vercel/next.js,c0cd530ad8699b433a52c1459ef4d6c06de286ee,Josh Story,2025-10-07T02:03:12Z,"Allow silencing unhandled rejection filter warnings and improve debugging (#84572)

The original debug logs were added to help validate the filter worked
correctly in real applications. They leak implementation details which
is more permissive than ideal. One reason to keep these around however
is if you end up seeing the filter being removed you might want to
understand what code is actually doing the removal. The debug mode now
allows you to receive stacks so you can pinpoint what is manipulating
the listeners.

Additionally if you are ok with whatever is leading to these warnings
you might want to quiet them. This introduces a silent mode

Additionally this removes any warnings except for the one about
uninstalling the filter because doing so is so likely to be a bad idea
that we must highlight it if it is happening.",packages/next/src/server/node-environment-extensions/unhandled-rejection.test.ts,128,19,147,"@@ -61,7 +61,7 @@ type WorkerResult = {
   stderr: string
   uhr: Array<UHRReport>
   count: Array<CountReport>
-  errorLog: Array<ErrorLogReport>
+  errorLog: Array<string>
   data: Record<string, unknown>
   messages: Array<ReportableResult>
 }
@@ -104,7 +104,7 @@ export function runWorkerCode(fn: Function): Promise<WorkerResult> {
     const messages: Array<ReportableResult> = []
     const uhr: Array<UHRReport> = []
     const count: Array<CountReport> = []
-    const errorLog: Array<ErrorLogReport> = []
+    const errorLog: Array<string> = []
     const data = {} as Record<string, unknown>
     let stderr = ''
 
@@ -166,7 +166,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should not install filter when disabled', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'disabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'disabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         reportResult({
@@ -185,7 +185,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should install filter rejections when environment variable is enabled', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         reportResult({
@@ -204,7 +204,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should install filter rejections when environment variable is enabled in debug mode', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'debug'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'debug'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         reportResult({
@@ -220,12 +220,121 @@ describe('unhandled-rejection filter', () => {
         expect.arrayContaining([expect.objectContaining({ count: 1 })])
       )
     })
+
+    it('should warn once when you uninstall the filter with removeListener', async () => {
+      async function testForWorker() {
+        const originalWarn = console.warn
+        console.warn = (...args: Array<any>) => {
+          reportResult({ type: 'error-log', message: args.join(' ') })
+          originalWarn(...args)
+        }
+
+        require('next/dist/server/node-environment-extensions/unhandled-rejection')
+
+        const filterListener = process.listeners('unhandledRejection')[0]
+        process.removeListener('unhandledRejection', filterListener)
+        process.removeListener('unhandledRejection', filterListener)
+        process.removeAllListeners()
+      }
+
+      const { errorLog, exitCode } = await runWorkerCode(testForWorker)
+      expect(exitCode).toBe(0)
+      expect(errorLog).toMatchInlineSnapshot(`
+       [
+         ""[Next.js Unhandled Rejection Filter]: Uninstalling filter because \`process.removeListener('unhandledRejection', listener)\` was called with the filter listener. Uninstalling this filter is not recommended and will cause you to observe 'unhandledRejection' events related to intentionally aborted prerenders.
+
+       You can silence warnings related to this behavior by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=silent\` environment variable.
+
+       You can debug event listener operations by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=debug\` environment variable."",
+       ]
+      `)
+    })
+
+    it('should warn once when you uninstall the filter with off', async () => {
+      async function testForWorker() {
+        const originalWarn = console.warn
+        console.warn = (...args: Array<any>) => {
+          reportResult({ type: 'error-log', message: args.join(' ') })
+          originalWarn(...args)
+        }
+
+        require('next/dist/server/node-environment-extensions/unhandled-rejection')
+
+        const filterListener = process.listeners('unhandledRejection')[0]
+        process.off('unhandledRejection', filterListener)
+        process.off('unhandledRejection', filterListener)
+        process.removeAllListeners()
+      }
+
+      const { errorLog, exitCode } = await runWorkerCode(testForWorker)
+      expect(exitCode).toBe(0)
+      expect(errorLog).toMatchInlineSnapshot(`
+       [
+         ""[Next.js Unhandled Rejection Filter]: Uninstalling filter because \`process.removeListener('unhandledRejection', listener)\` was called with the filter listener. Uninstalling this filter is not recommended and will cause you to observe 'unhandledRejection' events related to intentionally aborted prerenders.
+
+       You can silence warnings related to this behavior by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=silent\` environment variable.
+
+       You can debug event listener operations by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=debug\` environment variable."",
+       ]
+      `)
+    })
+
+    it('should warn once when you uninstall the filter with removeAllListeners', async () => {
+      async function testForWorker() {
+        const originalWarn = console.warn
+        console.warn = (...args: Array<any>) => {
+          reportResult({ type: 'error-log', message: args.join(' ') })
+          originalWarn(...args)
+        }
+
+        require('next/dist/server/node-environment-extensions/unhandled-rejection')
+
+        const filterListener = process.listeners('unhandledRejection')[0]
+        process.removeAllListeners()
+        process.off('unhandledRejection', filterListener)
+        process.removeListener('unhandledRejection', filterListener)
+      }
+
+      const { errorLog, exitCode } = await runWorkerCode(testForWorker)
+      expect(exitCode).toBe(0)
+      expect(errorLog).toMatchInlineSnapshot(`
+       [
+         ""[Next.js Unhandled Rejection Filter]: Uninstalling filter because \`process.removeAllListeners()\` was called. Uninstalling this filter is not recommended and will cause you to observe 'unhandledRejection' events related to intentionally aborted prerenders.
+
+       You can silence warnings related to this behavior by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=silent\` environment variable.
+
+       You can debug event listener operations by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=debug\` environment variable."",
+       ]
+      `)
+    })
+
+    it('does not warn when environment variable is set to silent mode', async () => {
+      async function testForWorker() {
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'silent'
+        const originalWarn = console.warn
+        console.warn = (...args: Array<any>) => {
+          reportResult({ type: 'error-log', message: args.join(' ') })
+          originalWarn(...args)
+        }
+
+        require('next/dist/server/node-environment-extensions/unhandled-rejection')
+
+        const filterListener = process.listeners('unhandledRejection')[0]
+        process.removeAllListeners()
+        process.off('unhandledRejection', filterListener)
+        process.removeListener('unhandledRejection', filterListener)
+      }
+
+      const { errorLog, exitCode } = await runWorkerCode(testForWorker)
+      expect(exitCode).toBe(0)
+      expect(errorLog).toMatchInlineSnapshot(`[]`)
+    })
   })
 
   describe('filtering functionality', () => {
     it('should suppress rejections from aborted prerender contexts', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = '1'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = '1'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const {
@@ -293,7 +402,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should suppress rejections from aborted prerender-client contexts', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = '1'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = '1'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const {
@@ -361,7 +470,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should suppress rejections from aborted prerender-runtime contexts', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = '1'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = '1'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const {
@@ -429,7 +538,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should pass through rejections from non-aborted prerender contexts', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = '1'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = '1'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const {
@@ -472,7 +581,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should call console.error when no handlers are present', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = '1'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = '1'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         console.error = (...args: Array<any>) => {
@@ -493,7 +602,7 @@ describe('unhandled-rejection filter', () => {
   describe('process method interception', () => {
     it('should handle process.once listeners correctly', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         let callCount = 0
@@ -528,7 +637,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should handle process.removeListener correctly', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const handler1 = (reason: unknown) => {
@@ -598,7 +707,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should uninstall filter when removeAllListeners() is called without arguments', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const {
@@ -660,7 +769,7 @@ describe('unhandled-rejection filter', () => {
 
     it('should not uninstall filter when removeAllListeners(""unhandledRejection"") is called', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const {
@@ -719,7 +828,7 @@ describe('unhandled-rejection filter', () => {
       // an event is emitted will be invoked regardless of whether there are mutations to the listeners
       // during event handling.
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const onceHandler = (reason: unknown) => {
@@ -825,7 +934,7 @@ describe('unhandled-rejection filter', () => {
         const originalToStrings = originalMethods.map((m) => m.toString())
         const originalNames = originalMethods.map((m) => m.name)
 
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const patchedMethods = [
@@ -885,7 +994,7 @@ describe('unhandled-rejection filter', () => {
   describe('error handling in handlers', () => {
     it('should handle errors thrown by user handlers gracefully', async () => {
       async function testForWorker() {
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const {
@@ -929,7 +1038,7 @@ describe('unhandled-rejection filter', () => {
           reportResult({ type: 'uhr', reason: `existing: ${String(reason)}` })
         })
 
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         const {
@@ -971,7 +1080,7 @@ describe('unhandled-rejection filter', () => {
           reportResult({ type: 'uhr', reason: `existing: ${String(reason)}` })
         })
 
-        process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER = 'enabled'
+        process.env.NEXT_UNHANDLED_REJECTION_FILTER = 'enabled'
         require('next/dist/server/node-environment-extensions/unhandled-rejection')
 
         process.removeAllListeners('unhandledRejection')"
vercel/next.js,c0cd530ad8699b433a52c1459ef4d6c06de286ee,Josh Story,2025-10-07T02:03:12Z,"Allow silencing unhandled rejection filter warnings and improve debugging (#84572)

The original debug logs were added to help validate the filter worked
correctly in real applications. They leak implementation details which
is more permissive than ideal. One reason to keep these around however
is if you end up seeing the filter being removed you might want to
understand what code is actually doing the removal. The debug mode now
allows you to receive stacks so you can pinpoint what is manipulating
the listeners.

Additionally if you are ok with whatever is leading to these warnings
you might want to quiet them. This introduces a silent mode

Additionally this removes any warnings except for the one about
uninstalling the filter because doing so is so likely to be a bad idea
that we must highlight it if it is happening.",packages/next/src/server/node-environment-extensions/unhandled-rejection.tsx,177,81,258,"@@ -24,20 +24,24 @@ import { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.exte
 const MODE:
   | 'enabled'
   | 'debug'
+  | 'silent'
   | 'true'
   | 'false'
   | '1'
   | '0'
   | ''
   | string
-  | undefined = process.env.NEXT_USE_UNHANDLED_REJECTION_FILTER
+  | undefined = process.env.NEXT_UNHANDLED_REJECTION_FILTER
 
 let ENABLE_UHR_FILTER = true
-let DEBUG_UHR_FILTER = false
+let UHR_FILTER_LOG_LEVEL: 'debug' | 'warn' | 'silent' = 'warn'
 
 switch (MODE) {
+  case 'silent':
+    UHR_FILTER_LOG_LEVEL = 'silent'
+    break
   case 'debug':
-    DEBUG_UHR_FILTER = true
+    UHR_FILTER_LOG_LEVEL = 'debug'
     break
   case 'false':
   case 'disabled':
@@ -53,14 +57,58 @@ switch (MODE) {
   default:
     if (typeof MODE === 'string') {
       console.error(
-        `NEXT_USE_UNHANDLED_REJECTION_FILTER has an unrecognized value: ${JSON.stringify(MODE)}. Use ""enabled"", ""disabled"", or ""debug"" or omit the environment variable altogether`
+        `NEXT_UNHANDLED_REJECTION_FILTER has an unrecognized value: ${JSON.stringify(MODE)}. Use ""enabled"", ""disabled"", ""silent"", or ""debug"", or omit the environment variable altogether`
       )
     }
 }
 
-const debug = DEBUG_UHR_FILTER
-  ? (...args: any[]) =>
-      console.log('[UNHANDLED REJECTION DEBUG]', ...args, new Error().stack)
+let debug: typeof console.debug | undefined
+let debugWithTrace: typeof console.debug | undefined
+let warn: typeof console.warn | undefined
+let warnWithTrace: typeof console.warn | undefined
+
+switch (UHR_FILTER_LOG_LEVEL) {
+  case 'debug':
+    debug = (message: string) =>
+      console.log('[Next.js Unhandled Rejection Filter]: ' + message)
+    debugWithTrace = (message: string) => {
+      console.log(new DebugWithStack(message))
+    }
+  // Intentional fallthrough
+  case 'warn':
+    warn = (message: string) => {
+      console.warn('[Next.js Unhandled Rejection Filter]: ' + message)
+    }
+    warnWithTrace = (message: string) => {
+      console.warn(new WarnWithStack(message))
+    }
+    break
+  case 'silent':
+  default:
+}
+
+class DebugWithStack extends Error {
+  constructor(message: string) {
+    super(message)
+    this.name = '[Next.js Unhandled Rejection Filter]'
+  }
+}
+
+class WarnWithStack extends Error {
+  constructor(message: string) {
+    super(message)
+    this.name = '[Next.js Unhandled Rejection Filter]'
+  }
+}
+
+let didWarnUninstalled = false
+const warnUninstalledOnce = warn
+  ? function warnUninstalledOnce(...args: any[]) {
+      if (!didWarnUninstalled) {
+        didWarnUninstalled = true
+        warn(...args)
+      }
+    }
   : undefined
 
 type ListenerMetadata = {
@@ -98,9 +146,6 @@ type UnderlyingMethod =
   | typeof originalProcessRemoveAllListeners
   | typeof originalProcessListeners
 
-let didWarnPrepend = false
-let didWarnRemoveAll = false
-
 // Some of these base methods call others and we don't want them to call the patched version so we
 // need a way to synchronously disable the patch temporarily.
 let bypassPatch = false
@@ -140,6 +185,8 @@ function patchWithoutReentrancy<T extends UnderlyingMethod>(
   return patched
 }
 
+const MACGUFFIN_EVENT = 'Next.UnhandledRejectionFilter.MacguffinEvent'
+
 /**
  * Installs a filtering unhandled rejection handler that intelligently suppresses
  * rejections from aborted prerender contexts.
@@ -148,14 +195,13 @@ function patchWithoutReentrancy<T extends UnderlyingMethod>(
  */
 function installUnhandledRejectionFilter(): void {
   if (filterInstalled) {
-    debug?.('unexpected second install')
+    warnWithTrace?.(
+      'Unexpected subsequent filter installation. This is a bug in Next.js'
+    )
     return
   }
 
-  debug?.(
-    'installUnhandledRejectionFilter',
-    process.listeners('unhandledRejection').map((l) => l.toString())
-  )
+  debug?.('Installing Filter')
 
   // Capture existing handlers
   underlyingListeners = Array.from(process.listeners('unhandledRejection'))
@@ -186,7 +232,20 @@ function installUnhandledRejectionFilter(): void {
     originalProcessAddListener,
     function (event: string | symbol, listener: (...args: any[]) => void) {
       if (event === 'unhandledRejection') {
-        debug?.('process.addListener', listener.toString())
+        debugWithTrace?.(
+          `Appending 'unhandledRejection' listener with name \`${listener.name}\`.`
+        )
+        // We add the listener to a dummy event in case it throws. We don't catch it intentionally
+        try {
+          originalProcessAddListener.call(
+            process,
+            MACGUFFIN_EVENT as any,
+            listener
+          )
+        } finally {
+          // We clean up the added event
+          originalProcessRemoveAllListeners.call(process, MACGUFFIN_EVENT)
+        }
         // Add new handlers to our internal queue instead of the process
         underlyingListeners.push(listener as NodeJS.UnhandledRejectionListener)
         listenerMetadata.push({ listener, once: false })
@@ -202,20 +261,35 @@ function installUnhandledRejectionFilter(): void {
     originalProcessRemoveListener,
     function (event: string | symbol, listener: (...args: any[]) => void) {
       if (event === 'unhandledRejection') {
-        debug?.('process.removeListener', listener.toString())
         // Check if they're trying to remove our filtering handler
         if (listener === filteringUnhandledRejectionHandler) {
+          warnUninstalledOnce?.(
+            `Uninstalling filter because \`process.removeListener('unhandledRejection', listener)\` was called with the filter listener. Uninstalling this filter is not recommended and will cause you to observe 'unhandledRejection' events related to intentionally aborted prerenders.
+
+You can silence warnings related to this behavior by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=silent\` environment variable.
+
+You can debug event listener operations by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=debug\` environment variable.`
+          )
           uninstallUnhandledRejectionFilter()
           return process
         }
 
+        debugWithTrace?.(
+          `Removing 'unhandledRejection' listener with name \`${listener.name}\`.`
+        )
+        // We remove the listener on a dummy event in case it throws. We don't catch it intentionally
+        originalProcessRemoveListener.call(
+          process,
+          MACGUFFIN_EVENT as any,
+          listener
+        )
         const index = underlyingListeners.lastIndexOf(listener)
         if (index > -1) {
-          debug?.('process.removeListener match found', index)
+          debug?.(`listener found index ${index} and removed.`)
           underlyingListeners.splice(index, 1)
           listenerMetadata.splice(index, 1)
         } else {
-          debug?.('process.removeListener match not found', index)
+          debug?.(`listener not found.`)
         }
         return process
       }
@@ -233,7 +307,16 @@ function installUnhandledRejectionFilter(): void {
       listener: (...args: any[]) => void
     ) {
       if (event === 'unhandledRejection') {
-        debug?.('process.on', listener.toString())
+        debugWithTrace?.(
+          `Appending 'unhandledRejection' listener with name \`${listener.name}\`.`
+        )
+        // We add the listener to a dummy event in case it throws. We don't catch it intentionally
+        try {
+          originalProcessOn.call(process, MACGUFFIN_EVENT as any, listener)
+        } finally {
+          // We clean up the added event
+          originalProcessRemoveAllListeners.call(process, MACGUFFIN_EVENT)
+        }
         // Add new handlers to our internal queue instead of the process
         underlyingListeners.push(listener as NodeJS.UnhandledRejectionListener)
         listenerMetadata.push({ listener, once: false })
@@ -253,20 +336,31 @@ function installUnhandledRejectionFilter(): void {
       listener: (...args: any[]) => void
     ) {
       if (event === 'unhandledRejection') {
-        debug?.('process.off', listener.toString())
         // Check if they're trying to remove our filtering handler
         if (listener === filteringUnhandledRejectionHandler) {
+          warnUninstalledOnce?.(
+            `Uninstalling filter because \`process.off('unhandledRejection', listener)\` was called with the filter listener. Uninstalling this filter is not recommended and will cause you to observe 'unhandledRejection' events related to intentionally aborted prerenders.
+
+You can silence warnings related to this behavior by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=silent\` environment variable.
+
+You can debug event listener operations by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=debug\` environment variable.`
+          )
           uninstallUnhandledRejectionFilter()
           return process
         }
 
+        debugWithTrace?.(
+          `Removing 'unhandledRejection' listener with name \`${listener.name}\`.`
+        )
+        // We remove the listener on a dummy event in case it throws. We don't catch it intentionally
+        originalProcessOff.call(process, MACGUFFIN_EVENT as any, listener)
         const index = underlyingListeners.lastIndexOf(listener)
         if (index > -1) {
-          debug?.('process.off match found', index)
+          debug?.(`listener found index ${index} and removed.`)
           underlyingListeners.splice(index, 1)
           listenerMetadata.splice(index, 1)
         } else {
-          debug?.('process.off match not found', index)
+          debug?.(`listener not found.`)
         }
         return process
       }
@@ -280,14 +374,21 @@ function installUnhandledRejectionFilter(): void {
     originalProcessPrependListener,
     function (event: string | symbol, listener: (...args: any[]) => void) {
       if (event === 'unhandledRejection') {
-        debug?.('process.prependListener', listener.toString())
-        if (didWarnPrepend === false) {
-          didWarnPrepend = true
-          console.warn(
-            'Warning: `prependListener(""unhandledRejection"")` called, but Next.js maintains the first listener ' +
-              'which filters out unnecessary events from aborted prerenders. Your handler will be second.'
+        debugWithTrace?.(
+          `(Prepending) Inserting 'unhandledRejection' listener with name \`${listener.name}\` immediately following the Next.js 'unhandledRejection' filter listener.`
+        )
+        // We add the listener to a dummy event in case it throws. We don't catch it intentionally
+        try {
+          originalProcessPrependListener.call(
+            process,
+            MACGUFFIN_EVENT as any,
+            listener
           )
+        } finally {
+          // We clean up the added event
+          originalProcessRemoveAllListeners.call(process, MACGUFFIN_EVENT)
         }
+
         // Add new handlers to the beginning of our internal queue
         underlyingListeners.unshift(
           listener as NodeJS.UnhandledRejectionListener
@@ -310,7 +411,16 @@ function installUnhandledRejectionFilter(): void {
     listener: (...args: any[]) => void
   ) {
     if (event === 'unhandledRejection') {
-      debug?.('process.once', listener.toString())
+      debugWithTrace?.(
+        `Appending 'unhandledRejection' once-listener with name \`${listener.name}\`.`
+      )
+      // We add the listener to a dummy event in case it throws. We don't catch it intentionally
+      try {
+        originalProcessOnce.call(process, MACGUFFIN_EVENT as any, listener)
+      } finally {
+        // We clean up the added event
+        originalProcessRemoveAllListeners.call(process, MACGUFFIN_EVENT)
+      }
       underlyingListeners.push(listener as NodeJS.UnhandledRejectionListener)
       listenerMetadata.push({
         listener: listener as NodeJS.UnhandledRejectionListener,
@@ -327,14 +437,21 @@ function installUnhandledRejectionFilter(): void {
     originalProcessPrependOnceListener,
     function (event: string | symbol, listener: (...args: any[]) => void) {
       if (event === 'unhandledRejection') {
-        debug?.('process.prependOnceListener', listener.toString())
-        if (didWarnPrepend === false) {
-          didWarnPrepend = true
-          console.warn(
-            'Warning: `prependOnceListener(""unhandledRejection"")` called, but Next.js maintains the first listener ' +
-              'which filters out unnecessary events from aborted prerenders. Your handler will be second.'
+        debugWithTrace?.(
+          `(Prepending) Inserting 'unhandledRejection' once-listener with name \`${listener.name}\` immediately following the Next.js 'unhandledRejection' filter listener.`
+        )
+        // We add the listener to a dummy event in case it throws. We don't catch it intentionally
+        try {
+          originalProcessPrependOnceListener.call(
+            process,
+            MACGUFFIN_EVENT as any,
+            listener
           )
+        } finally {
+          // We clean up the added event
+          originalProcessRemoveAllListeners.call(process, MACGUFFIN_EVENT)
         }
+
         // Add to the beginning of our internal queue
         underlyingListeners.unshift(
           listener as NodeJS.UnhandledRejectionListener
@@ -359,19 +476,20 @@ function installUnhandledRejectionFilter(): void {
     originalProcessRemoveAllListeners,
     function (event?: string | symbol) {
       if (event === 'unhandledRejection') {
-        debug?.(
-          'process.removeAllListeners',
-          underlyingListeners.map((l) => l.toString())
+        // TODO add warning for this case once we stop importing this in test scopes automatically. Currently
+        // we pull this file in whenever build/utils.tsx is imported which is not the right layering.
+        // The extensions should be loaded from entrypoints like build/index or next-server
+        //         warnRemoveAllOnce?.(
+        //           `\`process.removeAllListeners('unhandledRejection')\` was called. Next.js maintains the first 'unhandledRejection' listener to filter out unnecessary rejection warnings caused by aborting prerenders early. It is not recommended that you uninstall this behavior, but if you want to you must you can acquire the listener with \`process.listeners('unhandledRejection')[0]\` and remove it with \`process.removeListener('unhandledRejection', listener)\`.
+
+        // You can silence warnings related to this behavior by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=silent\` environment variable.
+
+        // You can debug event listener operations by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=debug\` environment variable.`
+        //         )
+        debugWithTrace?.(
+          `Removing all 'unhandledRejection' listeners except for the Next.js filter.`
         )
-        if (didWarnRemoveAll === false) {
-          didWarnRemoveAll = true
-          console.warn(
-            'Warning: `removeAllListeners(""unhandledRejection"")` called. Next.js maintains an `unhandledRejection` listener ' +
-              'to filter out unnecessary rejection warnings caused by aborting prerenders early. It is not recommended that you ' +
-              'uninstall this behavior, but if you want to you must call `process.removeListener(""unhandledRejection"", listener)`. ' +
-              'You can acquire the listener from `process.listeners(""unhandledRejection"")[0]`.'
-          )
-        }
+
         underlyingListeners.length = 0
         listenerMetadata.length = 0
         return process
@@ -383,9 +501,12 @@ function installUnhandledRejectionFilter(): void {
       }
 
       // If no event specified (removeAllListeners()), uninstall our patch completely
-      console.warn(
-        'Warning: `removeAllListeners()` called - uninstalling Next.js unhandled rejection filter. ' +
-          'You will observe `unhandledRejection` logs from prerendering which are not problematic.'
+      warnUninstalledOnce?.(
+        `Uninstalling filter because \`process.removeAllListeners()\` was called. Uninstalling this filter is not recommended and will cause you to observe 'unhandledRejection' events related to intentionally aborted prerenders.
+
+You can silence warnings related to this behavior by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=silent\` environment variable.
+
+You can debug event listener operations by running Next.js with \`NEXT_UNHANDLED_REJECTION_FILTER=debug\` environment variable.`
       )
       uninstallUnhandledRejectionFilter()
       return originalProcessRemoveAllListeners.call(process)
@@ -397,31 +518,14 @@ function installUnhandledRejectionFilter(): void {
     originalProcessListeners,
     function (event: string | symbol) {
       if (event === 'unhandledRejection') {
-        debug?.(
-          'process.listeners',
-          [filteringUnhandledRejectionHandler, ...underlyingListeners].map(
-            (l) => l.toString()
-          )
-        )
+        debugWithTrace?.(`Retrieving all 'unhandledRejection' listeners.`)
         return [filteringUnhandledRejectionHandler, ...underlyingListeners]
       }
       return originalProcessListeners.call(process, event as any)
     } as typeof process.listeners
   )
 
   filterInstalled = true
-
-  debug?.(
-    'after install actual listeners',
-    originalProcessListeners
-      .call(process, 'unhandledRejection' as any)
-      .map((l) => l.toString())
-  )
-
-  debug?.(
-    'after install listeners',
-    process.listeners('unhandledRejection').map((l) => l.toString())
-  )
 }
 
 /**
@@ -431,16 +535,13 @@ function installUnhandledRejectionFilter(): void {
  */
 function uninstallUnhandledRejectionFilter(): void {
   if (!filterInstalled) {
-    debug?.('unexpected second uninstall')
+    warnWithTrace?.(
+      'Unexpected subsequent filter uninstallation. This is a bug in Next.js'
+    )
     return
   }
 
-  debug?.(
-    'uninstallUnhandledRejectionFilter',
-    [filteringUnhandledRejectionHandler, ...underlyingListeners].map((l) =>
-      l.toString()
-    )
-  )
+  debug?.('Uninstalling Filter')
 
   // Restore original process methods
   process.on = originalProcessOn
@@ -472,11 +573,6 @@ function uninstallUnhandledRejectionFilter(): void {
   filterInstalled = false
   underlyingListeners.length = 0
   listenerMetadata.length = 0
-
-  debug?.(
-    'after uninstall',
-    process.listeners('unhandledRejection').map((l) => l.toString())
-  )
 }
 
 /**"
vercel/next.js,c0cd530ad8699b433a52c1459ef4d6c06de286ee,Josh Story,2025-10-07T02:03:12Z,"Allow silencing unhandled rejection filter warnings and improve debugging (#84572)

The original debug logs were added to help validate the filter worked
correctly in real applications. They leak implementation details which
is more permissive than ideal. One reason to keep these around however
is if you end up seeing the filter being removed you might want to
understand what code is actually doing the removal. The debug mode now
allows you to receive stacks so you can pinpoint what is manipulating
the listeners.

Additionally if you are ok with whatever is leading to these warnings
you might want to quiet them. This introduces a silent mode

Additionally this removes any warnings except for the one about
uninstalling the filter because doing so is so likely to be a bad idea
that we must highlight it if it is happening.",test/e2e/app-dir/cache-components-errors/cache-components-console-patch.test.ts,0,1,1,"@@ -7,7 +7,6 @@ describe('Cache Components Errors', () => {
     skipDeployment: true,
     skipStart: !isNextDev,
     env: {
-      NEXT_USE_UNHANDLED_REJECTION_FILTER: 'enabled',
       NODE_OPTIONS: '--require ./patch-console.js',
     },
   })"
vercel/next.js,c0cd530ad8699b433a52c1459ef4d6c06de286ee,Josh Story,2025-10-07T02:03:12Z,"Allow silencing unhandled rejection filter warnings and improve debugging (#84572)

The original debug logs were added to help validate the filter worked
correctly in real applications. They leak implementation details which
is more permissive than ideal. One reason to keep these around however
is if you end up seeing the filter being removed you might want to
understand what code is actually doing the removal. The debug mode now
allows you to receive stacks so you can pinpoint what is manipulating
the listeners.

Additionally if you are ok with whatever is leading to these warnings
you might want to quiet them. This introduces a silent mode

Additionally this removes any warnings except for the one about
uninstalling the filter because doing so is so likely to be a bad idea
that we must highlight it if it is happening.",test/e2e/app-dir/cache-components-errors/cache-components-errors.test.ts,0,3,3,"@@ -7,9 +7,6 @@ describe('Cache Components Errors', () => {
     files: __dirname + '/fixtures/default',
     skipStart: !isNextDev,
     skipDeployment: true,
-    env: {
-      NEXT_USE_UNHANDLED_REJECTION_FILTER: 'enabled',
-    },
   })
   const isRspack = !!process.env.NEXT_RSPACK
 "
vercel/next.js,844f0a62430dd697f4757d2f5eeef75da81f6e81,Benjamin Woodruff,2025-10-07T00:18:32Z,"Turbopack: Lower the IO concurrency limit in CI tests (#84508)

@lukesandberg pointed out that we have test flakes from too many file descriptors open.

I think we should significantly raise these limits on the ci runners (@ijjk?), but given that we run 8 tests in parallel, it's probably good anyways for Turbopack to be less aggressive with file IO in our CI.",.github/workflows/build_reusable.yml,3,0,3,"@@ -110,6 +110,9 @@ env:
   NEXT_CI_RUNNER: ${{ inputs.runs_on_labels }}
   NEXT_TEST_PROXY_ADDRESS: ${{ inputs.overrideProxyAddress || '' }}
 
+  # defaults to 256, but we run a lot of tests in parallel, so the limit should be lower
+  NEXT_TURBOPACK_IO_CONCURRENCY: 64
+
 jobs:
   build:
     timeout-minutes: ${{ inputs.timeout_minutes }}"
vercel/next.js,844f0a62430dd697f4757d2f5eeef75da81f6e81,Benjamin Woodruff,2025-10-07T00:18:32Z,"Turbopack: Lower the IO concurrency limit in CI tests (#84508)

@lukesandberg pointed out that we have test flakes from too many file descriptors open.

I think we should significantly raise these limits on the ci runners (@ijjk?), but given that we run 8 tests in parallel, it's probably good anyways for Turbopack to be less aggressive with file IO in our CI.",turbopack/crates/turbo-tasks-fs/src/lib.rs,15,1,16,"@@ -31,6 +31,7 @@ mod watcher;
 use std::{
     borrow::Cow,
     cmp::{Ordering, min},
+    env,
     fmt::{self, Debug, Display, Formatter},
     fs::FileType,
     future::Future,
@@ -193,7 +194,20 @@ where
 }
 
 fn create_semaphore() -> tokio::sync::Semaphore {
-    tokio::sync::Semaphore::new(256)
+    // the semaphore isn't serialized, and we assume the environment variable doesn't change during
+    // runtime, so it's okay to access it in this untracked way.
+    static NEXT_TURBOPACK_IO_CONCURRENCY: LazyLock<usize> = LazyLock::new(|| {
+        env::var(""NEXT_TURBOPACK_IO_CONCURRENCY"")
+            .ok()
+            .filter(|val| !val.is_empty())
+            .map(|val| {
+                val.parse()
+                    .expect(""NEXT_TURBOPACK_IO_CONCURRENCY must be a valid integer"")
+            })
+            .filter(|val| *val != 0)
+            .unwrap_or(256)
+    });
+    tokio::sync::Semaphore::new(*NEXT_TURBOPACK_IO_CONCURRENCY)
 }
 
 #[turbo_tasks::value_trait]"
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,lerna.json,1,1,2,"@@ -16,5 +16,5 @@
       ""registry"": ""https://registry.npmjs.org/""
     }
   },
-  ""version"": ""15.6.0-canary.46""
+  ""version"": ""15.6.0-canary.47""
 }"
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/create-next-app/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""create-next-app"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/eslint-config-next/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""eslint-config-next"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""description"": ""ESLint configuration used by Next.js."",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
@@ -10,7 +10,7 @@
   },
   ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"",
   ""dependencies"": {
-    ""@next/eslint-plugin-next"": ""15.6.0-canary.46"",
+    ""@next/eslint-plugin-next"": ""15.6.0-canary.47"",
     ""@rushstack/eslint-patch"": ""^1.10.3"",
     ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"",
     ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/eslint-plugin-internal/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/eslint-plugin-internal"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""description"": ""ESLint plugin for working on Next.js."",
   ""exports"": {
     ""."": ""./src/eslint-plugin-internal.js"""
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/eslint-plugin-next/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/eslint-plugin-next"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""description"": ""ESLint plugin for Next.js."",
   ""main"": ""dist/index.js"",
   ""types"": ""dist/index.d.ts"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/font/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/font"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/font"""
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next-bundle-analyzer/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/bundle-analyzer"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""main"": ""index.js"",
   ""types"": ""index.d.ts"",
   ""license"": ""MIT"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next-codemod/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/codemod"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""license"": ""MIT"",
   ""repository"": {
     ""type"": ""git"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next-env/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/env"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next-mdx/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/mdx"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
   ""repository"": {"
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next-plugin-storybook/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/plugin-storybook"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-plugin-storybook"""
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next-polyfill-module/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-module"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+, Firefox 60+, Chrome 61+, Safari 10.1+)"",
   ""main"": ""dist/polyfill-module.js"",
   ""license"": ""MIT"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next-polyfill-nomodule/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-nomodule"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""description"": ""A polyfill for non-dead, nomodule browsers."",
   ""main"": ""dist/polyfill-nomodule.js"",
   ""license"": ""MIT"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next-rspack/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next-rspack"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-rspack"""
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next-swc/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/swc"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""private"": true,
   ""files"": [
     ""native/"""
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/next/package.json,7,7,14,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""description"": ""The React Framework"",
   ""main"": ""./dist/server/next.js"",
   ""license"": ""MIT"",
@@ -100,7 +100,7 @@
     ]
   },
   ""dependencies"": {
-    ""@next/env"": ""15.6.0-canary.46"",
+    ""@next/env"": ""15.6.0-canary.47"",
     ""@swc/helpers"": ""0.5.15"",
     ""caniuse-lite"": ""^1.0.30001579"",
     ""postcss"": ""8.4.31"",
@@ -164,11 +164,11 @@
     ""@modelcontextprotocol/sdk"": ""1.18.1"",
     ""@mswjs/interceptors"": ""0.23.0"",
     ""@napi-rs/triples"": ""1.2.0"",
-    ""@next/font"": ""15.6.0-canary.46"",
-    ""@next/polyfill-module"": ""15.6.0-canary.46"",
-    ""@next/polyfill-nomodule"": ""15.6.0-canary.46"",
-    ""@next/react-refresh-utils"": ""15.6.0-canary.46"",
-    ""@next/swc"": ""15.6.0-canary.46"",
+    ""@next/font"": ""15.6.0-canary.47"",
+    ""@next/polyfill-module"": ""15.6.0-canary.47"",
+    ""@next/polyfill-nomodule"": ""15.6.0-canary.47"",
+    ""@next/react-refresh-utils"": ""15.6.0-canary.47"",
+    ""@next/swc"": ""15.6.0-canary.47"",
     ""@opentelemetry/api"": ""1.6.0"",
     ""@playwright/test"": ""1.51.1"",
     ""@rspack/core"": ""1.5.0"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/react-refresh-utils/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/react-refresh-utils"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""description"": ""An experimental package providing utilities for React Refresh."",
   ""repository"": {
     ""url"": ""vercel/next.js"","
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,packages/third-parties/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/third-parties"",
-  ""version"": ""15.6.0-canary.46"",
+  ""version"": ""15.6.0-canary.47"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/third-parties""
@@ -26,7 +26,7 @@
     ""third-party-capital"": ""1.0.20""
   },
   ""devDependencies"": {
-    ""next"": ""15.6.0-canary.46"",
+    ""next"": ""15.6.0-canary.47"",
     ""outdent"": ""0.8.0"",
     ""prettier"": ""2.5.1"",
     ""typescript"": ""5.9.2"""
vercel/next.js,a6c48f029d7292af04dcb525a85269f92a7f1e96,nextjs-bot,2025-10-06T23:24:20Z,v15.6.0-canary.47,pnpm-lock.yaml,8,8,16,"@@ -899,7 +899,7 @@ importers:
   packages/eslint-config-next:
     dependencies:
       '@next/eslint-plugin-next':
-        specifier: 15.6.0-canary.46
+        specifier: 15.6.0-canary.47
         version: link:../eslint-plugin-next
       '@rushstack/eslint-patch':
         specifier: ^1.10.3
@@ -972,7 +972,7 @@ importers:
   packages/next:
     dependencies:
       '@next/env':
-        specifier: 15.6.0-canary.46
+        specifier: 15.6.0-canary.47
         version: link:../next-env
       '@swc/helpers':
         specifier: 0.5.15
@@ -1097,19 +1097,19 @@ importers:
         specifier: 1.2.0
         version: 1.2.0
       '@next/font':
-        specifier: 15.6.0-canary.46
+        specifier: 15.6.0-canary.47
         version: link:../font
       '@next/polyfill-module':
-        specifier: 15.6.0-canary.46
+        specifier: 15.6.0-canary.47
         version: link:../next-polyfill-module
       '@next/polyfill-nomodule':
-        specifier: 15.6.0-canary.46
+        specifier: 15.6.0-canary.47
         version: link:../next-polyfill-nomodule
       '@next/react-refresh-utils':
-        specifier: 15.6.0-canary.46
+        specifier: 15.6.0-canary.47
         version: link:../react-refresh-utils
       '@next/swc':
-        specifier: 15.6.0-canary.46
+        specifier: 15.6.0-canary.47
         version: link:../next-swc
       '@opentelemetry/api':
         specifier: 1.6.0
@@ -1800,7 +1800,7 @@ importers:
         version: 1.0.20
     devDependencies:
       next:
-        specifier: 15.6.0-canary.46
+        specifier: 15.6.0-canary.47
         version: link:../next
       outdent:
         specifier: 0.8.0"
vercel/next.js,d796c0f20966482d3187923a145dafe9ff30cc08,Hendrik Liebau,2025-10-06T22:44:45Z,"[test] Unflake static image test (#84535)

[flakiness
metric](https://app.datadoghq.com/ci/test/runs?query=test_level%3Atest%20%40git.repository.id%3A%22github.com%2Fvercel%2Fnext.js%22%20%40test.name%3A%22Static%20Image%20Component%20Tests%20development%20mode%20Should%20allow%20an%20image%20with%20a%20static%20src%20to%20omit%20height%20and%20width%22%20%40test.type%3A%22turbopack%22%20%40test.status%3A%22fail%22&agg_m=count&agg_m_source=base&agg_t=count&currentTab=overview&eventStack=&fromUser=false&index=citest&start=1759057503838&end=1759662303838&paused=false)

I suspect that the test `Should allow an image with a static src to omit
height and width` is frequently failing with `waiting for
locator('#basic-static') to be visible` because the image is covered by
one of the images with a `fill` prop, which are rendered later in the
page. This means that the image is not actually visible, even though it
is in the DOM. Playwright then fails to find it. However, I wasn't able
to reproduce this locally.

The fix is to wrap the `fill` images in a relatively positioned div with
a set height, so that they don't cover the other images.

**Before:**

<img width=""490"" height=""894"" alt=""before""
src=""https://github.com/user-attachments/assets/7632dc67-a649-42b7-8b62-a9a216632ec2""
/>

**After:**

<img width=""490"" height=""894"" alt=""after""
src=""https://github.com/user-attachments/assets/2d369e4d-ef08-47cc-bdc4-04ab94afcceb""
/>

---------

Co-authored-by: graphite-app[bot] <96075541+graphite-app[bot]@users.noreply.github.com>",test/integration/next-image-new/default/pages/static-img.js,43,15,58,"@@ -25,6 +25,16 @@ export const getStaticProps = () => ({
   props: { testImgProp },
 })
 
+function FillContainer({ children }) {
+  // Optimized to accept the square test images. Subtracting 16px to account for
+  // the default 8px body margin.
+  return (
+    <div style={{ position: 'relative', height: 'calc(100vw - 16px)' }}>
+      {children}
+    </div>
+  )
+}
+
 const Page = ({ testImgProp }) => {
   return (
     <div>
@@ -74,23 +84,41 @@ const Page = ({ testImgProp }) => {
       <Image id=""static-bmp"" src={testBMP} />
       <Image id=""static-ico"" src={testICO} />
       <br />
-      <Image id=""static-svg-fill"" src={testSVG} fill />
-      <Image id=""static-gif-fill"" src={testGIF} fill />
-      <Image id=""static-bmp-fill"" src={testBMP} fill />
-      <Image id=""static-ico-fill"" src={testICO} fill />
+      <FillContainer>
+        <Image id=""static-svg-fill"" src={testSVG} fill />
+      </FillContainer>
+      <FillContainer>
+        <Image id=""static-gif-fill"" src={testGIF} fill />
+      </FillContainer>
+      <FillContainer>
+        <Image id=""static-bmp-fill"" src={testBMP} fill />
+      </FillContainer>
+      <FillContainer>
+        <Image id=""static-ico-fill"" src={testICO} fill />
+      </FillContainer>
       <br />
-      <Image id=""blur-png-fill"" src={testPNG} placeholder=""blur"" fill />
-      <Image id=""blur-jpg-fill"" src={testJPG} placeholder=""blur"" fill />
-      <Image id=""blur-webp-fill"" src={testWEBP} placeholder=""blur"" fill />
-      <Image id=""blur-avif-fill"" src={testAVIF} placeholder=""blur"" fill />
+      <FillContainer>
+        <Image id=""blur-png-fill"" src={testPNG} placeholder=""blur"" fill />
+      </FillContainer>
+      <FillContainer>
+        <Image id=""blur-jpg-fill"" src={testJPG} placeholder=""blur"" fill />
+      </FillContainer>
+      <FillContainer>
+        <Image id=""blur-webp-fill"" src={testWEBP} placeholder=""blur"" fill />
+      </FillContainer>
+      <FillContainer>
+        <Image id=""blur-avif-fill"" src={testAVIF} placeholder=""blur"" fill />
+      </FillContainer>
       <br />
-      <Image
-        id=""blurdataurl-fill""
-        src=""/test.jpg""
-        placeholder=""blur""
-        blurDataURL={blurDataURL}
-        fill
-      />
+      <FillContainer>
+        <Image
+          id=""blurdataurl-fill""
+          src=""/test.jpg""
+          placeholder=""blur""
+          blurDataURL={blurDataURL}
+          fill
+        />
+      </FillContainer>
       <Image
         id=""blurdataurl-ratio""
         src=""/test.png"""
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",.github/workflows/build_and_test.yml,1,1,2,"@@ -735,6 +735,7 @@ jobs:
         export IS_WEBPACK_TEST=1
         export NEXT_TEST_MODE=dev
         export NEXT_TEST_REACT_VERSION=""${{ matrix.react }}""
+        export __NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD=true
 
         node run-tests.js \
           --timings \
@@ -964,7 +965,6 @@ jobs:
         export __NEXT_EXPERIMENTAL_DEBUG_CHANNEL=true
         export NEXT_EXTERNAL_TESTS_FILTERS=""test/experimental-tests-manifest.json""
         export NEXT_TEST_MODE=dev
-        export __NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD=true
         export IS_WEBPACK_TEST=1
 
         node run-tests.js \"
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/development/basic/hmr/run-error-recovery-hmr-test.util.ts,2,1,3,"@@ -9,6 +9,7 @@ import {
   retry,
   waitFor,
   trimEndMultiline,
+  getDistDir,
 } from 'next-test-utils'
 import { nextTestSetup } from 'e2e-utils'
 import { outdent } from 'outdent'
@@ -767,7 +768,7 @@ export function runErrorRecoveryHmrTest(nextConfig: {
 
   if (!process.env.IS_TURBOPACK_TEST) {
     it('should have client HMR events in trace file', async () => {
-      const traceData = await next.readFile('.next/trace')
+      const traceData = await next.readFile(`${getDistDir()}/trace`)
       expect(traceData).toContain('client-hmr-latency')
       expect(traceData).toContain('client-error')
       expect(traceData).toContain('client-success')"
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/development/mcp-server/mcp-server-get-server-action-by-id.test.ts,3,2,5,"@@ -1,6 +1,7 @@
 import { FileRef, nextTestSetup } from 'e2e-utils'
 import path from 'path'
 import fs from 'fs/promises'
+import { getDistDir } from 'next-test-utils'
 
 describe('mcp-server get_server_action_by_id tool', () => {
   const { next } = nextTestSetup({
@@ -16,7 +17,7 @@ describe('mcp-server get_server_action_by_id tool', () => {
     // Read the manifest to get a valid action ID
     const manifestPath = path.join(
       next.testDir,
-      '.next',
+      getDistDir(),
       'server',
       'server-reference-manifest.json'
     )
@@ -114,7 +115,7 @@ describe('mcp-server get_server_action_by_id tool', () => {
     // Read the manifest to get inline action ID
     const manifestPath = path.join(
       next.testDir,
-      '.next',
+      getDistDir(),
       'server',
       'server-reference-manifest.json'
     )"
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/development/middleware-errors/index.test.ts,2,2,4,"@@ -1,4 +1,4 @@
-import { assertNoRedbox, check, retry } from 'next-test-utils'
+import { assertNoRedbox, check, getDistDir, retry } from 'next-test-utils'
 import stripAnsi from 'strip-ansi'
 import { nextTestSetup } from 'e2e-utils'
 
@@ -303,7 +303,7 @@ describe('middleware - development errors', () => {
               '\n    at <unknown> (middleware.js:3)' +
               // TODO: Should be ignore-listed
               '\n    at eval (middleware.js:3:13)' +
-              '\n    at (middleware)/./middleware.js (.next/server/middleware.js:18:1)' +
+              `\n    at (middleware)/./middleware.js (${getDistDir()}/server/middleware.js:18:1)` +
               '\n    at __webpack_require__ '
       )
     })"
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/development/pages-dir/client-navigation/rendering.test.ts,6,4,10,"@@ -2,7 +2,7 @@
 
 import cheerio from 'cheerio'
 import { nextTestSetup } from 'e2e-utils'
-import { fetchViaHTTP, renderViaHTTP } from 'next-test-utils'
+import { fetchViaHTTP, getDistDir, renderViaHTTP } from 'next-test-utils'
 import webdriver from 'next-webdriver'
 import { BUILD_MANIFEST, REACT_LOADABLE_MANIFEST } from 'next/constants'
 import path from 'path'
@@ -333,11 +333,13 @@ describe('Client Navigation rendering', () => {
       // build dynamic page
       await fetch('/dynamic/ssr')
 
-      const buildManifest = await next.readJSON(`.next/${BUILD_MANIFEST}`)
+      const buildManifest = await next.readJSON(
+        `${getDistDir()}/${BUILD_MANIFEST}`
+      )
       const reactLoadableManifest = await next.readJSON(
         process.env.IS_TURBOPACK_TEST
-          ? `.next/server/pages/dynamic/ssr/${REACT_LOADABLE_MANIFEST}`
-          : `.next/${REACT_LOADABLE_MANIFEST}`
+          ? `${getDistDir()}/server/pages/dynamic/ssr/${REACT_LOADABLE_MANIFEST}`
+          : `${getDistDir()}/${REACT_LOADABLE_MANIFEST}`
       )
       const resources = []
 "
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/e2e/app-dir/actions/app-action.test.ts,6,5,11,"@@ -6,6 +6,7 @@ import {
   check,
   waitFor,
   getRedboxSource,
+  getDistDir,
 } from 'next-test-utils'
 import type { Request, Response } from 'playwright'
 import fs from 'node:fs/promises'
@@ -32,7 +33,7 @@ describe('app-dir action handling', () => {
   if (isNextStart) {
     it('should output exportName and filename info in manifest', async () => {
       const referenceManifest = await next.readJSON(
-        '.next/server/server-reference-manifest.json'
+        `${getDistDir()}/server/server-reference-manifest.json`
       )
       let foundExportNames = []
 
@@ -935,7 +936,7 @@ describe('app-dir action handling', () => {
     it('should not expose action content in sourcemaps', async () => {
       // We check all sourcemaps in the `static` folder for sensitive information given that chunking
       const sourcemaps = await fs
-        .readdir(join(next.testDir, '.next', 'static'), {
+        .readdir(join(next.testDir, getDistDir(), 'static'), {
           recursive: true,
           encoding: 'utf8',
         })
@@ -944,7 +945,7 @@ describe('app-dir action handling', () => {
             files
               .filter((f) => f.endsWith('.js.map'))
               .map((f) =>
-                fs.readFile(join(next.testDir, '.next', 'static', f), {
+                fs.readFile(join(next.testDir, getDistDir(), 'static', f), {
                   encoding: 'utf8',
                 })
               )
@@ -1022,14 +1023,14 @@ describe('app-dir action handling', () => {
     it('should bundle external libraries if they are on the action layer', async () => {
       await next.fetch('/client')
       const pageBundle = await fs.readFile(
-        join(next.testDir, '.next', 'server', 'app', 'client', 'page.js'),
+        join(next.testDir, getDistDir(), 'server', 'app', 'client', 'page.js'),
         { encoding: 'utf8' }
       )
       if (isTurbopack) {
         const chunkPaths = pageBundle.matchAll(/R\.c\(""([^""]*)""\)/g)
         const reads = [...chunkPaths].map(async (match) => {
           const bundle = await fs.readFile(
-            join(next.testDir, '.next', ...match[1].split(/[\\/]/g)),
+            join(next.testDir, getDistDir(), ...match[1].split(/[\\/]/g)),
             { encoding: 'utf8' }
           )
           return bundle.includes('node_modules/nanoid/index.js')"
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/e2e/app-dir/app-external/app-external.test.ts,2,2,4,"@@ -1,5 +1,5 @@
 import { nextTestSetup } from 'e2e-utils'
-import { assertNoRedbox, check, retry } from 'next-test-utils'
+import { assertNoRedbox, check, getDistDir, retry } from 'next-test-utils'
 
 async function resolveStreamResponse(response: any, onData?: any) {
   let result = ''
@@ -274,7 +274,7 @@ describe('app dir - external dependency', () => {
     expect(html).toContain('resolve response')
 
     const outputFile = await next.readFile(
-      '.next/server/app/cjs/server/page.js'
+      `${getDistDir()}/server/app/cjs/server/page.js`
     )
     expect(outputFile).not.toContain('image-response')
   })"
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/e2e/app-dir/metadata-dynamic-routes/index.test.ts,3,3,6,"@@ -1,6 +1,6 @@
 import { nextTestSetup } from 'e2e-utils'
 import imageSize from 'image-size'
-import { check } from 'next-test-utils'
+import { check, getDistDir } from 'next-test-utils'
 
 const CACHE_HEADERS = {
   NONE: 'no-cache, no-store',
@@ -228,12 +228,12 @@ describe('app dir - metadata dynamic routes', () => {
 
       if (isNextDev) {
         await check(async () => {
-          next.hasFile('.next/server/app-paths-manifest.json')
+          next.hasFile(`${getDistDir()}/server/app-paths-manifest.json`)
           return 'success'
         }, /success/)
 
         const appPathsManifest = JSON.parse(
-          await next.readFile('.next/server/app-paths-manifest.json')
+          await next.readFile(`${getDistDir()}/server/app-paths-manifest.json`)
         )
         const entryKeys = Object.keys(appPathsManifest)
         // Only has one route for twitter-image with catch-all routes in dev"
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/e2e/app-dir/rsc-basic/rsc-basic.test.ts,6,4,10,"@@ -1,5 +1,5 @@
 import path from 'path'
-import { check } from 'next-test-utils'
+import { check, getDistDir } from 'next-test-utils'
 import { nextTestSetup } from 'e2e-utils'
 import cheerio from 'cheerio'
 import {
@@ -42,7 +42,7 @@ describe('app dir - rsc basics', () => {
         const clientReferenceManifest = JSON.parse(
           (
             await next.readFile(
-              '.next/server/app/page_client-reference-manifest.js'
+              `${getDistDir()}/server/app/page_client-reference-manifest.js`
             )
           ).match(/]=(.+)$/)[1]
         )
@@ -632,13 +632,15 @@ describe('app dir - rsc basics', () => {
   if (isNextStart) {
     it('should generate edge SSR manifests for Node.js', async () => {
       const requiredServerFiles = JSON.parse(
-        await next.readFile('.next/required-server-files.json')
+        await next.readFile(`${getDistDir()}/required-server-files.json`)
       ).files
 
       const files = ['middleware-build-manifest.js', 'middleware-manifest.json']
 
       let promises = files.map(async (file) => {
-        expect(await next.hasFile(path.join('.next/server', file))).toBe(true)
+        expect(
+          await next.hasFile(path.join(`${getDistDir()}/server`, file))
+        ).toBe(true)
       })
       await Promise.all(promises)
 "
vercel/next.js,c388db43dc580c22d8a42b6092b48717e1ad1d81,Jiwon Choi,2025-10-06T22:44:08Z,"CI: Enable `experimental.isolatedDevBuild` for `test-dev` (#84562)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-dev instead of test-experimental-dev because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

The flag was enabled for `test-experimental-dev` at
https://github.com/vercel/next.js/pull/84099, and this PR moves the flag
to the `test-dev` job.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev (here)
3. test-prod
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/e2e/app-dir/typed-routes-validator/typed-routes-validator.test.ts,2,1,3,"@@ -1,4 +1,5 @@
 import { nextTestSetup } from 'e2e-utils'
+import { getDistDir } from 'next-test-utils'
 
 describe('typed-routes-validator', () => {
   const { next, isNextStart, skipped } = nextTestSetup({
@@ -11,7 +12,7 @@ describe('typed-routes-validator', () => {
   }
 
   it('should generate route validation correctly', async () => {
-    const dts = await next.readFile('.next/types/validator.ts')
+    const dts = await next.readFile(`${getDistDir()}/types/validator.ts`)
     // sanity check that dev generation is working
     expect(dts).toContain('const handler = {} as typeof import(')
   })"
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,lerna.json,1,1,2,"@@ -16,5 +16,5 @@
       ""registry"": ""https://registry.npmjs.org/""
     }
   },
-  ""version"": ""15.6.0-canary.45""
+  ""version"": ""15.6.0-canary.46""
 }"
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/create-next-app/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""create-next-app"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/eslint-config-next/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""eslint-config-next"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""description"": ""ESLint configuration used by Next.js."",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
@@ -10,7 +10,7 @@
   },
   ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"",
   ""dependencies"": {
-    ""@next/eslint-plugin-next"": ""15.6.0-canary.45"",
+    ""@next/eslint-plugin-next"": ""15.6.0-canary.46"",
     ""@rushstack/eslint-patch"": ""^1.10.3"",
     ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"",
     ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/eslint-plugin-internal/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/eslint-plugin-internal"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""description"": ""ESLint plugin for working on Next.js."",
   ""exports"": {
     ""."": ""./src/eslint-plugin-internal.js"""
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/eslint-plugin-next/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/eslint-plugin-next"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""description"": ""ESLint plugin for Next.js."",
   ""main"": ""dist/index.js"",
   ""types"": ""dist/index.d.ts"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/font/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/font"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/font"""
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next-bundle-analyzer/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/bundle-analyzer"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""main"": ""index.js"",
   ""types"": ""index.d.ts"",
   ""license"": ""MIT"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next-codemod/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/codemod"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""license"": ""MIT"",
   ""repository"": {
     ""type"": ""git"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next-env/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/env"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next-mdx/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/mdx"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
   ""repository"": {"
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next-plugin-storybook/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/plugin-storybook"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-plugin-storybook"""
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next-polyfill-module/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-module"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+, Firefox 60+, Chrome 61+, Safari 10.1+)"",
   ""main"": ""dist/polyfill-module.js"",
   ""license"": ""MIT"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next-polyfill-nomodule/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-nomodule"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""description"": ""A polyfill for non-dead, nomodule browsers."",
   ""main"": ""dist/polyfill-nomodule.js"",
   ""license"": ""MIT"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next-rspack/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next-rspack"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-rspack"""
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next-swc/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/swc"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""private"": true,
   ""files"": [
     ""native/"""
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/next/package.json,7,7,14,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""description"": ""The React Framework"",
   ""main"": ""./dist/server/next.js"",
   ""license"": ""MIT"",
@@ -100,7 +100,7 @@
     ]
   },
   ""dependencies"": {
-    ""@next/env"": ""15.6.0-canary.45"",
+    ""@next/env"": ""15.6.0-canary.46"",
     ""@swc/helpers"": ""0.5.15"",
     ""caniuse-lite"": ""^1.0.30001579"",
     ""postcss"": ""8.4.31"",
@@ -164,11 +164,11 @@
     ""@modelcontextprotocol/sdk"": ""1.18.1"",
     ""@mswjs/interceptors"": ""0.23.0"",
     ""@napi-rs/triples"": ""1.2.0"",
-    ""@next/font"": ""15.6.0-canary.45"",
-    ""@next/polyfill-module"": ""15.6.0-canary.45"",
-    ""@next/polyfill-nomodule"": ""15.6.0-canary.45"",
-    ""@next/react-refresh-utils"": ""15.6.0-canary.45"",
-    ""@next/swc"": ""15.6.0-canary.45"",
+    ""@next/font"": ""15.6.0-canary.46"",
+    ""@next/polyfill-module"": ""15.6.0-canary.46"",
+    ""@next/polyfill-nomodule"": ""15.6.0-canary.46"",
+    ""@next/react-refresh-utils"": ""15.6.0-canary.46"",
+    ""@next/swc"": ""15.6.0-canary.46"",
     ""@opentelemetry/api"": ""1.6.0"",
     ""@playwright/test"": ""1.51.1"",
     ""@rspack/core"": ""1.5.0"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/react-refresh-utils/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/react-refresh-utils"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""description"": ""An experimental package providing utilities for React Refresh."",
   ""repository"": {
     ""url"": ""vercel/next.js"","
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,packages/third-parties/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/third-parties"",
-  ""version"": ""15.6.0-canary.45"",
+  ""version"": ""15.6.0-canary.46"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/third-parties""
@@ -26,7 +26,7 @@
     ""third-party-capital"": ""1.0.20""
   },
   ""devDependencies"": {
-    ""next"": ""15.6.0-canary.45"",
+    ""next"": ""15.6.0-canary.46"",
     ""outdent"": ""0.8.0"",
     ""prettier"": ""2.5.1"",
     ""typescript"": ""5.9.2"""
vercel/next.js,8acd54a8c807671b016ad9e02f108739c6563a43,nextjs-bot,2025-10-06T22:41:21Z,v15.6.0-canary.46,pnpm-lock.yaml,8,8,16,"@@ -899,7 +899,7 @@ importers:
   packages/eslint-config-next:
     dependencies:
       '@next/eslint-plugin-next':
-        specifier: 15.6.0-canary.45
+        specifier: 15.6.0-canary.46
         version: link:../eslint-plugin-next
       '@rushstack/eslint-patch':
         specifier: ^1.10.3
@@ -972,7 +972,7 @@ importers:
   packages/next:
     dependencies:
       '@next/env':
-        specifier: 15.6.0-canary.45
+        specifier: 15.6.0-canary.46
         version: link:../next-env
       '@swc/helpers':
         specifier: 0.5.15
@@ -1097,19 +1097,19 @@ importers:
         specifier: 1.2.0
         version: 1.2.0
       '@next/font':
-        specifier: 15.6.0-canary.45
+        specifier: 15.6.0-canary.46
         version: link:../font
       '@next/polyfill-module':
-        specifier: 15.6.0-canary.45
+        specifier: 15.6.0-canary.46
         version: link:../next-polyfill-module
       '@next/polyfill-nomodule':
-        specifier: 15.6.0-canary.45
+        specifier: 15.6.0-canary.46
         version: link:../next-polyfill-nomodule
       '@next/react-refresh-utils':
-        specifier: 15.6.0-canary.45
+        specifier: 15.6.0-canary.46
         version: link:../react-refresh-utils
       '@next/swc':
-        specifier: 15.6.0-canary.45
+        specifier: 15.6.0-canary.46
         version: link:../next-swc
       '@opentelemetry/api':
         specifier: 1.6.0
@@ -1800,7 +1800,7 @@ importers:
         version: 1.0.20
     devDependencies:
       next:
-        specifier: 15.6.0-canary.45
+        specifier: 15.6.0-canary.46
         version: link:../next
       outdent:
         specifier: 0.8.0"
vercel/next.js,88cb596ab5c299c35180246aa17eafaadbf8d7c1,Vercel Release Bot,2025-10-06T21:59:45Z,"Update Rspack production test manifest (#84549)

This auto-generated PR updates the production integration test manifest used when testing Rspack.",test/rspack-build-tests-manifest.json,12,21,33,"@@ -4662,15 +4662,6 @@
     ""flakey"": [],
     ""runtimeError"": false
   },
-  ""test/e2e/app-dir/no-double-tailwind-execution/no-double-tailwind-execution.test.ts"": {
-    ""passed"": [
-      ""no-double-tailwind-execution should run tailwind only once initially and per change""
-    ],
-    ""failed"": [],
-    ""pending"": [],
-    ""flakey"": [],
-    ""runtimeError"": false
-  },
   ""test/e2e/app-dir/no-duplicate-headers-middleware/no-duplicate-headers-middleware.test.ts"": {
     ""passed"": [
       ""no-duplicate-headers-next-config should prioritise headers in middleware for static assets""
@@ -11496,37 +11487,36 @@
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/app-api.test.ts"": {
-    ""passed"": [],
-    ""failed"": [
+    ""passed"": [
       ""create-next-app --api (Headless App) should create JavaScript project with --js flag"",
       ""create-next-app --api (Headless App) should create TypeScript project with --ts flag"",
       ""create-next-app --api (Headless App) should create project inside \""src\"" directory with --src-dir flag""
     ],
+    ""failed"": [],
     ""pending"": [
       ""create-next-app --api (Headless App) should enable turbopack dev with --turbopack flag""
     ],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/app.test.ts"": {
-    ""passed"": [],
-    ""failed"": [
+    ""passed"": [
       ""create-next-app --app (App Router) should create JavaScript project with --js flag"",
       ""create-next-app --app (App Router) should create TailwindCSS project with --tailwind flag"",
       ""create-next-app --app (App Router) should create TypeScript project with --ts flag"",
       ""create-next-app --app (App Router) should create an empty TailwindCSS project with --empty flag"",
       ""create-next-app --app (App Router) should create an empty project with --empty flag"",
       ""create-next-app --app (App Router) should create project inside \""src\"" directory with --src-dir flag""
     ],
+    ""failed"": [],
     ""pending"": [
       ""create-next-app --app (App Router) should enable turbopack dev with --turbopack flag""
     ],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/matrix.test.ts"": {
-    ""passed"": [],
-    ""failed"": [
+    ""passed"": [
       ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
       ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --tailwind"",
       ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --src-dir --react-compiler --no-tailwind"",
@@ -11576,20 +11566,21 @@
       ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --no-tailwind"",
       ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --tailwind""
     ],
+    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/pages.test.ts"": {
-    ""passed"": [],
-    ""failed"": [
+    ""passed"": [
       ""create-next-app --no-app (Pages Router) should create JavaScript project with --js flag"",
       ""create-next-app --no-app (Pages Router) should create TailwindCSS project with --tailwind flag"",
       ""create-next-app --no-app (Pages Router) should create TypeScript project with --ts flag"",
       ""create-next-app --no-app (Pages Router) should create an empty TailwindCSS project with --empty flag"",
       ""create-next-app --no-app (Pages Router) should create an empty project with --empty flag"",
       ""create-next-app --no-app (Pages Router) should create project inside \""src\"" directory with --src-dir flag""
     ],
+    ""failed"": [],
     ""pending"": [
       ""create-next-app --no-app (Pages Router) should enable turbopack dev with --turbopack flag""
     ],
@@ -18201,13 +18192,12 @@
   },
   ""test/integration/ondemand/test/index.test.js"": {
     ""passed"": [
-      ""On Demand Entries should compile pages for JSON page requests"",
       ""On Demand Entries should compile pages for SSR"",
       ""On Demand Entries should dispose inactive pages"",
       ""On Demand Entries should navigate to pages with dynamic imports"",
       ""On Demand Entries should pass""
     ],
-    ""failed"": [],
+    ""failed"": [""On Demand Entries should compile pages for JSON page requests""],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
@@ -19023,7 +19013,6 @@
   ""test/integration/script-loader/test/index.test.ts"": {
     ""passed"": [
       ""Next.js Script - Primary Strategies - Production Mode production mode Does not duplicate inline scripts"",
-      ""Next.js Script - Primary Strategies - Production Mode production mode Error message is shown if Partytown is not installed locally"",
       ""Next.js Script - Primary Strategies - Production Mode production mode onReady fires after load event and then on every subsequent re-mount"",
       ""Next.js Script - Primary Strategies - Production Mode production mode onReady should only fires once after loaded (issue #39993)"",
       ""Next.js Script - Primary Strategies - Production Mode production mode onload fires correctly"",
@@ -19046,7 +19035,9 @@
       ""Next.js Script - Primary Strategies - Strict Mode priority beforeInteractive with inline script should execute"",
       ""Next.js Script - Primary Strategies - Strict Mode priority lazyOnload""
     ],
-    ""failed"": [],
+    ""failed"": [
+      ""Next.js Script - Primary Strategies - Production Mode production mode Error message is shown if Partytown is not installed locally""
+    ],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false"
vercel/next.js,751b11dcab8f104511bba634f89579548501d28d,Luke Sandberg,2025-10-06T21:17:52Z,"Add a webpack flag to create next app.  Ensure that if you set it or decline turbopack we set the --webpack flag on the generated project (#84476)

Add a --webpack flag to create-next-app to allow selecting the webpack bundler.

Add the --webpack flag to the `next` command lines if it is set or if the turbopack prompt is declined.

This is necessary now that we have flipped the default.",packages/create-next-app/create-app.ts,4,7,11,"@@ -19,7 +19,7 @@ import { getOnline } from './helpers/is-online'
 import { isWriteable } from './helpers/is-writeable'
 import { runTypegen } from './helpers/typegen'
 
-import type { TemplateMode, TemplateType } from './templates'
+import type { Bundler, TemplateMode, TemplateType } from './templates'
 import { getTemplateFile, installTemplate } from './templates'
 
 export class DownloadError extends Error {}
@@ -39,8 +39,7 @@ export async function createApp({
   skipInstall,
   empty,
   api,
-  turbopack,
-  rspack,
+  bundler,
   disableGit,
   reactCompiler,
 }: {
@@ -58,8 +57,7 @@ export async function createApp({
   skipInstall: boolean
   empty: boolean
   api?: boolean
-  turbopack: boolean
-  rspack: boolean
+  bundler: Bundler
   disableGit?: boolean
   reactCompiler: boolean
 }): Promise<void> {
@@ -252,8 +250,7 @@ export async function createApp({
       srcDir,
       importAlias,
       skipInstall,
-      turbopack,
-      rspack,
+      bundler,
       reactCompiler,
     })
   }"
vercel/next.js,751b11dcab8f104511bba634f89579548501d28d,Luke Sandberg,2025-10-06T21:17:52Z,"Add a webpack flag to create next app.  Ensure that if you set it or decline turbopack we set the --webpack flag on the generated project (#84476)

Add a --webpack flag to create-next-app to allow selecting the webpack bundler.

Add the --webpack flag to the `next` command lines if it is set or if the turbopack prompt is declined.

This is necessary now that we have flipped the default.",packages/create-next-app/index.ts,23,8,31,"@@ -15,6 +15,7 @@ import { getPkgManager } from './helpers/get-pkg-manager'
 import { isFolderEmpty } from './helpers/is-folder-empty'
 import { validateNpmName } from './helpers/validate-pkg'
 import packageJson from './package.json'
+import { Bundler } from './templates'
 
 let projectPath: string = ''
 
@@ -54,8 +55,9 @@ const program = new Command(packageJson.name)
   .option('--biome', 'Initialize with Biome config.')
   .option('--app', 'Initialize as an App Router project.')
   .option('--src-dir', ""Initialize inside a 'src/' directory."")
-  .option('--turbopack', 'Enable Turbopack by default for development.')
-  .option('--rspack', 'Using Rspack as the bundler')
+  .option('--turbopack', 'Enable Turbopack as the bundler.')
+  .option('--webpack', 'Enable Webpack as the bundler.')
+  .option('--rspack', 'Enable Rspack as the bundler')
   .option(
     '--import-alias <prefix/*>',
     'Specify import alias to use (default ""@/*"").'
@@ -276,7 +278,7 @@ async function run(): Promise<void> {
          * Depending on the prompt response, set the appropriate program flags.
          */
         opts.typescript = Boolean(typescript)
-        opts.javascript = !Boolean(typescript)
+        opts.javascript = !typescript
         preferences.typescript = Boolean(typescript)
       }
     }
@@ -429,7 +431,12 @@ async function run(): Promise<void> {
       }
     }
 
-    if (!opts.turbopack && !args.includes('--no-turbopack')) {
+    if (
+      !opts.turbopack &&
+      !args.includes('--no-turbopack') &&
+      !opts.webpack &&
+      !opts.rspack
+    ) {
       if (skipPrompt) {
         opts.turbopack = getPrefOrDefault('turbopack')
       } else {
@@ -446,6 +453,8 @@ async function run(): Promise<void> {
         opts.turbopack = Boolean(turbopack)
         preferences.turbopack = Boolean(turbopack)
       }
+      // If Turbopack is not selected, default to Webpack
+      opts.webpack = !opts.turbopack
     }
 
     const importAliasPattern = /^[^*""]+\/\*\s*$/
@@ -493,6 +502,14 @@ async function run(): Promise<void> {
     }
   }
 
+  const bundler: Bundler = opts.turbopack
+    ? Bundler.Turbopack
+    : opts.webpack
+      ? Bundler.Webpack
+      : opts.rspack
+        ? Bundler.Rspack
+        : Bundler.Turbopack
+
   try {
     await createApp({
       appPath,
@@ -509,8 +526,7 @@ async function run(): Promise<void> {
       skipInstall: opts.skipInstall,
       empty: opts.empty,
       api: opts.api,
-      turbopack: opts.turbopack,
-      rspack: opts.rspack,
+      bundler,
       disableGit: opts.disableGit,
       reactCompiler: opts.reactCompiler,
     })
@@ -544,8 +560,7 @@ async function run(): Promise<void> {
       importAlias: opts.importAlias,
       skipInstall: opts.skipInstall,
       empty: opts.empty,
-      turbopack: opts.turbopack,
-      rspack: opts.rspack,
+      bundler,
       disableGit: opts.disableGit,
       reactCompiler: opts.reactCompiler,
     })"
vercel/next.js,751b11dcab8f104511bba634f89579548501d28d,Luke Sandberg,2025-10-06T21:17:52Z,"Add a webpack flag to create next app.  Ensure that if you set it or decline turbopack we set the --webpack flag on the generated project (#84476)

Add a --webpack flag to create-next-app to allow selecting the webpack bundler.

Add the --webpack flag to the `next` command lines if it is set or if the turbopack prompt is declined.

This is necessary now that we have flipped the default.",packages/create-next-app/templates/index.ts,7,7,14,"@@ -10,7 +10,7 @@ import { cyan, bold } from ""picocolors"";
 import { Sema } from ""async-sema"";
 import pkg from ""../package.json"";
 
-import { GetTemplateFileArgs, InstallTemplateArgs } from ""./types"";
+import { Bundler, GetTemplateFileArgs, InstallTemplateArgs } from ""./types"";
 
 // Do not rename or format. sync-react script relies on this line.
 // prettier-ignore
@@ -45,8 +45,7 @@ export const installTemplate = async ({
   srcDir,
   importAlias,
   skipInstall,
-  turbopack,
-  rspack,
+  bundler,
   reactCompiler,
 }: InstallTemplateArgs) => {
   console.log(bold(`Using ${packageManager}.`));
@@ -82,7 +81,7 @@ export const installTemplate = async ({
     },
   });
 
-  if (rspack) {
+  if (bundler === Bundler.Rspack) {
     const nextConfigFile = path.join(
       root,
       mode === ""js"" ? ""next.config.mjs"" : ""next.config.ts"",
@@ -207,15 +206,16 @@ export const installTemplate = async ({
 
   /** Copy the version from package.json or override for tests. */
   const version = process.env.NEXT_PRIVATE_TEST_VERSION ?? pkg.version;
+  const bundlerFlags = `${bundler === Bundler.Turbopack ? "" --turbopack"" : """"}${bundler === Bundler.Webpack ? "" --webpack"" : """"}`;
 
   /** Create a package.json for the new project and write it to disk. */
   const packageJson: any = {
     name: appName,
     version: ""0.1.0"",
     private: true,
     scripts: {
-      dev: `next dev${turbopack ? "" --turbopack"" : """"}`,
-      build: `next build${turbopack ? "" --turbopack"" : """"}`,
+      dev: `next dev${bundlerFlags}`,
+      build: `next build${bundlerFlags}`,
       start: ""next start"",
       ...(eslint && { lint: ""eslint"" }),
       ...(biome && { lint: ""biome check"", format: ""biome format --write"" }),
@@ -231,7 +231,7 @@ export const installTemplate = async ({
     devDependencies: {},
   };
 
-  if (rspack) {
+  if (bundler === Bundler.Rspack) {
     const NEXT_PRIVATE_TEST_VERSION = process.env.NEXT_PRIVATE_TEST_VERSION;
     if (
       NEXT_PRIVATE_TEST_VERSION &&"
vercel/next.js,751b11dcab8f104511bba634f89579548501d28d,Luke Sandberg,2025-10-06T21:17:52Z,"Add a webpack flag to create next app.  Ensure that if you set it or decline turbopack we set the --webpack flag on the generated project (#84476)

Add a --webpack flag to create-next-app to allow selecting the webpack bundler.

Add the --webpack flag to the `next` command lines if it is set or if the turbopack prompt is declined.

This is necessary now that we have flipped the default.",packages/create-next-app/templates/types.ts,7,2,9,"@@ -31,7 +31,12 @@ export interface InstallTemplateArgs {
   srcDir: boolean;
   importAlias: string;
   skipInstall: boolean;
-  turbopack: boolean;
-  rspack: boolean;
+  bundler: Bundler;
   reactCompiler: boolean;
 }
+
+export enum Bundler {
+  Turbopack = ""turbopack"",
+  Webpack = ""webpack"",
+  Rspack = ""rspack"",
+}"
vercel/next.js,09d4d8a0e843ab71e9dbd66382ac5a132854fcd0,Vercel Release Bot,2025-10-06T20:14:07Z,"Update Rspack development test manifest (#84548)

This auto-generated PR updates the development integration test manifest used when testing Rspack.",test/rspack-dev-tests-manifest.json,14,24,38,"@@ -1182,10 +1182,10 @@
     ""runtimeError"": false
   },
   ""test/development/basic/barrel-optimization/barrel-optimization-mui.test.ts"": {
-    ""passed"": [],
-    ""failed"": [
+    ""passed"": [
       ""Skipped in Turbopack optimizePackageImports - mui should support MUI""
     ],
+    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
@@ -1350,7 +1350,6 @@
   ""test/development/basic/hmr/error-recovery-yes-base-path-no-asset-prefix.test.ts"": {
     ""passed"": [
       ""HMR - Error Recovery, nextConfig: {\""basePath\"":\""/docs\"",\""assetPrefix\"":\""\""} should detect runtime errors on the module scope"",
-      ""HMR - Error Recovery, nextConfig: {\""basePath\"":\""/docs\"",\""assetPrefix\"":\""\""} should detect syntax errors and recover"",
       ""HMR - Error Recovery, nextConfig: {\""basePath\"":\""/docs\"",\""assetPrefix\"":\""\""} should have client HMR events in trace file"",
       ""HMR - Error Recovery, nextConfig: {\""basePath\"":\""/docs\"",\""assetPrefix\"":\""\""} should recover after a bad return from the render function"",
       ""HMR - Error Recovery, nextConfig: {\""basePath\"":\""/docs\"",\""assetPrefix\"":\""\""} should recover after an error reported via SSR"",
@@ -1365,6 +1364,7 @@
       ""HMR - Error Recovery, nextConfig: {\""basePath\"":\""/docs\"",\""assetPrefix\"":\""\""} should show the error on all pages""
     ],
     ""failed"": [
+      ""HMR - Error Recovery, nextConfig: {\""basePath\"":\""/docs\"",\""assetPrefix\"":\""\""} should detect syntax errors and recover"",
       ""HMR - Error Recovery, nextConfig: {\""basePath\"":\""/docs\"",\""assetPrefix\"":\""\""} should not continously poll a custom error page""
     ],
     ""pending"": [],
@@ -3711,7 +3711,7 @@
       ""app dir - basic searchParams prop server component should have the correct search params"",
       ""app dir - basic searchParams prop server component should have the correct search params on middleware rewrite"",
       ""app dir - basic searchParams prop server component should have the correct search params on rewrite"",
-      ""app dir - basic server components Loading should render loading.js in browser for slow layout"",
+      ""app dir - basic server components Loading should render loading.js in browser for slow layout and page"",
       ""app dir - basic server components Loading should render loading.js in browser for slow page"",
       ""app dir - basic server components Loading should render loading.js in initial html for slow layout"",
       ""app dir - basic server components Loading should render loading.js in initial html for slow layout and page"",
@@ -3770,7 +3770,7 @@
     ],
     ""failed"": [
       ""app dir - basic <Link /> should navigate to pages dynamic route from pages page if it overlaps with an app page"",
-      ""app dir - basic server components Loading should render loading.js in browser for slow layout and page""
+      ""app dir - basic server components Loading should render loading.js in browser for slow layout""
     ],
     ""pending"": [
       ""app dir - basic HMR should HMR correctly when changing the component type"",
@@ -6876,15 +6876,6 @@
     ""flakey"": [],
     ""runtimeError"": false
   },
-  ""test/e2e/app-dir/no-double-tailwind-execution/no-double-tailwind-execution.test.ts"": {
-    ""passed"": [
-      ""no-double-tailwind-execution should run tailwind only once initially and per change""
-    ],
-    ""failed"": [],
-    ""pending"": [],
-    ""flakey"": [],
-    ""runtimeError"": false
-  },
   ""test/e2e/app-dir/no-duplicate-headers-middleware/no-duplicate-headers-middleware.test.ts"": {
     ""passed"": [
       ""no-duplicate-headers-next-config should prioritise headers in middleware for static assets""
@@ -13314,37 +13305,36 @@
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/app-api.test.ts"": {
-    ""passed"": [],
-    ""failed"": [
+    ""passed"": [
       ""create-next-app --api (Headless App) should create JavaScript project with --js flag"",
       ""create-next-app --api (Headless App) should create TypeScript project with --ts flag"",
       ""create-next-app --api (Headless App) should create project inside \""src\"" directory with --src-dir flag""
     ],
+    ""failed"": [],
     ""pending"": [
       ""create-next-app --api (Headless App) should enable turbopack dev with --turbopack flag""
     ],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/app.test.ts"": {
-    ""passed"": [],
-    ""failed"": [
+    ""passed"": [
       ""create-next-app --app (App Router) should create JavaScript project with --js flag"",
       ""create-next-app --app (App Router) should create TailwindCSS project with --tailwind flag"",
       ""create-next-app --app (App Router) should create TypeScript project with --ts flag"",
       ""create-next-app --app (App Router) should create an empty TailwindCSS project with --empty flag"",
       ""create-next-app --app (App Router) should create an empty project with --empty flag"",
       ""create-next-app --app (App Router) should create project inside \""src\"" directory with --src-dir flag""
     ],
+    ""failed"": [],
     ""pending"": [
       ""create-next-app --app (App Router) should enable turbopack dev with --turbopack flag""
     ],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/matrix.test.ts"": {
-    ""passed"": [],
-    ""failed"": [
+    ""passed"": [
       ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
       ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --tailwind"",
       ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --src-dir --react-compiler --no-tailwind"",
@@ -13394,20 +13384,21 @@
       ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --no-tailwind"",
       ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --tailwind""
     ],
+    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/pages.test.ts"": {
-    ""passed"": [],
-    ""failed"": [
+    ""passed"": [
       ""create-next-app --no-app (Pages Router) should create JavaScript project with --js flag"",
       ""create-next-app --no-app (Pages Router) should create TailwindCSS project with --tailwind flag"",
       ""create-next-app --no-app (Pages Router) should create TypeScript project with --ts flag"",
       ""create-next-app --no-app (Pages Router) should create an empty TailwindCSS project with --empty flag"",
       ""create-next-app --no-app (Pages Router) should create an empty project with --empty flag"",
       ""create-next-app --no-app (Pages Router) should create project inside \""src\"" directory with --src-dir flag""
     ],
+    ""failed"": [],
     ""pending"": [
       ""create-next-app --no-app (Pages Router) should enable turbopack dev with --turbopack flag""
     ],
@@ -20022,13 +20013,12 @@
   },
   ""test/integration/ondemand/test/index.test.js"": {
     ""passed"": [
-      ""On Demand Entries should compile pages for JSON page requests"",
       ""On Demand Entries should compile pages for SSR"",
       ""On Demand Entries should dispose inactive pages"",
       ""On Demand Entries should navigate to pages with dynamic imports"",
       ""On Demand Entries should pass""
     ],
-    ""failed"": [],
+    ""failed"": [""On Demand Entries should compile pages for JSON page requests""],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false"
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",crates/napi/src/next_api/project.rs,28,17,45,"@@ -69,7 +69,7 @@ use crate::{
         },
         utils::{
             DetachedVc, NapiDiagnostic, NapiIssue, RootTask, TurbopackResult, get_diagnostics,
-            get_issues, subscribe,
+            get_issues, strongly_consistent_catch_collectables, subscribe,
         },
     },
     util::DhatProfilerGuard,
@@ -847,7 +847,7 @@ impl NapiEntrypoints {
 
 #[turbo_tasks::value(serialization = ""none"")]
 struct EntrypointsWithIssues {
-    entrypoints: ReadRef<EntrypointsOperation>,
+    entrypoints: Option<ReadRef<EntrypointsOperation>>,
     issues: Arc<Vec<ReadRef<PlainIssue>>>,
     diagnostics: Arc<Vec<ReadRef<PlainDiagnostic>>>,
     effects: Arc<Effects>,
@@ -859,10 +859,8 @@ async fn get_entrypoints_with_issues_operation(
 ) -> Result<Vc<EntrypointsWithIssues>> {
     let entrypoints_operation =
         EntrypointsOperation::new(project_container_entrypoints_operation(container));
-    let entrypoints = entrypoints_operation.read_strongly_consistent().await?;
-    let issues = get_issues(entrypoints_operation).await?;
-    let diagnostics = get_diagnostics(entrypoints_operation).await?;
-    let effects = Arc::new(get_effects(entrypoints_operation).await?);
+    let (entrypoints, issues, diagnostics, effects) =
+        strongly_consistent_catch_collectables(entrypoints_operation).await?;
     Ok(EntrypointsWithIssues {
         entrypoints,
         issues,
@@ -883,7 +881,7 @@ fn project_container_entrypoints_operation(
 
 #[turbo_tasks::value(serialization = ""none"")]
 struct AllWrittenEntrypointsWithIssues {
-    entrypoints: Option<ReadRef<Entrypoints>>,
+    entrypoints: Option<ReadRef<EntrypointsOperation>>,
     issues: Arc<Vec<ReadRef<PlainIssue>>>,
     diagnostics: Arc<Vec<ReadRef<PlainDiagnostic>>>,
     effects: Arc<Effects>,
@@ -894,7 +892,7 @@ struct AllWrittenEntrypointsWithIssues {
 pub async fn project_write_all_entrypoints_to_disk(
     #[napi(ts_arg_type = ""{ __napiType: \""Project\"" }"")] project: External<ProjectInstance>,
     app_dir_only: bool,
-) -> napi::Result<TurbopackResult<NapiEntrypoints>> {
+) -> napi::Result<TurbopackResult<Option<NapiEntrypoints>>> {
     let ctx = &project.turbopack_ctx;
     let container = project.container;
     let tt = ctx.turbo_tasks();
@@ -905,7 +903,7 @@ pub async fn project_write_all_entrypoints_to_disk(
                 get_all_written_entrypoints_with_issues_operation(container, app_dir_only);
 
             // Read and compile the files
-            let EntrypointsWithIssues {
+            let AllWrittenEntrypointsWithIssues {
                 entrypoints,
                 issues,
                 diagnostics,
@@ -923,7 +921,14 @@ pub async fn project_write_all_entrypoints_to_disk(
         .await?;
 
     Ok(TurbopackResult {
-        result: NapiEntrypoints::from_entrypoints_op(&entrypoints, &project.turbopack_ctx)?,
+        result: if let Some(entrypoints) = entrypoints {
+            Some(NapiEntrypoints::from_entrypoints_op(
+                &entrypoints,
+                &project.turbopack_ctx,
+            )?)
+        } else {
+            None
+        },
         issues: issues.iter().map(|i| NapiIssue::from(&**i)).collect(),
         diagnostics: diags.iter().map(|d| NapiDiagnostic::from(d)).collect(),
     })
@@ -933,16 +938,14 @@ pub async fn project_write_all_entrypoints_to_disk(
 async fn get_all_written_entrypoints_with_issues_operation(
     container: ResolvedVc<ProjectContainer>,
     app_dir_only: bool,
-) -> Result<Vc<EntrypointsWithIssues>> {
+) -> Result<Vc<AllWrittenEntrypointsWithIssues>> {
     let entrypoints_operation = EntrypointsOperation::new(all_entrypoints_write_to_disk_operation(
         container,
         app_dir_only,
     ));
-    let entrypoints = entrypoints_operation.read_strongly_consistent().await?;
-    let issues = get_issues(entrypoints_operation).await?;
-    let diagnostics = get_diagnostics(entrypoints_operation).await?;
-    let effects = Arc::new(get_effects(entrypoints_operation).await?);
-    Ok(EntrypointsWithIssues {
+    let (entrypoints, issues, diagnostics, effects) =
+        strongly_consistent_catch_collectables(entrypoints_operation).await?;
+    Ok(AllWrittenEntrypointsWithIssues {
         entrypoints,
         issues,
         diagnostics,
@@ -1016,16 +1019,24 @@ pub fn project_entrypoints_subscribe(
                 } = &*entrypoints_with_issues_op
                     .read_strongly_consistent()
                     .await?;
+
                 effects.apply().await?;
                 Ok((entrypoints.clone(), issues.clone(), diagnostics.clone()))
             }
             .instrument(tracing::info_span!(""entrypoints subscription""))
         },
         move |ctx| {
             let (entrypoints, issues, diags) = ctx.value;
+            let result = match entrypoints {
+                Some(entrypoints) => Some(NapiEntrypoints::from_entrypoints_op(
+                    &entrypoints,
+                    &turbopack_ctx,
+                )?),
+                None => None,
+            };
 
             Ok(vec![TurbopackResult {
-                result: NapiEntrypoints::from_entrypoints_op(&entrypoints, &turbopack_ctx)?,
+                result,
                 issues: issues
                     .iter()
                     .map(|issue| NapiIssue::from(&**issue))"
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",crates/next-api/src/module_graph.rs,1,1,2,"@@ -490,7 +490,7 @@ impl Issue for CssGlobalImportIssue {
     }
 
     fn severity(&self) -> IssueSeverity {
-        IssueSeverity::Error
+        IssueSeverity::Fatal
     }
 
     #[turbo_tasks::function]"
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",crates/next-core/src/next_import_map.rs,68,2,70,"@@ -5,8 +5,9 @@ use either::Either;
 use rustc_hash::FxHashMap;
 use turbo_rcstr::{RcStr, rcstr};
 use turbo_tasks::{FxIndexMap, ResolvedVc, Vc, fxindexmap};
-use turbo_tasks_fs::{FileSystem, FileSystemPath};
+use turbo_tasks_fs::{FileSystem, FileSystemPath, to_sys_path};
 use turbopack_core::{
+    issue::{Issue, IssueExt, IssueSeverity, IssueStage, StyledString},
     reference_type::{CommonJsReferenceSubType, ReferenceType},
     resolve::{
         AliasPattern, ExternalTraced, ExternalType, ResolveAliasMap, SubpathValue,
@@ -1240,20 +1241,85 @@ pub async fn get_next_package(context_directory: FileSystemPath) -> Result<FileS
         .context(""Next.js package not found"")
 }
 
+#[turbo_tasks::value(shared)]
+struct MissingNextFolderIssue {
+    path: FileSystemPath,
+}
+
+#[turbo_tasks::value_impl]
+impl Issue for MissingNextFolderIssue {
+    #[turbo_tasks::function]
+    fn file_path(&self) -> Vc<FileSystemPath> {
+        self.path.clone().cell()
+    }
+
+    fn severity(&self) -> IssueSeverity {
+        IssueSeverity::Fatal
+    }
+
+    #[turbo_tasks::function]
+    fn stage(&self) -> Vc<IssueStage> {
+        IssueStage::Resolve.into()
+    }
+
+    #[turbo_tasks::function]
+    async fn title(&self) -> Result<Vc<StyledString>> {
+        let system_path = match to_sys_path(self.path.clone()).await? {
+            Some(path) => path.to_str().unwrap_or(""{unknown}"").to_string(),
+            _ => ""{unknown}"".to_string(),
+        };
+
+        Ok(StyledString::Stack(vec![
+            StyledString::Line(vec![
+                StyledString::Text(
+                    ""Error: Next.js inferred your workspace root, but it may not be correct."".into(),
+                ),
+            ]),
+            StyledString::Line(vec![
+                StyledString::Text(""We couldn't find the Next.js package ("".into()),
+                StyledString::Strong(""next/package.json"".into()),
+                StyledString::Text("") from the project directory: "".into()),
+                StyledString::Strong(system_path.into()),
+            ]),
+            StyledString::Line(vec![
+                StyledString::Text("" To fix this, set "".into()),
+                StyledString::Code(""turbopack.root"".into()),
+                StyledString::Text(
+                    "" in your Next.js config, or ensure the Next.js package is resolvable from this directory."".into(),
+                ),
+            ]),
+            StyledString::Line(vec![
+                StyledString::Text(""Note: For security and performance reasons, files outside of the project directory will not be compiled."".into()),
+            ]),
+            StyledString::Line(vec![
+                StyledString::Text(""See "".into()),
+                StyledString::Strong(""https://nextjs.org/docs/app/api-reference/config/next-config-js/turbopack#root-directory"".into()),
+                StyledString::Text("" for more information."".into())
+            ]),
+        ])
+            .cell())
+    }
+}
+
 #[turbo_tasks::function]
 pub async fn try_get_next_package(
     context_directory: FileSystemPath,
 ) -> Result<Vc<OptionFileSystemPath>> {
     let root = context_directory.root().owned().await?;
     let result = resolve(
-        context_directory,
+        context_directory.clone(),
         ReferenceType::CommonJs(CommonJsReferenceSubType::Undefined),
         Request::parse(Pattern::Constant(rcstr!(""next/package.json""))),
         node_cjs_resolve_options(root),
     );
     if let Some(source) = &*result.first_source().await? {
         Ok(Vc::cell(Some(source.ident().path().await?.parent())))
     } else {
+        MissingNextFolderIssue {
+            path: context_directory,
+        }
+        .resolved_cell()
+        .emit();
         Ok(Vc::cell(None))
     }
 }"
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",packages/next/errors.json,2,1,3,"@@ -850,5 +850,6 @@
   ""849"": ""Route %s with \\`dynamic = \""error\""\\` couldn't be rendered statically because it used \\`cookies()\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering"",
   ""850"": ""metadataBase is not a valid URL: %s"",
   ""851"": ""Pass either `webpack` or `turbopack`, not both."",
-  ""852"": ""Only custom servers can pass `webpack`, `turbo`, or `turbopack`.""
+  ""852"": ""Only custom servers can pass `webpack`, `turbo`, or `turbopack`."",
+  ""853"": ""Turbopack build failed""
 }"
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",packages/next/src/build/swc/index.ts,27,8,35,"@@ -658,24 +658,42 @@ function bindingToApi(
 
     async writeAllEntrypointsToDisk(
       appDirOnly: boolean
-    ): Promise<TurbopackResult<RawEntrypoints>> {
+    ): Promise<TurbopackResult<Partial<RawEntrypoints>>> {
       const napiEndpoints = (await binding.projectWriteAllEntrypointsToDisk(
         this._nativeProject,
         appDirOnly
-      )) as TurbopackResult<NapiEntrypoints>
+      )) as TurbopackResult<Partial<NapiEntrypoints>>
 
-      return napiEntrypointsToRawEntrypoints(napiEndpoints)
+      if ('routes' in napiEndpoints) {
+        return napiEntrypointsToRawEntrypoints(
+          napiEndpoints as TurbopackResult<NapiEntrypoints>
+        )
+      } else {
+        return {
+          issues: napiEndpoints.issues,
+          diagnostics: napiEndpoints.diagnostics,
+        }
+      }
     }
 
     entrypointsSubscribe() {
-      const subscription = subscribe<TurbopackResult<NapiEntrypoints>>(
+      const subscription = subscribe<TurbopackResult<NapiEntrypoints | {}>>(
         false,
         async (callback) =>
           binding.projectEntrypointsSubscribe(this._nativeProject, callback)
       )
       return (async function* () {
         for await (const entrypoints of subscription) {
-          yield napiEntrypointsToRawEntrypoints(entrypoints)
+          if ('routes' in (entrypoints as TurbopackResult<NapiEntrypoints>)) {
+            yield napiEntrypointsToRawEntrypoints(
+              entrypoints as TurbopackResult<NapiEntrypoints>
+            )
+          } else {
+            yield {
+              issues: entrypoints.issues,
+              diagnostics: entrypoints.diagnostics,
+            } as TurbopackResult<{}>
+          }
         }
       })()
     }
@@ -766,7 +784,7 @@ function bindingToApi(
       )) as TurbopackResult<WrittenEndpoint>
     }
 
-    async clientChanged(): Promise<AsyncIterableIterator<TurbopackResult<{}>>> {
+    async clientChanged(): Promise<AsyncIterableIterator<TurbopackResult>> {
       const clientSubscription = subscribe<TurbopackResult>(
         false,
         async (callback) =>
@@ -778,7 +796,7 @@ function bindingToApi(
 
     async serverChanged(
       includeIssues: boolean
-    ): Promise<AsyncIterableIterator<TurbopackResult<{}>>> {
+    ): Promise<AsyncIterableIterator<TurbopackResult>> {
       const serverSubscription = subscribe<TurbopackResult>(
         false,
         async (callback) =>
@@ -1023,12 +1041,13 @@ function bindingToApi(
             type: 'conflict',
           }
           break
-        default:
+        default: {
           const _exhaustiveCheck: never = routeType
           invariant(
             nativeRoute,
             () => `Unknown route type: ${_exhaustiveCheck}`
           )
+        }
       }
       routes.set(pathname, route)
     }"
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",packages/next/src/build/swc/types.ts,4,2,6,"@@ -225,9 +225,11 @@ export interface Project {
 
   writeAllEntrypointsToDisk(
     appDirOnly: boolean
-  ): Promise<TurbopackResult<RawEntrypoints>>
+  ): Promise<TurbopackResult<Partial<RawEntrypoints>>>
 
-  entrypointsSubscribe(): AsyncIterableIterator<TurbopackResult<RawEntrypoints>>
+  entrypointsSubscribe(): AsyncIterableIterator<
+    TurbopackResult<RawEntrypoints | {}>
+  >
 
   hmrEvents(identifier: string): AsyncIterableIterator<TurbopackResult<Update>>
 "
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",packages/next/src/build/turbopack-build/impl.ts,21,43,64,"@@ -1,15 +1,11 @@
 import path from 'path'
 import { validateTurboNextConfig } from '../../lib/turbopack-warning'
-import {
-  formatIssue,
-  isPersistentCachingEnabledForBuild,
-  isRelevantWarning,
-} from '../../shared/lib/turbopack/utils'
+import { isPersistentCachingEnabledForBuild } from '../../shared/lib/turbopack/utils'
 import { NextBuildContext } from '../build-context'
 import { createDefineEnv, loadBindings } from '../swc'
 import {
-  rawEntrypointsToEntrypoints,
   handleRouteType,
+  rawEntrypointsToEntrypoints,
 } from '../handle-entrypoints'
 import { TurbopackManifestLoader } from '../../shared/lib/turbopack/manifest-loader'
 import { promises as fs } from 'fs'
@@ -20,8 +16,9 @@ import { Telemetry } from '../../telemetry/storage'
 import { setGlobal } from '../../trace'
 import { isCI } from '../../server/ci-info'
 import { backgroundLogCompilationEvents } from '../../shared/lib/turbopack/compilation-events'
-import { getSupportedBrowsers } from '../utils'
+import { getSupportedBrowsers, printBuildErrors } from '../utils'
 import { normalizePath } from '../../lib/normalize-path'
+import type { RawEntrypoints, TurbopackResult } from '../swc/types'
 
 export async function turbopackBuild(): Promise<{
   duration: number
@@ -107,17 +104,22 @@ export async function turbopackBuild(): Promise<{
     )
 
     let appDirOnly = NextBuildContext.appDirOnly!
-    // eslint-disable-next-line @typescript-eslint/no-unused-vars
     const entrypoints = await project.writeAllEntrypointsToDisk(appDirOnly)
+    printBuildErrors(entrypoints, dev)
+
+    let routes = entrypoints.routes
+    if (!routes) {
+      // This should never ever happen, there should be an error issue, or the bindings call should
+      // have thrown.
+      throw new Error(`Turbopack build failed`)
+    }
 
-    const hasPagesEntries = Array.from(entrypoints.routes.values()).some(
-      (route) => {
-        if (route.type === 'page' || route.type === 'page-api') {
-          return true
-        }
-        return false
+    const hasPagesEntries = Array.from(routes.values()).some((route) => {
+      if (route.type === 'page' || route.type === 'page-api') {
+        return true
       }
-    )
+      return false
+    })
     // If there's no pages entries, then we are in app-dir-only mode
     if (!hasPagesEntries) {
       appDirOnly = true
@@ -129,35 +131,11 @@ export async function turbopackBuild(): Promise<{
       encryptionKey,
     })
 
-    const topLevelErrors = []
-    const topLevelWarnings = []
-    for (const issue of entrypoints.issues) {
-      if (issue.severity === 'error' || issue.severity === 'fatal') {
-        topLevelErrors.push(formatIssue(issue))
-      } else if (isRelevantWarning(issue)) {
-        topLevelWarnings.push(formatIssue(issue))
-      }
-    }
-
-    if (topLevelWarnings.length > 0) {
-      console.warn(
-        `Turbopack build encountered ${
-          topLevelWarnings.length
-        } warnings:\n${topLevelWarnings.join('\n')}`
-      )
-    }
-
-    if (topLevelErrors.length > 0) {
-      throw new Error(
-        `Turbopack build failed with ${
-          topLevelErrors.length
-        } errors:\n${topLevelErrors.join('\n')}`
-      )
-    }
-
-    const currentEntrypoints = await rawEntrypointsToEntrypoints(entrypoints)
+    const currentEntrypoints = await rawEntrypointsToEntrypoints(
+      entrypoints as TurbopackResult<RawEntrypoints>
+    )
 
-    const promises: Promise<any>[] = []
+    const promises: Promise<void>[] = []
 
     if (!appDirOnly) {
       for (const [page, route] of currentEntrypoints.page) {"
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",packages/next/src/build/utils.ts,80,13,93,"@@ -1,19 +1,28 @@
 import type { NextConfigComplete } from '../server/config-shared'
 import type { ExperimentalPPRConfig } from '../server/lib/experimental/ppr'
+import { checkIsRoutePPREnabled } from '../server/lib/experimental/ppr'
 import type { AssetBinding } from './webpack/loaders/get-module-build-info'
 import type { ServerRuntime } from '../types'
 import type { BuildManifest } from '../server/get-page-files'
 import type {
+  CustomRoutes,
+  Header,
   Redirect,
   Rewrite,
-  Header,
-  CustomRoutes,
 } from '../lib/load-custom-routes'
 import type {
   EdgeFunctionDefinition,
   MiddlewareManifest,
 } from './webpack/plugins/middleware-plugin'
 import type { WebpackLayerName } from '../lib/constants'
+import {
+  INSTRUMENTATION_HOOK_FILENAME,
+  MIDDLEWARE_FILENAME,
+  SERVER_PROPS_GET_INIT_PROPS_CONFLICT,
+  SERVER_PROPS_SSG_CONFLICT,
+  SSG_GET_INITIAL_PROPS_CONFLICT,
+  WEBPACK_LAYERS,
+} from '../lib/constants'
 import type {
   AppPageModule,
   AppPageRouteModule,
@@ -24,21 +33,13 @@ import '../server/require-hook'
 import '../server/node-polyfill-crypto'
 import '../server/node-environment'
 
-import { green, yellow, red, cyan, bold, underline } from '../lib/picocolors'
+import { bold, cyan, green, red, underline, yellow } from '../lib/picocolors'
 import textTable from 'next/dist/compiled/text-table'
 import path from 'path'
 import { promises as fs } from 'fs'
 import { isValidElementType } from 'next/dist/compiled/react-is'
 import stripAnsi from 'next/dist/compiled/strip-ansi'
 import browserslist from 'next/dist/compiled/browserslist'
-import {
-  SSG_GET_INITIAL_PROPS_CONFLICT,
-  SERVER_PROPS_GET_INIT_PROPS_CONFLICT,
-  SERVER_PROPS_SSG_CONFLICT,
-  MIDDLEWARE_FILENAME,
-  INSTRUMENTATION_HOOK_FILENAME,
-  WEBPACK_LAYERS,
-} from '../lib/constants'
 import {
   MODERN_BROWSERSLIST_TARGET,
   UNDERSCORE_GLOBAL_ERROR_ROUTE,
@@ -49,16 +50,15 @@ import { isDynamicRoute } from '../shared/lib/router/utils/is-dynamic'
 import { findPageFile } from '../server/lib/find-page-file'
 import { isEdgeRuntime } from '../lib/is-edge-runtime'
 import * as Log from './output/log'
-import { loadComponents } from '../server/load-components'
 import type { LoadComponentsReturnType } from '../server/load-components'
+import { loadComponents } from '../server/load-components'
 import { trace } from '../trace'
 import { setHttpClientAndAgentOptions } from '../server/setup-http-agent-env'
 import { Sema } from 'next/dist/compiled/async-sema'
 import { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'
 import { getRuntimeContext } from '../server/web/sandbox'
 import { RouteKind } from '../server/route-kind'
 import type { PageExtensions } from './page-extensions-type'
-import { checkIsRoutePPREnabled } from '../server/lib/experimental/ppr'
 import type { FallbackMode } from '../lib/fallback'
 import type { OutgoingHttpHeaders } from 'http'
 import type { AppSegmentConfig } from './segment-config/app/app-segment-config'
@@ -72,6 +72,8 @@ import type { PrerenderedRoute } from './static-paths/types'
 import type { CacheControl } from '../server/lib/cache-control'
 import { formatExpire, formatRevalidate } from './output/format'
 import type { AppRouteRouteModule } from '../server/route-modules/app-route/module'
+import { formatIssue, isRelevantWarning } from '../shared/lib/turbopack/utils'
+import type { TurbopackResult } from './swc/types'
 
 export type ROUTER_TYPE = 'pages' | 'app'
 
@@ -171,6 +173,71 @@ export function collectRoutesUsingEdgeRuntime(
   return routesUsingEdgeRuntime
 }
 
+/**
+ * Processes and categorizes build issues, then logs them as warnings, errors, or fatal errors.
+ * Stops execution if fatal issues are encountered.
+ *
+ * @param entrypoints - The result object containing build issues to process.
+ * @param isDev - A flag indicating if the build is running in development mode.
+ * @return This function does not return a value but logs or throws errors based on the issues.
+ * @throws {Error} If a fatal issue is encountered, this function throws an error. In development mode, we only throw on
+ *                 'fatal' and 'bug' issues. In production mode, we also throw on 'error' issues.
+ */
+export function printBuildErrors(
+  entrypoints: TurbopackResult,
+  isDev: boolean
+): void {
+  // Issues that we want to stop the server from executing
+  const topLevelFatalIssues = []
+  // Issues that are true errors, but we believe we can keep running and allow the user to address the issue
+  const topLevelErrors = []
+  // Issues that are warnings but should not affect the running of the build
+  const topLevelWarnings = []
+
+  for (const issue of entrypoints.issues) {
+    // We only want to completely shut down the server
+    if (issue.severity === 'fatal' || issue.severity === 'bug') {
+      topLevelFatalIssues.push(formatIssue(issue))
+    } else if (isRelevantWarning(issue)) {
+      topLevelWarnings.push(formatIssue(issue))
+    } else if (issue.severity === 'error') {
+      if (isDev) {
+        // We want to treat errors as recoverable in development
+        // so that we can show the errors in the site and allow users
+        // to respond to the errors when necessary. In production builds
+        // though we want to error out and stop the build process.
+        topLevelErrors.push(formatIssue(issue))
+      } else {
+        topLevelFatalIssues.push(formatIssue(issue))
+      }
+    }
+  }
+  // TODO: print in order by source location so issues from the same file are displayed together and then add a summary at the end about the number of warnings/errors
+  if (topLevelWarnings.length > 0) {
+    console.warn(
+      `Turbopack build encountered ${
+        topLevelWarnings.length
+      } warnings:\n${topLevelWarnings.join('\n')}`
+    )
+  }
+
+  if (topLevelErrors.length > 0) {
+    console.error(
+      `Turbopack build encountered ${
+        topLevelErrors.length
+      } errors:\n${topLevelErrors.join('\n')}`
+    )
+  }
+
+  if (topLevelFatalIssues.length > 0) {
+    throw new Error(
+      `Turbopack build failed with ${
+        topLevelFatalIssues.length
+      } errors:\n${topLevelFatalIssues.join('\n')}`
+    )
+  }
+}
+
 export async function printTreeView(
   lists: {
     pages: ReadonlyArray<string>"
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",packages/next/src/server/dev/hot-reloader-turbopack.ts,17,8,25,"@@ -96,7 +96,7 @@ import { devIndicatorServerState } from './dev-indicator-server-state'
 import { getDisableDevIndicatorMiddleware } from '../../next-devtools/server/dev-indicator-middleware'
 import { getRestartDevServerMiddleware } from '../../next-devtools/server/restart-dev-server-middleware'
 import { backgroundLogCompilationEvents } from '../../shared/lib/turbopack/compilation-events'
-import { getSupportedBrowsers } from '../../build/utils'
+import { getSupportedBrowsers, printBuildErrors } from '../../build/utils'
 import {
   receiveBrowserLogsTurbopack,
   handleClientFileLogs,
@@ -627,25 +627,34 @@ export async function createHotReloaderTurbopack(
         )
       }
 
+      // Always process issues/diagnostics, even if there are no entrypoints yet
+      processTopLevelIssues(currentTopLevelIssues, entrypoints)
+
+      // Certain crtical issues prevent any entrypoints from being constructed so return early
+      if (!('routes' in entrypoints)) {
+        printBuildErrors(entrypoints, true)
+
+        currentEntriesHandlingResolve!()
+        currentEntriesHandlingResolve = undefined
+        continue
+      }
+
+      const routes = entrypoints.routes
       const existingRoutes = [
         ...currentEntrypoints.app.keys(),
         ...currentEntrypoints.page.keys(),
       ]
-      const newRoutes = [...entrypoints.routes.keys()]
+      const newRoutes = [...routes.keys()]
 
       const addedRoutes = newRoutes.filter(
         (route) =>
           !currentEntrypoints.app.has(route) &&
           !currentEntrypoints.page.has(route)
       )
-      const removedRoutes = existingRoutes.filter(
-        (route) => !entrypoints.routes.has(route)
-      )
-
-      processTopLevelIssues(currentTopLevelIssues, entrypoints)
+      const removedRoutes = existingRoutes.filter((route) => !routes.has(route))
 
       await handleEntrypoints({
-        entrypoints,
+        entrypoints: entrypoints as any,
 
         currentEntrypoints,
 "
vercel/next.js,df6aed34f0726061bbac6971952df4d36a0a1f05,Joshua Hannaford,2025-10-06T19:43:58Z,"fix(Turbopack): Add better error messaging for when we can't determine Next.js root (#83918)

## Improve error message when Next.js package can't be found

### What?
Enhances the `get_next_package` function to provide a more informative
error message when the Next.js package cannot be found from the context
directory.

### Why?
When users encounter issues with Next.js package resolution, the
previous generic error message ""Next.js package not found"" didn't
provide enough context or guidance on how to fix the problem. The
improved error message explains potential causes and solutions.

### How?
- Updated the function to use Vc<FileSystemPath> for context_directory
- Improved error handling with a detailed message that:
  - Explains the issue clearly
  - Shows the context directory path where resolution failed
  - Suggests setting `turbopack.root` in the Next.js config
  - Mentions potential issues with symlinks
  - Provides a link to documentation for more information

### How to Test

To test this, 
1. Modify `<projectRoot>/bench/basic-app/next.config.js` to 
    ```js
    module.exports = {
      experimental: {
        serverMinification: true,
      },
      turbopack: {
        root: __dirname,
      }
    }
    ```
2. Run `pnpm build && pnpm swc-build-native` to ensure that you have the
updated code
3. Run `pnpm next dev --turbo bench/basic-app` and ensure the error
shows up exactly once
4. Run `pnpm next build --turbo bench/basic-app` and ensure the same
error shows up exactly once

---------

Co-authored-by: Niklas Mischkulnig <4586894+mischnic@users.noreply.github.com>
Co-authored-by: Luke Sandberg <lukeisandberg@gmail.com>",test/development/basic/next-rs-api.test.ts,19,4,23,"@@ -398,6 +398,10 @@ describe('next.rs api', () => {
     const entrypointsSubscription = project.entrypointsSubscribe()
     const entrypoints = await entrypointsSubscription.next()
     expect(entrypoints.done).toBe(false)
+    if (!('routes' in entrypoints.value)) {
+      throw new Error('Entrypoints not available due to compilation errors')
+    }
+
     expect(Array.from(entrypoints.value.routes.keys()).sort()).toEqual([
       '/',
       '/_not-found',
@@ -487,9 +491,13 @@ describe('next.rs api', () => {
     // eslint-disable-next-line no-loop-func
     it(`should allow to write ${name} to disk`, async () => {
       const entrypointsSubscribtion = project.entrypointsSubscribe()
-      const entrypoints: TurbopackResult<RawEntrypoints> = (
+      const entrypoints: TurbopackResult<RawEntrypoints | {}> = (
         await entrypointsSubscribtion.next()
       ).value
+      if (!('routes' in entrypoints)) {
+        throw new Error('Entrypoints not available due to compilation errors')
+      }
+
       const route = entrypoints.routes.get(path)
       entrypointsSubscribtion.return()
 
@@ -546,7 +554,6 @@ describe('next.rs api', () => {
         }
         default: {
           throw new Error('unknown route type')
-          break
         }
       }
     })
@@ -623,9 +630,13 @@ describe('next.rs api', () => {
         console.log('start')
         await new Promise((r) => setTimeout(r, 1000))
         const entrypointsSubscribtion = project.entrypointsSubscribe()
-        const entrypoints: TurbopackResult<RawEntrypoints> = (
+        const entrypoints: TurbopackResult<RawEntrypoints | {}> = (
           await entrypointsSubscribtion.next()
         ).value
+        if (!('routes' in entrypoints)) {
+          throw new Error('Entrypoints not available due to compilation errors')
+        }
+
         const route = entrypoints.routes.get(path)
         entrypointsSubscribtion.return()
 
@@ -766,9 +777,13 @@ describe('next.rs api', () => {
     console.log('start')
     await new Promise((r) => setTimeout(r, 1000))
     const entrypointsSubscribtion = project.entrypointsSubscribe()
-    const entrypoints: TurbopackResult<RawEntrypoints> = (
+    const entrypoints: TurbopackResult<RawEntrypoints | {}> = (
       await entrypointsSubscribtion.next()
     ).value
+    if (!('routes' in entrypoints)) {
+      throw new Error('Entrypoints not available due to compilation errors')
+    }
+
     const route = entrypoints.routes.get('/')
     entrypointsSubscribtion.return()
 "
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",.github/workflows/build_and_test.yml,1,0,1,"@@ -888,6 +888,7 @@ jobs:
       afterBuild: |
         export IS_WEBPACK_TEST=1
         export NEXT_TEST_REACT_VERSION=""${{ matrix.react }}""
+        export __NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD=true
 
         node run-tests.js \
           --timings \"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/api-support/test/index.test.js,9,0,9,"@@ -19,12 +19,21 @@ import {
 import json from '../big.json'
 
 const appDir = join(__dirname, '../')
+const originalIsNextDev = global.isNextDev
 let appPort
 let stderr
 let mode
 let app
 
 function runTests(dev = false) {
+  beforeAll(() => {
+    // isNextDev is used for getDistDir, where it is used for reading the build manifest files.
+    global.isNextDev = dev
+  })
+  afterAll(() => {
+    global.isNextDev = originalIsNextDev
+  })
+
   it('should not strip .json from API route', async () => {
     const res = await fetchViaHTTP(appPort, '/api/hello.json')
     expect(res.status).toBe(200)"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/dist-dir/test/index.test.js,18,6,24,"@@ -10,6 +10,7 @@ import {
   killApp,
   renderViaHTTP,
   launchApp,
+  getDistDir,
 } from 'next-test-utils'
 
 const appDir = join(__dirname, '../')
@@ -42,7 +43,9 @@ describe('distDir', () => {
           ).toBeTruthy()
         })
         it('should not build the app within the default `.next` directory', async () => {
-          expect(await fs.exists(join(__dirname, '/../.next'))).toBeFalsy()
+          expect(
+            await fs.exists(join(__dirname, `/../${getDistDir()}`))
+          ).toBeFalsy()
         })
       }
     )
@@ -51,7 +54,7 @@ describe('distDir', () => {
     'development mode',
     () => {
       beforeAll(async () => {
-        await fs.remove(join(appDir, '.next'))
+        await fs.remove(join(appDir, getDistDir()))
         await fs.remove(join(appDir, 'dist'))
         appPort = await findPort()
         app = await launchApp(appDir, appPort)
@@ -64,12 +67,21 @@ describe('distDir', () => {
       })
 
       it('should build the app within the given `dist` directory', async () => {
-        expect(
-          await fs.exists(join(__dirname, `/../dist/${BUILD_MANIFEST}`))
-        ).toBeTruthy()
+        // In isolated dev build, the distDir for development is `distDir/dev`
+        if (process.env.__NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD === 'true') {
+          expect(
+            await fs.exists(join(__dirname, `/../dist/dev/${BUILD_MANIFEST}`))
+          ).toBeTruthy()
+        } else {
+          expect(
+            await fs.exists(join(__dirname, `/../dist/${BUILD_MANIFEST}`))
+          ).toBeTruthy()
+        }
       })
       it('should not build the app within the default `.next` directory', async () => {
-        expect(await fs.exists(join(__dirname, '/../.next'))).toBeFalsy()
+        expect(
+          await fs.exists(join(__dirname, `/../${getDistDir()}`))
+        ).toBeFalsy()
       })
     }
   )"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/externals-pages-bundle/test/externals.test.js,7,2,9,"@@ -8,6 +8,7 @@ import {
   findPort,
   File,
   renderViaHTTP,
+  getDistDir,
 } from 'next-test-utils'
 
 const appDir = join(__dirname, '../')
@@ -17,11 +18,14 @@ describe('default', () => {
     const port = await findPort()
     const config = new File(join(appDir, 'next.config.js'))
     config.delete()
+    const originalIsNextDev = global.isNextDev
     try {
+      // launchApp is for dev mode, and isNextDev is used in getDistDir
+      global.isNextDev = true
       const app = await launchApp(appDir, port)
       await renderViaHTTP(port, '/')
       if (process.env.IS_TURBOPACK_TEST) {
-        const ssrPath = join(appDir, '.next/server/chunks/ssr')
+        const ssrPath = join(appDir, `${getDistDir()}/server/chunks/ssr`)
         const pageBundleBasenames = (await fs.readdir(ssrPath)).filter((p) =>
           p.match(/\.js$/)
         )
@@ -37,14 +41,15 @@ describe('default', () => {
         expect(allBundles).not.toContain('""external-package content""')
       } else {
         const output = await fs.readFile(
-          join(appDir, '.next/server/pages/index.js'),
+          join(appDir, `${getDistDir()}/server/pages/index.js`),
           'utf8'
         )
         expect(output).toContain('require(""external-package"")')
       }
       await killApp(app)
     } finally {
       config.restore()
+      global.isNextDev = originalIsNextDev
     }
   })
 })"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/image-optimizer/test/content-disposition-type.test.ts,0,2,2,"@@ -2,12 +2,10 @@ import { join } from 'path'
 import { setupTests } from './util'
 
 const appDir = join(__dirname, '../app')
-const imagesDir = join(appDir, '.next', 'cache', 'images')
 
 describe('with contentDispositionType inline', () => {
   setupTests({
     nextConfigImages: { contentDispositionType: 'inline' },
     appDir,
-    imagesDir,
   })
 })"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/image-optimizer/test/dangerously-allow-svg.test.ts,0,2,2,"@@ -2,12 +2,10 @@ import { join } from 'path'
 import { setupTests } from './util'
 
 const appDir = join(__dirname, '../app')
-const imagesDir = join(appDir, '.next', 'cache', 'images')
 
 describe('with dangerouslyAllowSVG config', () => {
   setupTests({
     nextConfigImages: { dangerouslyAllowSVG: true },
     appDir,
-    imagesDir,
   })
 })"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/image-optimizer/test/disable-write-to-cache-dir.test.ts,0,2,2,"@@ -2,12 +2,10 @@ import { join } from 'path'
 import { setupTests } from './util'
 
 const appDir = join(__dirname, '../app')
-const imagesDir = join(appDir, '.next', 'cache', 'images')
 
 describe('with isrFlushToDisk false config', () => {
   setupTests({
     appDir,
-    imagesDir,
     nextConfigExperimental: { isrFlushToDisk: false },
   })
 })"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/image-optimizer/test/index.test.ts,9,8,17,"@@ -10,12 +10,13 @@ import {
   nextStart,
   retry,
   waitFor,
+  getDistDir,
 } from 'next-test-utils'
 import { join } from 'path'
 import { cleanImagesDir, expectWidth, fsToJson } from './util'
 
 const appDir = join(__dirname, '../app')
-const imagesDir = join(appDir, '.next', 'cache', 'images')
+const imagesDir = join(appDir, getDistDir(), 'cache', 'images')
 const nextConfig = new File(join(appDir, 'next.config.js'))
 const largeSize = 1080 // defaults defined in server/config.ts
 
@@ -718,7 +719,7 @@ describe('Image Optimizer', () => {
       }`
           )
           await nextBuild(appDir)
-          await cleanImagesDir({ imagesDir })
+          await cleanImagesDir(imagesDir)
           appPort = await findPort()
           app = await nextStart(appDir, appPort)
         })
@@ -786,7 +787,7 @@ describe('Image Optimizer', () => {
         },
       })
       nextConfig.replace('{ /* replaceme */ }', json)
-      await cleanImagesDir({ imagesDir })
+      await cleanImagesDir(imagesDir)
       appPort = await findPort()
       app = await launchApp(appDir, appPort)
     })
@@ -816,7 +817,7 @@ describe('Image Optimizer', () => {
           },
         })
       )
-      await cleanImagesDir({ imagesDir })
+      await cleanImagesDir(imagesDir)
       appPort = await findPort()
       app = await launchApp(appDir, appPort)
     })
@@ -846,7 +847,7 @@ describe('Image Optimizer', () => {
           },
         })
       )
-      await cleanImagesDir({ imagesDir })
+      await cleanImagesDir(imagesDir)
       appPort = await findPort()
       app = await launchApp(appDir, appPort)
     })
@@ -884,7 +885,7 @@ describe('Image Optimizer', () => {
       }`
           nextConfig.replace('{ /* replaceme */ }', newConfig)
           await nextBuild(appDir)
-          await cleanImagesDir({ imagesDir })
+          await cleanImagesDir(imagesDir)
           appPort = await findPort()
           app = await nextStart(appDir, appPort)
         })
@@ -894,7 +895,7 @@ describe('Image Optimizer', () => {
         })
 
         it('should return response when image is served from an external rewrite', async () => {
-          await cleanImagesDir({ imagesDir })
+          await cleanImagesDir(imagesDir)
 
           const query = { url: '/next-js/next-js-bg.png', w: 64, q: 75 }
           const opts = { headers: { accept: 'image/webp' } }
@@ -943,7 +944,7 @@ describe('Image Optimizer', () => {
         },
       })
       nextConfig.replace('{ /* replaceme */ }', json)
-      await cleanImagesDir({ imagesDir })
+      await cleanImagesDir(imagesDir)
       appPort = await findPort()
       app = await launchApp(appDir, appPort)
     })"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/image-optimizer/test/minimum-cache-ttl.test.ts,0,2,2,"@@ -2,7 +2,6 @@ import { join } from 'path'
 import { setupTests } from './util'
 
 const appDir = join(__dirname, '../app')
-const imagesDir = join(appDir, '.next', 'cache', 'images')
 
 describe('with minimumCacheTTL of 5 sec', () => {
   setupTests({
@@ -21,6 +20,5 @@ describe('with minimumCacheTTL of 5 sec', () => {
       minimumCacheTTL: 5,
     },
     appDir,
-    imagesDir,
   })
 })"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/image-optimizer/test/sharp.test.ts,1,2,3,"@@ -2,8 +2,7 @@ import { join } from 'path'
 import { setupTests } from './util'
 
 const appDir = join(__dirname, '../app')
-const imagesDir = join(appDir, '.next', 'cache', 'images')
 
 describe('with latest sharp', () => {
-  setupTests({ appDir, imagesDir })
+  setupTests({ appDir })
 })"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/image-optimizer/test/util.ts,43,18,61,"@@ -8,6 +8,7 @@ import {
   fetchViaHTTP,
   File,
   findPort,
+  getDistDir,
   killApp,
   launchApp,
   nextBuild,
@@ -20,7 +21,6 @@ import type { NextConfig } from 'next'
 
 type SetupTestsCtx = {
   appDir: string
-  imagesDir: string
   nextConfigImages?: Partial<import('next').NextConfig['images']>
   nextConfigExperimental?: Partial<import('next').NextConfig['experimental']>
   isDev?: boolean
@@ -29,6 +29,7 @@ type SetupTestsCtx = {
 type RunTestsCtx = SetupTestsCtx & {
   w: number
   q: number
+  imagesDir: string
   app?: import('child_process').ChildProcess
   appDir?: string
   appPort?: number
@@ -98,9 +99,9 @@ export async function expectWidth(res, w, { expectAnimated = false } = {}) {
   expect(isAnimated(buffer)).toBe(expectAnimated)
 }
 
-export const cleanImagesDir = async (ctx: { imagesDir: string }) => {
-  console.warn('Cleaning', ctx.imagesDir)
-  await fs.remove(ctx.imagesDir)
+export const cleanImagesDir = async (imagesDir) => {
+  console.warn('Cleaning', imagesDir)
+  await fs.remove(imagesDir)
 }
 
 async function expectAvifSmallerThanWebp(
@@ -156,7 +157,7 @@ async function fetchWithDuration(
 }
 
 export function runTests(ctx: RunTestsCtx) {
-  const { isDev, nextConfigImages } = ctx
+  const { isDev, nextConfigImages, imagesDir } = ctx
   const {
     contentDispositionType = 'attachment',
     domains = [],
@@ -932,7 +933,7 @@ export function runTests(ctx: RunTestsCtx) {
       if (ctx.nextConfigExperimental?.isrFlushToDisk === false) {
         return // this test is not applicable when we don't write the cache
       }
-      await cleanImagesDir(ctx)
+      await cleanImagesDir(imagesDir)
       const delay = 500
 
       const url = `http://localhost:${slowImageServer.port}/slow.png?delay=${delay}`
@@ -1154,7 +1155,7 @@ export function runTests(ctx: RunTestsCtx) {
     if (ctx.nextConfigExperimental?.isrFlushToDisk === false) {
       return // this test is not applicable when we don't write the cache
     }
-    await cleanImagesDir(ctx)
+    await cleanImagesDir(imagesDir)
 
     const query = {
       url: '/api/stateful/test.png',
@@ -1261,7 +1262,7 @@ export function runTests(ctx: RunTestsCtx) {
 
   if (ctx.nextConfigImages?.dangerouslyAllowSVG) {
     it('should use cached image file when parameters are the same for svg', async () => {
-      await cleanImagesDir(ctx)
+      await cleanImagesDir(imagesDir)
 
       const query = { url: '/test.svg', w: ctx.w, q: ctx.q }
       const opts = { headers: { accept: 'image/webp' } }
@@ -1301,7 +1302,7 @@ export function runTests(ctx: RunTestsCtx) {
     if (ctx.nextConfigExperimental?.isrFlushToDisk === false) {
       return // this test is not applicable when we don't write the cache
     }
-    await cleanImagesDir(ctx)
+    await cleanImagesDir(imagesDir)
 
     const query = { url: '/animated.gif', w: ctx.w, q: ctx.q }
     const opts = { headers: { accept: 'image/webp' } }
@@ -1490,7 +1491,7 @@ export function runTests(ctx: RunTestsCtx) {
 
   if (domains.length > 0) {
     it('should handle concurrent requests', async () => {
-      await cleanImagesDir(ctx)
+      await cleanImagesDir(ctx.imagesDir)
       const delay = 500
       const query = {
         url: `http://localhost:${slowImageServer.port}/slow.png?delay=${delay}`,
@@ -1552,17 +1553,28 @@ export function runTests(ctx: RunTestsCtx) {
 export const setupTests = (ctx: SetupTestsCtx) => {
   const nextConfig = new File(join(ctx.appDir, 'next.config.js'))
 
+  const originalIsNextDev = (global as any).isNextDev
+  afterAll(() => {
+    ;(global as any).isNextDev = originalIsNextDev
+  })
+
   describe('dev support w/o next.config.js', () => {
     if (ctx.nextConfigImages) {
       // skip this test because it requires next.config.js
       return
     }
+
+    const isDev = true
+    // Set global.isNextDev for getDistDir()
+    ;(global as any).isNextDev = isDev
+    const imagesDir = join(ctx.appDir, getDistDir(), 'cache', 'images')
     const size = 384 // defaults defined in server/config.ts
     const curCtx: RunTestsCtx = {
       ...ctx,
       w: size,
       q: 75,
-      isDev: true,
+      isDev,
+      imagesDir,
     }
 
     beforeAll(async () => {
@@ -1580,7 +1592,7 @@ export const setupTests = (ctx: SetupTestsCtx) => {
         },
         cwd: curCtx.appDir,
       })
-      await cleanImagesDir(ctx)
+      await cleanImagesDir(imagesDir)
     })
     afterAll(async () => {
       nextConfig.restore()
@@ -1591,12 +1603,16 @@ export const setupTests = (ctx: SetupTestsCtx) => {
   })
 
   describe('dev support with next.config.js', () => {
+    const isDev = true
+    // Set global.isNextDev for getDistDir()
+    ;(global as any).isNextDev = isDev
+    const imagesDir = join(ctx.appDir, getDistDir(), 'cache', 'images')
     const size = 400
     const curCtx: RunTestsCtx = {
       ...ctx,
       w: size,
       q: 100,
-      isDev: true,
+      isDev,
       nextConfigImages: {
         domains: [
           'localhost',
@@ -1611,6 +1627,7 @@ export const setupTests = (ctx: SetupTestsCtx) => {
         qualities: [50, 75, 100],
         ...ctx.nextConfigImages,
       },
+      imagesDir,
     }
     beforeAll(async () => {
       const json = JSON.stringify({
@@ -1621,7 +1638,7 @@ export const setupTests = (ctx: SetupTestsCtx) => {
       } satisfies NextConfig)
       curCtx.nextOutput = ''
       nextConfig.replace('{ /* replaceme */ }', json)
-      await cleanImagesDir(ctx)
+      await cleanImagesDir(imagesDir)
       curCtx.appPort = await findPort()
       curCtx.app = await launchApp(curCtx.appDir, curCtx.appPort, {
         onStderr(msg) {
@@ -1644,12 +1661,16 @@ export const setupTests = (ctx: SetupTestsCtx) => {
       // skip this test because it requires next.config.js
       return
     }
+    const isDev = false
+    ;(global as any).isNextDev = isDev
+    const imagesDir = join(ctx.appDir, getDistDir(), 'cache', 'images')
     const size = 384 // defaults defined in server/config.ts
     const curCtx: RunTestsCtx = {
       ...ctx,
       w: size,
       q: 75,
-      isDev: false,
+      isDev,
+      imagesDir,
     }
     beforeAll(async () => {
       const json = JSON.stringify({
@@ -1660,7 +1681,7 @@ export const setupTests = (ctx: SetupTestsCtx) => {
       nextConfig.replace('{ /* replaceme */ }', json)
       curCtx.nextOutput = ''
       await nextBuild(curCtx.appDir)
-      await cleanImagesDir(ctx)
+      await cleanImagesDir(imagesDir)
       curCtx.appPort = await findPort()
       curCtx.app = await nextStart(curCtx.appDir, curCtx.appPort, {
         onStderr(msg) {
@@ -1679,12 +1700,15 @@ export const setupTests = (ctx: SetupTestsCtx) => {
   ;(process.env.TURBOPACK_DEV || process.env.TURBOPACK_BUILD
     ? describe.skip
     : describe)('Production Mode Server support with next.config.js', () => {
+    const isDev = false
+    ;(global as any).isNextDev = isDev
+    const imagesDir = join(ctx.appDir, getDistDir(), 'cache', 'images')
     const size = 399
     const curCtx: RunTestsCtx = {
       ...ctx,
       w: size,
       q: 100,
-      isDev: false,
+      isDev,
       nextConfigImages: {
         domains: [
           'localhost',
@@ -1698,6 +1722,7 @@ export const setupTests = (ctx: SetupTestsCtx) => {
         qualities: [50, 75, 100],
         ...ctx.nextConfigImages,
       },
+      imagesDir,
     }
     beforeAll(async () => {
       const json = JSON.stringify({
@@ -1709,7 +1734,7 @@ export const setupTests = (ctx: SetupTestsCtx) => {
       curCtx.nextOutput = ''
       nextConfig.replace('{ /* replaceme */ }', json)
       await nextBuild(curCtx.appDir)
-      await cleanImagesDir(ctx)
+      await cleanImagesDir(imagesDir)
       curCtx.appPort = await findPort()
       curCtx.app = await nextStart(curCtx.appDir, curCtx.appPort, {
         onStderr(msg) {"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/ondemand/test/index.test.js,5,0,5,"@@ -33,10 +33,15 @@ const startServer = async (optEnv = {}, opts) => {
   'On Demand Entries',
   () => {
     it('should pass', () => {})
+    const originalIsNextDev = global.isNextDev
     beforeAll(async () => {
+      // The server.js sets ""dev"" via process.env.NODE_ENV.
+      // isNextDev is used for getDistDir, where it is used for reading the build manifest files.
+      global.isNextDev = process.env.NODE_ENV !== 'production'
       await startServer()
     })
     afterAll(async () => {
+      global.isNextDev = originalIsNextDev
       await killApp(context.server)
     })
 "
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/trailing-slash-dist/test/index.test.js,7,1,8,"@@ -11,11 +11,17 @@ import {
 } from 'next-test-utils'
 
 const appDir = join(__dirname, '../')
-
+const originalIsNextDev = global.isNextDev
 let appPort
 let app
 
 const runTest = (mode = 'server') => {
+  beforeAll(() => {
+    global.isNextDev = mode === 'dev'
+  })
+  afterAll(() => {
+    global.isNextDev = originalIsNextDev
+  })
   it('supports trailing slash', async () => {
     // Make sure the page is built before getting the file
     await renderViaHTTP(appPort, '/')"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/integration/typescript-app-type-declarations/test/index.test.js,12,0,12,"@@ -8,6 +8,18 @@ const appDir = join(__dirname, '..')
 const appTypeDeclarations = join(appDir, 'next-env.d.ts')
 
 describe('TypeScript App Type Declarations', () => {
+  if (process.env.__NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD === 'true') {
+    it.skip('should skip on isolated dev build', () => {
+      // We use static fixture ""next-env.d.ts"" but the content should differ
+      // based on the isolated dev build flag. We can't do something like
+      // ""next-env-dev.d.ts"" because Next.js Types Plugin emits a file
+      // ""next-env.d.ts"", and we have to change its behavior for this test case.
+      // Rather than that, just skip the test as we're going to remove this flag soon.
+      // Then modify the content to be "".next/dev/types/routes.d.ts""
+    })
+    return
+  }
+
   it('should write a new next-env.d.ts if none exist', async () => {
     const prevContent = await fs.readFile(appTypeDeclarations, 'utf8')
     try {"
vercel/next.js,f9ca4b5ccd3b9c5ae08bbf14467cb7f85eb9f9af,Jiwon Choi,2025-10-06T19:41:18Z,"CI: Enable `experimental.isolatedDevBuild` for `test-integration` (#84558)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-integration instead of test-experimental-integration
because `-experimental` CIs are filtered via
`experimental-tests-manifest.json` and they don't cover all tests. We
want to enable this feature by default so we should ensure this
incremental rollout is covered on all test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration (here)
4. test-unit
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/lib/next-test-utils.ts,15,13,28,"@@ -1226,11 +1226,11 @@ function readJson(path: string) {
 }
 
 export function getBuildManifest(dir: string) {
-  return readJson(path.join(dir, '.next/build-manifest.json'))
+  return readJson(path.join(dir, getDistDir(), 'build-manifest.json'))
 }
 
 export function getImagesManifest(dir: string) {
-  return readJson(path.join(dir, '.next/images-manifest.json'))
+  return readJson(path.join(dir, getDistDir(), 'images-manifest.json'))
 }
 
 export function getPageFilesFromBuildManifest(dir: string, page: string) {
@@ -1250,7 +1250,7 @@ export function getContentOfPageFilesFromBuildManifest(
   const pageFiles = getPageFilesFromBuildManifest(dir, page)
 
   return pageFiles
-    .map((file) => readFileSync(path.join(dir, '.next', file), 'utf8'))
+    .map((file) => readFileSync(path.join(dir, getDistDir(), file), 'utf8'))
     .join('\n')
 }
 
@@ -1271,17 +1271,17 @@ export function getPageFileFromBuildManifest(dir: string, page: string) {
 
 export function readNextBuildClientPageFile(appDir: string, page: string) {
   const pageFile = getPageFileFromBuildManifest(appDir, page)
-  return readFileSync(path.join(appDir, '.next', pageFile), 'utf8')
+  return readFileSync(path.join(appDir, getDistDir(), pageFile), 'utf8')
 }
 
 export function getPagesManifest(dir: string) {
-  const serverFile = path.join(dir, '.next/server/pages-manifest.json')
+  const serverFile = path.join(dir, getDistDir(), 'server/pages-manifest.json')
 
   return readJson(serverFile)
 }
 
 export function updatePagesManifest(dir: string, content: any) {
-  const serverFile = path.join(dir, '.next/server/pages-manifest.json')
+  const serverFile = path.join(dir, getDistDir(), 'server/pages-manifest.json')
 
   return writeFile(serverFile, content)
 }
@@ -1298,13 +1298,16 @@ export function getPageFileFromPagesManifest(dir: string, page: string) {
 
 export function readNextBuildServerPageFile(appDir: string, page: string) {
   const pageFile = getPageFileFromPagesManifest(appDir, page)
-  return readFileSync(path.join(appDir, '.next', 'server', pageFile), 'utf8')
+  return readFileSync(
+    path.join(appDir, getDistDir(), 'server', pageFile),
+    'utf8'
+  )
 }
 
 export function getClientBuildManifest(dir: string) {
-  let buildId = readFileSync(path.join(dir, '.next/BUILD_ID'), 'utf8')
+  let buildId = readFileSync(path.join(dir, getDistDir(), 'BUILD_ID'), 'utf8')
   let code = readFileSync(
-    path.join(dir, '.next/static', buildId, '_buildManifest.js'),
+    path.join(dir, getDistDir(), 'static', buildId, '_buildManifest.js'),
     'utf8'
   )
   // eslint-disable-next-line no-eval
@@ -1887,11 +1890,10 @@ export function normalizeManifest<T>(
   )
 }
 
-export function getDistDir(isNextDev?: boolean): '.next' | '.next/dev' {
+export function getDistDir(): '.next' | '.next/dev' {
   // global.isNextDev is set in e2e/development/production tests.
-  // TODO: If a test utils that are used in integration/unit tests can set
-  // global.isNextDev flag, we could possibly remove the parameter.
-  return (isNextDev ?? (global as any).isNextDev) &&
+  // NEXT_TEST_MODE is set in CI or local test-* commands.
+  return ((global as any).isNextDev || process.env.NEXT_TEST_MODE === 'dev') &&
     // Flag for incremental rollout of isolated dev build, set in CI.
     process.env.__NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD === 'true'
     ? '.next/dev'"
vercel/next.js,23ed41c6571ece1d8d59a73a4a2aec32754a7fe0,Jiwon Choi,2025-10-06T19:22:15Z,"Add `.next/dev/types` to CNA templates tsconfig include (#84566)

Since we're going to enable `experimental.isolatedDevBuild` by default, add `"".next/dev/types""` to CNA templates tsconfig include. This is required for CNA test `projectShouldHaveNoGitChanges()` as Next.js automatically adds this when the `isolatedDevBuild` is enabled.",packages/create-next-app/templates/app-api/ts/tsconfig.json,1,0,1,"@@ -27,6 +27,7 @@
     ""**/*.ts"",
     ""**/*.tsx"",
     "".next/types/**/*.ts"",
+    "".next/dev/types/**/*.ts"",
     ""**/*.mts""
   ],
   ""exclude"": [""node_modules""]"
vercel/next.js,23ed41c6571ece1d8d59a73a4a2aec32754a7fe0,Jiwon Choi,2025-10-06T19:22:15Z,"Add `.next/dev/types` to CNA templates tsconfig include (#84566)

Since we're going to enable `experimental.isolatedDevBuild` by default, add `"".next/dev/types""` to CNA templates tsconfig include. This is required for CNA test `projectShouldHaveNoGitChanges()` as Next.js automatically adds this when the `isolatedDevBuild` is enabled.",packages/create-next-app/templates/app-empty/ts/tsconfig.json,1,0,1,"@@ -27,6 +27,7 @@
     ""**/*.ts"",
     ""**/*.tsx"",
     "".next/types/**/*.ts"",
+    "".next/dev/types/**/*.ts"",
     ""**/*.mts""
   ],
   ""exclude"": [""node_modules""]"
vercel/next.js,23ed41c6571ece1d8d59a73a4a2aec32754a7fe0,Jiwon Choi,2025-10-06T19:22:15Z,"Add `.next/dev/types` to CNA templates tsconfig include (#84566)

Since we're going to enable `experimental.isolatedDevBuild` by default, add `"".next/dev/types""` to CNA templates tsconfig include. This is required for CNA test `projectShouldHaveNoGitChanges()` as Next.js automatically adds this when the `isolatedDevBuild` is enabled.",packages/create-next-app/templates/app-tw-empty/ts/tsconfig.json,1,0,1,"@@ -27,6 +27,7 @@
     ""**/*.ts"",
     ""**/*.tsx"",
     "".next/types/**/*.ts"",
+    "".next/dev/types/**/*.ts"",
     ""**/*.mts""
   ],
   ""exclude"": [""node_modules""]"
vercel/next.js,23ed41c6571ece1d8d59a73a4a2aec32754a7fe0,Jiwon Choi,2025-10-06T19:22:15Z,"Add `.next/dev/types` to CNA templates tsconfig include (#84566)

Since we're going to enable `experimental.isolatedDevBuild` by default, add `"".next/dev/types""` to CNA templates tsconfig include. This is required for CNA test `projectShouldHaveNoGitChanges()` as Next.js automatically adds this when the `isolatedDevBuild` is enabled.",packages/create-next-app/templates/app-tw/ts/tsconfig.json,1,0,1,"@@ -27,6 +27,7 @@
     ""**/*.ts"",
     ""**/*.tsx"",
     "".next/types/**/*.ts"",
+    "".next/dev/types/**/*.ts"",
     ""**/*.mts""
   ],
   ""exclude"": [""node_modules""]"
vercel/next.js,23ed41c6571ece1d8d59a73a4a2aec32754a7fe0,Jiwon Choi,2025-10-06T19:22:15Z,"Add `.next/dev/types` to CNA templates tsconfig include (#84566)

Since we're going to enable `experimental.isolatedDevBuild` by default, add `"".next/dev/types""` to CNA templates tsconfig include. This is required for CNA test `projectShouldHaveNoGitChanges()` as Next.js automatically adds this when the `isolatedDevBuild` is enabled.",packages/create-next-app/templates/app/ts/tsconfig.json,1,0,1,"@@ -27,6 +27,7 @@
     ""**/*.ts"",
     ""**/*.tsx"",
     "".next/types/**/*.ts"",
+    "".next/dev/types/**/*.ts"",
     ""**/*.mts""
   ],
   ""exclude"": [""node_modules""]"
vercel/next.js,23ed41c6571ece1d8d59a73a4a2aec32754a7fe0,Jiwon Choi,2025-10-06T19:22:15Z,"Add `.next/dev/types` to CNA templates tsconfig include (#84566)

Since we're going to enable `experimental.isolatedDevBuild` by default, add `"".next/dev/types""` to CNA templates tsconfig include. This is required for CNA test `projectShouldHaveNoGitChanges()` as Next.js automatically adds this when the `isolatedDevBuild` is enabled.",packages/create-next-app/templates/default-empty/ts/tsconfig.json,1,0,1,"@@ -22,6 +22,7 @@
     ""**/*.ts"",
     ""**/*.tsx"",
     "".next/types/**/*.ts"",
+    "".next/dev/types/**/*.ts"",
     ""**/*.mts""
   ],
   ""exclude"": [""node_modules""]"
vercel/next.js,23ed41c6571ece1d8d59a73a4a2aec32754a7fe0,Jiwon Choi,2025-10-06T19:22:15Z,"Add `.next/dev/types` to CNA templates tsconfig include (#84566)

Since we're going to enable `experimental.isolatedDevBuild` by default, add `"".next/dev/types""` to CNA templates tsconfig include. This is required for CNA test `projectShouldHaveNoGitChanges()` as Next.js automatically adds this when the `isolatedDevBuild` is enabled.",packages/create-next-app/templates/default-tw-empty/ts/tsconfig.json,1,0,1,"@@ -22,6 +22,7 @@
     ""**/*.ts"",
     ""**/*.tsx"",
     "".next/types/**/*.ts"",
+    "".next/dev/types/**/*.ts"",
     ""**/*.mts""
   ],
   ""exclude"": [""node_modules""]"
vercel/next.js,23ed41c6571ece1d8d59a73a4a2aec32754a7fe0,Jiwon Choi,2025-10-06T19:22:15Z,"Add `.next/dev/types` to CNA templates tsconfig include (#84566)

Since we're going to enable `experimental.isolatedDevBuild` by default, add `"".next/dev/types""` to CNA templates tsconfig include. This is required for CNA test `projectShouldHaveNoGitChanges()` as Next.js automatically adds this when the `isolatedDevBuild` is enabled.",packages/create-next-app/templates/default-tw/ts/tsconfig.json,1,0,1,"@@ -22,6 +22,7 @@
     ""**/*.ts"",
     ""**/*.tsx"",
     "".next/types/**/*.ts"",
+    "".next/dev/types/**/*.ts"",
     ""**/*.mts""
   ],
   ""exclude"": [""node_modules""]"
vercel/next.js,23ed41c6571ece1d8d59a73a4a2aec32754a7fe0,Jiwon Choi,2025-10-06T19:22:15Z,"Add `.next/dev/types` to CNA templates tsconfig include (#84566)

Since we're going to enable `experimental.isolatedDevBuild` by default, add `"".next/dev/types""` to CNA templates tsconfig include. This is required for CNA test `projectShouldHaveNoGitChanges()` as Next.js automatically adds this when the `isolatedDevBuild` is enabled.",packages/create-next-app/templates/default/ts/tsconfig.json,1,0,1,"@@ -22,6 +22,7 @@
     ""**/*.ts"",
     ""**/*.tsx"",
     "".next/types/**/*.ts"",
+    "".next/dev/types/**/*.ts"",
     ""**/*.mts""
   ],
   ""exclude"": [""node_modules""]"
vercel/next.js,9f2db5fda8880b7628d076b37acba0534ded9d61,Jiwon Choi,2025-10-06T19:20:40Z,"CI: Enable `experimental.isolatedDevBuild` for `test-prod` (#84556)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

Enabling on test-prod instead of test-experimental-prod because
`-experimental` CIs are filtered via `experimental-tests-manifest.json`
and they don't cover all tests. We want to enable this feature by
default so we should ensure this incremental rollout is covered on all
test cases.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
3. test-prod (here)
4. test-integration
5. test-unit
6. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",.github/workflows/build_and_test.yml,1,0,1,"@@ -848,6 +848,7 @@ jobs:
         export IS_WEBPACK_TEST=1
         export NEXT_TEST_MODE=start
         export NEXT_TEST_REACT_VERSION=""${{ matrix.react }}""
+        export __NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD=true
 
         node run-tests.js --timings -g ${{ matrix.group }} --type production
       stepName: 'test-prod-react-${{ matrix.react }}-${{ matrix.group }}'"
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/client-segment-cache-tests-manifest.json,0,20,20,"@@ -11,26 +11,6 @@
         ""app-dir action handling should reset the form state when the action redirects to itself""
       ]
     },
-    ""test/e2e/app-dir/app-prefetch/prefetching.stale-times.test.ts"": {
-      ""failed"": [
-        ""app dir - prefetching (custom staleTime) should fetch again when a static page was prefetched when navigating to it after the stale time has passed"",
-        ""app dir - prefetching (custom staleTime) should fetch again when the initially visited static page is visited after the stale time has passed"",
-        ""app dir - prefetching (custom staleTime) should not fetch again when a static page was prefetched when navigating to it twice"",
-        ""app dir - prefetching (custom staleTime) should renew the stale time after refetching expired RSC data""
-      ]
-    },
-    ""test/e2e/app-dir/app-prefetch/prefetching.test.ts"": {
-      ""failed"": [
-        ""app dir - prefetching fetch priority should have an auto priority for all other fetch operations"",
-        ""app dir - prefetching fetch priority should prefetch with high priority when navigating to a page without a prefetch entry"",
-        ""app dir - prefetching prefetch cache seeding should not re-fetch the initial dynamic page if the same page is prefetched with prefetch={true}"",
-        ""app dir - prefetching prefetch cache seeding should not re-fetch the initial static page if the same page is prefetched with prefetch={true}"",
-        ""app dir - prefetching should calculate `_rsc` query based on `Next-Url`"",
-        ""app dir - prefetching should immediately render the loading state for a dynamic segment when fetched from higher up in the tree"",
-        ""app dir - prefetching should not fetch again when a static page was prefetched"",
-        ""app dir - prefetching should not unintentionally modify the requested prefetch by escaping the uri encoded query params""
-      ]
-    },
     ""test/e2e/app-dir/navigation/navigation.test.ts"": {
       ""failed"": [
         ""app dir - navigation middleware redirect should change browser location when router.refresh() gets a redirect response"""
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/app/components/link-accordion.tsx,26,0,26,"@@ -0,0 +1,26 @@
+'use client'
+
+import Link from 'next/link'
+import { useState } from 'react'
+
+export function LinkAccordion({ href, children, id }) {
+  const [isVisible, setIsVisible] = useState(false)
+  return (
+    <>
+      <input
+        type=""checkbox""
+        checked={isVisible}
+        onChange={() => setIsVisible(!isVisible)}
+        data-link-accordion={href}
+        id={`accordion-${id}`}
+      />
+      {isVisible ? (
+        <Link href={href} id={id}>
+          {children}
+        </Link>
+      ) : (
+        <>{children} (link is hidden)</>
+      )}
+    </>
+  )
+}"
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/app/dashboard/loading.js,1,1,2,"@@ -1,3 +1,3 @@
 export default function DashboardLoading() {
-  return <>Loading dashboard...</>
+  return <>Loading dashboard... [dashboard-prefetch-sentinel]</>
 }"
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/app/dashboard/page.js,1,1,2,"@@ -13,7 +13,7 @@ export default async function DashboardPage(props) {
 
   return (
     <>
-      <p id=""dashboard-page"">{message}</p>
+      <p id=""dashboard-page"">{message} [dashboard-prefetch-sentinel]</p>
       <Link href=""/static-page"" id=""to-static-page"">
         To Static Page
       </Link>"
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/app/page.js,16,11,27,"@@ -1,22 +1,27 @@
-import Link from 'next/link'
+import { LinkAccordion } from './components/link-accordion'
+
 export default function HomePage() {
   return (
     <>
-      <Link href=""/dashboard"" id=""to-dashboard"">
+      <p id=""home-page"">Home Page [prefetch-sentinel]</p>
+      <LinkAccordion href=""/dashboard"" id=""to-dashboard"">
         To Dashboard
-      </Link>
-      <Link href=""/static-page"" id=""to-static-page"">
+      </LinkAccordion>
+      <LinkAccordion href=""/static-page"" id=""to-static-page"">
         To Static Page
-      </Link>
-      <Link href=""/static-page-no-prefetch"" id=""to-static-page-no-prefetch"">
+      </LinkAccordion>
+      <LinkAccordion
+        href=""/static-page-no-prefetch""
+        id=""to-static-page-no-prefetch""
+      >
         To Static Page No Prefetch
-      </Link>
-      <Link href=""/dynamic-page"" id=""to-dynamic-page-no-params"">
+      </LinkAccordion>
+      <LinkAccordion href=""/dynamic-page"" id=""to-dynamic-page-no-params"">
         To Dynamic Page
-      </Link>
-      <Link href=""/prefetch-auto/foobar"" id=""to-dynamic-page"">
+      </LinkAccordion>
+      <LinkAccordion href=""/prefetch-auto/foobar"" id=""to-dynamic-page"">
         To Dynamic Slug Page
-      </Link>
+      </LinkAccordion>
       <a href=""/static-page"" id=""to-static-page-hard"">
         Hard Nav to Static Page
       </a>"
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/app/static-page-no-prefetch/page.js,6,4,10,"@@ -1,13 +1,15 @@
-import Link from 'next/link'
+import { LinkAccordion } from '../components/link-accordion'
 
 export default async function Page() {
   return (
     <>
-      <p id=""static-page-no-prefetch"">Static Page No Prefetch</p>
+      <p id=""static-page-no-prefetch"">
+        Static Page No Prefetch [prefetch-sentinel]
+      </p>
       <p>
-        <Link href=""/"" id=""to-home"">
+        <LinkAccordion href=""/"" id=""to-home"">
           To home
-        </Link>
+        </LinkAccordion>
       </p>
     </>
   )"
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/app/static-page/page.js,7,7,14,"@@ -1,19 +1,19 @@
-import Link from 'next/link'
+import { LinkAccordion } from '../components/link-accordion'
 import { BackButton } from './back-button'
 
 export default async function Page() {
   return (
     <>
-      <p id=""static-page"">Static Page</p>
+      <p id=""static-page"">Static Page [prefetch-sentinel]</p>
       <p>
-        <Link href=""/"" id=""to-home"">
+        <LinkAccordion href=""/"" id=""to-home"">
           To home
-        </Link>
+        </LinkAccordion>
       </p>
       <p>
-        <Link href=""/static-page"" prefetch>
-          To Same Page
-        </Link>
+        <LinkAccordion href=""/static-page"" id=""to-same-page"">
+          To Static Page (self)
+        </LinkAccordion>
       </p>
       <p>
         <BackButton />"
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/prefetching.stale-times.test.ts,267,182,449,"@@ -1,14 +1,18 @@
-import { nextTestSetup } from 'e2e-utils'
-import { retry, waitFor } from 'next-test-utils'
+import { FileRef, nextTestSetup } from 'e2e-utils'
+import { createRouterAct } from './router-act'
+import { createTimeController } from './test-utils'
+import { join } from 'path'
 
 describe('app dir - prefetching (custom staleTime)', () => {
   const { next, isNextDev } = nextTestSetup({
-    files: __dirname,
+    files: {
+      app: new FileRef(join(__dirname, 'app')),
+    },
     skipDeployment: true,
     nextConfig: {
       experimental: {
         staleTimes: {
-          static: 10,
+          static: 30, // Minimum enforced by clientSegmentCache is 30 seconds
           dynamic: 5,
         },
       },
@@ -21,218 +25,299 @@ describe('app dir - prefetching (custom staleTime)', () => {
   }
 
   it('should not fetch again when a static page was prefetched when navigating to it twice', async () => {
-    const browser = await next.browser('/404')
-    let requests: string[] = []
-
-    browser.on('request', (req) => {
-      requests.push(new URL(req.url()).pathname)
-    })
-    await browser.eval('location.href = ""/""')
-
-    await retry(async () => {
-      expect(
-        requests.filter((request) => request === '/static-page')
-      ).toHaveLength(1)
+    let act: ReturnType<typeof createRouterAct>
+    const browser = await next.browser('/', {
+      beforePageLoad(page) {
+        act = createRouterAct(page)
+      },
     })
 
-    await browser
-      .elementByCss('#to-static-page')
-      .click()
-      .waitForElementByCss('#static-page')
-
-    await browser
-      .elementByCss('#to-home')
-      // Go back to home page
-      .click()
-      // Wait for homepage to load
-      .waitForElementByCss('#to-static-page')
-      // Click on the link to the static page again
-      .click()
-      // Wait for the static page to load again
-      .waitForElementByCss('#static-page')
-
-    await retry(async () => {
-      expect(
-        requests.filter((request) => request === '/static-page')
-      ).toHaveLength(1)
-    })
+    // Reveal the link to trigger prefetch and wait for it to complete
+    const link = await act(
+      async () => {
+        const reveal = await browser.elementByCss('#accordion-to-static-page')
+        await reveal.click()
+        await browser.waitForElementByCss('#to-static-page')
+        return await browser.elementByCss('#to-static-page')
+      },
+      { includes: 'Static Page [prefetch-sentinel]' }
+    )
+
+    // Navigate to static page - should use prefetched data with no additional requests
+    await act(async () => {
+      await link.click()
+      await browser.waitForElementByCss('#static-page')
+      const staticPageText = await browser.elementByCss('#static-page').text()
+      expect(staticPageText).toBe('Static Page [prefetch-sentinel]')
+    }, 'no-requests')
+
+    // Reveal the ""to-home"" link and navigate back
+    // Note: Not using act() here because behavior differs between cache models.
+    // With clientSegmentCache, revealing may trigger a prefetch. Without it, home is already
+    // cached so no prefetch occurs. Either way, navigation works with cached data.
+    const reveal = await browser.elementByCss('#accordion-to-home')
+    await reveal.click()
+    const homeLink = await browser.waitForElementByCss('#to-home')
+    await homeLink.click()
+    await browser.waitForElementByCss('#accordion-to-static-page')
+
+    // Reveal the static page link again since accordion is hidden after navigation
+    await browser.elementByCss('#accordion-to-static-page').click()
+    await browser.waitForElementByCss('#to-static-page')
+
+    // Navigate to static page again using the accordion - should still use cached data with no additional requests
+    await act(async () => {
+      await browser.elementByCss('#to-static-page').click()
+      await browser.waitForElementByCss('#static-page')
+      const staticPageText = await browser.elementByCss('#static-page').text()
+      expect(staticPageText).toBe('Static Page [prefetch-sentinel]')
+    }, 'no-requests')
   })
 
   it('should fetch again when a static page was prefetched when navigating to it after the stale time has passed', async () => {
-    const browser = await next.browser('/404')
-    let requests: string[] = []
-
-    browser.on('request', (req) => {
-      requests.push(new URL(req.url()).pathname)
+    let act: ReturnType<typeof createRouterAct>
+    const timeController = createTimeController()
+    const browser = await next.browser('/', {
+      beforePageLoad(page) {
+        act = createRouterAct(page)
+      },
     })
-    await browser.eval('location.href = ""/""')
 
-    await retry(async () => {
-      expect(
-        requests.filter((request) => request === '/static-page')
-      ).toHaveLength(1)
-    })
+    // Install time controller
+    await timeController.install(browser)
 
-    await browser
-      .elementByCss('#to-static-page')
-      .click()
-      .waitForElementByCss('#static-page')
-
-    const linkToStaticPage = await browser
-      .elementByCss('#to-home')
-      // Go back to home page
-      .click()
-      // Wait for homepage to load
-      .waitForElementByCss('#to-static-page')
-
-    // Wait for the stale time to pass.
-    await waitFor(10000)
-    // Click on the link to the static page again
-    await linkToStaticPage.click()
-    // Wait for the static page to load again
-    await browser.waitForElementByCss('#static-page')
-
-    await retry(async () => {
-      expect(
-        requests.filter((request) => request === '/static-page')
-      ).toHaveLength(2)
-    })
+    // Reveal the static-page link to trigger prefetch and wait for it to complete
+    let link = await act(
+      async () => {
+        const reveal = await browser.elementByCss('#accordion-to-static-page')
+        await reveal.click()
+        await browser.waitForElementByCss('#to-static-page')
+        return await browser.elementByCss('#to-static-page')
+      },
+      { includes: 'Static Page [prefetch-sentinel]' }
+    )
+
+    // Navigate to static page - should use prefetched data with no additional requests
+    await act(async () => {
+      await link.click()
+      await browser.waitForElementByCss('#static-page')
+    }, 'no-requests')
+
+    // Reveal the ""to-home"" link and navigate back
+    const reveal = await browser.elementByCss('#accordion-to-home')
+    await reveal.click()
+    const homeLink = await browser.waitForElementByCss('#to-home')
+    await homeLink.click()
+    await browser.waitForElementByCss('#accordion-to-static-page')
+
+    // Advance time past the stale time
+    await timeController.advance(browser, 31000)
+
+    // Reveal the static-page link to trigger prefetch and wait for it to complete
+    link = await act(
+      async () => {
+        const reveal = await browser.elementByCss('#accordion-to-static-page')
+        await reveal.click()
+        await browser.waitForElementByCss('#to-static-page')
+        return await browser.elementByCss('#to-static-page')
+      },
+      { includes: 'Static Page [prefetch-sentinel]' }
+    )
+
+    // Navigate to static page - should use prefetched data with no additional requests
+    await act(async () => {
+      await link.click()
+      await browser.waitForElementByCss('#static-page')
+    }, 'no-requests')
   })
 
   it('should not re-fetch cached data when navigating back to a route group', async () => {
-    const browser = await next.browser('/prefetch-auto-route-groups')
-    // once the page has loaded, we expect a data fetch
-    expect(await browser.elementById('count').text()).toBe('1')
-
-    // once navigating to a sub-page, we expect another data fetch
-    await browser
-      .elementByCss(""[href='/prefetch-auto-route-groups/sub/foo']"")
-      .click()
-
-    // navigating back to the route group page shouldn't trigger any data fetch
-    await browser.elementByCss(""[href='/prefetch-auto-route-groups']"").click()
+    let act: ReturnType<typeof createRouterAct>
+    const browser = await next.browser('/prefetch-auto-route-groups', {
+      beforePageLoad(page) {
+        act = createRouterAct(page)
+      },
+    })
 
-    // confirm that the dashboard page is still rendering the stale fetch count, as it should be cached
+    // Once the page has loaded, we expect a data fetch (initial page load)
     expect(await browser.elementById('count').text()).toBe('1')
 
-    // navigating to a new sub-page, we expect another data fetch
-    await browser
-      .elementByCss(""[href='/prefetch-auto-route-groups/sub/bar']"")
-      .click()
+    // Navigate to a sub-page - this will trigger a data fetch
+    await act(async () => {
+      await browser
+        .elementByCss(""[href='/prefetch-auto-route-groups/sub/foo']"")
+        .click()
+    })
 
-    // finally, going back to the route group page shouldn't trigger any data fetch
-    await browser.elementByCss(""[href='/prefetch-auto-route-groups']"").click()
+    // Navigate back to the route group page - should use cached data with no additional fetch
+    await act(async () => {
+      await browser.elementByCss(""[href='/prefetch-auto-route-groups']"").click()
+      // Confirm that the dashboard page is still rendering the stale fetch count, as it should be cached
+      expect(await browser.elementById('count').text()).toBe('1')
+    }, 'no-requests')
+
+    // Navigate to a new sub-page - this will trigger another data fetch
+    await act(async () => {
+      await browser
+        .elementByCss(""[href='/prefetch-auto-route-groups/sub/bar']"")
+        .click()
+    })
 
-    // confirm that the dashboard page is still rendering the stale fetch count, as it should be cached
-    expect(await browser.elementById('count').text()).toBe('1')
+    // Finally, go back to the route group page - should use cached data with no additional fetch
+    await act(async () => {
+      await browser.elementByCss(""[href='/prefetch-auto-route-groups']"").click()
+      // Confirm that the dashboard page is still rendering the stale fetch count, as it should be cached
+      expect(await browser.elementById('count').text()).toBe('1')
+    }, 'no-requests')
 
+    // Reload the page to get the accurate total number of fetches
     await browser.refresh()
-    // reloading the page, we should now get an accurate total number of fetches
-    // the initial fetch, 2 sub-page fetches, and a final fetch when reloading the page
+    // The initial fetch, 2 sub-page fetches, and a final fetch when reloading the page
     expect(await browser.elementById('count').text()).toBe('4')
   })
 
   it('should fetch again when the initially visited static page is visited after the stale time has passed', async () => {
-    const browser = await next.browser('/404')
-    let requests: string[] = []
-
-    browser.on('request', (req) => {
-      const path = new URL(req.url()).pathname
-      const headers = req.headers()
-
-      if (headers['rsc']) {
-        requests.push(path)
-      }
+    let act: ReturnType<typeof createRouterAct>
+    const timeController = createTimeController()
+    const browser = await next.browser('/static-page-no-prefetch', {
+      beforePageLoad(page) {
+        act = createRouterAct(page)
+      },
     })
 
-    await browser.eval('location.href = ""/static-page-no-prefetch""')
-
-    await browser
-      .elementByCss('#to-home')
-      .click()
-      .waitForElementByCss('#to-static-page')
+    // Install time controller
+    await timeController.install(browser)
 
-    // Wait for the stale time to pass.
-    await waitFor(10000)
-
-    await browser.elementByCss('#to-static-page-no-prefetch').click()
-
-    // Wait for the static page to load again
+    // Wait for the page to load (initial navigation request happened during browser load)
     await browser.waitForElementByCss('#static-page-no-prefetch')
 
-    await retry(async () => {
-      expect(
-        requests.filter((request) => request === '/static-page-no-prefetch')
-      ).toHaveLength(1)
-    })
+    // Reveal the home link and wait for prefetch to complete, then navigate
+    const homeLink = await act(
+      async () => {
+        const reveal = await browser.elementByCss('#accordion-to-home')
+        await reveal.click()
+        await browser.waitForElementByCss('#to-home')
+        return await browser.elementByCss('#to-home')
+      },
+      { includes: 'Home Page [prefetch-sentinel]' }
+    )
+
+    // Navigate to home - no additional requests since we just prefetched
+    await homeLink.click()
+    await browser.waitForElementByCss('#accordion-to-static-page')
+
+    // Advance time past the stale time
+    await timeController.advance(browser, 31000)
+
+    // Reveal the link to static-page-no-prefetch and wait for prefetch
+    const link = await act(
+      async () => {
+        const reveal = await browser.elementByCss(
+          '#accordion-to-static-page-no-prefetch'
+        )
+        await reveal.click()
+        await browser.waitForElementByCss('#to-static-page-no-prefetch')
+        return await browser.elementByCss('#to-static-page-no-prefetch')
+      },
+      { includes: 'Static Page No Prefetch [prefetch-sentinel]' }
+    )
+
+    // Navigate back to static-page-no-prefetch - should use the fresh prefetch data
+    await act(async () => {
+      await link.click()
+      await browser.waitForElementByCss('#static-page-no-prefetch')
+      const staticPageText = await browser
+        .elementByCss('#static-page-no-prefetch')
+        .text()
+      expect(staticPageText).toBe('Static Page No Prefetch [prefetch-sentinel]')
+    }, 'no-requests')
   })
 
   it('should renew the stale time after refetching expired RSC data', async () => {
-    const browser = await next.browser('/404')
-    let requests: string[] = []
-
-    browser.on('request', (req) => {
-      requests.push(new URL(req.url()).pathname)
-    })
-
-    // Navigate to home and wait for static page to be prefetched
-    await browser.eval('location.href = ""/""')
-
-    await retry(async () => {
-      expect(
-        requests.filter((request) => request === '/static-page')
-      ).toHaveLength(1)
-    })
-
-    // Navigate to static page (should use cached data)
-    await browser
-      .elementByCss('#to-static-page')
-      .click()
-      .waitForElementByCss('#static-page')
-
-    // Go back to home
-    await browser
-      .elementByCss('#to-home')
-      .click()
-      .waitForElementByCss('#to-static-page')
-
-    // Wait for stale time to expire (10 seconds)
-    await waitFor(10000)
-
-    // Navigate to static page again (should refetch due to expired cache)
-    await browser
-      .elementByCss('#to-static-page')
-      .click()
-      .waitForElementByCss('#static-page')
-
-    // Verify that refetch happened
-    await retry(async () => {
-      expect(
-        requests.filter((request) => request === '/static-page')
-      ).toHaveLength(2)
+    let act: ReturnType<typeof createRouterAct>
+    const timeController = createTimeController()
+    const browser = await next.browser('/', {
+      beforePageLoad(page) {
+        act = createRouterAct(page)
+      },
     })
 
-    // Go back to home
-    await browser
-      .elementByCss('#to-home')
-      .click()
-      .waitForElementByCss('#to-static-page')
+    // Install time controller
+    await timeController.install(browser)
 
-    // Wait less than the stale time (5 seconds - should still be fresh)
-    await waitFor(5000)
+    // Reveal the static-page link to trigger prefetch and wait for it to complete
+    let link = await act(
+      async () => {
+        const reveal = await browser.elementByCss('#accordion-to-static-page')
+        await reveal.click()
+        await browser.waitForElementByCss('#to-static-page')
+        return await browser.elementByCss('#to-static-page')
+      },
+      { includes: 'Static Page [prefetch-sentinel]' }
+    )
+
+    // Navigate to static page (should use prefetched data with no additional requests)
+    await act(async () => {
+      await link.click()
+      await browser.waitForElementByCss('#static-page')
+    }, 'no-requests')
+
+    // Reveal the ""to-home"" link and navigate back
+    // Note: Not using act() here because behavior differs between cache models.
+    // With clientSegmentCache, revealing may trigger a prefetch. Without it, home is already
+    // cached so no prefetch occurs. Either way, navigation works with cached data.
+    const reveal = await browser.elementByCss('#accordion-to-home')
+    await reveal.click()
+    const homeLink = await browser.waitForElementByCss('#to-home')
+    await homeLink.click()
+    await browser.waitForElementByCss('#accordion-to-static-page')
+
+    // Advance time past the stale time
+    await timeController.advance(browser, 31000)
+
+    // Reveal the static-page link to trigger prefetch and wait for it to complete
+    link = await act(
+      async () => {
+        const reveal = await browser.elementByCss('#accordion-to-static-page')
+        await reveal.click()
+        await browser.waitForElementByCss('#to-static-page')
+        return await browser.elementByCss('#to-static-page')
+      },
+      { includes: 'Static Page [prefetch-sentinel]' }
+    )
+
+    // Navigate to static page again (should use freshly prefetched data with no additional requests)
+    await act(async () => {
+      await link.click()
+      await browser.waitForElementByCss('#static-page')
+    }, 'no-requests')
+
+    // Go back to home (reveal the link and navigate)
+    // Note: Not using act() here because behavior differs between cache models.
+    const reveal2 = await browser.elementByCss('#accordion-to-home')
+    await reveal2.click()
+    const homeLink2 = await browser.waitForElementByCss('#to-home')
+    await homeLink2.click()
+    await browser.waitForElementByCss('#accordion-to-static-page')
+
+    // Advance time but not past the stale time (20 seconds < 30 second stale time - should still be fresh)
+    await timeController.advance(browser, 20000)
+
+    // Reveal the static-page link to trigger prefetch (should use cached data, not refetch)
+    link = await act(async () => {
+      const reveal = await browser.elementByCss('#accordion-to-static-page')
+      await reveal.click()
+      await browser.waitForElementByCss('#to-static-page')
+      return await browser.elementByCss('#to-static-page')
+    }, 'no-requests')
 
     // Navigate to static page again (should NOT refetch - stale time should be renewed)
-    await browser
-      .elementByCss('#to-static-page')
-      .click()
-      .waitForElementByCss('#static-page')
-
-    // This should still be 2 - no new request should have been made
-    // If this fails, it means the stale time was not renewed after the refetch
-    await retry(async () => {
-      expect(
-        requests.filter((request) => request === '/static-page')
-      ).toHaveLength(2)
-    })
+    // If this assertion passes, it means the stale time was properly renewed after the refetch
+    await act(async () => {
+      await link.click()
+      await browser.waitForElementByCss('#static-page')
+      const staticPageText = await browser.elementByCss('#static-page').text()
+      expect(staticPageText).toBe('Static Page [prefetch-sentinel]')
+    }, 'no-requests')
   })
 })"
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/prefetching.test.ts,167,289,456,"@@ -1,37 +1,18 @@
-import { nextTestSetup } from 'e2e-utils'
-import { check, waitFor, retry } from 'next-test-utils'
+import { FileRef, nextTestSetup } from 'e2e-utils'
+import { waitFor, retry } from 'next-test-utils'
 import { NEXT_RSC_UNION_QUERY } from 'next/dist/client/components/app-router-headers'
 import { computeCacheBustingSearchParam } from 'next/dist/shared/lib/router/utils/cache-busting-search-param'
-
-const browserConfigWithFixedTime = {
-  beforePageLoad: (page) => {
-    page.addInitScript(() => {
-      const startTime = new Date()
-      const fixedTime = new Date('2023-04-17T00:00:00Z')
-
-      // Override the Date constructor
-      // @ts-ignore
-      // eslint-disable-next-line no-native-reassign
-      Date = class extends Date {
-        constructor() {
-          super()
-          // @ts-ignore
-          return new startTime.constructor(fixedTime)
-        }
-
-        static now() {
-          return fixedTime.getTime()
-        }
-      }
-    })
-  },
-}
+import { createRouterAct } from './router-act'
+import { createTimeController } from './test-utils'
+import { join } from 'path'
 
 const itHeaded = process.env.HEADLESS ? it.skip : it
 
 describe('app dir - prefetching', () => {
   const { next, isNextDev, isNextDeploy } = nextTestSetup({
-    files: __dirname,
+    files: {
+      app: new FileRef(join(__dirname, 'app')),
+    },
   })
 
   // TODO: re-enable for dev after https://vercel.slack.com/archives/C035J346QQL/p1663822388387959 is resolved (Sep 22nd 2022)
@@ -45,15 +26,30 @@ describe('app dir - prefetching', () => {
   })
 
   it('should show layout eagerly when prefetched with loading one level down', async () => {
-    const browser = await next.browser('/', browserConfigWithFixedTime)
-    // Ensure the page is prefetched
-    await waitFor(1000)
+    let act: ReturnType<typeof createRouterAct>
+    const timeController = createTimeController()
+    const browser = await next.browser('/', {
+      beforePageLoad(page) {
+        act = createRouterAct(page)
+      },
+    })
+
+    await timeController.install(browser)
+
+    // Reveal the dashboard accordion and wait for prefetch to complete
+    const dashboardLink = await act(
+      async () => {
+        const reveal = await browser.elementByCss('#accordion-to-dashboard')
+        await reveal.click()
+        await browser.waitForElementByCss('#to-dashboard')
+        return await browser.elementByCss('#to-dashboard')
+      },
+      { includes: '[dashboard-prefetch-sentinel]' }
+    )
 
     const before = Date.now()
-    await browser
-      .elementByCss('#to-dashboard')
-      .click()
-      .waitForElementByCss('#dashboard-layout')
+    await dashboardLink.click()
+    await browser.waitForElementByCss('#dashboard-layout')
     const after = Date.now()
     const timeToComplete = after - before
 
@@ -66,15 +62,15 @@ describe('app dir - prefetching', () => {
     await browser.waitForElementByCss('#dashboard-page')
 
     expect(await browser.waitForElementByCss('#dashboard-page').text()).toBe(
-      'Welcome to the dashboard'
+      'Welcome to the dashboard [dashboard-prefetch-sentinel]'
     )
   })
 
   it('should not have prefetch error for static path', async () => {
     const browser = await next.browser('/')
-    await browser.eval('window.nd.router.prefetch(""/dashboard/123"")')
+    await browser.eval('window.next.router.prefetch(""/dashboard/123"")')
     await waitFor(3000)
-    await browser.eval('window.nd.router.push(""/dashboard/123"")')
+    await browser.eval('window.next.router.push(""/dashboard/123"")')
     expect(next.cliOutput).not.toContain('ReferenceError')
     expect(next.cliOutput).not.toContain('is not defined')
   })
@@ -116,89 +112,51 @@ describe('app dir - prefetching', () => {
   })
 
   it('should not fetch again when a static page was prefetched', async () => {
-    const browser = await next.browser('/404', browserConfigWithFixedTime)
-    let requests: string[] = []
-
-    browser.on('request', (req) => {
-      requests.push(new URL(req.url()).pathname)
+    let act: ReturnType<typeof createRouterAct>
+    const timeController = createTimeController()
+    const browser = await next.browser('/404', {
+      beforePageLoad(page) {
+        act = createRouterAct(page)
+      },
     })
-    await browser.eval('location.href = ""/""')
 
-    await browser.eval(
-      'window.nd.router.prefetch(""/static-page"", {kind: ""auto""})'
+    await browser.eval('location.href = ""/""')
+    await browser.waitForElementByCss('#accordion-to-static-page')
+    await timeController.install(browser)
+
+    // Reveal the static-page accordion to trigger prefetch
+    await act(
+      async () => {
+        const reveal = await browser.elementByCss('#accordion-to-static-page')
+        await reveal.click()
+        await browser.waitForElementByCss('#to-static-page')
+      },
+      { includes: 'Static Page [prefetch-sentinel]' }
     )
 
-    await check(() => {
-      return requests.some(
-        (req) =>
-          req.includes('static-page') && !req.includes(NEXT_RSC_UNION_QUERY)
-      )
-        ? 'success'
-        : JSON.stringify(requests)
-    }, 'success')
+    // Navigate to static page using cached prefetch
+    await act(async () => {
+      await browser.elementByCss('#to-static-page').click()
+      await browser.waitForElementByCss('#static-page')
+    }, 'no-requests')
 
-    await browser
-      .elementByCss('#to-static-page')
-      .click()
-      .waitForElementByCss('#static-page')
+    // Return to the home page - reveal accordion and navigate
+    const reveal = await browser.elementByCss('#accordion-to-home')
+    await reveal.click()
+    const homeLink = await browser.waitForElementByCss('#to-home')
 
-    expect(
-      requests.filter((request) => request === '/static-page').length
-    ).toBe(1)
+    await homeLink.click()
+    await browser.waitForElementByCss('#accordion-to-static-page')
 
-    // return to the home page
-    await browser.elementByCss('#to-home').click()
+    // Reveal the static-page accordion again - should not trigger new prefetch (cache still fresh)
+    await browser.elementByCss('#accordion-to-static-page').click()
     await browser.waitForElementByCss('#to-static-page')
-    // there shouldn't be any additional prefetches
-    expect(
-      requests.filter((request) => request === '/static-page').length
-    ).toBe(1)
-
-    // navigate to the static page again
-    await browser.elementByCss('#to-static-page').click()
-    await browser.waitForElementByCss('#static-page')
 
-    // there still should only be the initial request to the static page
-    expect(
-      requests.filter((request) => request === '/static-page').length
-    ).toBe(1)
-  })
-
-  it('should calculate `_rsc` query based on `Next-Url`', async () => {
-    const browser = await next.browser('/404', browserConfigWithFixedTime)
-    let staticPageRequests: string[] = []
-
-    browser.on('request', (req) => {
-      const url = new URL(req.url())
-      if (url.toString().includes(`/static-page?${NEXT_RSC_UNION_QUERY}=`)) {
-        staticPageRequests.push(`${url.pathname}${url.search}`)
-      }
-    })
-    await browser.eval('location.href = ""/""')
-    await browser.eval(
-      `window.nd.router.prefetch(""/static-page"", {kind: ""auto""})`
-    )
-    await check(() => {
-      return staticPageRequests.length === 1
-        ? 'success'
-        : JSON.stringify(staticPageRequests)
-    }, 'success')
-
-    // Unable to clear router cache so mpa navigation
-    await browser.eval('location.href = ""/dashboard""')
-    await browser.eval(
-      `window.nd.router.prefetch(""/static-page"", {kind: ""auto""})`
-    )
-    await check(() => {
-      return staticPageRequests.length === 2
-        ? 'success'
-        : JSON.stringify(staticPageRequests)
-    }, 'success')
-
-    expect(staticPageRequests[0]).toMatch('/static-page?_rsc=')
-    expect(staticPageRequests[1]).toMatch('/static-page?_rsc=')
-    // `_rsc` does not match because it depends on the `Next-Url`
-    expect(staticPageRequests[0]).not.toBe(staticPageRequests[1])
+    // Navigate to the static page again using cached data
+    await act(async () => {
+      await browser.elementByCss('#to-static-page').click()
+      await browser.waitForElementByCss('#static-page')
+    }, 'no-requests')
   })
 
   it('should not prefetch for a bot user agent', async () => {
@@ -214,6 +172,11 @@ describe('app dir - prefetching', () => {
       )}""`
     )
 
+    // Reveal the static-page accordion
+    await browser.elementByCss('#accordion-to-static-page').click()
+    await browser.waitForElementByCss('#to-static-page')
+
+    // Hover over the link - bot agents should not trigger prefetch
     await browser.elementByCss('#to-static-page').moveTo()
 
     // check five times to ensure prefetch didn't occur
@@ -339,15 +302,36 @@ describe('app dir - prefetching', () => {
   })
 
   it('should immediately render the loading state for a dynamic segment when fetched from higher up in the tree', async () => {
-    const browser = await next.browser('/')
-    const loadingText = await browser
-      .elementById('to-dynamic-page')
-      .click()
-      .waitForElementByCss('#loading-text')
-      .text()
+    let act: ReturnType<typeof createRouterAct>
+    const browser = await next.browser('/', {
+      beforePageLoad(page) {
+        act = createRouterAct(page)
+      },
+    })
 
-    expect(loadingText).toBe('Loading Prefetch Auto')
+    // Reveal the accordion and wait for prefetch - should get loading state
+    const link = await act(
+      async () => {
+        const reveal = await browser.elementByCss('#accordion-to-dynamic-page')
+        await reveal.click()
+        await browser.waitForElementByCss('#to-dynamic-page')
+        return await browser.elementByCss('#to-dynamic-page')
+      },
+      { includes: 'Loading Prefetch Auto' }
+    )
 
+    // Click the link to navigate - should trigger dynamic data fetch
+    await act(
+      async () => {
+        await link.click()
+        await browser.waitForElementByCss('#loading-text')
+        const loadingText = await browser.elementByCss('#loading-text').text()
+        expect(loadingText).toBe('Loading Prefetch Auto')
+      },
+      { includes: 'prefetch-auto-page-data' }
+    )
+
+    // Wait for final data to appear
     await browser.waitForElementByCss('#prefetch-auto-page-data')
   })
 
@@ -372,133 +356,29 @@ describe('app dir - prefetching', () => {
     // The space encoding of the prefetch request should be the same as the href, and should not be replaced with a +
     await retry(async () => {
       expect(
-        rscRequests.filter((req) => req.includes('/?param=with%20space'))
-      ).toHaveLength(1)
+        rscRequests.filter((req) => req.includes('/?param=with%20space')).length
+      ).toBeGreaterThanOrEqual(1)
     })
 
+    const initialRequestCount = rscRequests.filter((req) =>
+      req.includes('/?param=with%20space')
+    ).length
+
     // Click the link
     await browser.elementById('prefetch-via-link').click()
 
-    // Assert that we're on the homepage
-    expect(await browser.hasElementByCssSelector('#to-dashboard')).toBe(true)
+    // Assert that we're on the homepage (check for accordion since links are hidden)
+    expect(
+      await browser.hasElementByCssSelector('#accordion-to-dashboard')
+    ).toBe(true)
 
     await browser.waitForIdleNetwork()
 
     // No new requests should be made since it is correctly prefetched
     await retry(async () => {
       expect(
-        rscRequests.filter((req) => req.includes('/?param=with%20space'))
-      ).toHaveLength(1)
-    })
-  })
-
-  describe('prefetch cache seeding', () => {
-    it('should not re-fetch the initial static page if the same page is prefetched with prefetch={true}', async () => {
-      const rscRequests = []
-      const browser = await next.browser('/static-page', {
-        beforePageLoad(page) {
-          page.on('request', async (req) => {
-            const url = new URL(req.url())
-            if (url.pathname === '/static-page' || url.pathname === '/') {
-              const headers = await req.allHeaders()
-              if (headers['rsc']) {
-                rscRequests.push(url.pathname)
-              }
-            }
-          })
-        },
-      })
-
-      expect(
-        await browser.hasElementByCssSelector('[href=""/static-page""]')
-      ).toBe(true)
-
-      // sanity check: we should see a prefetch request to the root page
-      await retry(async () => {
-        expect(rscRequests.filter((req) => req === '/').length).toBe(1)
-      })
-
-      // We shouldn't see any requests to the static page since the prefetch cache was seeded as part of the SSR render
-      await retry(async () => {
-        expect(rscRequests.filter((req) => req === '/static-page').length).toBe(
-          0
-        )
-      })
-
-      // navigate to index
-      await browser.elementByCss('[href=""/""]').click()
-
-      // we should be on the index page
-      await browser.waitForElementByCss('#to-dashboard')
-
-      // navigate to the static page
-      await browser.elementByCss('[href=""/static-page""]').click()
-
-      // we should be on the static page
-      await browser.waitForElementByCss('#static-page')
-
-      await browser.waitForIdleNetwork()
-
-      // We still shouldn't see any requests since it respects the static staletime (default 5m)
-      await retry(async () => {
-        expect(rscRequests.filter((req) => req === '/static-page').length).toBe(
-          0
-        )
-      })
-    })
-
-    it('should not re-fetch the initial dynamic page if the same page is prefetched with prefetch={true}', async () => {
-      const rscRequests = []
-      const browser = await next.browser('/dynamic-page', {
-        beforePageLoad(page) {
-          page.on('request', async (req) => {
-            const url = new URL(req.url())
-            if (url.pathname === '/dynamic-page' || url.pathname === '/') {
-              const headers = await req.allHeaders()
-              if (headers['rsc']) {
-                rscRequests.push(url.pathname)
-              }
-            }
-          })
-        },
-      })
-
-      expect(
-        await browser.hasElementByCssSelector('[href=""/dynamic-page""]')
-      ).toBe(true)
-
-      // sanity check: we should see a prefetch request to the root page
-      await retry(async () => {
-        expect(rscRequests.filter((req) => req === '/').length).toBe(1)
-      })
-
-      // We shouldn't see any requests to the dynamic page since the prefetch cache was seeded as part of the SSR render
-      await retry(async () => {
-        expect(
-          rscRequests.filter((req) => req === '/dynamic-page').length
-        ).toBe(0)
-      })
-
-      // navigate to index
-      await browser.elementByCss('[href=""/""]').click()
-
-      // we should be on the index page
-      await browser.waitForElementByCss('#to-dashboard')
-
-      // navigate to the dynamic page
-      await browser.elementByCss('[href=""/dynamic-page""]').click()
-
-      // we should be on the dynamic page
-      await browser.waitForElementByCss('#dynamic-page')
-
-      await browser.waitForIdleNetwork()
-
-      // We should see a request for the dynamic page since it respects the dynamic staletime (default 0)
-      await retry(async () => {
-        expect(
-          rscRequests.filter((req) => req === '/dynamic-page').length
-        ).toBe(1)
-      })
+        rscRequests.filter((req) => req.includes('/?param=with%20space')).length
+      ).toBe(initialRequestCount)
     })
   })
 
@@ -517,46 +397,50 @@ describe('app dir - prefetching', () => {
             .elementByCss(`[href=""${basePath}/test-page/sub-page""]`)
             .click()
 
-          await check(() => browser.hasElementByCssSelector('#sub-page'), true)
+          await retry(async () => {
+            expect(await browser.hasElementByCssSelector('#sub-page')).toBe(
+              true
+            )
+          })
 
           const newRandomNumber = await browser
             .elementById('random-number')
             .text()
 
           expect(initialRandomNumber).toBe(newRandomNumber)
 
-          await check(() => {
+          await retry(async () => {
             const logOccurrences =
               next.cliOutput.slice(logStartIndex).split('re-fetching in layout')
                 .length - 1
 
-            return logOccurrences
-          }, 1)
+            expect(logOccurrences).toBe(1)
+          })
         })
 
         it('should update search params following a link click', async () => {
           const browser = await next.browser(`${basePath}/search-params`)
-          await check(
-            () => browser.elementById('search-params-data').text(),
-            /{}/
-          )
+          await retry(async () => {
+            const text = await browser.elementById('search-params-data').text()
+            expect(text).toMatch(/{}/)
+          })
           await browser.elementByCss('[href=""?foo=true""]').click()
-          await check(
-            () => browser.elementById('search-params-data').text(),
-            /{""foo"":""true""}/
-          )
+          await retry(async () => {
+            const text = await browser.elementById('search-params-data').text()
+            expect(text).toMatch(/{""foo"":""true""}/)
+          })
           await browser
             .elementByCss(`[href=""${basePath}/search-params""]`)
             .click()
-          await check(
-            () => browser.elementById('search-params-data').text(),
-            /{}/
-          )
+          await retry(async () => {
+            const text = await browser.elementById('search-params-data').text()
+            expect(text).toMatch(/{}/)
+          })
           await browser.elementByCss('[href=""?foo=true""]').click()
-          await check(
-            () => browser.elementById('search-params-data').text(),
-            /{""foo"":""true""}/
-          )
+          await retry(async () => {
+            const text = await browser.elementById('search-params-data').text()
+            expect(text).toMatch(/{""foo"":""true""}/)
+          })
         })
       })
     })
@@ -566,14 +450,18 @@ describe('app dir - prefetching', () => {
     it('should not throw when an invalid URL is passed to Link', async () => {
       const browser = await next.browser('/invalid-url/from-link')
 
-      await check(() => browser.hasElementByCssSelector('h1'), true)
+      await retry(async () => {
+        expect(await browser.hasElementByCssSelector('h1')).toBe(true)
+      })
       expect(await browser.elementByCss('h1').text()).toEqual('Hello, world!')
     })
 
     it('should throw when an invalid URL is passed to router.prefetch', async () => {
       const browser = await next.browser('/invalid-url/from-router-prefetch')
 
-      await check(() => browser.hasElementByCssSelector('h1'), true)
+      await retry(async () => {
+        expect(await browser.hasElementByCssSelector('h1')).toBe(true)
+      })
       expect(await browser.elementByCss('h1').text()).toEqual(
         'A prefetch threw an error'
       )
@@ -598,39 +486,18 @@ describe('app dir - prefetching', () => {
         },
       })
 
+      // Reveal an accordion to trigger prefetch
+      await browser.elementByCss('#accordion-to-static-page').click()
       await browser.waitForIdleNetwork()
 
       await retry(async () => {
-        expect(requests.length).toBeGreaterThan(0)
-        expect(requests.every((req) => req.priority === 'low')).toBe(true)
-      })
-    })
-
-    it('should prefetch with high priority when navigating to a page without a prefetch entry', async () => {
-      const requests: { priority: string; url: string }[] = []
-      const browser = await next.browser('/prefetch-false/initial', {
-        beforePageLoad(page) {
-          page.on('request', async (req) => {
-            const url = new URL(req.url())
-            const headers = await req.allHeaders()
-            if (headers['rsc']) {
-              requests.push({
-                priority: headers['next-test-fetch-priority'],
-                url: url.pathname,
-              })
-            }
-          })
-        },
-      })
-
-      await browser.waitForIdleNetwork()
-
-      expect(requests.length).toBe(0)
-
-      await browser.elementByCss('#to-prefetch-false-result').click()
-      await retry(async () => {
-        expect(requests.length).toBe(1)
-        expect(requests[0].priority).toBe('high')
+        const staticPageRequests = requests.filter(
+          (req) => req.url === '/static-page'
+        )
+        expect(staticPageRequests.length).toBeGreaterThan(0)
+        expect(staticPageRequests.every((req) => req.priority === 'low')).toBe(
+          true
+        )
       })
     })
 
@@ -651,16 +518,27 @@ describe('app dir - prefetching', () => {
         },
       })
 
+      // Reveal the dashboard accordion
+      await browser.elementByCss('#accordion-to-dashboard').click()
+      await browser.waitForElementByCss('#to-dashboard')
+
+      // Click to navigate
       await browser.elementByCss('#to-dashboard').click()
       await browser.waitForIdleNetwork()
 
       await retry(async () => {
         const dashboardRequests = requests.filter(
           (req) => req.url === '/dashboard'
         )
-        expect(dashboardRequests.length).toBe(2)
-        expect(dashboardRequests[0].priority).toBe('low') // the first request is the prefetch
-        expect(dashboardRequests[1].priority).toBe('auto') // the second request is the lazy fetch to fill in missing data
+        expect(dashboardRequests.length).toBeGreaterThanOrEqual(2)
+        // Should have at least one low priority prefetch request
+        expect(dashboardRequests.some((req) => req.priority === 'low')).toBe(
+          true
+        )
+        // Should have at least one auto priority fetch to fill in missing data
+        expect(dashboardRequests.some((req) => req.priority === 'auto')).toBe(
+          true
+        )
       })
     })
 "
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/router-act.ts,504,0,504,"@@ -0,0 +1,504 @@
+import type * as Playwright from 'playwright'
+import { diff } from 'jest-diff'
+import { equals } from '@jest/expect-utils'
+
+type Batch = {
+  pendingRequestChecks: Set<Promise<void>>
+  pendingRequests: Set<PendingRSCRequest>
+}
+
+type PendingRSCRequest = {
+  url: string
+  route: Playwright.Route | null
+  result: Promise<{
+    text: string
+    body: any
+    headers: Record<string, string>
+    status: number
+  }>
+  didProcess: boolean
+}
+
+let currentBatch: Batch | null = null
+
+type ExpectedResponseConfig = { includes: string; block?: boolean | 'reject' }
+
+/**
+ * Represents the expected responses sent by the server to fulfill requests
+ * initiated by the `scope` function.
+ *
+ * - `includes` is a substring of an expected response body.
+ * - `block` indicates whether the response should not yet be sent to the
+ *   client. This option is only supported when nested inside an outer `act`
+ *   scope. The blocked response will be fulfilled when the outer
+ *   scope completes.
+ *
+ * The list of expected responses does not need to be exhaustive — any
+ * responses that don't match will proceed like normal. However, `act` will
+ * error if the expected substring is not found in any of the responses, or
+ * if the expected responses are received out of order. It will also error
+ * if the same expected substring is found in multiple responses.
+ *
+ * If no expected responses are provided, the only expectation is that at
+ * least one request is initiated. (This is the same as passing an
+ * empty array.)
+ *
+ * Alternatively, if no network activity is expected, pass ""no-requests"".
+ */
+type ActConfig =
+  | ExpectedResponseConfig
+  | Array<ExpectedResponseConfig>
+  | 'block'
+  | 'no-requests'
+  | null
+
+export function createRouterAct(
+  page: Playwright.Page
+): <T>(scope: () => Promise<T> | T, config?: ActConfig) => Promise<T> {
+  /**
+   * Test utility for requests initiated by the Next.js Router, such as
+   * prefetches and navigations. Calls the given async function then intercepts
+   * any router requests that are initiated as a result. It will then wait for
+   * all the requests to complete before exiting. Inspired by the React
+   * `act` API.
+   */
+  async function act<T>(
+    scope: () => Promise<T> | T,
+    config?: ActConfig
+  ): Promise<T> {
+    // Capture a stack trace for better async error messages.
+    const error = new Error()
+    if (Error.captureStackTrace) {
+      Error.captureStackTrace(error, act)
+    }
+
+    let expectedResponses: Array<ExpectedResponseConfig> | null
+    let forbiddenResponses: Array<ExpectedResponseConfig> | null = null
+    let shouldBlockAll = false
+    if (config === undefined || config === null) {
+      // Default. Expect at least one request, but don't assert on the response.
+      expectedResponses = []
+    } else if (config === 'block') {
+      // Expect at least one request, and block them all from being fulfilled.
+      if (currentBatch === null) {
+        error.message =
+          '`block` option only supported when nested inside an outer ' +
+          '`act` scope.'
+        throw error
+      }
+      expectedResponses = []
+      shouldBlockAll = true
+    } else if (config === 'no-requests') {
+      // Expect no requests to be initiated.
+      expectedResponses = null
+    } else if (!Array.isArray(config)) {
+      // Shortcut for a single expected response.
+      if (config.block === true && currentBatch === null) {
+        error.message =
+          '`block: true` option only supported when nested inside an outer ' +
+          '`act` scope.'
+        throw error
+      }
+      if (config.block !== 'reject') {
+        expectedResponses = [config]
+      } else {
+        expectedResponses = []
+        forbiddenResponses = [config]
+      }
+    } else {
+      expectedResponses = []
+      for (const item of config) {
+        if (item.block === true && currentBatch === null) {
+          error.message =
+            '`block: true` option only supported when nested inside an outer ' +
+            '`act` scope.'
+          throw error
+        }
+        if (item.block !== 'reject') {
+          expectedResponses.push(item)
+        } else {
+          if (forbiddenResponses === null) {
+            forbiddenResponses = [item]
+          } else {
+            forbiddenResponses.push(item)
+          }
+        }
+      }
+    }
+
+    // Attach a route handler to intercept router requests for the duration
+    // of the `act` scope. It will be removed before `act` exits.
+    let onDidIssueFirstRequest: (() => void) | null = null
+    const routeHandler = async (route: Playwright.Route) => {
+      const request = route.request()
+
+      const pendingRequests = batch.pendingRequests
+      const pendingRequestChecks = batch.pendingRequestChecks
+
+      // Because determining whether we need to intercept the request is an
+      // async operation, we collect these promises so we can await them at the
+      // end of the `act` scope to see whether any additional requests
+      // were initiated.
+      // NOTE: The default check doesn't actually need to be async, but since
+      // this logic is subtle, to preserve the ability to add an async
+      // check later, I'm treating it as if it could possibly be async.
+      const checkIfRouterRequest = (async () => {
+        const headers = request.headers()
+
+        // The default check includes navigations, prefetches, and actions.
+        const isRouterRequest =
+          headers['rsc'] !== undefined || // Matches navigations and prefetches
+          headers['next-action'] !== undefined // Matches Server Actions
+
+        if (isRouterRequest) {
+          // This request was initiated by the Next.js Router. Intercept it and
+          // add it to the current batch.
+          pendingRequests.add({
+            url: request.url(),
+            route,
+            // `act` controls the timing of when responses reach the client,
+            // but it should not affect the timing of when requests reach the
+            // server; we pass the request to the server the immediately.
+            result: new Promise(async (resolve) => {
+              const originalResponse = await page.request.fetch(request, {
+                maxRedirects: 0,
+              })
+
+              // WORKAROUND:
+              // intercepting responses with 'Transfer-Encoding: chunked' (used for streaming)
+              // seems to be problematic sometimes, making the browser error with `net::ERR_INCOMPLETE_CHUNKED_ENCODING`.
+              // In particular, this seems to happen when blocking a streaming navigation response. (but not always)
+              // Playwright buffers the whole body anyway, so we can remove the header to sidestep this.
+              const headers = originalResponse.headers()
+              delete headers['transfer-encoding']
+
+              resolve({
+                text: await originalResponse.text(),
+                body: await originalResponse.body(),
+                headers,
+                status: originalResponse.status(),
+              })
+            }),
+            didProcess: false,
+          })
+          if (onDidIssueFirstRequest !== null) {
+            onDidIssueFirstRequest()
+            onDidIssueFirstRequest = null
+          }
+          return
+        }
+        // This is some other request not related to the Next.js Router. Allow
+        // it to continue as normal.
+        route.continue()
+      })()
+
+      pendingRequestChecks.add(checkIfRouterRequest)
+      await checkIfRouterRequest
+      // Once we've read the header, we can remove it from the pending set.
+      pendingRequestChecks.delete(checkIfRouterRequest)
+    }
+
+    let didHardNavigate = false
+    const hardNavigationHandler = async () => {
+      // If a hard navigation occurs, the current batch of requests is no longer
+      // valid. In fact, Playwright will hang indefinitely if we attempt to
+      // await the response of an orphaned request. Reset the batch and unblock
+      // all the orphaned requests.
+      const orphanedRequests = batch.pendingRequests
+      batch.pendingRequests = new Set()
+      batch.pendingRequestChecks = new Set()
+      await Promise.all(
+        Array.from(orphanedRequests).map((item) => item.route.continue())
+      )
+      didHardNavigate = true
+    }
+
+    const waitForPendingRequestChecks = async () => {
+      const prevChecks = batch.pendingRequestChecks
+      batch.pendingRequestChecks = new Set()
+      await Promise.all(prevChecks)
+    }
+
+    const prevBatch = currentBatch
+    const batch: Batch = {
+      pendingRequestChecks: new Set(),
+      pendingRequests: new Set(),
+    }
+    currentBatch = batch
+    await page.route('**/*', routeHandler)
+    await page.on('framedetached', hardNavigationHandler)
+    try {
+      // Call the user-provided scope function
+      const returnValue = await scope()
+
+      // Wait until the first request is initiated, up to some timeout.
+      if (expectedResponses !== null && batch.pendingRequests.size === 0) {
+        await new Promise<void>((resolve, reject) => {
+          const timerId = setTimeout(() => {
+            error.message = 'Timed out waiting for a request to be initiated.'
+            reject(error)
+          }, 500)
+          onDidIssueFirstRequest = () => {
+            clearTimeout(timerId)
+            resolve()
+          }
+        })
+      }
+
+      // Fulfill all the requests that were initiated by the scope function. But
+      // first, wait an additional browser task. This simulates the real world
+      // behavior where the network response is received in an async event/task
+      // that comes after the scope function, rather than immediately when the
+      // scope function exits.
+      //
+      // We use requestIdleCallback to schedule the task because that's
+      // guaranteed to fire after any IntersectionObserver events, which the
+      // router uses to track the visibility of links.
+      await page.evaluate(
+        () => new Promise<void>((res) => requestIdleCallback(() => res()))
+      )
+
+      // Checking whether a request needs to be intercepted is an async
+      // operation, so we need to wait for all the checks to complete before
+      // checking whether the queue is empty.
+      await waitForPendingRequestChecks()
+
+      // Because responding to one request may unblock additional requests,
+      // keep checking for more requests until the queue has settled.
+      const remaining = new Set<PendingRSCRequest>()
+      let actualResponses: Array<ExpectedResponseConfig> = []
+      let alreadyMatched = new Map<string, string>()
+      while (batch.pendingRequests.size > 0) {
+        const pending = batch.pendingRequests
+        batch.pendingRequests = new Set()
+        for (const item of pending) {
+          const route = item.route
+          const url = item.url
+
+          let shouldBlock = false
+          const fulfilled = await item.result
+          if (item.didProcess) {
+            // This response was already processed by an inner `act` call.
+          } else {
+            item.didProcess = true
+            if (expectedResponses === null) {
+              error.message = `
+Expected no network requests to be initiated.
+
+URL: ${url}
+Headers: ${JSON.stringify(fulfilled.headers)}
+
+Response:
+${fulfilled.body}
+`
+
+              throw error
+            }
+            if (fulfilled.status >= 400) {
+              error.message = `
+Received a response with an error status code.
+
+Status: ${fulfilled.status}
+URL: ${url}
+Headers: ${JSON.stringify(fulfilled.headers)}
+
+Response:
+${fulfilled.body}
+`
+              throw error
+            }
+            if (forbiddenResponses !== null) {
+              for (const forbiddenResponse of forbiddenResponses) {
+                const includes = forbiddenResponse.includes
+                if (fulfilled.body.includes(includes)) {
+                  error.message = `
+Received a response containing an unexpected substring:
+
+Rejected substring: ${includes}
+
+Response:
+${fulfilled.body}
+`
+                  throw error
+                }
+              }
+            }
+            if (expectedResponses !== null) {
+              for (const expectedResponse of expectedResponses) {
+                const includes = expectedResponse.includes
+                const block = expectedResponse.block
+                if (fulfilled.body.includes(includes)) {
+                  // Match. Don't check yet whether the responses are received
+                  // in the expected order. Instead collect all the matches and
+                  // check at the end so we can include a diff in the
+                  // error message.
+                  const otherResponse = alreadyMatched.get(includes)
+                  if (otherResponse !== undefined) {
+                    error.message = `
+Received multiple responses containing the same expected substring.
+
+Expected substring:
+${includes}
+
+Responses:
+
+${otherResponse}
+
+${fulfilled.body}
+
+Choose a more specific substring to assert on.
+`
+                    throw error
+                  }
+                  alreadyMatched.set(includes, fulfilled.body)
+                  if (actualResponses === null) {
+                    actualResponses = [expectedResponse]
+                  } else {
+                    actualResponses.push(expectedResponse)
+                  }
+                  if (block) {
+                    shouldBlock = true
+                  }
+                  // Keep checking all the expected responses to verify there
+                  // are no duplicate matches
+                }
+              }
+            }
+          }
+
+          if (shouldBlock || shouldBlockAll) {
+            // This response was blocked by the `block` option. Don't
+            // fulfill it yet.
+            remaining.add(item)
+            if (route === null) {
+              error.message = `
+The ""block"" option is not supported for requests that are redirected.
+
+URL: ${url}
+Headers: ${JSON.stringify(fulfilled.headers)}
+
+Response:
+${fulfilled.body}
+`
+
+              throw error
+            }
+          } else {
+            if (route !== null) {
+              const request = route.request()
+              await route.fulfill({
+                body: fulfilled.body,
+                headers: fulfilled.headers,
+                status: fulfilled.status,
+              })
+              const browserResponse = await request.response()
+              if (browserResponse !== null) {
+                await browserResponse.finished()
+              }
+            }
+          }
+
+          if (fulfilled.status === 307 || fulfilled.status === 308) {
+            // When fulfilling a redirect, for some reason, the page.route()
+            // handler installed earlier will not intercept the
+            // redirect request. Install a one-off event listener to wait for
+            // the redirected request to finish. This works for this case
+            // because we don't need to modify to delay the response; we only
+            // need to observe when it has finished.
+            // TODO: Because this request cannot be intercepted, it's
+            // incompatible with the ""block"" option. I haven't yet figured out
+            // a strategy to make that work. In the meantime, attempting to
+            // write a test that blocks a redirect will result in an error
+            // (see error above).
+            await new Promise<void>((resolve) => {
+              page.once('request', (req) => {
+                const handleResponse = (res: Playwright.Response) => {
+                  if (res.url() === req.url()) {
+                    batch.pendingRequests.add({
+                      url: req.url(),
+                      route: null,
+                      result: new Promise(async (resolve) => {
+                        resolve({
+                          text: await res.text(),
+                          body: await res.body(),
+                          headers: res.headers(),
+                          status: res.status(),
+                        })
+                      }),
+                      didProcess: false,
+                    })
+                    page.off('response', handleResponse)
+                    resolve()
+                  }
+                }
+                page.on('response', handleResponse)
+              })
+            })
+          }
+        }
+
+        // After flushing the queue, wait for the microtask queue to be
+        // exhausted, then check if any additional requests are initiated. A
+        // single macrotask should be enough because if the router queue is
+        // network throttled, the next request is issued either directly within
+        // the task of the previous request's completion event, or in the
+        // microtask queue of that event.
+        await page.evaluate(
+          () => new Promise<void>((res) => requestIdleCallback(() => res()))
+        )
+
+        await waitForPendingRequestChecks()
+      }
+
+      if (didHardNavigate) {
+        error.message =
+          'A hard navigation or refresh was triggerd during the `act` scope. ' +
+          'This is not supported.'
+        throw error
+      }
+
+      if (expectedResponses !== null) {
+        // Assert that the responses were received in the expected order
+        if (!equals(actualResponses, expectedResponses)) {
+          // Print a helpful error message.
+
+          if (expectedResponses.length === 1) {
+            error.message =
+              'Expected a response containing the given string:\n\n' +
+              expectedResponses[0].includes +
+              '\n'
+          } else {
+            const expectedSubstrings = expectedResponses.map(
+              (item) => item.includes
+            )
+            const actualSubstrings = actualResponses.map(
+              (item) => item.includes
+            )
+            error.message =
+              'Expected sequence of responses does not match:\n\n' +
+              diff(expectedSubstrings, actualSubstrings) +
+              '\n'
+          }
+          throw error
+        }
+      }
+
+      // Some of the requests were blocked. Transfer them to the outer `act`
+      // batch so it can flush them.
+      if (remaining.size !== 0 && prevBatch !== null) {
+        for (const item of remaining) {
+          prevBatch.pendingRequests.add(item)
+        }
+      }
+
+      return returnValue
+    } finally {
+      // Clean up
+      currentBatch = prevBatch
+      await page.unroute('**/*', routeHandler)
+      await page.off('framedetached', hardNavigationHandler)
+    }
+  }
+
+  return act
+}"
vercel/next.js,9c053332ccbc17220982f169b94c7cbdca0a648e,Zack Tanner,2025-10-06T19:12:11Z,"[test]: convert prefetching tests to be segmentCache compatible (#84521)

Refactors some older prefetching tests to be compatible with
`clientSegmentCache`. The old tests were too tightly coupled to router
implementation details. Some of the ones that don't make sense to
convert were removed (for ex, asserting on prefetch cache seeding
behavior, or fetch priority of ""high"", as fetch priority is managed
differently with the new router).

This refactors the tests to leverage the `act` util from `segment-cache`
test suites, and implemented the accordion behavior to more granularly
control when prefetches are dispatched. I copied those implementations
for now since we don't have a global util for it.",test/e2e/app-dir/app-prefetch/test-utils.ts,108,0,108,"@@ -0,0 +1,108 @@
+export function createTimeController() {
+  let fixedTime = Date.now()
+
+  return {
+    install: (browser) => {
+      return browser.eval(`
+        (() => {
+          const OriginalDate = Date;
+          const originalSetTimeout = globalThis.setTimeout;
+          const originalSetInterval = globalThis.setInterval;
+          const originalClearTimeout = globalThis.clearTimeout;
+          const originalClearInterval = globalThis.clearInterval;
+
+          let fixedTime = ${fixedTime};
+          let timerIdCounter = 1;
+          const timers = new Map();
+
+          // Override the Date constructor
+          globalThis.Date = class extends OriginalDate {
+            constructor(...args) {
+              if (args.length === 0) {
+                super(fixedTime);
+              } else {
+                super(...args);
+              }
+            }
+
+            static now() {
+              return fixedTime;
+            }
+          };
+
+          // Preserve static methods
+          Object.setPrototypeOf(globalThis.Date, OriginalDate);
+
+          // Override setTimeout
+          globalThis.setTimeout = function(callback, delay, ...args) {
+            const id = timerIdCounter++;
+            timers.set(id, {
+              callback,
+              args,
+              fireTime: fixedTime + (delay || 0),
+              interval: false
+            });
+            return id;
+          };
+
+          // Override setInterval
+          globalThis.setInterval = function(callback, delay, ...args) {
+            const id = timerIdCounter++;
+            timers.set(id, {
+              callback,
+              args,
+              fireTime: fixedTime + (delay || 0),
+              interval: true,
+              delay: delay || 0
+            });
+            return id;
+          };
+
+          // Override clearTimeout
+          globalThis.clearTimeout = function(id) {
+            timers.delete(id);
+          };
+
+          // Override clearInterval
+          globalThis.clearInterval = function(id) {
+            timers.delete(id);
+          };
+
+          // Add method to advance time
+          globalThis.__advanceTime = (ms) => {
+            fixedTime += ms;
+
+            // Fire any timers that should have fired
+            const toFire = [];
+            for (const [id, timer] of timers.entries()) {
+              if (timer.fireTime <= fixedTime) {
+                toFire.push({ id, timer });
+              }
+            }
+
+            for (const { id, timer } of toFire) {
+              try {
+                timer.callback(...timer.args);
+              } catch (e) {
+                console.error('Timer callback error:', e);
+              }
+
+              if (timer.interval) {
+                // Reschedule interval timer
+                timer.fireTime = fixedTime + timer.delay;
+              } else {
+                // Remove one-time timer
+                timers.delete(id);
+              }
+            }
+          };
+        })();
+      `)
+    },
+
+    advance: async (browser, ms: number) => {
+      fixedTime += ms
+      await browser.eval(`globalThis.__advanceTime(${ms})`)
+    },
+  }
+}"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",package.json,16,16,32,"@@ -199,7 +199,7 @@
     ""eslint-plugin-jsdoc"": ""48.0.4"",
     ""eslint-plugin-mdx"": ""3.1.5"",
     ""eslint-plugin-react"": ""7.35.0"",
-    ""eslint-plugin-react-hooks"": ""0.0.0-experimental-4fdf7cf2-20251003"",
+    ""eslint-plugin-react-hooks"": ""0.0.0-experimental-c7862584-20251006"",
     ""eslint-v8"": ""npm:eslint@^8.57.0"",
     ""event-stream"": ""4.0.1"",
     ""execa"": ""2.0.3"",
@@ -259,16 +259,16 @@
     ""pretty-ms"": ""7.0.0"",
     ""random-seed"": ""0.3.0"",
     ""react"": ""19.0.0"",
-    ""react-builtin"": ""npm:react@19.3.0-canary-4fdf7cf2-20251003"",
+    ""react-builtin"": ""npm:react@19.3.0-canary-c7862584-20251006"",
     ""react-dom"": ""19.0.0"",
-    ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-4fdf7cf2-20251003"",
-    ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-4fdf7cf2-20251003"",
-    ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-4fdf7cf2-20251003"",
-    ""react-is-builtin"": ""npm:react-is@19.3.0-canary-4fdf7cf2-20251003"",
-    ""react-server-dom-turbopack"": ""19.3.0-canary-4fdf7cf2-20251003"",
-    ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-4fdf7cf2-20251003"",
-    ""react-server-dom-webpack"": ""19.3.0-canary-4fdf7cf2-20251003"",
-    ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-4fdf7cf2-20251003"",
+    ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-c7862584-20251006"",
+    ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-c7862584-20251006"",
+    ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-c7862584-20251006"",
+    ""react-is-builtin"": ""npm:react-is@19.3.0-canary-c7862584-20251006"",
+    ""react-server-dom-turbopack"": ""19.3.0-canary-c7862584-20251006"",
+    ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-c7862584-20251006"",
+    ""react-server-dom-webpack"": ""19.3.0-canary-c7862584-20251006"",
+    ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-c7862584-20251006"",
     ""react-ssr-prepass"": ""1.0.8"",
     ""react-virtualized"": ""9.22.3"",
     ""relay-compiler"": ""13.0.2"",
@@ -278,8 +278,8 @@
     ""resolve-from"": ""5.0.0"",
     ""sass"": ""1.54.0"",
     ""satori"": ""0.15.2"",
-    ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-4fdf7cf2-20251003"",
-    ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-4fdf7cf2-20251003"",
+    ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-c7862584-20251006"",
+    ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-c7862584-20251006"",
     ""seedrandom"": ""3.0.5"",
     ""semver"": ""7.3.7"",
     ""serve-handler"": ""6.1.6"",
@@ -323,10 +323,10 @@
       ""@types/react-dom"": ""19.1.10"",
       ""@types/retry"": ""0.12.0"",
       ""jest-snapshot"": ""30.0.0-alpha.6"",
-      ""react"": ""19.3.0-canary-4fdf7cf2-20251003"",
-      ""react-dom"": ""19.3.0-canary-4fdf7cf2-20251003"",
-      ""react-is"": ""19.3.0-canary-4fdf7cf2-20251003"",
-      ""scheduler"": ""0.28.0-canary-4fdf7cf2-20251003""
+      ""react"": ""19.3.0-canary-c7862584-20251006"",
+      ""react-dom"": ""19.3.0-canary-c7862584-20251006"",
+      ""react-is"": ""19.3.0-canary-c7862584-20251006"",
+      ""scheduler"": ""0.28.0-canary-c7862584-20251006""
     },
     ""packageExtensions"": {
       ""eslint-plugin-react-hooks@0.0.0-experimental-6de32a5a-20250822"": {"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-client.development.js,186,121,307,"@@ -3869,7 +3869,11 @@
           : eventClass;
     }
     function getArrayKind(array) {
-      for (var kind = EMPTY_ARRAY, i = 0; i < array.length; i++) {
+      for (
+        var kind = EMPTY_ARRAY, i = 0;
+        i < array.length && i < OBJECT_WIDTH_LIMIT;
+        i++
+      ) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -3894,10 +3898,26 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          addedProperties >= OBJECT_WIDTH_LIMIT)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -3944,57 +3964,77 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  key >= OBJECT_WIDTH_LIMIT)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                propKey === PRIMITIVE_ARRAY || propKey === EMPTY_ARRAY)
+                ((typeName = value.length > OBJECT_WIDTH_LIMIT),
+                (key = getArrayKind(value)),
+                key === PRIMITIVE_ARRAY || key === EMPTY_ARRAY)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName
+                    ? value.slice(0, OBJECT_WIDTH_LIMIT).concat(""\u2026"")
+                    : value
+                );
                 break;
-              } else if (propKey === ENTRIES_ARRAY) {
+              } else if (key === ENTRIES_ARRAY) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length &&
+                  propertyName < OBJECT_WIDTH_LIMIT;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    OBJECT_WIDTH_LIMIT.toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -4034,13 +4074,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);
@@ -4068,100 +4108,122 @@
       ]);
     }
     function addObjectDiffToProperties(prev, next, properties, indent) {
-      var isDeeplyEqual = !0;
-      for (key in prev)
+      var isDeeplyEqual = !0,
+        prevPropertiesChecked = 0;
+      for (key in prev) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Previous object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         key in next ||
           (properties.push([
             REMOVED + ""\u00a0\u00a0"".repeat(indent) + key,
             ""\u2026""
           ]),
           (isDeeplyEqual = !1));
-      for (var _key in next)
+        prevPropertiesChecked++;
+      }
+      prevPropertiesChecked = 0;
+      for (var _key in next) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Next object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         if (_key in prev) {
           var key = prev[_key];
           var nextValue = next[_key];
           if (key !== nextValue) {
-            if (0 === indent && ""children"" === _key)
-              (isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key),
-                properties.push(
-                  [REMOVED + isDeeplyEqual, ""\u2026""],
-                  [ADDED + isDeeplyEqual, ""\u2026""]
-                );
-            else {
-              if (!(3 <= indent))
-                if (
-                  ""object"" === typeof key &&
-                  ""object"" === typeof nextValue &&
-                  null !== key &&
-                  null !== nextValue &&
-                  key.$$typeof === nextValue.$$typeof
-                )
-                  if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
-                    if (
-                      key.type === nextValue.type &&
-                      key.key === nextValue.key
-                    ) {
-                      key =
-                        getComponentNameFromType(nextValue.type) || ""\u2026"";
-                      isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
-                      key = ""<"" + key + "" \u2026 />"";
-                      properties.push(
-                        [REMOVED + isDeeplyEqual, key],
-                        [ADDED + isDeeplyEqual, key]
-                      );
-                      isDeeplyEqual = !1;
-                      continue;
-                    }
-                  } else {
-                    var prevKind = Object.prototype.toString.call(key),
-                      nextKind = Object.prototype.toString.call(nextValue);
-                    if (
-                      prevKind === nextKind &&
-                      (""[object Object]"" === nextKind ||
-                        ""[object Array]"" === nextKind)
-                    ) {
-                      prevKind = [
-                        UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                        ""[object Array]"" === nextKind ? ""Array"" : """"
-                      ];
-                      properties.push(prevKind);
-                      nextKind = properties.length;
-                      addObjectDiffToProperties(
-                        key,
-                        nextValue,
-                        properties,
-                        indent + 1
-                      )
-                        ? nextKind === properties.length &&
-                          (prevKind[1] =
-                            ""Referentially unequal but deeply equal objects. Consider memoization."")
-                        : (isDeeplyEqual = !1);
-                      continue;
-                    }
+            if (0 === indent && ""children"" === _key) {
+              isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+              properties.push(
+                [REMOVED + isDeeplyEqual, ""\u2026""],
+                [ADDED + isDeeplyEqual, ""\u2026""]
+              );
+              isDeeplyEqual = !1;
+              continue;
+            }
+            if (!(3 <= indent))
+              if (
+                ""object"" === typeof key &&
+                ""object"" === typeof nextValue &&
+                null !== key &&
+                null !== nextValue &&
+                key.$$typeof === nextValue.$$typeof
+              )
+                if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
+                  if (
+                    key.type === nextValue.type &&
+                    key.key === nextValue.key
+                  ) {
+                    key = getComponentNameFromType(nextValue.type) || ""\u2026"";
+                    isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+                    key = ""<"" + key + "" \u2026 />"";
+                    properties.push(
+                      [REMOVED + isDeeplyEqual, key],
+                      [ADDED + isDeeplyEqual, key]
+                    );
+                    isDeeplyEqual = !1;
+                    continue;
+                  }
+                } else {
+                  var prevKind = Object.prototype.toString.call(key),
+                    nextKind = Object.prototype.toString.call(nextValue);
+                  if (
+                    prevKind === nextKind &&
+                    (""[object Object]"" === nextKind ||
+                      ""[object Array]"" === nextKind)
+                  ) {
+                    prevKind = [
+                      UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                      ""[object Array]"" === nextKind ? ""Array"" : """"
+                    ];
+                    properties.push(prevKind);
+                    nextKind = properties.length;
+                    addObjectDiffToProperties(
+                      key,
+                      nextValue,
+                      properties,
+                      indent + 1
+                    )
+                      ? nextKind === properties.length &&
+                        (prevKind[1] =
+                          ""Referentially unequal but deeply equal objects. Consider memoization."")
+                      : (isDeeplyEqual = !1);
+                    continue;
                   }
-                else if (
-                  ""function"" === typeof key &&
-                  ""function"" === typeof nextValue &&
-                  key.name === nextValue.name &&
-                  key.length === nextValue.length &&
-                  ((prevKind = Function.prototype.toString.call(key)),
-                  (nextKind = Function.prototype.toString.call(nextValue)),
-                  prevKind === nextKind)
-                ) {
-                  key =
-                    """" === nextValue.name
-                      ? ""() => {}""
-                      : nextValue.name + ""() {}"";
-                  properties.push([
-                    UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                    key +
-                      "" Referentially unequal function closure. Consider memoization.""
-                  ]);
-                  continue;
                 }
-              addValueToProperties(_key, key, properties, indent, REMOVED);
-              addValueToProperties(_key, nextValue, properties, indent, ADDED);
-            }
+              else if (
+                ""function"" === typeof key &&
+                ""function"" === typeof nextValue &&
+                key.name === nextValue.name &&
+                key.length === nextValue.length &&
+                ((prevKind = Function.prototype.toString.call(key)),
+                (nextKind = Function.prototype.toString.call(nextValue)),
+                prevKind === nextKind)
+              ) {
+                key =
+                  """" === nextValue.name ? ""() => {}"" : nextValue.name + ""() {}"";
+                properties.push([
+                  UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                  key +
+                    "" Referentially unequal function closure. Consider memoization.""
+                ]);
+                continue;
+              }
+            addValueToProperties(_key, key, properties, indent, REMOVED);
+            addValueToProperties(_key, nextValue, properties, indent, ADDED);
             isDeeplyEqual = !1;
           }
         } else
@@ -4170,6 +4232,8 @@
             ""\u2026""
           ]),
             (isDeeplyEqual = !1);
+        prevPropertiesChecked++;
+      }
       return isDeeplyEqual;
     }
     function setCurrentTrackFromLanes(lanes) {
@@ -29432,6 +29496,7 @@
       COMPLEX_ARRAY = 1,
       PRIMITIVE_ARRAY = 2,
       ENTRIES_ARRAY = 3,
+      OBJECT_WIDTH_LIMIT = 100,
       REMOVED = ""\u2013\u00a0"",
       ADDED = ""+\u00a0"",
       UNCHANGED = ""\u2007\u00a0"",
@@ -32277,11 +32342,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -32318,10 +32383,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-experimental-4fdf7cf2-20251003"",
+          version: ""19.3.0-experimental-c7862584-20251006"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
+          reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -32469,7 +32534,7 @@
       listenToAllSupportedEvents(container);
       return new ReactDOMHydrationRoot(initialChildren);
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-client.production.js,5,5,10,"@@ -19570,14 +19570,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2217 = React.version;
 if (
-  ""19.3.0-experimental-4fdf7cf2-20251003"" !==
+  ""19.3.0-experimental-c7862584-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_2217
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2217,
-      ""19.3.0-experimental-4fdf7cf2-20251003""
+      ""19.3.0-experimental-c7862584-20251006""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -19599,10 +19599,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2914 = {
   bundleType: 0,
-  version: ""19.3.0-experimental-4fdf7cf2-20251003"",
+  version: ""19.3.0-experimental-c7862584-20251006"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
+  reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2915 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -19709,4 +19709,4 @@ exports.hydrateRoot = function (container, initialChildren, options) {
   listenToAllSupportedEvents(container);
   return new ReactDOMHydrationRoot(initialChildren);
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-profiling.development.js,186,121,307,"@@ -3877,7 +3877,11 @@
           : eventClass;
     }
     function getArrayKind(array) {
-      for (var kind = EMPTY_ARRAY, i = 0; i < array.length; i++) {
+      for (
+        var kind = EMPTY_ARRAY, i = 0;
+        i < array.length && i < OBJECT_WIDTH_LIMIT;
+        i++
+      ) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -3902,10 +3906,26 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          addedProperties >= OBJECT_WIDTH_LIMIT)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -3952,57 +3972,77 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  key >= OBJECT_WIDTH_LIMIT)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                propKey === PRIMITIVE_ARRAY || propKey === EMPTY_ARRAY)
+                ((typeName = value.length > OBJECT_WIDTH_LIMIT),
+                (key = getArrayKind(value)),
+                key === PRIMITIVE_ARRAY || key === EMPTY_ARRAY)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName
+                    ? value.slice(0, OBJECT_WIDTH_LIMIT).concat(""\u2026"")
+                    : value
+                );
                 break;
-              } else if (propKey === ENTRIES_ARRAY) {
+              } else if (key === ENTRIES_ARRAY) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length &&
+                  propertyName < OBJECT_WIDTH_LIMIT;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    OBJECT_WIDTH_LIMIT.toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -4042,13 +4082,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);
@@ -4076,100 +4116,122 @@
       ]);
     }
     function addObjectDiffToProperties(prev, next, properties, indent) {
-      var isDeeplyEqual = !0;
-      for (key in prev)
+      var isDeeplyEqual = !0,
+        prevPropertiesChecked = 0;
+      for (key in prev) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Previous object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         key in next ||
           (properties.push([
             REMOVED + ""\u00a0\u00a0"".repeat(indent) + key,
             ""\u2026""
           ]),
           (isDeeplyEqual = !1));
-      for (var _key in next)
+        prevPropertiesChecked++;
+      }
+      prevPropertiesChecked = 0;
+      for (var _key in next) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Next object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         if (_key in prev) {
           var key = prev[_key];
           var nextValue = next[_key];
           if (key !== nextValue) {
-            if (0 === indent && ""children"" === _key)
-              (isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key),
-                properties.push(
-                  [REMOVED + isDeeplyEqual, ""\u2026""],
-                  [ADDED + isDeeplyEqual, ""\u2026""]
-                );
-            else {
-              if (!(3 <= indent))
-                if (
-                  ""object"" === typeof key &&
-                  ""object"" === typeof nextValue &&
-                  null !== key &&
-                  null !== nextValue &&
-                  key.$$typeof === nextValue.$$typeof
-                )
-                  if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
-                    if (
-                      key.type === nextValue.type &&
-                      key.key === nextValue.key
-                    ) {
-                      key =
-                        getComponentNameFromType(nextValue.type) || ""\u2026"";
-                      isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
-                      key = ""<"" + key + "" \u2026 />"";
-                      properties.push(
-                        [REMOVED + isDeeplyEqual, key],
-                        [ADDED + isDeeplyEqual, key]
-                      );
-                      isDeeplyEqual = !1;
-                      continue;
-                    }
-                  } else {
-                    var prevKind = Object.prototype.toString.call(key),
-                      nextKind = Object.prototype.toString.call(nextValue);
-                    if (
-                      prevKind === nextKind &&
-                      (""[object Object]"" === nextKind ||
-                        ""[object Array]"" === nextKind)
-                    ) {
-                      prevKind = [
-                        UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                        ""[object Array]"" === nextKind ? ""Array"" : """"
-                      ];
-                      properties.push(prevKind);
-                      nextKind = properties.length;
-                      addObjectDiffToProperties(
-                        key,
-                        nextValue,
-                        properties,
-                        indent + 1
-                      )
-                        ? nextKind === properties.length &&
-                          (prevKind[1] =
-                            ""Referentially unequal but deeply equal objects. Consider memoization."")
-                        : (isDeeplyEqual = !1);
-                      continue;
-                    }
+            if (0 === indent && ""children"" === _key) {
+              isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+              properties.push(
+                [REMOVED + isDeeplyEqual, ""\u2026""],
+                [ADDED + isDeeplyEqual, ""\u2026""]
+              );
+              isDeeplyEqual = !1;
+              continue;
+            }
+            if (!(3 <= indent))
+              if (
+                ""object"" === typeof key &&
+                ""object"" === typeof nextValue &&
+                null !== key &&
+                null !== nextValue &&
+                key.$$typeof === nextValue.$$typeof
+              )
+                if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
+                  if (
+                    key.type === nextValue.type &&
+                    key.key === nextValue.key
+                  ) {
+                    key = getComponentNameFromType(nextValue.type) || ""\u2026"";
+                    isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+                    key = ""<"" + key + "" \u2026 />"";
+                    properties.push(
+                      [REMOVED + isDeeplyEqual, key],
+                      [ADDED + isDeeplyEqual, key]
+                    );
+                    isDeeplyEqual = !1;
+                    continue;
+                  }
+                } else {
+                  var prevKind = Object.prototype.toString.call(key),
+                    nextKind = Object.prototype.toString.call(nextValue);
+                  if (
+                    prevKind === nextKind &&
+                    (""[object Object]"" === nextKind ||
+                      ""[object Array]"" === nextKind)
+                  ) {
+                    prevKind = [
+                      UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                      ""[object Array]"" === nextKind ? ""Array"" : """"
+                    ];
+                    properties.push(prevKind);
+                    nextKind = properties.length;
+                    addObjectDiffToProperties(
+                      key,
+                      nextValue,
+                      properties,
+                      indent + 1
+                    )
+                      ? nextKind === properties.length &&
+                        (prevKind[1] =
+                          ""Referentially unequal but deeply equal objects. Consider memoization."")
+                      : (isDeeplyEqual = !1);
+                    continue;
                   }
-                else if (
-                  ""function"" === typeof key &&
-                  ""function"" === typeof nextValue &&
-                  key.name === nextValue.name &&
-                  key.length === nextValue.length &&
-                  ((prevKind = Function.prototype.toString.call(key)),
-                  (nextKind = Function.prototype.toString.call(nextValue)),
-                  prevKind === nextKind)
-                ) {
-                  key =
-                    """" === nextValue.name
-                      ? ""() => {}""
-                      : nextValue.name + ""() {}"";
-                  properties.push([
-                    UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                    key +
-                      "" Referentially unequal function closure. Consider memoization.""
-                  ]);
-                  continue;
                 }
-              addValueToProperties(_key, key, properties, indent, REMOVED);
-              addValueToProperties(_key, nextValue, properties, indent, ADDED);
-            }
+              else if (
+                ""function"" === typeof key &&
+                ""function"" === typeof nextValue &&
+                key.name === nextValue.name &&
+                key.length === nextValue.length &&
+                ((prevKind = Function.prototype.toString.call(key)),
+                (nextKind = Function.prototype.toString.call(nextValue)),
+                prevKind === nextKind)
+              ) {
+                key =
+                  """" === nextValue.name ? ""() => {}"" : nextValue.name + ""() {}"";
+                properties.push([
+                  UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                  key +
+                    "" Referentially unequal function closure. Consider memoization.""
+                ]);
+                continue;
+              }
+            addValueToProperties(_key, key, properties, indent, REMOVED);
+            addValueToProperties(_key, nextValue, properties, indent, ADDED);
             isDeeplyEqual = !1;
           }
         } else
@@ -4178,6 +4240,8 @@
             ""\u2026""
           ]),
             (isDeeplyEqual = !1);
+        prevPropertiesChecked++;
+      }
       return isDeeplyEqual;
     }
     function setCurrentTrackFromLanes(lanes) {
@@ -29484,6 +29548,7 @@
       COMPLEX_ARRAY = 1,
       PRIMITIVE_ARRAY = 2,
       ENTRIES_ARRAY = 3,
+      OBJECT_WIDTH_LIMIT = 100,
       REMOVED = ""\u2013\u00a0"",
       ADDED = ""+\u00a0"",
       UNCHANGED = ""\u2007\u00a0"",
@@ -32329,11 +32394,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -32370,10 +32435,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-experimental-4fdf7cf2-20251003"",
+          version: ""19.3.0-experimental-c7862584-20251006"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
+          reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -32851,7 +32916,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-profiling.profiling.js,5,5,10,"@@ -21624,14 +21624,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2513 = React.version;
 if (
-  ""19.3.0-experimental-4fdf7cf2-20251003"" !==
+  ""19.3.0-experimental-c7862584-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_2513
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2513,
-      ""19.3.0-experimental-4fdf7cf2-20251003""
+      ""19.3.0-experimental-c7862584-20251006""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -21653,10 +21653,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_3223 = {
   bundleType: 0,
-  version: ""19.3.0-experimental-4fdf7cf2-20251003"",
+  version: ""19.3.0-experimental-c7862584-20251006"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
+  reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_3224 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -21924,7 +21924,7 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";
 ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
   ""function"" ===
     typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.browser.development.js,1,1,2,"@@ -10544,5 +10544,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.browser.production.js,1,1,2,"@@ -7157,4 +7157,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.node.development.js,1,1,2,"@@ -10544,5 +10544,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.node.production.js,1,1,2,"@@ -7260,4 +7260,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.browser.development.js,3,3,6,"@@ -9537,11 +9537,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react-experimental""),
@@ -11365,5 +11365,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.browser.production.js,3,3,6,"@@ -7828,12 +7828,12 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       formatProdErrorMessage(
         527,
         isomorphicReactPackageVersion,
-        ""19.3.0-experimental-4fdf7cf2-20251003""
+        ""19.3.0-experimental-c7862584-20251006""
       )
     );
 }
@@ -8088,4 +8088,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.bun.production.js,3,3,6,"@@ -7316,13 +7316,13 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
 }
 var isomorphicReactPackageVersion$jscomp$inline_871 = React.version;
 if (
-  ""19.3.0-experimental-4fdf7cf2-20251003"" !==
+  ""19.3.0-experimental-c7862584-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_871
 )
   throw Error(
     'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
       (isomorphicReactPackageVersion$jscomp$inline_871 +
-        ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+        ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -7413,4 +7413,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.edge.development.js,3,3,6,"@@ -9566,11 +9566,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react-experimental""),
@@ -11390,5 +11390,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.edge.production.js,3,3,6,"@@ -7946,11 +7946,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -8204,4 +8204,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.node.development.js,3,3,6,"@@ -9426,11 +9426,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     function createDrainHandler(destination, request) {
@@ -11560,5 +11560,5 @@
         }
       };
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.node.production.js,3,3,6,"@@ -7825,11 +7825,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -8387,4 +8387,4 @@ exports.resumeToPipeableStream = function (children, postponedState, options) {
     }
   };
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-unstable_testing.development.js,186,121,307,"@@ -3910,7 +3910,11 @@
           : eventClass;
     }
     function getArrayKind(array) {
-      for (var kind = EMPTY_ARRAY, i = 0; i < array.length; i++) {
+      for (
+        var kind = EMPTY_ARRAY, i = 0;
+        i < array.length && i < OBJECT_WIDTH_LIMIT;
+        i++
+      ) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -3935,10 +3939,26 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          addedProperties >= OBJECT_WIDTH_LIMIT)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -3985,57 +4005,77 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  key >= OBJECT_WIDTH_LIMIT)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                propKey === PRIMITIVE_ARRAY || propKey === EMPTY_ARRAY)
+                ((typeName = value.length > OBJECT_WIDTH_LIMIT),
+                (key = getArrayKind(value)),
+                key === PRIMITIVE_ARRAY || key === EMPTY_ARRAY)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName
+                    ? value.slice(0, OBJECT_WIDTH_LIMIT).concat(""\u2026"")
+                    : value
+                );
                 break;
-              } else if (propKey === ENTRIES_ARRAY) {
+              } else if (key === ENTRIES_ARRAY) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length &&
+                  propertyName < OBJECT_WIDTH_LIMIT;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    OBJECT_WIDTH_LIMIT.toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -4075,13 +4115,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);
@@ -4109,100 +4149,122 @@
       ]);
     }
     function addObjectDiffToProperties(prev, next, properties, indent) {
-      var isDeeplyEqual = !0;
-      for (key in prev)
+      var isDeeplyEqual = !0,
+        prevPropertiesChecked = 0;
+      for (key in prev) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Previous object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         key in next ||
           (properties.push([
             REMOVED + ""\u00a0\u00a0"".repeat(indent) + key,
             ""\u2026""
           ]),
           (isDeeplyEqual = !1));
-      for (var _key in next)
+        prevPropertiesChecked++;
+      }
+      prevPropertiesChecked = 0;
+      for (var _key in next) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Next object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         if (_key in prev) {
           var key = prev[_key];
           var nextValue = next[_key];
           if (key !== nextValue) {
-            if (0 === indent && ""children"" === _key)
-              (isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key),
-                properties.push(
-                  [REMOVED + isDeeplyEqual, ""\u2026""],
-                  [ADDED + isDeeplyEqual, ""\u2026""]
-                );
-            else {
-              if (!(3 <= indent))
-                if (
-                  ""object"" === typeof key &&
-                  ""object"" === typeof nextValue &&
-                  null !== key &&
-                  null !== nextValue &&
-                  key.$$typeof === nextValue.$$typeof
-                )
-                  if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
-                    if (
-                      key.type === nextValue.type &&
-                      key.key === nextValue.key
-                    ) {
-                      key =
-                        getComponentNameFromType(nextValue.type) || ""\u2026"";
-                      isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
-                      key = ""<"" + key + "" \u2026 />"";
-                      properties.push(
-                        [REMOVED + isDeeplyEqual, key],
-                        [ADDED + isDeeplyEqual, key]
-                      );
-                      isDeeplyEqual = !1;
-                      continue;
-                    }
-                  } else {
-                    var prevKind = Object.prototype.toString.call(key),
-                      nextKind = Object.prototype.toString.call(nextValue);
-                    if (
-                      prevKind === nextKind &&
-                      (""[object Object]"" === nextKind ||
-                        ""[object Array]"" === nextKind)
-                    ) {
-                      prevKind = [
-                        UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                        ""[object Array]"" === nextKind ? ""Array"" : """"
-                      ];
-                      properties.push(prevKind);
-                      nextKind = properties.length;
-                      addObjectDiffToProperties(
-                        key,
-                        nextValue,
-                        properties,
-                        indent + 1
-                      )
-                        ? nextKind === properties.length &&
-                          (prevKind[1] =
-                            ""Referentially unequal but deeply equal objects. Consider memoization."")
-                        : (isDeeplyEqual = !1);
-                      continue;
-                    }
+            if (0 === indent && ""children"" === _key) {
+              isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+              properties.push(
+                [REMOVED + isDeeplyEqual, ""\u2026""],
+                [ADDED + isDeeplyEqual, ""\u2026""]
+              );
+              isDeeplyEqual = !1;
+              continue;
+            }
+            if (!(3 <= indent))
+              if (
+                ""object"" === typeof key &&
+                ""object"" === typeof nextValue &&
+                null !== key &&
+                null !== nextValue &&
+                key.$$typeof === nextValue.$$typeof
+              )
+                if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
+                  if (
+                    key.type === nextValue.type &&
+                    key.key === nextValue.key
+                  ) {
+                    key = getComponentNameFromType(nextValue.type) || ""\u2026"";
+                    isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+                    key = ""<"" + key + "" \u2026 />"";
+                    properties.push(
+                      [REMOVED + isDeeplyEqual, key],
+                      [ADDED + isDeeplyEqual, key]
+                    );
+                    isDeeplyEqual = !1;
+                    continue;
+                  }
+                } else {
+                  var prevKind = Object.prototype.toString.call(key),
+                    nextKind = Object.prototype.toString.call(nextValue);
+                  if (
+                    prevKind === nextKind &&
+                    (""[object Object]"" === nextKind ||
+                      ""[object Array]"" === nextKind)
+                  ) {
+                    prevKind = [
+                      UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                      ""[object Array]"" === nextKind ? ""Array"" : """"
+                    ];
+                    properties.push(prevKind);
+                    nextKind = properties.length;
+                    addObjectDiffToProperties(
+                      key,
+                      nextValue,
+                      properties,
+                      indent + 1
+                    )
+                      ? nextKind === properties.length &&
+                        (prevKind[1] =
+                          ""Referentially unequal but deeply equal objects. Consider memoization."")
+                      : (isDeeplyEqual = !1);
+                    continue;
                   }
-                else if (
-                  ""function"" === typeof key &&
-                  ""function"" === typeof nextValue &&
-                  key.name === nextValue.name &&
-                  key.length === nextValue.length &&
-                  ((prevKind = Function.prototype.toString.call(key)),
-                  (nextKind = Function.prototype.toString.call(nextValue)),
-                  prevKind === nextKind)
-                ) {
-                  key =
-                    """" === nextValue.name
-                      ? ""() => {}""
-                      : nextValue.name + ""() {}"";
-                  properties.push([
-                    UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                    key +
-                      "" Referentially unequal function closure. Consider memoization.""
-                  ]);
-                  continue;
                 }
-              addValueToProperties(_key, key, properties, indent, REMOVED);
-              addValueToProperties(_key, nextValue, properties, indent, ADDED);
-            }
+              else if (
+                ""function"" === typeof key &&
+                ""function"" === typeof nextValue &&
+                key.name === nextValue.name &&
+                key.length === nextValue.length &&
+                ((prevKind = Function.prototype.toString.call(key)),
+                (nextKind = Function.prototype.toString.call(nextValue)),
+                prevKind === nextKind)
+              ) {
+                key =
+                  """" === nextValue.name ? ""() => {}"" : nextValue.name + ""() {}"";
+                properties.push([
+                  UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                  key +
+                    "" Referentially unequal function closure. Consider memoization.""
+                ]);
+                continue;
+              }
+            addValueToProperties(_key, key, properties, indent, REMOVED);
+            addValueToProperties(_key, nextValue, properties, indent, ADDED);
             isDeeplyEqual = !1;
           }
         } else
@@ -4211,6 +4273,8 @@
             ""\u2026""
           ]),
             (isDeeplyEqual = !1);
+        prevPropertiesChecked++;
+      }
       return isDeeplyEqual;
     }
     function setCurrentTrackFromLanes(lanes) {
@@ -29748,6 +29812,7 @@
       COMPLEX_ARRAY = 1,
       PRIMITIVE_ARRAY = 2,
       ENTRIES_ARRAY = 3,
+      OBJECT_WIDTH_LIMIT = 100,
       REMOVED = ""\u2013\u00a0"",
       ADDED = ""+\u00a0"",
       UNCHANGED = ""\u2007\u00a0"",
@@ -32598,11 +32663,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -32639,10 +32704,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-experimental-4fdf7cf2-20251003"",
+          version: ""19.3.0-experimental-c7862584-20251006"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
+          reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -32956,5 +33021,5 @@
         }
       };
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-unstable_testing.production.js,5,5,10,"@@ -19886,14 +19886,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2246 = React.version;
 if (
-  ""19.3.0-experimental-4fdf7cf2-20251003"" !==
+  ""19.3.0-experimental-c7862584-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_2246
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2246,
-      ""19.3.0-experimental-4fdf7cf2-20251003""
+      ""19.3.0-experimental-c7862584-20251006""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -19915,10 +19915,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2948 = {
   bundleType: 0,
-  version: ""19.3.0-experimental-4fdf7cf2-20251003"",
+  version: ""19.3.0-experimental-c7862584-20251006"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
+  reconcilerVersion: ""19.3.0-experimental-c7862584-20251006""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2949 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -20176,4 +20176,4 @@ exports.observeVisibleRects = function (
     }
   };
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.development.js,1,1,2,"@@ -416,7 +416,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.production.js,1,1,2,"@@ -207,4 +207,4 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.react-server.development.js,1,1,2,"@@ -336,5 +336,5 @@
             }))
           : Internals.d.m(href));
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.react-server.production.js,1,1,2,"@@ -149,4 +149,4 @@ exports.preloadModule = function (href, options) {
       });
     } else Internals.d.m(href);
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/package.json,2,2,4,"@@ -72,10 +72,10 @@
     ""./package.json"": ""./package.json""
   },
   ""dependencies"": {
-    ""scheduler"": ""0.0.0-experimental-4fdf7cf2-20251003""
+    ""scheduler"": ""0.0.0-experimental-c7862584-20251006""
   },
   ""peerDependencies"": {
-    ""react"": ""0.0.0-experimental-4fdf7cf2-20251003""
+    ""react"": ""0.0.0-experimental-c7862584-20251006""
   },
   ""browser"": {
     ""./server.js"": ""./server.browser.js"","
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-client.development.js,186,121,307,"@@ -3756,7 +3756,11 @@
       registerTwoPhaseEvent(reactName, [domEventName]);
     }
     function getArrayKind(array) {
-      for (var kind = EMPTY_ARRAY, i = 0; i < array.length; i++) {
+      for (
+        var kind = EMPTY_ARRAY, i = 0;
+        i < array.length && i < OBJECT_WIDTH_LIMIT;
+        i++
+      ) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -3781,10 +3785,26 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          addedProperties >= OBJECT_WIDTH_LIMIT)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -3831,57 +3851,77 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  key >= OBJECT_WIDTH_LIMIT)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                propKey === PRIMITIVE_ARRAY || propKey === EMPTY_ARRAY)
+                ((typeName = value.length > OBJECT_WIDTH_LIMIT),
+                (key = getArrayKind(value)),
+                key === PRIMITIVE_ARRAY || key === EMPTY_ARRAY)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName
+                    ? value.slice(0, OBJECT_WIDTH_LIMIT).concat(""\u2026"")
+                    : value
+                );
                 break;
-              } else if (propKey === ENTRIES_ARRAY) {
+              } else if (key === ENTRIES_ARRAY) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length &&
+                  propertyName < OBJECT_WIDTH_LIMIT;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    OBJECT_WIDTH_LIMIT.toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -3921,13 +3961,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);
@@ -3955,100 +3995,122 @@
       ]);
     }
     function addObjectDiffToProperties(prev, next, properties, indent) {
-      var isDeeplyEqual = !0;
-      for (key in prev)
+      var isDeeplyEqual = !0,
+        prevPropertiesChecked = 0;
+      for (key in prev) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Previous object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         key in next ||
           (properties.push([
             REMOVED + ""\u00a0\u00a0"".repeat(indent) + key,
             ""\u2026""
           ]),
           (isDeeplyEqual = !1));
-      for (var _key in next)
+        prevPropertiesChecked++;
+      }
+      prevPropertiesChecked = 0;
+      for (var _key in next) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Next object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         if (_key in prev) {
           var key = prev[_key];
           var nextValue = next[_key];
           if (key !== nextValue) {
-            if (0 === indent && ""children"" === _key)
-              (isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key),
-                properties.push(
-                  [REMOVED + isDeeplyEqual, ""\u2026""],
-                  [ADDED + isDeeplyEqual, ""\u2026""]
-                );
-            else {
-              if (!(3 <= indent))
-                if (
-                  ""object"" === typeof key &&
-                  ""object"" === typeof nextValue &&
-                  null !== key &&
-                  null !== nextValue &&
-                  key.$$typeof === nextValue.$$typeof
-                )
-                  if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
-                    if (
-                      key.type === nextValue.type &&
-                      key.key === nextValue.key
-                    ) {
-                      key =
-                        getComponentNameFromType(nextValue.type) || ""\u2026"";
-                      isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
-                      key = ""<"" + key + "" \u2026 />"";
-                      properties.push(
-                        [REMOVED + isDeeplyEqual, key],
-                        [ADDED + isDeeplyEqual, key]
-                      );
-                      isDeeplyEqual = !1;
-                      continue;
-                    }
-                  } else {
-                    var prevKind = Object.prototype.toString.call(key),
-                      nextKind = Object.prototype.toString.call(nextValue);
-                    if (
-                      prevKind === nextKind &&
-                      (""[object Object]"" === nextKind ||
-                        ""[object Array]"" === nextKind)
-                    ) {
-                      prevKind = [
-                        UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                        ""[object Array]"" === nextKind ? ""Array"" : """"
-                      ];
-                      properties.push(prevKind);
-                      nextKind = properties.length;
-                      addObjectDiffToProperties(
-                        key,
-                        nextValue,
-                        properties,
-                        indent + 1
-                      )
-                        ? nextKind === properties.length &&
-                          (prevKind[1] =
-                            ""Referentially unequal but deeply equal objects. Consider memoization."")
-                        : (isDeeplyEqual = !1);
-                      continue;
-                    }
+            if (0 === indent && ""children"" === _key) {
+              isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+              properties.push(
+                [REMOVED + isDeeplyEqual, ""\u2026""],
+                [ADDED + isDeeplyEqual, ""\u2026""]
+              );
+              isDeeplyEqual = !1;
+              continue;
+            }
+            if (!(3 <= indent))
+              if (
+                ""object"" === typeof key &&
+                ""object"" === typeof nextValue &&
+                null !== key &&
+                null !== nextValue &&
+                key.$$typeof === nextValue.$$typeof
+              )
+                if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
+                  if (
+                    key.type === nextValue.type &&
+                    key.key === nextValue.key
+                  ) {
+                    key = getComponentNameFromType(nextValue.type) || ""\u2026"";
+                    isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+                    key = ""<"" + key + "" \u2026 />"";
+                    properties.push(
+                      [REMOVED + isDeeplyEqual, key],
+                      [ADDED + isDeeplyEqual, key]
+                    );
+                    isDeeplyEqual = !1;
+                    continue;
+                  }
+                } else {
+                  var prevKind = Object.prototype.toString.call(key),
+                    nextKind = Object.prototype.toString.call(nextValue);
+                  if (
+                    prevKind === nextKind &&
+                    (""[object Object]"" === nextKind ||
+                      ""[object Array]"" === nextKind)
+                  ) {
+                    prevKind = [
+                      UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                      ""[object Array]"" === nextKind ? ""Array"" : """"
+                    ];
+                    properties.push(prevKind);
+                    nextKind = properties.length;
+                    addObjectDiffToProperties(
+                      key,
+                      nextValue,
+                      properties,
+                      indent + 1
+                    )
+                      ? nextKind === properties.length &&
+                        (prevKind[1] =
+                          ""Referentially unequal but deeply equal objects. Consider memoization."")
+                      : (isDeeplyEqual = !1);
+                    continue;
                   }
-                else if (
-                  ""function"" === typeof key &&
-                  ""function"" === typeof nextValue &&
-                  key.name === nextValue.name &&
-                  key.length === nextValue.length &&
-                  ((prevKind = Function.prototype.toString.call(key)),
-                  (nextKind = Function.prototype.toString.call(nextValue)),
-                  prevKind === nextKind)
-                ) {
-                  key =
-                    """" === nextValue.name
-                      ? ""() => {}""
-                      : nextValue.name + ""() {}"";
-                  properties.push([
-                    UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                    key +
-                      "" Referentially unequal function closure. Consider memoization.""
-                  ]);
-                  continue;
                 }
-              addValueToProperties(_key, key, properties, indent, REMOVED);
-              addValueToProperties(_key, nextValue, properties, indent, ADDED);
-            }
+              else if (
+                ""function"" === typeof key &&
+                ""function"" === typeof nextValue &&
+                key.name === nextValue.name &&
+                key.length === nextValue.length &&
+                ((prevKind = Function.prototype.toString.call(key)),
+                (nextKind = Function.prototype.toString.call(nextValue)),
+                prevKind === nextKind)
+              ) {
+                key =
+                  """" === nextValue.name ? ""() => {}"" : nextValue.name + ""() {}"";
+                properties.push([
+                  UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                  key +
+                    "" Referentially unequal function closure. Consider memoization.""
+                ]);
+                continue;
+              }
+            addValueToProperties(_key, key, properties, indent, REMOVED);
+            addValueToProperties(_key, nextValue, properties, indent, ADDED);
             isDeeplyEqual = !1;
           }
         } else
@@ -4057,6 +4119,8 @@
             ""\u2026""
           ]),
             (isDeeplyEqual = !1);
+        prevPropertiesChecked++;
+      }
       return isDeeplyEqual;
     }
     function setCurrentTrackFromLanes(lanes) {
@@ -25518,6 +25582,7 @@
       COMPLEX_ARRAY = 1,
       PRIMITIVE_ARRAY = 2,
       ENTRIES_ARRAY = 3,
+      OBJECT_WIDTH_LIMIT = 100,
       REMOVED = ""\u2013\u00a0"",
       ADDED = ""+\u00a0"",
       UNCHANGED = ""\u2007\u00a0"",
@@ -27931,11 +27996,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -27972,10 +28037,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-canary-4fdf7cf2-20251003"",
+          version: ""19.3.0-canary-c7862584-20251006"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003""
+          reconcilerVersion: ""19.3.0-canary-c7862584-20251006""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -28113,7 +28178,7 @@
       listenToAllSupportedEvents(container);
       return new ReactDOMHydrationRoot(initialChildren);
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-client.production.js,5,5,10,"@@ -15916,14 +15916,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_1840 = React.version;
 if (
-  ""19.3.0-canary-4fdf7cf2-20251003"" !==
+  ""19.3.0-canary-c7862584-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_1840
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_1840,
-      ""19.3.0-canary-4fdf7cf2-20251003""
+      ""19.3.0-canary-c7862584-20251006""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -15945,10 +15945,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2347 = {
   bundleType: 0,
-  version: ""19.3.0-canary-4fdf7cf2-20251003"",
+  version: ""19.3.0-canary-c7862584-20251006"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003""
+  reconcilerVersion: ""19.3.0-canary-c7862584-20251006""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2348 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -16046,4 +16046,4 @@ exports.hydrateRoot = function (container, initialChildren, options) {
   listenToAllSupportedEvents(container);
   return new ReactDOMHydrationRoot(initialChildren);
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-profiling.development.js,186,121,307,"@@ -3764,7 +3764,11 @@
       registerTwoPhaseEvent(reactName, [domEventName]);
     }
     function getArrayKind(array) {
-      for (var kind = EMPTY_ARRAY, i = 0; i < array.length; i++) {
+      for (
+        var kind = EMPTY_ARRAY, i = 0;
+        i < array.length && i < OBJECT_WIDTH_LIMIT;
+        i++
+      ) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -3789,10 +3793,26 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          addedProperties >= OBJECT_WIDTH_LIMIT)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -3839,57 +3859,77 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  key >= OBJECT_WIDTH_LIMIT)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                propKey === PRIMITIVE_ARRAY || propKey === EMPTY_ARRAY)
+                ((typeName = value.length > OBJECT_WIDTH_LIMIT),
+                (key = getArrayKind(value)),
+                key === PRIMITIVE_ARRAY || key === EMPTY_ARRAY)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName
+                    ? value.slice(0, OBJECT_WIDTH_LIMIT).concat(""\u2026"")
+                    : value
+                );
                 break;
-              } else if (propKey === ENTRIES_ARRAY) {
+              } else if (key === ENTRIES_ARRAY) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length &&
+                  propertyName < OBJECT_WIDTH_LIMIT;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    OBJECT_WIDTH_LIMIT.toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -3929,13 +3969,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);
@@ -3963,100 +4003,122 @@
       ]);
     }
     function addObjectDiffToProperties(prev, next, properties, indent) {
-      var isDeeplyEqual = !0;
-      for (key in prev)
+      var isDeeplyEqual = !0,
+        prevPropertiesChecked = 0;
+      for (key in prev) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Previous object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         key in next ||
           (properties.push([
             REMOVED + ""\u00a0\u00a0"".repeat(indent) + key,
             ""\u2026""
           ]),
           (isDeeplyEqual = !1));
-      for (var _key in next)
+        prevPropertiesChecked++;
+      }
+      prevPropertiesChecked = 0;
+      for (var _key in next) {
+        if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+          properties.push([
+            ""Next object has more than "" +
+              OBJECT_WIDTH_LIMIT +
+              "" properties. React will not attempt to diff objects with too many properties."",
+            """"
+          ]);
+          isDeeplyEqual = !1;
+          break;
+        }
         if (_key in prev) {
           var key = prev[_key];
           var nextValue = next[_key];
           if (key !== nextValue) {
-            if (0 === indent && ""children"" === _key)
-              (isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key),
-                properties.push(
-                  [REMOVED + isDeeplyEqual, ""\u2026""],
-                  [ADDED + isDeeplyEqual, ""\u2026""]
-                );
-            else {
-              if (!(3 <= indent))
-                if (
-                  ""object"" === typeof key &&
-                  ""object"" === typeof nextValue &&
-                  null !== key &&
-                  null !== nextValue &&
-                  key.$$typeof === nextValue.$$typeof
-                )
-                  if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
-                    if (
-                      key.type === nextValue.type &&
-                      key.key === nextValue.key
-                    ) {
-                      key =
-                        getComponentNameFromType(nextValue.type) || ""\u2026"";
-                      isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
-                      key = ""<"" + key + "" \u2026 />"";
-                      properties.push(
-                        [REMOVED + isDeeplyEqual, key],
-                        [ADDED + isDeeplyEqual, key]
-                      );
-                      isDeeplyEqual = !1;
-                      continue;
-                    }
-                  } else {
-                    var prevKind = Object.prototype.toString.call(key),
-                      nextKind = Object.prototype.toString.call(nextValue);
-                    if (
-                      prevKind === nextKind &&
-                      (""[object Object]"" === nextKind ||
-                        ""[object Array]"" === nextKind)
-                    ) {
-                      prevKind = [
-                        UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                        ""[object Array]"" === nextKind ? ""Array"" : """"
-                      ];
-                      properties.push(prevKind);
-                      nextKind = properties.length;
-                      addObjectDiffToProperties(
-                        key,
-                        nextValue,
-                        properties,
-                        indent + 1
-                      )
-                        ? nextKind === properties.length &&
-                          (prevKind[1] =
-                            ""Referentially unequal but deeply equal objects. Consider memoization."")
-                        : (isDeeplyEqual = !1);
-                      continue;
-                    }
+            if (0 === indent && ""children"" === _key) {
+              isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+              properties.push(
+                [REMOVED + isDeeplyEqual, ""\u2026""],
+                [ADDED + isDeeplyEqual, ""\u2026""]
+              );
+              isDeeplyEqual = !1;
+              continue;
+            }
+            if (!(3 <= indent))
+              if (
+                ""object"" === typeof key &&
+                ""object"" === typeof nextValue &&
+                null !== key &&
+                null !== nextValue &&
+                key.$$typeof === nextValue.$$typeof
+              )
+                if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
+                  if (
+                    key.type === nextValue.type &&
+                    key.key === nextValue.key
+                  ) {
+                    key = getComponentNameFromType(nextValue.type) || ""\u2026"";
+                    isDeeplyEqual = ""\u00a0\u00a0"".repeat(indent) + _key;
+                    key = ""<"" + key + "" \u2026 />"";
+                    properties.push(
+                      [REMOVED + isDeeplyEqual, key],
+                      [ADDED + isDeeplyEqual, key]
+                    );
+                    isDeeplyEqual = !1;
+                    continue;
+                  }
+                } else {
+                  var prevKind = Object.prototype.toString.call(key),
+                    nextKind = Object.prototype.toString.call(nextValue);
+                  if (
+                    prevKind === nextKind &&
+                    (""[object Object]"" === nextKind ||
+                      ""[object Array]"" === nextKind)
+                  ) {
+                    prevKind = [
+                      UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                      ""[object Array]"" === nextKind ? ""Array"" : """"
+                    ];
+                    properties.push(prevKind);
+                    nextKind = properties.length;
+                    addObjectDiffToProperties(
+                      key,
+                      nextValue,
+                      properties,
+                      indent + 1
+                    )
+                      ? nextKind === properties.length &&
+                        (prevKind[1] =
+                          ""Referentially unequal but deeply equal objects. Consider memoization."")
+                      : (isDeeplyEqual = !1);
+                    continue;
                   }
-                else if (
-                  ""function"" === typeof key &&
-                  ""function"" === typeof nextValue &&
-                  key.name === nextValue.name &&
-                  key.length === nextValue.length &&
-                  ((prevKind = Function.prototype.toString.call(key)),
-                  (nextKind = Function.prototype.toString.call(nextValue)),
-                  prevKind === nextKind)
-                ) {
-                  key =
-                    """" === nextValue.name
-                      ? ""() => {}""
-                      : nextValue.name + ""() {}"";
-                  properties.push([
-                    UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
-                    key +
-                      "" Referentially unequal function closure. Consider memoization.""
-                  ]);
-                  continue;
                 }
-              addValueToProperties(_key, key, properties, indent, REMOVED);
-              addValueToProperties(_key, nextValue, properties, indent, ADDED);
-            }
+              else if (
+                ""function"" === typeof key &&
+                ""function"" === typeof nextValue &&
+                key.name === nextValue.name &&
+                key.length === nextValue.length &&
+                ((prevKind = Function.prototype.toString.call(key)),
+                (nextKind = Function.prototype.toString.call(nextValue)),
+                prevKind === nextKind)
+              ) {
+                key =
+                  """" === nextValue.name ? ""() => {}"" : nextValue.name + ""() {}"";
+                properties.push([
+                  UNCHANGED + ""\u00a0\u00a0"".repeat(indent) + _key,
+                  key +
+                    "" Referentially unequal function closure. Consider memoization.""
+                ]);
+                continue;
+              }
+            addValueToProperties(_key, key, properties, indent, REMOVED);
+            addValueToProperties(_key, nextValue, properties, indent, ADDED);
             isDeeplyEqual = !1;
           }
         } else
@@ -4065,6 +4127,8 @@
             ""\u2026""
           ]),
             (isDeeplyEqual = !1);
+        prevPropertiesChecked++;
+      }
       return isDeeplyEqual;
     }
     function setCurrentTrackFromLanes(lanes) {
@@ -25570,6 +25634,7 @@
       COMPLEX_ARRAY = 1,
       PRIMITIVE_ARRAY = 2,
       ENTRIES_ARRAY = 3,
+      OBJECT_WIDTH_LIMIT = 100,
       REMOVED = ""\u2013\u00a0"",
       ADDED = ""+\u00a0"",
       UNCHANGED = ""\u2007\u00a0"",
@@ -27983,11 +28048,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -28024,10 +28089,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-canary-4fdf7cf2-20251003"",
+          version: ""19.3.0-canary-c7862584-20251006"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003""
+          reconcilerVersion: ""19.3.0-canary-c7862584-20251006""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -28495,7 +28560,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-profiling.profiling.js,5,5,10,"@@ -17770,14 +17770,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2138 = React.version;
 if (
-  ""19.3.0-canary-4fdf7cf2-20251003"" !==
+  ""19.3.0-canary-c7862584-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_2138
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2138,
-      ""19.3.0-canary-4fdf7cf2-20251003""
+      ""19.3.0-canary-c7862584-20251006""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -17799,10 +17799,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2658 = {
   bundleType: 0,
-  version: ""19.3.0-canary-4fdf7cf2-20251003"",
+  version: ""19.3.0-canary-c7862584-20251006"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003""
+  reconcilerVersion: ""19.3.0-canary-c7862584-20251006""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2659 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -18061,7 +18061,7 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";
 ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
   ""function"" ===
     typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.browser.development.js,1,1,2,"@@ -9874,5 +9874,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.browser.production.js,1,1,2,"@@ -6601,4 +6601,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.node.development.js,1,1,2,"@@ -9874,5 +9874,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.node.production.js,1,1,2,"@@ -6690,4 +6690,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.browser.development.js,3,3,6,"@@ -8785,11 +8785,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react""),
@@ -10598,5 +10598,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.browser.production.js,3,3,6,"@@ -7148,12 +7148,12 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       formatProdErrorMessage(
         527,
         isomorphicReactPackageVersion,
-        ""19.3.0-canary-4fdf7cf2-20251003""
+        ""19.3.0-canary-c7862584-20251006""
       )
     );
 }
@@ -7408,4 +7408,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.bun.production.js,3,3,6,"@@ -6646,13 +6646,13 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
 }
 var isomorphicReactPackageVersion$jscomp$inline_821 = React.version;
 if (
-  ""19.3.0-canary-4fdf7cf2-20251003"" !==
+  ""19.3.0-canary-c7862584-20251006"" !==
   isomorphicReactPackageVersion$jscomp$inline_821
 )
   throw Error(
     'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
       (isomorphicReactPackageVersion$jscomp$inline_821 +
-        ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+        ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -6743,4 +6743,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.edge.development.js,3,3,6,"@@ -8808,11 +8808,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react""),
@@ -10617,5 +10617,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.edge.production.js,3,3,6,"@@ -7252,11 +7252,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7510,4 +7510,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.node.development.js,3,3,6,"@@ -8682,11 +8682,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     function createDrainHandler(destination, request) {
@@ -10799,5 +10799,5 @@
         }
       };
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.node.production.js,3,3,6,"@@ -7143,11 +7143,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7705,4 +7705,4 @@ exports.resumeToPipeableStream = function (children, postponedState, options) {
     }
   };
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.development.js,1,1,2,"@@ -416,7 +416,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.production.js,1,1,2,"@@ -207,4 +207,4 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.react-server.development.js,1,1,2,"@@ -336,5 +336,5 @@
             }))
           : Internals.d.m(href));
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.react-server.production.js,1,1,2,"@@ -149,4 +149,4 @@ exports.preloadModule = function (href, options) {
       });
     } else Internals.d.m(href);
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/package.json,2,2,4,"@@ -67,10 +67,10 @@
     ""./package.json"": ""./package.json""
   },
   ""dependencies"": {
-    ""scheduler"": ""0.28.0-canary-4fdf7cf2-20251003""
+    ""scheduler"": ""0.28.0-canary-c7862584-20251006""
   },
   ""peerDependencies"": {
-    ""react"": ""19.3.0-canary-4fdf7cf2-20251003""
+    ""react"": ""19.3.0-canary-c7862584-20251006""
   },
   ""browser"": {
     ""./server.js"": ""./server.browser.js"","
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.development.js,1,1,2,"@@ -1356,7 +1356,7 @@
     exports.useTransition = function () {
       return resolveDispatcher().useTransition();
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.production.js,1,1,2,"@@ -597,4 +597,4 @@ exports.useSyncExternalStore = function (
 exports.useTransition = function () {
   return ReactSharedInternals.H.useTransition();
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.react-server.development.js,1,1,2,"@@ -1026,5 +1026,5 @@
     exports.useMemo = function (create, deps) {
       return resolveDispatcher().useMemo(create, deps);
     };
-    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-experimental-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.react-server.production.js,1,1,2,"@@ -563,4 +563,4 @@ exports.useId = function () {
 exports.useMemo = function (create, deps) {
   return ReactSharedInternals.H.useMemo(create, deps);
 };
-exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-experimental-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-is/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-is"",
-  ""version"": ""19.3.0-canary-4fdf7cf2-20251003"",
+  ""version"": ""19.3.0-canary-c7862584-20251006"",
   ""description"": ""Brand checking of React Elements."",
   ""main"": ""index.js"",
   ""sideEffects"": false,"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack-experimental/cjs/react-server-dom-turbopack-client.browser.development.js,67,36,103,"@@ -910,7 +910,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -934,10 +934,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -984,57 +998,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1074,13 +1105,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);
@@ -4856,10 +4887,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-experimental-4fdf7cf2-20251003"",
+      version: ""19.3.0-experimental-c7862584-20251006"",
       rendererPackageName: ""react-server-dom-turbopack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003"",
+      reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack-experimental/cjs/react-server-dom-turbopack-client.edge.development.js,65,34,99,"@@ -1116,7 +1116,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1140,10 +1140,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1190,57 +1204,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1280,13 +1311,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack-experimental/cjs/react-server-dom-turbopack-client.node.development.js,65,34,99,"@@ -1116,7 +1116,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1140,10 +1140,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1190,57 +1204,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1280,13 +1311,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack-experimental/package.json,2,2,4,"@@ -48,7 +48,7 @@
     ""neo-async"": ""^2.6.1""
   },
   ""peerDependencies"": {
-    ""react"": ""0.0.0-experimental-4fdf7cf2-20251003"",
-    ""react-dom"": ""0.0.0-experimental-4fdf7cf2-20251003""
+    ""react"": ""0.0.0-experimental-c7862584-20251006"",
+    ""react-dom"": ""0.0.0-experimental-c7862584-20251006""
   }
 }
\ No newline at end of file"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-client.browser.development.js,67,36,103,"@@ -906,7 +906,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -930,10 +930,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -980,57 +994,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1070,13 +1101,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);
@@ -4827,10 +4858,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-canary-4fdf7cf2-20251003"",
+      version: ""19.3.0-canary-c7862584-20251006"",
       rendererPackageName: ""react-server-dom-turbopack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003"",
+      reconcilerVersion: ""19.3.0-canary-c7862584-20251006"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-client.edge.development.js,65,34,99,"@@ -1112,7 +1112,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1136,10 +1136,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1186,57 +1200,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1276,13 +1307,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-client.node.development.js,65,34,99,"@@ -1112,7 +1112,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1136,10 +1136,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1186,57 +1200,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1276,13 +1307,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/package.json,2,2,4,"@@ -48,7 +48,7 @@
     ""neo-async"": ""^2.6.1""
   },
   ""peerDependencies"": {
-    ""react"": ""19.3.0-canary-4fdf7cf2-20251003"",
-    ""react-dom"": ""19.3.0-canary-4fdf7cf2-20251003""
+    ""react"": ""19.3.0-canary-c7862584-20251006"",
+    ""react-dom"": ""19.3.0-canary-c7862584-20251006""
   }
 }
\ No newline at end of file"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack-experimental/cjs/react-server-dom-webpack-client.browser.development.js,67,36,103,"@@ -917,7 +917,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -941,10 +941,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -991,57 +1005,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1081,13 +1112,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);
@@ -4872,10 +4903,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-experimental-4fdf7cf2-20251003"",
+      version: ""19.3.0-experimental-c7862584-20251006"",
       rendererPackageName: ""react-server-dom-webpack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003"",
+      reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack-experimental/cjs/react-server-dom-webpack-client.edge.development.js,65,34,99,"@@ -1119,7 +1119,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1143,10 +1143,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1193,57 +1207,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1283,13 +1314,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack-experimental/cjs/react-server-dom-webpack-client.node.development.js,65,34,99,"@@ -1119,7 +1119,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1143,10 +1143,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1193,57 +1207,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1283,13 +1314,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack-experimental/cjs/react-server-dom-webpack-client.node.unbundled.development.js,65,34,99,"@@ -1081,7 +1081,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1105,10 +1105,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1155,57 +1169,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1245,13 +1276,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack-experimental/package.json,2,2,4,"@@ -64,8 +64,8 @@
     ""webpack-sources"": ""^3.2.0""
   },
   ""peerDependencies"": {
-    ""react"": ""0.0.0-experimental-4fdf7cf2-20251003"",
-    ""react-dom"": ""0.0.0-experimental-4fdf7cf2-20251003"",
+    ""react"": ""0.0.0-experimental-c7862584-20251006"",
+    ""react-dom"": ""0.0.0-experimental-c7862584-20251006"",
     ""webpack"": ""^5.59.0""
   }
 }
\ No newline at end of file"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js,67,36,103,"@@ -913,7 +913,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -937,10 +937,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -987,57 +1001,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1077,13 +1108,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);
@@ -4843,10 +4874,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-canary-4fdf7cf2-20251003"",
+      version: ""19.3.0-canary-c7862584-20251006"",
       rendererPackageName: ""react-server-dom-webpack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003"",
+      reconcilerVersion: ""19.3.0-canary-c7862584-20251006"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js,65,34,99,"@@ -1115,7 +1115,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1139,10 +1139,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1189,57 +1203,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1279,13 +1310,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js,65,34,99,"@@ -1115,7 +1115,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1139,10 +1139,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1189,57 +1203,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1279,13 +1310,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js,65,34,99,"@@ -1077,7 +1077,7 @@
       return null;
     }
     function getArrayKind(array) {
-      for (var kind = 0, i = 0; i < array.length; i++) {
+      for (var kind = 0, i = 0; i < array.length && 100 > i; i++) {
         var value = array[i];
         if (""object"" === typeof value && null !== value)
           if (
@@ -1101,10 +1101,24 @@
       return kind;
     }
     function addObjectToProperties(object, properties, indent, prefix) {
-      for (var key in object)
-        hasOwnProperty.call(object, key) &&
+      var addedProperties = 0,
+        key;
+      for (key in object)
+        if (
+          hasOwnProperty.call(object, key) &&
           ""_"" !== key[0] &&
-          addValueToProperties(key, object[key], properties, indent, prefix);
+          (addedProperties++,
+          addValueToProperties(key, object[key], properties, indent, prefix),
+          100 <= addedProperties)
+        ) {
+          properties.push([
+            prefix +
+              ""\u00a0\u00a0"".repeat(indent) +
+              ""Only 100 properties are shown. React will not log more properties of this object."",
+            """"
+          ]);
+          break;
+        }
     }
     function addValueToProperties(
       propertyName,
@@ -1151,57 +1165,74 @@
                   prefix
                 );
               propertyName = !1;
+              key = 0;
               for (var propKey in value)
-                ""children"" === propKey
-                  ? null != value.children &&
-                    (!isArrayImpl(value.children) ||
-                      0 < value.children.length) &&
-                    (propertyName = !0)
-                  : hasOwnProperty.call(value, propKey) &&
-                    ""_"" !== propKey[0] &&
-                    addValueToProperties(
-                      propKey,
-                      value[propKey],
-                      properties,
-                      indent + 1,
-                      prefix
-                    );
+                if (
+                  (key++,
+                  ""children"" === propKey
+                    ? null != value.children &&
+                      (!isArrayImpl(value.children) ||
+                        0 < value.children.length) &&
+                      (propertyName = !0)
+                    : hasOwnProperty.call(value, propKey) &&
+                      ""_"" !== propKey[0] &&
+                      addValueToProperties(
+                        propKey,
+                        value[propKey],
+                        properties,
+                        indent + 1,
+                        prefix
+                      ),
+                  100 <= key)
+                )
+                  break;
               properties.push([
                 """",
                 propertyName ? "">\u2026</"" + typeName + "">"" : ""/>""
               ]);
               return;
             }
             typeName = Object.prototype.toString.call(value);
-            typeName = typeName.slice(8, typeName.length - 1);
-            if (""Array"" === typeName)
+            propKey = typeName.slice(8, typeName.length - 1);
+            if (""Array"" === propKey)
               if (
-                ((propKey = getArrayKind(value)),
-                2 === propKey || 0 === propKey)
+                ((typeName = 100 < value.length),
+                (key = getArrayKind(value)),
+                2 === key || 0 === key)
               ) {
-                value = JSON.stringify(value);
+                value = JSON.stringify(
+                  typeName ? value.slice(0, 100).concat(""\u2026"") : value
+                );
                 break;
-              } else if (3 === propKey) {
+              } else if (3 === key) {
                 properties.push([
                   prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
                   """"
                 ]);
                 for (
                   propertyName = 0;
-                  propertyName < value.length;
+                  propertyName < value.length && 100 > propertyName;
                   propertyName++
                 )
-                  (typeName = value[propertyName]),
+                  (propKey = value[propertyName]),
                     addValueToProperties(
-                      typeName[0],
-                      typeName[1],
+                      propKey[0],
+                      propKey[1],
                       properties,
                       indent + 1,
                       prefix
                     );
+                typeName &&
+                  addValueToProperties(
+                    (100).toString(),
+                    ""\u2026"",
+                    properties,
+                    indent + 1,
+                    prefix
+                  );
                 return;
               }
-            if (""Promise"" === typeName) {
+            if (""Promise"" === propKey) {
               if (""fulfilled"" === value.status) {
                 if (
                   ((typeName = properties.length),
@@ -1241,13 +1272,13 @@
               ]);
               return;
             }
-            ""Object"" === typeName &&
-              (propKey = Object.getPrototypeOf(value)) &&
-              ""function"" === typeof propKey.constructor &&
-              (typeName = propKey.constructor.name);
+            ""Object"" === propKey &&
+              (typeName = Object.getPrototypeOf(value)) &&
+              ""function"" === typeof typeName.constructor &&
+              (propKey = typeName.constructor.name);
             properties.push([
               prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName,
-              ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName
+              ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey
             ]);
             3 > indent &&
               addObjectToProperties(value, properties, indent + 1, prefix);"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/package.json,2,2,4,"@@ -64,8 +64,8 @@
     ""webpack-sources"": ""^3.2.0""
   },
   ""peerDependencies"": {
-    ""react"": ""19.3.0-canary-4fdf7cf2-20251003"",
-    ""react-dom"": ""19.3.0-canary-4fdf7cf2-20251003"",
+    ""react"": ""19.3.0-canary-c7862584-20251006"",
+    ""react-dom"": ""19.3.0-canary-c7862584-20251006"",
     ""webpack"": ""^5.59.0""
   }
 }
\ No newline at end of file"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.development.js,1,1,2,"@@ -1276,7 +1276,7 @@
     exports.useTransition = function () {
       return resolveDispatcher().useTransition();
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.production.js,1,1,2,"@@ -539,4 +539,4 @@ exports.useSyncExternalStore = function (
 exports.useTransition = function () {
   return ReactSharedInternals.H.useTransition();
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.react-server.development.js,1,1,2,"@@ -846,5 +846,5 @@
     exports.useMemo = function (create, deps) {
       return resolveDispatcher().useMemo(create, deps);
     };
-    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+    exports.version = ""19.3.0-canary-c7862584-20251006"";
   })();"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.react-server.production.js,1,1,2,"@@ -423,4 +423,4 @@ exports.useId = function () {
 exports.useMemo = function (create, deps) {
   return ReactSharedInternals.H.useMemo(create, deps);
 };
-exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+exports.version = ""19.3.0-canary-c7862584-20251006"";"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/unistore/unistore.js,1,1,2,"@@ -1 +1 @@
-(()=>{var t={742:t=>{function n(t,i){for(var _ in i)t[_]=i[_];return t}t.exports=function(t){var i=[];function u(t){for(var _=[],a=0;a<i.length;a++)i[a]===t?t=null:_.push(i[a]);i=_}function e(_,a,f){t=a?_:n(n({},t),_);for(var o=i,c=0;c<o.length;c++)o[c](t,f)}return t=t||{},{action:function(i){function r(t){e(t,!1,i)}return function(){for(var _=arguments,a=[t],f=0;f<arguments.length;f++)a.push(_[f]);var o=i.apply(this,a);if(null!=o)return o.then?o.then(r):r(o)}},setState:e,subscribe:function(t){return i.push(t),function(){u(t)}},unsubscribe:u,getState:function(){return t}}}}};var i={};function __nccwpck_require__(_){var a=i[_];if(a!==undefined){return a.exports}var f=i[_]={exports:{}};var o=true;try{t[_](f,f.exports,__nccwpck_require__);o=false}finally{if(o)delete i[_]}return f.exports}if(typeof __nccwpck_require__!==""undefined"")__nccwpck_require__.ab=__dirname+""/"";var _=__nccwpck_require__(742);module.exports=_})();
\ No newline at end of file
+(()=>{var t={232:t=>{function n(t,i){for(var _ in i)t[_]=i[_];return t}t.exports=function(t){var i=[];function u(t){for(var _=[],a=0;a<i.length;a++)i[a]===t?t=null:_.push(i[a]);i=_}function e(_,a,f){t=a?_:n(n({},t),_);for(var o=i,c=0;c<o.length;c++)o[c](t,f)}return t=t||{},{action:function(i){function r(t){e(t,!1,i)}return function(){for(var _=arguments,a=[t],f=0;f<arguments.length;f++)a.push(_[f]);var o=i.apply(this,a);if(null!=o)return o.then?o.then(r):r(o)}},setState:e,subscribe:function(t){return i.push(t),function(){u(t)}},unsubscribe:u,getState:function(){return t}}}}};var i={};function __nccwpck_require__(_){var a=i[_];if(a!==undefined){return a.exports}var f=i[_]={exports:{}};var o=true;try{t[_](f,f.exports,__nccwpck_require__);o=false}finally{if(o)delete i[_]}return f.exports}if(typeof __nccwpck_require__!==""undefined"")__nccwpck_require__.ab=__dirname+""/"";var _=__nccwpck_require__(232);module.exports=_})();
\ No newline at end of file"
vercel/next.js,b94e9be0f4e9463eef26032cb88abb0752973d4b,nextjs-bot,2025-10-06T19:11:27Z,"Upgrade React from `4fdf7cf2-20251003` to `c7862584-20251006` (#84573)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",pnpm-lock.yaml,614,649,1263,
vercel/next.js,84cdf573690171949895ba2d10231b239dcfb224,Jiwon Choi,2025-10-06T18:52:17Z,"CI: Enable `experimental.isolatedDevBuild` for `test-unit` (#84559)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration
([link](https://github.com/vercel/next.js/pull/84558))
4. test-unit (here)
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",.github/workflows/build_and_test.yml,3,1,4,"@@ -542,7 +542,9 @@ jobs:
     uses: ./.github/workflows/build_reusable.yml
     with:
       nodeVersion: ${{ matrix.node }}
-      afterBuild: node run-tests.js --type unit
+      afterBuild: |
+        export __NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD=true
+        node run-tests.js --type unit
       stepName: 'test-unit-${{ matrix.node }}'
 
     secrets: inherit"
vercel/next.js,84cdf573690171949895ba2d10231b239dcfb224,Jiwon Choi,2025-10-06T18:52:17Z,"CI: Enable `experimental.isolatedDevBuild` for `test-unit` (#84559)

Enabling `experimental.isolatedDevBuild` required many changes to the
current workflow, so we will incrementally roll out to the tests.

1. ~~test-experimental-dev
([link](https://github.com/vercel/next.js/pull/84099))~~
2. test-dev ([link](https://github.com/vercel/next.js/pull/84562))
2. test-prod ([link](https://github.com/vercel/next.js/pull/84556))
3. test-integration
([link](https://github.com/vercel/next.js/pull/84558))
4. test-unit (here)
5. Enable by default, remove the flag, and update the rest

x-ref: https://github.com/vercel/next.js/pull/84043",test/unit/isolated/config.test.ts,6,1,7,"@@ -38,7 +38,12 @@ describe('config', () => {
 
   it('Should assign object defaults deeply to user config', async () => {
     const config = await loadConfig(PHASE_DEVELOPMENT_SERVER, pathToConfigFn)
-    expect(config.distDir).toEqual('.next')
+    // In isolatedDevBuild, the default distDir is "".next/dev"" during PHASE_DEVELOPMENT_SERVER.
+    if (process.env.__NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD === 'true') {
+      expect(config.distDir).toEqual('.next/dev')
+    } else {
+      expect(config.distDir).toEqual('.next')
+    }
     expect(config.onDemandEntries.maxInactiveAge).toBeDefined()
   })
 "
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",package.json,16,16,32,"@@ -199,7 +199,7 @@
     ""eslint-plugin-jsdoc"": ""48.0.4"",
     ""eslint-plugin-mdx"": ""3.1.5"",
     ""eslint-plugin-react"": ""7.35.0"",
-    ""eslint-plugin-react-hooks"": ""0.0.0-experimental-85c427d8-20251003"",
+    ""eslint-plugin-react-hooks"": ""0.0.0-experimental-4fdf7cf2-20251003"",
     ""eslint-v8"": ""npm:eslint@^8.57.0"",
     ""event-stream"": ""4.0.1"",
     ""execa"": ""2.0.3"",
@@ -259,16 +259,16 @@
     ""pretty-ms"": ""7.0.0"",
     ""random-seed"": ""0.3.0"",
     ""react"": ""19.0.0"",
-    ""react-builtin"": ""npm:react@19.3.0-canary-85c427d8-20251003"",
+    ""react-builtin"": ""npm:react@19.3.0-canary-4fdf7cf2-20251003"",
     ""react-dom"": ""19.0.0"",
-    ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-85c427d8-20251003"",
-    ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-85c427d8-20251003"",
-    ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-85c427d8-20251003"",
-    ""react-is-builtin"": ""npm:react-is@19.3.0-canary-85c427d8-20251003"",
-    ""react-server-dom-turbopack"": ""19.3.0-canary-85c427d8-20251003"",
-    ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-85c427d8-20251003"",
-    ""react-server-dom-webpack"": ""19.3.0-canary-85c427d8-20251003"",
-    ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-85c427d8-20251003"",
+    ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-4fdf7cf2-20251003"",
+    ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-4fdf7cf2-20251003"",
+    ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-4fdf7cf2-20251003"",
+    ""react-is-builtin"": ""npm:react-is@19.3.0-canary-4fdf7cf2-20251003"",
+    ""react-server-dom-turbopack"": ""19.3.0-canary-4fdf7cf2-20251003"",
+    ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-4fdf7cf2-20251003"",
+    ""react-server-dom-webpack"": ""19.3.0-canary-4fdf7cf2-20251003"",
+    ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-4fdf7cf2-20251003"",
     ""react-ssr-prepass"": ""1.0.8"",
     ""react-virtualized"": ""9.22.3"",
     ""relay-compiler"": ""13.0.2"",
@@ -278,8 +278,8 @@
     ""resolve-from"": ""5.0.0"",
     ""sass"": ""1.54.0"",
     ""satori"": ""0.15.2"",
-    ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-85c427d8-20251003"",
-    ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-85c427d8-20251003"",
+    ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-4fdf7cf2-20251003"",
+    ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-4fdf7cf2-20251003"",
     ""seedrandom"": ""3.0.5"",
     ""semver"": ""7.3.7"",
     ""serve-handler"": ""6.1.6"",
@@ -323,10 +323,10 @@
       ""@types/react-dom"": ""19.1.10"",
       ""@types/retry"": ""0.12.0"",
       ""jest-snapshot"": ""30.0.0-alpha.6"",
-      ""react"": ""19.3.0-canary-85c427d8-20251003"",
-      ""react-dom"": ""19.3.0-canary-85c427d8-20251003"",
-      ""react-is"": ""19.3.0-canary-85c427d8-20251003"",
-      ""scheduler"": ""0.28.0-canary-85c427d8-20251003""
+      ""react"": ""19.3.0-canary-4fdf7cf2-20251003"",
+      ""react-dom"": ""19.3.0-canary-4fdf7cf2-20251003"",
+      ""react-is"": ""19.3.0-canary-4fdf7cf2-20251003"",
+      ""scheduler"": ""0.28.0-canary-4fdf7cf2-20251003""
     },
     ""packageExtensions"": {
       ""eslint-plugin-react-hooks@0.0.0-experimental-6de32a5a-20250822"": {"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-client.development.js,5,5,10,"@@ -32277,11 +32277,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -32318,10 +32318,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-experimental-85c427d8-20251003"",
+          version: ""19.3.0-experimental-4fdf7cf2-20251003"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003""
+          reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -32469,7 +32469,7 @@
       listenToAllSupportedEvents(container);
       return new ReactDOMHydrationRoot(initialChildren);
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-client.production.js,5,5,10,"@@ -19570,14 +19570,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2217 = React.version;
 if (
-  ""19.3.0-experimental-85c427d8-20251003"" !==
+  ""19.3.0-experimental-4fdf7cf2-20251003"" !==
   isomorphicReactPackageVersion$jscomp$inline_2217
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2217,
-      ""19.3.0-experimental-85c427d8-20251003""
+      ""19.3.0-experimental-4fdf7cf2-20251003""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -19599,10 +19599,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2914 = {
   bundleType: 0,
-  version: ""19.3.0-experimental-85c427d8-20251003"",
+  version: ""19.3.0-experimental-4fdf7cf2-20251003"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003""
+  reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2915 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -19709,4 +19709,4 @@ exports.hydrateRoot = function (container, initialChildren, options) {
   listenToAllSupportedEvents(container);
   return new ReactDOMHydrationRoot(initialChildren);
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-profiling.development.js,5,5,10,"@@ -32329,11 +32329,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -32370,10 +32370,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-experimental-85c427d8-20251003"",
+          version: ""19.3.0-experimental-4fdf7cf2-20251003"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003""
+          reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -32851,7 +32851,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-profiling.profiling.js,5,5,10,"@@ -21624,14 +21624,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2513 = React.version;
 if (
-  ""19.3.0-experimental-85c427d8-20251003"" !==
+  ""19.3.0-experimental-4fdf7cf2-20251003"" !==
   isomorphicReactPackageVersion$jscomp$inline_2513
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2513,
-      ""19.3.0-experimental-85c427d8-20251003""
+      ""19.3.0-experimental-4fdf7cf2-20251003""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -21653,10 +21653,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_3223 = {
   bundleType: 0,
-  version: ""19.3.0-experimental-85c427d8-20251003"",
+  version: ""19.3.0-experimental-4fdf7cf2-20251003"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003""
+  reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_3224 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -21924,7 +21924,7 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
 ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
   ""function"" ===
     typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.browser.development.js,1,1,2,"@@ -10544,5 +10544,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.browser.production.js,1,1,2,"@@ -7157,4 +7157,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.node.development.js,1,1,2,"@@ -10544,5 +10544,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server-legacy.node.production.js,1,1,2,"@@ -7260,4 +7260,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.browser.development.js,3,3,6,"@@ -9537,11 +9537,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react-experimental""),
@@ -11365,5 +11365,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.browser.production.js,3,3,6,"@@ -7828,12 +7828,12 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
     throw Error(
       formatProdErrorMessage(
         527,
         isomorphicReactPackageVersion,
-        ""19.3.0-experimental-85c427d8-20251003""
+        ""19.3.0-experimental-4fdf7cf2-20251003""
       )
     );
 }
@@ -8088,4 +8088,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.bun.production.js,3,3,6,"@@ -7316,13 +7316,13 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
 }
 var isomorphicReactPackageVersion$jscomp$inline_871 = React.version;
 if (
-  ""19.3.0-experimental-85c427d8-20251003"" !==
+  ""19.3.0-experimental-4fdf7cf2-20251003"" !==
   isomorphicReactPackageVersion$jscomp$inline_871
 )
   throw Error(
     'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
       (isomorphicReactPackageVersion$jscomp$inline_871 +
-        ""\n  - react-dom:  19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+        ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -7413,4 +7413,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.edge.development.js,3,3,6,"@@ -9566,11 +9566,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react-experimental""),
@@ -11390,5 +11390,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.edge.production.js,3,3,6,"@@ -7946,11 +7946,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -8204,4 +8204,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.node.development.js,3,3,6,"@@ -9426,11 +9426,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     function createDrainHandler(destination, request) {
@@ -11560,5 +11560,5 @@
         }
       };
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-server.node.production.js,3,3,6,"@@ -7825,11 +7825,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -8387,4 +8387,4 @@ exports.resumeToPipeableStream = function (children, postponedState, options) {
     }
   };
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-unstable_testing.development.js,5,5,10,"@@ -32598,11 +32598,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -32639,10 +32639,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-experimental-85c427d8-20251003"",
+          version: ""19.3.0-experimental-4fdf7cf2-20251003"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003""
+          reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -32956,5 +32956,5 @@
         }
       };
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom-unstable_testing.production.js,5,5,10,"@@ -19886,14 +19886,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2246 = React.version;
 if (
-  ""19.3.0-experimental-85c427d8-20251003"" !==
+  ""19.3.0-experimental-4fdf7cf2-20251003"" !==
   isomorphicReactPackageVersion$jscomp$inline_2246
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2246,
-      ""19.3.0-experimental-85c427d8-20251003""
+      ""19.3.0-experimental-4fdf7cf2-20251003""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -19915,10 +19915,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2948 = {
   bundleType: 0,
-  version: ""19.3.0-experimental-85c427d8-20251003"",
+  version: ""19.3.0-experimental-4fdf7cf2-20251003"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003""
+  reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2949 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -20176,4 +20176,4 @@ exports.observeVisibleRects = function (
     }
   };
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.development.js,1,1,2,"@@ -416,7 +416,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.production.js,1,1,2,"@@ -207,4 +207,4 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.react-server.development.js,1,1,2,"@@ -336,5 +336,5 @@
             }))
           : Internals.d.m(href));
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/cjs/react-dom.react-server.production.js,1,1,2,"@@ -149,4 +149,4 @@ exports.preloadModule = function (href, options) {
       });
     } else Internals.d.m(href);
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom-experimental/package.json,2,2,4,"@@ -72,10 +72,10 @@
     ""./package.json"": ""./package.json""
   },
   ""dependencies"": {
-    ""scheduler"": ""0.0.0-experimental-85c427d8-20251003""
+    ""scheduler"": ""0.0.0-experimental-4fdf7cf2-20251003""
   },
   ""peerDependencies"": {
-    ""react"": ""0.0.0-experimental-85c427d8-20251003""
+    ""react"": ""0.0.0-experimental-4fdf7cf2-20251003""
   },
   ""browser"": {
     ""./server.js"": ""./server.browser.js"","
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-client.development.js,5,5,10,"@@ -27931,11 +27931,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -27972,10 +27972,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-canary-85c427d8-20251003"",
+          version: ""19.3.0-canary-4fdf7cf2-20251003"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-canary-85c427d8-20251003""
+          reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -28113,7 +28113,7 @@
       listenToAllSupportedEvents(container);
       return new ReactDOMHydrationRoot(initialChildren);
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-client.production.js,5,5,10,"@@ -15916,14 +15916,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_1840 = React.version;
 if (
-  ""19.3.0-canary-85c427d8-20251003"" !==
+  ""19.3.0-canary-4fdf7cf2-20251003"" !==
   isomorphicReactPackageVersion$jscomp$inline_1840
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_1840,
-      ""19.3.0-canary-85c427d8-20251003""
+      ""19.3.0-canary-4fdf7cf2-20251003""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -15945,10 +15945,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2347 = {
   bundleType: 0,
-  version: ""19.3.0-canary-85c427d8-20251003"",
+  version: ""19.3.0-canary-4fdf7cf2-20251003"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-canary-85c427d8-20251003""
+  reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2348 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -16046,4 +16046,4 @@ exports.hydrateRoot = function (container, initialChildren, options) {
   listenToAllSupportedEvents(container);
   return new ReactDOMHydrationRoot(initialChildren);
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-profiling.development.js,5,5,10,"@@ -27983,11 +27983,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     })();
     (""function"" === typeof Map &&
@@ -28024,10 +28024,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: ""19.3.0-canary-85c427d8-20251003"",
+          version: ""19.3.0-canary-4fdf7cf2-20251003"",
           rendererPackageName: ""react-dom"",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: ""19.3.0-canary-85c427d8-20251003""
+          reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003""
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -28495,7 +28495,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-profiling.profiling.js,5,5,10,"@@ -17770,14 +17770,14 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
 };
 var isomorphicReactPackageVersion$jscomp$inline_2138 = React.version;
 if (
-  ""19.3.0-canary-85c427d8-20251003"" !==
+  ""19.3.0-canary-4fdf7cf2-20251003"" !==
   isomorphicReactPackageVersion$jscomp$inline_2138
 )
   throw Error(
     formatProdErrorMessage(
       527,
       isomorphicReactPackageVersion$jscomp$inline_2138,
-      ""19.3.0-canary-85c427d8-20251003""
+      ""19.3.0-canary-4fdf7cf2-20251003""
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -17799,10 +17799,10 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
 };
 var internals$jscomp$inline_2658 = {
   bundleType: 0,
-  version: ""19.3.0-canary-85c427d8-20251003"",
+  version: ""19.3.0-canary-4fdf7cf2-20251003"",
   rendererPackageName: ""react-dom"",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: ""19.3.0-canary-85c427d8-20251003""
+  reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003""
 };
 if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
   var hook$jscomp$inline_2659 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
@@ -18061,7 +18061,7 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
 ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
   ""function"" ===
     typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.browser.development.js,1,1,2,"@@ -9874,5 +9874,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.browser.production.js,1,1,2,"@@ -6601,4 +6601,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.node.development.js,1,1,2,"@@ -9874,5 +9874,5 @@
         'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
       );
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server-legacy.node.production.js,1,1,2,"@@ -6690,4 +6690,4 @@ exports.renderToString = function (children, options) {
     'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server'
   );
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.browser.development.js,3,3,6,"@@ -8785,11 +8785,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react""),
@@ -10598,5 +10598,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.browser.production.js,3,3,6,"@@ -7148,12 +7148,12 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
     throw Error(
       formatProdErrorMessage(
         527,
         isomorphicReactPackageVersion,
-        ""19.3.0-canary-85c427d8-20251003""
+        ""19.3.0-canary-4fdf7cf2-20251003""
       )
     );
 }
@@ -7408,4 +7408,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.bun.production.js,3,3,6,"@@ -6646,13 +6646,13 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
 }
 var isomorphicReactPackageVersion$jscomp$inline_821 = React.version;
 if (
-  ""19.3.0-canary-85c427d8-20251003"" !==
+  ""19.3.0-canary-4fdf7cf2-20251003"" !==
   isomorphicReactPackageVersion$jscomp$inline_821
 )
   throw Error(
     'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
       (isomorphicReactPackageVersion$jscomp$inline_821 +
-        ""\n  - react-dom:  19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+        ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -6743,4 +6743,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.edge.development.js,3,3,6,"@@ -8808,11 +8808,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     var React = require(""next/dist/compiled/react""),
@@ -10617,5 +10617,5 @@
         startWork(request);
       });
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.edge.production.js,3,3,6,"@@ -7252,11 +7252,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7510,4 +7510,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.node.development.js,3,3,6,"@@ -8682,11 +8682,11 @@
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+      if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              ""\n  - react-dom:  19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+              ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
         );
     }
     function createDrainHandler(destination, request) {
@@ -10799,5 +10799,5 @@
         }
       };
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom-server.node.production.js,3,3,6,"@@ -7143,11 +7143,11 @@ function getPostponedState(request) {
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion)
+  if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          ""\n  - react-dom:  19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
+          ""\n  - react-dom:  19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7705,4 +7705,4 @@ exports.resumeToPipeableStream = function (children, postponedState, options) {
     }
   };
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.development.js,1,1,2,"@@ -416,7 +416,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.production.js,1,1,2,"@@ -207,4 +207,4 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.react-server.development.js,1,1,2,"@@ -336,5 +336,5 @@
             }))
           : Internals.d.m(href));
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/cjs/react-dom.react-server.production.js,1,1,2,"@@ -149,4 +149,4 @@ exports.preloadModule = function (href, options) {
       });
     } else Internals.d.m(href);
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-dom/package.json,2,2,4,"@@ -67,10 +67,10 @@
     ""./package.json"": ""./package.json""
   },
   ""dependencies"": {
-    ""scheduler"": ""0.28.0-canary-85c427d8-20251003""
+    ""scheduler"": ""0.28.0-canary-4fdf7cf2-20251003""
   },
   ""peerDependencies"": {
-    ""react"": ""19.3.0-canary-85c427d8-20251003""
+    ""react"": ""19.3.0-canary-4fdf7cf2-20251003""
   },
   ""browser"": {
     ""./server.js"": ""./server.browser.js"","
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.development.js,1,1,2,"@@ -1356,7 +1356,7 @@
     exports.useTransition = function () {
       return resolveDispatcher().useTransition();
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.production.js,1,1,2,"@@ -597,4 +597,4 @@ exports.useSyncExternalStore = function (
 exports.useTransition = function () {
   return ReactSharedInternals.H.useTransition();
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.react-server.development.js,1,1,2,"@@ -1026,5 +1026,5 @@
     exports.useMemo = function (create, deps) {
       return resolveDispatcher().useMemo(create, deps);
     };
-    exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+    exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-experimental/cjs/react.react-server.production.js,1,1,2,"@@ -563,4 +563,4 @@ exports.useId = function () {
 exports.useMemo = function (create, deps) {
   return ReactSharedInternals.H.useMemo(create, deps);
 };
-exports.version = ""19.3.0-experimental-85c427d8-20251003"";
+exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-is/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-is"",
-  ""version"": ""19.3.0-canary-85c427d8-20251003"",
+  ""version"": ""19.3.0-canary-4fdf7cf2-20251003"",
   ""description"": ""Brand checking of React Elements."",
   ""main"": ""index.js"",
   ""sideEffects"": false,"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack-experimental/cjs/react-server-dom-turbopack-client.browser.development.js,2,2,4,"@@ -4856,10 +4856,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-experimental-85c427d8-20251003"",
+      version: ""19.3.0-experimental-4fdf7cf2-20251003"",
       rendererPackageName: ""react-server-dom-turbopack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003"",
+      reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack-experimental/package.json,2,2,4,"@@ -48,7 +48,7 @@
     ""neo-async"": ""^2.6.1""
   },
   ""peerDependencies"": {
-    ""react"": ""0.0.0-experimental-85c427d8-20251003"",
-    ""react-dom"": ""0.0.0-experimental-85c427d8-20251003""
+    ""react"": ""0.0.0-experimental-4fdf7cf2-20251003"",
+    ""react-dom"": ""0.0.0-experimental-4fdf7cf2-20251003""
   }
 }
\ No newline at end of file"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/cjs/react-server-dom-turbopack-client.browser.development.js,2,2,4,"@@ -4827,10 +4827,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-canary-85c427d8-20251003"",
+      version: ""19.3.0-canary-4fdf7cf2-20251003"",
       rendererPackageName: ""react-server-dom-turbopack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-canary-85c427d8-20251003"",
+      reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-turbopack/package.json,2,2,4,"@@ -48,7 +48,7 @@
     ""neo-async"": ""^2.6.1""
   },
   ""peerDependencies"": {
-    ""react"": ""19.3.0-canary-85c427d8-20251003"",
-    ""react-dom"": ""19.3.0-canary-85c427d8-20251003""
+    ""react"": ""19.3.0-canary-4fdf7cf2-20251003"",
+    ""react-dom"": ""19.3.0-canary-4fdf7cf2-20251003""
   }
 }
\ No newline at end of file"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack-experimental/cjs/react-server-dom-webpack-client.browser.development.js,2,2,4,"@@ -4872,10 +4872,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-experimental-85c427d8-20251003"",
+      version: ""19.3.0-experimental-4fdf7cf2-20251003"",
       rendererPackageName: ""react-server-dom-webpack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003"",
+      reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack-experimental/package.json,2,2,4,"@@ -64,8 +64,8 @@
     ""webpack-sources"": ""^3.2.0""
   },
   ""peerDependencies"": {
-    ""react"": ""0.0.0-experimental-85c427d8-20251003"",
-    ""react-dom"": ""0.0.0-experimental-85c427d8-20251003"",
+    ""react"": ""0.0.0-experimental-4fdf7cf2-20251003"",
+    ""react-dom"": ""0.0.0-experimental-4fdf7cf2-20251003"",
     ""webpack"": ""^5.59.0""
   }
 }
\ No newline at end of file"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js,2,2,4,"@@ -4843,10 +4843,10 @@
       return hook.checkDCE ? !0 : !1;
     })({
       bundleType: 1,
-      version: ""19.3.0-canary-85c427d8-20251003"",
+      version: ""19.3.0-canary-4fdf7cf2-20251003"",
       rendererPackageName: ""react-server-dom-webpack"",
       currentDispatcherRef: ReactSharedInternals,
-      reconcilerVersion: ""19.3.0-canary-85c427d8-20251003"",
+      reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003"",
       getCurrentComponentInfo: function () {
         return currentOwnerInDEV;
       }"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react-server-dom-webpack/package.json,2,2,4,"@@ -64,8 +64,8 @@
     ""webpack-sources"": ""^3.2.0""
   },
   ""peerDependencies"": {
-    ""react"": ""19.3.0-canary-85c427d8-20251003"",
-    ""react-dom"": ""19.3.0-canary-85c427d8-20251003"",
+    ""react"": ""19.3.0-canary-4fdf7cf2-20251003"",
+    ""react-dom"": ""19.3.0-canary-4fdf7cf2-20251003"",
     ""webpack"": ""^5.59.0""
   }
 }
\ No newline at end of file"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.development.js,1,1,2,"@@ -1276,7 +1276,7 @@
     exports.useTransition = function () {
       return resolveDispatcher().useTransition();
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
     ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       ""function"" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.production.js,1,1,2,"@@ -539,4 +539,4 @@ exports.useSyncExternalStore = function (
 exports.useTransition = function () {
   return ReactSharedInternals.H.useTransition();
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.react-server.development.js,1,1,2,"@@ -846,5 +846,5 @@
     exports.useMemo = function (create, deps) {
       return resolveDispatcher().useMemo(create, deps);
     };
-    exports.version = ""19.3.0-canary-85c427d8-20251003"";
+    exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
   })();"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/react/cjs/react.react-server.production.js,1,1,2,"@@ -423,4 +423,4 @@ exports.useId = function () {
 exports.useMemo = function (create, deps) {
   return ReactSharedInternals.H.useMemo(create, deps);
 };
-exports.version = ""19.3.0-canary-85c427d8-20251003"";
+exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",packages/next/src/compiled/unistore/unistore.js,1,1,2,"@@ -1 +1 @@
-(()=>{var t={329:t=>{function n(t,i){for(var _ in i)t[_]=i[_];return t}t.exports=function(t){var i=[];function u(t){for(var _=[],a=0;a<i.length;a++)i[a]===t?t=null:_.push(i[a]);i=_}function e(_,a,f){t=a?_:n(n({},t),_);for(var o=i,c=0;c<o.length;c++)o[c](t,f)}return t=t||{},{action:function(i){function r(t){e(t,!1,i)}return function(){for(var _=arguments,a=[t],f=0;f<arguments.length;f++)a.push(_[f]);var o=i.apply(this,a);if(null!=o)return o.then?o.then(r):r(o)}},setState:e,subscribe:function(t){return i.push(t),function(){u(t)}},unsubscribe:u,getState:function(){return t}}}}};var i={};function __nccwpck_require__(_){var a=i[_];if(a!==undefined){return a.exports}var f=i[_]={exports:{}};var o=true;try{t[_](f,f.exports,__nccwpck_require__);o=false}finally{if(o)delete i[_]}return f.exports}if(typeof __nccwpck_require__!==""undefined"")__nccwpck_require__.ab=__dirname+""/"";var _=__nccwpck_require__(329);module.exports=_})();
\ No newline at end of file
+(()=>{var t={742:t=>{function n(t,i){for(var _ in i)t[_]=i[_];return t}t.exports=function(t){var i=[];function u(t){for(var _=[],a=0;a<i.length;a++)i[a]===t?t=null:_.push(i[a]);i=_}function e(_,a,f){t=a?_:n(n({},t),_);for(var o=i,c=0;c<o.length;c++)o[c](t,f)}return t=t||{},{action:function(i){function r(t){e(t,!1,i)}return function(){for(var _=arguments,a=[t],f=0;f<arguments.length;f++)a.push(_[f]);var o=i.apply(this,a);if(null!=o)return o.then?o.then(r):r(o)}},setState:e,subscribe:function(t){return i.push(t),function(){u(t)}},unsubscribe:u,getState:function(){return t}}}}};var i={};function __nccwpck_require__(_){var a=i[_];if(a!==undefined){return a.exports}var f=i[_]={exports:{}};var o=true;try{t[_](f,f.exports,__nccwpck_require__);o=false}finally{if(o)delete i[_]}return f.exports}if(typeof __nccwpck_require__!==""undefined"")__nccwpck_require__.ab=__dirname+""/"";var _=__nccwpck_require__(742);module.exports=_})();
\ No newline at end of file"
vercel/next.js,24a046f46677f84f542532540e8f593607d59cb8,nextjs-bot,2025-10-06T18:08:06Z,"Upgrade React from `85c427d8-20251003` to `4fdf7cf2-20251003` (#84499)

Co-authored-by: Sebastian Sebbie Silbermann <sebastian.silbermann@vercel.com>",pnpm-lock.yaml,564,577,1141,
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",errors/invalid-prefetch-configuration.mdx,31,0,31,"@@ -0,0 +1,31 @@
+---
+title: Invalid Prefetch Configuration
+---
+
+## Why This Message Occurred
+
+You provided an invalid configuration for `export const unstable_prefetch` in a Layout or Page file.
+
+### Example of Correct Usage
+
+#### Static Prefetching
+
+```tsx filename=""app/.../layout.tsx""
+export const unstable_prefetch = {
+  mode: 'static',
+}
+```
+
+#### Runtime Prefetching
+
+```tsx filename=""app/[slug]/page.tsx""
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [
+    {
+      cookies: [{ name: 'experiment', value: 'A' }],
+      params: { slug: 'example' },
+    },
+  ],
+}
+```"
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",packages/next/src/build/segment-config/app/app-segment-config.ts,103,7,110,"@@ -1,6 +1,91 @@
 import { z } from 'next/dist/compiled/zod'
 import { formatZodError } from '../../../shared/lib/zod'
 
+const CookieSchema = z
+  .object({
+    name: z.string(),
+    value: z.string(),
+    httpOnly: z.boolean().optional(),
+    path: z.string().optional(),
+  })
+  .strict()
+
+const RuntimeSampleSchema = z
+  .object({
+    cookies: z.array(CookieSchema).optional(),
+    headers: z.array(z.tuple([z.string(), z.string()])).optional(),
+    params: z.record(z.union([z.string(), z.array(z.string())])).optional(),
+    searchParams: z
+      .record(z.union([z.string(), z.array(z.string()), z.undefined()]))
+      .optional(),
+  })
+  .strict()
+
+const StaticPrefetchSchema = z
+  .object({
+    mode: z.literal('static'),
+    from: z.array(z.string()).optional(),
+    expectUnableToVerify: z.boolean().optional(),
+  })
+  .strict()
+
+const RuntimePrefetchSchema = z
+  .object({
+    mode: z.literal('runtime'),
+    samples: z.array(RuntimeSampleSchema).min(1),
+    from: z.array(z.string()).optional(),
+    expectUnableToVerify: z.boolean().optional(),
+  })
+  .strict()
+
+const PrefetchSchema = z.discriminatedUnion('mode', [
+  StaticPrefetchSchema,
+  RuntimePrefetchSchema,
+])
+
+export type Prefetch = StaticPrefetch | RuntimePrefetch
+export type PrefetchForTypeCheckInternal = __GenericPrefetch | Prefetch
+// the __GenericPrefetch type is used to avoid type widening issues with
+// our choice to make exports the medium for programming a Next.js application
+// With exports the type is controlled by the module and all we can do is assert on it
+// from a consumer. However with string literals in objects these are by default typed widely
+// and thus cannot match the discriminated union type. If we figure out a better way we should
+// delete the __GenericPrefetch member.
+interface __GenericPrefetch {
+  mode: string
+  samples?: Array<WideRuntimeSample>
+  from?: string[]
+  expectUnableToVerify?: boolean
+}
+interface StaticPrefetch {
+  mode: 'static'
+  from?: string[]
+  expectUnableToVerify?: boolean
+}
+interface RuntimePrefetch {
+  mode: 'runtime'
+  samples: Array<RuntimeSample>
+  from?: string[]
+  expectUnableToVerify?: boolean
+}
+type WideRuntimeSample = {
+  cookies?: RuntimeSample['cookies']
+  headers?: Array<string[]>
+  params?: RuntimeSample['params']
+  searchParams?: RuntimeSample['searchParams']
+}
+type RuntimeSample = {
+  cookies?: Array<{
+    name: string
+    value: string
+    httpOnly?: boolean
+    path?: string
+  }>
+  headers?: Array<[string, string]>
+  params?: { [key: string]: string | string[] }
+  searchParams?: { [key: string]: string | string[] | undefined }
+}
+
 /**
  * The schema for configuration for a page.
  */
@@ -43,7 +128,7 @@ const AppSegmentConfigSchema = z.object({
    * How this segment should be prefetched.
    * (only applicable when `clientSegmentCache` is enabled)
    */
-  unstable_prefetch: z.enum(['unstable_static', 'unstable_runtime']).optional(),
+  unstable_prefetch: PrefetchSchema.optional(),
 
   /**
    * The preferred region for the page.
@@ -80,11 +165,22 @@ export function parseAppSegmentConfig(
 ): AppSegmentConfig {
   const parsed = AppSegmentConfigSchema.safeParse(data, {
     errorMap: (issue, ctx) => {
-      if (issue.path.length === 1 && issue.path[0] === 'revalidate') {
-        return {
-          message: `Invalid revalidate value ${JSON.stringify(
-            ctx.data
-          )} on ""${route}"", must be a non-negative number or false`,
+      if (issue.path.length === 1) {
+        switch (issue.path[0]) {
+          case 'revalidate': {
+            return {
+              message: `Invalid revalidate value ${JSON.stringify(
+                ctx.data
+              )} on ""${route}"", must be a non-negative number or false`,
+            }
+          }
+          case 'unstable_prefetch': {
+            return {
+              // @TODO replace this link with a link to the docs when they are written
+              message: `Invalid unstable_prefetch value ${JSON.stringify(ctx.data)} on ""${route}"", must be an object with a mode of ""static"" or ""runtime"". Read more at https://nextjs.org/docs/messages/invalid-prefetch-configuration`,
+            }
+          }
+          default:
         }
       }
 
@@ -137,7 +233,7 @@ export type AppSegmentConfig = {
    * How this segment should be prefetched.
    * (only applicable when `clientSegmentCache` is enabled)
    */
-  unstable_prefetch?: 'unstable_static' | 'unstable_runtime'
+  unstable_prefetch?: Prefetch
 
   /**
    * The preferred region for the page."
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",packages/next/src/build/webpack/plugins/next-types-plugin/index.ts,3,1,4,"@@ -52,6 +52,8 @@ ${
     : `import type { ResolvingMetadata, ResolvingViewport } from 'next/dist/lib/metadata/types/metadata-interface.js'`
 }
 
+import type { PrefetchForTypeCheckInternal } from 'next/dist/build/segment-config/app/app-segment-config.js'
+
 type TEntry = typeof import('${relativePath}.js')
 
 type SegmentParams<T extends Object = any> = T extends Record<string, any>
@@ -67,7 +69,7 @@ checkFields<Diff<{
   }
   config?: {}
   generateStaticParams?: Function
-  unstable_prefetch?: 'unstable_static' | 'unstable_runtime'
+  unstable_prefetch?: PrefetchForTypeCheckInternal
   revalidate?: RevalidateRange<TEntry> | false
   dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static'
   dynamicParams?: boolean"
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",packages/next/src/server/app-render/create-component-tree.tsx,1,1,2,"@@ -221,7 +221,7 @@ async function createComponentTreeInternal(
     ? (layoutOrPageMod as AppSegmentConfig).unstable_prefetch
     : undefined
   /** Whether this segment should use a runtime prefetch instead of a static prefetch. */
-  const hasRuntimePrefetch = prefetchConfig === 'unstable_runtime'
+  const hasRuntimePrefetch = prefetchConfig?.mode === 'runtime'
 
   const [Forbidden, forbiddenStyles] =
     authInterrupts && forbidden"
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",packages/next/src/server/typescript/rules/config.ts,6,6,12,"@@ -159,12 +159,12 @@ const API_DOCS: Record<
   unstable_prefetch: {
     description: `Specifies the default prefetching behavior for this segment. This configuration is currently under development and will change.`,
     link: '(docs coming soon)',
-    options: {
-      '""unstable_static""':
-        'Only static and cached parts of the page will be prefetched. (default)',
-      '""unstable_runtime""':
-        'Parts of the page that use route params, search params, or cookies will also be prefetched.',
-    } satisfies DocsOptionsObject<FullAppSegmentConfig['unstable_prefetch']>,
+    type: 'object',
+    // TODO: ideally, we'd validate the config object somehow, but this is difficult to do
+    // with the way this plugin is currently structured.
+    // For now, since we don't provide an `options` here, we won't do any validation in
+    // `getSemanticDiagnosticsForExportVariableStatement` below, and only provide hover a tooltip + autocomplete.
+    insertText: 'unstable_prefetch = { mode: ""static"" };',
   },
 }
 "
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-layout-sharing/app/segment-config/runtime-prefetchable/configured-as-runtime/page.tsx,4,1,5,"@@ -1,7 +1,10 @@
 import { cookies } from 'next/headers'
 import { Suspense } from 'react'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [] }],
+}
 
 export default function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-layout-sharing/app/segment-config/runtime-prefetchable/configured-as-static/page.tsx,3,2,5,"@@ -4,8 +4,9 @@ import { Suspense } from 'react'
 
 // Technically, no `export const unstable_prefetch = ...` is needed, because we default to static,
 // this is just to make sure that we excercise the codepaths for it
-export const unstable_prefetch = 'unstable_static'
-
+export const unstable_prefetch = {
+  mode: 'static',
+}
 export default function Page() {
   return (
     <main>"
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-layout-sharing/app/segment-config/runtime-prefetchable/layout.tsx,4,2,6,"@@ -2,8 +2,10 @@ import { cookies } from 'next/headers'
 import { Suspense } from 'react'
 import { DebugRenderKind } from '../../shared'
 
-export const unstable_prefetch = 'unstable_runtime'
-
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [] }],
+}
 export default async function Layout({ children }) {
   return (
     <main>"
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/fully-static/page.tsx,4,1,5,"@@ -3,7 +3,10 @@
 // but it's useful to exercise this codepath.
 // In the future, this test can be used to check whether we correctly
 // *skip* a runtime prefetch if a page was prerendered as static.
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-page/cookies-only/page.tsx,4,1,5,"@@ -2,7 +2,10 @@ import { cookies } from 'next/headers'
 import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind } from '../../../shared'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [{ name: 'testCookie', value: 'testValue' }] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-page/cookies/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [{ name: 'testCookie', value: 'testValue' }] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-page/dynamic-params/[id]/page.tsx,4,1,5,"@@ -2,7 +2,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ params: { id: 'test' } }],
+}
 
 type Params = { id: string }
 "
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-page/headers/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ headers: [['host', 'test-host']] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-page/search-params/page.tsx,4,1,5,"@@ -2,7 +2,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ searchParams: { key: 'value' } }],
+}
 
 type AnySearchParams = { [key: string]: string | string[] | undefined }
 "
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-private-cache/cookies-only/page.tsx,4,1,5,"@@ -2,7 +2,10 @@ import { cookies } from 'next/headers'
 import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind } from '../../../shared'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [{ name: 'testCookie', value: 'testValue' }] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-private-cache/cookies/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [{ name: 'testCookie', value: 'testValue' }] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-private-cache/date-now/page.tsx,4,1,5,"@@ -2,7 +2,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-private-cache/dynamic-params/[id]/page.tsx,4,1,5,"@@ -2,7 +2,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ params: { id: 'test' } }],
+}
 
 type Params = { id: string }
 "
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-private-cache/headers/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ headers: [['host', 'test-host']] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/in-private-cache/search-params/page.tsx,4,1,5,"@@ -2,7 +2,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ searchParams: { key: 'value' } }],
+}
 
 type AnySearchParams = { [key: string]: string | string[] | undefined }
 "
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/passed-to-public-cache/cookies-only/page.tsx,4,1,5,"@@ -2,7 +2,10 @@ import { cookies } from 'next/headers'
 import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind } from '../../../shared'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [{ name: 'testCookie', value: 'testValue' }] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/passed-to-public-cache/cookies/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind } from '../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ cookies: [{ name: 'testCookie', value: 'testValue' }] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/passed-to-public-cache/dynamic-params/[id]/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { cachedDelay, DebugRenderKind } from '../../../../shared'
 import { connection } from 'next/server'
 import { cookies } from 'next/headers'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ params: { id: 'test' } }],
+}
 
 type Params = { id: string }
 "
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/passed-to-public-cache/headers/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { Suspense } from 'react'
 import { cachedDelay, DebugRenderKind } from '../../../shared'
 import { connection } from 'next/server'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ headers: [['host', 'test-host']] }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/(default)/passed-to-public-cache/search-params/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { cachedDelay, DebugRenderKind } from '../../../shared'
 import { connection } from 'next/server'
 import { cookies } from 'next/headers'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ searchParams: { key: 'value' } }],
+}
 
 type AnySearchParams = { [key: string]: string | string[] | undefined }
 "
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/with-root-param/[lang]/in-page/root-params/page.tsx,4,1,5,"@@ -4,7 +4,10 @@ import { connection } from 'next/server'
 import { lang } from 'next/root-params'
 import { cookies } from 'next/headers'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ params: { lang: 'en' } }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/with-root-param/[lang]/in-private-cache/root-params/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../../shared'
 import { connection } from 'next/server'
 import { lang } from 'next/root-params'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ params: { lang: 'en' } }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,4c4a5bc83f690a7248068f05e4d285a4d42e07a0,Josh Story,2025-10-06T17:32:02Z,"Implement the updated prerender API shape (#84254)

This does not add any validation but it makes the interface for
prerender match out intended API shape when validation is landed

---------

Co-authored-by: Janka Uryga <lolzatu2@gmail.com>",test/e2e/app-dir/segment-cache/prefetch-runtime/app/with-root-param/[lang]/passed-to-public-cache/root-params/page.tsx,4,1,5,"@@ -3,7 +3,10 @@ import { cachedDelay, DebugRenderKind, uncachedIO } from '../../../../shared'
 import { connection } from 'next/server'
 import { lang } from 'next/root-params'
 
-export const unstable_prefetch = 'unstable_runtime'
+export const unstable_prefetch = {
+  mode: 'runtime',
+  samples: [{ params: { lang: 'en' } }],
+}
 
 export default async function Page() {
   return ("
vercel/next.js,86e006bd97269a64d6324ebd827ed33d4859e13b,Niklas Mischkulnig,2025-10-06T11:23:54Z,"Turbopack: debug ids for server chunks (#84557)

Looks like #84319 forgot to enable them for the server chunks",crates/next-api/src/project.rs,1,0,1,"@@ -1073,6 +1073,7 @@ impl Project {
             turbo_source_maps: self.next_config().server_source_maps(),
             no_mangling: self.no_mangling(),
             scope_hoisting: self.next_config().turbo_scope_hoisting(self.next_mode()),
+            debug_ids: self.next_config().turbopack_debug_ids(),
         };
         Ok(if client_assets {
             get_server_chunking_context_with_client_assets("
vercel/next.js,86e006bd97269a64d6324ebd827ed33d4859e13b,Niklas Mischkulnig,2025-10-06T11:23:54Z,"Turbopack: debug ids for server chunks (#84557)

Looks like #84319 forgot to enable them for the server chunks",crates/next-core/src/next_server/context.rs,7,2,9,"@@ -993,6 +993,7 @@ pub struct ServerChunkingContextOptions {
     pub turbo_source_maps: Vc<bool>,
     pub no_mangling: Vc<bool>,
     pub scope_hoisting: Vc<bool>,
+    pub debug_ids: Vc<bool>,
 }
 
 #[turbo_tasks::function]
@@ -1013,6 +1014,7 @@ pub async fn get_server_chunking_context_with_client_assets(
         turbo_source_maps,
         no_mangling,
         scope_hoisting,
+        debug_ids,
     } = options;
 
     let next_mode = mode.await?;
@@ -1045,7 +1047,8 @@ pub async fn get_server_chunking_context_with_client_assets(
     })
     .module_id_strategy(module_id_strategy.to_resolved().await?)
     .export_usage(*export_usage.await?)
-    .file_tracing(next_mode.is_production());
+    .file_tracing(next_mode.is_production())
+    .debug_ids(*debug_ids.await?);
 
     if next_mode.is_development() {
         builder = builder.use_file_source_map_uris();
@@ -1089,6 +1092,7 @@ pub async fn get_server_chunking_context(
         turbo_source_maps,
         no_mangling,
         scope_hoisting,
+        debug_ids,
     } = options;
     let next_mode = mode.await?;
     // TODO(alexkirsz) This should return a trait that can be implemented by the
@@ -1118,7 +1122,8 @@ pub async fn get_server_chunking_context(
     })
     .module_id_strategy(module_id_strategy.to_resolved().await?)
     .export_usage(*export_usage.await?)
-    .file_tracing(next_mode.is_production());
+    .file_tracing(next_mode.is_production())
+    .debug_ids(*debug_ids.await?);
 
     if next_mode.is_development() {
         builder = builder.use_file_source_map_uris()"
vercel/next.js,8d7dfab1a980b85da182b4a0441090a5990c1d70,Luke Sandberg,2025-10-06T10:33:13Z,"[turbopack[ Use the configured hasher to implementh Hash for AutoMap and AutoSet (#84542)

Should be a small perf win.

Also, use `wrapping_add` instead of xor as our commutative operator.",turbopack/crates/turbo-tasks-auto-hash-map/src/map.rs,8,5,13,"@@ -840,7 +840,9 @@ where
 {
 }
 
-impl<K: Eq + Hash, V: Eq + Hash, MH: BuildHasher, const I: usize> Hash for AutoMap<K, V, MH, I> {
+impl<K: Eq + Hash, V: Eq + Hash, MH: BuildHasher + Default, const I: usize> Hash
+    for AutoMap<K, V, MH, I>
+{
     fn hash<H: std::hash::Hasher>(&self, state: &mut H) {
         // Hash the length first to distinguish maps of different sizes
         self.len().hash(state);
@@ -849,17 +851,18 @@ impl<K: Eq + Hash, V: Eq + Hash, MH: BuildHasher, const I: usize> Hash for AutoM
         // regardless of iteration order
         let mut combined_hash = 0u64;
 
+        let hash_builder = MH::default();
         for (k, v) in self.iter() {
-            use std::{collections::hash_map::DefaultHasher, hash::Hasher};
+            use std::hash::Hasher;
 
             // Hash each key-value pair independently
-            let mut entry_hasher = DefaultHasher::new();
+            let mut entry_hasher = hash_builder.build_hasher();
             k.hash(&mut entry_hasher);
             v.hash(&mut entry_hasher);
             let entry_hash = entry_hasher.finish();
 
-            // Combine using XOR to make it order-independent
-            combined_hash ^= entry_hash;
+            // Combine using addition to make it order-independent (wrapping_add is commutative)
+            combined_hash = combined_hash.wrapping_add(entry_hash);
         }
 
         // Hash the combined result"
vercel/next.js,8d7dfab1a980b85da182b4a0441090a5990c1d70,Luke Sandberg,2025-10-06T10:33:13Z,"[turbopack[ Use the configured hasher to implementh Hash for AutoMap and AutoSet (#84542)

Should be a small perf win.

Also, use `wrapping_add` instead of xor as our commutative operator.",turbopack/crates/turbo-tasks-auto-hash-map/src/set.rs,1,1,2,"@@ -219,7 +219,7 @@ impl<K: Eq + Hash, H: BuildHasher, const I: usize> PartialEq for AutoSet<K, H, I
 
 impl<K: Eq + Hash, H: BuildHasher, const I: usize> Eq for AutoSet<K, H, I> {}
 
-impl<K: Eq + Hash, SH: BuildHasher, const I: usize> Hash for AutoSet<K, SH, I> {
+impl<K: Eq + Hash, SH: BuildHasher + Default, const I: usize> Hash for AutoSet<K, SH, I> {
     fn hash<H: std::hash::Hasher>(&self, state: &mut H) {
         self.map.hash(state);
     }"
vercel/next.js,6b427544cfc2c3e1d853bb1038c057b0b20f2e30,Benjamin Woodruff,2025-10-06T09:43:01Z,"test: Use nextTestSetup in scss tests (#84501)

This ensures the tests have some coverage for `next dev`, and ensures proper test isolation. Previously they were just using `__dirname`, which is wrong.",test/e2e/app-dir/scss/invalid-global-with-app/invalid-global-with-app.test.ts,56,21,77,"@@ -1,29 +1,64 @@
 /* eslint-env jest */
 
-import { remove } from 'fs-extra'
-import { nextBuild } from 'next-test-utils'
-import { join } from 'path'
+import { isNextStart, nextTestSetup } from 'e2e-utils'
+import { assertHasRedbox, getRedboxSource } from 'next-test-utils'
 
 describe('Invalid Global CSS with Custom App', () => {
-  const appDir = __dirname
-
-  beforeAll(async () => {
-    await remove(join(appDir, '.next'))
+  const { next, skipped, isTurbopack, isRspack } = nextTestSetup({
+    files: __dirname,
+    skipStart: isNextStart,
+    skipDeployment: true,
+    dependencies: { sass: '1.54.0' },
   })
 
-  it('should fail to build', async () => {
-    const { code, stderr } = await nextBuild(appDir, [], {
-      stderr: true,
+  if (skipped) {
+    return
+  }
+
+  if (isNextStart) {
+    it('should fail to build', async () => {
+      const { exitCode, cliOutput } = await next.build()
+      expect(exitCode).not.toBe(0)
+      expect(cliOutput).toContain('Failed to compile')
+      expect(cliOutput).toContain('styles/global.scss')
+      expect(cliOutput).toMatch(
+        /Please move all first-party global CSS imports.*?pages(\/|\\)_app/
+      )
+      // Skip: Rspack loaders cannot access module issuer info for location details
+      if (!process.env.NEXT_RSPACK) {
+        expect(cliOutput).toMatch(/Location:.*pages[\\/]index\.js/)
+      }
     })
-    expect(code).not.toBe(0)
-    expect(stderr).toContain('Failed to compile')
-    expect(stderr).toContain('styles/global.scss')
-    expect(stderr).toMatch(
-      /Please move all first-party global CSS imports.*?pages(\/|\\)_app/
-    )
-    // Skip: Rspack loaders cannot access module issuer info for location details
-    if (!process.env.NEXT_RSPACK) {
-      expect(stderr).toMatch(/Location:.*pages[\\/]index\.js/)
-    }
-  })
+  } else {
+    it('should show a build error', async () => {
+      const browser = await next.browser('/')
+
+      await assertHasRedbox(browser)
+      const errorSource = await getRedboxSource(browser)
+
+      if (isTurbopack) {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./pages/index.js
+         Failed to compile
+             Global CSS cannot be imported from files other than your Custom <App>. Due to the Global nature of stylesheets, and to avoid conflicts, Please move all first-party global CSS imports to pages/_app.js. Or convert the import to Component-Level CSS (CSS Modules).
+             Read more: https://nextjs.org/docs/messages/css-global
+         Location: pages/index.js
+         Import path: ../styles/global.scss""
+        `)
+      } else if (isRspack) {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./styles/global.scss
+           │ Global CSS cannot be imported from files other than your Custom <App>. Due to the Global nature of stylesheets, and to avoid conflicts, Please move all first-party global CSS imports to pages/_app.js. Or convert the import to Component-Level CSS (CSS Modules).
+           │ Read more: https://nextjs.org/docs/messages/css-global""
+        `)
+      } else {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./styles/global.scss
+         Global CSS cannot be imported from files other than your Custom <App>. Due to the Global nature of stylesheets, and to avoid conflicts, Please move all first-party global CSS imports to pages/_app.js. Or convert the import to Component-Level CSS (CSS Modules).
+         Read more: https://nextjs.org/docs/messages/css-global
+         Location: pages/index.js""
+        `)
+      }
+    })
+  }
 })"
vercel/next.js,6b427544cfc2c3e1d853bb1038c057b0b20f2e30,Benjamin Woodruff,2025-10-06T09:43:01Z,"test: Use nextTestSetup in scss tests (#84501)

This ensures the tests have some coverage for `next dev`, and ensures proper test isolation. Previously they were just using `__dirname`, which is wrong.",test/e2e/app-dir/scss/invalid-global/invalid-global.test.ts,56,21,77,"@@ -1,29 +1,64 @@
 /* eslint-env jest */
 
-import { remove } from 'fs-extra'
-import { nextBuild } from 'next-test-utils'
-import { join } from 'path'
+import { isNextStart, nextTestSetup } from 'e2e-utils'
+import { assertHasRedbox, getRedboxSource } from 'next-test-utils'
 
 describe('Invalid Global CSS', () => {
-  const appDir = __dirname
-
-  beforeAll(async () => {
-    await remove(join(appDir, '.next'))
+  const { next, skipped, isTurbopack, isRspack } = nextTestSetup({
+    files: __dirname,
+    skipStart: isNextStart,
+    skipDeployment: true,
+    dependencies: { sass: '1.54.0' },
   })
 
-  it('should fail to build', async () => {
-    const { code, stderr } = await nextBuild(appDir, [], {
-      stderr: true,
+  if (skipped) {
+    return
+  }
+
+  if (isNextStart) {
+    it('should fail to build', async () => {
+      const { exitCode, cliOutput } = await next.build()
+      expect(exitCode).not.toBe(0)
+      expect(cliOutput).toContain('Failed to compile')
+      expect(cliOutput).toContain('styles/global.scss')
+      expect(cliOutput).toMatch(
+        /Please move all first-party global CSS imports.*?pages(\/|\\)_app/
+      )
+      // Skip: Rspack loaders cannot access module issuer info for location details
+      if (!process.env.NEXT_RSPACK) {
+        expect(cliOutput).toMatch(/Location:.*pages[\\/]index\.js/)
+      }
     })
-    expect(code).not.toBe(0)
-    expect(stderr).toContain('Failed to compile')
-    expect(stderr).toContain('styles/global.scss')
-    expect(stderr).toMatch(
-      /Please move all first-party global CSS imports.*?pages(\/|\\)_app/
-    )
-    // Skip: Rspack loaders cannot access module issuer info for location details
-    if (!process.env.NEXT_RSPACK) {
-      expect(stderr).toMatch(/Location:.*pages[\\/]index\.js/)
-    }
-  })
+  } else {
+    it('should show a build error', async () => {
+      const browser = await next.browser('/')
+
+      await assertHasRedbox(browser)
+      const errorSource = await getRedboxSource(browser)
+
+      if (isTurbopack) {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./pages/index.js
+         Failed to compile
+             Global CSS cannot be imported from files other than your Custom <App>. Due to the Global nature of stylesheets, and to avoid conflicts, Please move all first-party global CSS imports to pages/_app.js. Or convert the import to Component-Level CSS (CSS Modules).
+             Read more: https://nextjs.org/docs/messages/css-global
+         Location: pages/index.js
+         Import path: ../styles/global.scss""
+        `)
+      } else if (isRspack) {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./styles/global.scss
+           │ Global CSS cannot be imported from files other than your Custom <App>. Due to the Global nature of stylesheets, and to avoid conflicts, Please move all first-party global CSS imports to pages/_app.js. Or convert the import to Component-Level CSS (CSS Modules).
+           │ Read more: https://nextjs.org/docs/messages/css-global""
+        `)
+      } else {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./styles/global.scss
+         Global CSS cannot be imported from files other than your Custom <App>. Due to the Global nature of stylesheets, and to avoid conflicts, Please move all first-party global CSS imports to pages/_app.js. Or convert the import to Component-Level CSS (CSS Modules).
+         Read more: https://nextjs.org/docs/messages/css-global
+         Location: pages/index.js""
+        `)
+      }
+    })
+  }
 })"
vercel/next.js,6b427544cfc2c3e1d853bb1038c057b0b20f2e30,Benjamin Woodruff,2025-10-06T09:43:01Z,"test: Use nextTestSetup in scss tests (#84501)

This ensures the tests have some coverage for `next dev`, and ensures proper test isolation. Previously they were just using `__dirname`, which is wrong.",test/e2e/app-dir/scss/invalid-module-document/invalid-module-document.test.ts,46,29,75,"@@ -1,40 +1,57 @@
 /* eslint-env jest */
 
-import { remove } from 'fs-extra'
-import { nextBuild } from 'next-test-utils'
-import { join } from 'path'
-// In order for the global isNextStart to be set
-import 'e2e-utils'
+import { isNextStart, nextTestSetup } from 'e2e-utils'
+import { assertHasRedbox, getRedboxSource } from 'next-test-utils'
 
 // Importing module CSS in _document is allowed in Turbopack
 ;(process.env.IS_TURBOPACK_TEST ? describe.skip : describe)(
   'Invalid SCSS in _document',
   () => {
-    ;(Boolean((global as any).isNextStart) ? describe : describe.skip)(
-      'production only',
-      () => {
-        const appDir = __dirname
+    const { next, skipped, isRspack } = nextTestSetup({
+      files: __dirname,
+      skipStart: isNextStart,
+      skipDeployment: true,
+      dependencies: { sass: '1.54.0' },
+    })
 
-        beforeAll(async () => {
-          await remove(join(appDir, '.next'))
-        })
+    if (skipped) {
+      return
+    }
 
-        it('should fail to build', async () => {
-          const { code, stderr } = await nextBuild(appDir, [], {
-            stderr: true,
-          })
-          expect(code).not.toBe(0)
-          expect(stderr).toContain('Failed to compile')
-          expect(stderr).toContain('styles.module.scss')
-          expect(stderr).toMatch(
-            /CSS.*cannot.*be imported within.*pages[\\/]_document\.js/
-          )
-          // Skip: Rspack loaders cannot access module issuer info for location details
-          if (!process.env.NEXT_RSPACK) {
-            expect(stderr).toMatch(/Location:.*pages[\\/]_document\.js/)
-          }
-        })
-      }
-    )
+    if (isNextStart) {
+      it('should fail to build', async () => {
+        const { exitCode, cliOutput } = await next.build()
+        expect(exitCode).not.toBe(0)
+        expect(cliOutput).toContain('Failed to compile')
+        expect(cliOutput).toContain('styles.module.scss')
+        expect(cliOutput).toMatch(
+          /CSS.*cannot.*be imported within.*pages[\\/]_document\.js/
+        )
+        // Skip: Rspack loaders cannot access module issuer info for location details
+        if (!process.env.NEXT_RSPACK) {
+          expect(cliOutput).toMatch(/Location:.*pages[\\/]_document\.js/)
+        }
+      })
+    } else {
+      it('should show a build error', async () => {
+        const browser = await next.browser('/')
+
+        await assertHasRedbox(browser)
+        const errorSource = await getRedboxSource(browser)
+
+        if (isRspack) {
+          expect(errorSource).toMatchInlineSnapshot(`
+           ""./styles.module.scss
+             │ CSS cannot be imported within pages/_document.js. Please move global styles to pages/_app.js.""
+          `)
+        } else {
+          expect(errorSource).toMatchInlineSnapshot(`
+           ""./styles.module.scss
+           CSS cannot be imported within pages/_document.js. Please move global styles to pages/_app.js.
+           Location: pages/_document.js""
+          `)
+        }
+      })
+    }
   }
 )"
vercel/next.js,6b427544cfc2c3e1d853bb1038c057b0b20f2e30,Benjamin Woodruff,2025-10-06T09:43:01Z,"test: Use nextTestSetup in scss tests (#84501)

This ensures the tests have some coverage for `next dev`, and ensures proper test isolation. Previously they were just using `__dirname`, which is wrong.",test/e2e/app-dir/scss/npm-import-bad/npm-import-bad.test.ts,68,25,93,"@@ -1,30 +1,73 @@
 /* eslint-env jest */
 
-import { remove } from 'fs-extra'
-import { nextBuild } from 'next-test-utils'
-import { join } from 'path'
-// In order for the global isNextStart to be set
-import 'e2e-utils'
-
-console.log({ global })
+import { isNextStart, nextTestSetup } from 'e2e-utils'
+import { assertHasRedbox, getRedboxSource } from 'next-test-utils'
 
 describe('CSS Import from node_modules', () => {
-  ;(Boolean((global as any).isNextStart) ? describe : describe.skip)(
-    'production only',
-    () => {
-      const appDir = __dirname
-
-      beforeAll(async () => {
-        await remove(join(appDir, '.next'))
-      })
-
-      it('should fail the build', async () => {
-        const { code, stderr } = await nextBuild(appDir, [], { stderr: true })
-
-        expect(code).toBe(0)
-        expect(stderr).not.toMatch(/Can't resolve '[^']*?nprogress[^']*?'/)
-        expect(stderr).not.toMatch(/Build error occurred/)
-      })
-    }
-  )
+  const { next, skipped, isTurbopack, isRspack } = nextTestSetup({
+    files: __dirname,
+    skipStart: isNextStart,
+    skipDeployment: true,
+    dependencies: { sass: '1.54.0' },
+  })
+
+  if (skipped) {
+    return
+  }
+
+  if (isNextStart) {
+    it('should fail the build', async () => {
+      const { exitCode, cliOutput } = await next.build()
+      expect(exitCode).not.toBe(0)
+      if (isRspack) {
+        expect(cliOutput).toMatch(
+          /RspackResolver\(NotFound\(\\?""nprogress\/nprogress.css\\?""\)\)/
+        )
+      } else {
+        expect(cliOutput).toMatch(/Can't resolve '[^']*?nprogress[^']*?'/)
+      }
+      expect(cliOutput).toMatch(/Build failed|Build error occurred/)
+    })
+  } else {
+    it('should show a build error', async () => {
+      const browser = await next.browser('/')
+
+      await assertHasRedbox(browser)
+      const errorSource = await getRedboxSource(browser)
+
+      if (isTurbopack) {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./styles/global.scss.css (1:9)
+         Module not found: Can't resolve 'nprogress/nprogress.css'
+         > 1 | @import 'nprogress/nprogress.css';
+             |         ^
+           2 |
+
+         Import trace:
+           Browser:
+             ./styles/global.scss.css
+             ./pages/_app.js
+
+         https://nextjs.org/docs/messages/module-not-found""
+        `)
+      } else if (isRspack) {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./node_modules/.pnpm/next@file+..+next-repo-9363c99f3d71d8f039ab2f44b0982247ca3f251f6a3cb48f6f97e14bd6290b68_3cf165911481a65b93532bfb8e2c9025/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[8].oneOf[14].use[1]!./node_modules/.pnpm/next@file+..+next-repo-9363c99f3d71d8f039ab2f44b0982247ca3f251f6a3cb48f6f97e14bd6290b68_3cf165911481a65b93532bfb8e2c9025/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[8].oneOf[14].use[2]!./node_modules/.pnpm/next@file+..+next-repo-9363c99f3d71d8f039ab2f44b0982247ca3f251f6a3cb48f6f97e14bd6290b68_3cf165911481a65b93532bfb8e2c9025/node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[8].oneOf[14].use[3]!./node_modules/.pnpm/next@file+..+next-repo-9363c99f3d71d8f039ab2f44b0982247ca3f251f6a3cb48f6f97e14bd6290b68_3cf165911481a65b93532bfb8e2c9025/node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[8].oneOf[14].use[4]!./styles/global.scss
+           × Module build failed:
+           ╰─▶   × Error: RspackResolver(NotFound(""nprogress/nprogress.css""))""
+        `)
+      } else {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./styles/global.scss
+         Module not found: Can't resolve 'nprogress/nprogress.css'
+
+         https://nextjs.org/docs/messages/module-not-found
+
+         Import trace for requested module:
+         ./styles/global.scss
+         ./pages/_app.js""
+        `)
+      }
+    })
+  }
 })"
vercel/next.js,6b427544cfc2c3e1d853bb1038c057b0b20f2e30,Benjamin Woodruff,2025-10-06T09:43:01Z,"test: Use nextTestSetup in scss tests (#84501)

This ensures the tests have some coverage for `next dev`, and ensures proper test isolation. Previously they were just using `__dirname`, which is wrong.",test/e2e/app-dir/scss/valid-and-invalid-global/valid-and-invalid-global.test.ts,56,19,75,"@@ -1,27 +1,64 @@
 /* eslint-env jest */
 
-import { remove } from 'fs-extra'
-import { nextBuild } from 'next-test-utils'
-import { join } from 'path'
+import { isNextStart, nextTestSetup } from 'e2e-utils'
+import { assertHasRedbox, getRedboxSource } from 'next-test-utils'
 
 describe('Valid and Invalid Global CSS with Custom App', () => {
-  const appDir = __dirname
-
-  beforeAll(async () => {
-    await remove(join(appDir, '.next'))
+  const { next, skipped, isTurbopack, isRspack } = nextTestSetup({
+    files: __dirname,
+    skipStart: isNextStart,
+    skipDeployment: true,
+    dependencies: { sass: '1.54.0' },
   })
 
-  it('should fail to build', async () => {
-    const { code, stderr } = await nextBuild(appDir, [], {
-      stderr: true,
+  if (skipped) {
+    return
+  }
+
+  if (isNextStart) {
+    it('should fail to build', async () => {
+      const { exitCode, cliOutput } = await next.build()
+      expect(exitCode).not.toBe(0)
+      expect(cliOutput).toContain('Failed to compile')
+      expect(cliOutput).toContain('styles/global.scss')
+      expect(cliOutput).toContain(
+        'Please move all first-party global CSS imports'
+      )
+      // Skip: Rspack loaders cannot access module issuer info for location details
+      if (!process.env.NEXT_RSPACK) {
+        expect(cliOutput).toMatch(/Location:.*pages[\\/]index\.js/)
+      }
     })
-    expect(code).not.toBe(0)
-    expect(stderr).toContain('Failed to compile')
-    expect(stderr).toContain('styles/global.scss')
-    expect(stderr).toContain('Please move all first-party global CSS imports')
-    // Skip: Rspack loaders cannot access module issuer info for location details
-    if (!process.env.NEXT_RSPACK) {
-      expect(stderr).toMatch(/Location:.*pages[\\/]index\.js/)
-    }
-  })
+  } else {
+    it('should show a build error', async () => {
+      const browser = await next.browser('/')
+
+      await assertHasRedbox(browser)
+      const errorSource = await getRedboxSource(browser)
+
+      if (isTurbopack) {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./pages/index.js
+         Failed to compile
+             Global CSS cannot be imported from files other than your Custom <App>. Due to the Global nature of stylesheets, and to avoid conflicts, Please move all first-party global CSS imports to pages/_app.js. Or convert the import to Component-Level CSS (CSS Modules).
+             Read more: https://nextjs.org/docs/messages/css-global
+         Location: pages/index.js
+         Import path: ../styles/global.scss""
+        `)
+      } else if (isRspack) {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./styles/global.scss
+           │ Global CSS cannot be imported from files other than your Custom <App>. Due to the Global nature of stylesheets, and to avoid conflicts, Please move all first-party global CSS imports to pages/_app.js. Or convert the import to Component-Level CSS (CSS Modules).
+           │ Read more: https://nextjs.org/docs/messages/css-global""
+        `)
+      } else {
+        expect(errorSource).toMatchInlineSnapshot(`
+         ""./styles/global.scss
+         Global CSS cannot be imported from files other than your Custom <App>. Due to the Global nature of stylesheets, and to avoid conflicts, Please move all first-party global CSS imports to pages/_app.js. Or convert the import to Component-Level CSS (CSS Modules).
+         Read more: https://nextjs.org/docs/messages/css-global
+         Location: pages/index.js""
+        `)
+      }
+    })
+  }
 })"
vercel/next.js,6b427544cfc2c3e1d853bb1038c057b0b20f2e30,Benjamin Woodruff,2025-10-06T09:43:01Z,"test: Use nextTestSetup in scss tests (#84501)

This ensures the tests have some coverage for `next dev`, and ensures proper test isolation. Previously they were just using `__dirname`, which is wrong.",test/lib/e2e-utils/index.ts,11,6,17,"@@ -104,6 +104,8 @@ export const isNextDeploy = testMode === 'deploy'
  */
 export const isNextStart = !isNextDev && !isNextDeploy
 
+export const isRspack = !!process.env.NEXT_RSPACK
+
 if (!testMode) {
   throw new Error(
     `No 'NEXT_TEST_MODE' set in environment, this is required for e2e-utils`
@@ -234,6 +236,7 @@ export function nextTestSetup(
   isNextDeploy: boolean
   isNextStart: boolean
   isTurbopack: boolean
+  isRspack: boolean
   next: NextInstance
   skipped: boolean
 } {
@@ -287,18 +290,20 @@ export function nextTestSetup(
     get isNextDev() {
       return isNextDev
     },
-    get isTurbopack(): boolean {
-      return Boolean(
-        !process.env.NEXT_TEST_WASM && (options.turbo ?? shouldUseTurbopack())
-      )
-    },
-
     get isNextDeploy() {
       return isNextDeploy
     },
     get isNextStart() {
       return isNextStart
     },
+    get isTurbopack() {
+      return Boolean(
+        !process.env.NEXT_TEST_WASM && (options.turbo ?? shouldUseTurbopack())
+      )
+    },
+    get isRspack() {
+      return isRspack
+    },
     get next() {
       return nextProxy
     },"
vercel/next.js,631dd719283af2ac6534f4f82d2b8b12b1d57d55,Jude Gao,2025-10-06T02:15:01Z,"Revert ""next mcp router""

This reverts commit 48d9966c54ab469fda90a8796bb0a902229c3587.",packages/next/src/bin/next.ts,0,9,9,"@@ -438,15 +438,6 @@ program
   )
   .usage('[directory] [options]')
 
-program
-  .command('mcp')
-  .description(
-    'Starts an MCP server using stdio transport. Manages sessions for all Next.js dev servers on this machine.'
-  )
-  .action(() => {
-    import('../cli/next-mcp-stdio.js')
-  })
-
 const internal = program
   .command('internal')
   .description("
vercel/next.js,631dd719283af2ac6534f4f82d2b8b12b1d57d55,Jude Gao,2025-10-06T02:15:01Z,"Revert ""next mcp router""

This reverts commit 48d9966c54ab469fda90a8796bb0a902229c3587.",packages/next/src/cli/next-mcp-stdio.ts,0,495,495,"@@ -1,495 +0,0 @@
-#!/usr/bin/env node
-
-import { McpServer } from 'next/dist/compiled/@modelcontextprotocol/sdk/server/mcp'
-import { StdioServerTransport } from 'next/dist/compiled/@modelcontextprotocol/sdk/server/stdio'
-import { z } from 'next/dist/compiled/zod'
-import fs from 'fs'
-import path from 'path'
-import os from 'os'
-
-const DEV_SERVER_REGISTRY_PATH = path.join(os.tmpdir(), 'next-dev-servers.json')
-
-const HEARTBEAT_TIMEOUT_MS = 60000
-const REGISTRY_POLL_INTERVAL_MS = 2000
-
-interface DevServerInfo {
-  port: number
-  hostname: string
-  pid: number
-  projectPath: string
-  lastSeen: number
-}
-
-interface DevServerRegistry {
-  [projectPath: string]: DevServerInfo
-}
-
-let devServerRegistry: DevServerRegistry = {}
-let registryWatcher: fs.FSWatcher | null = null
-let cleanupRegistryInterval: NodeJS.Timeout | null = null
-
-function isProcessAlive(pid: number): boolean {
-  try {
-    process.kill(pid, 0)
-    return true
-  } catch (error) {
-    return false
-  }
-}
-
-function loadDevServerRegistry(): DevServerRegistry {
-  try {
-    if (!fs.existsSync(DEV_SERVER_REGISTRY_PATH)) {
-      return {}
-    }
-
-    const content = fs.readFileSync(DEV_SERVER_REGISTRY_PATH, 'utf-8')
-    if (!content.trim()) {
-      return {}
-    }
-
-    const registry = JSON.parse(content) as DevServerRegistry
-    const now = Date.now()
-    const cleanedRegistry: DevServerRegistry = {}
-
-    for (const [projectPath, info] of Object.entries(registry)) {
-      if (
-        typeof info.port !== 'number' ||
-        typeof info.hostname !== 'string' ||
-        typeof info.pid !== 'number' ||
-        typeof info.projectPath !== 'string' ||
-        typeof info.lastSeen !== 'number'
-      ) {
-        console.error(
-          `[MCP] Invalid registry entry for ${projectPath}, skipping`
-        )
-        continue
-      }
-
-      if (now - info.lastSeen > HEARTBEAT_TIMEOUT_MS) {
-        console.error(
-          `[MCP] Dev server at ${projectPath} is stale (last seen ${Math.round((now - info.lastSeen) / 1000)}s ago), removing`
-        )
-        continue
-      }
-
-      if (!isProcessAlive(info.pid)) {
-        console.error(
-          `[MCP] Dev server at ${projectPath} (PID ${info.pid}) is not running, removing`
-        )
-        continue
-      }
-
-      cleanedRegistry[projectPath] = info
-    }
-
-    return cleanedRegistry
-  } catch (error) {
-    console.error('[MCP] Failed to load dev server registry:', error)
-    return {}
-  }
-}
-
-function watchDevServerRegistry(
-  onChange: (registry: DevServerRegistry) => void
-): () => void {
-  const dir = path.dirname(DEV_SERVER_REGISTRY_PATH)
-
-  try {
-    if (!fs.existsSync(dir)) {
-      fs.mkdirSync(dir, { recursive: true })
-    }
-  } catch (error) {
-    console.error('[MCP] Failed to create registry directory:', error)
-    return () => {}
-  }
-
-  try {
-    registryWatcher = fs.watch(
-      dir,
-      { persistent: false },
-      (eventType, filename) => {
-        if (filename === path.basename(DEV_SERVER_REGISTRY_PATH)) {
-          try {
-            const registry = loadDevServerRegistry()
-            onChange(registry)
-          } catch (error) {
-            console.error('[MCP] Error handling registry change:', error)
-          }
-        }
-      }
-    )
-
-    registryWatcher.on('error', (error) => {
-      console.error('[MCP] Registry watcher error:', error)
-    })
-
-    cleanupRegistryInterval = setInterval(() => {
-      try {
-        const registry = loadDevServerRegistry()
-        onChange(registry)
-      } catch (error) {
-        console.error('[MCP] Error during periodic registry cleanup:', error)
-      }
-    }, REGISTRY_POLL_INTERVAL_MS)
-
-    return () => {
-      if (registryWatcher) {
-        registryWatcher.close()
-        registryWatcher = null
-      }
-      if (cleanupRegistryInterval) {
-        clearInterval(cleanupRegistryInterval)
-        cleanupRegistryInterval = null
-      }
-    }
-  } catch (error) {
-    console.error('[MCP] Failed to setup registry watcher:', error)
-    return () => {}
-  }
-}
-
-function findDevServerByContext(context?: string): DevServerInfo | null {
-  const servers = Object.values(devServerRegistry)
-
-  if (servers.length === 0) {
-    return null
-  }
-
-  if (servers.length === 1) {
-    return servers[0]
-  }
-
-  if (!context) {
-    return null
-  }
-
-  if (devServerRegistry[context]) {
-    return devServerRegistry[context]
-  }
-
-  const normalizedContext = path.normalize(context)
-
-  for (const server of servers) {
-    if (server.projectPath === normalizedContext) {
-      return server
-    }
-  }
-
-  for (const server of servers) {
-    if (server.projectPath.includes(normalizedContext)) {
-      return server
-    }
-  }
-
-  for (const server of servers) {
-    if (normalizedContext.includes(path.basename(server.projectPath))) {
-      return server
-    }
-  }
-
-  return null
-}
-
-async function proxyMcpRequest(
-  method: string,
-  params: unknown,
-  context?: string,
-  toolName?: string
-): Promise<any> {
-  const devServer = findDevServerByContext(context)
-
-  if (!devServer) {
-    const projectCount = Object.keys(devServerRegistry).length
-    if (projectCount === 0) {
-      throw new Error(
-        'No dev servers running. Please start a dev server with `next dev`'
-      )
-    } else if (context) {
-      const availableProjects = Object.keys(devServerRegistry)
-        .map((p) => `  - ${p}`)
-        .join('\n')
-      throw new Error(
-        `Could not find dev server for context ""${context}"".\n` +
-          `Available projects:\n${availableProjects}\n\n` +
-          `Use get_project_path() with one of the paths above.`
-      )
-    } else {
-      const availableProjects = Object.keys(devServerRegistry)
-        .map((p) => `  - ${p}`)
-        .join('\n')
-      throw new Error(
-        `Multiple dev servers running (${projectCount}). Please specify projectPath.\n` +
-          `Available projects:\n${availableProjects}\n\n` +
-          `Example: get_errors({ projectPath: ""${Object.keys(devServerRegistry)[0]}"" })`
-      )
-    }
-  }
-
-  const url = `http://${devServer.hostname}:${devServer.port}/_next/mcp`
-
-  let response: Response
-  try {
-    response = await fetch(url, {
-      method: 'POST',
-      headers: {
-        'Content-Type': 'application/json',
-      },
-      body: JSON.stringify({
-        jsonrpc: '2.0',
-        method,
-        params,
-        id: 1,
-      }),
-      signal: AbortSignal.timeout(10000),
-    })
-  } catch (error) {
-    if (error instanceof Error && error.name === 'TimeoutError') {
-      throw new Error(
-        `Request to dev server timed out (${devServer.projectPath}). ` +
-          `The dev server may be unresponsive.`
-      )
-    }
-    throw new Error(
-      `Failed to connect to dev server at ${devServer.hostname}:${devServer.port} (${devServer.projectPath}). ` +
-        `Error: ${error instanceof Error ? error.message : String(error)}`
-    )
-  }
-
-  if (!response.ok) {
-    throw new Error(
-      `Dev server returned HTTP ${response.status}: ${response.statusText} (${devServer.projectPath})`
-    )
-  }
-
-  let data: {
-    error?: { code?: number; message?: string }
-    result?: unknown
-  }
-
-  try {
-    data = await response.json()
-  } catch (error) {
-    throw new Error(
-      `Invalid JSON response from dev server (${devServer.projectPath})`
-    )
-  }
-
-  if (data.error) {
-    if (
-      toolName &&
-      data.error.message &&
-      (data.error.message.toLowerCase().includes('unknown tool') ||
-        data.error.message.toLowerCase().includes('not found'))
-    ) {
-      throw new Error(
-        `Tool '${toolName}' is not supported in this project (${devServer.projectPath}).\n\n` +
-          `This tool may require a newer version of Next.js.\n` +
-          `Try upgrading: npm install next@latest`
-      )
-    }
-    throw new Error(
-      data.error.message || `MCP error code ${data.error.code || 'unknown'}`
-    )
-  }
-
-  return data.result
-}
-
-async function startStdioMcpServer(): Promise<void> {
-  devServerRegistry = loadDevServerRegistry()
-
-  const cleanup = watchDevServerRegistry((registry) => {
-    devServerRegistry = registry
-    const serverCount = Object.keys(registry).length
-    console.error(`[MCP] Registry updated: ${serverCount} dev server(s) active`)
-    for (const [projectPath, info] of Object.entries(registry)) {
-      console.error(`[MCP]   - ${projectPath} on ${info.hostname}:${info.port}`)
-    }
-  })
-
-  process.on('SIGINT', () => {
-    console.error('[MCP] Received SIGINT, shutting down...')
-    cleanup()
-    process.exit(0)
-  })
-
-  process.on('SIGTERM', () => {
-    console.error('[MCP] Received SIGTERM, shutting down...')
-    cleanup()
-    process.exit(0)
-  })
-
-  process.on('uncaughtException', (error) => {
-    console.error('[MCP] Uncaught exception:', error)
-    cleanup()
-    process.exit(1)
-  })
-
-  process.on('unhandledRejection', (reason) => {
-    console.error('[MCP] Unhandled rejection:', reason)
-    cleanup()
-    process.exit(1)
-  })
-
-  const mcpServer = new McpServer({
-    name: 'Next.js Dev Server Manager (stdio)',
-    version: '0.1.0',
-  })
-
-  mcpServer.registerTool(
-    'list_dev_servers',
-    {
-      description: 'List all running Next.js dev servers',
-      inputSchema: {},
-    },
-    async () => {
-      const servers = Object.entries(devServerRegistry).map(
-        ([projectPath, info]) => ({
-          projectPath,
-          port: info.port,
-          hostname: info.hostname,
-          pid: info.pid,
-        })
-      )
-      return {
-        content: [
-          {
-            type: 'text',
-            text: JSON.stringify({ servers }, null, 2),
-          },
-        ],
-      }
-    }
-  )
-
-  mcpServer.registerTool(
-    'get_project_path',
-    {
-      description:
-        'Get the absolute path to the Next.js project directory. Optional projectPath context to specify which dev server.',
-      inputSchema: {
-        projectPath: z.string().optional(),
-      },
-    },
-    async (request) => {
-      return proxyMcpRequest(
-        'tools/call',
-        {
-          name: 'get_project_path',
-          arguments: {},
-        },
-        request.projectPath,
-        'get_project_path'
-      )
-    }
-  )
-
-  mcpServer.registerTool(
-    'get_errors',
-    {
-      description:
-        'Get the current error state of the app when rendered in the browser. Optional projectPath to specify which dev server.',
-      inputSchema: {
-        projectPath: z.string().optional(),
-      },
-    },
-    async (request) => {
-      return proxyMcpRequest(
-        'tools/call',
-        {
-          name: 'get_errors',
-          arguments: {},
-        },
-        request.projectPath,
-        'get_errors'
-      )
-    }
-  )
-
-  mcpServer.registerTool(
-    'get_page_metadata',
-    {
-      description:
-        'Get metadata about the currently loaded page in the browser. Optional projectPath to specify which dev server.',
-      inputSchema: {
-        projectPath: z.string().optional(),
-      },
-    },
-    async (request) => {
-      return proxyMcpRequest(
-        'tools/call',
-        {
-          name: 'get_page_metadata',
-          arguments: {},
-        },
-        request.projectPath,
-        'get_page_metadata'
-      )
-    }
-  )
-
-  mcpServer.registerTool(
-    'get_logs',
-    {
-      description:
-        'Get recent build and runtime logs from the dev server. Optional projectPath to specify which dev server.',
-      inputSchema: {
-        projectPath: z.string().optional(),
-      },
-    },
-    async (request) => {
-      return proxyMcpRequest(
-        'tools/call',
-        {
-          name: 'get_logs',
-          arguments: {},
-        },
-        request.projectPath,
-        'get_logs'
-      )
-    }
-  )
-
-  mcpServer.registerTool(
-    'get_server_action_by_id',
-    {
-      description:
-        'Get information about a specific server action by its ID. Optional projectPath to specify which dev server.',
-      inputSchema: {
-        actionId: z.string(),
-        projectPath: z.string().optional(),
-      },
-    },
-    async (request) => {
-      return proxyMcpRequest(
-        'tools/call',
-        {
-          name: 'get_server_action_by_id',
-          arguments: { actionId: request.actionId },
-        },
-        request.projectPath,
-        'get_server_action_by_id'
-      )
-    }
-  )
-
-  const transport = new StdioServerTransport()
-  await mcpServer.connect(transport)
-
-  const serverCount = Object.keys(devServerRegistry).length
-  console.error('[MCP] Session manager started')
-  console.error('[MCP] Managing all Next.js dev servers on this machine')
-  console.error(`[MCP] Currently tracking ${serverCount} dev server(s)`)
-
-  if (serverCount === 0) {
-    console.error('[MCP] Waiting for dev servers to start...')
-    console.error('[MCP] Run `next dev` in a Next.js project to register it')
-  }
-}
-
-startStdioMcpServer().catch((error) => {
-  console.error('[MCP] Fatal error:', error)
-  console.error('[MCP] Stack:', error instanceof Error ? error.stack : error)
-  process.exit(1)
-})"
vercel/next.js,631dd719283af2ac6534f4f82d2b8b12b1d57d55,Jude Gao,2025-10-06T02:15:01Z,"Revert ""next mcp router""

This reverts commit 48d9966c54ab469fda90a8796bb0a902229c3587.",packages/next/src/server/lib/start-server.ts,0,5,5,"@@ -364,11 +364,6 @@ export async function startServer(
         process.env.__NEXT_EXPERIMENTAL_HTTPS = '1'
       }
 
-      if (isDev) {
-        const { registerDevServer } = require('../mcp/standalone-mcp-server')
-        registerDevServer(dir, port, formattedHostname)
-      }
-
       // Only load env and config in dev to for logging purposes
       let envInfo: string[] | undefined
       let experimentalFeatures: ConfiguredExperimentalFeature[] | undefined"
vercel/next.js,631dd719283af2ac6534f4f82d2b8b12b1d57d55,Jude Gao,2025-10-06T02:15:01Z,"Revert ""next mcp router""

This reverts commit 48d9966c54ab469fda90a8796bb0a902229c3587.",packages/next/src/server/mcp/README.md,0,352,352,"@@ -1,352 +0,0 @@
-# Next.js MCP (Model Context Protocol) Integration
-
-## Architecture Overview
-
-Next.js provides an MCP server that allows AI assistants like Claude Code to introspect and interact with Next.js development servers.
-
-### Components
-
-1. **Session Manager** (`next-mcp-stdio.ts`)
-   - Runs as a standalone process via `npx next@canary mcp`
-   - Manages multiple Next.js dev servers across the machine
-   - Uses stdio transport for communication with Claude Code
-   - Routes MCP requests to the correct dev server
-
-2. **Dev Server Registry** (`/tmp/next-dev-servers.json`)
-   - Global registry of all running Next.js dev servers
-   - Updated via heartbeat every 30 seconds
-   - Auto-cleaned of stale/dead servers
-
-3. **Dev Server Integration** (`standalone-mcp-server.ts`)
-   - Each `next dev` registers itself in the global registry
-   - Implements MCP tools via `/_next/mcp` endpoint
-   - Provides access to errors, logs, metadata, etc.
-
-## Data Flow
-
-```
-┌──────────────────┐
-│   Claude Code    │
-└────────┬─────────┘
-         │ stdio (JSON-RPC)
-         ↓
-┌────────────────────────────────┐
-│  Session Manager               │
-│  (npx next@canary mcp)         │
-│  • Watches registry            │
-│  • Routes requests             │
-└─────┬────────────┬────────────┘
-      │ HTTP       │ HTTP
-      ↓            ↓
-┌──────────┐  ┌──────────┐
-│ next@14  │  │ next@15  │
-│ :3000    │  │ :3001    │
-└──────────┘  └──────────┘
-```
-
-## Configuration
-
-### Claude Code Setup
-
-Add to Claude Code's MCP configuration:
-
-```json
-{
-  ""mcpServers"": {
-    ""nextjs"": {
-      ""command"": ""npx"",
-      ""args"": [""-y"", ""next@canary"", ""mcp""]
-    }
-  }
-}
-```
-
-### Usage
-
-```bash
-# Start dev server - it auto-registers
-cd ~/my-next-app
-next dev
-
-# Claude Code can now access MCP tools
-```
-
-## Available MCP Tools
-
-### `list_dev_servers()`
-
-Lists all running Next.js dev servers.
-
-**Returns:**
-```json
-{
-  ""servers"": [
-    {
-      ""projectPath"": ""/Users/alice/app-a"",
-      ""port"": 3000,
-      ""hostname"": ""localhost"",
-      ""pid"": 12345
-    }
-  ]
-}
-```
-
-### `get_project_path({ projectPath?: string })`
-
-Get the absolute path to a Next.js project.
-
-**Parameters:**
-- `projectPath` (optional): Path hint for multi-project scenarios
-
-**Returns:** Absolute project path
-
-### `get_errors({ projectPath?: string })`
-
-Get current browser error state including build and runtime errors.
-
-**Parameters:**
-- `projectPath` (optional): Path hint for multi-project scenarios
-
-**Returns:** Formatted error messages with source-mapped stack traces
-
-### `get_page_metadata({ projectPath?: string })`
-
-Get metadata about the currently loaded page in the browser.
-
-**Parameters:**
-- `projectPath` (optional): Path hint for multi-project scenarios
-
-**Returns:** Page metadata (route, params, searchParams, etc.)
-
-### `get_logs({ projectPath?: string })`
-
-Get recent build and runtime logs from the dev server.
-
-**Parameters:**
-- `projectPath` (optional): Path hint for multi-project scenarios
-
-**Returns:** Recent log entries
-
-### `get_server_action_by_id({ actionId: string, projectPath?: string })`
-
-Get information about a specific server action.
-
-**Parameters:**
-- `actionId` (required): The server action ID
-- `projectPath` (optional): Path hint for multi-project scenarios
-
-**Returns:** Server action details
-
-## Multi-Project Support
-
-### Single Project (Auto-routing)
-
-```javascript
-// No projectPath needed - routes to only dev server
-get_errors()
-```
-
-### Multiple Projects (Requires Context)
-
-```javascript
-// List all dev servers
-list_dev_servers()
-
-// Specify project explicitly
-get_errors({ projectPath: ""/Users/alice/app-a"" })
-get_errors({ projectPath: ""app-a"" }) // Partial match OK
-```
-
-## Version Compatibility
-
-The session manager advertises all tools from the version you run (`next@canary`), but each dev server implements only the tools it supports.
-
-**Example:**
-
-```javascript
-// Session manager from next@canary has get_ai_hints
-// Dev server running next@14 doesn't have it
-
-get_ai_hints({ projectPath: ""/old-project"" })
-// Error: Tool 'get_ai_hints' is not supported in this project.
-//        This tool may require a newer version of Next.js.
-//        Try upgrading: npm install next@latest
-```
-
-This allows gradual upgrades and testing of new features.
-
-## Registry Format
-
-**Location:** `/tmp/next-dev-servers.json` (macOS/Linux) or `%TEMP%\next-dev-servers.json` (Windows)
-
-**Schema:**
-```typescript
-{
-  ""/absolute/path/to/project"": {
-    ""port"": 3000,
-    ""hostname"": ""localhost"",
-    ""pid"": 12345,
-    ""projectPath"": ""/absolute/path/to/project"",
-    ""lastSeen"": 1704067200000  // Unix timestamp
-  }
-}
-```
-
-## Cleanup & Lifecycle
-
-### Automatic Cleanup
-
-Servers are removed from registry when:
-- Process exits normally (`process.on('exit')`)
-- Process receives SIGINT/SIGTERM
-- Heartbeat expires (>60 seconds without update)
-- Process PID no longer exists
-
-### Manual Cleanup
-
-```bash
-# Remove stale registry
-rm /tmp/next-dev-servers.json
-```
-
-## Error Handling
-
-### No Dev Servers Running
-
-```
-Error: No dev servers running. Please start a dev server with `next dev`
-```
-
-### Multiple Dev Servers (No Context)
-
-```
-Error: Multiple dev servers running (2). Please specify projectPath.
-Available projects:
-  - /Users/alice/app-a
-  - /Users/alice/app-b
-
-Example: get_errors({ projectPath: ""/Users/alice/app-a"" })
-```
-
-### Dev Server Not Found
-
-```
-Error: Could not find dev server for context ""app-c"".
-Available projects:
-  - /Users/alice/app-a
-  - /Users/alice/app-b
-
-Use get_project_path() with one of the paths above.
-```
-
-### Connection Timeout
-
-```
-Error: Request to dev server timed out (/Users/alice/app-a).
-The dev server may be unresponsive.
-```
-
-### Tool Not Supported
-
-```
-Error: Tool 'get_ai_hints' is not supported in this project (/Users/alice/app-a).
-
-This tool may require a newer version of Next.js.
-Try upgrading: npm install next@latest
-```
-
-## Implementation Details
-
-### Atomic File Writes
-
-Registry updates use atomic writes to prevent corruption:
-
-```typescript
-// Write to temp file
-fs.writeFileSync(`${registryPath}.${pid}.tmp`, data)
-// Atomic rename
-fs.renameSync(tempPath, registryPath)
-```
-
-### Heartbeat System
-
-Each dev server updates `lastSeen` every 30 seconds. Session manager polls every 2 seconds to clean stale entries.
-
-### Process Detection
-
-Uses `process.kill(pid, 0)` to check if process is alive without sending a signal.
-
-### Signal Handling
-
-Proper exit codes:
-- `SIGINT` → exit code 130
-- `SIGTERM` → exit code 143
-
-## Debugging
-
-### Enable Session Manager Logs
-
-```bash
-# Run manually to see logs
-npx next@canary mcp
-```
-
-**Output:**
-```
-[MCP] Session manager started
-[MCP] Managing all Next.js dev servers on this machine
-[MCP] Currently tracking 0 dev server(s)
-[MCP] Waiting for dev servers to start...
-[MCP] Run `next dev` in a Next.js project to register it
-[MCP] Registry updated: 1 dev server(s) active
-[MCP]   - /Users/alice/app-a on localhost:3000
-```
-
-### Check Registry
-
-```bash
-# macOS/Linux
-cat /tmp/next-dev-servers.json | jq
-
-# Windows
-type %TEMP%\next-dev-servers.json
-```
-
-### Test MCP Tools
-
-Use `fetch` to test tools directly:
-
-```javascript
-const response = await fetch('http://localhost:3000/_next/mcp', {
-  method: 'POST',
-  headers: { 'Content-Type': 'application/json' },
-  body: JSON.stringify({
-    jsonrpc: '2.0',
-    method: 'tools/call',
-    params: { name: 'get_errors', arguments: {} },
-    id: 1
-  })
-})
-```
-
-## Security Considerations
-
-1. **Local-only**: Registry and MCP endpoints are only accessible on localhost
-2. **No auth**: Assumes trusted local environment
-3. **PID validation**: Prevents stale entries from zombie processes
-4. **Path normalization**: Prevents path traversal attacks
-
-## Performance
-
-- **Registry size**: ~1KB per dev server
-- **Heartbeat overhead**: ~1 file write per 30s per dev server
-- **Tool call latency**: <100ms (HTTP proxy overhead)
-- **Memory**: ~5MB for session manager
-
-## Future Enhancements
-
-1. **WebSocket transport**: If MCP adds WebSocket support
-2. **Tool discovery**: Dynamic tool registration from dev servers
-3. **Authentication**: Add token-based auth for registry access
-4. **Remote dev servers**: Support cloud dev environments
-5. **Performance metrics**: Track tool call latency and usage"
vercel/next.js,631dd719283af2ac6534f4f82d2b8b12b1d57d55,Jude Gao,2025-10-06T02:15:01Z,"Revert ""next mcp router""

This reverts commit 48d9966c54ab469fda90a8796bb0a902229c3587.",packages/next/src/server/mcp/standalone-mcp-server.ts,0,199,199,"@@ -1,199 +0,0 @@
-import fs from 'fs'
-import path from 'path'
-import os from 'os'
-
-const DEV_SERVER_REGISTRY_PATH = path.join(
-  os.tmpdir(),
-  'next-dev-servers.json'
-)
-const HEARTBEAT_INTERVAL_MS = 30000
-
-interface DevServerInfo {
-  port: number
-  hostname: string
-  pid: number
-  projectPath: string
-  lastSeen: number
-}
-
-interface DevServerRegistry {
-  [projectPath: string]: DevServerInfo
-}
-
-let heartbeatInterval: NodeJS.Timeout | null = null
-let registrationComplete = false
-
-function readRegistryFile(): DevServerRegistry {
-  try {
-    if (!fs.existsSync(DEV_SERVER_REGISTRY_PATH)) {
-      return {}
-    }
-
-    const content = fs.readFileSync(DEV_SERVER_REGISTRY_PATH, 'utf-8')
-    if (!content.trim()) {
-      return {}
-    }
-
-    return JSON.parse(content) as DevServerRegistry
-  } catch (error) {
-    console.error('[MCP] Error reading registry file:', error)
-    return {}
-  }
-}
-
-function isProcessAlive(pid: number): boolean {
-  try {
-    process.kill(pid, 0)
-    return true
-  } catch {
-    return false
-  }
-}
-
-function writeRegistryFile(registry: DevServerRegistry): boolean {
-  try {
-    const dir = path.dirname(DEV_SERVER_REGISTRY_PATH)
-
-    if (!fs.existsSync(dir)) {
-      fs.mkdirSync(dir, { recursive: true })
-    }
-
-    const tempPath = `${DEV_SERVER_REGISTRY_PATH}.${process.pid}.tmp`
-    fs.writeFileSync(tempPath, JSON.stringify(registry, null, 2), 'utf-8')
-
-    fs.renameSync(tempPath, DEV_SERVER_REGISTRY_PATH)
-
-    return true
-  } catch (error) {
-    console.error('[MCP] Error writing registry file:', error)
-    return false
-  }
-}
-
-function updateHeartbeat(projectPath: string): void {
-  try {
-    const registry = readRegistryFile()
-
-    if (registry[projectPath]) {
-      registry[projectPath].lastSeen = Date.now()
-      writeRegistryFile(registry)
-    } else {
-      if (heartbeatInterval) {
-        clearInterval(heartbeatInterval)
-        heartbeatInterval = null
-      }
-    }
-  } catch (error) {
-    console.error('[MCP] Failed to update heartbeat:', error)
-  }
-}
-
-export function registerDevServer(
-  projectPath: string,
-  port: number,
-  hostname: string
-): void {
-  if (registrationComplete) {
-    console.warn(
-      '[MCP] Dev server already registered, skipping duplicate registration'
-    )
-    return
-  }
-
-  try {
-    const normalizedPath = path.resolve(projectPath)
-    const registry = readRegistryFile()
-    const currentPid = process.pid
-
-    if (registry[normalizedPath]) {
-      const existing = registry[normalizedPath]
-
-      if (existing.pid !== currentPid) {
-        const isOtherServerAlive = isProcessAlive(existing.pid)
-
-        if (isOtherServerAlive) {
-          console.error(
-            `\n[MCP] ERROR: Another dev server is already running for this project!\n` +
-              `  Project: ${normalizedPath}\n` +
-              `  Existing server: PID ${existing.pid} on ${existing.hostname}:${existing.port}\n` +
-              `  This server: PID ${currentPid} on ${hostname}:${port}\n\n` +
-              `Please stop the other dev server first, or use a different project directory.\n`
-          )
-          return
-        } else {
-          console.warn(
-            `[MCP] Stale server entry found (PID ${existing.pid} is dead), replacing...`
-          )
-        }
-      }
-    }
-
-    registry[normalizedPath] = {
-      port,
-      hostname,
-      pid: currentPid,
-      projectPath: normalizedPath,
-      lastSeen: Date.now(),
-    }
-
-    if (!writeRegistryFile(registry)) {
-      throw new Error('Failed to write registry file')
-    }
-
-    registrationComplete = true
-
-    heartbeatInterval = setInterval(
-      () => updateHeartbeat(normalizedPath),
-      HEARTBEAT_INTERVAL_MS
-    )
-
-    const cleanup = () => {
-      if (heartbeatInterval) {
-        clearInterval(heartbeatInterval)
-        heartbeatInterval = null
-      }
-      unregisterDevServer(normalizedPath)
-    }
-
-    process.once('exit', cleanup)
-    process.once('SIGINT', () => {
-      cleanup()
-      process.exit(130)
-    })
-    process.once('SIGTERM', () => {
-      cleanup()
-      process.exit(143)
-    })
-
-    console.log(
-      `[MCP] Registered dev server: ${normalizedPath} on ${hostname}:${port}`
-    )
-  } catch (error) {
-    console.error('[MCP] Failed to register dev server:', error)
-    registrationComplete = false
-  }
-}
-
-export function unregisterDevServer(projectPath: string): void {
-  if (!registrationComplete) {
-    return
-  }
-
-  try {
-    const normalizedPath = path.resolve(projectPath)
-    const registry = readRegistryFile()
-
-    if (!registry[normalizedPath]) {
-      return
-    }
-
-    delete registry[normalizedPath]
-
-    writeRegistryFile(registry)
-
-    console.log(`[MCP] Unregistered dev server: ${normalizedPath}`)
-    registrationComplete = false
-  } catch (error) {
-    console.error('[MCP] Failed to unregister dev server:', error)
-  }
-}"
vercel/next.js,48d9966c54ab469fda90a8796bb0a902229c3587,Jude Gao,2025-10-06T02:12:14Z,next mcp router,packages/next/src/bin/next.ts,9,0,9,"@@ -438,6 +438,15 @@ program
   )
   .usage('[directory] [options]')
 
+program
+  .command('mcp')
+  .description(
+    'Starts an MCP server using stdio transport. Manages sessions for all Next.js dev servers on this machine.'
+  )
+  .action(() => {
+    import('../cli/next-mcp-stdio.js')
+  })
+
 const internal = program
   .command('internal')
   .description("
vercel/next.js,48d9966c54ab469fda90a8796bb0a902229c3587,Jude Gao,2025-10-06T02:12:14Z,next mcp router,packages/next/src/cli/next-mcp-stdio.ts,495,0,495,"@@ -0,0 +1,495 @@
+#!/usr/bin/env node
+
+import { McpServer } from 'next/dist/compiled/@modelcontextprotocol/sdk/server/mcp'
+import { StdioServerTransport } from 'next/dist/compiled/@modelcontextprotocol/sdk/server/stdio'
+import { z } from 'next/dist/compiled/zod'
+import fs from 'fs'
+import path from 'path'
+import os from 'os'
+
+const DEV_SERVER_REGISTRY_PATH = path.join(os.tmpdir(), 'next-dev-servers.json')
+
+const HEARTBEAT_TIMEOUT_MS = 60000
+const REGISTRY_POLL_INTERVAL_MS = 2000
+
+interface DevServerInfo {
+  port: number
+  hostname: string
+  pid: number
+  projectPath: string
+  lastSeen: number
+}
+
+interface DevServerRegistry {
+  [projectPath: string]: DevServerInfo
+}
+
+let devServerRegistry: DevServerRegistry = {}
+let registryWatcher: fs.FSWatcher | null = null
+let cleanupRegistryInterval: NodeJS.Timeout | null = null
+
+function isProcessAlive(pid: number): boolean {
+  try {
+    process.kill(pid, 0)
+    return true
+  } catch (error) {
+    return false
+  }
+}
+
+function loadDevServerRegistry(): DevServerRegistry {
+  try {
+    if (!fs.existsSync(DEV_SERVER_REGISTRY_PATH)) {
+      return {}
+    }
+
+    const content = fs.readFileSync(DEV_SERVER_REGISTRY_PATH, 'utf-8')
+    if (!content.trim()) {
+      return {}
+    }
+
+    const registry = JSON.parse(content) as DevServerRegistry
+    const now = Date.now()
+    const cleanedRegistry: DevServerRegistry = {}
+
+    for (const [projectPath, info] of Object.entries(registry)) {
+      if (
+        typeof info.port !== 'number' ||
+        typeof info.hostname !== 'string' ||
+        typeof info.pid !== 'number' ||
+        typeof info.projectPath !== 'string' ||
+        typeof info.lastSeen !== 'number'
+      ) {
+        console.error(
+          `[MCP] Invalid registry entry for ${projectPath}, skipping`
+        )
+        continue
+      }
+
+      if (now - info.lastSeen > HEARTBEAT_TIMEOUT_MS) {
+        console.error(
+          `[MCP] Dev server at ${projectPath} is stale (last seen ${Math.round((now - info.lastSeen) / 1000)}s ago), removing`
+        )
+        continue
+      }
+
+      if (!isProcessAlive(info.pid)) {
+        console.error(
+          `[MCP] Dev server at ${projectPath} (PID ${info.pid}) is not running, removing`
+        )
+        continue
+      }
+
+      cleanedRegistry[projectPath] = info
+    }
+
+    return cleanedRegistry
+  } catch (error) {
+    console.error('[MCP] Failed to load dev server registry:', error)
+    return {}
+  }
+}
+
+function watchDevServerRegistry(
+  onChange: (registry: DevServerRegistry) => void
+): () => void {
+  const dir = path.dirname(DEV_SERVER_REGISTRY_PATH)
+
+  try {
+    if (!fs.existsSync(dir)) {
+      fs.mkdirSync(dir, { recursive: true })
+    }
+  } catch (error) {
+    console.error('[MCP] Failed to create registry directory:', error)
+    return () => {}
+  }
+
+  try {
+    registryWatcher = fs.watch(
+      dir,
+      { persistent: false },
+      (eventType, filename) => {
+        if (filename === path.basename(DEV_SERVER_REGISTRY_PATH)) {
+          try {
+            const registry = loadDevServerRegistry()
+            onChange(registry)
+          } catch (error) {
+            console.error('[MCP] Error handling registry change:', error)
+          }
+        }
+      }
+    )
+
+    registryWatcher.on('error', (error) => {
+      console.error('[MCP] Registry watcher error:', error)
+    })
+
+    cleanupRegistryInterval = setInterval(() => {
+      try {
+        const registry = loadDevServerRegistry()
+        onChange(registry)
+      } catch (error) {
+        console.error('[MCP] Error during periodic registry cleanup:', error)
+      }
+    }, REGISTRY_POLL_INTERVAL_MS)
+
+    return () => {
+      if (registryWatcher) {
+        registryWatcher.close()
+        registryWatcher = null
+      }
+      if (cleanupRegistryInterval) {
+        clearInterval(cleanupRegistryInterval)
+        cleanupRegistryInterval = null
+      }
+    }
+  } catch (error) {
+    console.error('[MCP] Failed to setup registry watcher:', error)
+    return () => {}
+  }
+}
+
+function findDevServerByContext(context?: string): DevServerInfo | null {
+  const servers = Object.values(devServerRegistry)
+
+  if (servers.length === 0) {
+    return null
+  }
+
+  if (servers.length === 1) {
+    return servers[0]
+  }
+
+  if (!context) {
+    return null
+  }
+
+  if (devServerRegistry[context]) {
+    return devServerRegistry[context]
+  }
+
+  const normalizedContext = path.normalize(context)
+
+  for (const server of servers) {
+    if (server.projectPath === normalizedContext) {
+      return server
+    }
+  }
+
+  for (const server of servers) {
+    if (server.projectPath.includes(normalizedContext)) {
+      return server
+    }
+  }
+
+  for (const server of servers) {
+    if (normalizedContext.includes(path.basename(server.projectPath))) {
+      return server
+    }
+  }
+
+  return null
+}
+
+async function proxyMcpRequest(
+  method: string,
+  params: unknown,
+  context?: string,
+  toolName?: string
+): Promise<any> {
+  const devServer = findDevServerByContext(context)
+
+  if (!devServer) {
+    const projectCount = Object.keys(devServerRegistry).length
+    if (projectCount === 0) {
+      throw new Error(
+        'No dev servers running. Please start a dev server with `next dev`'
+      )
+    } else if (context) {
+      const availableProjects = Object.keys(devServerRegistry)
+        .map((p) => `  - ${p}`)
+        .join('\n')
+      throw new Error(
+        `Could not find dev server for context ""${context}"".\n` +
+          `Available projects:\n${availableProjects}\n\n` +
+          `Use get_project_path() with one of the paths above.`
+      )
+    } else {
+      const availableProjects = Object.keys(devServerRegistry)
+        .map((p) => `  - ${p}`)
+        .join('\n')
+      throw new Error(
+        `Multiple dev servers running (${projectCount}). Please specify projectPath.\n` +
+          `Available projects:\n${availableProjects}\n\n` +
+          `Example: get_errors({ projectPath: ""${Object.keys(devServerRegistry)[0]}"" })`
+      )
+    }
+  }
+
+  const url = `http://${devServer.hostname}:${devServer.port}/_next/mcp`
+
+  let response: Response
+  try {
+    response = await fetch(url, {
+      method: 'POST',
+      headers: {
+        'Content-Type': 'application/json',
+      },
+      body: JSON.stringify({
+        jsonrpc: '2.0',
+        method,
+        params,
+        id: 1,
+      }),
+      signal: AbortSignal.timeout(10000),
+    })
+  } catch (error) {
+    if (error instanceof Error && error.name === 'TimeoutError') {
+      throw new Error(
+        `Request to dev server timed out (${devServer.projectPath}). ` +
+          `The dev server may be unresponsive.`
+      )
+    }
+    throw new Error(
+      `Failed to connect to dev server at ${devServer.hostname}:${devServer.port} (${devServer.projectPath}). ` +
+        `Error: ${error instanceof Error ? error.message : String(error)}`
+    )
+  }
+
+  if (!response.ok) {
+    throw new Error(
+      `Dev server returned HTTP ${response.status}: ${response.statusText} (${devServer.projectPath})`
+    )
+  }
+
+  let data: {
+    error?: { code?: number; message?: string }
+    result?: unknown
+  }
+
+  try {
+    data = await response.json()
+  } catch (error) {
+    throw new Error(
+      `Invalid JSON response from dev server (${devServer.projectPath})`
+    )
+  }
+
+  if (data.error) {
+    if (
+      toolName &&
+      data.error.message &&
+      (data.error.message.toLowerCase().includes('unknown tool') ||
+        data.error.message.toLowerCase().includes('not found'))
+    ) {
+      throw new Error(
+        `Tool '${toolName}' is not supported in this project (${devServer.projectPath}).\n\n` +
+          `This tool may require a newer version of Next.js.\n` +
+          `Try upgrading: npm install next@latest`
+      )
+    }
+    throw new Error(
+      data.error.message || `MCP error code ${data.error.code || 'unknown'}`
+    )
+  }
+
+  return data.result
+}
+
+async function startStdioMcpServer(): Promise<void> {
+  devServerRegistry = loadDevServerRegistry()
+
+  const cleanup = watchDevServerRegistry((registry) => {
+    devServerRegistry = registry
+    const serverCount = Object.keys(registry).length
+    console.error(`[MCP] Registry updated: ${serverCount} dev server(s) active`)
+    for (const [projectPath, info] of Object.entries(registry)) {
+      console.error(`[MCP]   - ${projectPath} on ${info.hostname}:${info.port}`)
+    }
+  })
+
+  process.on('SIGINT', () => {
+    console.error('[MCP] Received SIGINT, shutting down...')
+    cleanup()
+    process.exit(0)
+  })
+
+  process.on('SIGTERM', () => {
+    console.error('[MCP] Received SIGTERM, shutting down...')
+    cleanup()
+    process.exit(0)
+  })
+
+  process.on('uncaughtException', (error) => {
+    console.error('[MCP] Uncaught exception:', error)
+    cleanup()
+    process.exit(1)
+  })
+
+  process.on('unhandledRejection', (reason) => {
+    console.error('[MCP] Unhandled rejection:', reason)
+    cleanup()
+    process.exit(1)
+  })
+
+  const mcpServer = new McpServer({
+    name: 'Next.js Dev Server Manager (stdio)',
+    version: '0.1.0',
+  })
+
+  mcpServer.registerTool(
+    'list_dev_servers',
+    {
+      description: 'List all running Next.js dev servers',
+      inputSchema: {},
+    },
+    async () => {
+      const servers = Object.entries(devServerRegistry).map(
+        ([projectPath, info]) => ({
+          projectPath,
+          port: info.port,
+          hostname: info.hostname,
+          pid: info.pid,
+        })
+      )
+      return {
+        content: [
+          {
+            type: 'text',
+            text: JSON.stringify({ servers }, null, 2),
+          },
+        ],
+      }
+    }
+  )
+
+  mcpServer.registerTool(
+    'get_project_path',
+    {
+      description:
+        'Get the absolute path to the Next.js project directory. Optional projectPath context to specify which dev server.',
+      inputSchema: {
+        projectPath: z.string().optional(),
+      },
+    },
+    async (request) => {
+      return proxyMcpRequest(
+        'tools/call',
+        {
+          name: 'get_project_path',
+          arguments: {},
+        },
+        request.projectPath,
+        'get_project_path'
+      )
+    }
+  )
+
+  mcpServer.registerTool(
+    'get_errors',
+    {
+      description:
+        'Get the current error state of the app when rendered in the browser. Optional projectPath to specify which dev server.',
+      inputSchema: {
+        projectPath: z.string().optional(),
+      },
+    },
+    async (request) => {
+      return proxyMcpRequest(
+        'tools/call',
+        {
+          name: 'get_errors',
+          arguments: {},
+        },
+        request.projectPath,
+        'get_errors'
+      )
+    }
+  )
+
+  mcpServer.registerTool(
+    'get_page_metadata',
+    {
+      description:
+        'Get metadata about the currently loaded page in the browser. Optional projectPath to specify which dev server.',
+      inputSchema: {
+        projectPath: z.string().optional(),
+      },
+    },
+    async (request) => {
+      return proxyMcpRequest(
+        'tools/call',
+        {
+          name: 'get_page_metadata',
+          arguments: {},
+        },
+        request.projectPath,
+        'get_page_metadata'
+      )
+    }
+  )
+
+  mcpServer.registerTool(
+    'get_logs',
+    {
+      description:
+        'Get recent build and runtime logs from the dev server. Optional projectPath to specify which dev server.',
+      inputSchema: {
+        projectPath: z.string().optional(),
+      },
+    },
+    async (request) => {
+      return proxyMcpRequest(
+        'tools/call',
+        {
+          name: 'get_logs',
+          arguments: {},
+        },
+        request.projectPath,
+        'get_logs'
+      )
+    }
+  )
+
+  mcpServer.registerTool(
+    'get_server_action_by_id',
+    {
+      description:
+        'Get information about a specific server action by its ID. Optional projectPath to specify which dev server.',
+      inputSchema: {
+        actionId: z.string(),
+        projectPath: z.string().optional(),
+      },
+    },
+    async (request) => {
+      return proxyMcpRequest(
+        'tools/call',
+        {
+          name: 'get_server_action_by_id',
+          arguments: { actionId: request.actionId },
+        },
+        request.projectPath,
+        'get_server_action_by_id'
+      )
+    }
+  )
+
+  const transport = new StdioServerTransport()
+  await mcpServer.connect(transport)
+
+  const serverCount = Object.keys(devServerRegistry).length
+  console.error('[MCP] Session manager started')
+  console.error('[MCP] Managing all Next.js dev servers on this machine')
+  console.error(`[MCP] Currently tracking ${serverCount} dev server(s)`)
+
+  if (serverCount === 0) {
+    console.error('[MCP] Waiting for dev servers to start...')
+    console.error('[MCP] Run `next dev` in a Next.js project to register it')
+  }
+}
+
+startStdioMcpServer().catch((error) => {
+  console.error('[MCP] Fatal error:', error)
+  console.error('[MCP] Stack:', error instanceof Error ? error.stack : error)
+  process.exit(1)
+})"
vercel/next.js,48d9966c54ab469fda90a8796bb0a902229c3587,Jude Gao,2025-10-06T02:12:14Z,next mcp router,packages/next/src/server/lib/start-server.ts,5,0,5,"@@ -364,6 +364,11 @@ export async function startServer(
         process.env.__NEXT_EXPERIMENTAL_HTTPS = '1'
       }
 
+      if (isDev) {
+        const { registerDevServer } = require('../mcp/standalone-mcp-server')
+        registerDevServer(dir, port, formattedHostname)
+      }
+
       // Only load env and config in dev to for logging purposes
       let envInfo: string[] | undefined
       let experimentalFeatures: ConfiguredExperimentalFeature[] | undefined"
vercel/next.js,48d9966c54ab469fda90a8796bb0a902229c3587,Jude Gao,2025-10-06T02:12:14Z,next mcp router,packages/next/src/server/mcp/README.md,352,0,352,"@@ -0,0 +1,352 @@
+# Next.js MCP (Model Context Protocol) Integration
+
+## Architecture Overview
+
+Next.js provides an MCP server that allows AI assistants like Claude Code to introspect and interact with Next.js development servers.
+
+### Components
+
+1. **Session Manager** (`next-mcp-stdio.ts`)
+   - Runs as a standalone process via `npx next@canary mcp`
+   - Manages multiple Next.js dev servers across the machine
+   - Uses stdio transport for communication with Claude Code
+   - Routes MCP requests to the correct dev server
+
+2. **Dev Server Registry** (`/tmp/next-dev-servers.json`)
+   - Global registry of all running Next.js dev servers
+   - Updated via heartbeat every 30 seconds
+   - Auto-cleaned of stale/dead servers
+
+3. **Dev Server Integration** (`standalone-mcp-server.ts`)
+   - Each `next dev` registers itself in the global registry
+   - Implements MCP tools via `/_next/mcp` endpoint
+   - Provides access to errors, logs, metadata, etc.
+
+## Data Flow
+
+```
+┌──────────────────┐
+│   Claude Code    │
+└────────┬─────────┘
+         │ stdio (JSON-RPC)
+         ↓
+┌────────────────────────────────┐
+│  Session Manager               │
+│  (npx next@canary mcp)         │
+│  • Watches registry            │
+│  • Routes requests             │
+└─────┬────────────┬────────────┘
+      │ HTTP       │ HTTP
+      ↓            ↓
+┌──────────┐  ┌──────────┐
+│ next@14  │  │ next@15  │
+│ :3000    │  │ :3001    │
+└──────────┘  └──────────┘
+```
+
+## Configuration
+
+### Claude Code Setup
+
+Add to Claude Code's MCP configuration:
+
+```json
+{
+  ""mcpServers"": {
+    ""nextjs"": {
+      ""command"": ""npx"",
+      ""args"": [""-y"", ""next@canary"", ""mcp""]
+    }
+  }
+}
+```
+
+### Usage
+
+```bash
+# Start dev server - it auto-registers
+cd ~/my-next-app
+next dev
+
+# Claude Code can now access MCP tools
+```
+
+## Available MCP Tools
+
+### `list_dev_servers()`
+
+Lists all running Next.js dev servers.
+
+**Returns:**
+```json
+{
+  ""servers"": [
+    {
+      ""projectPath"": ""/Users/alice/app-a"",
+      ""port"": 3000,
+      ""hostname"": ""localhost"",
+      ""pid"": 12345
+    }
+  ]
+}
+```
+
+### `get_project_path({ projectPath?: string })`
+
+Get the absolute path to a Next.js project.
+
+**Parameters:**
+- `projectPath` (optional): Path hint for multi-project scenarios
+
+**Returns:** Absolute project path
+
+### `get_errors({ projectPath?: string })`
+
+Get current browser error state including build and runtime errors.
+
+**Parameters:**
+- `projectPath` (optional): Path hint for multi-project scenarios
+
+**Returns:** Formatted error messages with source-mapped stack traces
+
+### `get_page_metadata({ projectPath?: string })`
+
+Get metadata about the currently loaded page in the browser.
+
+**Parameters:**
+- `projectPath` (optional): Path hint for multi-project scenarios
+
+**Returns:** Page metadata (route, params, searchParams, etc.)
+
+### `get_logs({ projectPath?: string })`
+
+Get recent build and runtime logs from the dev server.
+
+**Parameters:**
+- `projectPath` (optional): Path hint for multi-project scenarios
+
+**Returns:** Recent log entries
+
+### `get_server_action_by_id({ actionId: string, projectPath?: string })`
+
+Get information about a specific server action.
+
+**Parameters:**
+- `actionId` (required): The server action ID
+- `projectPath` (optional): Path hint for multi-project scenarios
+
+**Returns:** Server action details
+
+## Multi-Project Support
+
+### Single Project (Auto-routing)
+
+```javascript
+// No projectPath needed - routes to only dev server
+get_errors()
+```
+
+### Multiple Projects (Requires Context)
+
+```javascript
+// List all dev servers
+list_dev_servers()
+
+// Specify project explicitly
+get_errors({ projectPath: ""/Users/alice/app-a"" })
+get_errors({ projectPath: ""app-a"" }) // Partial match OK
+```
+
+## Version Compatibility
+
+The session manager advertises all tools from the version you run (`next@canary`), but each dev server implements only the tools it supports.
+
+**Example:**
+
+```javascript
+// Session manager from next@canary has get_ai_hints
+// Dev server running next@14 doesn't have it
+
+get_ai_hints({ projectPath: ""/old-project"" })
+// Error: Tool 'get_ai_hints' is not supported in this project.
+//        This tool may require a newer version of Next.js.
+//        Try upgrading: npm install next@latest
+```
+
+This allows gradual upgrades and testing of new features.
+
+## Registry Format
+
+**Location:** `/tmp/next-dev-servers.json` (macOS/Linux) or `%TEMP%\next-dev-servers.json` (Windows)
+
+**Schema:**
+```typescript
+{
+  ""/absolute/path/to/project"": {
+    ""port"": 3000,
+    ""hostname"": ""localhost"",
+    ""pid"": 12345,
+    ""projectPath"": ""/absolute/path/to/project"",
+    ""lastSeen"": 1704067200000  // Unix timestamp
+  }
+}
+```
+
+## Cleanup & Lifecycle
+
+### Automatic Cleanup
+
+Servers are removed from registry when:
+- Process exits normally (`process.on('exit')`)
+- Process receives SIGINT/SIGTERM
+- Heartbeat expires (>60 seconds without update)
+- Process PID no longer exists
+
+### Manual Cleanup
+
+```bash
+# Remove stale registry
+rm /tmp/next-dev-servers.json
+```
+
+## Error Handling
+
+### No Dev Servers Running
+
+```
+Error: No dev servers running. Please start a dev server with `next dev`
+```
+
+### Multiple Dev Servers (No Context)
+
+```
+Error: Multiple dev servers running (2). Please specify projectPath.
+Available projects:
+  - /Users/alice/app-a
+  - /Users/alice/app-b
+
+Example: get_errors({ projectPath: ""/Users/alice/app-a"" })
+```
+
+### Dev Server Not Found
+
+```
+Error: Could not find dev server for context ""app-c"".
+Available projects:
+  - /Users/alice/app-a
+  - /Users/alice/app-b
+
+Use get_project_path() with one of the paths above.
+```
+
+### Connection Timeout
+
+```
+Error: Request to dev server timed out (/Users/alice/app-a).
+The dev server may be unresponsive.
+```
+
+### Tool Not Supported
+
+```
+Error: Tool 'get_ai_hints' is not supported in this project (/Users/alice/app-a).
+
+This tool may require a newer version of Next.js.
+Try upgrading: npm install next@latest
+```
+
+## Implementation Details
+
+### Atomic File Writes
+
+Registry updates use atomic writes to prevent corruption:
+
+```typescript
+// Write to temp file
+fs.writeFileSync(`${registryPath}.${pid}.tmp`, data)
+// Atomic rename
+fs.renameSync(tempPath, registryPath)
+```
+
+### Heartbeat System
+
+Each dev server updates `lastSeen` every 30 seconds. Session manager polls every 2 seconds to clean stale entries.
+
+### Process Detection
+
+Uses `process.kill(pid, 0)` to check if process is alive without sending a signal.
+
+### Signal Handling
+
+Proper exit codes:
+- `SIGINT` → exit code 130
+- `SIGTERM` → exit code 143
+
+## Debugging
+
+### Enable Session Manager Logs
+
+```bash
+# Run manually to see logs
+npx next@canary mcp
+```
+
+**Output:**
+```
+[MCP] Session manager started
+[MCP] Managing all Next.js dev servers on this machine
+[MCP] Currently tracking 0 dev server(s)
+[MCP] Waiting for dev servers to start...
+[MCP] Run `next dev` in a Next.js project to register it
+[MCP] Registry updated: 1 dev server(s) active
+[MCP]   - /Users/alice/app-a on localhost:3000
+```
+
+### Check Registry
+
+```bash
+# macOS/Linux
+cat /tmp/next-dev-servers.json | jq
+
+# Windows
+type %TEMP%\next-dev-servers.json
+```
+
+### Test MCP Tools
+
+Use `fetch` to test tools directly:
+
+```javascript
+const response = await fetch('http://localhost:3000/_next/mcp', {
+  method: 'POST',
+  headers: { 'Content-Type': 'application/json' },
+  body: JSON.stringify({
+    jsonrpc: '2.0',
+    method: 'tools/call',
+    params: { name: 'get_errors', arguments: {} },
+    id: 1
+  })
+})
+```
+
+## Security Considerations
+
+1. **Local-only**: Registry and MCP endpoints are only accessible on localhost
+2. **No auth**: Assumes trusted local environment
+3. **PID validation**: Prevents stale entries from zombie processes
+4. **Path normalization**: Prevents path traversal attacks
+
+## Performance
+
+- **Registry size**: ~1KB per dev server
+- **Heartbeat overhead**: ~1 file write per 30s per dev server
+- **Tool call latency**: <100ms (HTTP proxy overhead)
+- **Memory**: ~5MB for session manager
+
+## Future Enhancements
+
+1. **WebSocket transport**: If MCP adds WebSocket support
+2. **Tool discovery**: Dynamic tool registration from dev servers
+3. **Authentication**: Add token-based auth for registry access
+4. **Remote dev servers**: Support cloud dev environments
+5. **Performance metrics**: Track tool call latency and usage"
vercel/next.js,48d9966c54ab469fda90a8796bb0a902229c3587,Jude Gao,2025-10-06T02:12:14Z,next mcp router,packages/next/src/server/mcp/standalone-mcp-server.ts,199,0,199,"@@ -0,0 +1,199 @@
+import fs from 'fs'
+import path from 'path'
+import os from 'os'
+
+const DEV_SERVER_REGISTRY_PATH = path.join(
+  os.tmpdir(),
+  'next-dev-servers.json'
+)
+const HEARTBEAT_INTERVAL_MS = 30000
+
+interface DevServerInfo {
+  port: number
+  hostname: string
+  pid: number
+  projectPath: string
+  lastSeen: number
+}
+
+interface DevServerRegistry {
+  [projectPath: string]: DevServerInfo
+}
+
+let heartbeatInterval: NodeJS.Timeout | null = null
+let registrationComplete = false
+
+function readRegistryFile(): DevServerRegistry {
+  try {
+    if (!fs.existsSync(DEV_SERVER_REGISTRY_PATH)) {
+      return {}
+    }
+
+    const content = fs.readFileSync(DEV_SERVER_REGISTRY_PATH, 'utf-8')
+    if (!content.trim()) {
+      return {}
+    }
+
+    return JSON.parse(content) as DevServerRegistry
+  } catch (error) {
+    console.error('[MCP] Error reading registry file:', error)
+    return {}
+  }
+}
+
+function isProcessAlive(pid: number): boolean {
+  try {
+    process.kill(pid, 0)
+    return true
+  } catch {
+    return false
+  }
+}
+
+function writeRegistryFile(registry: DevServerRegistry): boolean {
+  try {
+    const dir = path.dirname(DEV_SERVER_REGISTRY_PATH)
+
+    if (!fs.existsSync(dir)) {
+      fs.mkdirSync(dir, { recursive: true })
+    }
+
+    const tempPath = `${DEV_SERVER_REGISTRY_PATH}.${process.pid}.tmp`
+    fs.writeFileSync(tempPath, JSON.stringify(registry, null, 2), 'utf-8')
+
+    fs.renameSync(tempPath, DEV_SERVER_REGISTRY_PATH)
+
+    return true
+  } catch (error) {
+    console.error('[MCP] Error writing registry file:', error)
+    return false
+  }
+}
+
+function updateHeartbeat(projectPath: string): void {
+  try {
+    const registry = readRegistryFile()
+
+    if (registry[projectPath]) {
+      registry[projectPath].lastSeen = Date.now()
+      writeRegistryFile(registry)
+    } else {
+      if (heartbeatInterval) {
+        clearInterval(heartbeatInterval)
+        heartbeatInterval = null
+      }
+    }
+  } catch (error) {
+    console.error('[MCP] Failed to update heartbeat:', error)
+  }
+}
+
+export function registerDevServer(
+  projectPath: string,
+  port: number,
+  hostname: string
+): void {
+  if (registrationComplete) {
+    console.warn(
+      '[MCP] Dev server already registered, skipping duplicate registration'
+    )
+    return
+  }
+
+  try {
+    const normalizedPath = path.resolve(projectPath)
+    const registry = readRegistryFile()
+    const currentPid = process.pid
+
+    if (registry[normalizedPath]) {
+      const existing = registry[normalizedPath]
+
+      if (existing.pid !== currentPid) {
+        const isOtherServerAlive = isProcessAlive(existing.pid)
+
+        if (isOtherServerAlive) {
+          console.error(
+            `\n[MCP] ERROR: Another dev server is already running for this project!\n` +
+              `  Project: ${normalizedPath}\n` +
+              `  Existing server: PID ${existing.pid} on ${existing.hostname}:${existing.port}\n` +
+              `  This server: PID ${currentPid} on ${hostname}:${port}\n\n` +
+              `Please stop the other dev server first, or use a different project directory.\n`
+          )
+          return
+        } else {
+          console.warn(
+            `[MCP] Stale server entry found (PID ${existing.pid} is dead), replacing...`
+          )
+        }
+      }
+    }
+
+    registry[normalizedPath] = {
+      port,
+      hostname,
+      pid: currentPid,
+      projectPath: normalizedPath,
+      lastSeen: Date.now(),
+    }
+
+    if (!writeRegistryFile(registry)) {
+      throw new Error('Failed to write registry file')
+    }
+
+    registrationComplete = true
+
+    heartbeatInterval = setInterval(
+      () => updateHeartbeat(normalizedPath),
+      HEARTBEAT_INTERVAL_MS
+    )
+
+    const cleanup = () => {
+      if (heartbeatInterval) {
+        clearInterval(heartbeatInterval)
+        heartbeatInterval = null
+      }
+      unregisterDevServer(normalizedPath)
+    }
+
+    process.once('exit', cleanup)
+    process.once('SIGINT', () => {
+      cleanup()
+      process.exit(130)
+    })
+    process.once('SIGTERM', () => {
+      cleanup()
+      process.exit(143)
+    })
+
+    console.log(
+      `[MCP] Registered dev server: ${normalizedPath} on ${hostname}:${port}`
+    )
+  } catch (error) {
+    console.error('[MCP] Failed to register dev server:', error)
+    registrationComplete = false
+  }
+}
+
+export function unregisterDevServer(projectPath: string): void {
+  if (!registrationComplete) {
+    return
+  }
+
+  try {
+    const normalizedPath = path.resolve(projectPath)
+    const registry = readRegistryFile()
+
+    if (!registry[normalizedPath]) {
+      return
+    }
+
+    delete registry[normalizedPath]
+
+    writeRegistryFile(registry)
+
+    console.log(`[MCP] Unregistered dev server: ${normalizedPath}`)
+    registrationComplete = false
+  } catch (error) {
+    console.error('[MCP] Failed to unregister dev server:', error)
+  }
+}"
vercel/next.js,c1728ed2a6a1caf9be1802718410ab85795ee19f,Josh Story,2025-10-06T00:41:02Z,"Simplify Metadata components (#84527)

Metadata and Viewport litter the component tree with a number of Next.js
internal implementation details. We can't yet get rid of all of these
but we can simplify by consolidating these components or eliminating
them altogether.

One change is to render the metadata as a promise that resolves direclty
to the client tags that must be in the head. Another is to render a
promise that will directly reject with the error reason rather than
reconstructing a digest manually.

In the process I removed a bunch of module indirection too",packages/next/src/client/components/metadata/async-metadata.tsx,0,33,33,"@@ -1,33 +0,0 @@
-'use client'
-
-import { Suspense, use } from 'react'
-import type { StreamingMetadataResolvedState } from './types'
-
-function MetadataOutlet({
-  promise,
-}: {
-  promise: Promise<StreamingMetadataResolvedState>
-}) {
-  const { error, digest } = use(promise)
-  if (error) {
-    if (digest) {
-      // The error will lose its original digest after passing from server layer to client layer；
-      // We recover the digest property here to override the React created one if original digest exists.
-      ;(error as any).digest = digest
-    }
-    throw error
-  }
-  return null
-}
-
-export function AsyncMetadataOutlet({
-  promise,
-}: {
-  promise: Promise<StreamingMetadataResolvedState>
-}) {
-  return (
-    <Suspense fallback={null}>
-      <MetadataOutlet promise={promise} />
-    </Suspense>
-  )
-}"
vercel/next.js,c1728ed2a6a1caf9be1802718410ab85795ee19f,Josh Story,2025-10-06T00:41:02Z,"Simplify Metadata components (#84527)

Metadata and Viewport litter the component tree with a number of Next.js
internal implementation details. We can't yet get rid of all of these
but we can simplify by consolidating these components or eliminating
them altogether.

One change is to render the metadata as a promise that resolves direclty
to the client tags that must be in the head. Another is to render a
promise that will directly reject with the error reason rather than
reconstructing a digest manually.

In the process I removed a bunch of module indirection too",packages/next/src/client/components/metadata/types.ts,0,5,5,"@@ -1,5 +0,0 @@
-export type StreamingMetadataResolvedState = {
-  metadata: React.ReactNode
-  error: unknown | null
-  digest: string | undefined
-}"
vercel/next.js,c1728ed2a6a1caf9be1802718410ab85795ee19f,Josh Story,2025-10-06T00:41:02Z,"Simplify Metadata components (#84527)

Metadata and Viewport litter the component tree with a number of Next.js
internal implementation details. We can't yet get rid of all of these
but we can simplify by consolidating these components or eliminating
them altogether.

One change is to render the metadata as a promise that resolves direclty
to the client tags that must be in the head. Another is to render a
promise that will directly reject with the error reason rather than
reconstructing a digest manually.

In the process I removed a bunch of module indirection too",packages/next/src/lib/metadata/metadata.tsx,103,152,255,"@@ -2,7 +2,6 @@ import React, { Suspense, cache, cloneElement } from 'react'
 import type { ParsedUrlQuery } from 'querystring'
 import type { GetDynamicParamFromSegment } from '../../server/app-render/app-render'
 import type { LoaderTree } from '../../server/lib/app-dir-module'
-import type { StreamingMetadataResolvedState } from '../../client/components/metadata/types'
 import type { SearchParams } from '../../server/request/search-params'
 import {
   AppleWebAppMeta,
@@ -34,14 +33,15 @@ import type {
 import { isHTTPAccessFallbackError } from '../../client/components/http-access-fallback/http-access-fallback'
 import type { MetadataContext } from './types/resolvers'
 import type { WorkStore } from '../../server/app-render/work-async-storage.external'
-import {
-  METADATA_BOUNDARY_NAME,
-  VIEWPORT_BOUNDARY_NAME,
-} from '../framework/boundary-constants'
-import { AsyncMetadataOutlet } from '../../client/components/metadata/async-metadata'
-import { isPostpone } from '../../server/lib/router-utils/is-postpone'
 import { createServerSearchParamsForMetadata } from '../../server/request/search-params'
 import { createServerPathnameForMetadata } from '../../server/request/pathname'
+import { isPostpone } from '../../server/lib/router-utils/is-postpone'
+
+import {
+  MetadataBoundary,
+  ViewportBoundary,
+  OutletBoundary,
+} from '../framework/boundary-components'
 
 // Use a promise to share the status of the metadata resolving,
 // returning two components `MetadataTree` and `MetadataOutlet`
@@ -55,30 +55,22 @@ export function createMetadataComponents({
   parsedQuery,
   metadataContext,
   getDynamicParamFromSegment,
-  appUsingSizeAdjustment,
   errorType,
   workStore,
-  MetadataBoundary,
-  ViewportBoundary,
   serveStreamingMetadata,
 }: {
   tree: LoaderTree
   pathname: string
   parsedQuery: SearchParams
   metadataContext: MetadataContext
   getDynamicParamFromSegment: GetDynamicParamFromSegment
-  appUsingSizeAdjustment: boolean
   errorType?: MetadataErrorType | 'redirect'
   workStore: WorkStore
-  MetadataBoundary: (props: { children: React.ReactNode }) => React.ReactNode
-  ViewportBoundary: (props: { children: React.ReactNode }) => React.ReactNode
   serveStreamingMetadata: boolean
 }): {
-  MetadataTree: React.ComponentType
-  ViewportTree: React.ComponentType
-  getMetadataReady: () => Promise<void>
-  getViewportReady: () => Promise<void>
-  StreamingMetadataOutlet: React.ComponentType | null
+  Viewport: React.ComponentType
+  Metadata: React.ComponentType
+  MetadataOutlet: React.ComponentType
 } {
   const searchParams = createServerSearchParamsForMetadata(
     parsedQuery,
@@ -89,174 +81,133 @@ export function createMetadataComponents({
     workStore
   )
 
-  function ViewportTree() {
-    return (
-      <>
-        <ViewportBoundary>
-          <Viewport />
-        </ViewportBoundary>
-        {/* This meta tag is for next/font which is still required to be blocking. */}
-        {appUsingSizeAdjustment ? (
-          <meta name=""next-size-adjust"" content="""" />
-        ) : null}
-      </>
-    )
-  }
-
-  function MetadataTree() {
-    return (
-      <MetadataBoundary>
-        <Metadata />
-      </MetadataBoundary>
-    )
-  }
-
-  function viewport() {
-    return getResolvedViewport(
+  function Viewport() {
+    const pendingViewportTags = getResolvedViewport(
       tree,
       searchParams,
       getDynamicParamFromSegment,
       workStore,
       errorType
-    )
-  }
-
-  async function Viewport() {
-    try {
-      return await viewport()
-    } catch (error) {
-      if (!errorType && isHTTPAccessFallbackError(error)) {
-        try {
-          return await getNotFoundViewport(
-            tree,
-            searchParams,
-            getDynamicParamFromSegment,
-            workStore
-          )
-        } catch {}
+    ).catch((viewportErr) => {
+      // When Legacy PPR is enabled viewport can reject with a Postpone type
+      // This will go away once Legacy PPR is removed and dynamic metadata will
+      // stay pending until after the prerender is complete when it is dynamic
+      if (isPostpone(viewportErr)) {
+        throw viewportErr
+      }
+      if (!errorType && isHTTPAccessFallbackError(viewportErr)) {
+        return getNotFoundViewport(
+          tree,
+          searchParams,
+          getDynamicParamFromSegment,
+          workStore
+        ).catch(() => null)
       }
-      // We don't actually want to error in this component. We will
-      // also error in the MetadataOutlet which causes the error to
-      // bubble from the right position in the page to be caught by the
-      // appropriate boundaries
+      // We're going to throw the error from the metadata outlet so we just render null here instead
       return null
-    }
+    })
+
+    return (
+      <ViewportBoundary>
+        {/* @ts-expect-error -- Promise<ReactNode> not considered a valid child even though it is */}
+        {pendingViewportTags}
+      </ViewportBoundary>
+    )
   }
-  Viewport.displayName = VIEWPORT_BOUNDARY_NAME
+  Viewport.displayName = 'Next.Viewport'
 
-  function metadata() {
-    return getResolvedMetadata(
+  function Metadata() {
+    const pendingMetadataTags = getResolvedMetadata(
       tree,
       pathnameForMetadata,
       searchParams,
       getDynamicParamFromSegment,
       metadataContext,
       workStore,
       errorType
-    )
-  }
-
-  async function resolveFinalMetadata(): Promise<StreamingMetadataResolvedState> {
-    let result: React.ReactNode
-    let error = null
-    try {
-      result = await metadata()
-      return {
-        metadata: result,
-        error: null,
-        digest: undefined,
-      }
-    } catch (metadataErr) {
-      error = metadataErr
-      if (!errorType && isHTTPAccessFallbackError(metadataErr)) {
-        try {
-          result = await getNotFoundMetadata(
-            tree,
-            pathnameForMetadata,
-            searchParams,
-            getDynamicParamFromSegment,
-            metadataContext,
-            workStore
-          )
-          return {
-            metadata: result,
-            error,
-            digest: (error as any)?.digest,
-          }
-        } catch (notFoundMetadataErr) {
-          error = notFoundMetadataErr
-          // In PPR rendering we still need to throw the postpone error.
-          // If metadata is postponed, React needs to be aware of the location of error.
-          if (serveStreamingMetadata && isPostpone(notFoundMetadataErr)) {
-            throw notFoundMetadataErr
-          }
-        }
-      }
-      // In PPR rendering we still need to throw the postpone error.
-      // If metadata is postponed, React needs to be aware of the location of error.
-      if (serveStreamingMetadata && isPostpone(metadataErr)) {
+    ).catch((metadataErr) => {
+      // When Legacy PPR is enabled metadata can reject with a Postpone type
+      // This will go away once Legacy PPR is removed and dynamic metadata will
+      // stay pending until after the prerender is complete when it is dynamic
+      if (isPostpone(metadataErr)) {
         throw metadataErr
       }
-      // We don't actually want to error in this component. We will
-      // also error in the MetadataOutlet which causes the error to
-      // bubble from the right position in the page to be caught by the
-      // appropriate boundaries
-      return {
-        metadata: result,
-        error,
-        digest: (error as any)?.digest,
+      if (!errorType && isHTTPAccessFallbackError(metadataErr)) {
+        return getNotFoundMetadata(
+          tree,
+          pathnameForMetadata,
+          searchParams,
+          getDynamicParamFromSegment,
+          metadataContext,
+          workStore
+        ).catch(() => null)
       }
-    }
-  }
+      // We're going to throw the error from the metadata outlet so we just render null here instead
+      return null
+    })
 
-  function Metadata() {
+    // TODO: We shouldn't change what we render based on whether we are streaming or not.
+    // If we aren't streaming we should just block the response until we have resolved the
+    // metadata.
     if (!serveStreamingMetadata) {
-      return <MetadataResolver />
+      return (
+        <MetadataBoundary>
+          {/* @ts-expect-error -- Promise<ReactNode> not considered a valid child even though it is */}
+          {pendingMetadataTags}
+        </MetadataBoundary>
+      )
     }
     return (
       <div hidden>
-        <Suspense fallback={null}>
-          <MetadataResolver />
-        </Suspense>
+        <MetadataBoundary>
+          <Suspense name=""Next.Metadata"">
+            {/* @ts-expect-error -- Promise<ReactNode> not considered a valid child even though it is */}
+            {pendingMetadataTags}
+          </Suspense>
+        </MetadataBoundary>
       </div>
     )
   }
+  Metadata.displayName = 'Next.Metadata'
 
-  async function MetadataResolver() {
-    const metadataState = await resolveFinalMetadata()
-    return metadataState.metadata
-  }
-
-  Metadata.displayName = METADATA_BOUNDARY_NAME
+  function MetadataOutlet() {
+    const pendingOutlet = Promise.all([
+      getResolvedMetadata(
+        tree,
+        pathnameForMetadata,
+        searchParams,
+        getDynamicParamFromSegment,
+        metadataContext,
+        workStore,
+        errorType
+      ),
+      getResolvedViewport(
+        tree,
+        searchParams,
+        getDynamicParamFromSegment,
+        workStore,
+        errorType
+      ),
+    ]).then(() => null)
 
-  async function getMetadataReady(): Promise<void> {
-    // Only warm up metadata() call when it's blocking metadata,
-    // otherwise it will be fully managed by AsyncMetadata component.
+    // TODO: We shouldn't change what we render based on whether we are streaming or not.
+    // If we aren't streaming we should just block the response until we have resolved the
+    // metadata.
     if (!serveStreamingMetadata) {
-      await metadata()
+      return <OutletBoundary>{pendingOutlet}</OutletBoundary>
     }
-    return undefined
-  }
-
-  async function getViewportReady(): Promise<void> {
-    await viewport()
-    return undefined
-  }
-
-  function StreamingMetadataOutletImpl() {
-    return <AsyncMetadataOutlet promise={resolveFinalMetadata()} />
+    return (
+      <OutletBoundary>
+        <Suspense name=""Next.MetadataOutlet"">{pendingOutlet}</Suspense>
+      </OutletBoundary>
+    )
   }
-
-  const StreamingMetadataOutlet = serveStreamingMetadata
-    ? StreamingMetadataOutletImpl
-    : null
+  MetadataOutlet.displayName = 'Next.MetadataOutlet'
 
   return {
-    ViewportTree,
-    MetadataTree,
-    getViewportReady,
-    getMetadataReady,
-    StreamingMetadataOutlet,
+    Viewport,
+    Metadata,
+    MetadataOutlet,
   }
 }
 "
vercel/next.js,c1728ed2a6a1caf9be1802718410ab85795ee19f,Josh Story,2025-10-06T00:41:02Z,"Simplify Metadata components (#84527)

Metadata and Viewport litter the component tree with a number of Next.js
internal implementation details. We can't yet get rid of all of these
but we can simplify by consolidating these components or eliminating
them altogether.

One change is to render the metadata as a promise that resolves direclty
to the client tags that must be in the head. Another is to render a
promise that will directly reject with the error reason rather than
reconstructing a digest manually.

In the process I removed a bunch of module indirection too",packages/next/src/server/app-render/app-render.tsx,17,50,67,"@@ -448,11 +448,8 @@ async function generateDynamicRSCPayload(
         userland: { loaderTree },
       },
       createMetadataComponents,
-      MetadataBoundary,
-      ViewportBoundary,
     },
     getDynamicParamFromSegment,
-    appUsingSizeAdjustment,
     query,
     requestId,
     flightRouterState,
@@ -465,22 +462,13 @@ async function generateDynamicRSCPayload(
   if (!options?.skipFlight) {
     const preloadCallbacks: PreloadCallbacks = []
 
-    const {
-      ViewportTree,
-      MetadataTree,
-      getViewportReady,
-      getMetadataReady,
-      StreamingMetadataOutlet,
-    } = createMetadataComponents({
+    const { Viewport, Metadata, MetadataOutlet } = createMetadataComponents({
       tree: loaderTree,
       parsedQuery: query,
       pathname: url.pathname,
       metadataContext: createMetadataContext(ctx.renderOpts),
       getDynamicParamFromSegment,
-      appUsingSizeAdjustment,
       workStore,
-      MetadataBoundary,
-      ViewportBoundary,
       serveStreamingMetadata,
     })
 
@@ -500,18 +488,16 @@ async function generateDynamicRSCPayload(
               isPossibleServerAction={ctx.isPossibleServerAction}
             />
             {/* Adding requestId as react key to make metadata remount for each render */}
-            <ViewportTree key={getFlightViewportKey(requestId)} />
-            <MetadataTree key={getFlightMetadataKey(requestId)} />
+            <Viewport key={getFlightViewportKey(requestId)} />
+            <Metadata key={getFlightMetadataKey(requestId)} />
           </React.Fragment>
         ),
         injectedCSS: new Set(),
         injectedJS: new Set(),
         injectedFontPreloadTags: new Set(),
         rootLayoutIncluded: false,
-        getViewportReady,
-        getMetadataReady,
         preloadCallbacks,
-        StreamingMetadataOutlet,
+        MetadataOutlet,
       })
     ).map((path) => path.slice(1)) // remove the '' (root) segment
   }
@@ -1119,11 +1105,7 @@ async function getRSCPayload(
     getDynamicParamFromSegment,
     query,
     appUsingSizeAdjustment,
-    componentMod: {
-      createMetadataComponents,
-      MetadataBoundary,
-      ViewportBoundary,
-    },
+    componentMod: { createMetadataComponents },
     url,
     workStore,
   } = ctx
@@ -1136,13 +1118,7 @@ async function getRSCPayload(
   const serveStreamingMetadata = !!ctx.renderOpts.serveStreamingMetadata
   const hasGlobalNotFound = !!tree[2]['global-not-found']
 
-  const {
-    ViewportTree,
-    MetadataTree,
-    getViewportReady,
-    getMetadataReady,
-    StreamingMetadataOutlet,
-  } = createMetadataComponents({
+  const { Viewport, Metadata, MetadataOutlet } = createMetadataComponents({
     tree,
     // When it's using global-not-found, metadata errorType is undefined, which will retrieve the
     // metadata from the page.
@@ -1154,10 +1130,7 @@ async function getRSCPayload(
     pathname: url.pathname,
     metadataContext: createMetadataContext(ctx.renderOpts),
     getDynamicParamFromSegment,
-    appUsingSizeAdjustment,
     workStore,
-    MetadataBoundary,
-    ViewportBoundary,
     serveStreamingMetadata,
   })
 
@@ -1171,12 +1144,10 @@ async function getRSCPayload(
     injectedJS,
     injectedFontPreloadTags,
     rootLayoutIncluded: false,
-    getViewportReady,
-    getMetadataReady,
     missingSlots,
     preloadCallbacks,
     authInterrupts: ctx.renderOpts.experimental.authInterrupts,
-    StreamingMetadataOutlet,
+    MetadataOutlet,
   })
 
   // When the `vary` response header is present with `Next-URL`, that means there's a chance
@@ -1193,8 +1164,12 @@ async function getRSCPayload(
         statusCode={ctx.res.statusCode}
         isPossibleServerAction={ctx.isPossibleServerAction}
       />
-      <ViewportTree />
-      <MetadataTree />
+      <Viewport />
+      <Metadata />
+      {/* This meta tag is for next/font which is still required to be blocking. */}
+      {appUsingSizeAdjustment ? (
+        <meta name=""next-size-adjust"" content="""" />
+      ) : null}
     </React.Fragment>
   )
 
@@ -1255,28 +1230,20 @@ async function getErrorRSCPayload(
   const {
     getDynamicParamFromSegment,
     query,
-    appUsingSizeAdjustment,
-    componentMod: {
-      createMetadataComponents,
-      MetadataBoundary,
-      ViewportBoundary,
-    },
+    componentMod: { createMetadataComponents },
     url,
     workStore,
   } = ctx
 
   const serveStreamingMetadata = !!ctx.renderOpts.serveStreamingMetadata
-  const { MetadataTree, ViewportTree } = createMetadataComponents({
+  const { Viewport, Metadata } = createMetadataComponents({
     tree,
     parsedQuery: query,
     pathname: url.pathname,
     metadataContext: createMetadataContext(ctx.renderOpts),
     errorType,
     getDynamicParamFromSegment,
-    appUsingSizeAdjustment,
     workStore,
-    MetadataBoundary,
-    ViewportBoundary,
     serveStreamingMetadata: serveStreamingMetadata,
   })
 
@@ -1287,11 +1254,11 @@ async function getErrorRSCPayload(
         statusCode={ctx.res.statusCode}
         isPossibleServerAction={ctx.isPossibleServerAction}
       />
-      <ViewportTree />
+      <Viewport />
       {process.env.NODE_ENV === 'development' && (
         <meta name=""next-error"" content=""not-found"" />
       )}
-      <MetadataTree />
+      <Metadata />
     </React.Fragment>
   )
 "
vercel/next.js,c1728ed2a6a1caf9be1802718410ab85795ee19f,Josh Story,2025-10-06T00:41:02Z,"Simplify Metadata components (#84527)

Metadata and Viewport litter the component tree with a number of Next.js
internal implementation details. We can't yet get rid of all of these
but we can simplify by consolidating these components or eliminating
them altogether.

One change is to render the metadata as a promise that resolves direclty
to the client tags that must be in the head. Another is to render a
promise that will directly reject with the error reason rather than
reconstructing a digest manually.

In the process I removed a bunch of module indirection too",packages/next/src/server/app-render/create-component-tree.tsx,5,49,54,"@@ -23,7 +23,6 @@ import { NextNodeServerSpan } from '../lib/trace/constants'
 import { StaticGenBailoutError } from '../../client/components/static-generation-bailout'
 import type { Params } from '../request/params'
 import { workUnitAsyncStorage } from './work-unit-async-storage.external'
-import { OUTLET_BOUNDARY_NAME } from '../../lib/framework/boundary-constants'
 import type {
   UseCacheLayoutProps,
   UseCachePageProps,
@@ -48,13 +47,11 @@ export function createComponentTree(props: {
   injectedCSS: Set<string>
   injectedJS: Set<string>
   injectedFontPreloadTags: Set<string>
-  getMetadataReady: () => Promise<void>
-  getViewportReady: () => Promise<void>
   ctx: AppRenderContext
   missingSlots?: Set<string>
   preloadCallbacks: PreloadCallbacks
   authInterrupts: boolean
-  StreamingMetadataOutlet: React.ComponentType | null
+  MetadataOutlet: React.ComponentType
 }): Promise<CacheNodeSeedData> {
   return getTracer().trace(
     NextNodeServerSpan.createComponentTree,
@@ -85,27 +82,23 @@ async function createComponentTreeInternal(
     injectedCSS,
     injectedJS,
     injectedFontPreloadTags,
-    getViewportReady,
-    getMetadataReady,
     ctx,
     missingSlots,
     preloadCallbacks,
     authInterrupts,
-    StreamingMetadataOutlet,
+    MetadataOutlet,
   }: {
     loaderTree: LoaderTree
     parentParams: Params
     rootLayoutIncluded: boolean
     injectedCSS: Set<string>
     injectedJS: Set<string>
     injectedFontPreloadTags: Set<string>
-    getViewportReady: () => Promise<void>
-    getMetadataReady: () => Promise<void>
     ctx: AppRenderContext
     missingSlots?: Set<string>
     preloadCallbacks: PreloadCallbacks
     authInterrupts: boolean
-    StreamingMetadataOutlet: React.ComponentType | null
+    MetadataOutlet: React.ComponentType | null
   },
   isRoot: boolean
 ): Promise<CacheNodeSeedData> {
@@ -117,7 +110,6 @@ async function createComponentTreeInternal(
       HTTPAccessFallbackBoundary,
       LayoutRouter,
       RenderFromTemplateContext,
-      OutletBoundary,
       ClientPageRoot,
       ClientSegmentRoot,
       createServerSearchParamsForServerPage,
@@ -428,13 +420,6 @@ async function createComponentTreeInternal(
       ? process.env.__NEXT_EDGE_PROJECT_DIR
       : ctx.renderOpts.dir) || ''
 
-  // Use the same condition to render metadataOutlet as metadata
-  const metadataOutlet = StreamingMetadataOutlet ? (
-    <StreamingMetadataOutlet />
-  ) : (
-    <MetadataOutlet ready={getMetadataReady} />
-  )
-
   const [notFoundElement, notFoundFilePath] =
     await createBoundaryConventionElement({
       ctx,
@@ -544,23 +529,13 @@ async function createComponentTreeInternal(
               injectedCSS: injectedCSSWithCurrentLayout,
               injectedJS: injectedJSWithCurrentLayout,
               injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,
-              // `getMetadataReady` and `getViewportReady` are used to conditionally throw. In the case of parallel routes we will have more than one page
-              // but we only want to throw on the first one.
-              getMetadataReady: isChildrenRouteKey
-                ? getMetadataReady
-                : () => Promise.resolve(),
-              getViewportReady: isChildrenRouteKey
-                ? getViewportReady
-                : () => Promise.resolve(),
               ctx,
               missingSlots,
               preloadCallbacks,
               authInterrupts,
               // `StreamingMetadataOutlet` is used to conditionally throw. In the case of parallel routes we will have more than one page
               // but we only want to throw on the first one.
-              StreamingMetadataOutlet: isChildrenRouteKey
-                ? StreamingMetadataOutlet
-                : null,
+              MetadataOutlet: isChildrenRouteKey ? MetadataOutlet : null,
             },
             false
           )
@@ -833,10 +808,7 @@ async function createComponentTreeInternal(
       <React.Fragment key={cacheNodeKey}>
         {wrappedPageElement}
         {layerAssets}
-        <OutletBoundary>
-          <MetadataOutlet ready={getViewportReady} />
-          {metadataOutlet}
-        </OutletBoundary>
+        {MetadataOutlet ? <MetadataOutlet /> : null}
       </React.Fragment>,
       parallelRouteCacheNodeSeedData,
       loadingData,
@@ -1024,22 +996,6 @@ async function createComponentTreeInternal(
   }
 }
 
-async function MetadataOutlet({
-  ready,
-}: {
-  ready: () => Promise<void> & { status?: string; value?: unknown }
-}) {
-  const r = ready()
-  // We can avoid a extra microtask by unwrapping the instrumented promise directly if available.
-  if (r.status === 'rejected') {
-    throw r.value
-  } else if (r.status !== 'fulfilled') {
-    await r
-  }
-  return null
-}
-MetadataOutlet.displayName = OUTLET_BOUNDARY_NAME
-
 function createErrorBoundaryClientSegmentRoot({
   ErrorBoundaryComponent,
   errorElement,"
vercel/next.js,c1728ed2a6a1caf9be1802718410ab85795ee19f,Josh Story,2025-10-06T00:41:02Z,"Simplify Metadata components (#84527)

Metadata and Viewport litter the component tree with a number of Next.js
internal implementation details. We can't yet get rid of all of these
but we can simplify by consolidating these components or eliminating
them altogether.

One change is to render the metadata as a promise that resolves direclty
to the client tags that must be in the head. Another is to render a
promise that will directly reject with the error reason rather than
reconstructing a digest manually.

In the process I removed a bunch of module indirection too",packages/next/src/server/app-render/entry-base.ts,1,6,7,"@@ -32,12 +32,7 @@ export {
 export * as serverHooks from '../../client/components/hooks-server-context'
 export { HTTPAccessFallbackBoundary } from '../../client/components/http-access-fallback/error-boundary'
 export { createMetadataComponents } from '../../lib/metadata/metadata'
-export {
-  MetadataBoundary,
-  ViewportBoundary,
-  OutletBoundary,
-  RootLayoutBoundary,
-} from '../../lib/framework/boundary-components'
+export { RootLayoutBoundary } from '../../lib/framework/boundary-components'
 
 export { preloadStyle, preloadFont, preconnect } from './rsc/preloads'
 export { Postpone } from './rsc/postpone'"
vercel/next.js,c1728ed2a6a1caf9be1802718410ab85795ee19f,Josh Story,2025-10-06T00:41:02Z,"Simplify Metadata components (#84527)

Metadata and Viewport litter the component tree with a number of Next.js
internal implementation details. We can't yet get rid of all of these
but we can simplify by consolidating these components or eliminating
them altogether.

One change is to render the metadata as a promise that resolves direclty
to the client tags that must be in the head. Another is to render a
promise that will directly reject with the error reason rather than
reconstructing a digest manually.

In the process I removed a bunch of module indirection too",packages/next/src/server/app-render/walk-tree-with-flight-router-state.tsx,4,12,16,"@@ -34,11 +34,9 @@ export async function walkTreeWithFlightRouterState({
   injectedJS,
   injectedFontPreloadTags,
   rootLayoutIncluded,
-  getViewportReady,
-  getMetadataReady,
   ctx,
   preloadCallbacks,
-  StreamingMetadataOutlet,
+  MetadataOutlet,
 }: {
   loaderTreeToFilter: LoaderTree
   parentParams: { [key: string]: string | string[] }
@@ -49,11 +47,9 @@ export async function walkTreeWithFlightRouterState({
   injectedJS: Set<string>
   injectedFontPreloadTags: Set<string>
   rootLayoutIncluded: boolean
-  getMetadataReady: () => Promise<void>
-  getViewportReady: () => Promise<void>
   ctx: AppRenderContext
   preloadCallbacks: PreloadCallbacks
-  StreamingMetadataOutlet: React.ComponentType | null
+  MetadataOutlet: React.ComponentType
 }): Promise<FlightDataPath[]> {
   const {
     renderOpts: { nextFontManifest, experimental },
@@ -228,11 +224,9 @@ export async function walkTreeWithFlightRouterState({
         injectedFontPreloadTags,
         // This is intentionally not ""rootLayoutIncludedAtThisLevelOrAbove"" as createComponentTree starts at the current level and does a check for ""rootLayoutAtThisLevel"" too.
         rootLayoutIncluded,
-        getViewportReady,
-        getMetadataReady,
         preloadCallbacks,
         authInterrupts: experimental.authInterrupts,
-        StreamingMetadataOutlet,
+        MetadataOutlet,
       }
     )
 
@@ -289,10 +283,8 @@ export async function walkTreeWithFlightRouterState({
       injectedJS: injectedJSWithCurrentLayout,
       injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,
       rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,
-      getViewportReady,
-      getMetadataReady,
       preloadCallbacks,
-      StreamingMetadataOutlet,
+      MetadataOutlet,
     })
 
     for (const subPath of subPaths) {"
vercel/next.js,c1728ed2a6a1caf9be1802718410ab85795ee19f,Josh Story,2025-10-06T00:41:02Z,"Simplify Metadata components (#84527)

Metadata and Viewport litter the component tree with a number of Next.js
internal implementation details. We can't yet get rid of all of these
but we can simplify by consolidating these components or eliminating
them altogether.

One change is to render the metadata as a promise that resolves direclty
to the client tags that must be in the head. Another is to render a
promise that will directly reject with the error reason rather than
reconstructing a digest manually.

In the process I removed a bunch of module indirection too",test/e2e/opentelemetry/instrumentation/opentelemetry.test.ts,3,2,5,"@@ -170,7 +170,7 @@ describe('opentelemetry', () => {
                       },
                       {
                         attributes: {
-                          'next.clientComponentLoadCount': isNextDev ? 8 : 7,
+                          'next.clientComponentLoadCount': isNextDev ? 7 : 6,
                           'next.span_type':
                             'NextNodeServer.clientComponentLoading',
                         },
@@ -578,7 +578,7 @@ describe('opentelemetry', () => {
                       },
                       {
                         attributes: {
-                          'next.clientComponentLoadCount': isNextDev ? 11 : 8,
+                          'next.clientComponentLoadCount': isNextDev ? 10 : 8,
                           'next.span_type':
                             'NextNodeServer.clientComponentLoading',
                         },
@@ -1063,6 +1063,7 @@ describe('opentelemetry with disabled fetch tracing', () => {
 
   afterEach(async () => {
     await collector.shutdown()
+    await new Promise((r) => setTimeout(r, 1000))
   })
   ;(process.env.__NEXT_EXPERIMENTAL_PPR ? describe.skip : describe)(
     'root context',"
vercel/next.js,e974ca937b2ca0e5cacaa118027765d5a23c605c,Hendrik Liebau,2025-10-05T23:48:09Z,"[test] Enable `reactDebugChannel` for experimental test shards (#84533)

The experimental flag `reactDebugChannel` is currently off by default.
To avoid regressions in the debug channel integration, we enable the
flag for the experimental test shards.",.github/workflows/build_and_test.yml,4,0,4,"@@ -702,6 +702,7 @@ jobs:
       afterBuild: |
         export __NEXT_EXPERIMENTAL_PPR=true # for compatibility with the existing tests
         export __NEXT_EXPERIMENTAL_CACHE_COMPONENTS=true
+        export __NEXT_EXPERIMENTAL_DEBUG_CHANNEL=true
         export NEXT_EXTERNAL_TESTS_FILTERS=""test/experimental-tests-manifest.json""
         export NEXT_E2E_TEST_TIMEOUT=240000
         export GH_PR_NUMBER=${{ github.event.pull_request && github.event.pull_request.number || '' }}
@@ -932,6 +933,7 @@ jobs:
       afterBuild: |
         export __NEXT_EXPERIMENTAL_PPR=true # for compatibility with the existing tests
         export __NEXT_EXPERIMENTAL_CACHE_COMPONENTS=true
+        export __NEXT_EXPERIMENTAL_DEBUG_CHANNEL=true
         export NEXT_EXTERNAL_TESTS_FILTERS=""test/experimental-tests-manifest.json""
         export IS_WEBPACK_TEST=1
 
@@ -955,6 +957,7 @@ jobs:
       afterBuild: |
         export __NEXT_EXPERIMENTAL_PPR=true # for compatibility with the existing tests
         export __NEXT_EXPERIMENTAL_CACHE_COMPONENTS=true
+        export __NEXT_EXPERIMENTAL_DEBUG_CHANNEL=true
         export NEXT_EXTERNAL_TESTS_FILTERS=""test/experimental-tests-manifest.json""
         export NEXT_TEST_MODE=dev
         export __NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD=true
@@ -981,6 +984,7 @@ jobs:
       afterBuild: |
         export __NEXT_EXPERIMENTAL_PPR=true # for compatibility with the existing tests
         export __NEXT_EXPERIMENTAL_CACHE_COMPONENTS=true
+        export __NEXT_EXPERIMENTAL_DEBUG_CHANNEL=true
         export NEXT_EXTERNAL_TESTS_FILTERS=""test/experimental-tests-manifest.json""
         export NEXT_TEST_MODE=start
         export IS_WEBPACK_TEST=1"
vercel/next.js,e974ca937b2ca0e5cacaa118027765d5a23c605c,Hendrik Liebau,2025-10-05T23:48:09Z,"[test] Enable `reactDebugChannel` for experimental test shards (#84533)

The experimental flag `reactDebugChannel` is currently off by default.
To avoid regressions in the debug channel integration, we enable the
flag for the experimental test shards.",package.json,1,1,2,"@@ -110,7 +110,7 @@
     ""test-storybook"": ""turbo run test-storybook"",
     ""with-rspack"": ""cross-env NEXT_RSPACK=1 NEXT_TEST_USE_RSPACK=1"",
     ""with-webpack"": ""cross-env IS_WEBPACK_TEST=1"",
-    ""with-experimental"": ""cross-env __NEXT_EXPERIMENTAL_CACHE_COMPONENTS=true __NEXT_EXPERIMENTAL_PPR=true""
+    ""with-experimental"": ""cross-env __NEXT_EXPERIMENTAL_CACHE_COMPONENTS=true __NEXT_EXPERIMENTAL_PPR=true __NEXT_EXPERIMENTAL_DEBUG_CHANNEL=true""
   },
   ""devDependencies"": {
     ""@actions/core"": ""1.10.1"","
vercel/next.js,e974ca937b2ca0e5cacaa118027765d5a23c605c,Hendrik Liebau,2025-10-05T23:48:09Z,"[test] Enable `reactDebugChannel` for experimental test shards (#84533)

The experimental flag `reactDebugChannel` is currently off by default.
To avoid regressions in the debug channel integration, we enable the
flag for the experimental test shards.",packages/next/src/server/config.ts,19,0,19,"@@ -1792,6 +1792,25 @@ function enforceExperimentalFeatures(
     }
   }
 
+  // TODO: Remove this once using the debug channel is the default.
+  if (
+    process.env.__NEXT_EXPERIMENTAL_DEBUG_CHANNEL === 'true' &&
+    // We do respect an explicit value in the user config.
+    (config.experimental.reactDebugChannel === undefined ||
+      (isDefaultConfig && !config.experimental.reactDebugChannel))
+  ) {
+    config.experimental.reactDebugChannel = true
+
+    if (configuredExperimentalFeatures) {
+      addConfiguredExperimentalFeature(
+        configuredExperimentalFeatures,
+        'reactDebugChannel',
+        true,
+        'enabled by `__NEXT_EXPERIMENTAL_DEBUG_CHANNEL`'
+      )
+    }
+  }
+
   // TODO: Remove this once we've made RDC for Navigations the default for PPR.
   if (
     process.env.__NEXT_EXPERIMENTAL_PPR === 'true' &&"
vercel/next.js,e974ca937b2ca0e5cacaa118027765d5a23c605c,Hendrik Liebau,2025-10-05T23:48:09Z,"[test] Enable `reactDebugChannel` for experimental test shards (#84533)

The experimental flag `reactDebugChannel` is currently off by default.
To avoid regressions in the debug channel integration, we enable the
flag for the experimental test shards.",test/production/app-dir/build-output-prerender/build-output-prerender.test.ts,12,4,16,"@@ -33,7 +33,8 @@ describe('build-output-prerender', () => {
                   ✓ clientSegmentCache (enabled by \`__NEXT_EXPERIMENTAL_PPR\`)
                   ✓ enablePrerenderSourceMaps (enabled by \`experimental.cacheComponents\`)
                   ✓ ppr (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
-                  ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)""
+                  ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
+                  ✓ reactDebugChannel (enabled by \`__NEXT_EXPERIMENTAL_DEBUG_CHANNEL\`)""
             `)
           } else {
             expect(getPreambleOutput(next.cliOutput)).toMatchInlineSnapshot(`
@@ -44,7 +45,8 @@ describe('build-output-prerender', () => {
                   ✓ clientSegmentCache (enabled by \`__NEXT_EXPERIMENTAL_PPR\`)
                   ✓ enablePrerenderSourceMaps (enabled by \`experimental.cacheComponents\`)
                   ✓ ppr (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
-                  ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)""
+                  ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
+                  ✓ reactDebugChannel (enabled by \`__NEXT_EXPERIMENTAL_DEBUG_CHANNEL\`)""
             `)
           }
         } else if (pprEnabled) {
@@ -180,6 +182,7 @@ describe('build-output-prerender', () => {
                   ✓ ppr (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
                   ⨯ prerenderEarlyExit (disabled by \`--debug-prerender\`)
                   ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
+                  ✓ reactDebugChannel (enabled by \`__NEXT_EXPERIMENTAL_DEBUG_CHANNEL\`)
                   ✓ serverSourceMaps (enabled by \`--debug-prerender\`)
                   ⨯ turbopackMinify (disabled by \`--debug-prerender\`)""
             `)
@@ -195,6 +198,7 @@ describe('build-output-prerender', () => {
                   ✓ ppr (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
                   ⨯ prerenderEarlyExit (disabled by \`--debug-prerender\`)
                   ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
+                  ✓ reactDebugChannel (enabled by \`__NEXT_EXPERIMENTAL_DEBUG_CHANNEL\`)
                   ⨯ serverMinification (disabled by \`--debug-prerender\`)
                   ✓ serverSourceMaps (enabled by \`--debug-prerender\`)""
             `)
@@ -356,7 +360,8 @@ describe('build-output-prerender', () => {
                   ✓ clientSegmentCache (enabled by \`__NEXT_EXPERIMENTAL_PPR\`)
                   ✓ enablePrerenderSourceMaps (enabled by \`experimental.cacheComponents\`)
                   ✓ ppr (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
-                  ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)""
+                  ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
+                  ✓ reactDebugChannel (enabled by \`__NEXT_EXPERIMENTAL_DEBUG_CHANNEL\`)""
             `)
           } else {
             expect(getPreambleOutput(next.cliOutput)).toMatchInlineSnapshot(`
@@ -367,7 +372,8 @@ describe('build-output-prerender', () => {
                   ✓ clientSegmentCache (enabled by \`__NEXT_EXPERIMENTAL_PPR\`)
                   ✓ enablePrerenderSourceMaps (enabled by \`experimental.cacheComponents\`)
                   ✓ ppr (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
-                  ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)""
+                  ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
+                  ✓ reactDebugChannel (enabled by \`__NEXT_EXPERIMENTAL_DEBUG_CHANNEL\`)""
             `)
           }
         } else if (pprEnabled) {
@@ -445,6 +451,7 @@ describe('build-output-prerender', () => {
                   ✓ ppr (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
                   ⨯ prerenderEarlyExit (disabled by \`--debug-prerender\`)
                   ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
+                  ✓ reactDebugChannel (enabled by \`__NEXT_EXPERIMENTAL_DEBUG_CHANNEL\`)
                   ✓ serverSourceMaps (enabled by \`--debug-prerender\`)
                   ⨯ turbopackMinify (disabled by \`--debug-prerender\`)""
             `)
@@ -460,6 +467,7 @@ describe('build-output-prerender', () => {
                   ✓ ppr (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
                   ⨯ prerenderEarlyExit (disabled by \`--debug-prerender\`)
                   ✓ rdcForNavigations (enabled by \`__NEXT_EXPERIMENTAL_CACHE_COMPONENTS\`)
+                  ✓ reactDebugChannel (enabled by \`__NEXT_EXPERIMENTAL_DEBUG_CHANNEL\`)
                   ⨯ serverMinification (disabled by \`--debug-prerender\`)
                   ✓ serverSourceMaps (enabled by \`--debug-prerender\`)""
             `)"
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,lerna.json,1,1,2,"@@ -16,5 +16,5 @@
       ""registry"": ""https://registry.npmjs.org/""
     }
   },
-  ""version"": ""15.6.0-canary.44""
+  ""version"": ""15.6.0-canary.45""
 }"
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/create-next-app/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""create-next-app"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/eslint-config-next/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""eslint-config-next"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""description"": ""ESLint configuration used by Next.js."",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
@@ -10,7 +10,7 @@
   },
   ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"",
   ""dependencies"": {
-    ""@next/eslint-plugin-next"": ""15.6.0-canary.44"",
+    ""@next/eslint-plugin-next"": ""15.6.0-canary.45"",
     ""@rushstack/eslint-patch"": ""^1.10.3"",
     ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"",
     ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/eslint-plugin-internal/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/eslint-plugin-internal"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""description"": ""ESLint plugin for working on Next.js."",
   ""exports"": {
     ""."": ""./src/eslint-plugin-internal.js"""
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/eslint-plugin-next/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/eslint-plugin-next"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""description"": ""ESLint plugin for Next.js."",
   ""main"": ""dist/index.js"",
   ""types"": ""dist/index.d.ts"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/font/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/font"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/font"""
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next-bundle-analyzer/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/bundle-analyzer"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""main"": ""index.js"",
   ""types"": ""index.d.ts"",
   ""license"": ""MIT"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next-codemod/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/codemod"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""license"": ""MIT"",
   ""repository"": {
     ""type"": ""git"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next-env/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/env"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next-mdx/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/mdx"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
   ""repository"": {"
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next-plugin-storybook/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/plugin-storybook"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-plugin-storybook"""
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next-polyfill-module/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-module"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+, Firefox 60+, Chrome 61+, Safari 10.1+)"",
   ""main"": ""dist/polyfill-module.js"",
   ""license"": ""MIT"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next-polyfill-nomodule/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-nomodule"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""description"": ""A polyfill for non-dead, nomodule browsers."",
   ""main"": ""dist/polyfill-nomodule.js"",
   ""license"": ""MIT"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next-rspack/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next-rspack"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-rspack"""
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next-swc/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/swc"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""private"": true,
   ""files"": [
     ""native/"""
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/next/package.json,7,7,14,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""description"": ""The React Framework"",
   ""main"": ""./dist/server/next.js"",
   ""license"": ""MIT"",
@@ -100,7 +100,7 @@
     ]
   },
   ""dependencies"": {
-    ""@next/env"": ""15.6.0-canary.44"",
+    ""@next/env"": ""15.6.0-canary.45"",
     ""@swc/helpers"": ""0.5.15"",
     ""caniuse-lite"": ""^1.0.30001579"",
     ""postcss"": ""8.4.31"",
@@ -164,11 +164,11 @@
     ""@modelcontextprotocol/sdk"": ""1.18.1"",
     ""@mswjs/interceptors"": ""0.23.0"",
     ""@napi-rs/triples"": ""1.2.0"",
-    ""@next/font"": ""15.6.0-canary.44"",
-    ""@next/polyfill-module"": ""15.6.0-canary.44"",
-    ""@next/polyfill-nomodule"": ""15.6.0-canary.44"",
-    ""@next/react-refresh-utils"": ""15.6.0-canary.44"",
-    ""@next/swc"": ""15.6.0-canary.44"",
+    ""@next/font"": ""15.6.0-canary.45"",
+    ""@next/polyfill-module"": ""15.6.0-canary.45"",
+    ""@next/polyfill-nomodule"": ""15.6.0-canary.45"",
+    ""@next/react-refresh-utils"": ""15.6.0-canary.45"",
+    ""@next/swc"": ""15.6.0-canary.45"",
     ""@opentelemetry/api"": ""1.6.0"",
     ""@playwright/test"": ""1.51.1"",
     ""@rspack/core"": ""1.5.0"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/react-refresh-utils/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/react-refresh-utils"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""description"": ""An experimental package providing utilities for React Refresh."",
   ""repository"": {
     ""url"": ""vercel/next.js"","
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,packages/third-parties/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/third-parties"",
-  ""version"": ""15.6.0-canary.44"",
+  ""version"": ""15.6.0-canary.45"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/third-parties""
@@ -26,7 +26,7 @@
     ""third-party-capital"": ""1.0.20""
   },
   ""devDependencies"": {
-    ""next"": ""15.6.0-canary.44"",
+    ""next"": ""15.6.0-canary.45"",
     ""outdent"": ""0.8.0"",
     ""prettier"": ""2.5.1"",
     ""typescript"": ""5.9.2"""
vercel/next.js,7c0c2c6b86fe3bd44f205a2677f3622ba3fb8700,nextjs-bot,2025-10-05T23:23:01Z,v15.6.0-canary.45,pnpm-lock.yaml,8,8,16,"@@ -899,7 +899,7 @@ importers:
   packages/eslint-config-next:
     dependencies:
       '@next/eslint-plugin-next':
-        specifier: 15.6.0-canary.44
+        specifier: 15.6.0-canary.45
         version: link:../eslint-plugin-next
       '@rushstack/eslint-patch':
         specifier: ^1.10.3
@@ -972,7 +972,7 @@ importers:
   packages/next:
     dependencies:
       '@next/env':
-        specifier: 15.6.0-canary.44
+        specifier: 15.6.0-canary.45
         version: link:../next-env
       '@swc/helpers':
         specifier: 0.5.15
@@ -1097,19 +1097,19 @@ importers:
         specifier: 1.2.0
         version: 1.2.0
       '@next/font':
-        specifier: 15.6.0-canary.44
+        specifier: 15.6.0-canary.45
         version: link:../font
       '@next/polyfill-module':
-        specifier: 15.6.0-canary.44
+        specifier: 15.6.0-canary.45
         version: link:../next-polyfill-module
       '@next/polyfill-nomodule':
-        specifier: 15.6.0-canary.44
+        specifier: 15.6.0-canary.45
         version: link:../next-polyfill-nomodule
       '@next/react-refresh-utils':
-        specifier: 15.6.0-canary.44
+        specifier: 15.6.0-canary.45
         version: link:../react-refresh-utils
       '@next/swc':
-        specifier: 15.6.0-canary.44
+        specifier: 15.6.0-canary.45
         version: link:../next-swc
       '@opentelemetry/api':
         specifier: 1.6.0
@@ -1800,7 +1800,7 @@ importers:
         version: 1.0.20
     devDependencies:
       next:
-        specifier: 15.6.0-canary.44
+        specifier: 15.6.0-canary.45
         version: link:../next
       outdent:
         specifier: 0.8.0"
vercel/next.js,953b4c513990b4149faa27d687449ee72c68684f,Hendrik Liebau,2025-10-05T12:40:24Z,"Fix potential race condition with request ID in dev mode (#84532)

In development mode, the request ID needs to be available before the
bootstrap script executes and triggers hydration. Previously, the
request ID was set inline with the flight data stream in a script tag
that was inserted after the bootstrap script, which could lead to a race
condition where `self.__next_r` was accessed before it was defined.

With this PR, we're moving the request ID initialization to
`bootstrapScriptContent`, which is inserted as a script tag by React
immediately before the bootstrap script. This ensures that the request
ID is always defined when the bootstrap script runs.

I wasn't actually able to reproduce the issue, so I also couldn't add a
test for it. But we did receive reports from users that this was
happening, which is plausible given the previous script order.",packages/next/src/server/app-render/app-render.tsx,17,17,34,"@@ -2206,6 +2206,13 @@ async function renderToStream(
     page
   )
 
+  // In development mode, set the request ID as a global variable, before the
+  // bootstrap script is executed, which depends on it during hydration.
+  const bootstrapScriptContent =
+    process.env.NODE_ENV !== 'production'
+      ? `self.__next_r=${JSON.stringify(requestId)}`
+      : undefined
+
   const reactServerErrorsByDigest: Map<string, DigestedError> = new Map()
   const silenceLogger = false
   function onHTMLRenderRSCError(err: DigestedError) {
@@ -2377,8 +2384,7 @@ async function renderToStream(
         const inlinedReactServerDataStream = createInlinedDataReadableStream(
           reactServerResult.tee(),
           nonce,
-          formState,
-          requestId
+          formState
         )
 
         return chainStreams(
@@ -2425,8 +2431,7 @@ async function renderToStream(
           inlinedDataStream: createInlinedDataReadableStream(
             reactServerResult.consume(),
             nonce,
-            formState,
-            requestId
+            formState
           ),
           getServerInsertedHTML,
           getServerInsertedMetadata,
@@ -2459,6 +2464,7 @@ async function renderToStream(
           })
         },
         maxHeadersLength: reactMaxHeadersLength,
+        bootstrapScriptContent,
         bootstrapScripts: [bootstrapScript],
         formState,
       }
@@ -2495,8 +2501,7 @@ async function renderToStream(
       inlinedDataStream: createInlinedDataReadableStream(
         reactServerResult.consume(),
         nonce,
-        formState,
-        requestId
+        formState
       ),
       isStaticGeneration: generateStaticHTML,
       isBuildTimePrerendering: ctx.workStore.isBuildTimePrerendering === true,
@@ -2613,6 +2618,7 @@ async function renderToStream(
           ),
           streamOptions: {
             nonce,
+            bootstrapScriptContent,
             // Include hydration scripts in the HTML
             bootstrapScripts: [errorBootstrapScript],
             formState,
@@ -2645,8 +2651,7 @@ async function renderToStream(
           // render
           reactServerResult.consume(),
           nonce,
-          formState,
-          requestId
+          formState
         ),
         isStaticGeneration: generateStaticHTML,
         isBuildTimePrerendering: ctx.workStore.isBuildTimePrerendering === true,
@@ -3362,7 +3367,6 @@ async function prerenderToStream(
     nonce,
     pagePath,
     renderOpts,
-    requestId,
     workStore,
   } = ctx
 
@@ -4154,8 +4158,7 @@ async function prerenderToStream(
             inlinedDataStream: createInlinedDataReadableStream(
               reactServerResult.consumeAsStream(),
               nonce,
-              formState,
-              requestId
+              formState
             ),
             getServerInsertedHTML,
             getServerInsertedMetadata,
@@ -4403,8 +4406,7 @@ async function prerenderToStream(
             inlinedDataStream: createInlinedDataReadableStream(
               reactServerResult.consumeAsStream(),
               nonce,
-              formState,
-              requestId
+              formState
             ),
             getServerInsertedHTML,
             getServerInsertedMetadata,
@@ -4501,8 +4503,7 @@ async function prerenderToStream(
           inlinedDataStream: createInlinedDataReadableStream(
             reactServerResult.consumeAsStream(),
             nonce,
-            formState,
-            requestId
+            formState
           ),
           isStaticGeneration: true,
           isBuildTimePrerendering:
@@ -4680,8 +4681,7 @@ async function prerenderToStream(
           inlinedDataStream: createInlinedDataReadableStream(
             flightStream,
             nonce,
-            formState,
-            requestId
+            formState
           ),
           isStaticGeneration: true,
           isBuildTimePrerendering:"
vercel/next.js,953b4c513990b4149faa27d687449ee72c68684f,Hendrik Liebau,2025-10-05T12:40:24Z,"Fix potential race condition with request ID in dev mode (#84532)

In development mode, the request ID needs to be available before the
bootstrap script executes and triggers hydration. Previously, the
request ID was set inline with the flight data stream in a script tag
that was inserted after the bootstrap script, which could lead to a race
condition where `self.__next_r` was accessed before it was defined.

With this PR, we're moving the request ID initialization to
`bootstrapScriptContent`, which is inserted as a script tag by React
immediately before the bootstrap script. This ensures that the request
ID is always defined when the bootstrap script runs.

I wasn't actually able to reproduce the issue, so I also couldn't add a
test for it. But we did receive reports from users that this was
happening, which is plausible given the previous script order.",packages/next/src/server/app-render/use-flight-response.tsx,3,15,18,"@@ -103,8 +103,7 @@ export function useFlightStream<T>(
 export function createInlinedDataReadableStream(
   flightStream: ReadableStream<Uint8Array>,
   nonce: string | undefined,
-  formState: unknown | null,
-  requestId: string
+  formState: unknown | null
 ): ReadableStream<Uint8Array> {
   const startScriptTag = nonce
     ? `<script nonce=${JSON.stringify(nonce)}>`
@@ -117,12 +116,7 @@ export function createInlinedDataReadableStream(
     type: 'bytes',
     start(controller) {
       try {
-        writeInitialInstructions(
-          controller,
-          startScriptTag,
-          formState,
-          requestId
-        )
+        writeInitialInstructions(controller, startScriptTag, formState)
       } catch (error) {
         // during encoding or enqueueing forward the error downstream
         controller.error(error)
@@ -166,18 +160,12 @@ export function createInlinedDataReadableStream(
 function writeInitialInstructions(
   controller: ReadableStreamDefaultController,
   scriptStart: string,
-  formState: unknown | null,
-  requestId: string
+  formState: unknown | null
 ) {
   let scriptContents = `(self.__next_f=self.__next_f||[]).push(${htmlEscapeJsonString(
     JSON.stringify([INLINE_FLIGHT_PAYLOAD_BOOTSTRAP])
   )})`
 
-  if (process.env.NODE_ENV !== 'production') {
-    // The request ID is only needed in development mode.
-    scriptContents = `self.__next_r=${JSON.stringify(requestId)};${scriptContents}`
-  }
-
   if (formState != null) {
     scriptContents += `;self.__next_f.push(${htmlEscapeJsonString(
       JSON.stringify([INLINE_FLIGHT_PAYLOAD_FORM_STATE, formState])"
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,lerna.json,1,1,2,"@@ -16,5 +16,5 @@
       ""registry"": ""https://registry.npmjs.org/""
     }
   },
-  ""version"": ""15.6.0-canary.43""
+  ""version"": ""15.6.0-canary.44""
 }"
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/create-next-app/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""create-next-app"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/eslint-config-next/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""eslint-config-next"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""description"": ""ESLint configuration used by Next.js."",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
@@ -10,7 +10,7 @@
   },
   ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"",
   ""dependencies"": {
-    ""@next/eslint-plugin-next"": ""15.6.0-canary.43"",
+    ""@next/eslint-plugin-next"": ""15.6.0-canary.44"",
     ""@rushstack/eslint-patch"": ""^1.10.3"",
     ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"",
     ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/eslint-plugin-internal/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/eslint-plugin-internal"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""description"": ""ESLint plugin for working on Next.js."",
   ""exports"": {
     ""."": ""./src/eslint-plugin-internal.js"""
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/eslint-plugin-next/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/eslint-plugin-next"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""description"": ""ESLint plugin for Next.js."",
   ""main"": ""dist/index.js"",
   ""types"": ""dist/index.d.ts"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/font/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/font"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/font"""
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next-bundle-analyzer/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/bundle-analyzer"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""main"": ""index.js"",
   ""types"": ""index.d.ts"",
   ""license"": ""MIT"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next-codemod/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/codemod"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""license"": ""MIT"",
   ""repository"": {
     ""type"": ""git"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next-env/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/env"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next-mdx/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/mdx"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
   ""repository"": {"
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next-plugin-storybook/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/plugin-storybook"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-plugin-storybook"""
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next-polyfill-module/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-module"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+, Firefox 60+, Chrome 61+, Safari 10.1+)"",
   ""main"": ""dist/polyfill-module.js"",
   ""license"": ""MIT"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next-polyfill-nomodule/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-nomodule"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""description"": ""A polyfill for non-dead, nomodule browsers."",
   ""main"": ""dist/polyfill-nomodule.js"",
   ""license"": ""MIT"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next-rspack/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next-rspack"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-rspack"""
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next-swc/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/swc"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""private"": true,
   ""files"": [
     ""native/"""
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/next/package.json,7,7,14,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""description"": ""The React Framework"",
   ""main"": ""./dist/server/next.js"",
   ""license"": ""MIT"",
@@ -100,7 +100,7 @@
     ]
   },
   ""dependencies"": {
-    ""@next/env"": ""15.6.0-canary.43"",
+    ""@next/env"": ""15.6.0-canary.44"",
     ""@swc/helpers"": ""0.5.15"",
     ""caniuse-lite"": ""^1.0.30001579"",
     ""postcss"": ""8.4.31"",
@@ -164,11 +164,11 @@
     ""@modelcontextprotocol/sdk"": ""1.18.1"",
     ""@mswjs/interceptors"": ""0.23.0"",
     ""@napi-rs/triples"": ""1.2.0"",
-    ""@next/font"": ""15.6.0-canary.43"",
-    ""@next/polyfill-module"": ""15.6.0-canary.43"",
-    ""@next/polyfill-nomodule"": ""15.6.0-canary.43"",
-    ""@next/react-refresh-utils"": ""15.6.0-canary.43"",
-    ""@next/swc"": ""15.6.0-canary.43"",
+    ""@next/font"": ""15.6.0-canary.44"",
+    ""@next/polyfill-module"": ""15.6.0-canary.44"",
+    ""@next/polyfill-nomodule"": ""15.6.0-canary.44"",
+    ""@next/react-refresh-utils"": ""15.6.0-canary.44"",
+    ""@next/swc"": ""15.6.0-canary.44"",
     ""@opentelemetry/api"": ""1.6.0"",
     ""@playwright/test"": ""1.51.1"",
     ""@rspack/core"": ""1.5.0"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/react-refresh-utils/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/react-refresh-utils"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""description"": ""An experimental package providing utilities for React Refresh."",
   ""repository"": {
     ""url"": ""vercel/next.js"","
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,packages/third-parties/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/third-parties"",
-  ""version"": ""15.6.0-canary.43"",
+  ""version"": ""15.6.0-canary.44"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/third-parties""
@@ -26,7 +26,7 @@
     ""third-party-capital"": ""1.0.20""
   },
   ""devDependencies"": {
-    ""next"": ""15.6.0-canary.43"",
+    ""next"": ""15.6.0-canary.44"",
     ""outdent"": ""0.8.0"",
     ""prettier"": ""2.5.1"",
     ""typescript"": ""5.9.2"""
vercel/next.js,665977f2c7b124ba2f1f132d6ba4e3793a2aea49,nextjs-bot,2025-10-05T08:28:54Z,v15.6.0-canary.44,pnpm-lock.yaml,8,8,16,"@@ -899,7 +899,7 @@ importers:
   packages/eslint-config-next:
     dependencies:
       '@next/eslint-plugin-next':
-        specifier: 15.6.0-canary.43
+        specifier: 15.6.0-canary.44
         version: link:../eslint-plugin-next
       '@rushstack/eslint-patch':
         specifier: ^1.10.3
@@ -972,7 +972,7 @@ importers:
   packages/next:
     dependencies:
       '@next/env':
-        specifier: 15.6.0-canary.43
+        specifier: 15.6.0-canary.44
         version: link:../next-env
       '@swc/helpers':
         specifier: 0.5.15
@@ -1097,19 +1097,19 @@ importers:
         specifier: 1.2.0
         version: 1.2.0
       '@next/font':
-        specifier: 15.6.0-canary.43
+        specifier: 15.6.0-canary.44
         version: link:../font
       '@next/polyfill-module':
-        specifier: 15.6.0-canary.43
+        specifier: 15.6.0-canary.44
         version: link:../next-polyfill-module
       '@next/polyfill-nomodule':
-        specifier: 15.6.0-canary.43
+        specifier: 15.6.0-canary.44
         version: link:../next-polyfill-nomodule
       '@next/react-refresh-utils':
-        specifier: 15.6.0-canary.43
+        specifier: 15.6.0-canary.44
         version: link:../react-refresh-utils
       '@next/swc':
-        specifier: 15.6.0-canary.43
+        specifier: 15.6.0-canary.44
         version: link:../next-swc
       '@opentelemetry/api':
         specifier: 1.6.0
@@ -1800,7 +1800,7 @@ importers:
         version: 1.0.20
     devDependencies:
       next:
-        specifier: 15.6.0-canary.43
+        specifier: 15.6.0-canary.44
         version: link:../next
       outdent:
         specifier: 0.8.0"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",test/e2e/app-dir/no-double-tailwind-execution/app/globals.css,0,1,1,"@@ -1 +0,0 @@
-@import 'tailwindcss';"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",test/e2e/app-dir/no-double-tailwind-execution/app/layout.tsx,0,10,10,"@@ -1,10 +0,0 @@
-import './globals.css'
-
-import { ReactNode } from 'react'
-export default function Root({ children }: { children: ReactNode }) {
-  return (
-    <html>
-      <body>{children}</body>
-    </html>
-  )
-}"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",test/e2e/app-dir/no-double-tailwind-execution/app/page.tsx,0,3,3,"@@ -1,3 +0,0 @@
-export default function Page() {
-  return <p>hello world</p>
-}"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",test/e2e/app-dir/no-double-tailwind-execution/next.config.js,0,6,6,"@@ -1,6 +0,0 @@
-/**
- * @type {import('next').NextConfig}
- */
-const nextConfig = {}
-
-module.exports = nextConfig"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",test/e2e/app-dir/no-double-tailwind-execution/no-double-tailwind-execution.test.ts,0,55,55,"@@ -1,55 +0,0 @@
-import { nextTestSetup } from 'e2e-utils'
-import { retry } from 'next-test-utils'
-
-describe('no-double-tailwind-execution', () => {
-  const { next, isNextDev, skipped } = nextTestSetup({
-    files: __dirname,
-    skipDeployment: true,
-    dependencies: {
-      '@tailwindcss/postcss': '^4',
-      tailwindcss: '^4',
-    },
-    env: {
-      DEBUG: 'tailwindcss',
-      ...process.env,
-    },
-  })
-
-  if (skipped) {
-    return
-  }
-
-  it('should run tailwind only once initially and per change', async () => {
-    const browser = await next.browser('/')
-    expect(await browser.elementByCss('p').text()).toBe('hello world')
-
-    if (isNextDev) {
-      const filePath = 'app/page.tsx'
-      const origContent = await next.readFile(filePath)
-      let getOutput = next.getCliOutputFromHere()
-      await next.patchFile(
-        filePath,
-        origContent.replace('hello world', 'hello hmr'),
-        async () => {
-          await retry(async () => {
-            expect(await browser.elementByCss('p').text()).toBe('hello hmr')
-            let tailwindProcessingCount = [
-              ...getOutput().matchAll(
-                /\[@tailwindcss\/postcss\] app\/globals.css/g
-              ),
-            ].length
-            expect(tailwindProcessingCount).toBe(1)
-          })
-        }
-      )
-    }
-    let tailwindProcessingCount = [
-      ...next.cliOutput.matchAll(/\[@tailwindcss\/postcss\] app\/globals.css/g),
-    ].length
-    if (isNextDev) {
-      expect(tailwindProcessingCount).toBe(3) // dev: initial + hmr + hmr (revert)
-    } else {
-      expect(tailwindProcessingCount).toBe(1) // build
-    }
-  })
-})"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",test/e2e/app-dir/no-double-tailwind-execution/package.json,0,1,1,"@@ -1 +0,0 @@
-{}"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",test/e2e/app-dir/no-double-tailwind-execution/postcss.config.mjs,0,5,5,"@@ -1,5 +0,0 @@
-const config = {
-  plugins: ['@tailwindcss/postcss'],
-}
-
-export default config"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",turbopack/crates/turbo-tasks-backend/src/backend/operation/mod.rs,1,3,4,"@@ -601,7 +601,6 @@ pub enum AnyOperation {
     ConnectChild(connect_child::ConnectChildOperation),
     Invalidate(invalidate::InvalidateOperation),
     UpdateOutput(update_output::UpdateOutputOperation),
-    UpdateCell(update_cell::UpdateCellOperation),
     CleanupOldEdges(cleanup_old_edges::CleanupOldEdgesOperation),
     AggregationUpdate(aggregation_update::AggregationUpdateQueue),
     Nested(Vec<AnyOperation>),
@@ -613,7 +612,6 @@ impl AnyOperation {
             AnyOperation::ConnectChild(op) => op.execute(ctx),
             AnyOperation::Invalidate(op) => op.execute(ctx),
             AnyOperation::UpdateOutput(op) => op.execute(ctx),
-            AnyOperation::UpdateCell(op) => op.execute(ctx),
             AnyOperation::CleanupOldEdges(op) => op.execute(ctx),
             AnyOperation::AggregationUpdate(op) => op.execute(ctx),
             AnyOperation::Nested(ops) => {
@@ -628,7 +626,6 @@ impl AnyOperation {
 impl_operation!(ConnectChild connect_child::ConnectChildOperation);
 impl_operation!(Invalidate invalidate::InvalidateOperation);
 impl_operation!(UpdateOutput update_output::UpdateOutputOperation);
-impl_operation!(UpdateCell update_cell::UpdateCellOperation);
 impl_operation!(CleanupOldEdges cleanup_old_edges::CleanupOldEdgesOperation);
 impl_operation!(AggregationUpdate aggregation_update::AggregationUpdateQueue);
 
@@ -642,5 +639,6 @@ pub use self::{
     cleanup_old_edges::OutdatedEdge,
     connect_children::connect_children,
     prepare_new_children::prepare_new_children,
+    update_cell::UpdateCellOperation,
     update_collectible::UpdateCollectibleOperation,
 };"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",turbopack/crates/turbo-tasks-backend/src/backend/operation/update_cell.rs,11,92,103,"@@ -1,37 +1,17 @@
-use std::mem::take;
-
-use serde::{Deserialize, Serialize};
-use smallvec::SmallVec;
 use turbo_tasks::{CellId, TaskId, backend::CellContent};
 
 #[cfg(feature = ""trace_task_dirty"")]
 use crate::backend::operation::invalidate::TaskDirtyCause;
 use crate::{
     backend::{
         TaskDataCategory,
-        operation::{
-            AggregationUpdateQueue, ExecuteContext, Operation, TaskGuard,
-            invalidate::make_task_dirty_internal,
-        },
+        operation::{ExecuteContext, InvalidateOperation, TaskGuard},
         storage::{get_many, remove},
     },
-    data::{CachedDataItem, CachedDataItemKey, CellRef},
+    data::{CachedDataItem, CachedDataItemKey},
 };
 
-#[derive(Serialize, Deserialize, Clone, Default)]
-#[allow(clippy::large_enum_variant)]
-pub enum UpdateCellOperation {
-    InvalidateWhenCellDependency {
-        cell_ref: CellRef,
-        dependent_tasks: SmallVec<[TaskId; 4]>,
-        queue: AggregationUpdateQueue,
-    },
-    AggregationUpdate {
-        queue: AggregationUpdateQueue,
-    },
-    #[default]
-    Done,
-}
+pub struct UpdateCellOperation;
 
 impl UpdateCellOperation {
     pub fn run(task_id: TaskId, cell: CellId, content: CellContent, mut ctx: impl ExecuteContext) {
@@ -59,7 +39,7 @@ impl UpdateCellOperation {
                 // This is a hack for the streaming hack. Stateful tasks are never recomputed, so this forces invalidation for them in case of this hack.
                 task.has_key(&CachedDataItemKey::Stateful {}))
         {
-            let dependent_tasks = get_many!(
+            let dependent = get_many!(
                 task,
                 CellDependent { cell: dependent_cell, task }
                 if dependent_cell == cell
@@ -69,78 +49,17 @@ impl UpdateCellOperation {
             drop(task);
             drop(old_content);
 
-            UpdateCellOperation::InvalidateWhenCellDependency {
-                cell_ref: CellRef {
-                    task: task_id,
-                    cell,
+            InvalidateOperation::run(
+                dependent,
+                #[cfg(feature = ""trace_task_dirty"")]
+                TaskDirtyCause::CellChange {
+                    value_type: cell.type_id,
                 },
-                dependent_tasks,
-                queue: AggregationUpdateQueue::new(),
-            }
-            .execute(&mut ctx);
+                ctx,
+            );
         } else {
             drop(task);
             drop(old_content);
         }
     }
 }
-
-impl Operation for UpdateCellOperation {
-    fn execute(mut self, ctx: &mut impl ExecuteContext) {
-        loop {
-            ctx.operation_suspend_point(&self);
-            match self {
-                UpdateCellOperation::InvalidateWhenCellDependency {
-                    cell_ref,
-                    ref mut dependent_tasks,
-                    ref mut queue,
-                } => {
-                    if let Some(dependent_task_id) = dependent_tasks.pop() {
-                        if ctx.is_once_task(dependent_task_id) {
-                            // once tasks are never invalidated
-                            continue;
-                        }
-                        let dependent = ctx.task(dependent_task_id, TaskDataCategory::All);
-                        if dependent.has_key(&CachedDataItemKey::OutdatedCellDependency {
-                            target: cell_ref,
-                        }) {
-                            // cell dependency is outdated, so it hasn't read the cell yet
-                            // and doesn't need to be invalidated
-                            continue;
-                        }
-                        if !dependent
-                            .has_key(&CachedDataItemKey::CellDependency { target: cell_ref })
-                        {
-                            // cell dependency has been removed, so the task doesn't depend on the
-                            // cell anymore and doesn't need to be
-                            // invalidated
-                            continue;
-                        }
-                        make_task_dirty_internal(
-                            dependent,
-                            dependent_task_id,
-                            true,
-                            #[cfg(feature = ""trace_task_dirty"")]
-                            TaskDirtyCause::CellChange {
-                                value_type: cell_ref.cell.type_id,
-                            },
-                            queue,
-                            ctx,
-                        );
-                    }
-                    if dependent_tasks.is_empty() {
-                        self = UpdateCellOperation::AggregationUpdate { queue: take(queue) };
-                    }
-                }
-                UpdateCellOperation::AggregationUpdate { ref mut queue } => {
-                    if queue.process(ctx) {
-                        self = UpdateCellOperation::Done
-                    }
-                }
-                UpdateCellOperation::Done => {
-                    return;
-                }
-            }
-        }
-    }
-}"
vercel/next.js,c38833d10934d9b151016adcac0d322dbf360690,Tobias Koppers,2025-10-05T08:25:14Z,"Revert ""Turbopack: skip invalidating a task on cell/output change when the dependency is outdated"" (#84526)

Reverts vercel/next.js#84376",turbopack/crates/turbo-tasks-backend/src/backend/operation/update_output.rs,5,23,28,"@@ -12,7 +12,7 @@ use crate::{
         TaskDataCategory,
         operation::{
             AggregationUpdateQueue, ExecuteContext, Operation, TaskGuard,
-            invalidate::make_task_dirty_internal,
+            invalidate::{make_task_dirty, make_task_dirty_internal},
         },
         storage::{get, get_many},
     },
@@ -25,6 +25,7 @@ use crate::{
 #[derive(Serialize, Deserialize, Clone, Default)]
 pub enum UpdateOutputOperation {
     MakeDependentTasksDirty {
+        #[cfg(feature = ""trace_task_dirty"")]
         task_id: TaskId,
         dependent_tasks: SmallVec<[TaskId; 4]>,
         children: SmallVec<[TaskId; 4]>,
@@ -131,6 +132,7 @@ impl UpdateOutputOperation {
         }
 
         UpdateOutputOperation::MakeDependentTasksDirty {
+            #[cfg(feature = ""trace_task_dirty"")]
             task_id,
             dependent_tasks,
             children,
@@ -146,35 +148,15 @@ impl Operation for UpdateOutputOperation {
             ctx.operation_suspend_point(&self);
             match self {
                 UpdateOutputOperation::MakeDependentTasksDirty {
+                    #[cfg(feature = ""trace_task_dirty"")]
                     task_id,
                     ref mut dependent_tasks,
                     ref mut children,
                     ref mut queue,
                 } => {
                     if let Some(dependent_task_id) = dependent_tasks.pop() {
-                        if ctx.is_once_task(dependent_task_id) {
-                            // once tasks are never invalidated
-                            continue;
-                        }
-                        let dependent = ctx.task(dependent_task_id, TaskDataCategory::All);
-                        if dependent.has_key(&CachedDataItemKey::OutdatedOutputDependency {
-                            target: task_id,
-                        }) {
-                            // output dependency is outdated, so it hasn't read the output yet
-                            // and doesn't need to be invalidated
-                            continue;
-                        }
-                        if !dependent
-                            .has_key(&CachedDataItemKey::OutputDependency { target: task_id })
-                        {
-                            // output dependency has been removed, so the task doesn't depend on the
-                            // output anymore and doesn't need to be invalidated
-                            continue;
-                        }
-                        make_task_dirty_internal(
-                            dependent,
+                        make_task_dirty(
                             dependent_task_id,
-                            true,
                             #[cfg(feature = ""trace_task_dirty"")]
                             TaskDirtyCause::OutputChange { task_id },
                             queue,"
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,lerna.json,1,1,2,"@@ -16,5 +16,5 @@
       ""registry"": ""https://registry.npmjs.org/""
     }
   },
-  ""version"": ""15.6.0-canary.42""
+  ""version"": ""15.6.0-canary.43""
 }"
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/create-next-app/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""create-next-app"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/eslint-config-next/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""eslint-config-next"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""description"": ""ESLint configuration used by Next.js."",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
@@ -10,7 +10,7 @@
   },
   ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"",
   ""dependencies"": {
-    ""@next/eslint-plugin-next"": ""15.6.0-canary.42"",
+    ""@next/eslint-plugin-next"": ""15.6.0-canary.43"",
     ""@rushstack/eslint-patch"": ""^1.10.3"",
     ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"",
     ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/eslint-plugin-internal/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/eslint-plugin-internal"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""description"": ""ESLint plugin for working on Next.js."",
   ""exports"": {
     ""."": ""./src/eslint-plugin-internal.js"""
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/eslint-plugin-next/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/eslint-plugin-next"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""description"": ""ESLint plugin for Next.js."",
   ""main"": ""dist/index.js"",
   ""types"": ""dist/index.d.ts"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/font/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""@next/font"",
   ""private"": true,
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/font"""
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next-bundle-analyzer/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/bundle-analyzer"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""main"": ""index.js"",
   ""types"": ""index.d.ts"",
   ""license"": ""MIT"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next-codemod/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/codemod"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""license"": ""MIT"",
   ""repository"": {
     ""type"": ""git"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next-env/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/env"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""keywords"": [
     ""react"",
     ""next"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next-mdx/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/mdx"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""main"": ""index.js"",
   ""license"": ""MIT"",
   ""repository"": {"
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next-plugin-storybook/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/plugin-storybook"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-plugin-storybook"""
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next-polyfill-module/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-module"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+, Firefox 60+, Chrome 61+, Safari 10.1+)"",
   ""main"": ""dist/polyfill-module.js"",
   ""license"": ""MIT"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next-polyfill-nomodule/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/polyfill-nomodule"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""description"": ""A polyfill for non-dead, nomodule browsers."",
   ""main"": ""dist/polyfill-nomodule.js"",
   ""license"": ""MIT"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next-rspack/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next-rspack"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/next-rspack"""
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next-swc/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/swc"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""private"": true,
   ""files"": [
     ""native/"""
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/next/package.json,7,7,14,"@@ -1,6 +1,6 @@
 {
   ""name"": ""next"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""description"": ""The React Framework"",
   ""main"": ""./dist/server/next.js"",
   ""license"": ""MIT"",
@@ -100,7 +100,7 @@
     ]
   },
   ""dependencies"": {
-    ""@next/env"": ""15.6.0-canary.42"",
+    ""@next/env"": ""15.6.0-canary.43"",
     ""@swc/helpers"": ""0.5.15"",
     ""caniuse-lite"": ""^1.0.30001579"",
     ""postcss"": ""8.4.31"",
@@ -164,11 +164,11 @@
     ""@modelcontextprotocol/sdk"": ""1.18.1"",
     ""@mswjs/interceptors"": ""0.23.0"",
     ""@napi-rs/triples"": ""1.2.0"",
-    ""@next/font"": ""15.6.0-canary.42"",
-    ""@next/polyfill-module"": ""15.6.0-canary.42"",
-    ""@next/polyfill-nomodule"": ""15.6.0-canary.42"",
-    ""@next/react-refresh-utils"": ""15.6.0-canary.42"",
-    ""@next/swc"": ""15.6.0-canary.42"",
+    ""@next/font"": ""15.6.0-canary.43"",
+    ""@next/polyfill-module"": ""15.6.0-canary.43"",
+    ""@next/polyfill-nomodule"": ""15.6.0-canary.43"",
+    ""@next/react-refresh-utils"": ""15.6.0-canary.43"",
+    ""@next/swc"": ""15.6.0-canary.43"",
     ""@opentelemetry/api"": ""1.6.0"",
     ""@playwright/test"": ""1.51.1"",
     ""@rspack/core"": ""1.5.0"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/react-refresh-utils/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/react-refresh-utils"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""description"": ""An experimental package providing utilities for React Refresh."",
   ""repository"": {
     ""url"": ""vercel/next.js"","
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,packages/third-parties/package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""@next/third-parties"",
-  ""version"": ""15.6.0-canary.42"",
+  ""version"": ""15.6.0-canary.43"",
   ""repository"": {
     ""url"": ""vercel/next.js"",
     ""directory"": ""packages/third-parties""
@@ -26,7 +26,7 @@
     ""third-party-capital"": ""1.0.20""
   },
   ""devDependencies"": {
-    ""next"": ""15.6.0-canary.42"",
+    ""next"": ""15.6.0-canary.43"",
     ""outdent"": ""0.8.0"",
     ""prettier"": ""2.5.1"",
     ""typescript"": ""5.9.2"""
vercel/next.js,d4eb8915334320a39a376b409fb2e359a630d57c,nextjs-bot,2025-10-04T23:24:12Z,v15.6.0-canary.43,pnpm-lock.yaml,8,8,16,"@@ -899,7 +899,7 @@ importers:
   packages/eslint-config-next:
     dependencies:
       '@next/eslint-plugin-next':
-        specifier: 15.6.0-canary.42
+        specifier: 15.6.0-canary.43
         version: link:../eslint-plugin-next
       '@rushstack/eslint-patch':
         specifier: ^1.10.3
@@ -972,7 +972,7 @@ importers:
   packages/next:
     dependencies:
       '@next/env':
-        specifier: 15.6.0-canary.42
+        specifier: 15.6.0-canary.43
         version: link:../next-env
       '@swc/helpers':
         specifier: 0.5.15
@@ -1097,19 +1097,19 @@ importers:
         specifier: 1.2.0
         version: 1.2.0
       '@next/font':
-        specifier: 15.6.0-canary.42
+        specifier: 15.6.0-canary.43
         version: link:../font
       '@next/polyfill-module':
-        specifier: 15.6.0-canary.42
+        specifier: 15.6.0-canary.43
         version: link:../next-polyfill-module
       '@next/polyfill-nomodule':
-        specifier: 15.6.0-canary.42
+        specifier: 15.6.0-canary.43
         version: link:../next-polyfill-nomodule
       '@next/react-refresh-utils':
-        specifier: 15.6.0-canary.42
+        specifier: 15.6.0-canary.43
         version: link:../react-refresh-utils
       '@next/swc':
-        specifier: 15.6.0-canary.42
+        specifier: 15.6.0-canary.43
         version: link:../next-swc
       '@opentelemetry/api':
         specifier: 1.6.0
@@ -1800,7 +1800,7 @@ importers:
         version: 1.0.20
     devDependencies:
       next:
-        specifier: 15.6.0-canary.42
+        specifier: 15.6.0-canary.43
         version: link:../next
       outdent:
         specifier: 0.8.0"
vercel/next.js,b16e10133edf7a9d34425404afbc342b7b84c9e3,Zack Tanner,2025-10-04T20:16:15Z,"[segment cache]: collectSegmentData should respect experimental.staleTime config (#84520)

When we calculate the desired `staleTime` value we leverage the
`selectStaleTime` util which has some logic to fallback to the
`experimental.staleTimes` configuration if not otherwise overridden in
the prerenderStore. Without this change, the static staleTime from the
`/_tree` requests would always be the max (1 year), regardless of user
configuration.

This was caught by `prefetching.stale-times.test.ts` which I have
re-enabled & refactored in the next PR in the stack.",packages/next/src/server/app-render/app-render.tsx,2,1,3,"@@ -4833,7 +4833,8 @@ async function collectSegmentData(
     serverModuleMap: getServerModuleMap(),
   }
 
-  const staleTime = prerenderStore.stale
+  const selectStaleTime = createSelectStaleTime(renderOpts.experimental)
+  const staleTime = selectStaleTime(prerenderStore.stale)
   return await ComponentMod.collectSegmentData(
     renderOpts.experimental.clientParamParsing,
     fullPageDataBuffer,"
vercel/next.js,cc01bcd66c9fb93eb38a7bb4fe2007b7f99324d6,Zack Tanner,2025-10-04T18:19:12Z,"[ci]: de-flake client cache test (#84517)

Waits for prefetches to complete before navigating.
[x-ref](https://github.com/vercel/next.js/actions/runs/18237285313/attempts/3)",test/e2e/app-dir/app-client-cache/client-cache.experimental.test.ts,6,0,6,"@@ -75,6 +75,9 @@ describe('app dir client cache semantics (experimental staleTimes)', () => {
       it('should re-use the cache for 5 minutes (default ""static"" time)', async () => {
         const browser = await next.browser('/', browserConfigWithFixedTime)
 
+        // Wait for the prefetch to complete before clicking
+        await browser.waitForIdleNetwork()
+
         let initialRandomNumber = await browser
           .elementByCss('[href=""/0?timeout=0""]')
           .click()
@@ -265,6 +268,9 @@ describe('app dir client cache semantics (experimental staleTimes)', () => {
       it('should use the custom static override time (3 minutes)', async () => {
         const browser = await next.browser('/', browserConfigWithFixedTime)
 
+        // Wait for the prefetch to complete before clicking
+        await browser.waitForIdleNetwork()
+
         let initialRandomNumber = await browser
           .elementByCss('[href=""/0?timeout=0""]')
           .click()"
vercel/next.js,c6d03456fd455189c4678286f9fe5875c342cbff,Zack Tanner,2025-10-04T00:59:55Z,"[ci]: remove test from segment cache manifest (#84507)

These are passing independently of any fixes",test/client-segment-cache-tests-manifest.json,0,7,7,"@@ -3,21 +3,14 @@
   ""suites"": {
     ""test/e2e/app-dir/actions/app-action-node-middleware.test.ts"": {
       ""failed"": [
-        ""app-dir action handling fetch actions should handle redirects to routes that provide an invalid RSC response"",
         ""app-dir action handling should reset the form state when the action redirects to itself""
       ]
     },
     ""test/e2e/app-dir/actions/app-action.test.ts"": {
       ""failed"": [
-        ""app-dir action handling fetch actions should handle redirects to routes that provide an invalid RSC response"",
         ""app-dir action handling should reset the form state when the action redirects to itself""
       ]
     },
-    ""test/e2e/app-dir/app-client-cache/client-cache.experimental.test.ts"": {
-      ""failed"": [
-        ""app dir client cache semantics (experimental staleTimes) static: 180 prefetch={true} should use the custom static override time (3 minutes)""
-      ]
-    },
     ""test/e2e/app-dir/app-prefetch/prefetching.stale-times.test.ts"": {
       ""failed"": [
         ""app dir - prefetching (custom staleTime) should fetch again when a static page was prefetched when navigating to it after the stale time has passed"","
vercel/next.js,70a3ddd3364c9dbafa530ab3f4df91de88474be1,Vercel Release Bot,2025-10-04T00:30:10Z,"Update Rspack production test manifest (#84481)

This auto-generated PR updates the production integration test manifest used when testing Rspack.",test/rspack-build-tests-manifest.json,70,28,98,"@@ -803,6 +803,7 @@
       ""app dir - prefetching fetch priority should have an auto priority for all other fetch operations"",
       ""app dir - prefetching fetch priority should prefetch links in viewport with low priority"",
       ""app dir - prefetching fetch priority should prefetch with high priority when navigating to a page without a prefetch entry"",
+      ""app dir - prefetching fetch priority should respect multiple prefetch types to the same URL"",
       ""app dir - prefetching invalid URLs should not throw when an invalid URL is passed to Link"",
       ""app dir - prefetching invalid URLs should throw when an invalid URL is passed to router.prefetch"",
       ""app dir - prefetching prefetch cache seeding should not re-fetch the initial dynamic page if the same page is prefetched with prefetch={true}"",
@@ -820,9 +821,7 @@
       ""app dir - prefetching should only prefetch the loading state and not the component tree when prefetching at the same segment"",
       ""app dir - prefetching should show layout eagerly when prefetched with loading one level down""
     ],
-    ""failed"": [
-      ""app dir - prefetching fetch priority should respect multiple prefetch types to the same URL""
-    ],
+    ""failed"": [],
     ""pending"": [
       ""app dir - prefetching should not suppress prefetches after navigating back""
     ],
@@ -1906,7 +1905,9 @@
   },
   ""test/e2e/app-dir/cache-components/cache-components.console.test.ts"": {
     ""passed"": [
-      ""cache-components dims console calls during prospective rendering""
+      ""cache-components - Console Dimming - Logging after Abort in Client dims console calls after a prerender has aborted"",
+      ""cache-components - Console Dimming - Logging after Abort in Server dims console calls after a prerender has aborted"",
+      ""cache-components - Console Dimming - Validation dims console calls during prospective rendering""
     ],
     ""failed"": [],
     ""pending"": [],
@@ -3605,6 +3606,7 @@
   ""test/e2e/app-dir/metadata/metadata.test.ts"": {
     ""passed"": [
       ""app dir - metadata basic should apply metadata when navigating client-side"",
+      ""app dir - metadata basic should handle metadataBase as url string"",
       ""app dir - metadata basic should handle metadataBase for urls resolved as only URL type"",
       ""app dir - metadata basic should not contain query in canonical url after client navigation"",
       ""app dir - metadata basic should relative canonical url"",
@@ -6483,6 +6485,7 @@
       ""segment cache (basic tests) does not cause infinite loop with cacheLife(\""seconds\"")"",
       ""segment cache (basic tests) does not throw an error when navigating to a page with a server action"",
       ""segment cache (basic tests) navigate before any data has loaded into the prefetch cache"",
+      ""segment cache (basic tests) navigate to page with lazily-generated (not at build time) static param"",
       ""segment cache (basic tests) navigate with prefetched data"",
       ""segment cache (basic tests) prefetch interception route"",
       ""segment cache (basic tests) prefetch interception route with params"",
@@ -6491,9 +6494,7 @@
       ""segment cache (basic tests) skips static layouts during partially static navigation""
     ],
     ""failed"": [],
-    ""pending"": [
-      ""segment cache (basic tests) navigate to page with lazily-generated (not at build time) static param""
-    ],
+    ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
   },
@@ -6673,6 +6674,7 @@
       ""runtime prefetching in a private cache includes dynamic params, but not dynamic content"",
       ""runtime prefetching in a private cache includes headers, but not dynamic content"",
       ""runtime prefetching in a private cache includes root params, but not dynamic content"",
+      ""runtime prefetching in a private cache includes search params, but not dynamic content"",
       ""runtime prefetching passed to a public cache can completely prefetch a page that uses cookies and no uncached IO"",
       ""runtime prefetching passed to a public cache includes cookies, but not dynamic content"",
       ""runtime prefetching passed to a public cache includes dynamic params, but not dynamic content"",
@@ -6683,9 +6685,7 @@
       ""runtime prefetching should not cache runtime prefetch responses in the browser cache or server-side different cookies should return different prefetch results - in a private cache"",
       ""runtime prefetching should not cache runtime prefetch responses in the browser cache or server-side private caches should return new results on each request""
     ],
-    ""failed"": [
-      ""runtime prefetching in a private cache includes search params, but not dynamic content""
-    ],
+    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
@@ -7388,6 +7388,13 @@
     ""flakey"": [],
     ""runtimeError"": false
   },
+  ""test/e2e/app-dir/webpack-loader-fs/webpack-loader-fs.test.ts"": {
+    ""passed"": [""webpack-loader-fs should allow reading the input FS""],
+    ""failed"": [],
+    ""pending"": [],
+    ""flakey"": [],
+    ""runtimeError"": false
+  },
   ""test/e2e/app-dir/webpack-loader-resource-query/turbopack-loader-resource-query.test.ts"": {
     ""passed"": [""webpack-loader-resource-query should pass query to loader""],
     ""failed"": [],
@@ -7762,9 +7769,13 @@
     ""passed"": [],
     ""failed"": [],
     ""pending"": [
-      ""config-turbopack when webpack is configured and config.experimental.turbo is set does not warn"",
-      ""config-turbopack when webpack is configured and config.turbopack is set does not warn"",
-      ""config-turbopack when webpack is configured but Turbopack is not warns""
+      ""config-turbopack when turbopack is auto selected when webpack is configured and config.experimental.turbo is set does not warn"",
+      ""config-turbopack when turbopack is auto selected when webpack is configured and config.turbopack is set does not warn"",
+      ""config-turbopack when turbopack is auto selected when webpack is configured but Turbopack is not errors"",
+      ""config-turbopack when turbopack is auto selected when webpack is configured but Turbopack is not warns"",
+      ""config-turbopack when turbopack is explicitly configured when webpack is configured and config.experimental.turbo is set does not warn"",
+      ""config-turbopack when turbopack is explicitly configured when webpack is configured and config.turbopack is set does not warn"",
+      ""config-turbopack when turbopack is explicitly configured when webpack is configured but Turbopack is not does not warn""
     ],
     ""flakey"": [],
     ""runtimeError"": false
@@ -10255,6 +10266,26 @@
     ""flakey"": [],
     ""runtimeError"": false
   },
+  ""test/e2e/twoslash/index.test.ts"": {
+    ""passed"": [
+      ""twoslash should annotate twoslash types default"",
+      ""twoslash should annotate twoslash types esnext""
+    ],
+    ""failed"": [],
+    ""pending"": [],
+    ""flakey"": [],
+    ""runtimeError"": false
+  },
+  ""test/e2e/twoslash/standalone.test.ts"": {
+    ""passed"": [
+      ""output: standalone with twoslash should annotate twoslash types default"",
+      ""output: standalone with twoslash should annotate twoslash types esnext""
+    ],
+    ""failed"": [],
+    ""pending"": [],
+    ""flakey"": [],
+    ""runtimeError"": false
+  },
   ""test/e2e/type-module-interop/index.test.ts"": {
     ""passed"": [
       ""Type module interop should render client-side"",
@@ -11465,36 +11496,37 @@
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/app-api.test.ts"": {
-    ""passed"": [
+    ""passed"": [],
+    ""failed"": [
       ""create-next-app --api (Headless App) should create JavaScript project with --js flag"",
       ""create-next-app --api (Headless App) should create TypeScript project with --ts flag"",
       ""create-next-app --api (Headless App) should create project inside \""src\"" directory with --src-dir flag""
     ],
-    ""failed"": [],
     ""pending"": [
       ""create-next-app --api (Headless App) should enable turbopack dev with --turbopack flag""
     ],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/app.test.ts"": {
-    ""passed"": [
+    ""passed"": [],
+    ""failed"": [
       ""create-next-app --app (App Router) should create JavaScript project with --js flag"",
       ""create-next-app --app (App Router) should create TailwindCSS project with --tailwind flag"",
       ""create-next-app --app (App Router) should create TypeScript project with --ts flag"",
       ""create-next-app --app (App Router) should create an empty TailwindCSS project with --empty flag"",
       ""create-next-app --app (App Router) should create an empty project with --empty flag"",
       ""create-next-app --app (App Router) should create project inside \""src\"" directory with --src-dir flag""
     ],
-    ""failed"": [],
     ""pending"": [
       ""create-next-app --app (App Router) should enable turbopack dev with --turbopack flag""
     ],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/matrix.test.ts"": {
-    ""passed"": [
+    ""passed"": [],
+    ""failed"": [
       ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
       ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --tailwind"",
       ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --src-dir --react-compiler --no-tailwind"",
@@ -11544,21 +11576,20 @@
       ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --no-tailwind"",
       ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --tailwind""
     ],
-    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/pages.test.ts"": {
-    ""passed"": [
+    ""passed"": [],
+    ""failed"": [
       ""create-next-app --no-app (Pages Router) should create JavaScript project with --js flag"",
       ""create-next-app --no-app (Pages Router) should create TailwindCSS project with --tailwind flag"",
       ""create-next-app --no-app (Pages Router) should create TypeScript project with --ts flag"",
       ""create-next-app --no-app (Pages Router) should create an empty TailwindCSS project with --empty flag"",
       ""create-next-app --no-app (Pages Router) should create an empty project with --empty flag"",
       ""create-next-app --no-app (Pages Router) should create project inside \""src\"" directory with --src-dir flag""
     ],
-    ""failed"": [],
     ""pending"": [
       ""create-next-app --no-app (Pages Router) should enable turbopack dev with --turbopack flag""
     ],
@@ -20542,8 +20573,11 @@
   },
   ""test/production/escheck-output/index.test.ts"": {
     ""passed"": [],
-    ""failed"": [""ES Check .next output should emit ES2020 with default""],
-    ""pending"": [],
+    ""failed"": [],
+    ""pending"": [
+      ""ES Check .next output should downlevel JS according to default browserslist"",
+      ""ES Check .next output should downlevel JS according to manual browserslist with es2020""
+    ],
     ""flakey"": [],
     ""runtimeError"": false
   },
@@ -20934,11 +20968,10 @@
   },
   ""test/production/pnpm-support/index.test.ts"": {
     ""passed"": [
-      ""pnpm support should build with dependencies installed via pnpm""
-    ],
-    ""failed"": [
+      ""pnpm support should build with dependencies installed via pnpm"",
       ""pnpm support should execute client-side JS on each page in output: \""standalone\""""
     ],
+    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
@@ -21252,9 +21285,18 @@
     ""flakey"": [],
     ""runtimeError"": false
   },
-  ""test/production/standalone-mode/tracing/tracing.test.ts"": {
+  ""test/production/standalone-mode/tracing-static-files/tracing-static-files.test.ts"": {
+    ""passed"": [
+      ""standalone mode - tracing-static-files should trace process.cwd calls in node_modules""
+    ],
+    ""failed"": [],
+    ""pending"": [],
+    ""flakey"": [],
+    ""runtimeError"": false
+  },
+  ""test/production/standalone-mode/tracing-unparsable/tracing-unparsable.test.ts"": {
     ""passed"": [
-      ""standalone mode - tracing should trace process.cwd calls in node_modules""
+      ""standalone mode - tracing-unparsable should not error when dynamic require includes non-JS files""
     ],
     ""failed"": [],
     ""pending"": [],"
vercel/next.js,862904082fde2104020672180ec5b00c7e13054f,Vercel Release Bot,2025-10-04T00:29:56Z,"Update Rspack development test manifest (#84480)

This auto-generated PR updates the development integration test manifest used when testing Rspack.",test/rspack-dev-tests-manifest.json,127,78,205,"@@ -1182,10 +1182,10 @@
     ""runtimeError"": false
   },
   ""test/development/basic/barrel-optimization/barrel-optimization-mui.test.ts"": {
-    ""passed"": [
+    ""passed"": [],
+    ""failed"": [
       ""Skipped in Turbopack optimizePackageImports - mui should support MUI""
     ],
-    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
@@ -1931,14 +1931,13 @@
   },
   ""test/development/mcp-server/mcp-server-get-errors.test.ts"": {
     ""passed"": [
+      ""mcp-server get_errors tool should capture build errors when directly visiting error page"",
       ""mcp-server get_errors tool should capture errors from multiple browser sessions"",
       ""mcp-server get_errors tool should capture runtime errors with source-mapped stack frames"",
       ""mcp-server get_errors tool should handle no browser sessions gracefully"",
       ""mcp-server get_errors tool should return no errors for clean page""
     ],
-    ""failed"": [
-      ""mcp-server get_errors tool should capture build errors when directly visiting error page""
-    ],
+    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
@@ -1974,6 +1973,17 @@
     ""flakey"": [],
     ""runtimeError"": false
   },
+  ""test/development/mcp-server/mcp-server-get-server-action-by-id.test.ts"": {
+    ""passed"": [
+      ""mcp-server get_server_action_by_id tool should return action details via get_server_action_by_id tool"",
+      ""mcp-server get_server_action_by_id tool should return error for non-existent action ID"",
+      ""mcp-server get_server_action_by_id tool should return inline server action details""
+    ],
+    ""failed"": [],
+    ""pending"": [],
+    ""flakey"": [],
+    ""runtimeError"": false
+  },
   ""test/development/middleware-errors/index.test.ts"": {
     ""passed"": [
       ""middleware - development errors when middleware contains an unhandled rejection does not render the error"",
@@ -2023,9 +2033,9 @@
     ""runtimeError"": false
   },
   ""test/development/next-config-ts/turbo/index.test.ts"": {
-    ""passed"": [""next-config-ts - turbopack should work with Turbopack""],
+    ""passed"": [],
     ""failed"": [],
-    ""pending"": [],
+    ""pending"": [""next-config-ts - turbopack should work with Turbopack""],
     ""flakey"": [],
     ""runtimeError"": false
   },
@@ -3702,7 +3712,6 @@
       ""app dir - basic searchParams prop server component should have the correct search params on middleware rewrite"",
       ""app dir - basic searchParams prop server component should have the correct search params on rewrite"",
       ""app dir - basic server components Loading should render loading.js in browser for slow layout"",
-      ""app dir - basic server components Loading should render loading.js in browser for slow layout and page"",
       ""app dir - basic server components Loading should render loading.js in browser for slow page"",
       ""app dir - basic server components Loading should render loading.js in initial html for slow layout"",
       ""app dir - basic server components Loading should render loading.js in initial html for slow layout and page"",
@@ -3717,6 +3726,7 @@
       ""app dir - basic server components dynamic routes should only pass params that apply to the layout"",
       ""app dir - basic server components middleware should strip internal query parameters from requests to middleware for redirect"",
       ""app dir - basic server components middleware should strip internal query parameters from requests to middleware for rewrite"",
+      ""app dir - basic server components next/router should support router.back and router.forward"",
       ""app dir - basic server components should include client component layout with server component route should include it client-side"",
       ""app dir - basic server components should include client component layout with server component route should include it server-side"",
       ""app dir - basic server components should not serve .client.js as a path"",
@@ -3760,7 +3770,7 @@
     ],
     ""failed"": [
       ""app dir - basic <Link /> should navigate to pages dynamic route from pages page if it overlaps with an app page"",
-      ""app dir - basic server components next/router should support router.back and router.forward""
+      ""app dir - basic server components Loading should render loading.js in browser for slow layout and page""
     ],
     ""pending"": [
       ""app dir - basic HMR should HMR correctly when changing the component type"",
@@ -4010,7 +4020,12 @@
       ""Cache Components Errors Dev Sync Dynamic Request client params should show a collapsed redbox with a sync access error"",
       ""Cache Components Errors Dev Sync Dynamic Request client searchParams should return `undefined` for `searchParams.foo`"",
       ""Cache Components Errors Dev Sync Dynamic Request client searchParams should show a collapsed redbox with a sync access error"",
+      ""Cache Components Errors Dev Sync Dynamic Request cookies at runtime should show a redbox with a sync access error and a runtime error"",
+      ""Cache Components Errors Dev Sync Dynamic Request cookies should show a redbox with a sync access error and a runtime error"",
       ""Cache Components Errors Dev Sync Dynamic Request draftMode should return `undefined` for `draftMode().isEnabled`"",
+      ""Cache Components Errors Dev Sync Dynamic Request draftMode should show a collapsed redbox with a sync access error"",
+      ""Cache Components Errors Dev Sync Dynamic Request headers at runtime should show a redbox with a sync access error and a runtime error"",
+      ""Cache Components Errors Dev Sync Dynamic Request headers should show a redbox with a sync access error and a runtime error"",
       ""Cache Components Errors Dev Sync Dynamic Request server params should return `undefined` for `params.slug`"",
       ""Cache Components Errors Dev Sync Dynamic Request server params should show a collapsed redbox with a sync access error"",
       ""Cache Components Errors Dev Sync Dynamic Request server searchParams should return `undefined` for `searchParams.foo`"",
@@ -4036,13 +4051,7 @@
       ""Cache Components Errors Dev With `use cache: private` with `connection()` should show a redbox error"",
       ""Cache Components Errors Dev With `use cache: private` without Suspense should show a redbox error""
     ],
-    ""failed"": [
-      ""Cache Components Errors Dev Sync Dynamic Request cookies at runtime should show a redbox with a sync access error and a runtime error"",
-      ""Cache Components Errors Dev Sync Dynamic Request cookies should show a redbox with a sync access error and a runtime error"",
-      ""Cache Components Errors Dev Sync Dynamic Request draftMode should show a collapsed redbox with a sync access error"",
-      ""Cache Components Errors Dev Sync Dynamic Request headers at runtime should show a redbox with a sync access error and a runtime error"",
-      ""Cache Components Errors Dev Sync Dynamic Request headers should show a redbox with a sync access error and a runtime error""
-    ],
+    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
@@ -4088,7 +4097,9 @@
   },
   ""test/e2e/app-dir/cache-components/cache-components.console.test.ts"": {
     ""passed"": [
-      ""cache-components dims console calls during prospective rendering""
+      ""cache-components - Console Dimming - Logging after Abort in Client dims console calls after a prerender has aborted"",
+      ""cache-components - Console Dimming - Logging after Abort in Server dims console calls after a prerender has aborted"",
+      ""cache-components - Console Dimming - Validation dims console calls during prospective rendering""
     ],
     ""failed"": [],
     ""pending"": [],
@@ -5818,6 +5829,7 @@
   ""test/e2e/app-dir/metadata/metadata.test.ts"": {
     ""passed"": [
       ""app dir - metadata basic should apply metadata when navigating client-side"",
+      ""app dir - metadata basic should handle metadataBase as url string"",
       ""app dir - metadata basic should handle metadataBase for urls resolved as only URL type"",
       ""app dir - metadata basic should not contain query in canonical url after client navigation"",
       ""app dir - metadata basic should relative canonical url"",
@@ -6864,6 +6876,15 @@
     ""flakey"": [],
     ""runtimeError"": false
   },
+  ""test/e2e/app-dir/no-double-tailwind-execution/no-double-tailwind-execution.test.ts"": {
+    ""passed"": [
+      ""no-double-tailwind-execution should run tailwind only once initially and per change""
+    ],
+    ""failed"": [],
+    ""pending"": [],
+    ""flakey"": [],
+    ""runtimeError"": false
+  },
   ""test/e2e/app-dir/no-duplicate-headers-middleware/no-duplicate-headers-middleware.test.ts"": {
     ""passed"": [
       ""no-duplicate-headers-next-config should prioritise headers in middleware for static assets""
@@ -9060,6 +9081,8 @@
       ""use-cache-search-params when searchParams are unused inside of \""use cache\"" should not show an error""
     ],
     ""failed"": [
+      ""use-cache-search-params should show an error when searchParams are used inside of a cached generateMetadata"",
+      ""use-cache-search-params should show an error when searchParams are used inside of a cached generateViewport"",
       ""use-cache-search-params when searchParams are used inside of \""use cache\"" should show an error""
     ],
     ""pending"": [],
@@ -9215,6 +9238,13 @@
     ""flakey"": [],
     ""runtimeError"": false
   },
+  ""test/e2e/app-dir/webpack-loader-fs/webpack-loader-fs.test.ts"": {
+    ""passed"": [""webpack-loader-fs should allow reading the input FS""],
+    ""failed"": [],
+    ""pending"": [],
+    ""flakey"": [],
+    ""runtimeError"": false
+  },
   ""test/e2e/app-dir/webpack-loader-resource-query/turbopack-loader-resource-query.test.ts"": {
     ""passed"": [""webpack-loader-resource-query should pass query to loader""],
     ""failed"": [],
@@ -9591,9 +9621,13 @@
     ""passed"": [],
     ""failed"": [],
     ""pending"": [
-      ""config-turbopack when webpack is configured and config.experimental.turbo is set does not warn"",
-      ""config-turbopack when webpack is configured and config.turbopack is set does not warn"",
-      ""config-turbopack when webpack is configured but Turbopack is not warns""
+      ""config-turbopack when turbopack is auto selected when webpack is configured and config.experimental.turbo is set does not warn"",
+      ""config-turbopack when turbopack is auto selected when webpack is configured and config.turbopack is set does not warn"",
+      ""config-turbopack when turbopack is auto selected when webpack is configured but Turbopack is not errors"",
+      ""config-turbopack when turbopack is auto selected when webpack is configured but Turbopack is not warns"",
+      ""config-turbopack when turbopack is explicitly configured when webpack is configured and config.experimental.turbo is set does not warn"",
+      ""config-turbopack when turbopack is explicitly configured when webpack is configured and config.turbopack is set does not warn"",
+      ""config-turbopack when turbopack is explicitly configured when webpack is configured but Turbopack is not does not warn""
     ],
     ""flakey"": [],
     ""runtimeError"": false
@@ -12054,6 +12088,23 @@
     ""flakey"": [],
     ""runtimeError"": false
   },
+  ""test/e2e/twoslash/index.test.ts"": {
+    ""passed"": [
+      ""twoslash should annotate twoslash types default"",
+      ""twoslash should annotate twoslash types esnext""
+    ],
+    ""failed"": [],
+    ""pending"": [],
+    ""flakey"": [],
+    ""runtimeError"": false
+  },
+  ""test/e2e/twoslash/standalone.test.ts"": {
+    ""passed"": [""should skip for non-next start""],
+    ""failed"": [],
+    ""pending"": [],
+    ""flakey"": [],
+    ""runtimeError"": false
+  },
   ""test/e2e/type-module-interop/index.test.ts"": {
     ""passed"": [
       ""Type module interop should render client-side"",
@@ -13263,100 +13314,100 @@
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/app-api.test.ts"": {
-    ""passed"": [
+    ""passed"": [],
+    ""failed"": [
       ""create-next-app --api (Headless App) should create JavaScript project with --js flag"",
       ""create-next-app --api (Headless App) should create TypeScript project with --ts flag"",
       ""create-next-app --api (Headless App) should create project inside \""src\"" directory with --src-dir flag""
     ],
-    ""failed"": [],
     ""pending"": [
       ""create-next-app --api (Headless App) should enable turbopack dev with --turbopack flag""
     ],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/app.test.ts"": {
-    ""passed"": [
+    ""passed"": [],
+    ""failed"": [
       ""create-next-app --app (App Router) should create JavaScript project with --js flag"",
       ""create-next-app --app (App Router) should create TailwindCSS project with --tailwind flag"",
       ""create-next-app --app (App Router) should create TypeScript project with --ts flag"",
       ""create-next-app --app (App Router) should create an empty TailwindCSS project with --empty flag"",
       ""create-next-app --app (App Router) should create an empty project with --empty flag"",
       ""create-next-app --app (App Router) should create project inside \""src\"" directory with --src-dir flag""
     ],
-    ""failed"": [],
     ""pending"": [
       ""create-next-app --app (App Router) should enable turbopack dev with --turbopack flag""
     ],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/matrix.test.ts"": {
-    ""passed"": [
-      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@acme/* --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@acme/* --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@acme/* --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@acme/* --eslint --src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --no-import-alias --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --no-import-alias --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --no-import-alias --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --js --no-import-alias --eslint --src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@/* --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@/* --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@/* --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@/* --eslint --src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@acme/* --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@acme/* --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@acme/* --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@acme/* --eslint --src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --no-import-alias --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --no-import-alias --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --no-import-alias --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - app --app --no-turbopack --ts --no-import-alias --eslint --src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@/* --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@/* --eslint --src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@acme/* --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@acme/* --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@acme/* --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@acme/* --eslint --src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --no-import-alias --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --no-import-alias --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --no-import-alias --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --js --no-import-alias --eslint --src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@/* --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@/* --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@/* --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@/* --eslint --src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@acme/* --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@acme/* --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@acme/* --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@acme/* --eslint --src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --no-src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --no-src-dir --tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --no-tailwind"",
-      ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --tailwind""
+    ""passed"": [],
+    ""failed"": [
+      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@acme/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@acme/* --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@acme/* --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --import-alias=@acme/* --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --no-import-alias --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --no-import-alias --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --no-import-alias --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --js --no-import-alias --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@/* --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@/* --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@/* --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@acme/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@acme/* --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@acme/* --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --import-alias=@acme/* --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --no-import-alias --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --no-import-alias --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - app --app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@/* --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@/* --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@acme/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@acme/* --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@acme/* --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --import-alias=@acme/* --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --no-import-alias --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --no-import-alias --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --no-import-alias --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --js --no-import-alias --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@/* --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@/* --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@/* --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@acme/* --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@acme/* --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@acme/* --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --import-alias=@acme/* --eslint --src-dir --react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --no-src-dir --no-react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --no-src-dir --no-react-compiler --tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --no-tailwind"",
+      ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --tailwind""
     ],
-    ""failed"": [],
     ""pending"": [],
     ""flakey"": [],
     ""runtimeError"": false
   },
   ""test/integration/create-next-app/templates/pages.test.ts"": {
-    ""passed"": [
+    ""passed"": [],
+    ""failed"": [
       ""create-next-app --no-app (Pages Router) should create JavaScript project with --js flag"",
       ""create-next-app --no-app (Pages Router) should create TailwindCSS project with --tailwind flag"",
       ""create-next-app --no-app (Pages Router) should create TypeScript project with --ts flag"",
       ""create-next-app --no-app (Pages Router) should create an empty TailwindCSS project with --empty flag"",
       ""create-next-app --no-app (Pages Router) should create an empty project with --empty flag"",
       ""create-next-app --no-app (Pages Router) should create project inside \""src\"" directory with --src-dir flag""
     ],
-    ""failed"": [],
     ""pending"": [
       ""create-next-app --no-app (Pages Router) should enable turbopack dev with --turbopack flag""
     ],
@@ -20000,8 +20051,6 @@
     ""failed"": [],
     ""pending"": [
       ""Page Config production mode builds without error when export const config is used outside page"",
-      ""Page Config production mode shows error when page config has invalid properties"",
-      ""Page Config production mode shows error when page config has invalid property value"",
       ""Page Config production mode shows error when page config has spread properties"",
       ""Page Config production mode shows error when page config is export from"",
       ""Page Config production mode shows error when page config is imported and exported"","
facebook/react,3025aa39649ef5106c34cc7896a63d63b2edee91,Sebastian Markbåge,2025-10-07T13:59:34Z,"[Flight] Don't serialize toJSON in Debug path and omit wide arrays (#34759)

There's a couple of issues with serializing Buffer in the debug renders.

For one, the Node.js Buffer has a `toJSON` on it which turns the binary
data into a JSON array which is very inefficient to serialize compared
to the real buffer. For debug info we never really want to resolve these
and unlike the regular render we can't error. So this uses the trick
where we read the original value. It's still unfortunate that this
intermediate gets created at all but at least now we're not serializing
it.

Second, we have a limit on depth of objects but we didn't have a limit
on width like large arrays or typed arrays. This omits large arrays from
the payload when possible and make them deferred when there's a debug
channel.",packages/react-server/src/ReactFlightServer.js,74,15,89,"@@ -849,6 +849,49 @@ export function resolveRequest(): null | Request {
   return null;
 }
 
+function isTypedArray(value: any): boolean {
+  if (value instanceof ArrayBuffer) {
+    return true;
+  }
+  if (value instanceof Int8Array) {
+    return true;
+  }
+  if (value instanceof Uint8Array) {
+    return true;
+  }
+  if (value instanceof Uint8ClampedArray) {
+    return true;
+  }
+  if (value instanceof Int16Array) {
+    return true;
+  }
+  if (value instanceof Uint16Array) {
+    return true;
+  }
+  if (value instanceof Int32Array) {
+    return true;
+  }
+  if (value instanceof Uint32Array) {
+    return true;
+  }
+  if (value instanceof Float32Array) {
+    return true;
+  }
+  if (value instanceof Float64Array) {
+    return true;
+  }
+  if (value instanceof BigInt64Array) {
+    return true;
+  }
+  if (value instanceof BigUint64Array) {
+    return true;
+  }
+  if (value instanceof DataView) {
+    return true;
+  }
+  return false;
+}
+
 function serializeDebugThenable(
   request: Request,
   counter: {objectLimit: number},
@@ -906,6 +949,17 @@ function serializeDebugThenable(
         enqueueFlush(request);
         return;
       }
+      if (
+        (isArray(value) && value.length > 200) ||
+        (isTypedArray(value) && value.byteLength > 1000)
+      ) {
+        // If this should be deferred, but we don't have a debug channel installed
+        // it would get omitted. We can't omit outlined models but we can avoid
+        // resolving the Promise at all by halting it.
+        emitDebugHaltChunk(request, id);
+        enqueueFlush(request);
+        return;
+      }
       emitOutlinedDebugModelChunk(request, id, counter, value);
       enqueueFlush(request);
     },
@@ -3066,6 +3120,10 @@ function serializeDebugTypedArray(
   tag: string,
   typedArray: $ArrayBufferView,
 ): string {
+  if (typedArray.byteLength > 1000 && !doNotLimit.has(typedArray)) {
+    // Defer large typed arrays.
+    return serializeDeferredObject(request, typedArray);
+  }
   request.pendingDebugChunks++;
   const bufferId = request.nextChunkId++;
   emitTypedArrayChunk(request, bufferId, tag, typedArray, true);
@@ -4820,9 +4878,17 @@ function renderDebugModel(
     }
 
     if (isArray(value)) {
+      if (value.length > 200 && !doNotLimit.has(value)) {
+        // Defer large arrays. They're heavy to serialize.
+        // TODO: Consider doing the same for objects with many properties too.
+        return serializeDeferredObject(request, value);
+      }
       return value;
     }
 
+    if (value instanceof Date) {
+      return serializeDate(value);
+    }
     if (value instanceof Map) {
       return serializeDebugMap(request, counter, value);
     }
@@ -4930,15 +4996,6 @@ function renderDebugModel(
   }
 
   if (typeof value === 'string') {
-    if (value[value.length - 1] === 'Z') {
-      // Possibly a Date, whose toJSON automatically calls toISOString
-      // Make sure that `parent[parentPropertyName]` wasn't JSONified before `value` was passed to us
-      // $FlowFixMe[incompatible-use]
-      const originalValue = parent[parentPropertyName];
-      if (originalValue instanceof Date) {
-        return serializeDateFromDateJSON(value);
-      }
-    }
     if (value.length >= 1024) {
       // Large strings are counted towards the object limit.
       if (counter.objectLimit <= 0) {
@@ -5036,10 +5093,6 @@ function renderDebugModel(
     return serializeBigInt(value);
   }
 
-  if (value instanceof Date) {
-    return serializeDate(value);
-  }
-
   return 'unknown type ' + typeof value;
 }
 
@@ -5058,12 +5111,15 @@ function serializeDebugModel(
     value: ReactClientValue,
   ): ReactJSONValue {
     try {
+      // By-pass toJSON and use the original value.
+      // $FlowFixMe[incompatible-use]
+      const originalValue = this[parentPropertyName];
       return renderDebugModel(
         request,
         counter,
         this,
         parentPropertyName,
-        value,
+        originalValue,
       );
     } catch (x) {
       return (
@@ -5114,12 +5170,15 @@ function emitOutlinedDebugModelChunk(
     value: ReactClientValue,
   ): ReactJSONValue {
     try {
+      // By-pass toJSON and use the original value.
+      // $FlowFixMe[incompatible-use]
+      const originalValue = this[parentPropertyName];
       return renderDebugModel(
         request,
         counter,
         this,
         parentPropertyName,
-        value,
+        originalValue,
       );
     } catch (x) {
       return ("
facebook/react,3025aa39649ef5106c34cc7896a63d63b2edee91,Sebastian Markbåge,2025-10-07T13:59:34Z,"[Flight] Don't serialize toJSON in Debug path and omit wide arrays (#34759)

There's a couple of issues with serializing Buffer in the debug renders.

For one, the Node.js Buffer has a `toJSON` on it which turns the binary
data into a JSON array which is very inefficient to serialize compared
to the real buffer. For debug info we never really want to resolve these
and unlike the regular render we can't error. So this uses the trick
where we read the original value. It's still unfortunate that this
intermediate gets created at all but at least now we're not serializing
it.

Second, we have a limit on depth of objects but we didn't have a limit
on width like large arrays or typed arrays. This omits large arrays from
the payload when possible and make them deferred when there's a debug
channel.",packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js,424,276,700,"@@ -5,6 +5,9 @@
 
 import {patchSetImmediate} from '../../../../scripts/jest/patchSetImmediate';
 
+import fs from 'fs/promises';
+import path from 'path';
+
 let React;
 let ReactServer;
 let cache;
@@ -156,9 +159,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                125,
+                128,
                 109,
-                105,
+                108,
                 50,
               ],
             ],
@@ -180,9 +183,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    125,
+                    128,
                     109,
-                    105,
+                    108,
                     50,
                   ],
                 ],
@@ -191,25 +194,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  107,
+                  110,
                   13,
-                  106,
+                  109,
                   5,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  114,
+                  117,
                   26,
-                  113,
+                  116,
                   5,
                 ],
               ],
@@ -228,9 +231,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  125,
+                  128,
                   109,
-                  105,
+                  108,
                   50,
                 ],
               ],
@@ -239,17 +242,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""getData"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                107,
+                110,
                 13,
-                106,
+                109,
                 5,
               ],
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                114,
+                117,
                 26,
-                113,
+                116,
                 5,
               ],
             ],
@@ -274,9 +277,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    125,
+                    128,
                     109,
-                    105,
+                    108,
                     50,
                   ],
                 ],
@@ -285,25 +288,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  108,
+                  111,
                   21,
-                  106,
+                  109,
                   5,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  114,
+                  117,
                   20,
-                  113,
+                  116,
                   5,
                 ],
               ],
@@ -322,9 +325,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  125,
+                  128,
                   109,
-                  105,
+                  108,
                   50,
                 ],
               ],
@@ -333,17 +336,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""getData"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                109,
+                112,
                 21,
-                106,
+                109,
                 5,
               ],
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                114,
+                117,
                 20,
-                113,
+                116,
                 5,
               ],
             ],
@@ -363,9 +366,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                116,
+                119,
                 60,
-                113,
+                116,
                 5,
               ],
             ],
@@ -387,9 +390,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    125,
+                    128,
                     109,
-                    105,
+                    108,
                     50,
                   ],
                 ],
@@ -398,17 +401,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  108,
+                  111,
                   21,
-                  106,
+                  109,
                   5,
                 ],
               ],
@@ -427,9 +430,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  116,
+                  119,
                   60,
-                  113,
+                  116,
                   5,
                 ],
               ],
@@ -438,9 +441,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""InnerComponent"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                122,
+                125,
                 35,
-                119,
+                122,
                 5,
               ],
             ],
@@ -621,9 +624,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                585,
+                588,
                 40,
-                566,
+                569,
                 49,
               ],
               [
@@ -653,9 +656,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    585,
+                    588,
                     40,
-                    566,
+                    569,
                     49,
                   ],
                   [
@@ -672,25 +675,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  568,
+                  571,
                   13,
-                  567,
+                  570,
                   5,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  573,
+                  576,
                   36,
-                  572,
+                  575,
                   5,
                 ],
               ],
@@ -709,9 +712,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  585,
+                  588,
                   40,
-                  566,
+                  569,
                   49,
                 ],
                 [
@@ -728,17 +731,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""getData"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                568,
+                571,
                 13,
-                567,
+                570,
                 5,
               ],
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                573,
+                576,
                 36,
-                572,
+                575,
                 5,
               ],
             ],
@@ -758,9 +761,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                575,
+                578,
                 60,
-                572,
+                575,
                 5,
               ],
             ],
@@ -779,9 +782,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    585,
+                    588,
                     40,
-                    566,
+                    569,
                     49,
                   ],
                   [
@@ -798,25 +801,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  568,
+                  571,
                   13,
-                  567,
+                  570,
                   5,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  574,
+                  577,
                   22,
-                  572,
+                  575,
                   5,
                 ],
               ],
@@ -835,9 +838,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  575,
+                  578,
                   60,
-                  572,
+                  575,
                   5,
                 ],
               ],
@@ -846,9 +849,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""InnerComponent"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                581,
+                584,
                 40,
-                578,
+                581,
                 5,
               ],
             ],
@@ -923,9 +926,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                892,
+                895,
                 109,
-                879,
+                882,
                 80,
               ],
             ],
@@ -944,9 +947,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    892,
+                    895,
                     109,
-                    879,
+                    882,
                     80,
                   ],
                 ],
@@ -963,9 +966,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  892,
+                  895,
                   109,
-                  879,
+                  882,
                   80,
                 ],
               ],
@@ -1037,9 +1040,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1006,
+                1009,
                 109,
-                997,
+                1000,
                 94,
               ],
             ],
@@ -1122,9 +1125,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1091,
+                1094,
                 109,
-                1067,
+                1070,
                 50,
               ],
             ],
@@ -1218,9 +1221,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1187,
+                1190,
                 109,
-                1170,
+                1173,
                 63,
               ],
             ],
@@ -1237,17 +1240,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""fetchThirdParty"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                90,
+                93,
                 40,
-                88,
+                91,
                 3,
               ],
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1183,
+                1186,
                 24,
-                1182,
+                1185,
                 5,
               ],
             ],
@@ -1269,17 +1272,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""fetchThirdParty"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    90,
+                    93,
                     40,
-                    88,
+                    91,
                     3,
                   ],
                   [
                     ""Component"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    1183,
+                    1186,
                     24,
-                    1182,
+                    1185,
                     5,
                   ],
                 ],
@@ -1288,25 +1291,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1172,
+                  1175,
                   13,
-                  1171,
+                  1174,
                   5,
                 ],
                 [
                   ""ThirdPartyComponent"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1178,
+                  1181,
                   24,
-                  1177,
+                  1180,
                   5,
                 ],
               ],
@@ -1325,17 +1328,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""fetchThirdParty"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  90,
+                  93,
                   40,
-                  88,
+                  91,
                   3,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1183,
+                  1186,
                   24,
-                  1182,
+                  1185,
                   5,
                 ],
               ],
@@ -1344,17 +1347,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""getData"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1172,
+                1175,
                 13,
-                1171,
+                1174,
                 5,
               ],
               [
                 ""ThirdPartyComponent"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1178,
+                1181,
                 24,
-                1177,
+                1180,
                 5,
               ],
             ],
@@ -1379,17 +1382,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""fetchThirdParty"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    90,
+                    93,
                     40,
-                    88,
+                    91,
                     3,
                   ],
                   [
                     ""Component"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    1183,
+                    1186,
                     24,
-                    1182,
+                    1185,
                     5,
                   ],
                 ],
@@ -1398,25 +1401,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1173,
+                  1176,
                   13,
-                  1171,
+                  1174,
                   5,
                 ],
                 [
                   ""ThirdPartyComponent"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1178,
+                  1181,
                   18,
-                  1177,
+                  1180,
                   5,
                 ],
               ],
@@ -1435,17 +1438,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""fetchThirdParty"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  90,
+                  93,
                   40,
-                  88,
+                  91,
                   3,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1183,
+                  1186,
                   24,
-                  1182,
+                  1185,
                   5,
                 ],
               ],
@@ -1454,17 +1457,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""getData"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1173,
+                1176,
                 13,
-                1171,
+                1174,
                 5,
               ],
               [
                 ""ThirdPartyComponent"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1178,
+                1181,
                 18,
-                1177,
+                1180,
                 5,
               ],
             ],
@@ -1562,9 +1565,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1526,
+                1529,
                 40,
-                1509,
+                1512,
                 62,
               ],
               [
@@ -1594,9 +1597,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    1526,
+                    1529,
                     40,
-                    1509,
+                    1512,
                     62,
                   ],
                   [
@@ -1613,25 +1616,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1511,
+                  1514,
                   13,
-                  1510,
+                  1513,
                   25,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1521,
+                  1524,
                   13,
-                  1520,
+                  1523,
                   5,
                 ],
               ],
@@ -1650,9 +1653,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1526,
+                  1529,
                   40,
-                  1509,
+                  1512,
                   62,
                 ],
                 [
@@ -1669,17 +1672,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""getData"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1511,
+                1514,
                 13,
-                1510,
+                1513,
                 25,
               ],
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1521,
+                1524,
                 13,
-                1520,
+                1523,
                 5,
               ],
             ],
@@ -1699,9 +1702,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1522,
+                1525,
                 60,
-                1520,
+                1523,
                 5,
               ],
             ],
@@ -1723,9 +1726,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    1526,
+                    1529,
                     40,
-                    1509,
+                    1512,
                     62,
                   ],
                   [
@@ -1742,25 +1745,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1511,
+                  1514,
                   13,
-                  1510,
+                  1513,
                   25,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1521,
+                  1524,
                   13,
-                  1520,
+                  1523,
                   5,
                 ],
               ],
@@ -1779,9 +1782,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1522,
+                  1525,
                   60,
-                  1520,
+                  1523,
                   5,
                 ],
               ],
@@ -1790,9 +1793,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Child"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1516,
+                1519,
                 28,
-                1515,
+                1518,
                 5,
               ],
             ],
@@ -1875,9 +1878,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1839,
+                1842,
                 40,
-                1823,
+                1826,
                 57,
               ],
               [
@@ -1907,9 +1910,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    1839,
+                    1842,
                     40,
-                    1823,
+                    1826,
                     57,
                   ],
                   [
@@ -1926,25 +1929,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1825,
+                  1828,
                   13,
-                  1824,
+                  1827,
                   25,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1834,
+                  1837,
                   23,
-                  1833,
+                  1836,
                   5,
                 ],
               ],
@@ -1963,9 +1966,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1839,
+                  1842,
                   40,
-                  1823,
+                  1826,
                   57,
                 ],
                 [
@@ -1982,17 +1985,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""getData"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1825,
+                1828,
                 13,
-                1824,
+                1827,
                 25,
               ],
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1834,
+                1837,
                 23,
-                1833,
+                1836,
                 5,
               ],
             ],
@@ -2012,9 +2015,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1835,
+                1838,
                 60,
-                1833,
+                1836,
                 5,
               ],
             ],
@@ -2033,9 +2036,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    1839,
+                    1842,
                     40,
-                    1823,
+                    1826,
                     57,
                   ],
                   [
@@ -2052,25 +2055,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1825,
+                  1828,
                   13,
-                  1824,
+                  1827,
                   25,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  1834,
+                  1837,
                   23,
-                  1833,
+                  1836,
                   5,
                 ],
               ],
@@ -2084,9 +2087,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                1835,
+                1838,
                 60,
-                1833,
+                1836,
                 5,
               ],
             ],
@@ -2171,9 +2174,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2135,
+                2138,
                 40,
-                2117,
+                2120,
                 80,
               ],
               [
@@ -2203,9 +2206,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    2135,
+                    2138,
                     40,
-                    2117,
+                    2120,
                     80,
                   ],
                   [
@@ -2222,25 +2225,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""delayTrice"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2125,
+                  2128,
                   13,
-                  2123,
+                  2126,
                   5,
                 ],
                 [
                   ""Bar"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2130,
+                  2133,
                   13,
-                  2129,
+                  2132,
                   5,
                 ],
               ],
@@ -2259,9 +2262,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2135,
+                  2138,
                   40,
-                  2117,
+                  2120,
                   80,
                 ],
                 [
@@ -2278,17 +2281,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""delayTrice"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2125,
+                2128,
                 13,
-                2123,
+                2126,
                 5,
               ],
               [
                 ""Bar"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2130,
+                2133,
                 13,
-                2129,
+                2132,
                 5,
               ],
             ],
@@ -2310,9 +2313,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    2135,
+                    2138,
                     40,
-                    2117,
+                    2120,
                     80,
                   ],
                   [
@@ -2329,33 +2332,33 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""delayTwice"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2119,
+                  2122,
                   13,
-                  2118,
+                  2121,
                   5,
                 ],
                 [
                   ""delayTrice"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2124,
+                  2127,
                   15,
-                  2123,
+                  2126,
                   5,
                 ],
                 [
                   ""Bar"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2130,
+                  2133,
                   13,
-                  2129,
+                  2132,
                   5,
                 ],
               ],
@@ -2374,9 +2377,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2135,
+                  2138,
                   40,
-                  2117,
+                  2120,
                   80,
                 ],
                 [
@@ -2393,25 +2396,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""delayTwice"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2119,
+                2122,
                 13,
-                2118,
+                2121,
                 5,
               ],
               [
                 ""delayTrice"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2124,
+                2127,
                 15,
-                2123,
+                2126,
                 5,
               ],
               [
                 ""Bar"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2130,
+                2133,
                 13,
-                2129,
+                2132,
                 5,
               ],
             ],
@@ -2433,9 +2436,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    2135,
+                    2138,
                     40,
-                    2117,
+                    2120,
                     80,
                   ],
                   [
@@ -2452,17 +2455,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""delayTwice"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2120,
+                  2123,
                   13,
-                  2118,
+                  2121,
                   5,
                 ],
               ],
@@ -2481,9 +2484,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2135,
+                  2138,
                   40,
-                  2117,
+                  2120,
                   80,
                 ],
                 [
@@ -2500,9 +2503,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""delayTwice"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2120,
+                2123,
                 13,
-                2118,
+                2121,
                 5,
               ],
             ],
@@ -2575,9 +2578,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2544,
+                2547,
                 109,
-                2533,
+                2536,
                 58,
               ],
             ],
@@ -2599,9 +2602,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    2544,
+                    2547,
                     109,
-                    2533,
+                    2536,
                     58,
                   ],
                 ],
@@ -2610,25 +2613,25 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""getData"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2535,
+                  2538,
                   14,
-                  2534,
+                  2537,
                   5,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2541,
+                  2544,
                   20,
-                  2540,
+                  2543,
                   5,
                 ],
               ],
@@ -2647,9 +2650,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2544,
+                  2547,
                   109,
-                  2533,
+                  2536,
                   58,
                 ],
               ],
@@ -2658,17 +2661,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""getData"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2535,
+                2538,
                 23,
-                2534,
+                2537,
                 5,
               ],
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2541,
+                2544,
                 20,
-                2540,
+                2543,
                 5,
               ],
             ],
@@ -2747,9 +2750,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2711,
+                2714,
                 40,
-                2699,
+                2702,
                 56,
               ],
               [
@@ -2779,9 +2782,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    2711,
+                    2714,
                     40,
-                    2699,
+                    2702,
                     56,
                   ],
                   [
@@ -2798,17 +2801,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""delay"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  83,
+                  86,
                   12,
-                  82,
+                  85,
                   3,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2707,
+                  2710,
                   20,
-                  2706,
+                  2709,
                   5,
                 ],
               ],
@@ -2827,9 +2830,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2711,
+                  2714,
                   40,
-                  2699,
+                  2702,
                   56,
                 ],
                 [
@@ -2846,9 +2849,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2707,
+                2710,
                 20,
-                2706,
+                2709,
                 5,
               ],
             ],
@@ -2941,9 +2944,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Object.<anonymous>"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2900,
+                2903,
                 40,
-                2879,
+                2882,
                 42,
               ],
               [
@@ -2973,9 +2976,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    2900,
+                    2903,
                     40,
-                    2879,
+                    2882,
                     42,
                   ],
                   [
@@ -2992,17 +2995,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   """",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2886,
+                  2889,
                   15,
-                  2885,
+                  2888,
                   15,
                 ],
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2895,
+                  2898,
                   19,
-                  2894,
+                  2897,
                   5,
                 ],
               ],
@@ -3021,9 +3024,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2900,
+                  2903,
                   40,
-                  2879,
+                  2882,
                   42,
                 ],
                 [
@@ -3040,17 +3043,17 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 """",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2886,
+                2889,
                 15,
-                2885,
+                2888,
                 15,
               ],
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2895,
+                2898,
                 19,
-                2894,
+                2897,
                 5,
               ],
             ],
@@ -3072,9 +3075,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                   [
                     ""Object.<anonymous>"",
                     ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                    2900,
+                    2903,
                     40,
-                    2879,
+                    2882,
                     42,
                   ],
                   [
@@ -3091,9 +3094,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Component"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2895,
+                  2898,
                   25,
-                  2894,
+                  2897,
                   5,
                 ],
               ],
@@ -3112,9 +3115,9 @@ describe('ReactFlightAsyncDebugInfo', () => {
                 [
                   ""Object.<anonymous>"",
                   ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                  2900,
+                  2903,
                   40,
-                  2879,
+                  2882,
                   42,
                 ],
                 [
@@ -3131,9 +3134,154 @@ describe('ReactFlightAsyncDebugInfo', () => {
               [
                 ""Component"",
                 ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
-                2895,
+                2898,
                 25,
-                2894,
+                2897,
+                5,
+              ],
+            ],
+          },
+          {
+            ""time"": 0,
+          },
+          {
+            ""time"": 0,
+          },
+          {
+            ""awaited"": {
+              ""byteSize"": 0,
+              ""end"": 0,
+              ""name"": ""RSC stream"",
+              ""owner"": null,
+              ""start"": 0,
+              ""value"": {
+                ""value"": ""stream"",
+              },
+            },
+          },
+        ]
+      `);
+    }
+  });
+
+  it('can track async file reads', async () => {
+    const filename = path.join(__dirname, 'test-file.txt');
+    async function Component() {
+      const buffer = await fs
+        .readFile(filename) // This loads a Buffer.
+        // TODO: For some reason, without this we're extracting the wrong promise.
+        .then(v => v);
+      const text = buffer.toString('utf8');
+      return text.slice(0, 26);
+    }
+
+    const stream = ReactServerDOMServer.renderToPipeableStream(
+      <Component />,
+      {},
+    );
+
+    const readable = new Stream.PassThrough(streamOptions);
+
+    const result = ReactServerDOMClient.createFromNodeStream(readable, {
+      moduleMap: {},
+      moduleLoading: {},
+    });
+    stream.pipe(readable);
+
+    expect(await result).toBe('Lorem ipsum dolor sit amet');
+
+    await finishLoadingStream(readable);
+    if (
+      __DEV__ &&
+      gate(
+        flags =>
+          flags.enableComponentPerformanceTrack && flags.enableAsyncDebugInfo,
+      )
+    ) {
+      expect(getDebugInfo(result)).toMatchInlineSnapshot(`
+        [
+          {
+            ""time"": 0,
+          },
+          {
+            ""env"": ""Server"",
+            ""key"": null,
+            ""name"": ""Component"",
+            ""props"": {},
+            ""stack"": [
+              [
+                ""Object.<anonymous>"",
+                ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
+                3179,
+                40,
+                3167,
+                36,
+              ],
+            ],
+          },
+          {
+            ""time"": 0,
+          },
+          {
+            ""awaited"": {
+              ""end"": 0,
+              ""env"": ""Server"",
+              ""name"": ""Object.readFile"",
+              ""owner"": {
+                ""env"": ""Server"",
+                ""key"": null,
+                ""name"": ""Component"",
+                ""props"": {},
+                ""stack"": [
+                  [
+                    ""Object.<anonymous>"",
+                    ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
+                    3179,
+                    40,
+                    3167,
+                    36,
+                  ],
+                ],
+              },
+              ""stack"": [
+                [
+                  ""Component"",
+                  ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
+                  3171,
+                  7,
+                  3169,
+                  5,
+                ],
+              ],
+              ""start"": 0,
+              ""value"": {
+                ""status"": ""halted"",
+              },
+            },
+            ""env"": ""Server"",
+            ""owner"": {
+              ""env"": ""Server"",
+              ""key"": null,
+              ""name"": ""Component"",
+              ""props"": {},
+              ""stack"": [
+                [
+                  ""Object.<anonymous>"",
+                  ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
+                  3179,
+                  40,
+                  3167,
+                  36,
+                ],
+              ],
+            },
+            ""stack"": [
+              [
+                ""Component"",
+                ""/packages/react-server/src/__tests__/ReactFlightAsyncDebugInfo-test.js"",
+                3173,
+                7,
+                3169,
                 5,
               ],
             ],"
facebook/react,3025aa39649ef5106c34cc7896a63d63b2edee91,Sebastian Markbåge,2025-10-07T13:59:34Z,"[Flight] Don't serialize toJSON in Debug path and omit wide arrays (#34759)

There's a couple of issues with serializing Buffer in the debug renders.

For one, the Node.js Buffer has a `toJSON` on it which turns the binary
data into a JSON array which is very inefficient to serialize compared
to the real buffer. For debug info we never really want to resolve these
and unlike the regular render we can't error. So this uses the trick
where we read the original value. It's still unfortunate that this
intermediate gets created at all but at least now we're not serializing
it.

Second, we have a limit on depth of objects but we didn't have a limit
on width like large arrays or typed arrays. This omits large arrays from
the payload when possible and make them deferred when there's a debug
channel.",packages/react-server/src/__tests__/test-file.txt,31,0,31,"@@ -0,0 +1,31 @@
+Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed varius diam ut lectus suscipit, ac faucibus tellus fermentum. Phasellus rutrum bibendum tellus, eu malesuada metus dignissim sed. Pellentesque et quam libero. Donec ultricies massa vitae justo maximus, ultricies ultrices diam dictum. Ut in lectus non diam porttitor accumsan ac hendrerit tortor. Interdum et malesuada fames ac ante ipsum primis in faucibus. Donec a massa augue. Sed vitae purus id sapien luctus mattis. Maecenas imperdiet vehicula rhoncus.
+
+Etiam non tincidunt sapien, rhoncus fermentum ipsum. Cras id gravida felis. Phasellus finibus, mauris eu viverra auctor, augue tellus elementum sem, a vestibulum ligula purus vel erat. Nulla facilisi. Curabitur nulla ligula, viverra et elementum quis, sollicitudin sit amet nisl. Aenean vitae tortor mauris. Fusce iaculis risus eget lacus faucibus, quis congue dolor egestas. Integer viverra tellus tortor, vitae malesuada lorem ultricies vitae. Ut lacinia diam non ante pellentesque posuere. Suspendisse at posuere nunc, eget viverra elit. Vestibulum sit amet maximus lorem.
+
+Proin fermentum lacus non convallis gravida. Morbi a blandit nisi. Nam posuere lacus vitae molestie aliquam. Cras enim orci, elementum et urna vel, vehicula gravida neque. Etiam quis odio at odio aliquet lobortis ac et sapien. Nulla commodo, ante eget sodales facilisis, magna elit pretium odio, a consectetur dui tortor at erat. Morbi quis laoreet metus. Sed iaculis sodales nisi, ut pharetra magna laoreet eu.
+
+In iaculis, dolor quis consectetur fringilla, justo quam viverra turpis, eget dictum lectus nisl nec mi. Phasellus suscipit, leo ut tincidunt molestie, odio purus ornare ex, sagittis ornare erat nunc vel magna. Morbi malesuada risus nec turpis ultricies molestie dapibus nec justo. Vestibulum tempus bibendum purus, nec sodales libero convallis at. Fusce ipsum nibh, fringilla at sapien sit amet, malesuada suscipit lorem. Fusce et libero a dui gravida ultrices. Vestibulum quis lobortis velit. Morbi ut nisl lobortis, tempus sapien et, convallis mi. Integer varius, felis eu egestas dignissim, risus augue tristique elit, ultricies interdum arcu nibh et lectus. Integer enim mi, viverra eget scelerisque at, gravida eget justo. Nullam eget dolor id orci fringilla ultricies. In id luctus erat. Donec quis magna quis neque congue venenatis sit amet vel turpis. Donec congue tortor eu massa ullamcorper, ut imperdiet lectus posuere. Maecenas quis lorem quis nulla vehicula varius.
+
+Suspendisse tristique elit et luctus suscipit. Nunc quis justo luctus, malesuada velit vitae, accumsan tellus. Nunc ex sem, efficitur vitae semper et, consectetur quis turpis. Donec et tincidunt est, vitae varius sem. Aliquam at luctus dolor. Etiam pretium justo lectus, quis tempus quam feugiat ac. Suspendisse vitae sollicitudin erat, ut interdum felis. Cras lacinia tincidunt tempus. Vivamus congue et lectus quis suscipit. Fusce ultricies justo eget mi elementum, vitae consectetur lacus varius. Praesent fermentum in risus sit amet malesuada. Mauris semper sapien ornare pulvinar venenatis. Suspendisse potenti.
+
+Donec vestibulum purus et est cursus hendrerit. Vivamus pharetra ligula dolor, ut commodo felis accumsan sed. Integer pulvinar mollis metus, at cursus turpis laoreet ac. Maecenas lectus felis, dapibus eu ligula at, lacinia pharetra ex. Duis id tortor a metus pulvinar tincidunt. Suspendisse at lacus a nulla feugiat malesuada. Ut tincidunt interdum placerat. Fusce tincidunt elit in convallis elementum. Etiam commodo felis ut neque dapibus, ac finibus ante auctor. Sed tincidunt massa vitae sapien semper suscipit.
+
+Donec euismod sagittis lacus, eu lacinia tortor rutrum eu. Donec et sapien lacus. Aliquam non commodo magna, vitae commodo tortor. Vivamus vel urna eget ante varius condimentum. Etiam non purus pharetra, pharetra sem eu, maximus felis. Integer nec urna justo. Etiam a dolor tempor, posuere odio non, maximus metus. Vivamus malesuada mi libero, a viverra velit tempus vitae. Quisque accumsan sed nisi a venenatis. Donec malesuada erat at lacus tincidunt, sed euismod est ultricies. Fusce id posuere nisl. Aliquam erat volutpat. Morbi non erat iaculis turpis interdum facilisis. Nunc risus elit, laoreet quis ante sed, aliquam pharetra massa. Fusce cursus urna nec pharetra interdum.
+
+Etiam pharetra, metus nec malesuada efficitur, dui ipsum blandit felis, id cursus elit orci at eros. Phasellus suscipit lobortis est. Praesent egestas, est et scelerisque consectetur, neque velit dapibus elit, quis hendrerit nisi felis a nulla. Quisque facilisis rutrum varius. Integer quis libero sit amet erat tincidunt semper a vel quam. Curabitur rutrum fringilla consequat. Fusce in metus ut odio luctus viverra viverra et nulla. Vestibulum a lacinia augue, feugiat egestas diam. Proin elit arcu, venenatis quis elementum in, rutrum quis tortor. Integer vel lacus urna. Suspendisse pharetra sapien at ullamcorper hendrerit. Etiam nibh ipsum, vulputate eu pulvinar nec, pulvinar id odio.
+
+Proin tincidunt, augue id tristique dictum, nisi sem congue orci, non faucibus erat nibh ac metus. Curabitur leo massa, hendrerit a venenatis sed, aliquam ac ligula. Fusce facilisis vulputate dui ut sollicitudin. Phasellus tellus lacus, viverra at dui sit amet, facilisis accumsan nisi. Phasellus dui lectus, lobortis consequat convallis sed, luctus non dui. Duis tempus urna sed libero ullamcorper, placerat luctus enim dignissim. Mauris vitae odio mauris. Donec eget tortor vitae nibh laoreet viverra at eget urna. Integer in ex arcu. Vestibulum tellus erat, tempus sit amet neque nec, tristique maximus neque. Vivamus efficitur nisi massa, ut tempus lacus interdum quis. Cras posuere erat nec convallis viverra. Aenean efficitur nibh et augue maximus pretium. Aliquam hendrerit nulla dui. Donec elit enim, hendrerit ultricies orci sed, blandit elementum quam.
+
+Donec fringilla pretium ligula, sed imperdiet orci mattis quis. Mauris ullamcorper fermentum libero fringilla molestie. Sed laoreet, nisl in viverra convallis, enim tortor tincidunt elit, in consequat diam metus non libero. Quisque eleifend lobortis lobortis. Donec porta eget justo faucibus sagittis. Phasellus lacus diam, convallis tristique metus at, placerat luctus justo. Fusce vestibulum urna eget dictum vulputate. Nam non nisl bibendum risus vehicula rutrum nec vel purus. Morbi nec diam laoreet quam sodales malesuada. Suspendisse efficitur, magna vel sodales semper, neque nulla aliquam nisi, hendrerit mollis justo libero vel mi.
+
+Etiam tellus neque, vulputate quis justo sit amet, dapibus suscipit est. Morbi pulvinar ipsum risus, eu lacinia felis viverra eget. Quisque massa justo, aliquam non ornare sit amet, maximus maximus dui. Pellentesque aliquam fermentum libero sed aliquet. Nulla consequat ultrices commodo. Donec condimentum consectetur nulla, id euismod metus facilisis eget. Fusce at mauris blandit, mollis ex nec, dignissim ex. Proin nec facilisis arcu. In vestibulum at erat vel ultrices. Mauris lacinia elementum nibh rhoncus egestas. Duis lobortis magna eget sem consequat, ac malesuada orci gravida. Duis cursus quam augue, a condimentum velit scelerisque eget. Donec dapibus pellentesque tellus. Nulla malesuada, purus id efficitur volutpat, felis odio faucibus metus, scelerisque hendrerit enim velit in urna.
+
+Nulla massa felis, semper eget consectetur ac, scelerisque vitae mi. Praesent sit amet sagittis metus. Curabitur mollis ex quis erat faucibus mattis. Nullam risus lacus, suscipit sed luctus vel, dictum id odio. In et dictum elit. Aliquam quis consectetur metus. In feugiat, urna ac porttitor auctor, est arcu porta est, vel lobortis erat elit quis nunc. Nulla quis nibh vel sem fringilla semper sed quis ipsum. Morbi vehicula, urna non rhoncus hendrerit, velit purus accumsan purus, vel elementum arcu dui sit amet leo. Aenean ultricies orci ac ante placerat, id auctor magna sodales. Nam sit amet laoreet lectus. Etiam ligula velit, dignissim vel tincidunt at, dictum nec lacus. Nam non eleifend enim, sit amet dictum lectus. Suspendisse potenti. Suspendisse eget ante a mauris placerat lobortis sed eu dui.
+
+Nam et porta elit, vel interdum mauris. Vivamus eu elit nec nisl bibendum hendrerit. Morbi ornare mollis lacus non finibus. Praesent id orci ex. Donec commodo viverra dictum. Phasellus in lacus tellus. Curabitur at lorem efficitur leo dignissim varius at eu est. Vivamus justo erat, hendrerit id volutpat nec, euismod eget odio. Mauris et vulputate tellus, in maximus nunc. Vestibulum ante ligula, suscipit nec nibh in, placerat pellentesque neque.
+
+Nunc in accumsan ligula, quis accumsan diam. Fusce tincidunt neque a turpis ornare, id convallis quam convallis. Donec at luctus ipsum. Nam id enim ante. Fusce condimentum consectetur justo, in hendrerit lacus vehicula ut. Vestibulum ut hendrerit risus. Donec blandit ut magna eget aliquet. Donec sit amet faucibus ante. Suspendisse condimentum, mauris id aliquam ultricies, erat mi tincidunt eros, sit amet blandit urna purus vitae orci. Maecenas in faucibus ipsum, quis gravida ex. Sed tincidunt in ipsum id dignissim. Duis dui nisl, interdum at est non, rutrum porttitor felis. Sed at nibh dolor. Etiam cursus scelerisque leo.
+
+Morbi vel arcu ullamcorper, tristique eros sed, condimentum sapien. Duis suscipit consequat tincidunt. Proin commodo erat in velit cursus lobortis. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Pellentesque id metus luctus, commodo sapien iaculis, pharetra massa. Phasellus fringilla sagittis lacus, ac laoreet massa sollicitudin ac. Aliquam luctus ex non semper dictum. Morbi vel arcu vel purus aliquet tempus. Curabitur ultrices rutrum facilisis. Morbi enim lectus, ornare quis sem bibendum, aliquet imperdiet ex. Vestibulum commodo sed neque et fermentum. Vestibulum enim elit, lobortis vitae convallis ut, auctor in velit.
+
+Vestibulum semper vulputate elit, at volutpat quam. Nullam id scelerisque libero, nec facilisis lacus. Nulla quis rhoncus arcu. Aliquam erat volutpat. In viverra, diam id rutrum volutpat, ligula dui tristique ex, et pulvinar elit ex a est. Cras magna augue, porta vel tempus vitae, placerat et felis. In ex elit, mattis vitae molestie pretium, tempus vitae tortor. Integer vehicula orci magna, in ultrices nulla volutpat sit amet. Pellentesque odio erat, hendrerit at lacinia sit amet, tempus sit amet risus. Curabitur ut laoreet justo, nec fermentum nibh. Integer tincidunt mattis sem eu cursus."
facebook/react,a4eb2dfa6fec3da5a947eb84c99b059890bb5241,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:24:24Z,"Release Fragment refs to Canary (#34720)

## Overview

This PR adds the `ref` prop to `<Fragment>` in `react@canary`.

This means this API is ready for final feedback and prepared for a
semver stable release.

## What this means

Shipping Fragment refs to canary means they have gone through extensive
testing in production, we are confident in the stability of the APIs,
and we are preparing to release it in a future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
Fragment refs with `react@canary` to confirm compatibility and prepare
for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like Fragment refs.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
Fragment refs as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#fragment-refs)
blog post, and [the new docs for Fragment
refs`](https://react.dev/reference/react/Fragment#fragmentinstance) for
more info.",fixtures/dom/src/components/fixtures/fragment-refs/ScrollIntoViewCase.js,2,2,4,"@@ -55,11 +55,11 @@ export default function ScrollIntoViewCase() {
   const scrollContainerRef = useRef(null);
 
   const scrollVertical = () => {
-    fragmentRef.current.experimental_scrollIntoView(alignToTop);
+    fragmentRef.current.scrollIntoView(alignToTop);
   };
 
   const scrollVerticalNoChildren = () => {
-    noChildRef.current.experimental_scrollIntoView(alignToTop);
+    noChildRef.current.scrollIntoView(alignToTop);
   };
 
   useEffect(() => {"
facebook/react,a4eb2dfa6fec3da5a947eb84c99b059890bb5241,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:24:24Z,"Release Fragment refs to Canary (#34720)

## Overview

This PR adds the `ref` prop to `<Fragment>` in `react@canary`.

This means this API is ready for final feedback and prepared for a
semver stable release.

## What this means

Shipping Fragment refs to canary means they have gone through extensive
testing in production, we are confident in the stability of the APIs,
and we are preparing to release it in a future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
Fragment refs with `react@canary` to confirm compatibility and prepare
for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like Fragment refs.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
Fragment refs as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#fragment-refs)
blog post, and [the new docs for Fragment
refs`](https://react.dev/reference/react/Fragment#fragmentinstance) for
more info.",packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js,2,2,4,"@@ -3341,13 +3341,13 @@ function validateDocumentPositionWithFiberTree(
 
 if (enableFragmentRefsScrollIntoView) {
   // $FlowFixMe[prop-missing]
-  FragmentInstance.prototype.experimental_scrollIntoView = function (
+  FragmentInstance.prototype.scrollIntoView = function (
     this: FragmentInstanceType,
     alignToTop?: boolean,
   ): void {
     if (typeof alignToTop === 'object') {
       throw new Error(
-        'FragmentInstance.experimental_scrollIntoView() does not support ' +
+        'FragmentInstance.scrollIntoView() does not support ' +
           'scrollIntoViewOptions. Use the alignToTop boolean instead.',
       );
     }"
facebook/react,a4eb2dfa6fec3da5a947eb84c99b059890bb5241,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:24:24Z,"Release Fragment refs to Canary (#34720)

## Overview

This PR adds the `ref` prop to `<Fragment>` in `react@canary`.

This means this API is ready for final feedback and prepared for a
semver stable release.

## What this means

Shipping Fragment refs to canary means they have gone through extensive
testing in production, we are confident in the stability of the APIs,
and we are preparing to release it in a future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
Fragment refs with `react@canary` to confirm compatibility and prepare
for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like Fragment refs.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
Fragment refs as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#fragment-refs)
blog post, and [the new docs for Fragment
refs`](https://react.dev/reference/react/Fragment#fragmentinstance) for
more info.",packages/react-dom/src/__tests__/ReactDOMFragmentRefs-test.js,12,12,24,"@@ -1960,9 +1960,9 @@ describe('FragmentRefs', () => {
       });
 
       expect(() => {
-        fragmentRef.current.experimental_scrollIntoView({block: 'start'});
+        fragmentRef.current.scrollIntoView({block: 'start'});
       }).toThrowError(
-        'FragmentInstance.experimental_scrollIntoView() does not support ' +
+        'FragmentInstance.scrollIntoView() does not support ' +
           'scrollIntoViewOptions. Use the alignToTop boolean instead.',
       );
     });
@@ -1996,11 +1996,11 @@ describe('FragmentRefs', () => {
         });
 
         // Default call
-        fragmentRef.current.experimental_scrollIntoView();
+        fragmentRef.current.scrollIntoView();
         expectLast(logs, 'childA');
         logs = [];
         // alignToTop=true
-        fragmentRef.current.experimental_scrollIntoView(true);
+        fragmentRef.current.scrollIntoView(true);
         expectLast(logs, 'childA');
       });
 
@@ -2027,7 +2027,7 @@ describe('FragmentRefs', () => {
           logs.push('childB');
         });
 
-        fragmentRef.current.experimental_scrollIntoView(false);
+        fragmentRef.current.scrollIntoView(false);
         expectLast(logs, 'childB');
       });
 
@@ -2068,7 +2068,7 @@ describe('FragmentRefs', () => {
         });
 
         // Default call
-        fragmentRef.current.experimental_scrollIntoView();
+        fragmentRef.current.scrollIntoView();
         expectLast(logs, 'childA');
       });
 
@@ -2157,7 +2157,7 @@ describe('FragmentRefs', () => {
         });
 
         // Default call
-        fragmentRef.current.experimental_scrollIntoView();
+        fragmentRef.current.scrollIntoView();
         expectLast(logs, 'header');
 
         childARef.current.scrollIntoView.mockClear();
@@ -2167,7 +2167,7 @@ describe('FragmentRefs', () => {
         logs = [];
 
         // // alignToTop=false
-        fragmentRef.current.experimental_scrollIntoView(false);
+        fragmentRef.current.scrollIntoView(false);
         expectLast(logs, 'C');
       });
     });
@@ -2195,14 +2195,14 @@ describe('FragmentRefs', () => {
         siblingBRef.current.scrollIntoView = jest.fn();
 
         // Default call
-        fragmentRef.current.experimental_scrollIntoView();
+        fragmentRef.current.scrollIntoView();
         expect(siblingARef.current.scrollIntoView).toHaveBeenCalledTimes(0);
         expect(siblingBRef.current.scrollIntoView).toHaveBeenCalledTimes(1);
 
         siblingBRef.current.scrollIntoView.mockClear();
 
         // alignToTop=true
-        fragmentRef.current.experimental_scrollIntoView(true);
+        fragmentRef.current.scrollIntoView(true);
         expect(siblingARef.current.scrollIntoView).toHaveBeenCalledTimes(0);
         expect(siblingBRef.current.scrollIntoView).toHaveBeenCalledTimes(1);
       });
@@ -2239,7 +2239,7 @@ describe('FragmentRefs', () => {
         siblingBRef.current.scrollIntoView = jest.fn();
 
         // alignToTop=false
-        fragmentRef.current.experimental_scrollIntoView(false);
+        fragmentRef.current.scrollIntoView(false);
         expect(siblingARef.current.scrollIntoView).toHaveBeenCalledTimes(1);
         expect(siblingBRef.current.scrollIntoView).toHaveBeenCalledTimes(0);
       });
@@ -2260,7 +2260,7 @@ describe('FragmentRefs', () => {
         });
 
         parentRef.current.scrollIntoView = jest.fn();
-        fragmentRef.current.experimental_scrollIntoView();
+        fragmentRef.current.scrollIntoView();
         expect(parentRef.current.scrollIntoView).toHaveBeenCalledTimes(1);
       });
     });"
facebook/react,a4eb2dfa6fec3da5a947eb84c99b059890bb5241,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:24:24Z,"Release Fragment refs to Canary (#34720)

## Overview

This PR adds the `ref` prop to `<Fragment>` in `react@canary`.

This means this API is ready for final feedback and prepared for a
semver stable release.

## What this means

Shipping Fragment refs to canary means they have gone through extensive
testing in production, we are confident in the stability of the APIs,
and we are preparing to release it in a future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
Fragment refs with `react@canary` to confirm compatibility and prepare
for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like Fragment refs.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
Fragment refs as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#fragment-refs)
blog post, and [the new docs for Fragment
refs`](https://react.dev/reference/react/Fragment#fragmentinstance) for
more info.",packages/shared/ReactFeatureFlags.js,2,2,4,"@@ -145,8 +145,8 @@ export const transitionLaneExpirationMs = 5000;
  */
 export const enableInfiniteRenderLoopDetection: boolean = false;
 
-export const enableFragmentRefs = __EXPERIMENTAL__;
-export const enableFragmentRefsScrollIntoView = __EXPERIMENTAL__;
+export const enableFragmentRefs: boolean = true;
+export const enableFragmentRefsScrollIntoView: boolean = true;
 
 // -----------------------------------------------------------------------------
 // Ready for next major."
facebook/react,a4eb2dfa6fec3da5a947eb84c99b059890bb5241,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:24:24Z,"Release Fragment refs to Canary (#34720)

## Overview

This PR adds the `ref` prop to `<Fragment>` in `react@canary`.

This means this API is ready for final feedback and prepared for a
semver stable release.

## What this means

Shipping Fragment refs to canary means they have gone through extensive
testing in production, we are confident in the stability of the APIs,
and we are preparing to release it in a future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
Fragment refs with `react@canary` to confirm compatibility and prepare
for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like Fragment refs.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
Fragment refs as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#fragment-refs)
blog post, and [the new docs for Fragment
refs`](https://react.dev/reference/react/Fragment#fragmentinstance) for
more info.",packages/shared/forks/ReactFeatureFlags.native-oss.js,1,1,2,"@@ -72,7 +72,7 @@ export const enableHydrationChangeEvent: boolean = false;
 export const enableDefaultTransitionIndicator: boolean = false;
 export const ownerStackLimit = 1e4;
 
-export const enableFragmentRefs: boolean = false;
+export const enableFragmentRefs: boolean = true;
 export const enableFragmentRefsScrollIntoView: boolean = false;
 
 // Profiling Only"
facebook/react,a4eb2dfa6fec3da5a947eb84c99b059890bb5241,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:24:24Z,"Release Fragment refs to Canary (#34720)

## Overview

This PR adds the `ref` prop to `<Fragment>` in `react@canary`.

This means this API is ready for final feedback and prepared for a
semver stable release.

## What this means

Shipping Fragment refs to canary means they have gone through extensive
testing in production, we are confident in the stability of the APIs,
and we are preparing to release it in a future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
Fragment refs with `react@canary` to confirm compatibility and prepare
for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like Fragment refs.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
Fragment refs as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#fragment-refs)
blog post, and [the new docs for Fragment
refs`](https://react.dev/reference/react/Fragment#fragmentinstance) for
more info.",packages/shared/forks/ReactFeatureFlags.test-renderer.js,2,2,4,"@@ -73,8 +73,8 @@ export const enableHydrationChangeEvent: boolean = false;
 export const enableDefaultTransitionIndicator: boolean = false;
 export const ownerStackLimit = 1e4;
 
-export const enableFragmentRefs: boolean = false;
-export const enableFragmentRefsScrollIntoView: boolean = false;
+export const enableFragmentRefs: boolean = true;
+export const enableFragmentRefsScrollIntoView: boolean = true;
 
 // TODO: This must be in sync with the main ReactFeatureFlags file because
 // the Test Renderer's value must be the same as the one used by the"
facebook/react,a4eb2dfa6fec3da5a947eb84c99b059890bb5241,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:24:24Z,"Release Fragment refs to Canary (#34720)

## Overview

This PR adds the `ref` prop to `<Fragment>` in `react@canary`.

This means this API is ready for final feedback and prepared for a
semver stable release.

## What this means

Shipping Fragment refs to canary means they have gone through extensive
testing in production, we are confident in the stability of the APIs,
and we are preparing to release it in a future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
Fragment refs with `react@canary` to confirm compatibility and prepare
for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like Fragment refs.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
Fragment refs as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#fragment-refs)
blog post, and [the new docs for Fragment
refs`](https://react.dev/reference/react/Fragment#fragmentinstance) for
more info.",scripts/error-codes/codes.json,1,1,2,"@@ -551,5 +551,5 @@
   ""563"": ""This render completed successfully. All cacheSignals are now aborted to allow clean up of any unused resources."",
   ""564"": ""Unknown command. The debugChannel was not wired up properly."",
   ""565"": ""resolveDebugMessage/closeDebugChannel should not be called for a Request that wasn't kept alive. This is a bug in React."",
-  ""566"": ""FragmentInstance.experimental_scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead.""
+  ""566"": ""FragmentInstance.scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead.""
 }"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",fixtures/view-transition/src/components/App.js,1,1,2,"@@ -3,7 +3,7 @@ import React, {
   useLayoutEffect,
   useEffect,
   useState,
-  unstable_addTransitionType as addTransitionType,
+  addTransitionType,
 } from 'react';
 
 import Chrome from './Chrome.js';"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",fixtures/view-transition/src/components/Page.js,2,2,4,"@@ -1,6 +1,6 @@
 import React, {
-  unstable_addTransitionType as addTransitionType,
-  unstable_ViewTransition as ViewTransition,
+  addTransitionType,
+  ViewTransition,
   Activity,
   useLayoutEffect,
   useEffect,"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react-devtools-shared/src/__tests__/storeComponentFilters-test.js,2,1,3,"@@ -251,7 +251,8 @@ describe('Store component filters', () => {
   });
 
   it('should filter ViewTransition', async () => {
-    const ViewTransition = React.unstable_ViewTransition;
+    const ViewTransition =
+      React.ViewTransition || React.unstable_ViewTransition;
 
     if (ViewTransition != null) {
       await actAsync(async () =>"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react-dom/src/__tests__/ReactDOMFizzViewTransition-test.js,1,1,2,"@@ -40,7 +40,7 @@ describe('ReactDOMFizzViewTransition', () => {
     Stream = require('stream');
 
     Suspense = React.Suspense;
-    ViewTransition = React.unstable_ViewTransition;
+    ViewTransition = React.ViewTransition;
 
     // Test Environment
     const jsdom = new JSDOM("
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react-reconciler/src/__tests__/ReactErrorStacks-test.js,1,1,2,"@@ -29,7 +29,7 @@ describe('ReactFragment', () => {
     React = require('react');
     Suspense = React.Suspense;
     Activity = React.Activity;
-    ViewTransition = React.unstable_ViewTransition;
+    ViewTransition = React.ViewTransition;
     ReactNoop = require('react-noop-renderer');
     const InternalTestUtils = require('internal-test-utils');
     waitForAll = InternalTestUtils.waitForAll;"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react-reconciler/src/__tests__/ReactLazy-test.internal.js,2,2,4,"@@ -941,7 +941,7 @@ describe('ReactLazy', () => {
 
   // @gate enableViewTransition
   it('throws with a useful error when wrapping ViewTransition with lazy()', async () => {
-    const BadLazy = lazy(() => fakeImport(React.unstable_ViewTransition));
+    const BadLazy = lazy(() => fakeImport(React.ViewTransition));
 
     const root = ReactTestRenderer.create(
       <Suspense fallback={<Text text=""Loading..."" />}>
@@ -954,7 +954,7 @@ describe('ReactLazy', () => {
 
     await waitForAll(['Loading...']);
 
-    await resolveFakeImport(React.unstable_ViewTransition);
+    await resolveFakeImport(React.ViewTransition);
     root.update(
       <Suspense fallback={<Text text=""Loading..."" />}>
         <BadLazy />"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react-reconciler/src/__tests__/ViewTransitionReactServer-test.js,1,1,2,"@@ -23,7 +23,7 @@ describe('ViewTransitionReactServer', () => {
     jest.resetModules();
     jest.mock('react', () => require('react/react.react-server'));
     ReactServer = require('react');
-    ViewTransition = ReactServer.unstable_ViewTransition;
+    ViewTransition = ReactServer.ViewTransition;
     ReactNoopFlightServer = require('react-noop-renderer/flight-server');
 
     jest.resetModules();"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/index.development.js,2,0,2,"@@ -45,6 +45,8 @@ export {
   startTransition,
   unstable_LegacyHidden,
   Activity,
+  ViewTransition,
+  addTransitionType,
   unstable_Scope,
   unstable_SuspenseList,
   unstable_TracingMarker,"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/index.experimental.development.js,2,2,4,"@@ -33,9 +33,9 @@ export {
   unstable_postpone,
   unstable_getCacheForType,
   unstable_SuspenseList,
-  unstable_ViewTransition,
+  ViewTransition,
   unstable_startGestureTransition,
-  unstable_addTransitionType,
+  addTransitionType,
   unstable_useCacheRefresh,
   useId,
   useCallback,"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/index.experimental.js,2,2,4,"@@ -34,9 +34,9 @@ export {
   unstable_postpone,
   unstable_getCacheForType,
   unstable_SuspenseList,
-  unstable_ViewTransition,
+  ViewTransition,
   unstable_startGestureTransition,
-  unstable_addTransitionType,
+  addTransitionType,
   unstable_useCacheRefresh,
   useId,
   useCallback,"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/index.fb.js,4,2,6,"@@ -39,9 +39,11 @@ export {
   unstable_LegacyHidden,
   unstable_Scope,
   unstable_SuspenseList,
-  unstable_ViewTransition,
+  ViewTransition,
+  ViewTransition as unstable_ViewTransition,
   unstable_TracingMarker,
-  unstable_addTransitionType,
+  addTransitionType,
+  addTransitionType as unstable_addTransitionType,
   unstable_useCacheRefresh,
   use,
   useActionState,"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/index.js,2,2,4,"@@ -48,8 +48,8 @@ export {
   unstable_Scope,
   unstable_SuspenseList,
   unstable_TracingMarker,
-  unstable_ViewTransition,
-  unstable_addTransitionType,
+  ViewTransition,
+  addTransitionType,
   unstable_getCacheForType,
   unstable_useCacheRefresh,
   useId,"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/index.stable.development.js,2,0,2,"@@ -18,6 +18,8 @@ export {
   PureComponent,
   StrictMode,
   Suspense,
+  ViewTransition,
+  addTransitionType,
   cloneElement,
   createContext,
   createElement,"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/index.stable.js,2,0,2,"@@ -18,6 +18,8 @@ export {
   PureComponent,
   StrictMode,
   Suspense,
+  ViewTransition,
+  addTransitionType,
   cloneElement,
   createContext,
   createElement,"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/src/ReactClient.js,2,2,4,"@@ -125,8 +125,8 @@ export {
   // enableTransitionTracing
   REACT_TRACING_MARKER_TYPE as unstable_TracingMarker,
   // enableViewTransition
-  REACT_VIEW_TRANSITION_TYPE as unstable_ViewTransition,
-  addTransitionType as unstable_addTransitionType,
+  REACT_VIEW_TRANSITION_TYPE as ViewTransition,
+  addTransitionType as addTransitionType,
   // enableGestureTransition
   startGestureTransition as unstable_startGestureTransition,
   // DEV-only"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/src/ReactServer.experimental.development.js,1,1,2,"@@ -63,6 +63,7 @@ export {
   REACT_PROFILER_TYPE as Profiler,
   REACT_STRICT_MODE_TYPE as StrictMode,
   REACT_SUSPENSE_TYPE as Suspense,
+  REACT_VIEW_TRANSITION_TYPE as ViewTransition,
   cloneElement,
   createElement,
   createRef,
@@ -83,6 +84,5 @@ export {
   version,
   // Experimental
   REACT_SUSPENSE_LIST_TYPE as unstable_SuspenseList,
-  REACT_VIEW_TRANSITION_TYPE as unstable_ViewTransition,
   captureOwnerStack, // DEV-only
 };"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/src/ReactServer.experimental.js,1,1,2,"@@ -62,6 +62,7 @@ export {
   REACT_PROFILER_TYPE as Profiler,
   REACT_STRICT_MODE_TYPE as StrictMode,
   REACT_SUSPENSE_TYPE as Suspense,
+  REACT_VIEW_TRANSITION_TYPE as ViewTransition,
   cloneElement,
   createElement,
   createRef,
@@ -82,5 +83,4 @@ export {
   version,
   // Experimental
   REACT_SUSPENSE_LIST_TYPE as unstable_SuspenseList,
-  REACT_VIEW_TRANSITION_TYPE as unstable_ViewTransition,
 };"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/src/ReactServer.fb.js,2,1,3,"@@ -53,6 +53,8 @@ export {
   REACT_PROFILER_TYPE as Profiler,
   REACT_STRICT_MODE_TYPE as StrictMode,
   REACT_SUSPENSE_TYPE as Suspense,
+  REACT_VIEW_TRANSITION_TYPE as ViewTransition,
+  REACT_VIEW_TRANSITION_TYPE as unstable_ViewTransition,
   cloneElement,
   createElement,
   createRef,
@@ -71,5 +73,4 @@ export {
   captureOwnerStack, // DEV-only
   // Experimental
   REACT_SUSPENSE_LIST_TYPE as unstable_SuspenseList,
-  REACT_VIEW_TRANSITION_TYPE as unstable_ViewTransition,
 };"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/react/src/ReactServer.js,2,0,2,"@@ -16,6 +16,7 @@ import {
   REACT_PROFILER_TYPE,
   REACT_STRICT_MODE_TYPE,
   REACT_SUSPENSE_TYPE,
+  REACT_VIEW_TRANSITION_TYPE,
 } from 'shared/ReactSymbols';
 import {
   cloneElement,
@@ -46,6 +47,7 @@ export {
   REACT_PROFILER_TYPE as Profiler,
   REACT_STRICT_MODE_TYPE as StrictMode,
   REACT_SUSPENSE_TYPE as Suspense,
+  REACT_VIEW_TRANSITION_TYPE as ViewTransition,
   cloneElement,
   createElement,
   createRef,"
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/shared/ReactFeatureFlags.js,1,1,2,"@@ -84,7 +84,7 @@ export const enablePostpone = __EXPERIMENTAL__;
 
 export const enableHalt: boolean = true;
 
-export const enableViewTransition = __EXPERIMENTAL__;
+export const enableViewTransition: boolean = true;
 
 export const enableGestureTransition = __EXPERIMENTAL__;
 "
facebook/react,6a8c7fb6f1108577c97eeb5703018ece915dcdeb,"Sebastian ""Sebbie"" Silbermann",2025-10-07T04:23:34Z,"Release `<ViewTransition />` to Canary (#34712)

## Overview

This PR ships the View Transition APIs to `react@canary`:
- [`<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition)
-
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)

This means these APIs are ready for final feedback and prepare for
semver stable release.

## What this means

Shipping `<ViewTransition />` and `addTransitionType` to canary means
they have gone through extensive testing in production, we are confident
in the stability of the APIs, and we are preparing to release it in a
future semver stable version.

Libraries and frameworks following the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries) should begin
implementing and testing these features.

## Why we follow the Canary Workflow

To prepare for semver stable, libraries should test canary features like
`<ViewTransition />` with `react@canary` to confirm compatibility and
prepare for the next semver release in a myriad of environments and
configurations used throughout the React ecosystem. This provides
libraries with ample time to catch any issues we missed before slamming
them with problems in the wider semver release.

Since these features have already gone through extensive production
testing, and we are confident they are stable, frameworks following the
[Canary Workflow](https://react.dev/blog/2023/05/03/react-canaries) can
also begin adopting canary features like `<ViewTransition />`.

This adoption is similar to how different Browsers implement new
proposed browser features before they are added to the standard. If a
frameworks adopts a canary feature, they are committing to stability for
their users by ensuring any API changes before a semver stable release
are opaque and non-breaking to their users.

Apps not using a framework are also free to adopt canary features like
`<ViewTransition>` as long as they follow the [Canary
Workflow](https://react.dev/blog/2023/05/03/react-canaries), but we
generally recommend waiting for a semver stable release unless you have
the capacity to commit to following along with the canary changes and
debugging library compatibility issues.

Waiting for semver stable means you're able to benefit from libraries
testing and confirming support, and use semver as signal for which
version of a library you can use with support of the feature.

## Docs 

Check out the [""React Labs: View Transitions, Activity, and
more""](https://react.dev/blog/2025/04/23/react-labs-view-transitions-activity-and-more#view-transitions)
blog post, and [the new docs for `<ViewTransition
/>`](https://react.dev/reference/react/ViewTransition) and
[`addTransitionType`](https://react.dev/reference/react/addTransitionType)
for more info.",packages/shared/forks/ReactFeatureFlags.native-oss.js,1,1,2,"@@ -62,7 +62,7 @@ export const enableHydrationLaneScheduling: boolean = true;
 export const enableYieldingBeforePassive: boolean = false;
 
 export const enableThrottledScheduling: boolean = false;
-export const enableViewTransition: boolean = false;
+export const enableViewTransition: boolean = true;
 export const enableGestureTransition: boolean = false;
 export const enableScrollEndPolyfill: boolean = true;
 export const enableSuspenseyImages: boolean = false;"
facebook/react,b65e6fc58b8c9a35e2c2ea7d1952fc1499cef09b,lauren,2025-10-06T16:43:39Z,"Revert [eprh] Remove hermes-parser (#34747)

Adds back HermesParser to eslint-plugin-react-hooks. There are still
[external users of
Flow](https://github.com/facebook/react/pull/34719#issuecomment-3368137743)
using the plugin, so we shouldn't break the plugin for them. However, we
still have the problem of double parsing: once from eslint (which we
discard) and then another via babel/hermes parser.

In the long run we should investigate a translation layer from estree to
babel (or alternatively, update the compiler to take estree as input).
But for now, I am reverting the PR.

This does mean that [Sandpack in
react.dev](https://github.com/reactjs/react.dev/blob/11cb6b591571caf5fa2a192117b6a6445c3f2027/src/components/MDX/Sandpack/runESLint.tsx#L31)
cannot update to the latest eprh as HermesParser does not appear to be
able to be run in a browser. I discovered this while trying to update
eprh on react.dev last week, but didn't investigate deeply. I'll need to
double check that again to find out more.",packages/eslint-plugin-react-hooks/package.json,1,0,1,"@@ -41,6 +41,7 @@
   ""dependencies"": {
     ""@babel/core"": ""^7.24.4"",
     ""@babel/parser"": ""^7.24.4"",
+    ""hermes-parser"": ""^0.25.1"",
     ""zod"": ""^3.22.4 || ^4.0.0"",
     ""zod-validation-error"": ""^3.0.3 || ^4.0.0""
   },"
facebook/react,b65e6fc58b8c9a35e2c2ea7d1952fc1499cef09b,lauren,2025-10-06T16:43:39Z,"Revert [eprh] Remove hermes-parser (#34747)

Adds back HermesParser to eslint-plugin-react-hooks. There are still
[external users of
Flow](https://github.com/facebook/react/pull/34719#issuecomment-3368137743)
using the plugin, so we shouldn't break the plugin for them. However, we
still have the problem of double parsing: once from eslint (which we
discard) and then another via babel/hermes parser.

In the long run we should investigate a translation layer from estree to
babel (or alternatively, update the compiler to take estree as input).
But for now, I am reverting the PR.

This does mean that [Sandpack in
react.dev](https://github.com/reactjs/react.dev/blob/11cb6b591571caf5fa2a192117b6a6445c3f2027/src/components/MDX/Sandpack/runESLint.tsx#L31)
cannot update to the latest eprh as HermesParser does not appear to be
able to be run in a browser. I discovered this while trying to update
eprh on react.dev last week, but didn't investigate deeply. I'll need to
double check that again to find out more.",packages/eslint-plugin-react-hooks/src/shared/RunReactCompiler.ts,23,8,31,"@@ -17,6 +17,7 @@ import BabelPluginReactCompiler, {
   LoggerEvent,
 } from 'babel-plugin-react-compiler';
 import type {SourceCode} from 'eslint';
+import * as HermesParser from 'hermes-parser';
 import {isDeepStrictEqual} from 'util';
 import type {ParseResult} from '@babel/parser';
 
@@ -113,14 +114,28 @@ function runReactCompilerImpl({
   }
 
   let babelAST: ParseResult<File> | null = null;
-  try {
-    babelAST = babelParse(sourceCode.text, {
-      sourceFilename: filename,
-      sourceType: 'unambiguous',
-      plugins: ['typescript', 'jsx'],
-    });
-  } catch (err: unknown) {
-    /* empty */
+
+  if (filename.endsWith('.tsx') || filename.endsWith('.ts')) {
+    try {
+      babelAST = babelParse(sourceCode.text, {
+        sourceFilename: filename,
+        sourceType: 'unambiguous',
+        plugins: ['typescript', 'jsx'],
+      });
+    } catch {
+      /* empty */
+    }
+  } else {
+    try {
+      babelAST = HermesParser.parse(sourceCode.text, {
+        babel: true,
+        enableExperimentalComponentSyntax: true,
+        sourceFilename: filename,
+        sourceType: 'module',
+      });
+    } catch {
+      /* empty */
+    }
   }
 
   if (babelAST != null) {"
facebook/react,c78625842239f29ff130136fff2729fd4c7c2e91,lauren,2025-10-06T04:53:21Z,"[eprh] Fix config type not being exported correctly (#34746)

Another attempt to fix #34745. I updated our fixture for eslint-v9 to
include running tsc. I believe there were 2 issues:

1. `export * from './cjs/eslint-plugin-react-hooks'` in npm/index.d.ts
was no longer correct as we updated index.ts to export default instead
of named exports
2. After fixing ^ there was a typescript error which I fixed by making
some small tweaks",fixtures/eslint-v9/eslint.config.ts,1,4,5,"@@ -12,10 +12,7 @@ export default defineConfig([
         },
       },
     },
-    plugins: {
-      'react-hooks': reactHooks,
-    },
-    extends: ['react-hooks/recommended-latest'],
+    extends: [reactHooks.configs['recommended-latest']],
     rules: {
       'react-hooks/exhaustive-deps': 'error',
     },"
facebook/react,c78625842239f29ff130136fff2729fd4c7c2e91,lauren,2025-10-06T04:53:21Z,"[eprh] Fix config type not being exported correctly (#34746)

Another attempt to fix #34745. I updated our fixture for eslint-v9 to
include running tsc. I believe there were 2 issues:

1. `export * from './cjs/eslint-plugin-react-hooks'` in npm/index.d.ts
was no longer correct as we updated index.ts to export default instead
of named exports
2. After fixing ^ there was a typescript error which I fixed by making
some small tweaks",fixtures/eslint-v9/package.json,4,1,5,"@@ -8,6 +8,9 @@
   },
   ""scripts"": {
     ""build"": ""node build.mjs && yarn"",
-    ""lint"": ""eslint index.js --report-unused-disable-directives""
+    ""lint"": ""tsc --noEmit && eslint index.js --report-unused-disable-directives""
+  },
+  ""devDependencies"": {
+    ""typescript"": ""^5.4.3""
   }
 }"
facebook/react,c78625842239f29ff130136fff2729fd4c7c2e91,lauren,2025-10-06T04:53:21Z,"[eprh] Fix config type not being exported correctly (#34746)

Another attempt to fix #34745. I updated our fixture for eslint-v9 to
include running tsc. I believe there were 2 issues:

1. `export * from './cjs/eslint-plugin-react-hooks'` in npm/index.d.ts
was no longer correct as we updated index.ts to export default instead
of named exports
2. After fixing ^ there was a typescript error which I fixed by making
some small tweaks",fixtures/eslint-v9/tsconfig.json,18,0,18,"@@ -1,2 +1,20 @@
 {
+  ""compilerOptions"": {
+    ""lib"": [
+      ""es2022""
+    ],
+    ""module"": ""nodenext"",
+    ""moduleResolution"": ""nodenext"",
+    ""target"": ""es2022"",
+    ""typeRoots"": [
+      ""./node_modules/@types""
+    ],
+    ""skipLibCheck"": true
+  },
+  ""exclude"": [
+    ""node_modules"",
+    ""**/node_modules"",
+    ""../node_modules"",
+    ""../../node_modules""
+  ]
 }"
facebook/react,c78625842239f29ff130136fff2729fd4c7c2e91,lauren,2025-10-06T04:53:21Z,"[eprh] Fix config type not being exported correctly (#34746)

Another attempt to fix #34745. I updated our fixture for eslint-v9 to
include running tsc. I believe there were 2 issues:

1. `export * from './cjs/eslint-plugin-react-hooks'` in npm/index.d.ts
was no longer correct as we updated index.ts to export default instead
of named exports
2. After fixing ^ there was a typescript error which I fixed by making
some small tweaks",fixtures/eslint-v9/yarn.lock,14,86,100,"@@ -48,13 +48,6 @@
     ""@jridgewell/trace-mapping"" ""^0.3.28""
     jsesc ""^3.0.2""
 
-""@babel/helper-annotate-as-pure@^7.27.3"":
-  version ""7.27.3""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.27.3.tgz#f31fd86b915fc4daf1f3ac6976c59be7084ed9c5""
-  integrity sha512-fXSwMQqitTGeHLBC08Eq5yXz2m37E4pJX1qAU1+2cNedz/ifv/bVXft90VeSav5nFO61EcNgwr0aJxbyPaWBPg==
-  dependencies:
-    ""@babel/types"" ""^7.27.3""
-
 ""@babel/helper-compilation-targets@^7.27.2"":
   version ""7.27.2""
   resolved ""https://registry.yarnpkg.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz#46a0f6efab808d51d29ce96858dd10ce8732733d""
@@ -66,32 +59,11 @@
     lru-cache ""^5.1.1""
     semver ""^6.3.1""
 
-""@babel/helper-create-class-features-plugin@^7.18.6"":
-  version ""7.28.3""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.28.3.tgz#3e747434ea007910c320c4d39a6b46f20f371d46""
-  integrity sha512-V9f6ZFIYSLNEbuGA/92uOvYsGCJNsuA8ESZ4ldc09bWk/j8H8TKiPw8Mk1eG6olpnO0ALHJmYfZvF4MEE4gajg==
-  dependencies:
-    ""@babel/helper-annotate-as-pure"" ""^7.27.3""
-    ""@babel/helper-member-expression-to-functions"" ""^7.27.1""
-    ""@babel/helper-optimise-call-expression"" ""^7.27.1""
-    ""@babel/helper-replace-supers"" ""^7.27.1""
-    ""@babel/helper-skip-transparent-expression-wrappers"" ""^7.27.1""
-    ""@babel/traverse"" ""^7.28.3""
-    semver ""^6.3.1""
-
 ""@babel/helper-globals@^7.28.0"":
   version ""7.28.0""
   resolved ""https://registry.yarnpkg.com/@babel/helper-globals/-/helper-globals-7.28.0.tgz#b9430df2aa4e17bc28665eadeae8aa1d985e6674""
   integrity sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==
 
-""@babel/helper-member-expression-to-functions@^7.27.1"":
-  version ""7.27.1""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.27.1.tgz#ea1211276be93e798ce19037da6f06fbb994fa44""
-  integrity sha512-E5chM8eWjTp/aNoVpcbfM7mLxu9XGLWYise2eBKGQomAk/Mb4XoxyqXTZbuTohbsl8EKqdlMhnDI2CCLfcs9wA==
-  dependencies:
-    ""@babel/traverse"" ""^7.27.1""
-    ""@babel/types"" ""^7.27.1""
-
 ""@babel/helper-module-imports@^7.27.1"":
   version ""7.27.1""
   resolved ""https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz#7ef769a323e2655e126673bb6d2d6913bbead204""
@@ -109,35 +81,6 @@
     ""@babel/helper-validator-identifier"" ""^7.27.1""
     ""@babel/traverse"" ""^7.28.3""
 
-""@babel/helper-optimise-call-expression@^7.27.1"":
-  version ""7.27.1""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.27.1.tgz#c65221b61a643f3e62705e5dd2b5f115e35f9200""
-  integrity sha512-URMGH08NzYFhubNSGJrpUEphGKQwMQYBySzat5cAByY1/YgIRkULnIy3tAMeszlL/so2HbeilYloUmSpd7GdVw==
-  dependencies:
-    ""@babel/types"" ""^7.27.1""
-
-""@babel/helper-plugin-utils@^7.18.6"":
-  version ""7.27.1""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz#ddb2f876534ff8013e6c2b299bf4d39b3c51d44c""
-  integrity sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==
-
-""@babel/helper-replace-supers@^7.27.1"":
-  version ""7.27.1""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-replace-supers/-/helper-replace-supers-7.27.1.tgz#b1ed2d634ce3bdb730e4b52de30f8cccfd692bc0""
-  integrity sha512-7EHz6qDZc8RYS5ElPoShMheWvEgERonFCs7IAonWLLUTXW59DP14bCZt89/GKyreYn8g3S83m21FelHKbeDCKA==
-  dependencies:
-    ""@babel/helper-member-expression-to-functions"" ""^7.27.1""
-    ""@babel/helper-optimise-call-expression"" ""^7.27.1""
-    ""@babel/traverse"" ""^7.27.1""
-
-""@babel/helper-skip-transparent-expression-wrappers@^7.27.1"":
-  version ""7.27.1""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.27.1.tgz#62bb91b3abba8c7f1fec0252d9dbea11b3ee7a56""
-  integrity sha512-Tub4ZKEXqbPjXgWLl2+3JpQAYBJ8+ikpQ2Ocj/q/r0LwE3UhENh7EUabyHjz2kCEsrRY83ew2DQdHluuiDQFzg==
-  dependencies:
-    ""@babel/traverse"" ""^7.27.1""
-    ""@babel/types"" ""^7.27.1""
-
 ""@babel/helper-string-parser@^7.27.1"":
   version ""7.27.1""
   resolved ""https://registry.yarnpkg.com/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz#54da796097ab19ce67ed9f88b47bb2ec49367687""
@@ -168,14 +111,6 @@
   dependencies:
     ""@babel/types"" ""^7.28.4""
 
-""@babel/plugin-proposal-private-methods@^7.18.6"":
-  version ""7.18.6""
-  resolved ""https://registry.yarnpkg.com/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz#5209de7d213457548a98436fa2882f52f4be6bea""
-  integrity sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==
-  dependencies:
-    ""@babel/helper-create-class-features-plugin"" ""^7.18.6""
-    ""@babel/helper-plugin-utils"" ""^7.18.6""
-
 ""@babel/template@^7.27.2"":
   version ""7.27.2""
   resolved ""https://registry.yarnpkg.com/@babel/template/-/template-7.27.2.tgz#fa78ceed3c4e7b63ebf6cb39e5852fca45f6809d""
@@ -198,7 +133,7 @@
     ""@babel/types"" ""^7.28.4""
     debug ""^4.3.1""
 
-""@babel/types@^7.27.1"", ""@babel/types@^7.27.3"", ""@babel/types@^7.28.2"", ""@babel/types@^7.28.4"":
+""@babel/types@^7.27.1"", ""@babel/types@^7.28.2"", ""@babel/types@^7.28.4"":
   version ""7.28.4""
   resolved ""https://registry.yarnpkg.com/@babel/types/-/types-7.28.4.tgz#0a4e618f4c60a7cd6c11cb2d48060e4dbe38ac3a""
   integrity sha512-bkFqkLhh3pMBUQQkpVgWDWq/lqzc2678eUyDlTBhRqhCHFguYYGM0Efga7tYk4TogG/3x0EEl66/OQ+WGbWB/Q==
@@ -668,18 +603,6 @@ has-flag@^4.0.0:
   resolved ""https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b""
   integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
 
-hermes-estree@0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480""
-  integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw==
-
-hermes-parser@^0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1""
-  integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA==
-  dependencies:
-    hermes-estree ""0.25.1""
-
 ignore@^5.2.0:
   version ""5.3.2""
   resolved ""https://registry.yarnpkg.com/ignore/-/ignore-5.3.2.tgz#3cd40e729f3643fd87cb04e50bf0eb722bc596f5""
@@ -912,6 +835,11 @@ type-check@^0.4.0, type-check@~0.4.0:
   dependencies:
     prelude-ls ""^1.2.1""
 
+typescript@^5.4.3:
+  version ""5.9.3""
+  resolved ""https://registry.yarnpkg.com/typescript/-/typescript-5.9.3.tgz#5b4f59e15310ab17a216f5d6cf53ee476ede670f""
+  integrity sha512-jl1vZzPDinLr9eUt3J/t7V6FgNEw9QjvBPdysz9KfQDD41fQrC2Y4vKQdiaUpFT4bXlb1RHhLpp8wtm6M5TgSw==
+
 update-browserslist-db@^1.1.3:
   version ""1.1.3""
   resolved ""https://registry.yarnpkg.com/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz#348377dd245216f9e7060ff50b15a1b740b75420""
@@ -949,12 +877,12 @@ yocto-queue@^0.1.0:
   resolved ""https://registry.yarnpkg.com/yocto-queue/-/yocto-queue-0.1.0.tgz#0294eb3dee05028d31ee1a5fa2c556a6aaf10a1b""
   integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==
 
-zod-validation-error@^3.0.3:
-  version ""3.5.3""
-  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-3.5.3.tgz#85ba33290200d8db9f043621e284f40dddefb7e5""
-  integrity sha512-OT5Y8lbUadqVZCsnyFaTQ4/O2mys4tj7PqhdbBCp7McPwvIEKfPtdA6QfPeFQK2/Rz5LgwmAXRJTugBNBi0btw==
+""zod-validation-error@^3.0.3 || ^4.0.0"":
+  version ""4.0.2""
+  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-4.0.2.tgz#bc605eba49ce0fcd598c127fee1c236be3f22918""
+  integrity sha512-Q6/nZLe6jxuU80qb/4uJ4t5v2VEZ44lzQjPDhYJNztRQ4wyWc6VF3D3Kb/fAuPetZQnhS3hnajCf9CsWesghLQ==
 
-zod@^3.22.4:
-  version ""3.25.76""
-  resolved ""https://registry.yarnpkg.com/zod/-/zod-3.25.76.tgz#26841c3f6fd22a6a2760e7ccb719179768471e34""
-  integrity sha512-gzUt/qt81nXsFGKIFcC3YnfEAx5NkunCfnDlvuBSSFS02bcXu4Lmea0AFIUwbLWxWPx3d9p8S5QoaujKcNQxcQ==
+""zod@^3.22.4 || ^4.0.0"":
+  version ""4.1.11""
+  resolved ""https://registry.yarnpkg.com/zod/-/zod-4.1.11.tgz#4aab62f76cfd45e6c6166519ba31b2ea019f75f5""
+  integrity sha512-WPsqwxITS2tzx1bzhIKsEs19ABD5vmCVa4xBo2tq/SrV4RNZtfws1EnCWQXM6yh8bD08a1idvkB5MZSBiZsjwg=="
facebook/react,c78625842239f29ff130136fff2729fd4c7c2e91,lauren,2025-10-06T04:53:21Z,"[eprh] Fix config type not being exported correctly (#34746)

Another attempt to fix #34745. I updated our fixture for eslint-v9 to
include running tsc. I believe there were 2 issues:

1. `export * from './cjs/eslint-plugin-react-hooks'` in npm/index.d.ts
was no longer correct as we updated index.ts to export default instead
of named exports
2. After fixing ^ there was a typescript error which I fixed by making
some small tweaks",packages/eslint-plugin-react-hooks/npm/index.d.ts,1,1,2,"@@ -5,4 +5,4 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-export * from './cjs/eslint-plugin-react-hooks';
+export {default} from './cjs/eslint-plugin-react-hooks';"
facebook/react,c78625842239f29ff130136fff2729fd4c7c2e91,lauren,2025-10-06T04:53:21Z,"[eprh] Fix config type not being exported correctly (#34746)

Another attempt to fix #34745. I updated our fixture for eslint-v9 to
include running tsc. I believe there were 2 issues:

1. `export * from './cjs/eslint-plugin-react-hooks'` in npm/index.d.ts
was no longer correct as we updated index.ts to export default instead
of named exports
2. After fixing ^ there was a typescript error which I fixed by making
some small tweaks",packages/eslint-plugin-react-hooks/src/index.ts,8,3,11,"@@ -44,6 +44,11 @@ const allRuleConfigs: Linter.RulesRecord = {
   ...compilerRuleConfigs,
 };
 
+type FlatConfig = {
+  plugins: Record<string, any>;
+  rules: Linter.RulesRecord;
+};
+
 const plugin = {
   meta: {
     name: 'eslint-plugin-react-hooks',
@@ -58,9 +63,9 @@ const plugin = {
       plugins: Array<string>;
       rules: Linter.RulesRecord;
     };
-    'flat/recommended': Array<Linter.Config>;
-    'recommended-latest': Array<Linter.Config>;
-    recommended: Array<Linter.Config>;
+    'flat/recommended': Array<FlatConfig>;
+    'recommended-latest': Array<FlatConfig>;
+    recommended: Array<FlatConfig>;
   },
 };
 "
facebook/react,1be3ce9996f05ceb74fd8c11f08a84a5e57098f3,"Sebastian ""Sebbie"" Silbermann",2025-10-05T23:13:22Z,[Fiber] Bail out of diffing wide objects and arrays (#34742),packages/react-reconciler/src/__tests__/ReactPerformanceTrack-test.js,327,0,327,"@@ -0,0 +1,327 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @emails react-core
+ * @jest-environment node
+ */
+
+let React;
+let ReactNoop;
+let Scheduler;
+let act;
+let useEffect;
+
+describe('ReactPerformanceTracks', () => {
+  beforeEach(() => {
+    Object.defineProperty(performance, 'measure', {
+      value: jest.fn(),
+      configurable: true,
+    });
+    console.timeStamp = () => {};
+    jest.spyOn(console, 'timeStamp').mockImplementation(() => {});
+
+    jest.resetModules();
+
+    React = require('react');
+    ReactNoop = require('react-noop-renderer');
+    Scheduler = require('scheduler');
+    act = require('internal-test-utils').act;
+    useEffect = React.useEffect;
+  });
+
+  // @gate __DEV__ && enableComponentPerformanceTrack
+  it('shows a hint if an update is triggered by a deeply equal object', async () => {
+    const App = function App({items}) {
+      Scheduler.unstable_advanceTime(10);
+      useEffect(() => {}, [items]);
+    };
+
+    Scheduler.unstable_advanceTime(1);
+    const items = ['one', 'two'];
+    await act(() => {
+      ReactNoop.render(<App items={items} />);
+    });
+
+    expect(performance.measure.mock.calls).toEqual([
+      [
+        'Mount',
+        {
+          detail: {
+            devtools: {
+              color: 'warning',
+              properties: null,
+              tooltipText: 'Mount',
+              track: 'Components ⚛',
+            },
+          },
+          end: 11,
+          start: 1,
+        },
+      ],
+    ]);
+    performance.measure.mockClear();
+
+    Scheduler.unstable_advanceTime(10);
+    await act(() => {
+      ReactNoop.render(<App items={items.concat('4')} />);
+    });
+
+    expect(performance.measure.mock.calls).toEqual([
+      [
+        '​App',
+        {
+          detail: {
+            devtools: {
+              color: 'primary-dark',
+              properties: [
+                ['Changed Props', ''],
+                ['  items', 'Array'],
+                ['+   2', '…'],
+              ],
+              tooltipText: 'App',
+              track: 'Components ⚛',
+            },
+          },
+          end: 31,
+          start: 21,
+        },
+      ],
+    ]);
+  });
+
+  // @gate __DEV__ && enableComponentPerformanceTrack
+  it('bails out of diffing wide arrays', async () => {
+    const App = function App({items}) {
+      Scheduler.unstable_advanceTime(10);
+      React.useEffect(() => {}, [items]);
+    };
+
+    Scheduler.unstable_advanceTime(1);
+    const items = Array.from({length: 1000}, (_, i) => i);
+    await act(() => {
+      ReactNoop.render(<App items={items} />);
+    });
+
+    expect(performance.measure.mock.calls).toEqual([
+      [
+        'Mount',
+        {
+          detail: {
+            devtools: {
+              color: 'warning',
+              properties: null,
+              tooltipText: 'Mount',
+              track: 'Components ⚛',
+            },
+          },
+          end: 11,
+          start: 1,
+        },
+      ],
+    ]);
+    performance.measure.mockClear();
+
+    Scheduler.unstable_advanceTime(10);
+    await act(() => {
+      ReactNoop.render(<App items={items.concat('-1')} />);
+    });
+
+    expect(performance.measure.mock.calls).toEqual([
+      [
+        '​App',
+        {
+          detail: {
+            devtools: {
+              color: 'primary-dark',
+              properties: [
+                ['Changed Props', ''],
+                ['  items', 'Array'],
+                [
+                  'Previous object has more than 100 properties. React will not attempt to diff objects with too many properties.',
+                  '',
+                ],
+                [
+                  'Next object has more than 100 properties. React will not attempt to diff objects with too many properties.',
+                  '',
+                ],
+              ],
+              tooltipText: 'App',
+              track: 'Components ⚛',
+            },
+          },
+          end: 31,
+          start: 21,
+        },
+      ],
+    ]);
+  });
+
+  // @gate __DEV__ && enableComponentPerformanceTrack
+  it('does not show all properties of wide objects', async () => {
+    const App = function App({items}) {
+      Scheduler.unstable_advanceTime(10);
+      React.useEffect(() => {}, [items]);
+    };
+
+    Scheduler.unstable_advanceTime(1);
+    await act(() => {
+      ReactNoop.render(<App data={{buffer: null}} />);
+    });
+
+    expect(performance.measure.mock.calls).toEqual([
+      [
+        'Mount',
+        {
+          detail: {
+            devtools: {
+              color: 'warning',
+              properties: null,
+              tooltipText: 'Mount',
+              track: 'Components ⚛',
+            },
+          },
+          end: 11,
+          start: 1,
+        },
+      ],
+    ]);
+    performance.measure.mockClear();
+
+    Scheduler.unstable_advanceTime(10);
+
+    const bigData = new Uint8Array(1000);
+    await act(() => {
+      ReactNoop.render(<App data={{buffer: bigData}} />);
+    });
+
+    expect(performance.measure.mock.calls).toEqual([
+      [
+        '​App',
+        {
+          detail: {
+            devtools: {
+              color: 'primary-dark',
+              properties: [
+                ['Changed Props', ''],
+                ['  data', ''],
+                ['–   buffer', 'null'],
+                ['+   buffer', 'Uint8Array'],
+                ['+     0', '0'],
+                ['+     1', '0'],
+                ['+     2', '0'],
+                ['+     3', '0'],
+                ['+     4', '0'],
+                ['+     5', '0'],
+                ['+     6', '0'],
+                ['+     7', '0'],
+                ['+     8', '0'],
+                ['+     9', '0'],
+                ['+     10', '0'],
+                ['+     11', '0'],
+                ['+     12', '0'],
+                ['+     13', '0'],
+                ['+     14', '0'],
+                ['+     15', '0'],
+                ['+     16', '0'],
+                ['+     17', '0'],
+                ['+     18', '0'],
+                ['+     19', '0'],
+                ['+     20', '0'],
+                ['+     21', '0'],
+                ['+     22', '0'],
+                ['+     23', '0'],
+                ['+     24', '0'],
+                ['+     25', '0'],
+                ['+     26', '0'],
+                ['+     27', '0'],
+                ['+     28', '0'],
+                ['+     29', '0'],
+                ['+     30', '0'],
+                ['+     31', '0'],
+                ['+     32', '0'],
+                ['+     33', '0'],
+                ['+     34', '0'],
+                ['+     35', '0'],
+                ['+     36', '0'],
+                ['+     37', '0'],
+                ['+     38', '0'],
+                ['+     39', '0'],
+                ['+     40', '0'],
+                ['+     41', '0'],
+                ['+     42', '0'],
+                ['+     43', '0'],
+                ['+     44', '0'],
+                ['+     45', '0'],
+                ['+     46', '0'],
+                ['+     47', '0'],
+                ['+     48', '0'],
+                ['+     49', '0'],
+                ['+     50', '0'],
+                ['+     51', '0'],
+                ['+     52', '0'],
+                ['+     53', '0'],
+                ['+     54', '0'],
+                ['+     55', '0'],
+                ['+     56', '0'],
+                ['+     57', '0'],
+                ['+     58', '0'],
+                ['+     59', '0'],
+                ['+     60', '0'],
+                ['+     61', '0'],
+                ['+     62', '0'],
+                ['+     63', '0'],
+                ['+     64', '0'],
+                ['+     65', '0'],
+                ['+     66', '0'],
+                ['+     67', '0'],
+                ['+     68', '0'],
+                ['+     69', '0'],
+                ['+     70', '0'],
+                ['+     71', '0'],
+                ['+     72', '0'],
+                ['+     73', '0'],
+                ['+     74', '0'],
+                ['+     75', '0'],
+                ['+     76', '0'],
+                ['+     77', '0'],
+                ['+     78', '0'],
+                ['+     79', '0'],
+                ['+     80', '0'],
+                ['+     81', '0'],
+                ['+     82', '0'],
+                ['+     83', '0'],
+                ['+     84', '0'],
+                ['+     85', '0'],
+                ['+     86', '0'],
+                ['+     87', '0'],
+                ['+     88', '0'],
+                ['+     89', '0'],
+                ['+     90', '0'],
+                ['+     91', '0'],
+                ['+     92', '0'],
+                ['+     93', '0'],
+                ['+     94', '0'],
+                ['+     95', '0'],
+                ['+     96', '0'],
+                ['+     97', '0'],
+                ['+     98', '0'],
+                ['+     99', '0'],
+                [
+                  '+     Only 100 properties are shown. React will not log more properties of this object.',
+                  '',
+                ],
+              ],
+              tooltipText: 'App',
+              track: 'Components ⚛',
+            },
+          },
+          end: 31,
+          start: 21,
+        },
+      ],
+    ]);
+  });
+});"
facebook/react,1be3ce9996f05ceb74fd8c11f08a84a5e57098f3,"Sebastian ""Sebbie"" Silbermann",2025-10-05T23:13:22Z,[Fiber] Bail out of diffing wide objects and arrays (#34742),packages/shared/ReactPerformanceTrackProperties.js,68,3,71,"@@ -18,9 +18,13 @@ const EMPTY_ARRAY = 0;
 const COMPLEX_ARRAY = 1;
 const PRIMITIVE_ARRAY = 2; // Primitive values only
 const ENTRIES_ARRAY = 3; // Tuple arrays of string and value (like Headers, Map, etc)
+
+// Showing wider objects in the devtools is not useful.
+const OBJECT_WIDTH_LIMIT = 100;
+
 function getArrayKind(array: Object): 0 | 1 | 2 | 3 {
   let kind: 0 | 1 | 2 | 3 = EMPTY_ARRAY;
-  for (let i = 0; i < array.length; i++) {
+  for (let i = 0; i < array.length && i < OBJECT_WIDTH_LIMIT; i++) {
     const value = array[i];
     if (typeof value === 'object' && value !== null) {
       if (
@@ -55,10 +59,23 @@ export function addObjectToProperties(
   indent: number,
   prefix: string,
 ): void {
+  let addedProperties = 0;
   for (const key in object) {
     if (hasOwnProperty.call(object, key) && key[0] !== '_') {
+      addedProperties++;
       const value = object[key];
       addValueToProperties(key, value, properties, indent, prefix);
+      if (addedProperties >= OBJECT_WIDTH_LIMIT) {
+        properties.push([
+          prefix +
+            '\xa0\xa0'.repeat(indent) +
+            'Only ' +
+            OBJECT_WIDTH_LIMIT +
+            ' properties are shown. React will not log more properties of this object.',
+          '',
+        ]);
+        break;
+      }
     }
   }
 }
@@ -103,7 +120,9 @@ export function addValueToProperties(
             addValueToProperties('key', key, properties, indent + 1, prefix);
           }
           let hasChildren = false;
+          let addedProperties = 0;
           for (const propKey in props) {
+            addedProperties++;
             if (propKey === 'children') {
               if (
                 props.children != null &&
@@ -123,6 +142,10 @@ export function addValueToProperties(
                 prefix,
               );
             }
+
+            if (addedProperties >= OBJECT_WIDTH_LIMIT) {
+              break;
+            }
           }
           properties.push([
             '',
@@ -135,16 +158,21 @@ export function addValueToProperties(
         let objectName = objectToString.slice(8, objectToString.length - 1);
         if (objectName === 'Array') {
           const array: Array<any> = (value: any);
+          const didTruncate = array.length > OBJECT_WIDTH_LIMIT;
           const kind = getArrayKind(array);
           if (kind === PRIMITIVE_ARRAY || kind === EMPTY_ARRAY) {
-            desc = JSON.stringify(array);
+            desc = JSON.stringify(
+              didTruncate
+                ? array.slice(0, OBJECT_WIDTH_LIMIT).concat('…')
+                : array,
+            );
             break;
           } else if (kind === ENTRIES_ARRAY) {
             properties.push([
               prefix + '\xa0\xa0'.repeat(indent) + propertyName,
               '',
             ]);
-            for (let i = 0; i < array.length; i++) {
+            for (let i = 0; i < array.length && i < OBJECT_WIDTH_LIMIT; i++) {
               const entry = array[i];
               addValueToProperties(
                 entry[0],
@@ -154,6 +182,15 @@ export function addValueToProperties(
                 prefix,
               );
             }
+            if (didTruncate) {
+              addValueToProperties(
+                OBJECT_WIDTH_LIMIT.toString(),
+                '…',
+                properties,
+                indent + 1,
+                prefix,
+              );
+            }
             return;
           }
         }
@@ -254,13 +291,39 @@ export function addObjectDiffToProperties(
   // If a property is added or removed, we just emit the property name and omit the value it had.
   // Mainly for performance. We need to minimize to only relevant information.
   let isDeeplyEqual = true;
+  let prevPropertiesChecked = 0;
   for (const key in prev) {
+    if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+      properties.push([
+        'Previous object has more than ' +
+          OBJECT_WIDTH_LIMIT +
+          ' properties. React will not attempt to diff objects with too many properties.',
+        '',
+      ]);
+      isDeeplyEqual = false;
+      break;
+    }
+
     if (!(key in next)) {
       properties.push([REMOVED + '\xa0\xa0'.repeat(indent) + key, '\u2026']);
       isDeeplyEqual = false;
     }
+    prevPropertiesChecked++;
   }
+
+  let nextPropertiesChecked = 0;
   for (const key in next) {
+    if (nextPropertiesChecked > OBJECT_WIDTH_LIMIT) {
+      properties.push([
+        'Next object has more than ' +
+          OBJECT_WIDTH_LIMIT +
+          ' properties. React will not attempt to diff objects with too many properties.',
+        '',
+      ]);
+      isDeeplyEqual = false;
+      break;
+    }
+
     if (key in prev) {
       const prevValue = prev[key];
       const nextValue = next[key];
@@ -368,6 +431,8 @@ export function addObjectDiffToProperties(
       properties.push([ADDED + '\xa0\xa0'.repeat(indent) + key, '\u2026']);
       isDeeplyEqual = false;
     }
+
+    nextPropertiesChecked++;
   }
   return isDeeplyEqual;
 }"
facebook/react,3b2a3981068e0438ca75ae34b2a98616fdaf62ac,Ruslan Lesiutin,2025-10-05T12:45:41Z,"[DevTools] Bump version of react-devtools-core for react-devtools (#34740)

This one was overlooked and yarn.lock was not synced.

Related:
- https://github.com/facebook/react/pull/34692
- https://github.com/facebook/react/pull/34723",packages/react-devtools/package.json,1,1,2,"@@ -26,7 +26,7 @@
     ""electron"": ""^23.1.2"",
     ""internal-ip"": ""^6.2.0"",
     ""minimist"": ""^1.2.3"",
-    ""react-devtools-core"": ""6.1.5"",
+    ""react-devtools-core"": ""7.0.0"",
     ""update-notifier"": ""^2.1.0""
   }
 }"
facebook/react,3b2a3981068e0438ca75ae34b2a98616fdaf62ac,Ruslan Lesiutin,2025-10-05T12:45:41Z,"[DevTools] Bump version of react-devtools-core for react-devtools (#34740)

This one was overlooked and yarn.lock was not synced.

Related:
- https://github.com/facebook/react/pull/34692
- https://github.com/facebook/react/pull/34723",yarn.lock,8,8,16,"@@ -18233,12 +18233,12 @@ zip-stream@^2.1.2:
     compress-commons ""^2.1.1""
     readable-stream ""^3.4.0""
 
-zod-validation-error@^3.0.3:
-  version ""3.4.0""
-  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-3.4.0.tgz#3a8a1f55c65579822d7faa190b51336c61bee2a6""
-  integrity sha512-ZOPR9SVY6Pb2qqO5XHt+MkkTRxGXb4EVtnjc9JpXUOtUB1T9Ru7mZOT361AN3MsetVe7R0a1KZshJDZdgp9miQ==
+""zod-validation-error@^3.0.3 || ^4.0.0"":
+  version ""4.0.2""
+  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-4.0.2.tgz#bc605eba49ce0fcd598c127fee1c236be3f22918""
+  integrity sha512-Q6/nZLe6jxuU80qb/4uJ4t5v2VEZ44lzQjPDhYJNztRQ4wyWc6VF3D3Kb/fAuPetZQnhS3hnajCf9CsWesghLQ==
 
-zod@^3.22.4:
-  version ""3.24.2""
-  resolved ""https://registry.yarnpkg.com/zod/-/zod-3.24.2.tgz#8efa74126287c675e92f46871cfc8d15c34372b3""
-  integrity sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ==
+""zod@^3.22.4 || ^4.0.0"":
+  version ""4.1.11""
+  resolved ""https://registry.yarnpkg.com/zod/-/zod-4.1.11.tgz#4aab62f76cfd45e6c6166519ba31b2ea019f75f5""
+  integrity sha512-WPsqwxITS2tzx1bzhIKsEs19ABD5vmCVa4xBo2tq/SrV4RNZtfws1EnCWQXM6yh8bD08a1idvkB5MZSBiZsjwg=="
facebook/react,62ff1e61fce3eca9346716715679e7604477d84d,Ruslan Lesiutin,2025-10-05T12:35:07Z,"Revert ""[DevTools] Always include the root in the timeline and select it by default"" (#34739)

Reverts facebook/react#34654",packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseTab.js,0,16,16,"@@ -34,10 +34,6 @@ import {
   SuspenseTreeStateContext,
 } from './SuspenseTreeContext';
 import {StoreContext, OptionsContext} from '../context';
-import {
-  TreeDispatcherContext,
-  TreeStateContext,
-} from '../Components/TreeContext';
 import Button from '../Button';
 import Toggle from '../Toggle';
 import typeof {SyntheticPointerEvent} from 'react-dom-bindings/src/events/SyntheticEvent';
@@ -185,18 +181,6 @@ function SuspenseTab(_: {}) {
     treeListHorizontalFraction,
   } = state;
 
-  const {inspectedElementID} = useContext(TreeStateContext);
-  const {timeline} = useContext(SuspenseTreeStateContext);
-  const treeDispatch = useContext(TreeDispatcherContext);
-  useLayoutEffect(() => {
-    // If the inspected element is still null and we've loaded a timeline, we can set the initial selection.
-    // TODO: This tab should use its own source of truth instead so we only show suspense boundaries.
-    if (inspectedElementID === null && timeline.length > 0) {
-      const milestone = timeline[timeline.length - 1];
-      treeDispatch({type: 'SELECT_ELEMENT_BY_ID', payload: milestone});
-    }
-  }, [timeline, inspectedElementID]);
-
   useLayoutEffect(() => {
     const wrapperElement = wrapperTreeRef.current;
 "
facebook/react,0e79784702927f1d1c6c212475e7c5141fa13a8a,Sebastian Markbåge,2025-10-05T12:13:22Z,"[DevTools] Use documentElement to override cmd+F (#34734)

We override Cmd+F to jump to our search input instead of searching
through the HTML. This is ofc critical since our view virtualized.

However, Chrome DevTools installs its own listener on the document as
well (in the bubble phase) so if we prevent it at the document level
it's too late and it ends up stealing the focus instead. If we instead
listen at the documentElement it works as intended.",packages/react-devtools-shared/src/devtools/views/SearchInput.js,10,5,15,"@@ -64,8 +64,9 @@ export default function SearchInput({
     const handleKeyDown = (event: KeyboardEvent) => {
       const {key, metaKey} = event;
       if (key === 'f' && metaKey) {
-        if (inputRef.current !== null) {
-          inputRef.current.focus();
+        const inputElement = inputRef.current;
+        if (inputElement !== null) {
+          inputElement.focus();
           event.preventDefault();
           event.stopPropagation();
         }
@@ -75,10 +76,14 @@ export default function SearchInput({
     // It's important to listen to the ownerDocument to support the browser extension.
     // Here we use portals to render individual tabs (e.g. Profiler),
     // and the root document might belong to a different window.
-    const ownerDocument = inputRef.current.ownerDocument;
-    ownerDocument.addEventListener('keydown', handleKeyDown);
+    const ownerDocumentElement = inputRef.current.ownerDocument.documentElement;
+    if (ownerDocumentElement === null) {
+      return;
+    }
+    ownerDocumentElement.addEventListener('keydown', handleKeyDown);
 
-    return () => ownerDocument.removeEventListener('keydown', handleKeyDown);
+    return () =>
+      ownerDocumentElement.removeEventListener('keydown', handleKeyDown);
   }, []);
 
   return ("
facebook/react,a2329c10ffc153303ad5a65b99d91d8500ceabdd,lauren,2025-10-03T21:58:06Z,"[eprh] 6.1.1 changelog (#34726)

Update changelog for 6.1.1",packages/eslint-plugin-react-hooks/CHANGELOG.md,12,1,13,"@@ -1,6 +1,17 @@
+## 6.1.1
+
+**Note:** 6.1.0 accidentally allowed use of `recommended` without flat config, causing errors when used with ESLint v9's `defineConfig()` helper. This has been fixed in 6.1.1.
+
+- Fix `recommended` config for flat config compatibility. The `recommended` config has been converted to flat config format. Non-flat config users should use `recommended-legacy` instead. ([@poteto](https://github.com/poteto) in [#34700](https://github.com/facebook/react/pull/34700))
+- Add `recommended-latest` and `recommended-latest-legacy` configs that include React Compiler rules. ([@poteto](https://github.com/poteto) in [#34675](https://github.com/facebook/react/pull/34675))
+- Remove unused `NoUnusedOptOutDirectives` rule. ([@poteto](https://github.com/poteto) in [#34703](https://github.com/facebook/react/pull/34703))
+- Remove `hermes-parser` and dependency. ([@poteto](https://github.com/poteto) in [#34719](https://github.com/facebook/react/pull/34719))
+- Remove `@babel/plugin-proposal-private-methods` dependency. ([@ArnaudBarre](https://github.com/ArnaudBarre) and [@josephsavona](https://github.com/josephsavona) in [#34715](https://github.com/facebook/react/pull/34715))
+- Update for Zod v3/v4 compatibility. ([@kolian](https://github.com/kolvian) and [@josephsavona](https://github.com/josephsavona) in [#34717](https://github.com/facebook/react/pull/34717))
+
 ## 6.1.0
 
-**Note:** Version 6.0.0 was mistakenly released and immediately deprecated and untagged on npm. This is the first official 6.x major release and includes breaking changes. 
+**Note:** Version 6.0.0 was mistakenly released and immediately deprecated and untagged on npm. This is the first official 6.x major release and includes breaking changes.
 
 - **Breaking:** Require Node.js 18 or newer. ([@michaelfaith](https://github.com/michaelfaith) in [#32458](https://github.com/facebook/react/pull/32458))
 - **Breaking:** Flat config is now the default `recommended` preset. Legacy config moved to `recommended-legacy`. ([@michaelfaith](https://github.com/michaelfaith) in [#32457](https://github.com/facebook/react/pull/32457))"
facebook/react,d3f84a433a57562be1fc2b3331ddc54bdb946582,Ruslan Lesiutin,2025-10-03T21:03:48Z,"[DevTools] Bump version for extensions (#34723)

`./scripts/devtools/prepare-release.js` actually does automate the
version bump, but only path / minor ones.",packages/react-devtools-extensions/chrome/manifest.json,2,2,4,"@@ -2,8 +2,8 @@
   ""manifest_version"": 3,
   ""name"": ""React Developer Tools"",
   ""description"": ""Adds React debugging tools to the Chrome Developer Tools."",
-  ""version"": ""6.1.5"",
-  ""version_name"": ""6.1.5"",
+  ""version"": ""7.0.0"",
+  ""version_name"": ""7.0.0"",
   ""minimum_chrome_version"": ""114"",
   ""icons"": {
     ""16"": ""icons/16-production.png"","
facebook/react,d3f84a433a57562be1fc2b3331ddc54bdb946582,Ruslan Lesiutin,2025-10-03T21:03:48Z,"[DevTools] Bump version for extensions (#34723)

`./scripts/devtools/prepare-release.js` actually does automate the
version bump, but only path / minor ones.",packages/react-devtools-extensions/edge/manifest.json,2,2,4,"@@ -2,8 +2,8 @@
   ""manifest_version"": 3,
   ""name"": ""React Developer Tools"",
   ""description"": ""Adds React debugging tools to the Microsoft Edge Developer Tools."",
-  ""version"": ""6.1.5"",
-  ""version_name"": ""6.1.5"",
+  ""version"": ""7.0.0"",
+  ""version_name"": ""7.0.0"",
   ""minimum_chrome_version"": ""114"",
   ""icons"": {
     ""16"": ""icons/16-production.png"","
facebook/react,d3f84a433a57562be1fc2b3331ddc54bdb946582,Ruslan Lesiutin,2025-10-03T21:03:48Z,"[DevTools] Bump version for extensions (#34723)

`./scripts/devtools/prepare-release.js` actually does automate the
version bump, but only path / minor ones.",packages/react-devtools-extensions/firefox/manifest.json,1,1,2,"@@ -2,7 +2,7 @@
   ""manifest_version"": 3,
   ""name"": ""React Developer Tools"",
   ""description"": ""Adds React debugging tools to the Firefox Developer Tools."",
-  ""version"": ""6.1.5"",
+  ""version"": ""7.0.0"",
   ""browser_specific_settings"": {
     ""gecko"": {
       ""id"": ""@react-devtools"","
facebook/react,bc2356176bca3e42e84ce8d196fdc525677cc36b,lauren,2025-10-03T20:37:55Z,"[ci] Fix incorrect filtering logic for prereleases (#34725)

The workflow was correctly publishing the package(s) specified in
`only`, but due to incorrect logic it would also run the 'Publish all
packages' step.",.github/workflows/runtime_prereleases.yml,1,1,2,"@@ -93,7 +93,7 @@ jobs:
             --tags=${{ inputs.dist_tag }} \
             --skipPackages=${{ inputs.skip_packages }} ${{ (inputs.dry && '') || '\'}}
             ${{ inputs.dry && '--dry' || '' }}
-      - if: '${{ !(inputs.skip_packages && inputs.only_packages) }}'
+      - if: '${{ !inputs.skip_packages && !inputs.only_packages }}'
         name: 'Publish all packages'
         run: |
           scripts/release/publish.js \"
facebook/react,4fdf7cf249ecb205d20b65b5208d113ea664cb9a,lauren,2025-10-03T18:41:34Z,"[ci] Fix runtime_prereleases (#34722)

When using the ""only"" or ""skip"" option in the workflow, we were adding
the `--skipTests` param, but that isn't an actual option:
https://github.com/facebook/react/blob/1de32a5e75fe96ac3c1b728a117010e11673f6ed/scripts/release/publish-commands/parse-params.js",.github/workflows/runtime_prereleases.yml,0,2,2,"@@ -82,7 +82,6 @@ jobs:
         run: |
           scripts/release/publish.js \
             --ci \
-            --skipTests \
             --tags=${{ inputs.dist_tag }} \
             --onlyPackages=${{ inputs.only_packages }} ${{ (inputs.dry && '') || '\'}}
             ${{ inputs.dry && '--dry' || '' }}
@@ -91,7 +90,6 @@ jobs:
         run: |
           scripts/release/publish.js \
             --ci \
-            --skipTests \
             --tags=${{ inputs.dist_tag }} \
             --skipPackages=${{ inputs.skip_packages }} ${{ (inputs.dry && '') || '\'}}
             ${{ inputs.dry && '--dry' || '' }}"
facebook/react,614a945d9d1031fadcf211a632cb2d7fda495a4f,"Sebastian ""Sebbie"" Silbermann",2025-10-03T17:48:28Z,"React DevTools 7.0.0 (#34692)

[Preview](https://github.com/eps1lon/react/blob/sebbie/09-28-react_devtools_7.0.0/packages/react-devtools/CHANGELOG.md#700)

Suspense tab is omitted since that's gated on Canary or 19.3.

Will draft a separate blog post for suspended by and open-in-editor
instructions while the extension is in review.",packages/react-devtools-core/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-devtools-core"",
-  ""version"": ""6.1.5"",
+  ""version"": ""7.0.0"",
   ""description"": ""Use react-devtools outside of the browser"",
   ""license"": ""MIT"",
   ""main"": ""./dist/backend.js"","
facebook/react,614a945d9d1031fadcf211a632cb2d7fda495a4f,"Sebastian ""Sebbie"" Silbermann",2025-10-03T17:48:28Z,"React DevTools 7.0.0 (#34692)

[Preview](https://github.com/eps1lon/react/blob/sebbie/09-28-react_devtools_7.0.0/packages/react-devtools/CHANGELOG.md#700)

Suspense tab is omitted since that's gated on Canary or 19.3.

Will draft a separate blog post for suspended by and open-in-editor
instructions while the extension is in review.",packages/react-devtools-inline/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-devtools-inline"",
-  ""version"": ""6.1.5"",
+  ""version"": ""7.0.0"",
   ""description"": ""Embed react-devtools within a website"",
   ""license"": ""MIT"",
   ""main"": ""./dist/backend.js"","
facebook/react,614a945d9d1031fadcf211a632cb2d7fda495a4f,"Sebastian ""Sebbie"" Silbermann",2025-10-03T17:48:28Z,"React DevTools 7.0.0 (#34692)

[Preview](https://github.com/eps1lon/react/blob/sebbie/09-28-react_devtools_7.0.0/packages/react-devtools/CHANGELOG.md#700)

Suspense tab is omitted since that's gated on Canary or 19.3.

Will draft a separate blog post for suspended by and open-in-editor
instructions while the extension is in review.",packages/react-devtools-timeline/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""private"": true,
   ""name"": ""react-devtools-timeline"",
-  ""version"": ""6.1.5"",
+  ""version"": ""7.0.0"",
   ""license"": ""MIT"",
   ""dependencies"": {
     ""@elg/speedscope"": ""1.9.0-a6f84db"","
facebook/react,614a945d9d1031fadcf211a632cb2d7fda495a4f,"Sebastian ""Sebbie"" Silbermann",2025-10-03T17:48:28Z,"React DevTools 7.0.0 (#34692)

[Preview](https://github.com/eps1lon/react/blob/sebbie/09-28-react_devtools_7.0.0/packages/react-devtools/CHANGELOG.md#700)

Suspense tab is omitted since that's gated on Canary or 19.3.

Will draft a separate blog post for suspended by and open-in-editor
instructions while the extension is in review.",packages/react-devtools/CHANGELOG.md,43,0,43,"@@ -4,6 +4,49 @@
 
 ---
 
+### 7.0.0
+Oct 2, 2025
+
+Add a ""suspended by"" section showing all causes of why the inspected element suspended. This includes:
+
+- `await` in Server Components  
+- `React.lazy`  
+- `use()`  
+- suspensey images, CSS, and fonts
+
+Add a Code Editor Sidebar Pane in the Chrome Sources Tab (@sebmarkbage [#33968](https://github.com/facebook/react/pull/33968), [#33987](https://github.com/facebook/react/pull/33987), [#33988](https://github.com/facebook/react/pull/33988))  
+
+Add Option to Open Local Files directly in External Editor (@sebmarkbage [#33983](https://github.com/facebook/react/pull/33983), [#33985](https://github.com/facebook/react/pull/33985), [#33965](https://github.com/facebook/react/pull/33965))  
+
+#### Other changes
+
+- Allow inspection of React tree before streaming has finished (@eps1lon [#34360](https://github.com/facebook/react/pull/34360))  
+- Always attempt to mount dehydrated roots (@eps1lon [#34209](https://github.com/facebook/react/pull/34209))  
+- Show `name` prop of Suspense / Activity in the Components Tree view (@sebmarkbage [#34135](https://github.com/facebook/react/pull/34135))  
+- 1st class support of used Thenables (@sebmarkbage, @eps1lon: [#32989](https://github.com/facebook/react/pull/32989), [#34097](https://github.com/facebook/react/pull/34097))  
+- Allow inspecting cause, name, message, stack of Errors in props (@eps1lon [#33023](https://github.com/facebook/react/pull/33023))  
+- Allow Introspection of React Elements and React.lazy (@sebmarkbage [#34129](https://github.com/facebook/react/pull/34129))  
+- Fix ""View source"" for sources with URLs that aren't normalized (@eps1lon [#32951](https://github.com/facebook/react/pull/32951))  
+- Fix symbolication with Index Source Maps (@eps1lon [#34300](https://github.com/facebook/react/pull/34300))  
+- Ignore List Stack Traces (@sebmarkbage [#34210](https://github.com/facebook/react/pull/34210))  
+- Linkify Source View (@sebmarkbage [#33954](https://github.com/facebook/react/pull/33954))  
+- Only show state for ClassComponents (@sebmarkbage [#34091](https://github.com/facebook/react/pull/34091))  
+- Show Owner Stacks in ""rendered by"" View (@sebmarkbage [#34130](https://github.com/facebook/react/pull/34130))  
+- Stop mounting empty roots (@eps1lon [#34467](https://github.com/facebook/react/pull/34467))  
+- Show changed hooks names in the Profiler tab (@piotrski [#31398](https://github.com/facebook/react/pull/31398))  
+- Display native tag for host components for Native (@ruslan [#32762](https://github.com/facebook/react/pull/32762))  
+- Static Components panel layout (@ruslan [#33696](https://github.com/facebook/react/pull/33696), [#33517](https://github.com/facebook/react/pull/33517), [#34088](https://github.com/facebook/react/pull/34088))  
+- Add Badge to Owners and sometimes stack traces (@sebmarkbage [#34106](https://github.com/facebook/react/pull/34106))  
+- Make a non-editable name of KeyValue clickable ([34095](https://github.com/facebook/react/pull/34095))  
+- Only inspect elements on left mouseclick (@eps1lon [#34361](https://github.com/facebook/react/pull/34361))  
+- Rerender when the browser theme changes (@sebmarkbage [#33992](https://github.com/facebook/react/pull/33992))  
+- Stop using native `title` for buttons/icons (@eps1lon [#34379](https://github.com/facebook/react/pull/34379))  
+- Style clickable Owner components with angle brackets and bold (@sebmarkbage [#34096](https://github.com/facebook/react/pull/34096))  
+- Swap Components tab layout based on container size (@eps1lon [#34035](https://github.com/facebook/react/pull/34035))  
+- Use Visually Lighter Skeletons (@sebmarkbage [#34185](https://github.com/facebook/react/pull/34185))
+
+---
+
 ### 6.1.5
 July 4, 2025
 "
facebook/react,614a945d9d1031fadcf211a632cb2d7fda495a4f,"Sebastian ""Sebbie"" Silbermann",2025-10-03T17:48:28Z,"React DevTools 7.0.0 (#34692)

[Preview](https://github.com/eps1lon/react/blob/sebbie/09-28-react_devtools_7.0.0/packages/react-devtools/CHANGELOG.md#700)

Suspense tab is omitted since that's gated on Canary or 19.3.

Will draft a separate blog post for suspended by and open-in-editor
instructions while the extension is in review.",packages/react-devtools/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-devtools"",
-  ""version"": ""6.1.5"",
+  ""version"": ""7.0.0"",
   ""description"": ""Use react-devtools outside of the browser"",
   ""license"": ""MIT"",
   ""repository"": {"
facebook/react,d6eb735938bc67b41ad723206ea395ba4d761139,Joseph Savona,2025-10-03T17:08:20Z,"[compiler] Update for Zod v3/v4 compatibility (#34717)

Partial redo of #34710. The changes there tried to use `z.function(args,
return)` to be compatible across Zod v3 and v4, but Zod 4's function API
has completely changed. Instead, I've updated to just use `z.any()`
where we expect a function, and manually validate that it's a function
before we call the value. We already have validation of the return type
(also using Zod).

Co-authored-by: kolvian <eliot@pontarelli.com>",compiler/packages/babel-plugin-react-compiler/package.json,2,2,4,"@@ -52,8 +52,8 @@
     ""react-dom"": ""0.0.0-experimental-4beb1fd8-20241118"",
     ""ts-jest"": ""^29.1.1"",
     ""ts-node"": ""^10.9.2"",
-    ""zod"": ""^3.22.4"",
-    ""zod-validation-error"": ""^2.1.0""
+    ""zod"": ""^3.22.4 || ^4.0.0"",
+    ""zod-validation-error"": ""^3.0.3 || ^4.0.0""
   },
   ""resolutions"": {
     ""./**/@babel/parser"": ""7.7.4"","
facebook/react,d6eb735938bc67b41ad723206ea395ba4d761139,Joseph Savona,2025-10-03T17:08:20Z,"[compiler] Update for Zod v3/v4 compatibility (#34717)

Partial redo of #34710. The changes there tried to use `z.function(args,
return)` to be compatible across Zod v3 and v4, but Zod 4's function API
has completely changed. Instead, I've updated to just use `z.any()`
where we expect a function, and manually validate that it's a function
before we call the value. We already have validation of the return type
(also using Zod).

Co-authored-by: kolvian <eliot@pontarelli.com>",compiler/packages/babel-plugin-react-compiler/src/HIR/Environment.ts,8,2,10,"@@ -159,7 +159,7 @@ export const EnvironmentConfigSchema = z.object({
    * A function that, given the name of a module, can optionally return a description
    * of that module's type signature.
    */
-  moduleTypeProvider: z.nullable(z.function().args(z.string())).default(null),
+  moduleTypeProvider: z.nullable(z.any()).default(null),
 
   /**
    * A list of functions which the application compiles as macros, where
@@ -249,7 +249,7 @@ export const EnvironmentConfigSchema = z.object({
    * Allows specifying a function that can populate HIR with type information from
    * Flow
    */
-  flowTypeProvider: z.nullable(z.function().args(z.string())).default(null),
+  flowTypeProvider: z.nullable(z.any()).default(null),
 
   /**
    * Enables inference of optional dependency chains. Without this flag
@@ -906,6 +906,12 @@ export class Environment {
       if (moduleTypeProvider == null) {
         return null;
       }
+      if (typeof moduleTypeProvider !== 'function') {
+        CompilerError.throwInvalidConfig({
+          reason: `Expected a function for \`moduleTypeProvider\``,
+          loc,
+        });
+      }
       const unparsedModuleConfig = moduleTypeProvider(moduleName);
       if (unparsedModuleConfig != null) {
         const parsedModuleConfig = TypeSchema.safeParse(unparsedModuleConfig);"
facebook/react,d6eb735938bc67b41ad723206ea395ba4d761139,Joseph Savona,2025-10-03T17:08:20Z,"[compiler] Update for Zod v3/v4 compatibility (#34717)

Partial redo of #34710. The changes there tried to use `z.function(args,
return)` to be compatible across Zod v3 and v4, but Zod 4's function API
has completely changed. Instead, I've updated to just use `z.any()`
where we expect a function, and manually validate that it's a function
before we call the value. We already have validation of the return type
(also using Zod).

Co-authored-by: kolvian <eliot@pontarelli.com>",compiler/packages/babel-plugin-react-compiler/src/__tests__/envConfig-test.ts,2,2,4,"@@ -20,7 +20,7 @@ describe('parseConfigPragma()', () => {
         validateHooksUsage: 1,
       } as any);
     }).toThrowErrorMatchingInlineSnapshot(
-      `""Error: Could not validate environment config. Update React Compiler config to fix the error. Validation error: Expected boolean, received number at ""validateHooksUsage"".""`,
+      `""Error: Could not validate environment config. Update React Compiler config to fix the error. Validation error: Invalid input: expected boolean, received number at ""validateHooksUsage"".""`,
     );
   });
 
@@ -38,7 +38,7 @@ describe('parseConfigPragma()', () => {
         ],
       } as any);
     }).toThrowErrorMatchingInlineSnapshot(
-      `""Error: Could not validate environment config. Update React Compiler config to fix the error. Validation error: autodepsIndex must be > 0 at ""inferEffectDependencies[0].autodepsIndex"".""`,
+      `""Error: Could not validate environment config. Update React Compiler config to fix the error. Validation error: AutodepsIndex must be > 0 at ""inferEffectDependencies[0].autodepsIndex"".""`,
     );
   });
 "
facebook/react,d6eb735938bc67b41ad723206ea395ba4d761139,Joseph Savona,2025-10-03T17:08:20Z,"[compiler] Update for Zod v3/v4 compatibility (#34717)

Partial redo of #34710. The changes there tried to use `z.function(args,
return)` to be compatible across Zod v3 and v4, but Zod 4's function API
has completely changed. Instead, I've updated to just use `z.any()`
where we expect a function, and manually validate that it's a function
before we call the value. We already have validation of the return type
(also using Zod).

Co-authored-by: kolvian <eliot@pontarelli.com>",compiler/packages/eslint-plugin-react-compiler/package.json,2,2,4,"@@ -15,8 +15,8 @@
     ""@babel/core"": ""^7.24.4"",
     ""@babel/parser"": ""^7.24.4"",
     ""hermes-parser"": ""^0.25.1"",
-    ""zod"": ""^3.22.4"",
-    ""zod-validation-error"": ""^3.0.3""
+    ""zod"": ""^3.22.4 || ^4.0.0"",
+    ""zod-validation-error"": ""^3.0.3 || ^4.0.0""
   },
   ""devDependencies"": {
     ""@babel/preset-env"": ""^7.22.4"","
facebook/react,d6eb735938bc67b41ad723206ea395ba4d761139,Joseph Savona,2025-10-03T17:08:20Z,"[compiler] Update for Zod v3/v4 compatibility (#34717)

Partial redo of #34710. The changes there tried to use `z.function(args,
return)` to be compatible across Zod v3 and v4, but Zod 4's function API
has completely changed. Instead, I've updated to just use `z.any()`
where we expect a function, and manually validate that it's a function
before we call the value. We already have validation of the return type
(also using Zod).

Co-authored-by: kolvian <eliot@pontarelli.com>",compiler/packages/react-compiler-healthcheck/package.json,2,2,4,"@@ -17,8 +17,8 @@
     ""fast-glob"": ""^3.3.2"",
     ""ora"": ""5.4.1"",
     ""yargs"": ""^17.7.2"",
-    ""zod"": ""^3.22.4"",
-    ""zod-validation-error"": ""^3.0.3""
+    ""zod"": ""^3.22.4 || ^4.0.0"",
+    ""zod-validation-error"": ""^3.0.3 || ^4.0.0""
   },
   ""devDependencies"": {},
   ""engines"": {"
facebook/react,d6eb735938bc67b41ad723206ea395ba4d761139,Joseph Savona,2025-10-03T17:08:20Z,"[compiler] Update for Zod v3/v4 compatibility (#34717)

Partial redo of #34710. The changes there tried to use `z.function(args,
return)` to be compatible across Zod v3 and v4, but Zod 4's function API
has completely changed. Instead, I've updated to just use `z.any()`
where we expect a function, and manually validate that it's a function
before we call the value. We already have validation of the return type
(also using Zod).

Co-authored-by: kolvian <eliot@pontarelli.com>",compiler/packages/react-mcp-server/package.json,1,1,2,"@@ -24,7 +24,7 @@
     ""html-to-text"": ""^9.0.5"",
     ""prettier"": ""^3.3.3"",
     ""puppeteer"": ""^24.7.2"",
-    ""zod"": ""^3.23.8""
+    ""zod"": ""^3.22.4 || ^4.0.0""
   },
   ""devDependencies"": {
     ""@types/html-to-text"": ""^9.0.4"","
facebook/react,d6eb735938bc67b41ad723206ea395ba4d761139,Joseph Savona,2025-10-03T17:08:20Z,"[compiler] Update for Zod v3/v4 compatibility (#34717)

Partial redo of #34710. The changes there tried to use `z.function(args,
return)` to be compatible across Zod v3 and v4, but Zod 4's function API
has completely changed. Instead, I've updated to just use `z.any()`
where we expect a function, and manually validate that it's a function
before we call the value. We already have validation of the return type
(also using Zod).

Co-authored-by: kolvian <eliot@pontarelli.com>",compiler/yarn.lock,12,37,49,"@@ -10486,16 +10486,7 @@ string-length@^4.0.1:
     char-regex ""^1.0.2""
     strip-ansi ""^6.0.0""
 
-""string-width-cjs@npm:string-width@^4.2.0"":
-  version ""4.2.3""
-  resolved ""https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz""
-  integrity sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==
-  dependencies:
-    emoji-regex ""^8.0.0""
-    is-fullwidth-code-point ""^3.0.0""
-    strip-ansi ""^6.0.1""
-
-string-width@^4.1.0, string-width@^4.2.0, string-width@^4.2.3:
+""string-width-cjs@npm:string-width@^4.2.0"", string-width@^4.1.0, string-width@^4.2.0, string-width@^4.2.3:
   version ""4.2.3""
   resolved ""https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz""
   integrity sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==
@@ -10568,14 +10559,7 @@ string_decoder@~1.1.1:
   dependencies:
     safe-buffer ""~5.1.0""
 
-""strip-ansi-cjs@npm:strip-ansi@^6.0.1"":
-  version ""6.0.1""
-  resolved ""https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz""
-  integrity sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==
-  dependencies:
-    ansi-regex ""^5.0.1""
-
-strip-ansi@^6.0.0, strip-ansi@^6.0.1:
+""strip-ansi-cjs@npm:strip-ansi@^6.0.1"", strip-ansi@^6.0.0, strip-ansi@^6.0.1:
   version ""6.0.1""
   resolved ""https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz""
   integrity sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==
@@ -11352,7 +11336,7 @@ workerpool@^6.5.1:
   resolved ""https://registry.npmjs.org/workerpool/-/workerpool-6.5.1.tgz""
   integrity sha512-Fs4dNYcsdpYSAfVxhnl1L5zTksjvOJxtC5hzMNl+1t9B8hTJTdKDyZ5ju7ztgPy+ft9tBFXoOlDNiOT9WUXZlA==
 
-""wrap-ansi-cjs@npm:wrap-ansi@^7.0.0"":
+""wrap-ansi-cjs@npm:wrap-ansi@^7.0.0"", wrap-ansi@^7.0.0:
   version ""7.0.0""
   resolved ""https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz""
   integrity sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==
@@ -11370,15 +11354,6 @@ wrap-ansi@^6.2.0:
     string-width ""^4.1.0""
     strip-ansi ""^6.0.0""
 
-wrap-ansi@^7.0.0:
-  version ""7.0.0""
-  resolved ""https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz""
-  integrity sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==
-  dependencies:
-    ansi-styles ""^4.0.0""
-    string-width ""^4.1.0""
-    strip-ansi ""^6.0.0""
-
 wrap-ansi@^8.1.0:
   version ""8.1.0""
   resolved ""https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz""
@@ -11530,17 +11505,17 @@ zod-to-json-schema@^3.24.1:
   resolved ""https://registry.npmjs.org/zod-to-json-schema/-/zod-to-json-schema-3.24.5.tgz""
   integrity sha512-/AuWwMP+YqiPbsJx5D6TfgRTc4kTLjsh5SOcd4bLsfUg2RcEXrFMJl1DGgdHy2aCfsIA/cr/1JM0xcB2GZji8g==
 
-zod-validation-error@^2.1.0:
-  version ""2.1.0""
-  resolved ""https://registry.npmjs.org/zod-validation-error/-/zod-validation-error-2.1.0.tgz""
-  integrity sha512-VJh93e2wb4c3tWtGgTa0OF/dTt/zoPCPzXq4V11ZjxmEAFaPi/Zss1xIZdEB5RD8GD00U0/iVXgqkF77RV7pdQ==
+""zod-validation-error@^3.0.3 || ^4.0.0"":
+  version ""4.0.2""
+  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-4.0.2.tgz#bc605eba49ce0fcd598c127fee1c236be3f22918""
+  integrity sha512-Q6/nZLe6jxuU80qb/4uJ4t5v2VEZ44lzQjPDhYJNztRQ4wyWc6VF3D3Kb/fAuPetZQnhS3hnajCf9CsWesghLQ==
 
-zod-validation-error@^3.0.3:
-  version ""3.0.3""
-  resolved ""https://registry.npmjs.org/zod-validation-error/-/zod-validation-error-3.0.3.tgz""
-  integrity sha512-cETTrcMq3Ze58vhdR0zD37uJm/694I6mAxcf/ei5bl89cC++fBNxrC2z8lkFze/8hVMPwrbtrwXHR2LB50fpHw==
+""zod@^3.22.4 || ^4.0.0"":
+  version ""4.1.11""
+  resolved ""https://registry.yarnpkg.com/zod/-/zod-4.1.11.tgz#4aab62f76cfd45e6c6166519ba31b2ea019f75f5""
+  integrity sha512-WPsqwxITS2tzx1bzhIKsEs19ABD5vmCVa4xBo2tq/SrV4RNZtfws1EnCWQXM6yh8bD08a1idvkB5MZSBiZsjwg==
 
-zod@^3.22.4, zod@^3.23.8, zod@^3.24.1:
+zod@^3.23.8, zod@^3.24.1:
   version ""3.24.3""
   resolved ""https://registry.npmjs.org/zod/-/zod-3.24.3.tgz""
   integrity sha512-HhY1oqzWCQWuUqvBFnsyrtZRhyPeR7SUGv+C4+MsisMuVfSPx8HpwWqH8tRahSlt6M3PiFAcoeFhZAqIXTxoSg=="
facebook/react,d6eb735938bc67b41ad723206ea395ba4d761139,Joseph Savona,2025-10-03T17:08:20Z,"[compiler] Update for Zod v3/v4 compatibility (#34717)

Partial redo of #34710. The changes there tried to use `z.function(args,
return)` to be compatible across Zod v3 and v4, but Zod 4's function API
has completely changed. Instead, I've updated to just use `z.any()`
where we expect a function, and manually validate that it's a function
before we call the value. We already have validation of the return type
(also using Zod).

Co-authored-by: kolvian <eliot@pontarelli.com>",packages/eslint-plugin-react-hooks/package.json,2,2,4,"@@ -41,8 +41,8 @@
   ""dependencies"": {
     ""@babel/core"": ""^7.24.4"",
     ""@babel/parser"": ""^7.24.4"",
-    ""zod"": ""^3.22.4"",
-    ""zod-validation-error"": ""^3.0.3""
+    ""zod"": ""^3.22.4 || ^4.0.0"",
+    ""zod-validation-error"": ""^3.0.3 || ^4.0.0""
   },
   ""devDependencies"": {
     ""@babel/eslint-parser"": ""^7.11.4"","
facebook/react,71753ac90a009ddefe2f7653165902d55edd1898,lauren,2025-10-03T16:58:00Z,"[eprh] Remove hermes-parser (#34719)

We will be focusing eslint-plugin-react-hooks as the primary OSS-only
package for our lint plugin. eslint-plugin-react-compiler will remain as
a Meta only package as some limitations of our internal infra require us
to use packages that aren't widely adopted by the rest of the industry.

This PR removes `hermes-parser`, which was meant to support parsing Flow
syntax.",packages/eslint-plugin-react-hooks/package.json,4,5,9,"@@ -41,7 +41,6 @@
   ""dependencies"": {
     ""@babel/core"": ""^7.24.4"",
     ""@babel/parser"": ""^7.24.4"",
-    ""hermes-parser"": ""^0.25.1"",
     ""zod"": ""^3.22.4"",
     ""zod-validation-error"": ""^3.0.3""
   },
@@ -50,14 +49,14 @@
     ""@babel/preset-typescript"": ""^7.26.0"",
     ""@babel/types"": ""^7.19.0"",
     ""@tsconfig/strictest"": ""^2.0.5"",
-    ""@typescript-eslint/parser-v2"": ""npm:@typescript-eslint/parser@^2.26.0"",
-    ""@typescript-eslint/parser-v3"": ""npm:@typescript-eslint/parser@^3.10.0"",
-    ""@typescript-eslint/parser-v4"": ""npm:@typescript-eslint/parser@^4.1.0"",
-    ""@typescript-eslint/parser-v5"": ""npm:@typescript-eslint/parser@^5.62.0"",
     ""@types/eslint"": ""^8.56.12"",
     ""@types/estree"": ""^1.0.6"",
     ""@types/estree-jsx"": ""^1.0.5"",
     ""@types/node"": ""^20.2.5"",
+    ""@typescript-eslint/parser-v2"": ""npm:@typescript-eslint/parser@^2.26.0"",
+    ""@typescript-eslint/parser-v3"": ""npm:@typescript-eslint/parser@^3.10.0"",
+    ""@typescript-eslint/parser-v4"": ""npm:@typescript-eslint/parser@^4.1.0"",
+    ""@typescript-eslint/parser-v5"": ""npm:@typescript-eslint/parser@^5.62.0"",
     ""babel-eslint"": ""^10.0.3"",
     ""eslint-v7"": ""npm:eslint@^7.7.0"",
     ""eslint-v8"": ""npm:eslint@^8.57.1"","
facebook/react,71753ac90a009ddefe2f7653165902d55edd1898,lauren,2025-10-03T16:58:00Z,"[eprh] Remove hermes-parser (#34719)

We will be focusing eslint-plugin-react-hooks as the primary OSS-only
package for our lint plugin. eslint-plugin-react-compiler will remain as
a Meta only package as some limitations of our internal infra require us
to use packages that aren't widely adopted by the rest of the industry.

This PR removes `hermes-parser`, which was meant to support parsing Flow
syntax.",packages/eslint-plugin-react-hooks/src/shared/RunReactCompiler.ts,8,23,31,"@@ -17,7 +17,6 @@ import BabelPluginReactCompiler, {
   LoggerEvent,
 } from 'babel-plugin-react-compiler';
 import type {SourceCode} from 'eslint';
-import * as HermesParser from 'hermes-parser';
 import {isDeepStrictEqual} from 'util';
 import type {ParseResult} from '@babel/parser';
 
@@ -78,7 +77,6 @@ function getFlowSuppressions(
   return results;
 }
 
-
 function runReactCompilerImpl({
   sourceCode,
   filename,
@@ -115,27 +113,14 @@ function runReactCompilerImpl({
   }
 
   let babelAST: ParseResult<File> | null = null;
-  if (filename.endsWith('.tsx') || filename.endsWith('.ts')) {
-    try {
-      babelAST = babelParse(sourceCode.text, {
-        sourceFilename: filename,
-        sourceType: 'unambiguous',
-        plugins: ['typescript', 'jsx'],
-      });
-    } catch {
-      /* empty */
-    }
-  } else {
-    try {
-      babelAST = HermesParser.parse(sourceCode.text, {
-        babel: true,
-        enableExperimentalComponentSyntax: true,
-        sourceFilename: filename,
-        sourceType: 'module',
-      });
-    } catch {
-      /* empty */
-    }
+  try {
+    babelAST = babelParse(sourceCode.text, {
+      sourceFilename: filename,
+      sourceType: 'unambiguous',
+      plugins: ['typescript', 'jsx'],
+    });
+  } catch (err: unknown) {
+    /* empty */
   }
 
   if (babelAST != null) {"
facebook/react,71753ac90a009ddefe2f7653165902d55edd1898,lauren,2025-10-03T16:58:00Z,"[eprh] Remove hermes-parser (#34719)

We will be focusing eslint-plugin-react-hooks as the primary OSS-only
package for our lint plugin. eslint-plugin-react-compiler will remain as
a Meta only package as some limitations of our internal infra require us
to use packages that aren't widely adopted by the rest of the industry.

This PR removes `hermes-parser`, which was meant to support parsing Flow
syntax.",yarn.lock,0,12,12,"@@ -10190,11 +10190,6 @@ hermes-eslint@^0.32.0:
     hermes-estree ""0.32.0""
     hermes-parser ""0.32.0""
 
-hermes-estree@0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480""
-  integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw==
-
 hermes-estree@0.29.1:
   version ""0.29.1""
   resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.29.1.tgz#043c7db076e0e8ef8c5f6ed23828d1ba463ebcc5""
@@ -10219,13 +10214,6 @@ hermes-parser@0.32.0, hermes-parser@^0.32.0:
   dependencies:
     hermes-estree ""0.32.0""
 
-hermes-parser@^0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1""
-  integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA==
-  dependencies:
-    hermes-estree ""0.25.1""
-
 homedir-polyfill@^1.0.0, homedir-polyfill@^1.0.1:
   version ""1.0.3""
   resolved ""https://registry.yarnpkg.com/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz#743298cef4e5af3e194161fbadcc2151d3a058e8"""
facebook/react,f24d3bbc70ae6544b5aafd250f22f0a68b4a3107,Joseph Savona,2025-10-03T16:47:34Z,Update readme for eprh (#34714),packages/eslint-plugin-react-hooks/README.md,2,4,6,"@@ -1,8 +1,6 @@
 # `eslint-plugin-react-hooks`
 
-This ESLint plugin enforces the [Rules of Hooks](https://react.dev/reference/rules/rules-of-hooks).
-
-It is a part of the [Hooks API](https://react.dev/reference/react/hooks) for React.
+The official ESLint plugin for [React](https://react.dev) which enforces the [Rules of React](https://react.dev/reference/eslint-plugin-react-hooks) and other best practices.
 
 ## Installation
 
@@ -89,7 +87,7 @@ If you're using a version earlier than 5.2.0, the legacy config was simply `reco
 
 ### Custom Configuration
 
-If you want more fine-grained configuration, you can instead add a snippet like this to your ESLint configuration file:
+If you want more fine-grained configuration, you can instead choose to enable specific rules. However, we strongly encourage using the recommended presets — see above — so that you will automatically receive new recommended rules as we add them in future versions of the plugin.
 
 #### Flat Config (eslint.config.js|ts)
 "
facebook/react,85c427d822baad6e654256b707b7d8755da7db26,Joseph Savona,2025-10-03T16:13:55Z,"[compiler] Remove @babel/plugin-proposal-private-methods (#34715)

redo of #34458 but fixing up prettier

Co-authored-by: Arnaud Barré <arnaud.barre@carbometrix.com>",compiler/packages/eslint-plugin-react-compiler/babel.config.js,0,1,1,"@@ -10,6 +10,5 @@ module.exports = {
   plugins: [
     ['@babel/plugin-transform-private-property-in-object', {loose: true}],
     ['@babel/plugin-transform-class-properties', {loose: true}],
-    ['@babel/plugin-transform-private-methods', {loose: true}],
   ],
 };"
facebook/react,85c427d822baad6e654256b707b7d8755da7db26,Joseph Savona,2025-10-03T16:13:55Z,"[compiler] Remove @babel/plugin-proposal-private-methods (#34715)

redo of #34458 but fixing up prettier

Co-authored-by: Arnaud Barré <arnaud.barre@carbometrix.com>",compiler/packages/eslint-plugin-react-compiler/package.json,0,1,1,"@@ -14,7 +14,6 @@
   ""dependencies"": {
     ""@babel/core"": ""^7.24.4"",
     ""@babel/parser"": ""^7.24.4"",
-    ""@babel/plugin-proposal-private-methods"": ""^7.18.6"",
     ""hermes-parser"": ""^0.25.1"",
     ""zod"": ""^3.22.4"",
     ""zod-validation-error"": ""^3.0.3"""
facebook/react,85c427d822baad6e654256b707b7d8755da7db26,Joseph Savona,2025-10-03T16:13:55Z,"[compiler] Remove @babel/plugin-proposal-private-methods (#34715)

redo of #34458 but fixing up prettier

Co-authored-by: Arnaud Barré <arnaud.barre@carbometrix.com>",compiler/packages/eslint-plugin-react-compiler/src/shared/RunReactCompiler.ts,1,6,7,"@@ -8,8 +8,6 @@
 import {transformFromAstSync} from '@babel/core';
 import {parse as babelParse} from '@babel/parser';
 import {File} from '@babel/types';
-// @ts-expect-error: no types available
-import PluginProposalPrivateMethods from '@babel/plugin-proposal-private-methods';
 import BabelPluginReactCompiler, {
   parsePluginOptions,
   validateEnvironmentConfig,
@@ -145,10 +143,7 @@ function runReactCompilerImpl({
         filename,
         highlightCode: false,
         retainLines: true,
-        plugins: [
-          [PluginProposalPrivateMethods, {loose: true}],
-          [BabelPluginReactCompiler, options],
-        ],
+        plugins: [[BabelPluginReactCompiler, options]],
         sourceType: 'module',
         configFile: false,
         babelrc: false,"
facebook/react,85c427d822baad6e654256b707b7d8755da7db26,Joseph Savona,2025-10-03T16:13:55Z,"[compiler] Remove @babel/plugin-proposal-private-methods (#34715)

redo of #34458 but fixing up prettier

Co-authored-by: Arnaud Barré <arnaud.barre@carbometrix.com>",compiler/packages/eslint-plugin-react-compiler/tsup.config.ts,1,7,8,"@@ -10,13 +10,7 @@ import {defineConfig} from 'tsup';
 export default defineConfig({
   entry: ['./src/index.ts'],
   outDir: './dist',
-  external: [
-    '@babel/core',
-    '@babel/plugin-proposal-private-methods',
-    'hermes-parser',
-    'zod',
-    'zod-validation-error',
-  ],
+  external: ['@babel/core', 'hermes-parser', 'zod', 'zod-validation-error'],
   splitting: false,
   sourcemap: false,
   dts: false,"
facebook/react,85c427d822baad6e654256b707b7d8755da7db26,Joseph Savona,2025-10-03T16:13:55Z,"[compiler] Remove @babel/plugin-proposal-private-methods (#34715)

redo of #34458 but fixing up prettier

Co-authored-by: Arnaud Barré <arnaud.barre@carbometrix.com>",compiler/yarn.lock,1,9,10,"@@ -326,7 +326,7 @@
     lru-cache ""^5.1.1""
     semver ""^6.3.1""
 
-""@babel/helper-create-class-features-plugin@^7.18.6"", ""@babel/helper-create-class-features-plugin@^7.25.9"", ""@babel/helper-create-class-features-plugin@^7.27.0"":
+""@babel/helper-create-class-features-plugin@^7.25.9"", ""@babel/helper-create-class-features-plugin@^7.27.0"":
   version ""7.27.0""
   resolved ""https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.27.0.tgz""
   integrity sha512-vSGCvMecvFCd/BdpGlhpXYNhhC4ccxyvQWpbGL4CWbvfEoLFWUZuSuf7s9Aw70flgQF+6vptvgK2IfOnKlRmBg==
@@ -706,14 +706,6 @@
     ""@babel/helper-plugin-utils"" ""^7.25.9""
     ""@babel/traverse"" ""^7.25.9""
 
-""@babel/plugin-proposal-private-methods@^7.18.6"":
-  version ""7.18.6""
-  resolved ""https://registry.npmjs.org/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz""
-  integrity sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==
-  dependencies:
-    ""@babel/helper-create-class-features-plugin"" ""^7.18.6""
-    ""@babel/helper-plugin-utils"" ""^7.18.6""
-
 ""@babel/plugin-proposal-private-property-in-object@7.21.0-placeholder-for-preset-env.2"":
   version ""7.21.0-placeholder-for-preset-env.2""
   resolved ""https://registry.npmjs.org/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0-placeholder-for-preset-env.2.tgz"""
facebook/react,85c427d822baad6e654256b707b7d8755da7db26,Joseph Savona,2025-10-03T16:13:55Z,"[compiler] Remove @babel/plugin-proposal-private-methods (#34715)

redo of #34458 but fixing up prettier

Co-authored-by: Arnaud Barré <arnaud.barre@carbometrix.com>",packages/eslint-plugin-react-hooks/package.json,0,1,1,"@@ -41,7 +41,6 @@
   ""dependencies"": {
     ""@babel/core"": ""^7.24.4"",
     ""@babel/parser"": ""^7.24.4"",
-    ""@babel/plugin-proposal-private-methods"": ""^7.18.6"",
     ""hermes-parser"": ""^0.25.1"",
     ""zod"": ""^3.22.4"",
     ""zod-validation-error"": ""^3.0.3"""
facebook/react,85c427d822baad6e654256b707b7d8755da7db26,Joseph Savona,2025-10-03T16:13:55Z,"[compiler] Remove @babel/plugin-proposal-private-methods (#34715)

redo of #34458 but fixing up prettier

Co-authored-by: Arnaud Barré <arnaud.barre@carbometrix.com>",packages/eslint-plugin-react-hooks/src/shared/RunReactCompiler.ts,1,6,7,"@@ -9,8 +9,6 @@
 import {transformFromAstSync} from '@babel/core';
 import {parse as babelParse} from '@babel/parser';
 import {File} from '@babel/types';
-// @ts-expect-error: no types available
-import PluginProposalPrivateMethods from '@babel/plugin-proposal-private-methods';
 import BabelPluginReactCompiler, {
   parsePluginOptions,
   validateEnvironmentConfig,
@@ -147,10 +145,7 @@ function runReactCompilerImpl({
         filename,
         highlightCode: false,
         retainLines: true,
-        plugins: [
-          [PluginProposalPrivateMethods, {loose: true}],
-          [BabelPluginReactCompiler, options],
-        ],
+        plugins: [[BabelPluginReactCompiler, options]],
         sourceType: 'module',
         configFile: false,
         babelrc: false,"
facebook/react,85c427d822baad6e654256b707b7d8755da7db26,Joseph Savona,2025-10-03T16:13:55Z,"[compiler] Remove @babel/plugin-proposal-private-methods (#34715)

redo of #34458 but fixing up prettier

Co-authored-by: Arnaud Barré <arnaud.barre@carbometrix.com>",scripts/rollup/bundles.js,0,1,1,"@@ -1253,7 +1253,6 @@ const bundles = [
     preferBuiltins: true,
     externals: [
       '@babel/core',
-      '@babel/plugin-proposal-private-methods',
       'hermes-parser',
       'zod',
       'zod-validation-error',"
facebook/react,85c427d822baad6e654256b707b7d8755da7db26,Joseph Savona,2025-10-03T16:13:55Z,"[compiler] Remove @babel/plugin-proposal-private-methods (#34715)

redo of #34458 but fixing up prettier

Co-authored-by: Arnaud Barré <arnaud.barre@carbometrix.com>",yarn.lock,0,8,8,"@@ -1108,14 +1108,6 @@
     ""@babel/helper-create-class-features-plugin"" ""^7.10.4""
     ""@babel/helper-plugin-utils"" ""^7.10.4""
 
-""@babel/plugin-proposal-private-methods@^7.18.6"":
-  version ""7.18.6""
-  resolved ""https://registry.yarnpkg.com/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz#5209de7d213457548a98436fa2882f52f4be6bea""
-  integrity sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==
-  dependencies:
-    ""@babel/helper-create-class-features-plugin"" ""^7.18.6""
-    ""@babel/helper-plugin-utils"" ""^7.18.6""
-
 ""@babel/plugin-proposal-private-property-in-object@7.21.0-placeholder-for-preset-env.2"":
   version ""7.21.0-placeholder-for-preset-env.2""
   resolved ""https://registry.yarnpkg.com/@babel/plugin-proposal-private-property-in-object/-/plugin-proposal-private-property-in-object-7.21.0-placeholder-for-preset-env.2.tgz#7844f9289546efa9febac2de4cfe358a050bd703"""
facebook/react,02bd4458f77e60b5631ff2f0e30b05b8b3a56d6d,Sebastian Markbåge,2025-10-03T15:52:44Z,"[DevTools] Double clicking the root should jump to the beginning of the timeline (#34704)

Unlike the rects, this never toggles. It just jumps.",packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseRects.js,13,0,13,"@@ -330,12 +330,25 @@ function SuspenseRectsContainer(): React$Node {
     });
   }
 
+  function handleDoubleClick(event: SyntheticMouseEvent) {
+    if (event.defaultPrevented) {
+      // Already clicked on an inner rect
+      return;
+    }
+    event.preventDefault();
+    suspenseTreeDispatch({
+      type: 'SUSPENSE_SET_TIMELINE_INDEX',
+      payload: 0,
+    });
+  }
+
   const isRootSelected = roots.includes(inspectedElementID);
 
   return (
     <div
       className={styles.SuspenseRectsContainer}
       onClick={handleClick}
+      onDoubleClick={handleDoubleClick}
       data-highlighted={isRootSelected}>
       <ViewBox.Provider value={boundingBox}>
         <div"
facebook/react,0eebd37041a5712f841edd5fad558e0516e5af61,Eugene Choi,2025-10-03T14:52:36Z,"[playground] Config panel quality fixes (#34611)

Fixed two small issues with the config panel in the compiler playground:
1. Object descriptions were being confined in the config box and most of
it would not be visible upon hover
2. Changed it so that ""Applied Configs"" would only display a valid set
of configs, rather than switching between ""Invalid Configs"" and the set
of options. This would be less visually jarring for users as the Output
panel already displays errors. Additionally, if users want to see the
list of config options but have a currently broken config, they would
previously not know how to fix it.

Object hover before: 
<img width=""702"" height=""481"" alt=""Screenshot 2025-09-26 at 10 41 03 AM""
src=""https://github.com/user-attachments/assets/b2ddec2f-16ba-41a1-be1f-96211f46764c""
/>
Hover after:
<img width=""702"" height=""481"" alt=""Screenshot 2025-09-26 at 10 40 37 AM""
src=""https://github.com/user-attachments/assets/dc713a22-4710-46a8-a5d7-485060cc9074""
/>

Applied Configs always displays the last valid set of configs:


https://github.com/user-attachments/assets/2fb9232f-7388-4488-9b7a-bb48bf09e4ca",compiler/apps/playground/components/Editor/ConfigEditor.tsx,12,37,49,"@@ -6,7 +6,6 @@
  */
 
 import MonacoEditor, {loader, type Monaco} from '@monaco-editor/react';
-import {PluginOptions} from 'babel-plugin-react-compiler';
 import type {editor} from 'monaco-editor';
 import * as monaco from 'monaco-editor';
 import React, {
@@ -18,9 +17,8 @@ import React, {
 } from 'react';
 import {Resizable} from 're-resizable';
 import {useStore, useStoreDispatch} from '../StoreContext';
-import {monacoOptions} from './monacoOptions';
+import {monacoConfigOptions} from './monacoOptions';
 import {IconChevron} from '../Icons/IconChevron';
-import prettyFormat from 'pretty-format';
 import {CONFIG_PANEL_TRANSITION} from '../../lib/transitionTypes';
 
 // @ts-expect-error - webpack asset/source loader handles .d.ts files as strings
@@ -29,9 +27,9 @@ import compilerTypeDefs from 'babel-plugin-react-compiler/dist/index.d.ts';
 loader.config({monaco});
 
 export default function ConfigEditor({
-  appliedOptions,
+  formattedAppliedConfig,
 }: {
-  appliedOptions: PluginOptions | null;
+  formattedAppliedConfig: string;
 }): React.ReactElement {
   const [isExpanded, setIsExpanded] = useState(false);
 
@@ -49,7 +47,7 @@ export default function ConfigEditor({
               setIsExpanded(false);
             });
           }}
-          appliedOptions={appliedOptions}
+          formattedAppliedConfig={formattedAppliedConfig}
         />
       </div>
       <div
@@ -71,10 +69,10 @@ export default function ConfigEditor({
 
 function ExpandedEditor({
   onToggle,
-  appliedOptions,
+  formattedAppliedConfig,
 }: {
-  onToggle: () => void;
-  appliedOptions: PluginOptions | null;
+  onToggle: (expanded: boolean) => void;
+  formattedAppliedConfig: string;
 }): React.ReactElement {
   const store = useStore();
   const dispatchStore = useStoreDispatch();
@@ -122,13 +120,6 @@ function ExpandedEditor({
     });
   };
 
-  const formattedAppliedOptions = appliedOptions
-    ? prettyFormat(appliedOptions, {
-        printFunctionName: false,
-        printBasicPrototype: false,
-      })
-    : 'Invalid configs';
-
   return (
     <ViewTransition
       update={{[CONFIG_PANEL_TRANSITION]: 'slide-in', default: 'none'}}>
@@ -158,7 +149,7 @@ function ExpandedEditor({
                 Config Overrides
               </h2>
             </div>
-            <div className=""flex-1 rounded-lg overflow-hidden border border-gray-300"">
+            <div className=""flex-1 border border-gray-300"">
               <MonacoEditor
                 path={'config.ts'}
                 language={'typescript'}
@@ -167,16 +158,7 @@ function ExpandedEditor({
                 onChange={handleChange}
                 loading={''}
                 className=""monaco-editor-config""
-                options={{
-                  ...monacoOptions,
-                  lineNumbers: 'off',
-                  renderLineHighlight: 'none',
-                  overviewRulerBorder: false,
-                  overviewRulerLanes: 0,
-                  fontSize: 12,
-                  scrollBeyondLastLine: false,
-                  glyphMargin: false,
-                }}
+                options={monacoConfigOptions}
               />
             </div>
           </div>
@@ -186,23 +168,16 @@ function ExpandedEditor({
                 Applied Configs
               </h2>
             </div>
-            <div className=""flex-1 rounded-lg overflow-hidden border border-gray-300"">
+            <div className=""flex-1 border border-gray-300"">
               <MonacoEditor
                 path={'applied-config.js'}
                 language={'javascript'}
-                value={formattedAppliedOptions}
+                value={formattedAppliedConfig}
                 loading={''}
                 className=""monaco-editor-applied-config""
                 options={{
-                  ...monacoOptions,
-                  lineNumbers: 'off',
-                  renderLineHighlight: 'none',
-                  overviewRulerBorder: false,
-                  overviewRulerLanes: 0,
-                  fontSize: 12,
-                  scrollBeyondLastLine: false,
+                  ...monacoConfigOptions,
                   readOnly: true,
-                  glyphMargin: false,
                 }}
               />
             </div>"
facebook/react,0eebd37041a5712f841edd5fad558e0516e5af61,Eugene Choi,2025-10-03T14:52:36Z,"[playground] Config panel quality fixes (#34611)

Fixed two small issues with the config panel in the compiler playground:
1. Object descriptions were being confined in the config box and most of
it would not be visible upon hover
2. Changed it so that ""Applied Configs"" would only display a valid set
of configs, rather than switching between ""Invalid Configs"" and the set
of options. This would be less visually jarring for users as the Output
panel already displays errors. Additionally, if users want to see the
list of config options but have a currently broken config, they would
previously not know how to fix it.

Object hover before: 
<img width=""702"" height=""481"" alt=""Screenshot 2025-09-26 at 10 41 03 AM""
src=""https://github.com/user-attachments/assets/b2ddec2f-16ba-41a1-be1f-96211f46764c""
/>
Hover after:
<img width=""702"" height=""481"" alt=""Screenshot 2025-09-26 at 10 40 37 AM""
src=""https://github.com/user-attachments/assets/dc713a22-4710-46a8-a5d7-485060cc9074""
/>

Applied Configs always displays the last valid set of configs:


https://github.com/user-attachments/assets/2fb9232f-7388-4488-9b7a-bb48bf09e4ca",compiler/apps/playground/components/Editor/EditorImpl.tsx,18,301,319,"@@ -5,312 +5,17 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-import {parse as babelParse, ParseResult} from '@babel/parser';
-import * as HermesParser from 'hermes-parser';
-import * as t from '@babel/types';
-import BabelPluginReactCompiler, {
-  CompilerError,
+import {
   CompilerErrorDetail,
   CompilerDiagnostic,
-  Effect,
-  ErrorCategory,
-  parseConfigPragmaForTests,
-  ValueKind,
-  type Hook,
-  PluginOptions,
-  CompilerPipelineValue,
-  parsePluginOptions,
-  printReactiveFunctionWithOutlined,
-  printFunctionWithOutlined,
-  type LoggerEvent,
 } from 'babel-plugin-react-compiler';
-import {useDeferredValue, useMemo} from 'react';
+import {useDeferredValue, useMemo, useState} from 'react';
 import {useStore} from '../StoreContext';
 import ConfigEditor from './ConfigEditor';
 import Input from './Input';
-import {
-  CompilerOutput,
-  CompilerTransformOutput,
-  default as Output,
-  PrintedCompilerPipelineValue,
-} from './Output';
-import {transformFromAstSync} from '@babel/core';
-
-function parseInput(
-  input: string,
-  language: 'flow' | 'typescript',
-): ParseResult<t.File> {
-  // Extract the first line to quickly check for custom test directives
-  if (language === 'flow') {
-    return HermesParser.parse(input, {
-      babel: true,
-      flow: 'all',
-      sourceType: 'module',
-      enableExperimentalComponentSyntax: true,
-    });
-  } else {
-    return babelParse(input, {
-      plugins: ['typescript', 'jsx'],
-      sourceType: 'module',
-    }) as ParseResult<t.File>;
-  }
-}
-
-function invokeCompiler(
-  source: string,
-  language: 'flow' | 'typescript',
-  options: PluginOptions,
-): CompilerTransformOutput {
-  const ast = parseInput(source, language);
-  let result = transformFromAstSync(ast, source, {
-    filename: '_playgroundFile.js',
-    highlightCode: false,
-    retainLines: true,
-    plugins: [[BabelPluginReactCompiler, options]],
-    ast: true,
-    sourceType: 'module',
-    configFile: false,
-    sourceMaps: true,
-    babelrc: false,
-  });
-  if (result?.ast == null || result?.code == null || result?.map == null) {
-    throw new Error('Expected successful compilation');
-  }
-  return {
-    code: result.code,
-    sourceMaps: result.map,
-    language,
-  };
-}
-
-const COMMON_HOOKS: Array<[string, Hook]> = [
-  [
-    'useFragment',
-    {
-      valueKind: ValueKind.Frozen,
-      effectKind: Effect.Freeze,
-      noAlias: true,
-      transitiveMixedData: true,
-    },
-  ],
-  [
-    'usePaginationFragment',
-    {
-      valueKind: ValueKind.Frozen,
-      effectKind: Effect.Freeze,
-      noAlias: true,
-      transitiveMixedData: true,
-    },
-  ],
-  [
-    'useRefetchableFragment',
-    {
-      valueKind: ValueKind.Frozen,
-      effectKind: Effect.Freeze,
-      noAlias: true,
-      transitiveMixedData: true,
-    },
-  ],
-  [
-    'useLazyLoadQuery',
-    {
-      valueKind: ValueKind.Frozen,
-      effectKind: Effect.Freeze,
-      noAlias: true,
-      transitiveMixedData: true,
-    },
-  ],
-  [
-    'usePreloadedQuery',
-    {
-      valueKind: ValueKind.Frozen,
-      effectKind: Effect.Freeze,
-      noAlias: true,
-      transitiveMixedData: true,
-    },
-  ],
-];
-
-function parseOptions(
-  source: string,
-  mode: 'compiler' | 'linter',
-  configOverrides: string,
-): PluginOptions {
-  // Extract the first line to quickly check for custom test directives
-  const pragma = source.substring(0, source.indexOf('\n'));
-
-  const parsedPragmaOptions = parseConfigPragmaForTests(pragma, {
-    compilationMode: 'infer',
-    environment:
-      mode === 'linter'
-        ? {
-            // enabled in compiler
-            validateRefAccessDuringRender: false,
-            // enabled in linter
-            validateNoSetStateInRender: true,
-            validateNoSetStateInEffects: true,
-            validateNoJSXInTryStatements: true,
-            validateNoImpureFunctionsInRender: true,
-            validateStaticComponents: true,
-            validateNoFreezingKnownMutableFunctions: true,
-            validateNoVoidUseMemo: true,
-          }
-        : {
-            /* use defaults for compiler mode */
-          },
-  });
-
-  // Parse config overrides from config editor
-  let configOverrideOptions: any = {};
-  const configMatch = configOverrides.match(/^\s*import.*?\n\n\((.*)\)/s);
-  if (configOverrides.trim()) {
-    if (configMatch && configMatch[1]) {
-      const configString = configMatch[1].replace(/satisfies.*$/, '').trim();
-      configOverrideOptions = new Function(`return (${configString})`)();
-    } else {
-      throw new Error('Invalid override format');
-    }
-  }
-
-  const opts: PluginOptions = parsePluginOptions({
-    ...parsedPragmaOptions,
-    ...configOverrideOptions,
-    environment: {
-      ...parsedPragmaOptions.environment,
-      ...configOverrideOptions.environment,
-      customHooks: new Map([...COMMON_HOOKS]),
-    },
-  });
-
-  return opts;
-}
-
-function compile(
-  source: string,
-  mode: 'compiler' | 'linter',
-  configOverrides: string,
-): [CompilerOutput, 'flow' | 'typescript', PluginOptions | null] {
-  const results = new Map<string, Array<PrintedCompilerPipelineValue>>();
-  const error = new CompilerError();
-  const otherErrors: Array<CompilerErrorDetail | CompilerDiagnostic> = [];
-  const upsert: (result: PrintedCompilerPipelineValue) => void = result => {
-    const entry = results.get(result.name);
-    if (Array.isArray(entry)) {
-      entry.push(result);
-    } else {
-      results.set(result.name, [result]);
-    }
-  };
-  let language: 'flow' | 'typescript';
-  if (source.match(/\@flow/)) {
-    language = 'flow';
-  } else {
-    language = 'typescript';
-  }
-  let transformOutput;
-
-  let baseOpts: PluginOptions | null = null;
-  try {
-    baseOpts = parseOptions(source, mode, configOverrides);
-  } catch (err) {
-    error.details.push(
-      new CompilerErrorDetail({
-        category: ErrorCategory.Config,
-        reason: `Unexpected failure when transforming configs! \n${err}`,
-        loc: null,
-        suggestions: null,
-      }),
-    );
-  }
-  if (baseOpts) {
-    try {
-      const logIR = (result: CompilerPipelineValue): void => {
-        switch (result.kind) {
-          case 'ast': {
-            break;
-          }
-          case 'hir': {
-            upsert({
-              kind: 'hir',
-              fnName: result.value.id,
-              name: result.name,
-              value: printFunctionWithOutlined(result.value),
-            });
-            break;
-          }
-          case 'reactive': {
-            upsert({
-              kind: 'reactive',
-              fnName: result.value.id,
-              name: result.name,
-              value: printReactiveFunctionWithOutlined(result.value),
-            });
-            break;
-          }
-          case 'debug': {
-            upsert({
-              kind: 'debug',
-              fnName: null,
-              name: result.name,
-              value: result.value,
-            });
-            break;
-          }
-          default: {
-            const _: never = result;
-            throw new Error(`Unhandled result ${result}`);
-          }
-        }
-      };
-      // Add logger options to the parsed options
-      const opts = {
-        ...baseOpts,
-        logger: {
-          debugLogIRs: logIR,
-          logEvent: (_filename: string | null, event: LoggerEvent): void => {
-            if (event.kind === 'CompileError') {
-              otherErrors.push(event.detail);
-            }
-          },
-        },
-      };
-      transformOutput = invokeCompiler(source, language, opts);
-    } catch (err) {
-      /**
-       * error might be an invariant violation or other runtime error
-       * (i.e. object shape that is not CompilerError)
-       */
-      if (err instanceof CompilerError && err.details.length > 0) {
-        error.merge(err);
-      } else {
-        /**
-         * Handle unexpected failures by logging (to get a stack trace)
-         * and reporting
-         */
-        error.details.push(
-          new CompilerErrorDetail({
-            category: ErrorCategory.Invariant,
-            reason: `Unexpected failure when transforming input! \n${err}`,
-            loc: null,
-            suggestions: null,
-          }),
-        );
-      }
-    }
-  }
-  // Only include logger errors if there weren't other errors
-  if (!error.hasErrors() && otherErrors.length !== 0) {
-    otherErrors.forEach(e => error.details.push(e));
-  }
-  if (error.hasErrors()) {
-    return [{kind: 'err', results, error}, language, baseOpts];
-  }
-  return [
-    {kind: 'ok', results, transformOutput, errors: error.details},
-    language,
-    baseOpts,
-  ];
-}
+import {CompilerOutput, default as Output} from './Output';
+import {compile} from '../../lib/compilation';
+import prettyFormat from 'pretty-format';
 
 export default function Editor(): JSX.Element {
   const store = useStore();
@@ -323,6 +28,7 @@ export default function Editor(): JSX.Element {
     () => compile(deferredStore.source, 'linter', deferredStore.config),
     [deferredStore.source, deferredStore.config],
   );
+  const [formattedAppliedConfig, setFormattedAppliedConfig] = useState('');
 
   let mergedOutput: CompilerOutput;
   let errors: Array<CompilerErrorDetail | CompilerDiagnostic>;
@@ -336,11 +42,22 @@ export default function Editor(): JSX.Element {
     mergedOutput = compilerOutput;
     errors = compilerOutput.error.details;
   }
+
+  if (appliedOptions) {
+    const formatted = prettyFormat(appliedOptions, {
+      printFunctionName: false,
+      printBasicPrototype: false,
+    });
+    if (formatted !== formattedAppliedConfig) {
+      setFormattedAppliedConfig(formatted);
+    }
+  }
+
   return (
     <>
       <div className=""relative flex top-14"">
         <div className=""flex-shrink-0"">
-          <ConfigEditor appliedOptions={appliedOptions} />
+          <ConfigEditor formattedAppliedConfig={formattedAppliedConfig} />
         </div>
         <div className=""flex flex-1 min-w-0"">
           <Input language={language} errors={errors} />"
facebook/react,0eebd37041a5712f841edd5fad558e0516e5af61,Eugene Choi,2025-10-03T14:52:36Z,"[playground] Config panel quality fixes (#34611)

Fixed two small issues with the config panel in the compiler playground:
1. Object descriptions were being confined in the config box and most of
it would not be visible upon hover
2. Changed it so that ""Applied Configs"" would only display a valid set
of configs, rather than switching between ""Invalid Configs"" and the set
of options. This would be less visually jarring for users as the Output
panel already displays errors. Additionally, if users want to see the
list of config options but have a currently broken config, they would
previously not know how to fix it.

Object hover before: 
<img width=""702"" height=""481"" alt=""Screenshot 2025-09-26 at 10 41 03 AM""
src=""https://github.com/user-attachments/assets/b2ddec2f-16ba-41a1-be1f-96211f46764c""
/>
Hover after:
<img width=""702"" height=""481"" alt=""Screenshot 2025-09-26 at 10 40 37 AM""
src=""https://github.com/user-attachments/assets/dc713a22-4710-46a8-a5d7-485060cc9074""
/>

Applied Configs always displays the last valid set of configs:


https://github.com/user-attachments/assets/2fb9232f-7388-4488-9b7a-bb48bf09e4ca",compiler/apps/playground/components/Editor/monacoOptions.ts,11,0,11,"@@ -32,3 +32,14 @@ export const monacoOptions: Partial<EditorProps['options']> = {
 
   tabSize: 2,
 };
+
+export const monacoConfigOptions: Partial<EditorProps['options']> = {
+  ...monacoOptions,
+  lineNumbers: 'off',
+  renderLineHighlight: 'none',
+  overviewRulerBorder: false,
+  overviewRulerLanes: 0,
+  fontSize: 12,
+  scrollBeyondLastLine: false,
+  glyphMargin: false,
+};"
facebook/react,0eebd37041a5712f841edd5fad558e0516e5af61,Eugene Choi,2025-10-03T14:52:36Z,"[playground] Config panel quality fixes (#34611)

Fixed two small issues with the config panel in the compiler playground:
1. Object descriptions were being confined in the config box and most of
it would not be visible upon hover
2. Changed it so that ""Applied Configs"" would only display a valid set
of configs, rather than switching between ""Invalid Configs"" and the set
of options. This would be less visually jarring for users as the Output
panel already displays errors. Additionally, if users want to see the
list of config options but have a currently broken config, they would
previously not know how to fix it.

Object hover before: 
<img width=""702"" height=""481"" alt=""Screenshot 2025-09-26 at 10 41 03 AM""
src=""https://github.com/user-attachments/assets/b2ddec2f-16ba-41a1-be1f-96211f46764c""
/>
Hover after:
<img width=""702"" height=""481"" alt=""Screenshot 2025-09-26 at 10 40 37 AM""
src=""https://github.com/user-attachments/assets/dc713a22-4710-46a8-a5d7-485060cc9074""
/>

Applied Configs always displays the last valid set of configs:


https://github.com/user-attachments/assets/2fb9232f-7388-4488-9b7a-bb48bf09e4ca",compiler/apps/playground/lib/compilation.ts,308,0,308,"@@ -0,0 +1,308 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ */
+
+import {parse as babelParse, ParseResult} from '@babel/parser';
+import * as HermesParser from 'hermes-parser';
+import * as t from '@babel/types';
+import BabelPluginReactCompiler, {
+  CompilerError,
+  CompilerErrorDetail,
+  CompilerDiagnostic,
+  Effect,
+  ErrorCategory,
+  parseConfigPragmaForTests,
+  ValueKind,
+  type Hook,
+  PluginOptions,
+  CompilerPipelineValue,
+  parsePluginOptions,
+  printReactiveFunctionWithOutlined,
+  printFunctionWithOutlined,
+  type LoggerEvent,
+} from 'babel-plugin-react-compiler';
+import {transformFromAstSync} from '@babel/core';
+import type {
+  CompilerOutput,
+  CompilerTransformOutput,
+  PrintedCompilerPipelineValue,
+} from '../components/Editor/Output';
+
+function parseInput(
+  input: string,
+  language: 'flow' | 'typescript',
+): ParseResult<t.File> {
+  // Extract the first line to quickly check for custom test directives
+  if (language === 'flow') {
+    return HermesParser.parse(input, {
+      babel: true,
+      flow: 'all',
+      sourceType: 'module',
+      enableExperimentalComponentSyntax: true,
+    });
+  } else {
+    return babelParse(input, {
+      plugins: ['typescript', 'jsx'],
+      sourceType: 'module',
+    }) as ParseResult<t.File>;
+  }
+}
+
+function invokeCompiler(
+  source: string,
+  language: 'flow' | 'typescript',
+  options: PluginOptions,
+): CompilerTransformOutput {
+  const ast = parseInput(source, language);
+  let result = transformFromAstSync(ast, source, {
+    filename: '_playgroundFile.js',
+    highlightCode: false,
+    retainLines: true,
+    plugins: [[BabelPluginReactCompiler, options]],
+    ast: true,
+    sourceType: 'module',
+    configFile: false,
+    sourceMaps: true,
+    babelrc: false,
+  });
+  if (result?.ast == null || result?.code == null || result?.map == null) {
+    throw new Error('Expected successful compilation');
+  }
+  return {
+    code: result.code,
+    sourceMaps: result.map,
+    language,
+  };
+}
+
+const COMMON_HOOKS: Array<[string, Hook]> = [
+  [
+    'useFragment',
+    {
+      valueKind: ValueKind.Frozen,
+      effectKind: Effect.Freeze,
+      noAlias: true,
+      transitiveMixedData: true,
+    },
+  ],
+  [
+    'usePaginationFragment',
+    {
+      valueKind: ValueKind.Frozen,
+      effectKind: Effect.Freeze,
+      noAlias: true,
+      transitiveMixedData: true,
+    },
+  ],
+  [
+    'useRefetchableFragment',
+    {
+      valueKind: ValueKind.Frozen,
+      effectKind: Effect.Freeze,
+      noAlias: true,
+      transitiveMixedData: true,
+    },
+  ],
+  [
+    'useLazyLoadQuery',
+    {
+      valueKind: ValueKind.Frozen,
+      effectKind: Effect.Freeze,
+      noAlias: true,
+      transitiveMixedData: true,
+    },
+  ],
+  [
+    'usePreloadedQuery',
+    {
+      valueKind: ValueKind.Frozen,
+      effectKind: Effect.Freeze,
+      noAlias: true,
+      transitiveMixedData: true,
+    },
+  ],
+];
+
+function parseOptions(
+  source: string,
+  mode: 'compiler' | 'linter',
+  configOverrides: string,
+): PluginOptions {
+  // Extract the first line to quickly check for custom test directives
+  const pragma = source.substring(0, source.indexOf('\n'));
+
+  const parsedPragmaOptions = parseConfigPragmaForTests(pragma, {
+    compilationMode: 'infer',
+    environment:
+      mode === 'linter'
+        ? {
+            // enabled in compiler
+            validateRefAccessDuringRender: false,
+            // enabled in linter
+            validateNoSetStateInRender: true,
+            validateNoSetStateInEffects: true,
+            validateNoJSXInTryStatements: true,
+            validateNoImpureFunctionsInRender: true,
+            validateStaticComponents: true,
+            validateNoFreezingKnownMutableFunctions: true,
+            validateNoVoidUseMemo: true,
+          }
+        : {
+            /* use defaults for compiler mode */
+          },
+  });
+
+  // Parse config overrides from config editor
+  let configOverrideOptions: any = {};
+  const configMatch = configOverrides.match(/^\s*import.*?\n\n\((.*)\)/s);
+  if (configOverrides.trim()) {
+    if (configMatch && configMatch[1]) {
+      const configString = configMatch[1].replace(/satisfies.*$/, '').trim();
+      configOverrideOptions = new Function(`return (${configString})`)();
+    } else {
+      throw new Error('Invalid override format');
+    }
+  }
+
+  const opts: PluginOptions = parsePluginOptions({
+    ...parsedPragmaOptions,
+    ...configOverrideOptions,
+    environment: {
+      ...parsedPragmaOptions.environment,
+      ...configOverrideOptions.environment,
+      customHooks: new Map([...COMMON_HOOKS]),
+    },
+  });
+
+  return opts;
+}
+
+export function compile(
+  source: string,
+  mode: 'compiler' | 'linter',
+  configOverrides: string,
+): [CompilerOutput, 'flow' | 'typescript', PluginOptions | null] {
+  const results = new Map<string, Array<PrintedCompilerPipelineValue>>();
+  const error = new CompilerError();
+  const otherErrors: Array<CompilerErrorDetail | CompilerDiagnostic> = [];
+  const upsert: (result: PrintedCompilerPipelineValue) => void = result => {
+    const entry = results.get(result.name);
+    if (Array.isArray(entry)) {
+      entry.push(result);
+    } else {
+      results.set(result.name, [result]);
+    }
+  };
+  let language: 'flow' | 'typescript';
+  if (source.match(/\@flow/)) {
+    language = 'flow';
+  } else {
+    language = 'typescript';
+  }
+  let transformOutput;
+
+  let baseOpts: PluginOptions | null = null;
+  try {
+    baseOpts = parseOptions(source, mode, configOverrides);
+  } catch (err) {
+    error.details.push(
+      new CompilerErrorDetail({
+        category: ErrorCategory.Config,
+        reason: `Unexpected failure when transforming configs! \n${err}`,
+        loc: null,
+        suggestions: null,
+      }),
+    );
+  }
+  if (baseOpts) {
+    try {
+      const logIR = (result: CompilerPipelineValue): void => {
+        switch (result.kind) {
+          case 'ast': {
+            break;
+          }
+          case 'hir': {
+            upsert({
+              kind: 'hir',
+              fnName: result.value.id,
+              name: result.name,
+              value: printFunctionWithOutlined(result.value),
+            });
+            break;
+          }
+          case 'reactive': {
+            upsert({
+              kind: 'reactive',
+              fnName: result.value.id,
+              name: result.name,
+              value: printReactiveFunctionWithOutlined(result.value),
+            });
+            break;
+          }
+          case 'debug': {
+            upsert({
+              kind: 'debug',
+              fnName: null,
+              name: result.name,
+              value: result.value,
+            });
+            break;
+          }
+          default: {
+            const _: never = result;
+            throw new Error(`Unhandled result ${result}`);
+          }
+        }
+      };
+      // Add logger options to the parsed options
+      const opts = {
+        ...baseOpts,
+        logger: {
+          debugLogIRs: logIR,
+          logEvent: (_filename: string | null, event: LoggerEvent): void => {
+            if (event.kind === 'CompileError') {
+              otherErrors.push(event.detail);
+            }
+          },
+        },
+      };
+      transformOutput = invokeCompiler(source, language, opts);
+    } catch (err) {
+      /**
+       * error might be an invariant violation or other runtime error
+       * (i.e. object shape that is not CompilerError)
+       */
+      if (err instanceof CompilerError && err.details.length > 0) {
+        error.merge(err);
+      } else {
+        /**
+         * Handle unexpected failures by logging (to get a stack trace)
+         * and reporting
+         */
+        error.details.push(
+          new CompilerErrorDetail({
+            category: ErrorCategory.Invariant,
+            reason: `Unexpected failure when transforming input! \n${err}`,
+            loc: null,
+            suggestions: null,
+          }),
+        );
+      }
+    }
+  }
+  // Only include logger errors if there weren't other errors
+  if (!error.hasErrors() && otherErrors.length !== 0) {
+    otherErrors.forEach(e => error.details.push(e));
+  }
+  if (error.hasErrors()) {
+    return [{kind: 'err', results, error}, language, baseOpts];
+  }
+  return [
+    {kind: 'ok', results, transformOutput, errors: error.details},
+    language,
+    baseOpts,
+  ];
+}"
facebook/react,74dee8ef641c7a0a67db192f83c11ac0d9f279ff,Jack Pope,2025-10-03T13:54:33Z,"Add getClientRects to fabric fragment instance (#34545)

Stacked on #34544 

We only have getBoundingClientRect available from RN currently. This
should work as a substitute for this case because the equivalent of
multi-rect elements in RN is a nested Text component. We only include
the rects of top-level host components here so we can assume that
calling getBoundingClientRect on each child is the same result.

Tested in react-native with Fantom.",packages/react-native-renderer/src/ReactFiberConfigFabric.js,22,0,22,"@@ -648,6 +648,7 @@ export type FragmentInstanceType = {
   getRootNode(getRootNodeOptions?: {
     composed: boolean,
   }): Node | FragmentInstanceType,
+  getClientRects: () => Array<DOMRect>,
 };
 
 function FragmentInstance(this: FragmentInstanceType, fragmentFiber: Fiber) {
@@ -772,6 +773,27 @@ FragmentInstance.prototype.getRootNode = function (
   return rootNode;
 };
 
+// $FlowFixMe[prop-missing]
+FragmentInstance.prototype.getClientRects = function (
+  this: FragmentInstanceType,
+): Array<DOMRect> {
+  const rects: Array<DOMRect> = [];
+  traverseFragmentInstance(this._fragmentFiber, collectClientRects, rects);
+  return rects;
+};
+function collectClientRects(child: Fiber, rects: Array<DOMRect>): boolean {
+  const instance = getPublicInstanceFromHostFiber(child);
+
+  // getBoundingClientRect is available on Fabric instances while getClientRects is not.
+  // This should work as a substitute in this case because the only equivalent of a multi-rect
+  // element in RN would be a nested Text component.
+  // Since we only use top-level nodes here, we can assume that getBoundingClientRect is sufficient.
+  // $FlowFixMe[method-unbinding]
+  // $FlowFixMe[incompatible-use] Fabric PublicInstance is opaque
+  rects.push(instance.getBoundingClientRect());
+  return false;
+}
+
 export function createFragmentInstance(
   fragmentFiber: Fiber,
 ): FragmentInstanceType {"
facebook/react,e866b1d1e9b8a1dc7a43f1be0c510784566b9bb1,Jack Pope,2025-10-03T13:48:37Z,"Add getRootNode to fabric fragment instance (#34544)

Stacked on #34533 for root fragment handling

This is the same approach as DOM, where we call getRootNode on the
parent.
    
Tests are in react-native using Fantom.",packages/react-native-renderer/src/ReactFiberConfigFabric.js,18,0,18,"@@ -645,6 +645,9 @@ export type FragmentInstanceType = {
   observeUsing: (observer: IntersectionObserver) => void,
   unobserveUsing: (observer: IntersectionObserver) => void,
   compareDocumentPosition: (otherNode: PublicInstance) => number,
+  getRootNode(getRootNodeOptions?: {
+    composed: boolean,
+  }): Node | FragmentInstanceType,
 };
 
 function FragmentInstance(this: FragmentInstanceType, fragmentFiber: Fiber) {
@@ -754,6 +757,21 @@ function collectChildren(child: Fiber, collection: Array<Fiber>): boolean {
   return false;
 }
 
+// $FlowFixMe[prop-missing]
+FragmentInstance.prototype.getRootNode = function (
+  this: FragmentInstanceType,
+  getRootNodeOptions?: {composed: boolean},
+): Node | FragmentInstanceType {
+  const parentHostFiber = getFragmentParentHostFiber(this._fragmentFiber);
+  if (parentHostFiber === null) {
+    return this;
+  }
+  const parentHostInstance = getPublicInstanceFromHostFiber(parentHostFiber);
+  // $FlowFixMe[incompatible-use] Fabric PublicInstance is opaque
+  const rootNode = (parentHostInstance.getRootNode(getRootNodeOptions): Node);
+  return rootNode;
+};
+
 export function createFragmentInstance(
   fragmentFiber: Fiber,
 ): FragmentInstanceType {"
facebook/react,19f65ff179d377ff0c9284704dff2fce370745be,lauren,2025-10-02T23:19:01Z,"[eprh] Remove NoUnusedOptOutDirectives (#34703)

This rule was a leftover from a while ago and doesn't actually lint
anything useful. Specifically, you get a lint error if you try to opt
out a component that isn't already bailing out. If there's a bailout the
compiler already safely skips over it, so adding `'use no memo'` there
is unnecessary.

Fixes #31407

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34703).
* __->__ #34703
* #34700",compiler/packages/eslint-plugin-react-compiler/__tests__/NoUnusedDirectivesRule-test.ts,0,58,58,"@@ -1,58 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- */
-
-import {NoUnusedDirectivesRule} from '../src/rules/ReactCompilerRule';
-import {normalizeIndent, testRule} from './shared-utils';
-
-testRule('no unused directives rule', NoUnusedDirectivesRule, {
-  valid: [],
-  invalid: [
-    {
-      name: ""Unused 'use no forget' directive is reported when no errors are present on components"",
-      code: normalizeIndent`
-        function Component() {
-          'use no forget';
-          return <div>Hello world</div>
-        }
-      `,
-      errors: [
-        {
-          message: ""Unused 'use no forget' directive"",
-          suggestions: [
-            {
-              output:
-                // yuck
-                '\nfunction Component() {\n  \n  return <div>Hello world</div>\n}\n',
-            },
-          ],
-        },
-      ],
-    },
-
-    {
-      name: ""Unused 'use no forget' directive is reported when no errors are present on non-components or hooks"",
-      code: normalizeIndent`
-        function notacomponent() {
-          'use no forget';
-          return 1 + 1;
-        }
-      `,
-      errors: [
-        {
-          message: ""Unused 'use no forget' directive"",
-          suggestions: [
-            {
-              output:
-                // yuck
-                '\nfunction notacomponent() {\n  \n  return 1 + 1;\n}\n',
-            },
-          ],
-        },
-      ],
-    },
-  ],
-});"
facebook/react,19f65ff179d377ff0c9284704dff2fce370745be,lauren,2025-10-02T23:19:01Z,"[eprh] Remove NoUnusedOptOutDirectives (#34703)

This rule was a leftover from a while ago and doesn't actually lint
anything useful. Specifically, you get a lint error if you try to opt
out a component that isn't already bailing out. If there's a bailout the
compiler already safely skips over it, so adding `'use no memo'` there
is unnecessary.

Fixes #31407

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34703).
* __->__ #34703
* #34700",compiler/packages/eslint-plugin-react-compiler/src/rules/ReactCompilerRule.ts,8,56,64,"@@ -161,69 +161,21 @@ function makeRule(rule: LintRule): Rule.RuleModule {
   };
 }
 
-export const NoUnusedDirectivesRule: Rule.RuleModule = {
-  meta: {
-    type: 'suggestion',
-    docs: {
-      recommended: true,
-    },
-    fixable: 'code',
-    hasSuggestions: true,
-    // validation is done at runtime with zod
-    schema: [{type: 'object', additionalProperties: true}],
-  },
-  create(context: Rule.RuleContext): Rule.RuleListener {
-    const results = getReactCompilerResult(context);
-
-    for (const directive of results.unusedOptOutDirectives) {
-      context.report({
-        message: `Unused '${directive.directive}' directive`,
-        loc: directive.loc,
-        suggest: [
-          {
-            desc: 'Remove the directive',
-            fix(fixer): Rule.Fix {
-              return fixer.removeRange(directive.range);
-            },
-          },
-        ],
-      });
-    }
-    return {};
-  },
-};
-
 type RulesConfig = {
   [name: string]: {rule: Rule.RuleModule; severity: ErrorSeverity};
 };
 
-export const allRules: RulesConfig = LintRules.reduce(
-  (acc, rule) => {
-    acc[rule.name] = {rule: makeRule(rule), severity: rule.severity};
-    return acc;
-  },
-  {
-    'no-unused-directives': {
-      rule: NoUnusedDirectivesRule,
-      severity: ErrorSeverity.Error,
-    },
-  } as RulesConfig,
-);
+export const allRules: RulesConfig = LintRules.reduce((acc, rule) => {
+  acc[rule.name] = {rule: makeRule(rule), severity: rule.severity};
+  return acc;
+}, {} as RulesConfig);
 
 export const recommendedRules: RulesConfig = LintRules.filter(
   rule => rule.recommended,
-).reduce(
-  (acc, rule) => {
-    acc[rule.name] = {rule: makeRule(rule), severity: rule.severity};
-    return acc;
-  },
-  {
-    'no-unused-directives': {
-      rule: NoUnusedDirectivesRule,
-      severity: ErrorSeverity.Error,
-    },
-  } as RulesConfig,
-);
+).reduce((acc, rule) => {
+  acc[rule.name] = {rule: makeRule(rule), severity: rule.severity};
+  return acc;
+}, {} as RulesConfig);
 
 export function mapErrorSeverityToESlint(
   severity: ErrorSeverity,"
facebook/react,19f65ff179d377ff0c9284704dff2fce370745be,lauren,2025-10-02T23:19:01Z,"[eprh] Remove NoUnusedOptOutDirectives (#34703)

This rule was a leftover from a while ago and doesn't actually lint
anything useful. Specifically, you get a lint error if you try to opt
out a component that isn't already bailing out. If there's a bailout the
compiler already safely skips over it, so adding `'use no memo'` there
is unnecessary.

Fixes #31407

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34703).
* __->__ #34703
* #34700",compiler/packages/eslint-plugin-react-compiler/src/shared/RunReactCompiler.ts,2,53,55,"@@ -5,20 +5,18 @@
  * LICENSE file in the root directory of this source tree.
  */
 
-import {transformFromAstSync, traverse} from '@babel/core';
+import {transformFromAstSync} from '@babel/core';
 import {parse as babelParse} from '@babel/parser';
-import {Directive, File} from '@babel/types';
+import {File} from '@babel/types';
 // @ts-expect-error: no types available
 import PluginProposalPrivateMethods from '@babel/plugin-proposal-private-methods';
 import BabelPluginReactCompiler, {
   parsePluginOptions,
   validateEnvironmentConfig,
-  OPT_OUT_DIRECTIVES,
   type PluginOptions,
 } from 'babel-plugin-react-compiler/src';
 import {Logger, LoggerEvent} from 'babel-plugin-react-compiler/src/Entrypoint';
 import type {SourceCode} from 'eslint';
-import {SourceLocation} from 'estree';
 // @ts-expect-error: no types available
 import * as HermesParser from 'hermes-parser';
 import {isDeepStrictEqual} from 'util';
@@ -45,17 +43,11 @@ const COMPILER_OPTIONS: PluginOptions = {
   }),
 };
 
-export type UnusedOptOutDirective = {
-  loc: SourceLocation;
-  range: [number, number];
-  directive: string;
-};
 export type RunCacheEntry = {
   sourceCode: string;
   filename: string;
   userOpts: PluginOptions;
   flowSuppressions: Array<{line: number; code: string}>;
-  unusedOptOutDirectives: Array<UnusedOptOutDirective>;
   events: Array<LoggerEvent>;
 };
 
@@ -87,25 +79,6 @@ function getFlowSuppressions(
   return results;
 }
 
-function filterUnusedOptOutDirectives(
-  directives: ReadonlyArray<Directive>,
-): Array<UnusedOptOutDirective> {
-  const results: Array<UnusedOptOutDirective> = [];
-  for (const directive of directives) {
-    if (
-      OPT_OUT_DIRECTIVES.has(directive.value.value) &&
-      directive.loc != null
-    ) {
-      results.push({
-        loc: directive.loc,
-        directive: directive.value.value,
-        range: [directive.start!, directive.end!],
-      });
-    }
-  }
-  return results;
-}
-
 function runReactCompilerImpl({
   sourceCode,
   filename,
@@ -125,7 +98,6 @@ function runReactCompilerImpl({
     filename,
     userOpts,
     flowSuppressions: [],
-    unusedOptOutDirectives: [],
     events: [],
   };
   const userLogger: Logger | null = options.logger;
@@ -181,29 +153,6 @@ function runReactCompilerImpl({
         configFile: false,
         babelrc: false,
       });
-
-      if (results.events.filter(e => e.kind === 'CompileError').length === 0) {
-        traverse(babelAST, {
-          FunctionDeclaration(path) {
-            path.node;
-            results.unusedOptOutDirectives.push(
-              ...filterUnusedOptOutDirectives(path.node.body.directives),
-            );
-          },
-          ArrowFunctionExpression(path) {
-            if (path.node.body.type === 'BlockStatement') {
-              results.unusedOptOutDirectives.push(
-                ...filterUnusedOptOutDirectives(path.node.body.directives),
-              );
-            }
-          },
-          FunctionExpression(path) {
-            results.unusedOptOutDirectives.push(
-              ...filterUnusedOptOutDirectives(path.node.body.directives),
-            );
-          },
-        });
-      }
     } catch (err) {
       /* errors handled by injected logger */
     }"
facebook/react,19f65ff179d377ff0c9284704dff2fce370745be,lauren,2025-10-02T23:19:01Z,"[eprh] Remove NoUnusedOptOutDirectives (#34703)

This rule was a leftover from a while ago and doesn't actually lint
anything useful. Specifically, you get a lint error if you try to opt
out a component that isn't already bailing out. If there's a bailout the
compiler already safely skips over it, so adding `'use no memo'` there
is unnecessary.

Fixes #31407

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34703).
* __->__ #34703
* #34700",packages/eslint-plugin-react-hooks/src/shared/ReactCompiler.ts,2,44,46,"@@ -160,38 +160,6 @@ function makeRule(rule: LintRule): Rule.RuleModule {
   };
 }
 
-export const NoUnusedDirectivesRule: Rule.RuleModule = {
-  meta: {
-    type: 'suggestion',
-    docs: {
-      recommended: true,
-    },
-    fixable: 'code',
-    hasSuggestions: true,
-    // validation is done at runtime with zod
-    schema: [{type: 'object', additionalProperties: true}],
-  },
-  create(context: Rule.RuleContext): Rule.RuleListener {
-    const results = getReactCompilerResult(context);
-
-    for (const directive of results.unusedOptOutDirectives) {
-      context.report({
-        message: `Unused '${directive.directive}' directive`,
-        loc: directive.loc,
-        suggest: [
-          {
-            desc: 'Remove the directive',
-            fix(fixer): Rule.Fix {
-              return fixer.removeRange(directive.range);
-            },
-          },
-        ],
-      });
-    }
-    return {};
-  },
-};
-
 type RulesConfig = {
   [name: string]: {rule: Rule.RuleModule; severity: ErrorSeverity};
 };
@@ -201,12 +169,7 @@ export const allRules: RulesConfig = LintRules.reduce(
     acc[rule.name] = {rule: makeRule(rule), severity: rule.severity};
     return acc;
   },
-  {
-    'no-unused-directives': {
-      rule: NoUnusedDirectivesRule,
-      severity: ErrorSeverity.Error,
-    },
-  } as RulesConfig,
+  {} as RulesConfig,
 );
 
 export const recommendedRules: RulesConfig = LintRules.filter(
@@ -216,12 +179,7 @@ export const recommendedRules: RulesConfig = LintRules.filter(
     acc[rule.name] = {rule: makeRule(rule), severity: rule.severity};
     return acc;
   },
-  {
-    'no-unused-directives': {
-      rule: NoUnusedDirectivesRule,
-      severity: ErrorSeverity.Error,
-    },
-  } as RulesConfig,
+  {} as RulesConfig,
 );
 
 export function mapErrorSeverityToESlint("
facebook/react,19f65ff179d377ff0c9284704dff2fce370745be,lauren,2025-10-02T23:19:01Z,"[eprh] Remove NoUnusedOptOutDirectives (#34703)

This rule was a leftover from a while ago and doesn't actually lint
anything useful. Specifically, you get a lint error if you try to opt
out a component that isn't already bailing out. If there's a bailout the
compiler already safely skips over it, so adding `'use no memo'` there
is unnecessary.

Fixes #31407

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34703).
* __->__ #34703
* #34700",packages/eslint-plugin-react-hooks/src/shared/RunReactCompiler.ts,2,51,53,"@@ -6,21 +6,19 @@
  */
 /* eslint-disable no-for-of-loops/no-for-of-loops */
 
-import {transformFromAstSync, traverse} from '@babel/core';
+import {transformFromAstSync} from '@babel/core';
 import {parse as babelParse} from '@babel/parser';
-import {Directive, File} from '@babel/types';
+import {File} from '@babel/types';
 // @ts-expect-error: no types available
 import PluginProposalPrivateMethods from '@babel/plugin-proposal-private-methods';
 import BabelPluginReactCompiler, {
   parsePluginOptions,
   validateEnvironmentConfig,
-  OPT_OUT_DIRECTIVES,
   type PluginOptions,
   Logger,
   LoggerEvent,
 } from 'babel-plugin-react-compiler';
 import type {SourceCode} from 'eslint';
-import {SourceLocation} from 'estree';
 import * as HermesParser from 'hermes-parser';
 import {isDeepStrictEqual} from 'util';
 import type {ParseResult} from '@babel/parser';
@@ -46,17 +44,11 @@ const COMPILER_OPTIONS: PluginOptions = {
   },
 };
 
-export type UnusedOptOutDirective = {
-  loc: SourceLocation;
-  range: [number, number];
-  directive: string;
-};
 export type RunCacheEntry = {
   sourceCode: string;
   filename: string;
   userOpts: PluginOptions;
   flowSuppressions: Array<{line: number; code: string}>;
-  unusedOptOutDirectives: Array<UnusedOptOutDirective>;
   events: Array<LoggerEvent>;
 };
 
@@ -88,24 +80,6 @@ function getFlowSuppressions(
   return results;
 }
 
-function filterUnusedOptOutDirectives(
-  directives: ReadonlyArray<Directive>,
-): Array<UnusedOptOutDirective> {
-  const results: Array<UnusedOptOutDirective> = [];
-  for (const directive of directives) {
-    if (
-      OPT_OUT_DIRECTIVES.has(directive.value.value) &&
-      directive.loc != null
-    ) {
-      results.push({
-        loc: directive.loc,
-        directive: directive.value.value,
-        range: [directive.start!, directive.end!],
-      });
-    }
-  }
-  return results;
-}
 
 function runReactCompilerImpl({
   sourceCode,
@@ -126,7 +100,6 @@ function runReactCompilerImpl({
     filename,
     userOpts,
     flowSuppressions: [],
-    unusedOptOutDirectives: [],
     events: [],
   };
   const userLogger: Logger | null = options.logger;
@@ -182,28 +155,6 @@ function runReactCompilerImpl({
         configFile: false,
         babelrc: false,
       });
-
-      if (results.events.filter(e => e.kind === 'CompileError').length === 0) {
-        traverse(babelAST, {
-          FunctionDeclaration(path) {
-            results.unusedOptOutDirectives.push(
-              ...filterUnusedOptOutDirectives(path.node.body.directives),
-            );
-          },
-          ArrowFunctionExpression(path) {
-            if (path.node.body.type === 'BlockStatement') {
-              results.unusedOptOutDirectives.push(
-                ...filterUnusedOptOutDirectives(path.node.body.directives),
-              );
-            }
-          },
-          FunctionExpression(path) {
-            results.unusedOptOutDirectives.push(
-              ...filterUnusedOptOutDirectives(path.node.body.directives),
-            );
-          },
-        });
-      }
     } catch (err) {
       /* errors handled by injected logger */
     }"
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",fixtures/eslint-v6/.eslintrc.json,1,4,5,"@@ -1,14 +1,11 @@
 {
   ""root"": true,
-  ""extends"": [""plugin:react-hooks/recommended-legacy""],
+  ""extends"": [""plugin:react-hooks/recommended-latest-legacy""],
   ""parserOptions"": {
     ""ecmaVersion"": 2020,
     ""sourceType"": ""module"",
     ""ecmaFeatures"": {
       ""jsx"": true
     }
-  },
-  ""rules"": {
-    ""react-hooks/exhaustive-deps"": ""error""
   }
 }"
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",fixtures/eslint-v6/index.js,24,0,24,"@@ -141,3 +141,27 @@ function useHookInLoops() {
     useHook4();
   }
 }
+
+/**
+ * Compiler Rules
+ */
+// Invalid: component factory
+function InvalidComponentFactory() {
+  const DynamicComponent = () => <div>Hello</div>;
+  // eslint-disable-next-line react-hooks/static-components
+  return <DynamicComponent />;
+}
+
+// Invalid: mutating globals
+function InvalidGlobals() {
+  // eslint-disable-next-line react-hooks/immutability
+  window.myGlobal = 42;
+  return <div>Done</div>;
+}
+
+// Invalid: useMemo with wrong deps - triggers preserve-manual-memoization
+function InvalidUseMemo({items}) {
+  // eslint-disable-next-line react-hooks/preserve-manual-memoization, react-hooks/exhaustive-deps
+  const sorted = useMemo(() => [...items].sort(), []);
+  return <div>{sorted.length}</div>;
+}"
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",fixtures/eslint-v7/.eslintrc.json,1,4,5,"@@ -1,14 +1,11 @@
 {
   ""root"": true,
-  ""extends"": [""plugin:react-hooks/recommended-legacy""],
+  ""extends"": [""plugin:react-hooks/recommended-latest-legacy""],
   ""parserOptions"": {
     ""ecmaVersion"": 2020,
     ""sourceType"": ""module"",
     ""ecmaFeatures"": {
       ""jsx"": true
     }
-  },
-  ""rules"": {
-    ""react-hooks/exhaustive-deps"": ""error""
   }
 }"
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",fixtures/eslint-v7/index.js,24,0,24,"@@ -141,3 +141,27 @@ function useHookInLoops() {
     useHook4();
   }
 }
+
+/**
+ * Compiler Rules
+ */
+// Invalid: component factory
+function InvalidComponentFactory() {
+  const DynamicComponent = () => <div>Hello</div>;
+  // eslint-disable-next-line react-hooks/static-components
+  return <DynamicComponent />;
+}
+
+// Invalid: mutating globals
+function InvalidGlobals() {
+  // eslint-disable-next-line react-hooks/immutability
+  window.myGlobal = 42;
+  return <div>Done</div>;
+}
+
+// Invalid: useMemo with wrong deps - triggers preserve-manual-memoization
+function InvalidUseMemo({items}) {
+  // eslint-disable-next-line react-hooks/preserve-manual-memoization, react-hooks/exhaustive-deps
+  const sorted = useMemo(() => [...items].sort(), []);
+  return <div>{sorted.length}</div>;
+}"
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",fixtures/eslint-v8/.eslintrc.json,1,4,5,"@@ -1,14 +1,11 @@
 {
   ""root"": true,
-  ""extends"": [""plugin:react-hooks/recommended-legacy""],
+  ""extends"": [""plugin:react-hooks/recommended-latest-legacy""],
   ""parserOptions"": {
     ""ecmaVersion"": 2020,
     ""sourceType"": ""module"",
     ""ecmaFeatures"": {
       ""jsx"": true
     }
-  },
-  ""rules"": {
-    ""react-hooks/exhaustive-deps"": ""error""
   }
 }"
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",fixtures/eslint-v8/index.js,24,0,24,"@@ -141,3 +141,27 @@ function useHookInLoops() {
     useHook4();
   }
 }
+
+/**
+ * Compiler Rules
+ */
+// Invalid: component factory
+function InvalidComponentFactory() {
+  const DynamicComponent = () => <div>Hello</div>;
+  // eslint-disable-next-line react-hooks/static-components
+  return <DynamicComponent />;
+}
+
+// Invalid: mutating globals
+function InvalidGlobals() {
+  // eslint-disable-next-line react-hooks/immutability
+  window.myGlobal = 42;
+  return <div>Done</div>;
+}
+
+// Invalid: useMemo with wrong deps - triggers preserve-manual-memoization
+function InvalidUseMemo({items}) {
+  // eslint-disable-next-line react-hooks/preserve-manual-memoization, react-hooks/exhaustive-deps
+  const sorted = useMemo(() => [...items].sort(), []);
+  return <div>{sorted.length}</div>;
+}"
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",fixtures/eslint-v9/eslint.config.ts,0,2,2,"@@ -1,8 +1,6 @@
 import {defineConfig} from 'eslint/config';
 import reactHooks from 'eslint-plugin-react-hooks';
 
-console.log(reactHooks.configs['recommended-latest']);
-
 export default defineConfig([
   {
     languageOptions: {"
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",fixtures/eslint-v9/index.js,24,0,24,"@@ -141,3 +141,27 @@ function useHookInLoops() {
     useHook4();
   }
 }
+
+/**
+ * Compiler Rules
+ */
+// Invalid: component factory
+function InvalidComponentFactory() {
+  const DynamicComponent = () => <div>Hello</div>;
+  // eslint-disable-next-line react-hooks/static-components
+  return <DynamicComponent />;
+}
+
+// Invalid: mutating globals
+function InvalidGlobals() {
+  // eslint-disable-next-line react-hooks/immutability
+  window.myGlobal = 42;
+  return <div>Done</div>;
+}
+
+// Invalid: useMemo with wrong deps - triggers preserve-manual-memoization
+function InvalidUseMemo({items}) {
+  // eslint-disable-next-line react-hooks/preserve-manual-memoization, react-hooks/exhaustive-deps
+  const sorted = useMemo(() => [...items].sort(), []);
+  return <div>{sorted.length}</div>;
+}"
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",fixtures/eslint-v9/yarn.lock,358,0,358,"@@ -2,6 +2,210 @@
 # yarn lockfile v1
 
 
+""@babel/code-frame@^7.27.1"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.27.1.tgz#200f715e66d52a23b221a9435534a91cc13ad5be""
+  integrity sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==
+  dependencies:
+    ""@babel/helper-validator-identifier"" ""^7.27.1""
+    js-tokens ""^4.0.0""
+    picocolors ""^1.1.1""
+
+""@babel/compat-data@^7.27.2"":
+  version ""7.28.4""
+  resolved ""https://registry.yarnpkg.com/@babel/compat-data/-/compat-data-7.28.4.tgz#96fdf1af1b8859c8474ab39c295312bfb7c24b04""
+  integrity sha512-YsmSKC29MJwf0gF8Rjjrg5LQCmyh+j/nD8/eP7f+BeoQTKYqs9RoWbjGOdy0+1Ekr68RJZMUOPVQaQisnIo4Rw==
+
+""@babel/core@^7.24.4"":
+  version ""7.28.4""
+  resolved ""https://registry.yarnpkg.com/@babel/core/-/core-7.28.4.tgz#12a550b8794452df4c8b084f95003bce1742d496""
+  integrity sha512-2BCOP7TN8M+gVDj7/ht3hsaO/B/n5oDbiAyyvnRlNOs+u1o+JWNYTQrmpuNp1/Wq2gcFrI01JAW+paEKDMx/CA==
+  dependencies:
+    ""@babel/code-frame"" ""^7.27.1""
+    ""@babel/generator"" ""^7.28.3""
+    ""@babel/helper-compilation-targets"" ""^7.27.2""
+    ""@babel/helper-module-transforms"" ""^7.28.3""
+    ""@babel/helpers"" ""^7.28.4""
+    ""@babel/parser"" ""^7.28.4""
+    ""@babel/template"" ""^7.27.2""
+    ""@babel/traverse"" ""^7.28.4""
+    ""@babel/types"" ""^7.28.4""
+    ""@jridgewell/remapping"" ""^2.3.5""
+    convert-source-map ""^2.0.0""
+    debug ""^4.1.0""
+    gensync ""^1.0.0-beta.2""
+    json5 ""^2.2.3""
+    semver ""^6.3.1""
+
+""@babel/generator@^7.28.3"":
+  version ""7.28.3""
+  resolved ""https://registry.yarnpkg.com/@babel/generator/-/generator-7.28.3.tgz#9626c1741c650cbac39121694a0f2d7451b8ef3e""
+  integrity sha512-3lSpxGgvnmZznmBkCRnVREPUFJv2wrv9iAoFDvADJc0ypmdOxdUtcLeBgBJ6zE0PMeTKnxeQzyk0xTBq4Ep7zw==
+  dependencies:
+    ""@babel/parser"" ""^7.28.3""
+    ""@babel/types"" ""^7.28.2""
+    ""@jridgewell/gen-mapping"" ""^0.3.12""
+    ""@jridgewell/trace-mapping"" ""^0.3.28""
+    jsesc ""^3.0.2""
+
+""@babel/helper-annotate-as-pure@^7.27.3"":
+  version ""7.27.3""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.27.3.tgz#f31fd86b915fc4daf1f3ac6976c59be7084ed9c5""
+  integrity sha512-fXSwMQqitTGeHLBC08Eq5yXz2m37E4pJX1qAU1+2cNedz/ifv/bVXft90VeSav5nFO61EcNgwr0aJxbyPaWBPg==
+  dependencies:
+    ""@babel/types"" ""^7.27.3""
+
+""@babel/helper-compilation-targets@^7.27.2"":
+  version ""7.27.2""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz#46a0f6efab808d51d29ce96858dd10ce8732733d""
+  integrity sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==
+  dependencies:
+    ""@babel/compat-data"" ""^7.27.2""
+    ""@babel/helper-validator-option"" ""^7.27.1""
+    browserslist ""^4.24.0""
+    lru-cache ""^5.1.1""
+    semver ""^6.3.1""
+
+""@babel/helper-create-class-features-plugin@^7.18.6"":
+  version ""7.28.3""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.28.3.tgz#3e747434ea007910c320c4d39a6b46f20f371d46""
+  integrity sha512-V9f6ZFIYSLNEbuGA/92uOvYsGCJNsuA8ESZ4ldc09bWk/j8H8TKiPw8Mk1eG6olpnO0ALHJmYfZvF4MEE4gajg==
+  dependencies:
+    ""@babel/helper-annotate-as-pure"" ""^7.27.3""
+    ""@babel/helper-member-expression-to-functions"" ""^7.27.1""
+    ""@babel/helper-optimise-call-expression"" ""^7.27.1""
+    ""@babel/helper-replace-supers"" ""^7.27.1""
+    ""@babel/helper-skip-transparent-expression-wrappers"" ""^7.27.1""
+    ""@babel/traverse"" ""^7.28.3""
+    semver ""^6.3.1""
+
+""@babel/helper-globals@^7.28.0"":
+  version ""7.28.0""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-globals/-/helper-globals-7.28.0.tgz#b9430df2aa4e17bc28665eadeae8aa1d985e6674""
+  integrity sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==
+
+""@babel/helper-member-expression-to-functions@^7.27.1"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.27.1.tgz#ea1211276be93e798ce19037da6f06fbb994fa44""
+  integrity sha512-E5chM8eWjTp/aNoVpcbfM7mLxu9XGLWYise2eBKGQomAk/Mb4XoxyqXTZbuTohbsl8EKqdlMhnDI2CCLfcs9wA==
+  dependencies:
+    ""@babel/traverse"" ""^7.27.1""
+    ""@babel/types"" ""^7.27.1""
+
+""@babel/helper-module-imports@^7.27.1"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz#7ef769a323e2655e126673bb6d2d6913bbead204""
+  integrity sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==
+  dependencies:
+    ""@babel/traverse"" ""^7.27.1""
+    ""@babel/types"" ""^7.27.1""
+
+""@babel/helper-module-transforms@^7.28.3"":
+  version ""7.28.3""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-module-transforms/-/helper-module-transforms-7.28.3.tgz#a2b37d3da3b2344fe085dab234426f2b9a2fa5f6""
+  integrity sha512-gytXUbs8k2sXS9PnQptz5o0QnpLL51SwASIORY6XaBKF88nsOT0Zw9szLqlSGQDP/4TljBAD5y98p2U1fqkdsw==
+  dependencies:
+    ""@babel/helper-module-imports"" ""^7.27.1""
+    ""@babel/helper-validator-identifier"" ""^7.27.1""
+    ""@babel/traverse"" ""^7.28.3""
+
+""@babel/helper-optimise-call-expression@^7.27.1"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.27.1.tgz#c65221b61a643f3e62705e5dd2b5f115e35f9200""
+  integrity sha512-URMGH08NzYFhubNSGJrpUEphGKQwMQYBySzat5cAByY1/YgIRkULnIy3tAMeszlL/so2HbeilYloUmSpd7GdVw==
+  dependencies:
+    ""@babel/types"" ""^7.27.1""
+
+""@babel/helper-plugin-utils@^7.18.6"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz#ddb2f876534ff8013e6c2b299bf4d39b3c51d44c""
+  integrity sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==
+
+""@babel/helper-replace-supers@^7.27.1"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-replace-supers/-/helper-replace-supers-7.27.1.tgz#b1ed2d634ce3bdb730e4b52de30f8cccfd692bc0""
+  integrity sha512-7EHz6qDZc8RYS5ElPoShMheWvEgERonFCs7IAonWLLUTXW59DP14bCZt89/GKyreYn8g3S83m21FelHKbeDCKA==
+  dependencies:
+    ""@babel/helper-member-expression-to-functions"" ""^7.27.1""
+    ""@babel/helper-optimise-call-expression"" ""^7.27.1""
+    ""@babel/traverse"" ""^7.27.1""
+
+""@babel/helper-skip-transparent-expression-wrappers@^7.27.1"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.27.1.tgz#62bb91b3abba8c7f1fec0252d9dbea11b3ee7a56""
+  integrity sha512-Tub4ZKEXqbPjXgWLl2+3JpQAYBJ8+ikpQ2Ocj/q/r0LwE3UhENh7EUabyHjz2kCEsrRY83ew2DQdHluuiDQFzg==
+  dependencies:
+    ""@babel/traverse"" ""^7.27.1""
+    ""@babel/types"" ""^7.27.1""
+
+""@babel/helper-string-parser@^7.27.1"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz#54da796097ab19ce67ed9f88b47bb2ec49367687""
+  integrity sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==
+
+""@babel/helper-validator-identifier@^7.27.1"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz#a7054dcc145a967dd4dc8fee845a57c1316c9df8""
+  integrity sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==
+
+""@babel/helper-validator-option@^7.27.1"":
+  version ""7.27.1""
+  resolved ""https://registry.yarnpkg.com/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz#fa52f5b1e7db1ab049445b421c4471303897702f""
+  integrity sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==
+
+""@babel/helpers@^7.28.4"":
+  version ""7.28.4""
+  resolved ""https://registry.yarnpkg.com/@babel/helpers/-/helpers-7.28.4.tgz#fe07274742e95bdf7cf1443593eeb8926ab63827""
+  integrity sha512-HFN59MmQXGHVyYadKLVumYsA9dBFun/ldYxipEjzA4196jpLZd8UjEEBLkbEkvfYreDqJhZxYAWFPtrfhNpj4w==
+  dependencies:
+    ""@babel/template"" ""^7.27.2""
+    ""@babel/types"" ""^7.28.4""
+
+""@babel/parser@^7.24.4"", ""@babel/parser@^7.27.2"", ""@babel/parser@^7.28.3"", ""@babel/parser@^7.28.4"":
+  version ""7.28.4""
+  resolved ""https://registry.yarnpkg.com/@babel/parser/-/parser-7.28.4.tgz#da25d4643532890932cc03f7705fe19637e03fa8""
+  integrity sha512-yZbBqeM6TkpP9du/I2pUZnJsRMGGvOuIrhjzC1AwHwW+6he4mni6Bp/m8ijn0iOuZuPI2BfkCoSRunpyjnrQKg==
+  dependencies:
+    ""@babel/types"" ""^7.28.4""
+
+""@babel/plugin-proposal-private-methods@^7.18.6"":
+  version ""7.18.6""
+  resolved ""https://registry.yarnpkg.com/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.18.6.tgz#5209de7d213457548a98436fa2882f52f4be6bea""
+  integrity sha512-nutsvktDItsNn4rpGItSNV2sz1XwS+nfU0Rg8aCx3W3NOKVzdMjJRu0O5OkgDp3ZGICSTbgRpxZoWsxoKRvbeA==
+  dependencies:
+    ""@babel/helper-create-class-features-plugin"" ""^7.18.6""
+    ""@babel/helper-plugin-utils"" ""^7.18.6""
+
+""@babel/template@^7.27.2"":
+  version ""7.27.2""
+  resolved ""https://registry.yarnpkg.com/@babel/template/-/template-7.27.2.tgz#fa78ceed3c4e7b63ebf6cb39e5852fca45f6809d""
+  integrity sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==
+  dependencies:
+    ""@babel/code-frame"" ""^7.27.1""
+    ""@babel/parser"" ""^7.27.2""
+    ""@babel/types"" ""^7.27.1""
+
+""@babel/traverse@^7.27.1"", ""@babel/traverse@^7.28.3"", ""@babel/traverse@^7.28.4"":
+  version ""7.28.4""
+  resolved ""https://registry.yarnpkg.com/@babel/traverse/-/traverse-7.28.4.tgz#8d456101b96ab175d487249f60680221692b958b""
+  integrity sha512-YEzuboP2qvQavAcjgQNVgsvHIDv6ZpwXvcvjmyySP2DIMuByS/6ioU5G9pYrWHM6T2YDfc7xga9iNzYOs12CFQ==
+  dependencies:
+    ""@babel/code-frame"" ""^7.27.1""
+    ""@babel/generator"" ""^7.28.3""
+    ""@babel/helper-globals"" ""^7.28.0""
+    ""@babel/parser"" ""^7.28.4""
+    ""@babel/template"" ""^7.27.2""
+    ""@babel/types"" ""^7.28.4""
+    debug ""^4.3.1""
+
+""@babel/types@^7.27.1"", ""@babel/types@^7.27.3"", ""@babel/types@^7.28.2"", ""@babel/types@^7.28.4"":
+  version ""7.28.4""
+  resolved ""https://registry.yarnpkg.com/@babel/types/-/types-7.28.4.tgz#0a4e618f4c60a7cd6c11cb2d48060e4dbe38ac3a""
+  integrity sha512-bkFqkLhh3pMBUQQkpVgWDWq/lqzc2678eUyDlTBhRqhCHFguYYGM0Efga7tYk4TogG/3x0EEl66/OQ+WGbWB/Q==
+  dependencies:
+    ""@babel/helper-string-parser"" ""^7.27.1""
+    ""@babel/helper-validator-identifier"" ""^7.27.1""
+
 ""@eslint-community/eslint-utils@^4.2.0"":
   version ""4.4.1""
   resolved ""https://registry.yarnpkg.com/@eslint-community/eslint-utils/-/eslint-utils-4.4.1.tgz#d1145bf2c20132d6400495d6df4bf59362fd9d56""
@@ -96,6 +300,40 @@
   resolved ""https://registry.yarnpkg.com/@humanwhocodes/retry/-/retry-0.4.2.tgz#1860473de7dfa1546767448f333db80cb0ff2161""
   integrity sha512-xeO57FpIu4p1Ri3Jq/EXq4ClRm86dVF2z/+kvFnyqVYRavTZmaFaUBbWCOuuTh0o/g7DSsk6kc2vrS4Vl5oPOQ==
 
+""@jridgewell/gen-mapping@^0.3.12"", ""@jridgewell/gen-mapping@^0.3.5"":
+  version ""0.3.13""
+  resolved ""https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.13.tgz#6342a19f44347518c93e43b1ac69deb3c4656a1f""
+  integrity sha512-2kkt/7niJ6MgEPxF0bYdQ6etZaA+fQvDcLKckhy1yIQOzaoKjBBjSj63/aLVjYE3qhRt5dvM+uUyfCg6UKCBbA==
+  dependencies:
+    ""@jridgewell/sourcemap-codec"" ""^1.5.0""
+    ""@jridgewell/trace-mapping"" ""^0.3.24""
+
+""@jridgewell/remapping@^2.3.5"":
+  version ""2.3.5""
+  resolved ""https://registry.yarnpkg.com/@jridgewell/remapping/-/remapping-2.3.5.tgz#375c476d1972947851ba1e15ae8f123047445aa1""
+  integrity sha512-LI9u/+laYG4Ds1TDKSJW2YPrIlcVYOwi2fUC6xB43lueCjgxV4lffOCZCtYFiH6TNOX+tQKXx97T4IKHbhyHEQ==
+  dependencies:
+    ""@jridgewell/gen-mapping"" ""^0.3.5""
+    ""@jridgewell/trace-mapping"" ""^0.3.24""
+
+""@jridgewell/resolve-uri@^3.1.0"":
+  version ""3.1.2""
+  resolved ""https://registry.yarnpkg.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz#7a0ee601f60f99a20c7c7c5ff0c80388c1189bd6""
+  integrity sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==
+
+""@jridgewell/sourcemap-codec@^1.4.14"", ""@jridgewell/sourcemap-codec@^1.5.0"":
+  version ""1.5.5""
+  resolved ""https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.5.tgz#6912b00d2c631c0d15ce1a7ab57cd657f2a8f8ba""
+  integrity sha512-cYQ9310grqxueWbl+WuIUIaiUaDcj7WOq5fVhEljNVgRfOUhY9fy2zTvfoqWsnebh8Sl70VScFbICvJnLKB0Og==
+
+""@jridgewell/trace-mapping@^0.3.24"", ""@jridgewell/trace-mapping@^0.3.28"":
+  version ""0.3.31""
+  resolved ""https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.31.tgz#db15d6781c931f3a251a3dac39501c98a6082fd0""
+  integrity sha512-zzNR+SdQSDJzc8joaeP8QQoCQr8NuYx2dIIytl1QeBEZHJ9uW6hebsrYgbz8hJwUQao3TWCMtmfV8Nu1twOLAw==
+  dependencies:
+    ""@jridgewell/resolve-uri"" ""^3.1.0""
+    ""@jridgewell/sourcemap-codec"" ""^1.4.14""
+
 ""@types/estree@^1.0.6"":
   version ""1.0.6""
   resolved ""https://registry.yarnpkg.com/@types/estree/-/estree-1.0.6.tgz#628effeeae2064a1b4e79f78e81d87b7e5fc7b50""
@@ -148,6 +386,11 @@ balanced-match@^1.0.0:
   resolved ""https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.0.tgz#89b4d199ab2bee49de164ea02b89ce462d71b767""
   integrity sha1-ibTRmasr7kneFk6gK4nORi1xt2c=
 
+baseline-browser-mapping@^2.8.9:
+  version ""2.8.10""
+  resolved ""https://registry.yarnpkg.com/baseline-browser-mapping/-/baseline-browser-mapping-2.8.10.tgz#32eb5e253d633fa3fa3ffb1685fabf41680d9e8a""
+  integrity sha512-uLfgBi+7IBNay8ECBO2mVMGZAc1VgZWEChxm4lv+TobGdG82LnXMjuNGo/BSSZZL4UmkWhxEHP2f5ziLNwGWMA==
+
 brace-expansion@^1.1.7:
   version ""1.1.11""
   resolved ""https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-1.1.11.tgz#3c7fcbf529d87226f3d2f52b966ff5271eb441dd""
@@ -156,11 +399,27 @@ brace-expansion@^1.1.7:
     balanced-match ""^1.0.0""
     concat-map ""0.0.1""
 
+browserslist@^4.24.0:
+  version ""4.26.3""
+  resolved ""https://registry.yarnpkg.com/browserslist/-/browserslist-4.26.3.tgz#40fbfe2d1cd420281ce5b1caa8840049c79afb56""
+  integrity sha512-lAUU+02RFBuCKQPj/P6NgjlbCnLBMp4UtgTx7vNHd3XSIJF87s9a5rA3aH2yw3GS9DqZAUbOtZdCCiZeVRqt0w==
+  dependencies:
+    baseline-browser-mapping ""^2.8.9""
+    caniuse-lite ""^1.0.30001746""
+    electron-to-chromium ""^1.5.227""
+    node-releases ""^2.0.21""
+    update-browserslist-db ""^1.1.3""
+
 callsites@^3.0.0:
   version ""3.1.0""
   resolved ""https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73""
   integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
 
+caniuse-lite@^1.0.30001746:
+  version ""1.0.30001746""
+  resolved ""https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001746.tgz#199d20f04f5369825e00ff7067d45d5dfa03aee7""
+  integrity sha512-eA7Ys/DGw+pnkWWSE/id29f2IcPHVoE8wxtvE5JdvD2V28VTDPy1yEeo11Guz0sJ4ZeGRcm3uaTcAqK1LXaphA==
+
 chalk@^4.0.0:
   version ""4.1.2""
   resolved ""https://registry.yarnpkg.com/chalk/-/chalk-4.1.2.tgz#aac4e2b7734a740867aeb16bf02aad556a1e7a01""
@@ -186,6 +445,11 @@ concat-map@0.0.1:
   resolved ""https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b""
   integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=
 
+convert-source-map@^2.0.0:
+  version ""2.0.0""
+  resolved ""https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-2.0.0.tgz#4b560f649fc4e918dd0ab75cf4961e8bc882d82a""
+  integrity sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==
+
 cross-spawn@^7.0.6:
   version ""7.0.6""
   resolved ""https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.6.tgz#8a58fe78f00dcd70c370451759dfbfaf03e8ee9f""
@@ -195,6 +459,13 @@ cross-spawn@^7.0.6:
     shebang-command ""^2.0.0""
     which ""^2.0.1""
 
+debug@^4.1.0:
+  version ""4.4.3""
+  resolved ""https://registry.yarnpkg.com/debug/-/debug-4.4.3.tgz#c6ae432d9bd9662582fce08709b038c58e9e3d6a""
+  integrity sha512-RGwwWnwQvkVfavKVt22FGLw+xYSdzARwm0ru6DhTVA3umU5hZc28V3kO4stgYryrTlLpuvgI9GiijltAjNbcqA==
+  dependencies:
+    ms ""^2.1.3""
+
 debug@^4.3.1, debug@^4.3.2:
   version ""4.4.0""
   resolved ""https://registry.yarnpkg.com/debug/-/debug-4.4.0.tgz#2b3f2aea2ffeb776477460267377dc8710faba8a""
@@ -207,6 +478,16 @@ deep-is@^0.1.3:
   resolved ""https://registry.yarnpkg.com/deep-is/-/deep-is-0.1.4.tgz#a6f2dce612fadd2ef1f519b73551f17e85199831""
   integrity sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==
 
+electron-to-chromium@^1.5.227:
+  version ""1.5.228""
+  resolved ""https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.5.228.tgz#38b849bc8714bd21fb64f5ad56bf8cfd8638e1e9""
+  integrity sha512-nxkiyuqAn4MJ1QbobwqJILiDtu/jk14hEAWaMiJmNPh1Z+jqoFlBFZjdXwLWGeVSeu9hGLg6+2G9yJaW8rBIFA==
+
+escalade@^3.2.0:
+  version ""3.2.0""
+  resolved ""https://registry.yarnpkg.com/escalade/-/escalade-3.2.0.tgz#011a3f69856ba189dffa7dc8fcce99d2a87903e5""
+  integrity sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==
+
 escape-string-regexp@^4.0.0:
   version ""4.0.0""
   resolved ""https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz#14ba83a5d373e3d311e5afca29cf5bfad965bf34""
@@ -365,6 +646,11 @@ flatted@^3.2.9:
   resolved ""https://registry.yarnpkg.com/flatted/-/flatted-3.3.2.tgz#adba1448a9841bec72b42c532ea23dbbedef1a27""
   integrity sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==
 
+gensync@^1.0.0-beta.2:
+  version ""1.0.0-beta.2""
+  resolved ""https://registry.yarnpkg.com/gensync/-/gensync-1.0.0-beta.2.tgz#32a6ee76c3d7f52d46b2b1ae5d93fea8580a25e0""
+  integrity sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==
+
 glob-parent@^6.0.2:
   version ""6.0.2""
   resolved ""https://registry.yarnpkg.com/glob-parent/-/glob-parent-6.0.2.tgz#6d237d99083950c79290f24c7642a3de9a28f9e3""
@@ -382,6 +668,18 @@ has-flag@^4.0.0:
   resolved ""https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b""
   integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
 
+hermes-estree@0.25.1:
+  version ""0.25.1""
+  resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480""
+  integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw==
+
+hermes-parser@^0.25.1:
+  version ""0.25.1""
+  resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1""
+  integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA==
+  dependencies:
+    hermes-estree ""0.25.1""
+
 ignore@^5.2.0:
   version ""5.3.2""
   resolved ""https://registry.yarnpkg.com/ignore/-/ignore-5.3.2.tgz#3cd40e729f3643fd87cb04e50bf0eb722bc596f5""
@@ -422,13 +720,23 @@ jiti@^2.4.2:
   resolved ""https://registry.yarnpkg.com/jiti/-/jiti-2.4.2.tgz#d19b7732ebb6116b06e2038da74a55366faef560""
   integrity sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==
 
+js-tokens@^4.0.0:
+  version ""4.0.0""
+  resolved ""https://registry.yarnpkg.com/js-tokens/-/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499""
+  integrity sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==
+
 js-yaml@^4.1.0:
   version ""4.1.0""
   resolved ""https://registry.yarnpkg.com/js-yaml/-/js-yaml-4.1.0.tgz#c1fb65f8f5017901cdd2c951864ba18458a10602""
   integrity sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==
   dependencies:
     argparse ""^2.0.1""
 
+jsesc@^3.0.2:
+  version ""3.1.0""
+  resolved ""https://registry.yarnpkg.com/jsesc/-/jsesc-3.1.0.tgz#74d335a234f67ed19907fdadfac7ccf9d409825d""
+  integrity sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==
+
 json-buffer@3.0.1:
   version ""3.0.1""
   resolved ""https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.1.tgz#9338802a30d3b6605fbe0613e094008ca8c05a13""
@@ -444,6 +752,11 @@ json-stable-stringify-without-jsonify@^1.0.1:
   resolved ""https://registry.yarnpkg.com/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz#9db7b59496ad3f3cfef30a75142d2d930ad72651""
   integrity sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==
 
+json5@^2.2.3:
+  version ""2.2.3""
+  resolved ""https://registry.yarnpkg.com/json5/-/json5-2.2.3.tgz#78cd6f1a19bdc12b73db5ad0c61efd66c1e29283""
+  integrity sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==
+
 keyv@^4.5.4:
   version ""4.5.4""
   resolved ""https://registry.yarnpkg.com/keyv/-/keyv-4.5.4.tgz#a879a99e29452f942439f2a405e3af8b31d4de93""
@@ -471,6 +784,13 @@ lodash.merge@^4.6.2:
   resolved ""https://registry.yarnpkg.com/lodash.merge/-/lodash.merge-4.6.2.tgz#558aa53b43b661e1925a0afdfa36a9a1085fe57a""
   integrity sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==
 
+lru-cache@^5.1.1:
+  version ""5.1.1""
+  resolved ""https://registry.yarnpkg.com/lru-cache/-/lru-cache-5.1.1.tgz#1da27e6710271947695daf6848e847f01d84b920""
+  integrity sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==
+  dependencies:
+    yallist ""^3.0.2""
+
 minimatch@^3.1.2:
   version ""3.1.2""
   resolved ""https://registry.yarnpkg.com/minimatch/-/minimatch-3.1.2.tgz#19cd194bfd3e428f049a70817c038d89ab4be35b""
@@ -488,6 +808,11 @@ natural-compare@^1.4.0:
   resolved ""https://registry.yarnpkg.com/natural-compare/-/natural-compare-1.4.0.tgz#4abebfeed7541f2c27acfb29bdbbd15c8d5ba4f7""
   integrity sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=
 
+node-releases@^2.0.21:
+  version ""2.0.21""
+  resolved ""https://registry.yarnpkg.com/node-releases/-/node-releases-2.0.21.tgz#f59b018bc0048044be2d4c4c04e4c8b18160894c""
+  integrity sha512-5b0pgg78U3hwXkCM8Z9b2FJdPZlr9Psr9V2gQPESdGHqbntyFJKFW4r5TeWGFzafGY3hzs1JC62VEQMbl1JFkw==
+
 optionator@^0.9.3:
   version ""0.9.4""
   resolved ""https://registry.yarnpkg.com/optionator/-/optionator-0.9.4.tgz#7ea1c1a5d91d764fb282139c88fe11e182a3a734""
@@ -531,6 +856,11 @@ path-key@^3.1.0:
   resolved ""https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375""
   integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
 
+picocolors@^1.1.1:
+  version ""1.1.1""
+  resolved ""https://registry.yarnpkg.com/picocolors/-/picocolors-1.1.1.tgz#3d321af3eab939b083c8f929a1d12cda81c26b6b""
+  integrity sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==
+
 prelude-ls@^1.2.1:
   version ""1.2.1""
   resolved ""https://registry.yarnpkg.com/prelude-ls/-/prelude-ls-1.2.1.tgz#debc6489d7a6e6b0e7611888cec880337d316396""
@@ -546,6 +876,11 @@ resolve-from@^4.0.0:
   resolved ""https://registry.yarnpkg.com/resolve-from/-/resolve-from-4.0.0.tgz#4abcd852ad32dd7baabfe9b40e00a36db5f392e6""
   integrity sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==
 
+semver@^6.3.1:
+  version ""6.3.1""
+  resolved ""https://registry.yarnpkg.com/semver/-/semver-6.3.1.tgz#556d2ef8689146e46dcea4bfdd095f3434dffcb4""
+  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==
+
 shebang-command@^2.0.0:
   version ""2.0.0""
   resolved ""https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea""
@@ -577,6 +912,14 @@ type-check@^0.4.0, type-check@~0.4.0:
   dependencies:
     prelude-ls ""^1.2.1""
 
+update-browserslist-db@^1.1.3:
+  version ""1.1.3""
+  resolved ""https://registry.yarnpkg.com/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz#348377dd245216f9e7060ff50b15a1b740b75420""
+  integrity sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==
+  dependencies:
+    escalade ""^3.2.0""
+    picocolors ""^1.1.1""
+
 uri-js@^4.2.2:
   version ""4.2.2""
   resolved ""https://registry.yarnpkg.com/uri-js/-/uri-js-4.2.2.tgz#94c540e1ff772956e2299507c010aea6c8838eb0""
@@ -596,7 +939,22 @@ word-wrap@^1.2.5:
   resolved ""https://registry.yarnpkg.com/word-wrap/-/word-wrap-1.2.5.tgz#d2c45c6dd4fbce621a66f136cbe328afd0410b34""
   integrity sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==
 
+yallist@^3.0.2:
+  version ""3.1.1""
+  resolved ""https://registry.yarnpkg.com/yallist/-/yallist-3.1.1.tgz#dbb7daf9bfd8bac9ab45ebf602b8cbad0d5d08fd""
+  integrity sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==
+
 yocto-queue@^0.1.0:
   version ""0.1.0""
   resolved ""https://registry.yarnpkg.com/yocto-queue/-/yocto-queue-0.1.0.tgz#0294eb3dee05028d31ee1a5fa2c556a6aaf10a1b""
   integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==
+
+zod-validation-error@^3.0.3:
+  version ""3.5.3""
+  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-3.5.3.tgz#85ba33290200d8db9f043621e284f40dddefb7e5""
+  integrity sha512-OT5Y8lbUadqVZCsnyFaTQ4/O2mys4tj7PqhdbBCp7McPwvIEKfPtdA6QfPeFQK2/Rz5LgwmAXRJTugBNBi0btw==
+
+zod@^3.22.4:
+  version ""3.25.76""
+  resolved ""https://registry.yarnpkg.com/zod/-/zod-3.25.76.tgz#26841c3f6fd22a6a2760e7ccb719179768471e34""
+  integrity sha512-gzUt/qt81nXsFGKIFcC3YnfEAx5NkunCfnDlvuBSSFS02bcXu4Lmea0AFIUwbLWxWPx3d9p8S5QoaujKcNQxcQ=="
facebook/react,26b177bc5e1d287c60c50fc1e185b2fb398488a0,lauren,2025-10-02T22:52:52Z,"[eprh] Fix `recommended` config for flat config compatibility (#34700)

Previously, the `recommended` config used the legacy ESLint format
(plugins as an array of strings). This causes errors when used with
ESLint v9's `defineConfig()` helper. This was following [eslint's own
docs](https://eslint.org/docs/latest/extend/plugins#backwards-compatibility-for-legacy-configs):

> With this approach, both configuration systems recognize
""recommended"". The old config system uses the recommended key while the
current config system uses the flat/recommended key. The defineConfig()
helper first looks at the recommended key, and if that is not in the
correct format, it looks for the flat/recommended key. This allows you
an upgrade path if you’d later like to rename flat/recommended to
recommended when you no longer need to support the old config system.

However,
[`isLegacyConfig()`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L73-L81)
(also see
[`eslintrcKeys`](https://github.com/eslint/rewrite/blob/main/packages/config-helpers/src/define-config.js#L24-L35))
function doesn't check for the `plugins` key, so our config was
incorrectly treated as flat config despite being in legacy format.

This PR fixes the issue, along with a few other fixes combined:

1. Convert `recommended` to flat config format
2. Separate basic rules (exhaustive-deps, rules-of-hooks) from compiler
rules
3. Add `recommended-latest-legacy` config for non-flat config users who
want all recommended rules (including compiler rules)
4. Adding more types for the exported config

Our shipped presets in 6.x.x will essentially be:
- `recommended-legacy`: legacy (non-flat), with basic rules only
- `recommended-latest-legacy`: legacy (non-flat), all rules (basic +
compiler)
- `flat/recommended`: flat, basic rules only (now the same as
recommended, but to avoid making a breaking change we'll just keep it
around in 6.x.x)
- `recommended-latest`: flat, all rules (basic + compiler)
- `recommended`: flat, basic rules only

In the next breaking release 7.x.x, we will collapse down the presets
into three:

- `recommended-legacy`: all recommended rules
- `recommended`: all recommended rules
- `recommended-experimental`: all recommended rules + new bleeding edge
experimental rules

Closes #34679

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34700).
* #34703
* __->__ #34700",packages/eslint-plugin-react-hooks/src/index.ts,47,20,67,"@@ -23,41 +23,64 @@ const rules = {
   ),
 } satisfies Record<string, Rule.RuleModule>;
 
-// Config rules
-const ruleConfigs = {
+// Basic hooks rules (for recommended config)
+const basicRuleConfigs = {
   'react-hooks/rules-of-hooks': 'error',
   'react-hooks/exhaustive-deps': 'warn',
-  // Compiler rules
-  ...Object.fromEntries(
-    Object.entries(recommendedRules).map(([name, ruleConfig]) => {
-      return [
-        'react-hooks/' + name,
-        mapErrorSeverityToESlint(ruleConfig.severity),
-      ];
-    }),
-  ),
-} satisfies Linter.RulesRecord;
+} as const satisfies Linter.RulesRecord;
+
+const compilerRuleConfigs = Object.fromEntries(
+  Object.entries(recommendedRules).map(([name, ruleConfig]) => {
+    return [
+      `react-hooks/${name}` as const,
+      mapErrorSeverityToESlint(ruleConfig.severity),
+    ] as const;
+  }),
+) as Record<`react-hooks/${string}`, Linter.RuleEntry>;
+
+// All rules including compiler rules (for recommended-latest config)
+const allRuleConfigs: Linter.RulesRecord = {
+  ...basicRuleConfigs,
+  ...compilerRuleConfigs,
+};
 
 const plugin = {
   meta: {
     name: 'eslint-plugin-react-hooks',
   },
-  configs: {},
   rules,
+  configs: {} as {
+    'recommended-legacy': {
+      plugins: Array<string>;
+      rules: Linter.RulesRecord;
+    };
+    'recommended-latest-legacy': {
+      plugins: Array<string>;
+      rules: Linter.RulesRecord;
+    };
+    'flat/recommended': Array<Linter.Config>;
+    'recommended-latest': Array<Linter.Config>;
+    recommended: Array<Linter.Config>;
+  },
 };
 
 Object.assign(plugin.configs, {
   'recommended-legacy': {
     plugins: ['react-hooks'],
-    rules: ruleConfigs,
+    rules: basicRuleConfigs,
+  },
+
+  'recommended-latest-legacy': {
+    plugins: ['react-hooks'],
+    rules: allRuleConfigs,
   },
 
   'flat/recommended': [
     {
       plugins: {
         'react-hooks': plugin,
       },
-      rules: ruleConfigs,
+      rules: basicRuleConfigs,
     },
   ],
 
@@ -66,14 +89,18 @@ Object.assign(plugin.configs, {
       plugins: {
         'react-hooks': plugin,
       },
-      rules: ruleConfigs,
+      rules: allRuleConfigs,
     },
   ],
 
-  recommended: {
-    plugins: ['react-hooks'],
-    rules: ruleConfigs,
-  },
+  recommended: [
+    {
+      plugins: {
+        'react-hooks': plugin,
+      },
+      rules: basicRuleConfigs,
+    },
+  ],
 });
 
 export default plugin;"
facebook/react,056a586928fe1b6186d3693743ac7019ce39cb7b,lauren,2025-10-02T22:42:43Z,"[fixtures] Update eslint fixture lockfiles (#34699)

Updates the eslint fixture lockfiles.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34699).
* #34703
* #34700
* __->__ #34699
* #34675",fixtures/eslint-v6/yarn.lock,4,326,330,"@@ -2,15 +2,7 @@
 # yarn lockfile v1
 
 
-""@ampproject/remapping@^2.2.0"":
-  version ""2.3.0""
-  resolved ""https://registry.yarnpkg.com/@ampproject/remapping/-/remapping-2.3.0.tgz#ed441b6fa600072520ce18b43d2c8cc8caecc7f4""
-  integrity sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==
-  dependencies:
-    ""@jridgewell/gen-mapping"" ""^0.3.5""
-    ""@jridgewell/trace-mapping"" ""^0.3.24""
-
-""@babel/code-frame@^7.0.0"", ""@babel/code-frame@^7.26.2"":
+""@babel/code-frame@^7.0.0"":
   version ""7.26.2""
   resolved ""https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.26.2.tgz#4b5fab97d33338eff916235055f0ebc21e573a85""
   integrity sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==
@@ -19,228 +11,11 @@
     js-tokens ""^4.0.0""
     picocolors ""^1.0.0""
 
-""@babel/compat-data@^7.26.5"":
-  version ""7.26.8""
-  resolved ""https://registry.yarnpkg.com/@babel/compat-data/-/compat-data-7.26.8.tgz#821c1d35641c355284d4a870b8a4a7b0c141e367""
-  integrity sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==
-
-""@babel/core@^7.24.4"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/core/-/core-7.26.10.tgz#5c876f83c8c4dcb233ee4b670c0606f2ac3000f9""
-  integrity sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ==
-  dependencies:
-    ""@ampproject/remapping"" ""^2.2.0""
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/generator"" ""^7.26.10""
-    ""@babel/helper-compilation-targets"" ""^7.26.5""
-    ""@babel/helper-module-transforms"" ""^7.26.0""
-    ""@babel/helpers"" ""^7.26.10""
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/traverse"" ""^7.26.10""
-    ""@babel/types"" ""^7.26.10""
-    convert-source-map ""^2.0.0""
-    debug ""^4.1.0""
-    gensync ""^1.0.0-beta.2""
-    json5 ""^2.2.3""
-    semver ""^6.3.1""
-
-""@babel/generator@^7.26.10"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/generator/-/generator-7.26.10.tgz#a60d9de49caca16744e6340c3658dfef6138c3f7""
-  integrity sha512-rRHT8siFIXQrAYOYqZQVsAr8vJ+cBNqcVAY6m5V8/4QqzaPl+zDBe6cLEPRDuNOUf3ww8RfJVlOyQMoSI+5Ang==
-  dependencies:
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/types"" ""^7.26.10""
-    ""@jridgewell/gen-mapping"" ""^0.3.5""
-    ""@jridgewell/trace-mapping"" ""^0.3.25""
-    jsesc ""^3.0.2""
-
-""@babel/helper-annotate-as-pure@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.25.9.tgz#d8eac4d2dc0d7b6e11fa6e535332e0d3184f06b4""
-  integrity sha512-gv7320KBUFJz1RnylIg5WWYPRXKZ884AGkYpgpWW02TH66Dl+HaC1t1CKd0z3R4b6hdYEcmrNZHUmfCP+1u3/g==
-  dependencies:
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-compilation-targets@^7.26.5"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.26.5.tgz#75d92bb8d8d51301c0d49e52a65c9a7fe94514d8""
-  integrity sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==
-  dependencies:
-    ""@babel/compat-data"" ""^7.26.5""
-    ""@babel/helper-validator-option"" ""^7.25.9""
-    browserslist ""^4.24.0""
-    lru-cache ""^5.1.1""
-    semver ""^6.3.1""
-
-""@babel/helper-create-class-features-plugin@^7.25.9"":
-  version ""7.26.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.26.9.tgz#d6f83e3039547fbb39967e78043cd3c8b7820c71""
-  integrity sha512-ubbUqCofvxPRurw5L8WTsCLSkQiVpov4Qx0WMA+jUN+nXBK8ADPlJO1grkFw5CWKC5+sZSOfuGMdX1aI1iT9Sg==
-  dependencies:
-    ""@babel/helper-annotate-as-pure"" ""^7.25.9""
-    ""@babel/helper-member-expression-to-functions"" ""^7.25.9""
-    ""@babel/helper-optimise-call-expression"" ""^7.25.9""
-    ""@babel/helper-replace-supers"" ""^7.26.5""
-    ""@babel/helper-skip-transparent-expression-wrappers"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.26.9""
-    semver ""^6.3.1""
-
-""@babel/helper-member-expression-to-functions@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.25.9.tgz#9dfffe46f727005a5ea29051ac835fb735e4c1a3""
-  integrity sha512-wbfdZ9w5vk0C0oyHqAJbc62+vet5prjj01jjJ8sKn3j9h3MQQlflEdXYvuqRWjHnM12coDEqiC1IRCi0U/EKwQ==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-module-imports@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz#e7f8d20602ebdbf9ebbea0a0751fb0f2a4141715""
-  integrity sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-module-transforms@^7.26.0"":
-  version ""7.26.0""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz#8ce54ec9d592695e58d84cd884b7b5c6a2fdeeae""
-  integrity sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==
-  dependencies:
-    ""@babel/helper-module-imports"" ""^7.25.9""
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.25.9""
-
-""@babel/helper-optimise-call-expression@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.25.9.tgz#3324ae50bae7e2ab3c33f60c9a877b6a0146b54e""
-  integrity sha512-FIpuNaz5ow8VyrYcnXQTDRGvV6tTjkNtCK/RYNDXGSLlUD6cBuQTSw43CShGxjvfBTfcUA/r6UhUCbtYqkhcuQ==
-  dependencies:
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-plugin-utils@^7.25.9"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz#18580d00c9934117ad719392c4f6585c9333cc35""
-  integrity sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==
-
-""@babel/helper-replace-supers@^7.26.5"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-replace-supers/-/helper-replace-supers-7.26.5.tgz#6cb04e82ae291dae8e72335dfe438b0725f14c8d""
-  integrity sha512-bJ6iIVdYX1YooY2X7w1q6VITt+LnUILtNk7zT78ykuwStx8BauCzxvFqFaHjOpW1bVnSUM1PN1f0p5P21wHxvg==
-  dependencies:
-    ""@babel/helper-member-expression-to-functions"" ""^7.25.9""
-    ""@babel/helper-optimise-call-expression"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.26.5""
-
-""@babel/helper-skip-transparent-expression-wrappers@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.25.9.tgz#0b2e1b62d560d6b1954893fd2b705dc17c91f0c9""
-  integrity sha512-K4Du3BFa3gvyhzgPcntrkDgZzQaq6uozzcpGbOO1OEJaI+EJdqWIMTLgFgQf6lrfiDFo5FU+BxKepI9RmZqahA==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-string-parser@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz#1aabb72ee72ed35789b4bbcad3ca2862ce614e8c""
-  integrity sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==
-
 ""@babel/helper-validator-identifier@^7.25.9"":
   version ""7.25.9""
   resolved ""https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz#24b64e2c3ec7cd3b3c547729b8d16871f22cbdc7""
   integrity sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==
 
-""@babel/helper-validator-option@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz#86e45bd8a49ab7e03f276577f96179653d41da72""
-  integrity sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==
-
-""@babel/helpers@^7.26.10"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/helpers/-/helpers-7.26.10.tgz#6baea3cd62ec2d0c1068778d63cb1314f6637384""
-  integrity sha512-UPYc3SauzZ3JGgj87GgZ89JVdC5dj0AoetR5Bw6wj4niittNyFh6+eOGonYvJ1ao6B8lEa3Q3klS7ADZ53bc5g==
-  dependencies:
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.10""
-
-""@babel/parser@^7.24.4"", ""@babel/parser@^7.26.10"", ""@babel/parser@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/parser/-/parser-7.26.10.tgz#e9bdb82f14b97df6569b0b038edd436839c57749""
-  integrity sha512-6aQR2zGE/QFi8JpDLjUZEPYOs7+mhKXm86VaKFiLP35JQwQb6bwUE+XbvkH0EptsYhbNBSUGaUBLKqxH1xSgsA==
-  dependencies:
-    ""@babel/types"" ""^7.26.10""
-
-""@babel/plugin-transform-private-methods@^7.24.4"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.25.9.tgz#847f4139263577526455d7d3223cd8bda51e3b57""
-  integrity sha512-D/JUozNpQLAPUVusvqMxyvjzllRaF8/nSrP1s2YGQT/W4LHK4xxsMcHjhOGTS01mp9Hda8nswb+FblLdJornQw==
-  dependencies:
-    ""@babel/helper-create-class-features-plugin"" ""^7.25.9""
-    ""@babel/helper-plugin-utils"" ""^7.25.9""
-
-""@babel/template@^7.26.9"":
-  version ""7.26.9""
-  resolved ""https://registry.yarnpkg.com/@babel/template/-/template-7.26.9.tgz#4577ad3ddf43d194528cff4e1fa6b232fa609bb2""
-  integrity sha512-qyRplbeIpNZhmzOysF/wFMuP9sctmh2cFzRAZOn1YapxBsE1i9bJIY586R/WBLfLcmcBlM8ROBiQURnnNy+zfA==
-  dependencies:
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/parser"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.9""
-
-""@babel/traverse@^7.25.9"", ""@babel/traverse@^7.26.10"", ""@babel/traverse@^7.26.5"", ""@babel/traverse@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/traverse/-/traverse-7.26.10.tgz#43cca33d76005dbaa93024fae536cc1946a4c380""
-  integrity sha512-k8NuDrxr0WrPH5Aupqb2LCVURP/S0vBEn5mK6iH+GIYob66U5EtoZvcdudR2jQ4cmTwhEwW1DLB+Yyas9zjF6A==
-  dependencies:
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/generator"" ""^7.26.10""
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.10""
-    debug ""^4.3.1""
-    globals ""^11.1.0""
-
-""@babel/types@^7.25.9"", ""@babel/types@^7.26.10"", ""@babel/types@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/types/-/types-7.26.10.tgz#396382f6335bd4feb65741eacfc808218f859259""
-  integrity sha512-emqcG3vHrpxUKTrxcblR36dcrcoRDvKmnL/dCL6ZsHaShW80qxCAcNhzQZrpeM765VzEos+xOi4s+r4IXzTwdQ==
-  dependencies:
-    ""@babel/helper-string-parser"" ""^7.25.9""
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-
-""@jridgewell/gen-mapping@^0.3.5"":
-  version ""0.3.8""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz#4f0e06362e01362f823d348f1872b08f666d8142""
-  integrity sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==
-  dependencies:
-    ""@jridgewell/set-array"" ""^1.2.1""
-    ""@jridgewell/sourcemap-codec"" ""^1.4.10""
-    ""@jridgewell/trace-mapping"" ""^0.3.24""
-
-""@jridgewell/resolve-uri@^3.1.0"":
-  version ""3.1.2""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz#7a0ee601f60f99a20c7c7c5ff0c80388c1189bd6""
-  integrity sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==
-
-""@jridgewell/set-array@^1.2.1"":
-  version ""1.2.1""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/set-array/-/set-array-1.2.1.tgz#558fb6472ed16a4c850b889530e6b36438c49280""
-  integrity sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==
-
-""@jridgewell/sourcemap-codec@^1.4.10"", ""@jridgewell/sourcemap-codec@^1.4.14"":
-  version ""1.5.0""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz#3188bcb273a414b0d215fd22a58540b989b9409a""
-  integrity sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==
-
-""@jridgewell/trace-mapping@^0.3.24"", ""@jridgewell/trace-mapping@^0.3.25"":
-  version ""0.3.25""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz#15f190e98895f3fc23276ee14bc76b675c2e50f0""
-  integrity sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==
-  dependencies:
-    ""@jridgewell/resolve-uri"" ""^3.1.0""
-    ""@jridgewell/sourcemap-codec"" ""^1.4.14""
-
 acorn-jsx@^5.2.0:
   version ""5.3.2""
   resolved ""https://registry.yarnpkg.com/acorn-jsx/-/acorn-jsx-5.3.2.tgz#7ed5bb55908b3b2f1bc55c6af1653bada7f07937""
@@ -317,26 +92,11 @@ brace-expansion@^1.1.7:
     balanced-match ""^1.0.0""
     concat-map ""0.0.1""
 
-browserslist@^4.24.0:
-  version ""4.24.4""
-  resolved ""https://registry.yarnpkg.com/browserslist/-/browserslist-4.24.4.tgz#c6b2865a3f08bcb860a0e827389003b9fe686e4b""
-  integrity sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==
-  dependencies:
-    caniuse-lite ""^1.0.30001688""
-    electron-to-chromium ""^1.5.73""
-    node-releases ""^2.0.19""
-    update-browserslist-db ""^1.1.1""
-
 callsites@^3.0.0:
   version ""3.1.0""
   resolved ""https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73""
   integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
 
-caniuse-lite@^1.0.30001688:
-  version ""1.0.30001703""
-  resolved ""https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001703.tgz#977cb4920598c158f491ecf4f4f2cfed9e354718""
-  integrity sha512-kRlAGTRWgPsOj7oARC9m1okJEXdL/8fekFVcxA8Hl7GH4r/sN4OJn/i6Flde373T50KS7Y37oFbMwlE8+F42kQ==
-
 chalk@^2.1.0:
   version ""2.4.2""
   resolved ""https://registry.yarnpkg.com/chalk/-/chalk-2.4.2.tgz#cd42541677a54333cf541a49108c1432b44c9424""
@@ -400,11 +160,6 @@ concat-map@0.0.1:
   resolved ""https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b""
   integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=
 
-convert-source-map@^2.0.0:
-  version ""2.0.0""
-  resolved ""https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-2.0.0.tgz#4b560f649fc4e918dd0ab75cf4961e8bc882d82a""
-  integrity sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==
-
 cross-spawn@^6.0.5:
   version ""6.0.6""
   resolved ""https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-6.0.6.tgz#30d0efa0712ddb7eb5a76e1e8721bffafa6b5d57""
@@ -416,7 +171,7 @@ cross-spawn@^6.0.5:
     shebang-command ""^1.2.0""
     which ""^1.2.9""
 
-debug@^4.0.1, debug@^4.1.0, debug@^4.3.1:
+debug@^4.0.1:
   version ""4.4.0""
   resolved ""https://registry.yarnpkg.com/debug/-/debug-4.4.0.tgz#2b3f2aea2ffeb776477460267377dc8710faba8a""
   integrity sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==
@@ -435,11 +190,6 @@ doctrine@^3.0.0:
   dependencies:
     esutils ""^2.0.2""
 
-electron-to-chromium@^1.5.73:
-  version ""1.5.114""
-  resolved ""https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.5.114.tgz#f2bb4fda80a7db4ea273565e75b0ebbe19af0ac3""
-  integrity sha512-DFptFef3iktoKlFQK/afbo274/XNWD00Am0xa7M8FZUepHlHT8PEuiNBoRfFHbH1okqN58AlhbJ4QTkcnXorjA==
-
 emoji-regex@^7.0.1:
   version ""7.0.3""
   resolved ""https://registry.yarnpkg.com/emoji-regex/-/emoji-regex-7.0.3.tgz#933a04052860c85e83c122479c4748a8e4c72156""
@@ -450,11 +200,6 @@ emoji-regex@^8.0.0:
   resolved ""https://registry.yarnpkg.com/emoji-regex/-/emoji-regex-8.0.0.tgz#e818fd69ce5ccfcb404594f842963bf53164cc37""
   integrity sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==
 
-escalade@^3.2.0:
-  version ""3.2.0""
-  resolved ""https://registry.yarnpkg.com/escalade/-/escalade-3.2.0.tgz#011a3f69856ba189dffa7dc8fcce99d2a87903e5""
-  integrity sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==
-
 escape-string-regexp@^1.0.5:
   version ""1.0.5""
   resolved ""https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4""
@@ -632,11 +377,6 @@ functional-red-black-tree@^1.0.1:
   resolved ""https://registry.yarnpkg.com/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz#1b0ab3bd553b2a0d6399d29c0e3ea0b252078327""
   integrity sha512-dsKNQNdj6xA3T+QlADDA7mOSlX0qiMINjn0cgr+eGHGsbSHzTabcIogz2+p/iqP1Xs6EP/sS2SbqH+brGTbq0g==
 
-gensync@^1.0.0-beta.2:
-  version ""1.0.0-beta.2""
-  resolved ""https://registry.yarnpkg.com/gensync/-/gensync-1.0.0-beta.2.tgz#32a6ee76c3d7f52d46b2b1ae5d93fea8580a25e0""
-  integrity sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==
-
 glob-parent@^5.0.0:
   version ""5.1.2""
   resolved ""https://registry.yarnpkg.com/glob-parent/-/glob-parent-5.1.2.tgz#869832c58034fe68a4093c17dc15e8340d8401c4""
@@ -656,11 +396,6 @@ glob@^7.1.3:
     once ""^1.3.0""
     path-is-absolute ""^1.0.0""
 
-globals@^11.1.0:
-  version ""11.12.0""
-  resolved ""https://registry.yarnpkg.com/globals/-/globals-11.12.0.tgz#ab8795338868a0babd8525758018c2a7eb95c42e""
-  integrity sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==
-
 globals@^12.1.0:
   version ""12.4.0""
   resolved ""https://registry.yarnpkg.com/globals/-/globals-12.4.0.tgz#a18813576a41b00a24a97e7f815918c2e19925f8""
@@ -678,18 +413,6 @@ has-flag@^4.0.0:
   resolved ""https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b""
   integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
 
-hermes-estree@0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480""
-  integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw==
-
-hermes-parser@^0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1""
-  integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA==
-  dependencies:
-    hermes-estree ""0.25.1""
-
 iconv-lite@^0.4.24:
   version ""0.4.24""
   resolved ""https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.24.tgz#2022b4b25fbddc21d2f524974a474aafe733908b""
@@ -787,11 +510,6 @@ js-yaml@^3.13.1:
     argparse ""^1.0.7""
     esprima ""^4.0.0""
 
-jsesc@^3.0.2:
-  version ""3.1.0""
-  resolved ""https://registry.yarnpkg.com/jsesc/-/jsesc-3.1.0.tgz#74d335a234f67ed19907fdadfac7ccf9d409825d""
-  integrity sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==
-
 json-schema-traverse@^0.4.1:
   version ""0.4.1""
   resolved ""https://registry.yarnpkg.com/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz#69f6a87d9513ab8bb8fe63bdb0979c448e684660""
@@ -802,11 +520,6 @@ json-stable-stringify-without-jsonify@^1.0.1:
   resolved ""https://registry.yarnpkg.com/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz#9db7b59496ad3f3cfef30a75142d2d930ad72651""
   integrity sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==
 
-json5@^2.2.3:
-  version ""2.2.3""
-  resolved ""https://registry.yarnpkg.com/json5/-/json5-2.2.3.tgz#78cd6f1a19bdc12b73db5ad0c61efd66c1e29283""
-  integrity sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==
-
 levn@^0.3.0, levn@~0.3.0:
   version ""0.3.0""
   resolved ""https://registry.yarnpkg.com/levn/-/levn-0.3.0.tgz#3b09924edf9f083c0490fdd4c0bc4421e04764ee""
@@ -820,13 +533,6 @@ lodash@^4.17.14, lodash@^4.17.19:
   resolved ""https://registry.yarnpkg.com/lodash/-/lodash-4.17.21.tgz#679591c564c3bffaae8454cf0b3df370c3d6911c""
   integrity sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==
 
-lru-cache@^5.1.1:
-  version ""5.1.1""
-  resolved ""https://registry.yarnpkg.com/lru-cache/-/lru-cache-5.1.1.tgz#1da27e6710271947695daf6848e847f01d84b920""
-  integrity sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==
-  dependencies:
-    yallist ""^3.0.2""
-
 mimic-fn@^2.1.0:
   version ""2.1.0""
   resolved ""https://registry.yarnpkg.com/mimic-fn/-/mimic-fn-2.1.0.tgz#7ed2c2ccccaf84d3ffcb7a69b57711fc2083401b""
@@ -871,11 +577,6 @@ nice-try@^1.0.4:
   resolved ""https://registry.yarnpkg.com/nice-try/-/nice-try-1.0.5.tgz#a3378a7696ce7d223e88fc9b764bd7ef1089e366""
   integrity sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ==
 
-node-releases@^2.0.19:
-  version ""2.0.19""
-  resolved ""https://registry.yarnpkg.com/node-releases/-/node-releases-2.0.19.tgz#9e445a52950951ec4d177d843af370b411caf314""
-  integrity sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==
-
 once@^1.3.0:
   version ""1.4.0""
   resolved ""https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1""
@@ -924,7 +625,7 @@ path-key@^2.0.1:
   resolved ""https://registry.yarnpkg.com/path-key/-/path-key-2.0.1.tgz#411cadb574c5a140d3a4b1910d40d80cc9f40b40""
   integrity sha512-fEHGKCSmUSDPv4uoj8AlD+joPlq3peND+HRYyxFz4KPw4z926S/b8rIuFs2FYJg3BwsxJf6A9/3eIdLaYC+9Dw==
 
-picocolors@^1.0.0, picocolors@^1.1.1:
+picocolors@^1.0.0:
   version ""1.1.1""
   resolved ""https://registry.yarnpkg.com/picocolors/-/picocolors-1.1.1.tgz#3d321af3eab939b083c8f929a1d12cda81c26b6b""
   integrity sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==
@@ -991,7 +692,7 @@ semver@^5.5.0:
   resolved ""https://registry.yarnpkg.com/semver/-/semver-5.7.2.tgz#48d55db737c3287cd4835e17fa13feace1c41ef8""
   integrity sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==
 
-semver@^6.1.2, semver@^6.3.1:
+semver@^6.1.2:
   version ""6.3.1""
   resolved ""https://registry.yarnpkg.com/semver/-/semver-6.3.1.tgz#556d2ef8689146e46dcea4bfdd095f3434dffcb4""
   integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==
@@ -1127,14 +828,6 @@ type-fest@^0.8.1:
   resolved ""https://registry.yarnpkg.com/type-fest/-/type-fest-0.8.1.tgz#09e249ebde851d3b1e48d27c105444667f17b83d""
   integrity sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==
 
-update-browserslist-db@^1.1.1:
-  version ""1.1.3""
-  resolved ""https://registry.yarnpkg.com/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz#348377dd245216f9e7060ff50b15a1b740b75420""
-  integrity sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==
-  dependencies:
-    escalade ""^3.2.0""
-    picocolors ""^1.1.1""
-
 uri-js@^4.2.2:
   version ""4.2.2""
   resolved ""https://registry.yarnpkg.com/uri-js/-/uri-js-4.2.2.tgz#94c540e1ff772956e2299507c010aea6c8838eb0""
@@ -1170,18 +863,3 @@ write@1.0.3:
   integrity sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==
   dependencies:
     mkdirp ""^0.5.1""
-
-yallist@^3.0.2:
-  version ""3.1.1""
-  resolved ""https://registry.yarnpkg.com/yallist/-/yallist-3.1.1.tgz#dbb7daf9bfd8bac9ab45ebf602b8cbad0d5d08fd""
-  integrity sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==
-
-zod-validation-error@^3.0.3:
-  version ""3.4.0""
-  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-3.4.0.tgz#3a8a1f55c65579822d7faa190b51336c61bee2a6""
-  integrity sha512-ZOPR9SVY6Pb2qqO5XHt+MkkTRxGXb4EVtnjc9JpXUOtUB1T9Ru7mZOT361AN3MsetVe7R0a1KZshJDZdgp9miQ==
-
-zod@^3.22.4:
-  version ""3.24.2""
-  resolved ""https://registry.yarnpkg.com/zod/-/zod-3.24.2.tgz#8efa74126287c675e92f46871cfc8d15c34372b3""
-  integrity sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ=="
facebook/react,056a586928fe1b6186d3693743ac7019ce39cb7b,lauren,2025-10-02T22:42:43Z,"[fixtures] Update eslint fixture lockfiles (#34699)

Updates the eslint fixture lockfiles.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34699).
* #34703
* #34700
* __->__ #34699
* #34675",fixtures/eslint-v7/yarn.lock,2,338,340,"@@ -2,175 +2,18 @@
 # yarn lockfile v1
 
 
-""@ampproject/remapping@^2.2.0"":
-  version ""2.3.0""
-  resolved ""https://registry.yarnpkg.com/@ampproject/remapping/-/remapping-2.3.0.tgz#ed441b6fa600072520ce18b43d2c8cc8caecc7f4""
-  integrity sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==
-  dependencies:
-    ""@jridgewell/gen-mapping"" ""^0.3.5""
-    ""@jridgewell/trace-mapping"" ""^0.3.24""
-
 ""@babel/code-frame@7.12.11"":
   version ""7.12.11""
   resolved ""https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.12.11.tgz#f4ad435aa263db935b8f10f2c552d23fb716a63f""
   integrity sha512-Zt1yodBx1UcyiePMSkWnU4hPqhwq7hGi2nFL1LeA3EUl+q2LQx16MISgJ0+z7dnmgvP9QtIleuETGOiOH1RcIw==
   dependencies:
     ""@babel/highlight"" ""^7.10.4""
 
-""@babel/code-frame@^7.26.2"":
-  version ""7.26.2""
-  resolved ""https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.26.2.tgz#4b5fab97d33338eff916235055f0ebc21e573a85""
-  integrity sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==
-  dependencies:
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-    js-tokens ""^4.0.0""
-    picocolors ""^1.0.0""
-
-""@babel/compat-data@^7.26.5"":
-  version ""7.26.8""
-  resolved ""https://registry.yarnpkg.com/@babel/compat-data/-/compat-data-7.26.8.tgz#821c1d35641c355284d4a870b8a4a7b0c141e367""
-  integrity sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==
-
-""@babel/core@^7.24.4"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/core/-/core-7.26.10.tgz#5c876f83c8c4dcb233ee4b670c0606f2ac3000f9""
-  integrity sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ==
-  dependencies:
-    ""@ampproject/remapping"" ""^2.2.0""
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/generator"" ""^7.26.10""
-    ""@babel/helper-compilation-targets"" ""^7.26.5""
-    ""@babel/helper-module-transforms"" ""^7.26.0""
-    ""@babel/helpers"" ""^7.26.10""
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/traverse"" ""^7.26.10""
-    ""@babel/types"" ""^7.26.10""
-    convert-source-map ""^2.0.0""
-    debug ""^4.1.0""
-    gensync ""^1.0.0-beta.2""
-    json5 ""^2.2.3""
-    semver ""^6.3.1""
-
-""@babel/generator@^7.26.10"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/generator/-/generator-7.26.10.tgz#a60d9de49caca16744e6340c3658dfef6138c3f7""
-  integrity sha512-rRHT8siFIXQrAYOYqZQVsAr8vJ+cBNqcVAY6m5V8/4QqzaPl+zDBe6cLEPRDuNOUf3ww8RfJVlOyQMoSI+5Ang==
-  dependencies:
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/types"" ""^7.26.10""
-    ""@jridgewell/gen-mapping"" ""^0.3.5""
-    ""@jridgewell/trace-mapping"" ""^0.3.25""
-    jsesc ""^3.0.2""
-
-""@babel/helper-annotate-as-pure@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.25.9.tgz#d8eac4d2dc0d7b6e11fa6e535332e0d3184f06b4""
-  integrity sha512-gv7320KBUFJz1RnylIg5WWYPRXKZ884AGkYpgpWW02TH66Dl+HaC1t1CKd0z3R4b6hdYEcmrNZHUmfCP+1u3/g==
-  dependencies:
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-compilation-targets@^7.26.5"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.26.5.tgz#75d92bb8d8d51301c0d49e52a65c9a7fe94514d8""
-  integrity sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==
-  dependencies:
-    ""@babel/compat-data"" ""^7.26.5""
-    ""@babel/helper-validator-option"" ""^7.25.9""
-    browserslist ""^4.24.0""
-    lru-cache ""^5.1.1""
-    semver ""^6.3.1""
-
-""@babel/helper-create-class-features-plugin@^7.25.9"":
-  version ""7.26.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.26.9.tgz#d6f83e3039547fbb39967e78043cd3c8b7820c71""
-  integrity sha512-ubbUqCofvxPRurw5L8WTsCLSkQiVpov4Qx0WMA+jUN+nXBK8ADPlJO1grkFw5CWKC5+sZSOfuGMdX1aI1iT9Sg==
-  dependencies:
-    ""@babel/helper-annotate-as-pure"" ""^7.25.9""
-    ""@babel/helper-member-expression-to-functions"" ""^7.25.9""
-    ""@babel/helper-optimise-call-expression"" ""^7.25.9""
-    ""@babel/helper-replace-supers"" ""^7.26.5""
-    ""@babel/helper-skip-transparent-expression-wrappers"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.26.9""
-    semver ""^6.3.1""
-
-""@babel/helper-member-expression-to-functions@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.25.9.tgz#9dfffe46f727005a5ea29051ac835fb735e4c1a3""
-  integrity sha512-wbfdZ9w5vk0C0oyHqAJbc62+vet5prjj01jjJ8sKn3j9h3MQQlflEdXYvuqRWjHnM12coDEqiC1IRCi0U/EKwQ==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-module-imports@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz#e7f8d20602ebdbf9ebbea0a0751fb0f2a4141715""
-  integrity sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-module-transforms@^7.26.0"":
-  version ""7.26.0""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz#8ce54ec9d592695e58d84cd884b7b5c6a2fdeeae""
-  integrity sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==
-  dependencies:
-    ""@babel/helper-module-imports"" ""^7.25.9""
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.25.9""
-
-""@babel/helper-optimise-call-expression@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.25.9.tgz#3324ae50bae7e2ab3c33f60c9a877b6a0146b54e""
-  integrity sha512-FIpuNaz5ow8VyrYcnXQTDRGvV6tTjkNtCK/RYNDXGSLlUD6cBuQTSw43CShGxjvfBTfcUA/r6UhUCbtYqkhcuQ==
-  dependencies:
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-plugin-utils@^7.25.9"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz#18580d00c9934117ad719392c4f6585c9333cc35""
-  integrity sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==
-
-""@babel/helper-replace-supers@^7.26.5"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-replace-supers/-/helper-replace-supers-7.26.5.tgz#6cb04e82ae291dae8e72335dfe438b0725f14c8d""
-  integrity sha512-bJ6iIVdYX1YooY2X7w1q6VITt+LnUILtNk7zT78ykuwStx8BauCzxvFqFaHjOpW1bVnSUM1PN1f0p5P21wHxvg==
-  dependencies:
-    ""@babel/helper-member-expression-to-functions"" ""^7.25.9""
-    ""@babel/helper-optimise-call-expression"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.26.5""
-
-""@babel/helper-skip-transparent-expression-wrappers@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.25.9.tgz#0b2e1b62d560d6b1954893fd2b705dc17c91f0c9""
-  integrity sha512-K4Du3BFa3gvyhzgPcntrkDgZzQaq6uozzcpGbOO1OEJaI+EJdqWIMTLgFgQf6lrfiDFo5FU+BxKepI9RmZqahA==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-string-parser@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz#1aabb72ee72ed35789b4bbcad3ca2862ce614e8c""
-  integrity sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==
-
 ""@babel/helper-validator-identifier@^7.25.9"":
   version ""7.25.9""
   resolved ""https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz#24b64e2c3ec7cd3b3c547729b8d16871f22cbdc7""
   integrity sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==
 
-""@babel/helper-validator-option@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz#86e45bd8a49ab7e03f276577f96179653d41da72""
-  integrity sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==
-
-""@babel/helpers@^7.26.10"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/helpers/-/helpers-7.26.10.tgz#6baea3cd62ec2d0c1068778d63cb1314f6637384""
-  integrity sha512-UPYc3SauzZ3JGgj87GgZ89JVdC5dj0AoetR5Bw6wj4niittNyFh6+eOGonYvJ1ao6B8lEa3Q3klS7ADZ53bc5g==
-  dependencies:
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.10""
-
 ""@babel/highlight@^7.10.4"":
   version ""7.25.9""
   resolved ""https://registry.yarnpkg.com/@babel/highlight/-/highlight-7.25.9.tgz#8141ce68fc73757946f983b343f1231f4691acc6""
@@ -181,51 +24,6 @@
     js-tokens ""^4.0.0""
     picocolors ""^1.0.0""
 
-""@babel/parser@^7.24.4"", ""@babel/parser@^7.26.10"", ""@babel/parser@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/parser/-/parser-7.26.10.tgz#e9bdb82f14b97df6569b0b038edd436839c57749""
-  integrity sha512-6aQR2zGE/QFi8JpDLjUZEPYOs7+mhKXm86VaKFiLP35JQwQb6bwUE+XbvkH0EptsYhbNBSUGaUBLKqxH1xSgsA==
-  dependencies:
-    ""@babel/types"" ""^7.26.10""
-
-""@babel/plugin-transform-private-methods@^7.24.4"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.25.9.tgz#847f4139263577526455d7d3223cd8bda51e3b57""
-  integrity sha512-D/JUozNpQLAPUVusvqMxyvjzllRaF8/nSrP1s2YGQT/W4LHK4xxsMcHjhOGTS01mp9Hda8nswb+FblLdJornQw==
-  dependencies:
-    ""@babel/helper-create-class-features-plugin"" ""^7.25.9""
-    ""@babel/helper-plugin-utils"" ""^7.25.9""
-
-""@babel/template@^7.26.9"":
-  version ""7.26.9""
-  resolved ""https://registry.yarnpkg.com/@babel/template/-/template-7.26.9.tgz#4577ad3ddf43d194528cff4e1fa6b232fa609bb2""
-  integrity sha512-qyRplbeIpNZhmzOysF/wFMuP9sctmh2cFzRAZOn1YapxBsE1i9bJIY586R/WBLfLcmcBlM8ROBiQURnnNy+zfA==
-  dependencies:
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/parser"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.9""
-
-""@babel/traverse@^7.25.9"", ""@babel/traverse@^7.26.10"", ""@babel/traverse@^7.26.5"", ""@babel/traverse@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/traverse/-/traverse-7.26.10.tgz#43cca33d76005dbaa93024fae536cc1946a4c380""
-  integrity sha512-k8NuDrxr0WrPH5Aupqb2LCVURP/S0vBEn5mK6iH+GIYob66U5EtoZvcdudR2jQ4cmTwhEwW1DLB+Yyas9zjF6A==
-  dependencies:
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/generator"" ""^7.26.10""
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.10""
-    debug ""^4.3.1""
-    globals ""^11.1.0""
-
-""@babel/types@^7.25.9"", ""@babel/types@^7.26.10"", ""@babel/types@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/types/-/types-7.26.10.tgz#396382f6335bd4feb65741eacfc808218f859259""
-  integrity sha512-emqcG3vHrpxUKTrxcblR36dcrcoRDvKmnL/dCL6ZsHaShW80qxCAcNhzQZrpeM765VzEos+xOi4s+r4IXzTwdQ==
-  dependencies:
-    ""@babel/helper-string-parser"" ""^7.25.9""
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-
 ""@eslint/eslintrc@^0.4.3"":
   version ""0.4.3""
   resolved ""https://registry.yarnpkg.com/@eslint/eslintrc/-/eslintrc-0.4.3.tgz#9e42981ef035beb3dd49add17acb96e8ff6f394c""
@@ -255,38 +53,6 @@
   resolved ""https://registry.yarnpkg.com/@humanwhocodes/object-schema/-/object-schema-1.2.1.tgz#b520529ec21d8e5945a1851dfd1c32e94e39ff45""
   integrity sha512-ZnQMnLV4e7hDlUvw8H+U8ASL02SS2Gn6+9Ac3wGGLIe7+je2AeAOxPY+izIPJDfFDb7eDjev0Us8MO1iFRN8hA==
 
-""@jridgewell/gen-mapping@^0.3.5"":
-  version ""0.3.8""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz#4f0e06362e01362f823d348f1872b08f666d8142""
-  integrity sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==
-  dependencies:
-    ""@jridgewell/set-array"" ""^1.2.1""
-    ""@jridgewell/sourcemap-codec"" ""^1.4.10""
-    ""@jridgewell/trace-mapping"" ""^0.3.24""
-
-""@jridgewell/resolve-uri@^3.1.0"":
-  version ""3.1.2""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz#7a0ee601f60f99a20c7c7c5ff0c80388c1189bd6""
-  integrity sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==
-
-""@jridgewell/set-array@^1.2.1"":
-  version ""1.2.1""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/set-array/-/set-array-1.2.1.tgz#558fb6472ed16a4c850b889530e6b36438c49280""
-  integrity sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==
-
-""@jridgewell/sourcemap-codec@^1.4.10"", ""@jridgewell/sourcemap-codec@^1.4.14"":
-  version ""1.5.0""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz#3188bcb273a414b0d215fd22a58540b989b9409a""
-  integrity sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==
-
-""@jridgewell/trace-mapping@^0.3.24"", ""@jridgewell/trace-mapping@^0.3.25"":
-  version ""0.3.25""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz#15f190e98895f3fc23276ee14bc76b675c2e50f0""
-  integrity sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==
-  dependencies:
-    ""@jridgewell/resolve-uri"" ""^3.1.0""
-    ""@jridgewell/sourcemap-codec"" ""^1.4.14""
-
 acorn-jsx@^5.3.1:
   version ""5.3.2""
   resolved ""https://registry.yarnpkg.com/acorn-jsx/-/acorn-jsx-5.3.2.tgz#7ed5bb55908b3b2f1bc55c6af1653bada7f07937""
@@ -366,26 +132,11 @@ brace-expansion@^1.1.7:
     balanced-match ""^1.0.0""
     concat-map ""0.0.1""
 
-browserslist@^4.24.0:
-  version ""4.24.4""
-  resolved ""https://registry.yarnpkg.com/browserslist/-/browserslist-4.24.4.tgz#c6b2865a3f08bcb860a0e827389003b9fe686e4b""
-  integrity sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==
-  dependencies:
-    caniuse-lite ""^1.0.30001688""
-    electron-to-chromium ""^1.5.73""
-    node-releases ""^2.0.19""
-    update-browserslist-db ""^1.1.1""
-
 callsites@^3.0.0:
   version ""3.1.0""
   resolved ""https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73""
   integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
 
-caniuse-lite@^1.0.30001688:
-  version ""1.0.30001703""
-  resolved ""https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001703.tgz#977cb4920598c158f491ecf4f4f2cfed9e354718""
-  integrity sha512-kRlAGTRWgPsOj7oARC9m1okJEXdL/8fekFVcxA8Hl7GH4r/sN4OJn/i6Flde373T50KS7Y37oFbMwlE8+F42kQ==
-
 chalk@^2.4.2:
   version ""2.4.2""
   resolved ""https://registry.yarnpkg.com/chalk/-/chalk-2.4.2.tgz#cd42541677a54333cf541a49108c1432b44c9424""
@@ -432,11 +183,6 @@ concat-map@0.0.1:
   resolved ""https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b""
   integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=
 
-convert-source-map@^2.0.0:
-  version ""2.0.0""
-  resolved ""https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-2.0.0.tgz#4b560f649fc4e918dd0ab75cf4961e8bc882d82a""
-  integrity sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==
-
 cross-spawn@^7.0.2:
   version ""7.0.6""
   resolved ""https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.6.tgz#8a58fe78f00dcd70c370451759dfbfaf03e8ee9f""
@@ -446,7 +192,7 @@ cross-spawn@^7.0.2:
     shebang-command ""^2.0.0""
     which ""^2.0.1""
 
-debug@^4.0.1, debug@^4.1.0, debug@^4.1.1, debug@^4.3.1:
+debug@^4.0.1, debug@^4.1.1:
   version ""4.4.0""
   resolved ""https://registry.yarnpkg.com/debug/-/debug-4.4.0.tgz#2b3f2aea2ffeb776477460267377dc8710faba8a""
   integrity sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==
@@ -465,11 +211,6 @@ doctrine@^3.0.0:
   dependencies:
     esutils ""^2.0.2""
 
-electron-to-chromium@^1.5.73:
-  version ""1.5.114""
-  resolved ""https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.5.114.tgz#f2bb4fda80a7db4ea273565e75b0ebbe19af0ac3""
-  integrity sha512-DFptFef3iktoKlFQK/afbo274/XNWD00Am0xa7M8FZUepHlHT8PEuiNBoRfFHbH1okqN58AlhbJ4QTkcnXorjA==
-
 emoji-regex@^8.0.0:
   version ""8.0.0""
   resolved ""https://registry.yarnpkg.com/emoji-regex/-/emoji-regex-8.0.0.tgz#e818fd69ce5ccfcb404594f842963bf53164cc37""
@@ -483,11 +224,6 @@ enquirer@^2.3.5:
     ansi-colors ""^4.1.1""
     strip-ansi ""^6.0.1""
 
-escalade@^3.2.0:
-  version ""3.2.0""
-  resolved ""https://registry.yarnpkg.com/escalade/-/escalade-3.2.0.tgz#011a3f69856ba189dffa7dc8fcce99d2a87903e5""
-  integrity sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==
-
 escape-string-regexp@^1.0.5:
   version ""1.0.5""
   resolved ""https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4""
@@ -667,11 +403,6 @@ functional-red-black-tree@^1.0.1:
   resolved ""https://registry.yarnpkg.com/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz#1b0ab3bd553b2a0d6399d29c0e3ea0b252078327""
   integrity sha512-dsKNQNdj6xA3T+QlADDA7mOSlX0qiMINjn0cgr+eGHGsbSHzTabcIogz2+p/iqP1Xs6EP/sS2SbqH+brGTbq0g==
 
-gensync@^1.0.0-beta.2:
-  version ""1.0.0-beta.2""
-  resolved ""https://registry.yarnpkg.com/gensync/-/gensync-1.0.0-beta.2.tgz#32a6ee76c3d7f52d46b2b1ae5d93fea8580a25e0""
-  integrity sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==
-
 glob-parent@^5.1.2:
   version ""5.1.2""
   resolved ""https://registry.yarnpkg.com/glob-parent/-/glob-parent-5.1.2.tgz#869832c58034fe68a4093c17dc15e8340d8401c4""
@@ -691,11 +422,6 @@ glob@^7.1.3:
     once ""^1.3.0""
     path-is-absolute ""^1.0.0""
 
-globals@^11.1.0:
-  version ""11.12.0""
-  resolved ""https://registry.yarnpkg.com/globals/-/globals-11.12.0.tgz#ab8795338868a0babd8525758018c2a7eb95c42e""
-  integrity sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==
-
 globals@^13.6.0, globals@^13.9.0:
   version ""13.24.0""
   resolved ""https://registry.yarnpkg.com/globals/-/globals-13.24.0.tgz#8432a19d78ce0c1e833949c36adb345400bb1171""
@@ -713,18 +439,6 @@ has-flag@^4.0.0:
   resolved ""https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b""
   integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
 
-hermes-estree@0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480""
-  integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw==
-
-hermes-parser@^0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1""
-  integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA==
-  dependencies:
-    hermes-estree ""0.25.1""
-
 ignore@^4.0.6:
   version ""4.0.6""
   resolved ""https://registry.yarnpkg.com/ignore/-/ignore-4.0.6.tgz#750e3db5862087b4737ebac8207ffd1ef27b25fc""
@@ -791,11 +505,6 @@ js-yaml@^3.13.1:
     argparse ""^1.0.7""
     esprima ""^4.0.0""
 
-jsesc@^3.0.2:
-  version ""3.1.0""
-  resolved ""https://registry.yarnpkg.com/jsesc/-/jsesc-3.1.0.tgz#74d335a234f67ed19907fdadfac7ccf9d409825d""
-  integrity sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==
-
 json-buffer@3.0.1:
   version ""3.0.1""
   resolved ""https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.1.tgz#9338802a30d3b6605fbe0613e094008ca8c05a13""
@@ -816,11 +525,6 @@ json-stable-stringify-without-jsonify@^1.0.1:
   resolved ""https://registry.yarnpkg.com/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz#9db7b59496ad3f3cfef30a75142d2d930ad72651""
   integrity sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==
 
-json5@^2.2.3:
-  version ""2.2.3""
-  resolved ""https://registry.yarnpkg.com/json5/-/json5-2.2.3.tgz#78cd6f1a19bdc12b73db5ad0c61efd66c1e29283""
-  integrity sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==
-
 keyv@^4.5.3:
   version ""4.5.4""
   resolved ""https://registry.yarnpkg.com/keyv/-/keyv-4.5.4.tgz#a879a99e29452f942439f2a405e3af8b31d4de93""
@@ -846,13 +550,6 @@ lodash.truncate@^4.4.2:
   resolved ""https://registry.yarnpkg.com/lodash.truncate/-/lodash.truncate-4.4.2.tgz#5a350da0b1113b837ecfffd5812cbe58d6eae193""
   integrity sha512-jttmRe7bRse52OsWIMDLaXxWqRAmtIUccAQ3garviCqJjafXOfNMO0yMfNpdD6zbGaTU0P5Nz7e7gAT6cKmJRw==
 
-lru-cache@^5.1.1:
-  version ""5.1.1""
-  resolved ""https://registry.yarnpkg.com/lru-cache/-/lru-cache-5.1.1.tgz#1da27e6710271947695daf6848e847f01d84b920""
-  integrity sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==
-  dependencies:
-    yallist ""^3.0.2""
-
 minimatch@^3.0.4:
   version ""3.0.4""
   resolved ""https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.4.tgz#5166e286457f03306064be5497e8dbb0c3d32083""
@@ -870,11 +567,6 @@ natural-compare@^1.4.0:
   resolved ""https://registry.yarnpkg.com/natural-compare/-/natural-compare-1.4.0.tgz#4abebfeed7541f2c27acfb29bdbbd15c8d5ba4f7""
   integrity sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=
 
-node-releases@^2.0.19:
-  version ""2.0.19""
-  resolved ""https://registry.yarnpkg.com/node-releases/-/node-releases-2.0.19.tgz#9e445a52950951ec4d177d843af370b411caf314""
-  integrity sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==
-
 once@^1.3.0:
   version ""1.4.0""
   resolved ""https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1""
@@ -911,7 +603,7 @@ path-key@^3.1.0:
   resolved ""https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375""
   integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
 
-picocolors@^1.0.0, picocolors@^1.1.1:
+picocolors@^1.0.0:
   version ""1.1.1""
   resolved ""https://registry.yarnpkg.com/picocolors/-/picocolors-1.1.1.tgz#3d321af3eab939b083c8f929a1d12cda81c26b6b""
   integrity sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==
@@ -953,11 +645,6 @@ rimraf@^3.0.2:
   dependencies:
     glob ""^7.1.3""
 
-semver@^6.3.1:
-  version ""6.3.1""
-  resolved ""https://registry.yarnpkg.com/semver/-/semver-6.3.1.tgz#556d2ef8689146e46dcea4bfdd095f3434dffcb4""
-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==
-
 semver@^7.2.1:
   version ""7.7.1""
   resolved ""https://registry.yarnpkg.com/semver/-/semver-7.7.1.tgz#abd5098d82b18c6c81f6074ff2647fd3e7220c9f""
@@ -1052,14 +739,6 @@ type-fest@^0.20.2:
   resolved ""https://registry.yarnpkg.com/type-fest/-/type-fest-0.20.2.tgz#1bf207f4b28f91583666cb5fbd327887301cd5f4""
   integrity sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==
 
-update-browserslist-db@^1.1.1:
-  version ""1.1.3""
-  resolved ""https://registry.yarnpkg.com/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz#348377dd245216f9e7060ff50b15a1b740b75420""
-  integrity sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==
-  dependencies:
-    escalade ""^3.2.0""
-    picocolors ""^1.1.1""
-
 uri-js@^4.2.2:
   version ""4.2.2""
   resolved ""https://registry.yarnpkg.com/uri-js/-/uri-js-4.2.2.tgz#94c540e1ff772956e2299507c010aea6c8838eb0""
@@ -1088,18 +767,3 @@ wrappy@1:
   version ""1.0.2""
   resolved ""https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f""
   integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=
-
-yallist@^3.0.2:
-  version ""3.1.1""
-  resolved ""https://registry.yarnpkg.com/yallist/-/yallist-3.1.1.tgz#dbb7daf9bfd8bac9ab45ebf602b8cbad0d5d08fd""
-  integrity sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==
-
-zod-validation-error@^3.0.3:
-  version ""3.4.0""
-  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-3.4.0.tgz#3a8a1f55c65579822d7faa190b51336c61bee2a6""
-  integrity sha512-ZOPR9SVY6Pb2qqO5XHt+MkkTRxGXb4EVtnjc9JpXUOtUB1T9Ru7mZOT361AN3MsetVe7R0a1KZshJDZdgp9miQ==
-
-zod@^3.22.4:
-  version ""3.24.2""
-  resolved ""https://registry.yarnpkg.com/zod/-/zod-3.24.2.tgz#8efa74126287c675e92f46871cfc8d15c34372b3""
-  integrity sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ=="
facebook/react,056a586928fe1b6186d3693743ac7019ce39cb7b,lauren,2025-10-02T22:42:43Z,"[fixtures] Update eslint fixture lockfiles (#34699)

Updates the eslint fixture lockfiles.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34699).
* #34703
* #34700
* __->__ #34699
* #34675",fixtures/eslint-v8/yarn.lock,1,352,353,"@@ -2,213 +2,6 @@
 # yarn lockfile v1
 
 
-""@ampproject/remapping@^2.2.0"":
-  version ""2.3.0""
-  resolved ""https://registry.yarnpkg.com/@ampproject/remapping/-/remapping-2.3.0.tgz#ed441b6fa600072520ce18b43d2c8cc8caecc7f4""
-  integrity sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==
-  dependencies:
-    ""@jridgewell/gen-mapping"" ""^0.3.5""
-    ""@jridgewell/trace-mapping"" ""^0.3.24""
-
-""@babel/code-frame@^7.26.2"":
-  version ""7.26.2""
-  resolved ""https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.26.2.tgz#4b5fab97d33338eff916235055f0ebc21e573a85""
-  integrity sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==
-  dependencies:
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-    js-tokens ""^4.0.0""
-    picocolors ""^1.0.0""
-
-""@babel/compat-data@^7.26.5"":
-  version ""7.26.8""
-  resolved ""https://registry.yarnpkg.com/@babel/compat-data/-/compat-data-7.26.8.tgz#821c1d35641c355284d4a870b8a4a7b0c141e367""
-  integrity sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==
-
-""@babel/core@^7.24.4"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/core/-/core-7.26.10.tgz#5c876f83c8c4dcb233ee4b670c0606f2ac3000f9""
-  integrity sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ==
-  dependencies:
-    ""@ampproject/remapping"" ""^2.2.0""
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/generator"" ""^7.26.10""
-    ""@babel/helper-compilation-targets"" ""^7.26.5""
-    ""@babel/helper-module-transforms"" ""^7.26.0""
-    ""@babel/helpers"" ""^7.26.10""
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/traverse"" ""^7.26.10""
-    ""@babel/types"" ""^7.26.10""
-    convert-source-map ""^2.0.0""
-    debug ""^4.1.0""
-    gensync ""^1.0.0-beta.2""
-    json5 ""^2.2.3""
-    semver ""^6.3.1""
-
-""@babel/generator@^7.26.10"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/generator/-/generator-7.26.10.tgz#a60d9de49caca16744e6340c3658dfef6138c3f7""
-  integrity sha512-rRHT8siFIXQrAYOYqZQVsAr8vJ+cBNqcVAY6m5V8/4QqzaPl+zDBe6cLEPRDuNOUf3ww8RfJVlOyQMoSI+5Ang==
-  dependencies:
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/types"" ""^7.26.10""
-    ""@jridgewell/gen-mapping"" ""^0.3.5""
-    ""@jridgewell/trace-mapping"" ""^0.3.25""
-    jsesc ""^3.0.2""
-
-""@babel/helper-annotate-as-pure@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.25.9.tgz#d8eac4d2dc0d7b6e11fa6e535332e0d3184f06b4""
-  integrity sha512-gv7320KBUFJz1RnylIg5WWYPRXKZ884AGkYpgpWW02TH66Dl+HaC1t1CKd0z3R4b6hdYEcmrNZHUmfCP+1u3/g==
-  dependencies:
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-compilation-targets@^7.26.5"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.26.5.tgz#75d92bb8d8d51301c0d49e52a65c9a7fe94514d8""
-  integrity sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==
-  dependencies:
-    ""@babel/compat-data"" ""^7.26.5""
-    ""@babel/helper-validator-option"" ""^7.25.9""
-    browserslist ""^4.24.0""
-    lru-cache ""^5.1.1""
-    semver ""^6.3.1""
-
-""@babel/helper-create-class-features-plugin@^7.25.9"":
-  version ""7.26.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.26.9.tgz#d6f83e3039547fbb39967e78043cd3c8b7820c71""
-  integrity sha512-ubbUqCofvxPRurw5L8WTsCLSkQiVpov4Qx0WMA+jUN+nXBK8ADPlJO1grkFw5CWKC5+sZSOfuGMdX1aI1iT9Sg==
-  dependencies:
-    ""@babel/helper-annotate-as-pure"" ""^7.25.9""
-    ""@babel/helper-member-expression-to-functions"" ""^7.25.9""
-    ""@babel/helper-optimise-call-expression"" ""^7.25.9""
-    ""@babel/helper-replace-supers"" ""^7.26.5""
-    ""@babel/helper-skip-transparent-expression-wrappers"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.26.9""
-    semver ""^6.3.1""
-
-""@babel/helper-member-expression-to-functions@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.25.9.tgz#9dfffe46f727005a5ea29051ac835fb735e4c1a3""
-  integrity sha512-wbfdZ9w5vk0C0oyHqAJbc62+vet5prjj01jjJ8sKn3j9h3MQQlflEdXYvuqRWjHnM12coDEqiC1IRCi0U/EKwQ==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-module-imports@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz#e7f8d20602ebdbf9ebbea0a0751fb0f2a4141715""
-  integrity sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-module-transforms@^7.26.0"":
-  version ""7.26.0""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz#8ce54ec9d592695e58d84cd884b7b5c6a2fdeeae""
-  integrity sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==
-  dependencies:
-    ""@babel/helper-module-imports"" ""^7.25.9""
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.25.9""
-
-""@babel/helper-optimise-call-expression@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.25.9.tgz#3324ae50bae7e2ab3c33f60c9a877b6a0146b54e""
-  integrity sha512-FIpuNaz5ow8VyrYcnXQTDRGvV6tTjkNtCK/RYNDXGSLlUD6cBuQTSw43CShGxjvfBTfcUA/r6UhUCbtYqkhcuQ==
-  dependencies:
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-plugin-utils@^7.25.9"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz#18580d00c9934117ad719392c4f6585c9333cc35""
-  integrity sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==
-
-""@babel/helper-replace-supers@^7.26.5"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-replace-supers/-/helper-replace-supers-7.26.5.tgz#6cb04e82ae291dae8e72335dfe438b0725f14c8d""
-  integrity sha512-bJ6iIVdYX1YooY2X7w1q6VITt+LnUILtNk7zT78ykuwStx8BauCzxvFqFaHjOpW1bVnSUM1PN1f0p5P21wHxvg==
-  dependencies:
-    ""@babel/helper-member-expression-to-functions"" ""^7.25.9""
-    ""@babel/helper-optimise-call-expression"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.26.5""
-
-""@babel/helper-skip-transparent-expression-wrappers@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.25.9.tgz#0b2e1b62d560d6b1954893fd2b705dc17c91f0c9""
-  integrity sha512-K4Du3BFa3gvyhzgPcntrkDgZzQaq6uozzcpGbOO1OEJaI+EJdqWIMTLgFgQf6lrfiDFo5FU+BxKepI9RmZqahA==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-string-parser@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz#1aabb72ee72ed35789b4bbcad3ca2862ce614e8c""
-  integrity sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==
-
-""@babel/helper-validator-identifier@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz#24b64e2c3ec7cd3b3c547729b8d16871f22cbdc7""
-  integrity sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==
-
-""@babel/helper-validator-option@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz#86e45bd8a49ab7e03f276577f96179653d41da72""
-  integrity sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==
-
-""@babel/helpers@^7.26.10"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/helpers/-/helpers-7.26.10.tgz#6baea3cd62ec2d0c1068778d63cb1314f6637384""
-  integrity sha512-UPYc3SauzZ3JGgj87GgZ89JVdC5dj0AoetR5Bw6wj4niittNyFh6+eOGonYvJ1ao6B8lEa3Q3klS7ADZ53bc5g==
-  dependencies:
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.10""
-
-""@babel/parser@^7.24.4"", ""@babel/parser@^7.26.10"", ""@babel/parser@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/parser/-/parser-7.26.10.tgz#e9bdb82f14b97df6569b0b038edd436839c57749""
-  integrity sha512-6aQR2zGE/QFi8JpDLjUZEPYOs7+mhKXm86VaKFiLP35JQwQb6bwUE+XbvkH0EptsYhbNBSUGaUBLKqxH1xSgsA==
-  dependencies:
-    ""@babel/types"" ""^7.26.10""
-
-""@babel/plugin-transform-private-methods@^7.24.4"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.25.9.tgz#847f4139263577526455d7d3223cd8bda51e3b57""
-  integrity sha512-D/JUozNpQLAPUVusvqMxyvjzllRaF8/nSrP1s2YGQT/W4LHK4xxsMcHjhOGTS01mp9Hda8nswb+FblLdJornQw==
-  dependencies:
-    ""@babel/helper-create-class-features-plugin"" ""^7.25.9""
-    ""@babel/helper-plugin-utils"" ""^7.25.9""
-
-""@babel/template@^7.26.9"":
-  version ""7.26.9""
-  resolved ""https://registry.yarnpkg.com/@babel/template/-/template-7.26.9.tgz#4577ad3ddf43d194528cff4e1fa6b232fa609bb2""
-  integrity sha512-qyRplbeIpNZhmzOysF/wFMuP9sctmh2cFzRAZOn1YapxBsE1i9bJIY586R/WBLfLcmcBlM8ROBiQURnnNy+zfA==
-  dependencies:
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/parser"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.9""
-
-""@babel/traverse@^7.25.9"", ""@babel/traverse@^7.26.10"", ""@babel/traverse@^7.26.5"", ""@babel/traverse@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/traverse/-/traverse-7.26.10.tgz#43cca33d76005dbaa93024fae536cc1946a4c380""
-  integrity sha512-k8NuDrxr0WrPH5Aupqb2LCVURP/S0vBEn5mK6iH+GIYob66U5EtoZvcdudR2jQ4cmTwhEwW1DLB+Yyas9zjF6A==
-  dependencies:
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/generator"" ""^7.26.10""
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.10""
-    debug ""^4.3.1""
-    globals ""^11.1.0""
-
-""@babel/types@^7.25.9"", ""@babel/types@^7.26.10"", ""@babel/types@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/types/-/types-7.26.10.tgz#396382f6335bd4feb65741eacfc808218f859259""
-  integrity sha512-emqcG3vHrpxUKTrxcblR36dcrcoRDvKmnL/dCL6ZsHaShW80qxCAcNhzQZrpeM765VzEos+xOi4s+r4IXzTwdQ==
-  dependencies:
-    ""@babel/helper-string-parser"" ""^7.25.9""
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-
 ""@eslint-community/eslint-utils@^4.2.0"":
   version ""4.4.1""
   resolved ""https://registry.yarnpkg.com/@eslint-community/eslint-utils/-/eslint-utils-4.4.1.tgz#d1145bf2c20132d6400495d6df4bf59362fd9d56""
@@ -260,38 +53,6 @@
   resolved ""https://registry.yarnpkg.com/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz#4a2868d75d6d6963e423bcf90b7fd1be343409d3""
   integrity sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==
 
-""@jridgewell/gen-mapping@^0.3.5"":
-  version ""0.3.8""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz#4f0e06362e01362f823d348f1872b08f666d8142""
-  integrity sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==
-  dependencies:
-    ""@jridgewell/set-array"" ""^1.2.1""
-    ""@jridgewell/sourcemap-codec"" ""^1.4.10""
-    ""@jridgewell/trace-mapping"" ""^0.3.24""
-
-""@jridgewell/resolve-uri@^3.1.0"":
-  version ""3.1.2""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz#7a0ee601f60f99a20c7c7c5ff0c80388c1189bd6""
-  integrity sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==
-
-""@jridgewell/set-array@^1.2.1"":
-  version ""1.2.1""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/set-array/-/set-array-1.2.1.tgz#558fb6472ed16a4c850b889530e6b36438c49280""
-  integrity sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==
-
-""@jridgewell/sourcemap-codec@^1.4.10"", ""@jridgewell/sourcemap-codec@^1.4.14"":
-  version ""1.5.0""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz#3188bcb273a414b0d215fd22a58540b989b9409a""
-  integrity sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==
-
-""@jridgewell/trace-mapping@^0.3.24"", ""@jridgewell/trace-mapping@^0.3.25"":
-  version ""0.3.25""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz#15f190e98895f3fc23276ee14bc76b675c2e50f0""
-  integrity sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==
-  dependencies:
-    ""@jridgewell/resolve-uri"" ""^3.1.0""
-    ""@jridgewell/sourcemap-codec"" ""^1.4.14""
-
 ""@nodelib/fs.scandir@2.1.5"":
   version ""2.1.5""
   resolved ""https://registry.yarnpkg.com/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz#7619c2eb21b25483f6d167548b4cfd5a7488c3d5""
@@ -368,26 +129,11 @@ brace-expansion@^1.1.7:
     balanced-match ""^1.0.0""
     concat-map ""0.0.1""
 
-browserslist@^4.24.0:
-  version ""4.24.4""
-  resolved ""https://registry.yarnpkg.com/browserslist/-/browserslist-4.24.4.tgz#c6b2865a3f08bcb860a0e827389003b9fe686e4b""
-  integrity sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==
-  dependencies:
-    caniuse-lite ""^1.0.30001688""
-    electron-to-chromium ""^1.5.73""
-    node-releases ""^2.0.19""
-    update-browserslist-db ""^1.1.1""
-
 callsites@^3.0.0:
   version ""3.1.0""
   resolved ""https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73""
   integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
 
-caniuse-lite@^1.0.30001688:
-  version ""1.0.30001703""
-  resolved ""https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001703.tgz#977cb4920598c158f491ecf4f4f2cfed9e354718""
-  integrity sha512-kRlAGTRWgPsOj7oARC9m1okJEXdL/8fekFVcxA8Hl7GH4r/sN4OJn/i6Flde373T50KS7Y37oFbMwlE8+F42kQ==
-
 chalk@^4.0.0:
   version ""4.1.2""
   resolved ""https://registry.yarnpkg.com/chalk/-/chalk-4.1.2.tgz#aac4e2b7734a740867aeb16bf02aad556a1e7a01""
@@ -413,11 +159,6 @@ concat-map@0.0.1:
   resolved ""https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b""
   integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=
 
-convert-source-map@^2.0.0:
-  version ""2.0.0""
-  resolved ""https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-2.0.0.tgz#4b560f649fc4e918dd0ab75cf4961e8bc882d82a""
-  integrity sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==
-
 cross-spawn@^7.0.2:
   version ""7.0.6""
   resolved ""https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.6.tgz#8a58fe78f00dcd70c370451759dfbfaf03e8ee9f""
@@ -427,7 +168,7 @@ cross-spawn@^7.0.2:
     shebang-command ""^2.0.0""
     which ""^2.0.1""
 
-debug@^4.1.0, debug@^4.3.1, debug@^4.3.2:
+debug@^4.3.1, debug@^4.3.2:
   version ""4.4.0""
   resolved ""https://registry.yarnpkg.com/debug/-/debug-4.4.0.tgz#2b3f2aea2ffeb776477460267377dc8710faba8a""
   integrity sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==
@@ -446,16 +187,6 @@ doctrine@^3.0.0:
   dependencies:
     esutils ""^2.0.2""
 
-electron-to-chromium@^1.5.73:
-  version ""1.5.114""
-  resolved ""https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.5.114.tgz#f2bb4fda80a7db4ea273565e75b0ebbe19af0ac3""
-  integrity sha512-DFptFef3iktoKlFQK/afbo274/XNWD00Am0xa7M8FZUepHlHT8PEuiNBoRfFHbH1okqN58AlhbJ4QTkcnXorjA==
-
-escalade@^3.2.0:
-  version ""3.2.0""
-  resolved ""https://registry.yarnpkg.com/escalade/-/escalade-3.2.0.tgz#011a3f69856ba189dffa7dc8fcce99d2a87903e5""
-  integrity sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==
-
 escape-string-regexp@^4.0.0:
   version ""4.0.0""
   resolved ""https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz#14ba83a5d373e3d311e5afca29cf5bfad965bf34""
@@ -611,11 +342,6 @@ fs.realpath@^1.0.0:
   resolved ""https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f""
   integrity sha1-FQStJSMVjKpA20onh8sBQRmU6k8=
 
-gensync@^1.0.0-beta.2:
-  version ""1.0.0-beta.2""
-  resolved ""https://registry.yarnpkg.com/gensync/-/gensync-1.0.0-beta.2.tgz#32a6ee76c3d7f52d46b2b1ae5d93fea8580a25e0""
-  integrity sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==
-
 glob-parent@^6.0.2:
   version ""6.0.2""
   resolved ""https://registry.yarnpkg.com/glob-parent/-/glob-parent-6.0.2.tgz#6d237d99083950c79290f24c7642a3de9a28f9e3""
@@ -635,11 +361,6 @@ glob@^7.1.3:
     once ""^1.3.0""
     path-is-absolute ""^1.0.0""
 
-globals@^11.1.0:
-  version ""11.12.0""
-  resolved ""https://registry.yarnpkg.com/globals/-/globals-11.12.0.tgz#ab8795338868a0babd8525758018c2a7eb95c42e""
-  integrity sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==
-
 globals@^13.19.0:
   version ""13.24.0""
   resolved ""https://registry.yarnpkg.com/globals/-/globals-13.24.0.tgz#8432a19d78ce0c1e833949c36adb345400bb1171""
@@ -657,18 +378,6 @@ has-flag@^4.0.0:
   resolved ""https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b""
   integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
 
-hermes-estree@0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480""
-  integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw==
-
-hermes-parser@^0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1""
-  integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA==
-  dependencies:
-    hermes-estree ""0.25.1""
-
 ignore@^5.2.0:
   version ""5.3.2""
   resolved ""https://registry.yarnpkg.com/ignore/-/ignore-5.3.2.tgz#3cd40e729f3643fd87cb04e50bf0eb722bc596f5""
@@ -722,23 +431,13 @@ isexe@^2.0.0:
   resolved ""https://registry.yarnpkg.com/isexe/-/isexe-2.0.0.tgz#e8fbf374dc556ff8947a10dcb0572d633f2cfa10""
   integrity sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==
 
-js-tokens@^4.0.0:
-  version ""4.0.0""
-  resolved ""https://registry.yarnpkg.com/js-tokens/-/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499""
-  integrity sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==
-
 js-yaml@^4.1.0:
   version ""4.1.0""
   resolved ""https://registry.yarnpkg.com/js-yaml/-/js-yaml-4.1.0.tgz#c1fb65f8f5017901cdd2c951864ba18458a10602""
   integrity sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==
   dependencies:
     argparse ""^2.0.1""
 
-jsesc@^3.0.2:
-  version ""3.1.0""
-  resolved ""https://registry.yarnpkg.com/jsesc/-/jsesc-3.1.0.tgz#74d335a234f67ed19907fdadfac7ccf9d409825d""
-  integrity sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==
-
 json-buffer@3.0.1:
   version ""3.0.1""
   resolved ""https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.1.tgz#9338802a30d3b6605fbe0613e094008ca8c05a13""
@@ -754,11 +453,6 @@ json-stable-stringify-without-jsonify@^1.0.1:
   resolved ""https://registry.yarnpkg.com/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz#9db7b59496ad3f3cfef30a75142d2d930ad72651""
   integrity sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==
 
-json5@^2.2.3:
-  version ""2.2.3""
-  resolved ""https://registry.yarnpkg.com/json5/-/json5-2.2.3.tgz#78cd6f1a19bdc12b73db5ad0c61efd66c1e29283""
-  integrity sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==
-
 keyv@^4.5.3:
   version ""4.5.4""
   resolved ""https://registry.yarnpkg.com/keyv/-/keyv-4.5.4.tgz#a879a99e29452f942439f2a405e3af8b31d4de93""
@@ -786,13 +480,6 @@ lodash.merge@^4.6.2:
   resolved ""https://registry.yarnpkg.com/lodash.merge/-/lodash.merge-4.6.2.tgz#558aa53b43b661e1925a0afdfa36a9a1085fe57a""
   integrity sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==
 
-lru-cache@^5.1.1:
-  version ""5.1.1""
-  resolved ""https://registry.yarnpkg.com/lru-cache/-/lru-cache-5.1.1.tgz#1da27e6710271947695daf6848e847f01d84b920""
-  integrity sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==
-  dependencies:
-    yallist ""^3.0.2""
-
 minimatch@^3.0.4:
   version ""3.0.4""
   resolved ""https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.4.tgz#5166e286457f03306064be5497e8dbb0c3d32083""
@@ -817,11 +504,6 @@ natural-compare@^1.4.0:
   resolved ""https://registry.yarnpkg.com/natural-compare/-/natural-compare-1.4.0.tgz#4abebfeed7541f2c27acfb29bdbbd15c8d5ba4f7""
   integrity sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=
 
-node-releases@^2.0.19:
-  version ""2.0.19""
-  resolved ""https://registry.yarnpkg.com/node-releases/-/node-releases-2.0.19.tgz#9e445a52950951ec4d177d843af370b411caf314""
-  integrity sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==
-
 once@^1.3.0:
   version ""1.4.0""
   resolved ""https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1""
@@ -877,11 +559,6 @@ path-key@^3.1.0:
   resolved ""https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375""
   integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
 
-picocolors@^1.0.0, picocolors@^1.1.1:
-  version ""1.1.1""
-  resolved ""https://registry.yarnpkg.com/picocolors/-/picocolors-1.1.1.tgz#3d321af3eab939b083c8f929a1d12cda81c26b6b""
-  integrity sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==
-
 prelude-ls@^1.2.1:
   version ""1.2.1""
   resolved ""https://registry.yarnpkg.com/prelude-ls/-/prelude-ls-1.2.1.tgz#debc6489d7a6e6b0e7611888cec880337d316396""
@@ -921,11 +598,6 @@ run-parallel@^1.1.9:
   dependencies:
     queue-microtask ""^1.2.2""
 
-semver@^6.3.1:
-  version ""6.3.1""
-  resolved ""https://registry.yarnpkg.com/semver/-/semver-6.3.1.tgz#556d2ef8689146e46dcea4bfdd095f3434dffcb4""
-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==
-
 shebang-command@^2.0.0:
   version ""2.0.0""
   resolved ""https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea""
@@ -974,14 +646,6 @@ type-fest@^0.20.2:
   resolved ""https://registry.yarnpkg.com/type-fest/-/type-fest-0.20.2.tgz#1bf207f4b28f91583666cb5fbd327887301cd5f4""
   integrity sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==
 
-update-browserslist-db@^1.1.1:
-  version ""1.1.3""
-  resolved ""https://registry.yarnpkg.com/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz#348377dd245216f9e7060ff50b15a1b740b75420""
-  integrity sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==
-  dependencies:
-    escalade ""^3.2.0""
-    picocolors ""^1.1.1""
-
 uri-js@^4.2.2:
   version ""4.2.2""
   resolved ""https://registry.yarnpkg.com/uri-js/-/uri-js-4.2.2.tgz#94c540e1ff772956e2299507c010aea6c8838eb0""
@@ -1006,22 +670,7 @@ wrappy@1:
   resolved ""https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f""
   integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=
 
-yallist@^3.0.2:
-  version ""3.1.1""
-  resolved ""https://registry.yarnpkg.com/yallist/-/yallist-3.1.1.tgz#dbb7daf9bfd8bac9ab45ebf602b8cbad0d5d08fd""
-  integrity sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==
-
 yocto-queue@^0.1.0:
   version ""0.1.0""
   resolved ""https://registry.yarnpkg.com/yocto-queue/-/yocto-queue-0.1.0.tgz#0294eb3dee05028d31ee1a5fa2c556a6aaf10a1b""
   integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==
-
-zod-validation-error@^3.0.3:
-  version ""3.4.0""
-  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-3.4.0.tgz#3a8a1f55c65579822d7faa190b51336c61bee2a6""
-  integrity sha512-ZOPR9SVY6Pb2qqO5XHt+MkkTRxGXb4EVtnjc9JpXUOtUB1T9Ru7mZOT361AN3MsetVe7R0a1KZshJDZdgp9miQ==
-
-zod@^3.22.4:
-  version ""3.24.2""
-  resolved ""https://registry.yarnpkg.com/zod/-/zod-3.24.2.tgz#8efa74126287c675e92f46871cfc8d15c34372b3""
-  integrity sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ=="
facebook/react,056a586928fe1b6186d3693743ac7019ce39cb7b,lauren,2025-10-02T22:42:43Z,"[fixtures] Update eslint fixture lockfiles (#34699)

Updates the eslint fixture lockfiles.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34699).
* #34703
* #34700
* __->__ #34699
* #34675",fixtures/eslint-v9/yarn.lock,1,352,353,"@@ -2,213 +2,6 @@
 # yarn lockfile v1
 
 
-""@ampproject/remapping@^2.2.0"":
-  version ""2.3.0""
-  resolved ""https://registry.yarnpkg.com/@ampproject/remapping/-/remapping-2.3.0.tgz#ed441b6fa600072520ce18b43d2c8cc8caecc7f4""
-  integrity sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==
-  dependencies:
-    ""@jridgewell/gen-mapping"" ""^0.3.5""
-    ""@jridgewell/trace-mapping"" ""^0.3.24""
-
-""@babel/code-frame@^7.26.2"":
-  version ""7.26.2""
-  resolved ""https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.26.2.tgz#4b5fab97d33338eff916235055f0ebc21e573a85""
-  integrity sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==
-  dependencies:
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-    js-tokens ""^4.0.0""
-    picocolors ""^1.0.0""
-
-""@babel/compat-data@^7.26.5"":
-  version ""7.26.8""
-  resolved ""https://registry.yarnpkg.com/@babel/compat-data/-/compat-data-7.26.8.tgz#821c1d35641c355284d4a870b8a4a7b0c141e367""
-  integrity sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==
-
-""@babel/core@^7.24.4"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/core/-/core-7.26.10.tgz#5c876f83c8c4dcb233ee4b670c0606f2ac3000f9""
-  integrity sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ==
-  dependencies:
-    ""@ampproject/remapping"" ""^2.2.0""
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/generator"" ""^7.26.10""
-    ""@babel/helper-compilation-targets"" ""^7.26.5""
-    ""@babel/helper-module-transforms"" ""^7.26.0""
-    ""@babel/helpers"" ""^7.26.10""
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/traverse"" ""^7.26.10""
-    ""@babel/types"" ""^7.26.10""
-    convert-source-map ""^2.0.0""
-    debug ""^4.1.0""
-    gensync ""^1.0.0-beta.2""
-    json5 ""^2.2.3""
-    semver ""^6.3.1""
-
-""@babel/generator@^7.26.10"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/generator/-/generator-7.26.10.tgz#a60d9de49caca16744e6340c3658dfef6138c3f7""
-  integrity sha512-rRHT8siFIXQrAYOYqZQVsAr8vJ+cBNqcVAY6m5V8/4QqzaPl+zDBe6cLEPRDuNOUf3ww8RfJVlOyQMoSI+5Ang==
-  dependencies:
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/types"" ""^7.26.10""
-    ""@jridgewell/gen-mapping"" ""^0.3.5""
-    ""@jridgewell/trace-mapping"" ""^0.3.25""
-    jsesc ""^3.0.2""
-
-""@babel/helper-annotate-as-pure@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.25.9.tgz#d8eac4d2dc0d7b6e11fa6e535332e0d3184f06b4""
-  integrity sha512-gv7320KBUFJz1RnylIg5WWYPRXKZ884AGkYpgpWW02TH66Dl+HaC1t1CKd0z3R4b6hdYEcmrNZHUmfCP+1u3/g==
-  dependencies:
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-compilation-targets@^7.26.5"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.26.5.tgz#75d92bb8d8d51301c0d49e52a65c9a7fe94514d8""
-  integrity sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==
-  dependencies:
-    ""@babel/compat-data"" ""^7.26.5""
-    ""@babel/helper-validator-option"" ""^7.25.9""
-    browserslist ""^4.24.0""
-    lru-cache ""^5.1.1""
-    semver ""^6.3.1""
-
-""@babel/helper-create-class-features-plugin@^7.25.9"":
-  version ""7.26.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.26.9.tgz#d6f83e3039547fbb39967e78043cd3c8b7820c71""
-  integrity sha512-ubbUqCofvxPRurw5L8WTsCLSkQiVpov4Qx0WMA+jUN+nXBK8ADPlJO1grkFw5CWKC5+sZSOfuGMdX1aI1iT9Sg==
-  dependencies:
-    ""@babel/helper-annotate-as-pure"" ""^7.25.9""
-    ""@babel/helper-member-expression-to-functions"" ""^7.25.9""
-    ""@babel/helper-optimise-call-expression"" ""^7.25.9""
-    ""@babel/helper-replace-supers"" ""^7.26.5""
-    ""@babel/helper-skip-transparent-expression-wrappers"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.26.9""
-    semver ""^6.3.1""
-
-""@babel/helper-member-expression-to-functions@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.25.9.tgz#9dfffe46f727005a5ea29051ac835fb735e4c1a3""
-  integrity sha512-wbfdZ9w5vk0C0oyHqAJbc62+vet5prjj01jjJ8sKn3j9h3MQQlflEdXYvuqRWjHnM12coDEqiC1IRCi0U/EKwQ==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-module-imports@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz#e7f8d20602ebdbf9ebbea0a0751fb0f2a4141715""
-  integrity sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-module-transforms@^7.26.0"":
-  version ""7.26.0""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz#8ce54ec9d592695e58d84cd884b7b5c6a2fdeeae""
-  integrity sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==
-  dependencies:
-    ""@babel/helper-module-imports"" ""^7.25.9""
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.25.9""
-
-""@babel/helper-optimise-call-expression@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.25.9.tgz#3324ae50bae7e2ab3c33f60c9a877b6a0146b54e""
-  integrity sha512-FIpuNaz5ow8VyrYcnXQTDRGvV6tTjkNtCK/RYNDXGSLlUD6cBuQTSw43CShGxjvfBTfcUA/r6UhUCbtYqkhcuQ==
-  dependencies:
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-plugin-utils@^7.25.9"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz#18580d00c9934117ad719392c4f6585c9333cc35""
-  integrity sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==
-
-""@babel/helper-replace-supers@^7.26.5"":
-  version ""7.26.5""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-replace-supers/-/helper-replace-supers-7.26.5.tgz#6cb04e82ae291dae8e72335dfe438b0725f14c8d""
-  integrity sha512-bJ6iIVdYX1YooY2X7w1q6VITt+LnUILtNk7zT78ykuwStx8BauCzxvFqFaHjOpW1bVnSUM1PN1f0p5P21wHxvg==
-  dependencies:
-    ""@babel/helper-member-expression-to-functions"" ""^7.25.9""
-    ""@babel/helper-optimise-call-expression"" ""^7.25.9""
-    ""@babel/traverse"" ""^7.26.5""
-
-""@babel/helper-skip-transparent-expression-wrappers@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.25.9.tgz#0b2e1b62d560d6b1954893fd2b705dc17c91f0c9""
-  integrity sha512-K4Du3BFa3gvyhzgPcntrkDgZzQaq6uozzcpGbOO1OEJaI+EJdqWIMTLgFgQf6lrfiDFo5FU+BxKepI9RmZqahA==
-  dependencies:
-    ""@babel/traverse"" ""^7.25.9""
-    ""@babel/types"" ""^7.25.9""
-
-""@babel/helper-string-parser@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz#1aabb72ee72ed35789b4bbcad3ca2862ce614e8c""
-  integrity sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==
-
-""@babel/helper-validator-identifier@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz#24b64e2c3ec7cd3b3c547729b8d16871f22cbdc7""
-  integrity sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==
-
-""@babel/helper-validator-option@^7.25.9"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz#86e45bd8a49ab7e03f276577f96179653d41da72""
-  integrity sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==
-
-""@babel/helpers@^7.26.10"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/helpers/-/helpers-7.26.10.tgz#6baea3cd62ec2d0c1068778d63cb1314f6637384""
-  integrity sha512-UPYc3SauzZ3JGgj87GgZ89JVdC5dj0AoetR5Bw6wj4niittNyFh6+eOGonYvJ1ao6B8lEa3Q3klS7ADZ53bc5g==
-  dependencies:
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.10""
-
-""@babel/parser@^7.24.4"", ""@babel/parser@^7.26.10"", ""@babel/parser@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/parser/-/parser-7.26.10.tgz#e9bdb82f14b97df6569b0b038edd436839c57749""
-  integrity sha512-6aQR2zGE/QFi8JpDLjUZEPYOs7+mhKXm86VaKFiLP35JQwQb6bwUE+XbvkH0EptsYhbNBSUGaUBLKqxH1xSgsA==
-  dependencies:
-    ""@babel/types"" ""^7.26.10""
-
-""@babel/plugin-transform-private-methods@^7.24.4"":
-  version ""7.25.9""
-  resolved ""https://registry.yarnpkg.com/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.25.9.tgz#847f4139263577526455d7d3223cd8bda51e3b57""
-  integrity sha512-D/JUozNpQLAPUVusvqMxyvjzllRaF8/nSrP1s2YGQT/W4LHK4xxsMcHjhOGTS01mp9Hda8nswb+FblLdJornQw==
-  dependencies:
-    ""@babel/helper-create-class-features-plugin"" ""^7.25.9""
-    ""@babel/helper-plugin-utils"" ""^7.25.9""
-
-""@babel/template@^7.26.9"":
-  version ""7.26.9""
-  resolved ""https://registry.yarnpkg.com/@babel/template/-/template-7.26.9.tgz#4577ad3ddf43d194528cff4e1fa6b232fa609bb2""
-  integrity sha512-qyRplbeIpNZhmzOysF/wFMuP9sctmh2cFzRAZOn1YapxBsE1i9bJIY586R/WBLfLcmcBlM8ROBiQURnnNy+zfA==
-  dependencies:
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/parser"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.9""
-
-""@babel/traverse@^7.25.9"", ""@babel/traverse@^7.26.10"", ""@babel/traverse@^7.26.5"", ""@babel/traverse@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/traverse/-/traverse-7.26.10.tgz#43cca33d76005dbaa93024fae536cc1946a4c380""
-  integrity sha512-k8NuDrxr0WrPH5Aupqb2LCVURP/S0vBEn5mK6iH+GIYob66U5EtoZvcdudR2jQ4cmTwhEwW1DLB+Yyas9zjF6A==
-  dependencies:
-    ""@babel/code-frame"" ""^7.26.2""
-    ""@babel/generator"" ""^7.26.10""
-    ""@babel/parser"" ""^7.26.10""
-    ""@babel/template"" ""^7.26.9""
-    ""@babel/types"" ""^7.26.10""
-    debug ""^4.3.1""
-    globals ""^11.1.0""
-
-""@babel/types@^7.25.9"", ""@babel/types@^7.26.10"", ""@babel/types@^7.26.9"":
-  version ""7.26.10""
-  resolved ""https://registry.yarnpkg.com/@babel/types/-/types-7.26.10.tgz#396382f6335bd4feb65741eacfc808218f859259""
-  integrity sha512-emqcG3vHrpxUKTrxcblR36dcrcoRDvKmnL/dCL6ZsHaShW80qxCAcNhzQZrpeM765VzEos+xOi4s+r4IXzTwdQ==
-  dependencies:
-    ""@babel/helper-string-parser"" ""^7.25.9""
-    ""@babel/helper-validator-identifier"" ""^7.25.9""
-
 ""@eslint-community/eslint-utils@^4.2.0"":
   version ""4.4.1""
   resolved ""https://registry.yarnpkg.com/@eslint-community/eslint-utils/-/eslint-utils-4.4.1.tgz#d1145bf2c20132d6400495d6df4bf59362fd9d56""
@@ -303,38 +96,6 @@
   resolved ""https://registry.yarnpkg.com/@humanwhocodes/retry/-/retry-0.4.2.tgz#1860473de7dfa1546767448f333db80cb0ff2161""
   integrity sha512-xeO57FpIu4p1Ri3Jq/EXq4ClRm86dVF2z/+kvFnyqVYRavTZmaFaUBbWCOuuTh0o/g7DSsk6kc2vrS4Vl5oPOQ==
 
-""@jridgewell/gen-mapping@^0.3.5"":
-  version ""0.3.8""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz#4f0e06362e01362f823d348f1872b08f666d8142""
-  integrity sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==
-  dependencies:
-    ""@jridgewell/set-array"" ""^1.2.1""
-    ""@jridgewell/sourcemap-codec"" ""^1.4.10""
-    ""@jridgewell/trace-mapping"" ""^0.3.24""
-
-""@jridgewell/resolve-uri@^3.1.0"":
-  version ""3.1.2""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz#7a0ee601f60f99a20c7c7c5ff0c80388c1189bd6""
-  integrity sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==
-
-""@jridgewell/set-array@^1.2.1"":
-  version ""1.2.1""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/set-array/-/set-array-1.2.1.tgz#558fb6472ed16a4c850b889530e6b36438c49280""
-  integrity sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==
-
-""@jridgewell/sourcemap-codec@^1.4.10"", ""@jridgewell/sourcemap-codec@^1.4.14"":
-  version ""1.5.0""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz#3188bcb273a414b0d215fd22a58540b989b9409a""
-  integrity sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==
-
-""@jridgewell/trace-mapping@^0.3.24"", ""@jridgewell/trace-mapping@^0.3.25"":
-  version ""0.3.25""
-  resolved ""https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz#15f190e98895f3fc23276ee14bc76b675c2e50f0""
-  integrity sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==
-  dependencies:
-    ""@jridgewell/resolve-uri"" ""^3.1.0""
-    ""@jridgewell/sourcemap-codec"" ""^1.4.14""
-
 ""@types/estree@^1.0.6"":
   version ""1.0.6""
   resolved ""https://registry.yarnpkg.com/@types/estree/-/estree-1.0.6.tgz#628effeeae2064a1b4e79f78e81d87b7e5fc7b50""
@@ -395,26 +156,11 @@ brace-expansion@^1.1.7:
     balanced-match ""^1.0.0""
     concat-map ""0.0.1""
 
-browserslist@^4.24.0:
-  version ""4.24.4""
-  resolved ""https://registry.yarnpkg.com/browserslist/-/browserslist-4.24.4.tgz#c6b2865a3f08bcb860a0e827389003b9fe686e4b""
-  integrity sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==
-  dependencies:
-    caniuse-lite ""^1.0.30001688""
-    electron-to-chromium ""^1.5.73""
-    node-releases ""^2.0.19""
-    update-browserslist-db ""^1.1.1""
-
 callsites@^3.0.0:
   version ""3.1.0""
   resolved ""https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73""
   integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==
 
-caniuse-lite@^1.0.30001688:
-  version ""1.0.30001703""
-  resolved ""https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001703.tgz#977cb4920598c158f491ecf4f4f2cfed9e354718""
-  integrity sha512-kRlAGTRWgPsOj7oARC9m1okJEXdL/8fekFVcxA8Hl7GH4r/sN4OJn/i6Flde373T50KS7Y37oFbMwlE8+F42kQ==
-
 chalk@^4.0.0:
   version ""4.1.2""
   resolved ""https://registry.yarnpkg.com/chalk/-/chalk-4.1.2.tgz#aac4e2b7734a740867aeb16bf02aad556a1e7a01""
@@ -440,11 +186,6 @@ concat-map@0.0.1:
   resolved ""https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b""
   integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=
 
-convert-source-map@^2.0.0:
-  version ""2.0.0""
-  resolved ""https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-2.0.0.tgz#4b560f649fc4e918dd0ab75cf4961e8bc882d82a""
-  integrity sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==
-
 cross-spawn@^7.0.6:
   version ""7.0.6""
   resolved ""https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.6.tgz#8a58fe78f00dcd70c370451759dfbfaf03e8ee9f""
@@ -454,7 +195,7 @@ cross-spawn@^7.0.6:
     shebang-command ""^2.0.0""
     which ""^2.0.1""
 
-debug@^4.1.0, debug@^4.3.1, debug@^4.3.2:
+debug@^4.3.1, debug@^4.3.2:
   version ""4.4.0""
   resolved ""https://registry.yarnpkg.com/debug/-/debug-4.4.0.tgz#2b3f2aea2ffeb776477460267377dc8710faba8a""
   integrity sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==
@@ -466,16 +207,6 @@ deep-is@^0.1.3:
   resolved ""https://registry.yarnpkg.com/deep-is/-/deep-is-0.1.4.tgz#a6f2dce612fadd2ef1f519b73551f17e85199831""
   integrity sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==
 
-electron-to-chromium@^1.5.73:
-  version ""1.5.114""
-  resolved ""https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.5.114.tgz#f2bb4fda80a7db4ea273565e75b0ebbe19af0ac3""
-  integrity sha512-DFptFef3iktoKlFQK/afbo274/XNWD00Am0xa7M8FZUepHlHT8PEuiNBoRfFHbH1okqN58AlhbJ4QTkcnXorjA==
-
-escalade@^3.2.0:
-  version ""3.2.0""
-  resolved ""https://registry.yarnpkg.com/escalade/-/escalade-3.2.0.tgz#011a3f69856ba189dffa7dc8fcce99d2a87903e5""
-  integrity sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==
-
 escape-string-regexp@^4.0.0:
   version ""4.0.0""
   resolved ""https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz#14ba83a5d373e3d311e5afca29cf5bfad965bf34""
@@ -634,23 +365,13 @@ flatted@^3.2.9:
   resolved ""https://registry.yarnpkg.com/flatted/-/flatted-3.3.2.tgz#adba1448a9841bec72b42c532ea23dbbedef1a27""
   integrity sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA==
 
-gensync@^1.0.0-beta.2:
-  version ""1.0.0-beta.2""
-  resolved ""https://registry.yarnpkg.com/gensync/-/gensync-1.0.0-beta.2.tgz#32a6ee76c3d7f52d46b2b1ae5d93fea8580a25e0""
-  integrity sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==
-
 glob-parent@^6.0.2:
   version ""6.0.2""
   resolved ""https://registry.yarnpkg.com/glob-parent/-/glob-parent-6.0.2.tgz#6d237d99083950c79290f24c7642a3de9a28f9e3""
   integrity sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==
   dependencies:
     is-glob ""^4.0.3""
 
-globals@^11.1.0:
-  version ""11.12.0""
-  resolved ""https://registry.yarnpkg.com/globals/-/globals-11.12.0.tgz#ab8795338868a0babd8525758018c2a7eb95c42e""
-  integrity sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==
-
 globals@^14.0.0:
   version ""14.0.0""
   resolved ""https://registry.yarnpkg.com/globals/-/globals-14.0.0.tgz#898d7413c29babcf6bafe56fcadded858ada724e""
@@ -661,18 +382,6 @@ has-flag@^4.0.0:
   resolved ""https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b""
   integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==
 
-hermes-estree@0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480""
-  integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw==
-
-hermes-parser@^0.25.1:
-  version ""0.25.1""
-  resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1""
-  integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA==
-  dependencies:
-    hermes-estree ""0.25.1""
-
 ignore@^5.2.0:
   version ""5.3.2""
   resolved ""https://registry.yarnpkg.com/ignore/-/ignore-5.3.2.tgz#3cd40e729f3643fd87cb04e50bf0eb722bc596f5""
@@ -713,23 +422,13 @@ jiti@^2.4.2:
   resolved ""https://registry.yarnpkg.com/jiti/-/jiti-2.4.2.tgz#d19b7732ebb6116b06e2038da74a55366faef560""
   integrity sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A==
 
-js-tokens@^4.0.0:
-  version ""4.0.0""
-  resolved ""https://registry.yarnpkg.com/js-tokens/-/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499""
-  integrity sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==
-
 js-yaml@^4.1.0:
   version ""4.1.0""
   resolved ""https://registry.yarnpkg.com/js-yaml/-/js-yaml-4.1.0.tgz#c1fb65f8f5017901cdd2c951864ba18458a10602""
   integrity sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==
   dependencies:
     argparse ""^2.0.1""
 
-jsesc@^3.0.2:
-  version ""3.1.0""
-  resolved ""https://registry.yarnpkg.com/jsesc/-/jsesc-3.1.0.tgz#74d335a234f67ed19907fdadfac7ccf9d409825d""
-  integrity sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==
-
 json-buffer@3.0.1:
   version ""3.0.1""
   resolved ""https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.1.tgz#9338802a30d3b6605fbe0613e094008ca8c05a13""
@@ -745,11 +444,6 @@ json-stable-stringify-without-jsonify@^1.0.1:
   resolved ""https://registry.yarnpkg.com/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz#9db7b59496ad3f3cfef30a75142d2d930ad72651""
   integrity sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==
 
-json5@^2.2.3:
-  version ""2.2.3""
-  resolved ""https://registry.yarnpkg.com/json5/-/json5-2.2.3.tgz#78cd6f1a19bdc12b73db5ad0c61efd66c1e29283""
-  integrity sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==
-
 keyv@^4.5.4:
   version ""4.5.4""
   resolved ""https://registry.yarnpkg.com/keyv/-/keyv-4.5.4.tgz#a879a99e29452f942439f2a405e3af8b31d4de93""
@@ -777,13 +471,6 @@ lodash.merge@^4.6.2:
   resolved ""https://registry.yarnpkg.com/lodash.merge/-/lodash.merge-4.6.2.tgz#558aa53b43b661e1925a0afdfa36a9a1085fe57a""
   integrity sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==
 
-lru-cache@^5.1.1:
-  version ""5.1.1""
-  resolved ""https://registry.yarnpkg.com/lru-cache/-/lru-cache-5.1.1.tgz#1da27e6710271947695daf6848e847f01d84b920""
-  integrity sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==
-  dependencies:
-    yallist ""^3.0.2""
-
 minimatch@^3.1.2:
   version ""3.1.2""
   resolved ""https://registry.yarnpkg.com/minimatch/-/minimatch-3.1.2.tgz#19cd194bfd3e428f049a70817c038d89ab4be35b""
@@ -801,11 +488,6 @@ natural-compare@^1.4.0:
   resolved ""https://registry.yarnpkg.com/natural-compare/-/natural-compare-1.4.0.tgz#4abebfeed7541f2c27acfb29bdbbd15c8d5ba4f7""
   integrity sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=
 
-node-releases@^2.0.19:
-  version ""2.0.19""
-  resolved ""https://registry.yarnpkg.com/node-releases/-/node-releases-2.0.19.tgz#9e445a52950951ec4d177d843af370b411caf314""
-  integrity sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==
-
 optionator@^0.9.3:
   version ""0.9.4""
   resolved ""https://registry.yarnpkg.com/optionator/-/optionator-0.9.4.tgz#7ea1c1a5d91d764fb282139c88fe11e182a3a734""
@@ -849,11 +531,6 @@ path-key@^3.1.0:
   resolved ""https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375""
   integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==
 
-picocolors@^1.0.0, picocolors@^1.1.1:
-  version ""1.1.1""
-  resolved ""https://registry.yarnpkg.com/picocolors/-/picocolors-1.1.1.tgz#3d321af3eab939b083c8f929a1d12cda81c26b6b""
-  integrity sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==
-
 prelude-ls@^1.2.1:
   version ""1.2.1""
   resolved ""https://registry.yarnpkg.com/prelude-ls/-/prelude-ls-1.2.1.tgz#debc6489d7a6e6b0e7611888cec880337d316396""
@@ -869,11 +546,6 @@ resolve-from@^4.0.0:
   resolved ""https://registry.yarnpkg.com/resolve-from/-/resolve-from-4.0.0.tgz#4abcd852ad32dd7baabfe9b40e00a36db5f392e6""
   integrity sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==
 
-semver@^6.3.1:
-  version ""6.3.1""
-  resolved ""https://registry.yarnpkg.com/semver/-/semver-6.3.1.tgz#556d2ef8689146e46dcea4bfdd095f3434dffcb4""
-  integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==
-
 shebang-command@^2.0.0:
   version ""2.0.0""
   resolved ""https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea""
@@ -905,14 +577,6 @@ type-check@^0.4.0, type-check@~0.4.0:
   dependencies:
     prelude-ls ""^1.2.1""
 
-update-browserslist-db@^1.1.1:
-  version ""1.1.3""
-  resolved ""https://registry.yarnpkg.com/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz#348377dd245216f9e7060ff50b15a1b740b75420""
-  integrity sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==
-  dependencies:
-    escalade ""^3.2.0""
-    picocolors ""^1.1.1""
-
 uri-js@^4.2.2:
   version ""4.2.2""
   resolved ""https://registry.yarnpkg.com/uri-js/-/uri-js-4.2.2.tgz#94c540e1ff772956e2299507c010aea6c8838eb0""
@@ -932,22 +596,7 @@ word-wrap@^1.2.5:
   resolved ""https://registry.yarnpkg.com/word-wrap/-/word-wrap-1.2.5.tgz#d2c45c6dd4fbce621a66f136cbe328afd0410b34""
   integrity sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==
 
-yallist@^3.0.2:
-  version ""3.1.1""
-  resolved ""https://registry.yarnpkg.com/yallist/-/yallist-3.1.1.tgz#dbb7daf9bfd8bac9ab45ebf602b8cbad0d5d08fd""
-  integrity sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==
-
 yocto-queue@^0.1.0:
   version ""0.1.0""
   resolved ""https://registry.yarnpkg.com/yocto-queue/-/yocto-queue-0.1.0.tgz#0294eb3dee05028d31ee1a5fa2c556a6aaf10a1b""
   integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==
-
-zod-validation-error@^3.0.3:
-  version ""3.4.0""
-  resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-3.4.0.tgz#3a8a1f55c65579822d7faa190b51336c61bee2a6""
-  integrity sha512-ZOPR9SVY6Pb2qqO5XHt+MkkTRxGXb4EVtnjc9JpXUOtUB1T9Ru7mZOT361AN3MsetVe7R0a1KZshJDZdgp9miQ==
-
-zod@^3.22.4:
-  version ""3.24.2""
-  resolved ""https://registry.yarnpkg.com/zod/-/zod-3.24.2.tgz#8efa74126287c675e92f46871cfc8d15c34372b3""
-  integrity sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ=="
facebook/react,5cc3d49f72a9e78cce61f7fbfc1b7455f313cebe,lauren,2025-10-02T22:42:30Z,"[eprh] Add compiler rules to recommended preset (#34675)

Adds back the compiler rules to the recommended preset, intended for the
next release.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34675).
* #34703
* #34700
* #34699
* __->__ #34675",packages/eslint-plugin-react-hooks/src/index.ts,14,1,15,"@@ -7,7 +7,11 @@
 import type {Linter, Rule} from 'eslint';
 
 import ExhaustiveDeps from './rules/ExhaustiveDeps';
-import {allRules} from './shared/ReactCompiler';
+import {
+  allRules,
+  mapErrorSeverityToESlint,
+  recommendedRules,
+} from './shared/ReactCompiler';
 import RulesOfHooks from './rules/RulesOfHooks';
 
 // All rules
@@ -23,6 +27,15 @@ const rules = {
 const ruleConfigs = {
   'react-hooks/rules-of-hooks': 'error',
   'react-hooks/exhaustive-deps': 'warn',
+  // Compiler rules
+  ...Object.fromEntries(
+    Object.entries(recommendedRules).map(([name, ruleConfig]) => {
+      return [
+        'react-hooks/' + name,
+        mapErrorSeverityToESlint(ruleConfig.severity),
+      ];
+    }),
+  ),
 } satisfies Linter.RulesRecord;
 
 const plugin = {"
facebook/react,289f070d64c824a43a401762ec786f5502a0074e,Eugene Choi,2025-10-02T21:41:29Z,"[playground] Improve DiffEditor scrollbar + view (#34691)

The previous DiffEditor view of the playground looked broken and not
cohesive. There would be parts of the scrollbar appearing on the left
side for some reason, along with two scrollbars on the right side. This
PR makes the DiffEditor look more cohesive.

Previous:


https://github.com/user-attachments/assets/1aa1c775-5940-43b2-a75a-9b46452fb78b

After:


https://github.com/user-attachments/assets/b5c04998-6a6c-4b52-b3c5-b2fef21729e0",compiler/apps/playground/components/AccordionWindow.tsx,1,2,3,"@@ -7,7 +7,6 @@
 
 import {Resizable} from 're-resizable';
 import React, {
-  useCallback,
   useId,
   unstable_ViewTransition as ViewTransition,
   unstable_addTransitionType as addTransitionType,
@@ -66,7 +65,7 @@ function AccordionWindowItem({
 
   const transitionName = `accordion-window-item-${id}`;
 
-  const toggleTabs = () => {
+  const toggleTabs = (): void => {
     startTransition(() => {
       addTransitionType(EXPAND_ACCORDION_TRANSITION);
       const nextState = new Set(tabsOpen);"
facebook/react,289f070d64c824a43a401762ec786f5502a0074e,Eugene Choi,2025-10-02T21:41:29Z,"[playground] Improve DiffEditor scrollbar + view (#34691)

The previous DiffEditor view of the playground looked broken and not
cohesive. There would be parts of the scrollbar appearing on the left
side for some reason, along with two scrollbars on the right side. This
PR makes the DiffEditor look more cohesive.

Previous:


https://github.com/user-attachments/assets/1aa1c775-5940-43b2-a75a-9b46452fb78b

After:


https://github.com/user-attachments/assets/b5c04998-6a6c-4b52-b3c5-b2fef21729e0",compiler/apps/playground/components/Editor/EditorImpl.tsx,1,5,6,"@@ -24,11 +24,7 @@ import BabelPluginReactCompiler, {
   printFunctionWithOutlined,
   type LoggerEvent,
 } from 'babel-plugin-react-compiler';
-import {
-  useDeferredValue,
-  useMemo,
-  unstable_ViewTransition as ViewTransition,
-} from 'react';
+import {useDeferredValue, useMemo} from 'react';
 import {useStore} from '../StoreContext';
 import ConfigEditor from './ConfigEditor';
 import Input from './Input';"
facebook/react,289f070d64c824a43a401762ec786f5502a0074e,Eugene Choi,2025-10-02T21:41:29Z,"[playground] Improve DiffEditor scrollbar + view (#34691)

The previous DiffEditor view of the playground looked broken and not
cohesive. There would be parts of the scrollbar appearing on the left
side for some reason, along with two scrollbars on the right side. This
PR makes the DiffEditor look more cohesive.

Previous:


https://github.com/user-attachments/assets/1aa1c775-5940-43b2-a75a-9b46452fb78b

After:


https://github.com/user-attachments/assets/b5c04998-6a6c-4b52-b3c5-b2fef21729e0",compiler/apps/playground/components/Editor/Output.tsx,8,2,10,"@@ -372,12 +372,18 @@ function TextTabContent({
           loading={''}
           options={{
             ...monacoOptions,
+            scrollbar: {
+              vertical: 'hidden',
+            },
+            dimension: {
+              width: 0,
+              height: 0,
+            },
             readOnly: true,
             lineNumbers: 'off',
             glyphMargin: false,
             // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882
-            lineDecorationsWidth: 0,
-            lineNumbersMinChars: 0,
+            overviewRulerLanes: 0,
           }}
         />
       ) : ("
facebook/react,289f070d64c824a43a401762ec786f5502a0074e,Eugene Choi,2025-10-02T21:41:29Z,"[playground] Improve DiffEditor scrollbar + view (#34691)

The previous DiffEditor view of the playground looked broken and not
cohesive. There would be parts of the scrollbar appearing on the left
side for some reason, along with two scrollbars on the right side. This
PR makes the DiffEditor look more cohesive.

Previous:


https://github.com/user-attachments/assets/1aa1c775-5940-43b2-a75a-9b46452fb78b

After:


https://github.com/user-attachments/assets/b5c04998-6a6c-4b52-b3c5-b2fef21729e0",compiler/apps/playground/styles/globals.css,8,0,8,"@@ -124,3 +124,11 @@
 ::view-transition-group(.expand-accordion) {
   overflow: clip;
 }
+
+/**
+ * For some reason, the original Monaco editor is still visible to the
+ * left of the DiffEditor. This is a workaround for better visual clarity.
+ */
+.monaco-diff-editor .editor.original{
+  visibility: hidden !important;
+}"
facebook/react,6a8a8ef32692cc42b53d072d5ce6a6a84e190482,"Sebastian ""Sebbie"" Silbermann",2025-10-02T21:14:52Z,[Flight] Add `<Activity>` (#34697),packages/react-reconciler/src/__tests__/ActivityReactServer-test.js,65,0,65,"@@ -0,0 +1,65 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @emails react-core
+ * @jest-environment node
+ */
+
+'use strict';
+
+let act;
+let Activity;
+let React;
+let ReactServer;
+let ReactNoop;
+let ReactNoopFlightClient;
+let ReactNoopFlightServer;
+
+describe('ActivityReactServer', () => {
+  beforeEach(() => {
+    jest.resetModules();
+    jest.mock('react', () => require('react/react.react-server'));
+    ReactServer = require('react');
+    Activity = ReactServer.Activity;
+    ReactNoopFlightServer = require('react-noop-renderer/flight-server');
+
+    jest.resetModules();
+    __unmockReact();
+    React = require('react');
+    ReactNoopFlightClient = require('react-noop-renderer/flight-client');
+    ReactNoop = require('react-noop-renderer');
+    const InternalTestUtils = require('internal-test-utils');
+    act = InternalTestUtils.act;
+  });
+
+  afterEach(() => {
+    jest.restoreAllMocks();
+  });
+
+  it('can be rendered in React Server', async () => {
+    function App() {
+      return ReactServer.createElement(
+        Activity,
+        {mode: 'hidden'},
+        ReactServer.createElement('div', null, 'Hello, Dave!'),
+      );
+    }
+
+    const transport = ReactNoopFlightServer.render(
+      ReactServer.createElement(App, null),
+    );
+
+    await act(async () => {
+      const app = await ReactNoopFlightClient.read(transport);
+
+      ReactNoop.render(app);
+    });
+
+    expect(ReactNoop).toMatchRenderedOutput(
+      <div hidden={true}>Hello, Dave!</div>,
+    );
+  });
+});"
facebook/react,6a8a8ef32692cc42b53d072d5ce6a6a84e190482,"Sebastian ""Sebbie"" Silbermann",2025-10-02T21:14:52Z,[Flight] Add `<Activity>` (#34697),packages/react-reconciler/src/__tests__/ViewTransitionReactServer-test.js,64,0,64,"@@ -0,0 +1,64 @@
+/**
+ * Copyright (c) Meta Platforms, Inc. and affiliates.
+ *
+ * This source code is licensed under the MIT license found in the
+ * LICENSE file in the root directory of this source tree.
+ *
+ * @emails react-core
+ * @jest-environment node
+ */
+
+'use strict';
+
+let act;
+let ViewTransition;
+let React;
+let ReactServer;
+let ReactNoop;
+let ReactNoopFlightClient;
+let ReactNoopFlightServer;
+
+describe('ViewTransitionReactServer', () => {
+  beforeEach(() => {
+    jest.resetModules();
+    jest.mock('react', () => require('react/react.react-server'));
+    ReactServer = require('react');
+    ViewTransition = ReactServer.unstable_ViewTransition;
+    ReactNoopFlightServer = require('react-noop-renderer/flight-server');
+
+    jest.resetModules();
+    __unmockReact();
+    React = require('react');
+    ReactNoopFlightClient = require('react-noop-renderer/flight-client');
+    ReactNoop = require('react-noop-renderer');
+    const InternalTestUtils = require('internal-test-utils');
+    act = InternalTestUtils.act;
+  });
+
+  afterEach(() => {
+    jest.restoreAllMocks();
+  });
+
+  // @gate enableViewTransition || fb
+  it('can be rendered in React Server', async () => {
+    function App() {
+      return ReactServer.createElement(
+        ViewTransition,
+        {},
+        ReactServer.createElement('div', null, 'Hello, Dave!'),
+      );
+    }
+
+    const transport = ReactNoopFlightServer.render(
+      ReactServer.createElement(App, null),
+    );
+
+    await act(async () => {
+      const app = await ReactNoopFlightClient.read(transport);
+
+      ReactNoop.render(app);
+    });
+
+    expect(ReactNoop).toMatchRenderedOutput(<div>Hello, Dave!</div>);
+  });
+});"
facebook/react,6a8a8ef32692cc42b53d072d5ce6a6a84e190482,"Sebastian ""Sebbie"" Silbermann",2025-10-02T21:14:52Z,[Flight] Add `<Activity>` (#34697),packages/react/src/ReactServer.experimental.development.js,1,1,2,"@@ -58,6 +58,7 @@ export {
 
 export {
   Children,
+  REACT_ACTIVITY_TYPE as Activity,
   REACT_FRAGMENT_TYPE as Fragment,
   REACT_PROFILER_TYPE as Profiler,
   REACT_STRICT_MODE_TYPE as StrictMode,
@@ -83,6 +84,5 @@ export {
   // Experimental
   REACT_SUSPENSE_LIST_TYPE as unstable_SuspenseList,
   REACT_VIEW_TRANSITION_TYPE as unstable_ViewTransition,
-  REACT_ACTIVITY_TYPE as unstable_Activity,
   captureOwnerStack, // DEV-only
 };"
facebook/react,6a8a8ef32692cc42b53d072d5ce6a6a84e190482,"Sebastian ""Sebbie"" Silbermann",2025-10-02T21:14:52Z,[Flight] Add `<Activity>` (#34697),packages/react/src/ReactServer.experimental.js,1,1,2,"@@ -57,6 +57,7 @@ export {
 
 export {
   Children,
+  REACT_ACTIVITY_TYPE as Activity,
   REACT_FRAGMENT_TYPE as Fragment,
   REACT_PROFILER_TYPE as Profiler,
   REACT_STRICT_MODE_TYPE as StrictMode,
@@ -82,5 +83,4 @@ export {
   // Experimental
   REACT_SUSPENSE_LIST_TYPE as unstable_SuspenseList,
   REACT_VIEW_TRANSITION_TYPE as unstable_ViewTransition,
-  REACT_ACTIVITY_TYPE as Activity,
 };"
facebook/react,6a8a8ef32692cc42b53d072d5ce6a6a84e190482,"Sebastian ""Sebbie"" Silbermann",2025-10-02T21:14:52Z,[Flight] Add `<Activity>` (#34697),packages/react/src/ReactServer.fb.js,7,0,7,"@@ -12,10 +12,13 @@ export {default as __SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRA
 import {forEach, map, count, toArray, only} from './ReactChildren';
 import {captureOwnerStack as captureOwnerStackImpl} from './ReactOwnerStack';
 import {
+  REACT_ACTIVITY_TYPE,
   REACT_FRAGMENT_TYPE,
   REACT_PROFILER_TYPE,
   REACT_STRICT_MODE_TYPE,
   REACT_SUSPENSE_TYPE,
+  REACT_SUSPENSE_LIST_TYPE,
+  REACT_VIEW_TRANSITION_TYPE,
 } from 'shared/ReactSymbols';
 import {
   cloneElement,
@@ -45,6 +48,7 @@ if (__DEV__) {
 
 export {
   Children,
+  REACT_ACTIVITY_TYPE as Activity,
   REACT_FRAGMENT_TYPE as Fragment,
   REACT_PROFILER_TYPE as Profiler,
   REACT_STRICT_MODE_TYPE as StrictMode,
@@ -65,4 +69,7 @@ export {
   useMemo,
   version,
   captureOwnerStack, // DEV-only
+  // Experimental
+  REACT_SUSPENSE_LIST_TYPE as unstable_SuspenseList,
+  REACT_VIEW_TRANSITION_TYPE as unstable_ViewTransition,
 };"
facebook/react,6a8a8ef32692cc42b53d072d5ce6a6a84e190482,"Sebastian ""Sebbie"" Silbermann",2025-10-02T21:14:52Z,[Flight] Add `<Activity>` (#34697),packages/react/src/ReactServer.js,2,0,2,"@@ -11,6 +11,7 @@ export {default as __SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRA
 
 import {forEach, map, count, toArray, only} from './ReactChildren';
 import {
+  REACT_ACTIVITY_TYPE,
   REACT_FRAGMENT_TYPE,
   REACT_PROFILER_TYPE,
   REACT_STRICT_MODE_TYPE,
@@ -40,6 +41,7 @@ const Children = {
 
 export {
   Children,
+  REACT_ACTIVITY_TYPE as Activity,
   REACT_FRAGMENT_TYPE as Fragment,
   REACT_PROFILER_TYPE as Profiler,
   REACT_STRICT_MODE_TYPE as StrictMode,"
facebook/react,f89ed71ddf5f8cab28b202cfdc04927c683ad3cc,Sebastian Markbåge,2025-10-02T21:06:52Z,"[DevTools] Track whether to auto select when new timeline entries come on (#34698)

This auto updates to select the last entry in the timeline until we make
the first selection. That way when new content loads in, we show the
last timeline of what is visible.",packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseTreeContext.js,12,1,13,"@@ -30,6 +30,7 @@ export type SuspenseTreeState = {
   hoveredTimelineIndex: number | -1,
   uniqueSuspendersOnly: boolean,
   playing: boolean,
+  autoSelect: boolean,
 };
 
 type ACTION_SUSPENSE_TREE_MUTATION = {
@@ -123,6 +124,7 @@ function getInitialState(store: Store): SuspenseTreeState {
     hoveredTimelineIndex: -1,
     uniqueSuspendersOnly,
     playing: false,
+    autoSelect: true,
   };
 
   return initialState;
@@ -181,7 +183,10 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               selectedTimelineID === null || nextTimeline.length === 0
                 ? -1
                 : nextTimeline.indexOf(selectedTimelineID);
-            if (nextTimeline.length > 0 && nextTimelineIndex === -1) {
+            if (
+              nextTimeline.length > 0 &&
+              (nextTimelineIndex === -1 || state.autoSelect)
+            ) {
               nextTimelineIndex = nextTimeline.length - 1;
               selectedSuspenseID = nextTimeline[nextTimelineIndex];
             }
@@ -212,6 +217,7 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               ...state,
               selectedSuspenseID,
               playing: false, // pause
+              autoSelect: false,
             };
           }
           case 'SET_SUSPENSE_LINEAGE': {
@@ -223,6 +229,7 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               lineage,
               selectedSuspenseID: suspenseID,
               playing: false, // pause
+              autoSelect: false,
             };
           }
           case 'SET_SUSPENSE_TIMELINE': {
@@ -277,6 +284,7 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               selectedSuspenseID: nextSelectedSuspenseID,
               timelineIndex: nextTimelineIndex,
               playing: false, // pause
+              autoSelect: false,
             };
           }
           case 'SUSPENSE_SKIP_TIMELINE_INDEX': {
@@ -299,6 +307,7 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               selectedSuspenseID: nextSelectedSuspenseID,
               timelineIndex: nextTimelineIndex,
               playing: false, // pause
+              autoSelect: false,
             };
           }
           case 'SUSPENSE_PLAY_PAUSE': {
@@ -325,6 +334,7 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               selectedSuspenseID: nextSelectedSuspenseID,
               timelineIndex: nextTimelineIndex,
               playing: mode === 'toggle' ? !state.playing : mode === 'play',
+              autoSelect: false,
             };
           }
           case 'SUSPENSE_PLAY_TICK': {
@@ -381,6 +391,7 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               selectedSuspenseID: nextSelectedSuspenseID,
               timelineIndex: nextTimelineIndex,
               playing: false, // pause
+              autoSelect: false,
             };
           }
           case 'HOVER_TIMELINE_FOR_ID': {"
facebook/react,7d9f876cbc7e9363092e60436704cf8ae435b969,Josh Story,2025-10-02T20:21:57Z,"[Fizz] Detatch boundary after flushing segment with boundary (#34694)

When we flush a Suspense boundary we might not flush the fallback
segment, it might only flush a placeholder instead. In this case the
segment can flush again but we do not want to flush the boundary itself
a second time. We now detach the boundary after flushing it.

better solution to: https://github.com/facebook/react/pull/34668",packages/react-dom/src/__tests__/ReactDOMFizzServer-test.js,52,0,52,"@@ -10832,4 +10832,56 @@ Unfortunately that previous paragraph wasn't quite long enough so I'll continue
       </html>,
     );
   });
+
+  it('not error when a suspended fallback segment directly inside another Suspense is abandoned', async () => {
+    function SuspendForever() {
+      React.use(new Promise(() => {}));
+    }
+
+    let resolve = () => {};
+    const suspendPromise = new Promise(r => {
+      resolve = r;
+    });
+    function Suspend() {
+      return React.use(suspendPromise);
+    }
+
+    function App() {
+      return (
+        <html>
+          <body>
+            <Suspense fallback=""outer"">
+              <Suspense fallback={<SuspendForever />}>
+                <span>hello world</span>
+                <span>
+                  <Suspend />
+                </span>
+              </Suspense>
+            </Suspense>
+          </body>
+        </html>
+      );
+    }
+
+    await act(async () => {
+      const {pipe} = renderToPipeableStream(<App />, {
+        onError() {},
+      });
+      pipe(writable);
+    });
+
+    await act(() => {
+      resolve('!');
+    });
+
+    expect(getVisibleChildren(document)).toEqual(
+      <html>
+        <head />
+        <body>
+          <span>hello world</span>
+          <span>!</span>
+        </body>
+      </html>,
+    );
+  });
 });"
facebook/react,7d9f876cbc7e9363092e60436704cf8ae435b969,Josh Story,2025-10-02T20:21:57Z,"[Fizz] Detatch boundary after flushing segment with boundary (#34694)

When we flush a Suspense boundary we might not flush the fallback
segment, it might only flush a placeholder instead. In this case the
segment can flush again but we do not want to flush the boundary itself
a second time. We now detach the boundary after flushing it.

better solution to: https://github.com/facebook/react/pull/34668",packages/react-server/src/ReactFizzServer.js,6,2,8,"@@ -342,7 +342,7 @@ type Segment = {
   // The context that this segment was created in.
   parentFormatContext: FormatContext,
   // If this segment represents a fallback, this is the content that will replace that fallback.
-  +boundary: null | SuspenseBoundary,
+  boundary: null | SuspenseBoundary,
   // used to discern when text separator boundaries are needed
   lastPushedText: boolean,
   textEmbedded: boolean,
@@ -5681,6 +5681,10 @@ function flushSegment(
     return flushSubtree(request, destination, segment, hoistableState);
   }
 
+  // We're going to write the boundary. We don't need to maintain this reference since
+  // we might reflush this segment at a later time (if it aborts and we inlined) but
+  // we don't want to reflush the boundary
+  segment.boundary = null;
   boundary.parentFlushed = true;
   // This segment is a Suspense boundary. We need to decide whether to
   // emit the content or the fallback now.
@@ -5952,7 +5956,7 @@ function flushPartiallyCompletedSegment(
   segment: Segment,
 ): boolean {
   if (segment.status === FLUSHED) {
-    // We've already flushed this inline.
+    // We've already flushed this inline
     return true;
   }
 "
facebook/react,df3562dc7f4ac7a5e60e76e8fec285890ef60639,"Sebastian ""Sebbie"" Silbermann",2025-10-02T19:52:50Z,Fix DevTools regression tests (#34696),packages/react-devtools-shared/src/__tests__/preprocessData-test.js,2,0,2,"@@ -850,6 +850,7 @@ describe('Timeline profiler', () => {
         `);
       });
 
+      // @reactVersion >= 19.1
       // @reactVersion < 19.2
       it('should process a sample createRoot render sequence', async () => {
         function App() {
@@ -2158,6 +2159,7 @@ describe('Timeline profiler', () => {
       `);
     });
 
+    // @reactVersion >= 19.1
     // @reactVersion < 19.2
     it('should process a sample createRoot render sequence', async () => {
       function App() {"
facebook/react,b56907db515ea518b7c30015d2c5d5641df35942,Sebastian Markbåge,2025-10-02T19:29:38Z,"[DevTools] Show Props as Read-only for Suspense/Activity but below (#34695)

Somehow my last commit didn't make it in #34630.",packages/react-devtools-shared/src/devtools/views/Components/InspectedElementPropsTree.js,7,11,18,"@@ -20,6 +20,7 @@ import styles from './InspectedElementSharedStyles.css';
 import {
   ElementTypeClass,
   ElementTypeSuspense,
+  ElementTypeActivity,
 } from 'react-devtools-shared/src/frontend/types';
 import {withPermissionsCheck} from 'react-devtools-shared/src/frontend/utils/withPermissionsCheck';
 
@@ -50,20 +51,15 @@ export default function InspectedElementPropsTree({
     type,
   } = inspectedElement;
 
-  if (type === ElementTypeSuspense) {
-    // Skip showing the props for Suspense. We want to give more real estate to the
-    // ""Suspended by"" for Suspense boundaries. We could maybe show it further below
-    // but in practice, the props of Suspense boundaries are not very useful to
-    // inspect because the name shows in the tree already. The children in the tree
-    // will be either the ""fallback"" or ""children"" prop which you can already inspect
-    // but resuspending the tree.
-    return null;
-  }
-
   const canDeletePaths =
     type === ElementTypeClass || canEditFunctionPropsDeletePaths;
   const canEditValues =
-    !readOnly && (type === ElementTypeClass || canEditFunctionProps);
+    !readOnly &&
+    (type === ElementTypeClass || canEditFunctionProps) &&
+    // Make it read-only for Suspense to make it a bit cleaner. It's not
+    // useful to edit children anyway.
+    type !== ElementTypeSuspense &&
+    type !== ElementTypeActivity;
   const canRenamePaths =
     type === ElementTypeClass || canEditFunctionPropsRenamePaths;
 "
facebook/react,b56907db515ea518b7c30015d2c5d5641df35942,Sebastian Markbåge,2025-10-02T19:29:38Z,"[DevTools] Show Props as Read-only for Suspense/Activity but below (#34695)

Somehow my last commit didn't make it in #34630.",packages/react-devtools-shared/src/devtools/views/Components/InspectedElementView.js,29,8,37,"@@ -24,6 +24,10 @@ import InspectedElementSourcePanel from './InspectedElementSourcePanel';
 import StackTraceView from './StackTraceView';
 import OwnerView from './OwnerView';
 import Skeleton from './Skeleton';
+import {
+  ElementTypeSuspense,
+  ElementTypeActivity,
+} from 'react-devtools-shared/src/frontend/types';
 
 import styles from './InspectedElementView.css';
 
@@ -60,6 +64,7 @@ export default function InspectedElementView({
     rootType,
     source,
     nativeTag,
+    type,
   } = inspectedElement;
 
   const bridge = useContext(BridgeContext);
@@ -74,6 +79,17 @@ export default function InspectedElementView({
   const showRenderedBy =
     showStack || showOwnersList || rendererLabel !== null || rootType !== null;
 
+  const propsSection = (
+    <div className={styles.InspectedElementSection}>
+      <InspectedElementPropsTree
+        bridge={bridge}
+        element={element}
+        inspectedElement={inspectedElement}
+        store={store}
+      />
+    </div>
+  );
+
   return (
     <Fragment>
       <div className={styles.InspectedElement}>
@@ -85,14 +101,12 @@ export default function InspectedElementView({
           />
         </div>
 
-        <div className={styles.InspectedElementSection}>
-          <InspectedElementPropsTree
-            bridge={bridge}
-            element={element}
-            inspectedElement={inspectedElement}
-            store={store}
-          />
-        </div>
+        {
+          // For Suspense and Activity we show the props further down.
+          type !== ElementTypeSuspense && type !== ElementTypeActivity
+            ? propsSection
+            : null
+        }
 
         <div className={styles.InspectedElementSection}>
           <InspectedElementStateTree
@@ -157,6 +171,13 @@ export default function InspectedElementView({
           />
         </div>
 
+        {
+          // For Suspense and Activity we show the props below suspended by to give that more priority.
+          type !== ElementTypeSuspense && type !== ElementTypeActivity
+            ? null
+            : propsSection
+        }
+
         {showRenderedBy && (
           <div
             className={styles.InspectedElementSection}"
facebook/react,c825f030679c41b55faf448648cee4e41dff3787,Sebastian Markbåge,2025-10-02T19:18:41Z,"[DevTools] Hide State and Props in the Sidebar for Suspense (#34630)

We're showing too much noise in the side-panel when selecting a Suspense
boundary. The interesting thing to see directly is the ""Suspended by"".

The ""props"" are mostly useless because the `""name""` prop is already in
the tree. I'm now also showing it in the title bar of the selected
element panel. The ""children"" and ""fallback"" props are just the thing
that you can see in the tree view anyway.

The ""state"" is this weird section with just one field in it, which we
already have duplicated in the top toolbar as well. We can just delete
this. I make sure to show the icon and a ""suspended..."" section while
the boundary is still loading but now yet resuspended by force
suspending.

While still loading:

<img width=""600"" height=""193"" alt=""Screenshot 2025-09-27 at 11 54 37 PM""
src=""https://github.com/user-attachments/assets/1c3f3a96-46e0-4b11-806f-032569c7d5b5""
/>

After loading:

<img width=""602"" height=""266"" alt=""Screenshot 2025-09-27 at 11 54 53 PM""
src=""https://github.com/user-attachments/assets/c43cc4cb-036f-4ced-9b0d-226c6320cd76""
/>

Resuspended after loading:

<img width=""602"" height=""300"" alt=""Screenshot 2025-09-27 at 11 55 07 PM""
src=""https://github.com/user-attachments/assets/0be01735-48a7-47dc-b5cf-e72ec71e0148""
/>",packages/react-devtools-shared/src/backend/fiber/renderer.js,2,5,7,"@@ -6596,9 +6596,6 @@ export function attach(
       rootType = fiberRoot._debugRootType;
     }
 
-    const isTimedOutSuspense =
-      tag === SuspenseComponent && memoizedState !== null;
-
     let isErrored = false;
     if (isErrorBoundary(fiber)) {
       // if the current inspected element is an error boundary,
@@ -6670,7 +6667,7 @@ export function attach(
     if (
       fiberInstance.suspenseNode !== null &&
       fiberInstance.suspenseNode.hasUnknownSuspenders &&
-      !isTimedOutSuspense
+      !isSuspended
     ) {
       // Something unknown threw to suspended this boundary. Let's figure out why that might be.
       if (renderer.bundleType === 0) {
@@ -6708,7 +6705,7 @@ export function attach(
         supportsTogglingSuspense &&
         hasSuspenseBoundary &&
         // If it's showing the real content, we can always flip fallback.
-        (!isTimedOutSuspense ||
+        (!isSuspended ||
           // If it's showing fallback because we previously forced it to,
           // allow toggling it back to remove the fallback override.
           forceFallbackForFibers.has(fiber) ||"
facebook/react,c825f030679c41b55faf448648cee4e41dff3787,Sebastian Markbåge,2025-10-02T19:18:41Z,"[DevTools] Hide State and Props in the Sidebar for Suspense (#34630)

We're showing too much noise in the side-panel when selecting a Suspense
boundary. The interesting thing to see directly is the ""Suspended by"".

The ""props"" are mostly useless because the `""name""` prop is already in
the tree. I'm now also showing it in the title bar of the selected
element panel. The ""children"" and ""fallback"" props are just the thing
that you can see in the tree view anyway.

The ""state"" is this weird section with just one field in it, which we
already have duplicated in the top toolbar as well. We can just delete
this. I make sure to show the icon and a ""suspended..."" section while
the boundary is still loading but now yet resuspended by force
suspending.

While still loading:

<img width=""600"" height=""193"" alt=""Screenshot 2025-09-27 at 11 54 37 PM""
src=""https://github.com/user-attachments/assets/1c3f3a96-46e0-4b11-806f-032569c7d5b5""
/>

After loading:

<img width=""602"" height=""266"" alt=""Screenshot 2025-09-27 at 11 54 53 PM""
src=""https://github.com/user-attachments/assets/c43cc4cb-036f-4ced-9b0d-226c6320cd76""
/>

Resuspended after loading:

<img width=""602"" height=""300"" alt=""Screenshot 2025-09-27 at 11 55 07 PM""
src=""https://github.com/user-attachments/assets/0be01735-48a7-47dc-b5cf-e72ec71e0148""
/>",packages/react-devtools-shared/src/devtools/views/Components/InspectedElement.js,6,3,9,"@@ -269,18 +269,21 @@ export default function InspectedElementWrapper(_: Props): React.Node {
             <ButtonIcon type=""error"" />
           </Toggle>
         )}
-        {canToggleSuspense && (
+        {canToggleSuspense || isSuspended ? (
           <Toggle
             isChecked={isSuspended}
+            isDisabled={!canToggleSuspense}
             onChange={toggleSuspended}
             title={
               isSuspended
-                ? 'Unsuspend the selected component'
+                ? canToggleSuspense
+                  ? 'Unsuspend the selected component'
+                  : 'This boundary is still suspended'
                 : 'Suspend the selected component'
             }>
             <ButtonIcon type=""suspend"" />
           </Toggle>
-        )}
+        ) : null}
         {store.supportsInspectMatchingDOMElement && (
           <Button
             onClick={highlightElement}"
facebook/react,c825f030679c41b55faf448648cee4e41dff3787,Sebastian Markbåge,2025-10-02T19:18:41Z,"[DevTools] Hide State and Props in the Sidebar for Suspense (#34630)

We're showing too much noise in the side-panel when selecting a Suspense
boundary. The interesting thing to see directly is the ""Suspended by"".

The ""props"" are mostly useless because the `""name""` prop is already in
the tree. I'm now also showing it in the title bar of the selected
element panel. The ""children"" and ""fallback"" props are just the thing
that you can see in the tree view anyway.

The ""state"" is this weird section with just one field in it, which we
already have duplicated in the top toolbar as well. We can just delete
this. I make sure to show the icon and a ""suspended..."" section while
the boundary is still loading but now yet resuspended by force
suspending.

While still loading:

<img width=""600"" height=""193"" alt=""Screenshot 2025-09-27 at 11 54 37 PM""
src=""https://github.com/user-attachments/assets/1c3f3a96-46e0-4b11-806f-032569c7d5b5""
/>

After loading:

<img width=""602"" height=""266"" alt=""Screenshot 2025-09-27 at 11 54 53 PM""
src=""https://github.com/user-attachments/assets/c43cc4cb-036f-4ced-9b0d-226c6320cd76""
/>

Resuspended after loading:

<img width=""602"" height=""300"" alt=""Screenshot 2025-09-27 at 11 55 07 PM""
src=""https://github.com/user-attachments/assets/0be01735-48a7-47dc-b5cf-e72ec71e0148""
/>",packages/react-devtools-shared/src/devtools/views/Components/InspectedElementPropsTree.js,14,1,15,"@@ -17,7 +17,10 @@ import NewKeyValue from './NewKeyValue';
 import {alphaSortEntries, serializeDataForCopy} from '../utils';
 import Store from '../../store';
 import styles from './InspectedElementSharedStyles.css';
-import {ElementTypeClass} from 'react-devtools-shared/src/frontend/types';
+import {
+  ElementTypeClass,
+  ElementTypeSuspense,
+} from 'react-devtools-shared/src/frontend/types';
 import {withPermissionsCheck} from 'react-devtools-shared/src/frontend/utils/withPermissionsCheck';
 
 import type {InspectedElement} from 'react-devtools-shared/src/frontend/types';
@@ -47,6 +50,16 @@ export default function InspectedElementPropsTree({
     type,
   } = inspectedElement;
 
+  if (type === ElementTypeSuspense) {
+    // Skip showing the props for Suspense. We want to give more real estate to the
+    // ""Suspended by"" for Suspense boundaries. We could maybe show it further below
+    // but in practice, the props of Suspense boundaries are not very useful to
+    // inspect because the name shows in the tree already. The children in the tree
+    // will be either the ""fallback"" or ""children"" prop which you can already inspect
+    // but resuspending the tree.
+    return null;
+  }
+
   const canDeletePaths =
     type === ElementTypeClass || canEditFunctionPropsDeletePaths;
   const canEditValues ="
facebook/react,c825f030679c41b55faf448648cee4e41dff3787,Sebastian Markbåge,2025-10-02T19:18:41Z,"[DevTools] Hide State and Props in the Sidebar for Suspense (#34630)

We're showing too much noise in the side-panel when selecting a Suspense
boundary. The interesting thing to see directly is the ""Suspended by"".

The ""props"" are mostly useless because the `""name""` prop is already in
the tree. I'm now also showing it in the title bar of the selected
element panel. The ""children"" and ""fallback"" props are just the thing
that you can see in the tree view anyway.

The ""state"" is this weird section with just one field in it, which we
already have duplicated in the top toolbar as well. We can just delete
this. I make sure to show the icon and a ""suspended..."" section while
the boundary is still loading but now yet resuspended by force
suspending.

While still loading:

<img width=""600"" height=""193"" alt=""Screenshot 2025-09-27 at 11 54 37 PM""
src=""https://github.com/user-attachments/assets/1c3f3a96-46e0-4b11-806f-032569c7d5b5""
/>

After loading:

<img width=""602"" height=""266"" alt=""Screenshot 2025-09-27 at 11 54 53 PM""
src=""https://github.com/user-attachments/assets/c43cc4cb-036f-4ced-9b0d-226c6320cd76""
/>

Resuspended after loading:

<img width=""602"" height=""300"" alt=""Screenshot 2025-09-27 at 11 55 07 PM""
src=""https://github.com/user-attachments/assets/0be01735-48a7-47dc-b5cf-e72ec71e0148""
/>",packages/react-devtools-shared/src/devtools/views/Components/InspectedElementSuspendedBy.js,11,0,11,"@@ -322,6 +322,17 @@ export default function InspectedElementSuspendedBy({
     (suspendedBy == null || suspendedBy.length === 0) &&
     inspectedElement.unknownSuspenders === UNKNOWN_SUSPENDERS_NONE
   ) {
+    if (inspectedElement.isSuspended) {
+      // If we're still suspended, show a place holder until the data loads.
+      // We don't know what we're suspended by until it has loaded.
+      return (
+        <div>
+          <div className={styles.HeaderRow}>
+            <div className={styles.Header}>suspended...</div>
+          </div>
+        </div>
+      );
+    }
     return null;
   }
 "
facebook/react,c825f030679c41b55faf448648cee4e41dff3787,Sebastian Markbåge,2025-10-02T19:18:41Z,"[DevTools] Hide State and Props in the Sidebar for Suspense (#34630)

We're showing too much noise in the side-panel when selecting a Suspense
boundary. The interesting thing to see directly is the ""Suspended by"".

The ""props"" are mostly useless because the `""name""` prop is already in
the tree. I'm now also showing it in the title bar of the selected
element panel. The ""children"" and ""fallback"" props are just the thing
that you can see in the tree view anyway.

The ""state"" is this weird section with just one field in it, which we
already have duplicated in the top toolbar as well. We can just delete
this. I make sure to show the icon and a ""suspended..."" section while
the boundary is still loading but now yet resuspended by force
suspending.

While still loading:

<img width=""600"" height=""193"" alt=""Screenshot 2025-09-27 at 11 54 37 PM""
src=""https://github.com/user-attachments/assets/1c3f3a96-46e0-4b11-806f-032569c7d5b5""
/>

After loading:

<img width=""602"" height=""266"" alt=""Screenshot 2025-09-27 at 11 54 53 PM""
src=""https://github.com/user-attachments/assets/c43cc4cb-036f-4ced-9b0d-226c6320cd76""
/>

Resuspended after loading:

<img width=""602"" height=""300"" alt=""Screenshot 2025-09-27 at 11 55 07 PM""
src=""https://github.com/user-attachments/assets/0be01735-48a7-47dc-b5cf-e72ec71e0148""
/>",packages/react-devtools-shared/src/devtools/views/Components/InspectedElementSuspenseToggle.js,0,72,72,"@@ -1,72 +0,0 @@
-/**
- * Copyright (c) Meta Platforms, Inc. and affiliates.
- *
- * This source code is licensed under the MIT license found in the
- * LICENSE file in the root directory of this source tree.
- *
- * @flow
- */
-
-import * as React from 'react';
-import {OptionsContext} from '../context';
-import EditableValue from './EditableValue';
-import Store from '../../store';
-import {ElementTypeSuspense} from 'react-devtools-shared/src/frontend/types';
-import styles from './InspectedElementSharedStyles.css';
-
-import type {InspectedElement} from 'react-devtools-shared/src/frontend/types';
-import type {FrontendBridge} from 'react-devtools-shared/src/bridge';
-
-type Props = {
-  bridge: FrontendBridge,
-  inspectedElement: InspectedElement,
-  store: Store,
-};
-
-export default function InspectedElementSuspenseToggle({
-  bridge,
-  inspectedElement,
-  store,
-}: Props): React.Node {
-  const {readOnly} = React.useContext(OptionsContext);
-
-  const {id, isSuspended, type} = inspectedElement;
-  const canToggleSuspense = !readOnly && inspectedElement.canToggleSuspense;
-
-  if (type !== ElementTypeSuspense) {
-    return null;
-  }
-
-  const toggleSuspense = (path: any, value: boolean) => {
-    const rendererID = store.getRendererIDForElement(id);
-    if (rendererID !== null) {
-      bridge.send('overrideSuspense', {
-        id,
-        rendererID,
-        forceFallback: value,
-      });
-    }
-  };
-
-  return (
-    <div>
-      <div className={styles.HeaderRow}>
-        <div className={styles.Header}>suspense</div>
-      </div>
-      <div className={styles.ToggleSuspenseRow}>
-        <span className={styles.Name}>Suspended</span>
-        {canToggleSuspense ? (
-          // key is required to keep <EditableValue> and header row toggle button in sync
-          <EditableValue
-            key={isSuspended}
-            overrideValue={toggleSuspense}
-            path={['suspense', 'Suspended']}
-            value={isSuspended}
-          />
-        ) : (
-          <span className={styles.Value}>{isSuspended ? 'true' : 'false'}</span>
-        )}
-      </div>
-    </div>
-  );
-}"
facebook/react,c825f030679c41b55faf448648cee4e41dff3787,Sebastian Markbåge,2025-10-02T19:18:41Z,"[DevTools] Hide State and Props in the Sidebar for Suspense (#34630)

We're showing too much noise in the side-panel when selecting a Suspense
boundary. The interesting thing to see directly is the ""Suspended by"".

The ""props"" are mostly useless because the `""name""` prop is already in
the tree. I'm now also showing it in the title bar of the selected
element panel. The ""children"" and ""fallback"" props are just the thing
that you can see in the tree view anyway.

The ""state"" is this weird section with just one field in it, which we
already have duplicated in the top toolbar as well. We can just delete
this. I make sure to show the icon and a ""suspended..."" section while
the boundary is still loading but now yet resuspended by force
suspending.

While still loading:

<img width=""600"" height=""193"" alt=""Screenshot 2025-09-27 at 11 54 37 PM""
src=""https://github.com/user-attachments/assets/1c3f3a96-46e0-4b11-806f-032569c7d5b5""
/>

After loading:

<img width=""602"" height=""266"" alt=""Screenshot 2025-09-27 at 11 54 53 PM""
src=""https://github.com/user-attachments/assets/c43cc4cb-036f-4ced-9b0d-226c6320cd76""
/>

Resuspended after loading:

<img width=""602"" height=""300"" alt=""Screenshot 2025-09-27 at 11 55 07 PM""
src=""https://github.com/user-attachments/assets/0be01735-48a7-47dc-b5cf-e72ec71e0148""
/>",packages/react-devtools-shared/src/devtools/views/Components/InspectedElementView.js,0,9,9,"@@ -17,7 +17,6 @@ import InspectedElementHooksTree from './InspectedElementHooksTree';
 import InspectedElementPropsTree from './InspectedElementPropsTree';
 import InspectedElementStateTree from './InspectedElementStateTree';
 import InspectedElementStyleXPlugin from './InspectedElementStyleXPlugin';
-import InspectedElementSuspenseToggle from './InspectedElementSuspenseToggle';
 import InspectedElementSuspendedBy from './InspectedElementSuspendedBy';
 import NativeStyleEditor from './NativeStyleEditor';
 import {enableStyleXFeatures} from 'react-devtools-feature-flags';
@@ -95,14 +94,6 @@ export default function InspectedElementView({
           />
         </div>
 
-        <div className={styles.InspectedElementSection}>
-          <InspectedElementSuspenseToggle
-            bridge={bridge}
-            inspectedElement={inspectedElement}
-            store={store}
-          />
-        </div>
-
         <div className={styles.InspectedElementSection}>
           <InspectedElementStateTree
             bridge={bridge}"
facebook/react,2e68dc76a41165d16b35d6eb2e7bf13aafed9aef,Sebastian Markbåge,2025-10-02T18:37:03Z,"[DevTools] Give a distinct color to the root (#34690)

Stacked on #34654.

The root is special since it represents ""Initial Paint"" (or a
""Transition"" when an Activity is selected). This gives it a different
color in the timeline as well as gives it an outline that's clickable.
Hovering the timeline now shows ""Initial Paint"" or ""Suspense"".

Also made the cursor a pointer to invite you to try to click things and
some rounded corners.

<img width=""1219"" height=""420"" alt=""Screenshot 2025-10-02 at 1 26 38 PM""
src=""https://github.com/user-attachments/assets/12451f93-8917-4f3b-8f01-930129e5fc13""
/>

<img width=""1217"" height=""419"" alt=""Screenshot 2025-10-02 at 1 26 54 PM""
src=""https://github.com/user-attachments/assets/02b5e94c-3fbe-488d-b0f2-225b73578608""
/>

<img width=""1215"" height=""419"" alt=""Screenshot 2025-10-02 at 1 27 24 PM""
src=""https://github.com/user-attachments/assets/c24e8861-e74a-4ccc-8643-ee9d04bef43c""
/>

<img width=""1216"" height=""419"" alt=""Screenshot 2025-10-02 at 1 27 10 PM""
src=""https://github.com/user-attachments/assets/d5cc2b62-fa64-41bf-b485-116b1cd67467""
/>",packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseRects.css,10,1,11,"@@ -1,5 +1,12 @@
 .SuspenseRectsContainer {
   padding: .25rem;
+  cursor: pointer;
+  outline: 1px solid var(--color-component-name);
+  border-radius: 0.25rem;
+}
+
+.SuspenseRectsContainer[data-highlighted='true'] {
+  background: var(--color-dimmest);
 }
 
 .SuspenseRectsViewBox {
@@ -28,6 +35,8 @@
   pointer-events: all;
   outline-style: solid;
   outline-width: 1px;
+  border-radius: 0.125rem;
+  cursor: pointer;
 }
 
 .SuspenseRectsScaledRect {
@@ -42,7 +51,7 @@
 
 /* highlight this boundary */
 .SuspenseRectsBoundary:hover:not(:has(.SuspenseRectsBoundary:hover)) > .SuspenseRectsRect, .SuspenseRectsBoundary[data-highlighted='true'] > .SuspenseRectsRect {
-    background-color: var(--color-background-hover);
+  background-color: var(--color-background-hover);
 }
 
 .SuspenseRectsRect[data-highlighted='true'] {"
facebook/react,2e68dc76a41165d16b35d6eb2e7bf13aafed9aef,Sebastian Markbåge,2025-10-02T18:37:03Z,"[DevTools] Give a distinct color to the root (#34690)

Stacked on #34654.

The root is special since it represents ""Initial Paint"" (or a
""Transition"" when an Activity is selected). This gives it a different
color in the timeline as well as gives it an outline that's clickable.
Hovering the timeline now shows ""Initial Paint"" or ""Suspense"".

Also made the cursor a pointer to invite you to try to click things and
some rounded corners.

<img width=""1219"" height=""420"" alt=""Screenshot 2025-10-02 at 1 26 38 PM""
src=""https://github.com/user-attachments/assets/12451f93-8917-4f3b-8f01-930129e5fc13""
/>

<img width=""1217"" height=""419"" alt=""Screenshot 2025-10-02 at 1 26 54 PM""
src=""https://github.com/user-attachments/assets/02b5e94c-3fbe-488d-b0f2-225b73578608""
/>

<img width=""1215"" height=""419"" alt=""Screenshot 2025-10-02 at 1 27 24 PM""
src=""https://github.com/user-attachments/assets/c24e8861-e74a-4ccc-8643-ee9d04bef43c""
/>

<img width=""1216"" height=""419"" alt=""Screenshot 2025-10-02 at 1 27 10 PM""
src=""https://github.com/user-attachments/assets/d5cc2b62-fa64-41bf-b485-116b1cd67467""
/>",packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseRects.js,7,1,8,"@@ -295,6 +295,7 @@ const ViewBox = createContext<Rect>((null: any));
 
 function SuspenseRectsContainer(): React$Node {
   const store = useContext(StoreContext);
+  const {inspectedElementID} = useContext(TreeStateContext);
   const treeDispatch = useContext(TreeDispatcherContext);
   const suspenseTreeDispatch = useContext(SuspenseTreeDispatcherContext);
   // TODO: This relies on a full re-render of all children when the Suspense tree changes.
@@ -329,8 +330,13 @@ function SuspenseRectsContainer(): React$Node {
     });
   }
 
+  const isRootSelected = roots.includes(inspectedElementID);
+
   return (
-    <div className={styles.SuspenseRectsContainer} onClick={handleClick}>
+    <div
+      className={styles.SuspenseRectsContainer}
+      onClick={handleClick}
+      data-highlighted={isRootSelected}>
       <ViewBox.Provider value={boundingBox}>
         <div
           className={styles.SuspenseRectsViewBox}"
facebook/react,2e68dc76a41165d16b35d6eb2e7bf13aafed9aef,Sebastian Markbåge,2025-10-02T18:37:03Z,"[DevTools] Give a distinct color to the root (#34690)

Stacked on #34654.

The root is special since it represents ""Initial Paint"" (or a
""Transition"" when an Activity is selected). This gives it a different
color in the timeline as well as gives it an outline that's clickable.
Hovering the timeline now shows ""Initial Paint"" or ""Suspense"".

Also made the cursor a pointer to invite you to try to click things and
some rounded corners.

<img width=""1219"" height=""420"" alt=""Screenshot 2025-10-02 at 1 26 38 PM""
src=""https://github.com/user-attachments/assets/12451f93-8917-4f3b-8f01-930129e5fc13""
/>

<img width=""1217"" height=""419"" alt=""Screenshot 2025-10-02 at 1 26 54 PM""
src=""https://github.com/user-attachments/assets/02b5e94c-3fbe-488d-b0f2-225b73578608""
/>

<img width=""1215"" height=""419"" alt=""Screenshot 2025-10-02 at 1 27 24 PM""
src=""https://github.com/user-attachments/assets/c24e8861-e74a-4ccc-8643-ee9d04bef43c""
/>

<img width=""1216"" height=""419"" alt=""Screenshot 2025-10-02 at 1 27 10 PM""
src=""https://github.com/user-attachments/assets/d5cc2b62-fa64-41bf-b485-116b1cd67467""
/>",packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseScrubber.css,6,4,10,"@@ -37,7 +37,7 @@
   padding-right: 0;
 }
 
-.SuspenseScrubberBead, .SuspenseScrubberBeadSelected {
+.SuspenseScrubberBead {
   flex: 1;
   height: 0.5rem;
   background: var(--color-background-selected);
@@ -51,9 +51,11 @@
   background: var(--color-background-selected);
 }
 
+.SuspenseScrubberBeadTransition {
+  background: var(--color-component-name);
+}
+
 .SuspenseScrubberStepHighlight > .SuspenseScrubberBead,
-.SuspenseScrubberStepHighlight > .SuspenseScrubberBeadSelected,
-.SuspenseScrubberStep:hover > .SuspenseScrubberBead,
-.SuspenseScrubberStep:hover > .SuspenseScrubberBeadSelected {
+.SuspenseScrubberStep:hover > .SuspenseScrubberBead {
   height: 0.75rem;
 }"
facebook/react,2e68dc76a41165d16b35d6eb2e7bf13aafed9aef,Sebastian Markbåge,2025-10-02T18:37:03Z,"[DevTools] Give a distinct color to the root (#34690)

Stacked on #34654.

The root is special since it represents ""Initial Paint"" (or a
""Transition"" when an Activity is selected). This gives it a different
color in the timeline as well as gives it an outline that's clickable.
Hovering the timeline now shows ""Initial Paint"" or ""Suspense"".

Also made the cursor a pointer to invite you to try to click things and
some rounded corners.

<img width=""1219"" height=""420"" alt=""Screenshot 2025-10-02 at 1 26 38 PM""
src=""https://github.com/user-attachments/assets/12451f93-8917-4f3b-8f01-930129e5fc13""
/>

<img width=""1217"" height=""419"" alt=""Screenshot 2025-10-02 at 1 26 54 PM""
src=""https://github.com/user-attachments/assets/02b5e94c-3fbe-488d-b0f2-225b73578608""
/>

<img width=""1215"" height=""419"" alt=""Screenshot 2025-10-02 at 1 27 24 PM""
src=""https://github.com/user-attachments/assets/c24e8861-e74a-4ccc-8643-ee9d04bef43c""
/>

<img width=""1216"" height=""419"" alt=""Screenshot 2025-10-02 at 1 27 10 PM""
src=""https://github.com/user-attachments/assets/d5cc2b62-fa64-41bf-b485-116b1cd67467""
/>",packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseScrubber.js,30,14,44,"@@ -14,6 +14,8 @@ import {useRef} from 'react';
 
 import styles from './SuspenseScrubber.css';
 
+import Tooltip from '../Components/reach-ui/tooltip';
+
 export default function SuspenseScrubber({
   min,
   max,
@@ -53,24 +55,38 @@ export default function SuspenseScrubber({
   const steps = [];
   for (let index = min; index <= max; index++) {
     steps.push(
-      <div
+      <Tooltip
         key={index}
-        className={
-          styles.SuspenseScrubberStep +
-          (highlight === index
-            ? ' ' + styles.SuspenseScrubberStepHighlight
-            : '')
-        }
-        onPointerDown={handlePress.bind(null, index)}
-        onMouseEnter={onHoverSegment.bind(null, index)}>
+        label={
+          index === min
+            ? // The first step in the timeline is always a Transition (Initial Paint).
+              // TODO: Support multiple environments.
+              'Initial Paint'
+            : // TODO: Consider adding the name of this specific boundary if this step has only one.
+              'Suspense'
+        }>
         <div
           className={
-            index <= value
-              ? styles.SuspenseScrubberBeadSelected
-              : styles.SuspenseScrubberBead
+            styles.SuspenseScrubberStep +
+            (highlight === index
+              ? ' ' + styles.SuspenseScrubberStepHighlight
+              : '')
           }
-        />
-      </div>,
+          onPointerDown={handlePress.bind(null, index)}
+          onMouseEnter={onHoverSegment.bind(null, index)}>
+          <div
+            className={
+              styles.SuspenseScrubberBead +
+              (index === min
+                ? // The first step in the timeline is always a Transition (Initial Paint).
+                  // TODO: Support multiple environments.
+                  ' ' + styles.SuspenseScrubberBeadTransition
+                : '') +
+              (index <= value ? ' ' + styles.SuspenseScrubberBeadSelected : '')
+            }
+          />
+        </div>
+      </Tooltip>,
     );
   }
 "
facebook/react,ced705d7566a2f7f2a2f0e904d91fe1d1d97f808,Sebastian Markbåge,2025-10-02T18:20:02Z,"[DevTools] Always include the root in the timeline and select it by default (#34654)

Rebased on #34454.

Always include the root in the timeline even if it has no unique
suspenders, since even if it won't suspend, we have to be able to see
that and step to one step before the next boundary to see the first
boundary that does suspend in its fallback state.

Also, if there's no current selection on initial mount, select the last
entry in the timeline. We usually do this with `selectedSuspenseID` but
that doesn't happen on initial load. So this does it on initial load if
nothing else is selected by then. That way when you reload you get the
initial root selected.

There's a problem here because we should really use one source of truth
and `selectedSuspenseID` doesn't really do anything now. Either it
should be its separate source of truth and you can't show components in
the side-panel or it should be derived from the other state.

If it's derived, once there's a selection, e.g. in the root, then even
if new timelines load it will never change but that's probably a good
thing.",packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseTab.js,16,0,16,"@@ -34,6 +34,10 @@ import {
   SuspenseTreeStateContext,
 } from './SuspenseTreeContext';
 import {StoreContext, OptionsContext} from '../context';
+import {
+  TreeDispatcherContext,
+  TreeStateContext,
+} from '../Components/TreeContext';
 import Button from '../Button';
 import Toggle from '../Toggle';
 import typeof {SyntheticPointerEvent} from 'react-dom-bindings/src/events/SyntheticEvent';
@@ -181,6 +185,18 @@ function SuspenseTab(_: {}) {
     treeListHorizontalFraction,
   } = state;
 
+  const {inspectedElementID} = useContext(TreeStateContext);
+  const {timeline} = useContext(SuspenseTreeStateContext);
+  const treeDispatch = useContext(TreeDispatcherContext);
+  useLayoutEffect(() => {
+    // If the inspected element is still null and we've loaded a timeline, we can set the initial selection.
+    // TODO: This tab should use its own source of truth instead so we only show suspense boundaries.
+    if (inspectedElementID === null && timeline.length > 0) {
+      const milestone = timeline[timeline.length - 1];
+      treeDispatch({type: 'SELECT_ELEMENT_BY_ID', payload: milestone});
+    }
+  }, [timeline, inspectedElementID]);
+
   useLayoutEffect(() => {
     const wrapperElement = wrapperTreeRef.current;
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/HIR/Environment.ts,1,1,2,"@@ -210,7 +210,7 @@ export const EnvironmentConfigSchema = z.object({
    * that if a useEffect or useCallback references a function value, that function value will be
    * considered frozen, and in turn all of its referenced variables will be considered frozen as well.
    */
-  enablePreserveExistingMemoizationGuarantees: z.boolean().default(false),
+  enablePreserveExistingMemoizationGuarantees: z.boolean().default(true),
 
   /**
    * Validates that all useMemo/useCallback values are also memoized by Forget. This mode can be"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/allocating-primitive-as-dep.expect.md,3,1,4,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 // bar(props.b) is an allocating expression that produces a primitive, which means
 // that Forget should memoize it.
 // Correctness:
@@ -16,7 +17,8 @@ function AllocatingPrimitiveAsDep(props) {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime""; // bar(props.b) is an allocating expression that produces a primitive, which means
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
+// bar(props.b) is an allocating expression that produces a primitive, which means
 // that Forget should memoize it.
 // Correctness:
 //   - y depends on either bar(props.b) or bar(props.b) + 1"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/allocating-primitive-as-dep.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 // bar(props.b) is an allocating expression that produces a primitive, which means
 // that Forget should memoize it.
 // Correctness:"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/allow-modify-global-in-callback-jsx.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 
 const someGlobal = {value: 0};
@@ -32,7 +33,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 
 const someGlobal = { value: 0 };"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/allow-modify-global-in-callback-jsx.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 
 const someGlobal = {value: 0};"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/computed-load-primitive-as-dependency.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 function Component(props) {
   let a = foo();
   // freeze `a` so we know the next line cannot mutate it
@@ -17,7 +18,7 @@ function Component(props) {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 function Component(props) {
   const $ = _c(2);
   const a = foo();"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/computed-load-primitive-as-dependency.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 function Component(props) {
   let a = foo();
   // freeze `a` so we know the next line cannot mutate it"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/constant-propagation-template-literal.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {Stringify, identity} from 'shared-runtime';
 
 function foo() {
@@ -64,7 +65,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { Stringify, identity } from ""shared-runtime"";
 
 function foo() {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/constant-propagation-template-literal.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {Stringify, identity} from 'shared-runtime';
 
 function foo() {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/context-variable-as-jsx-element-tag.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {Stringify} from 'shared-runtime';
 
@@ -25,7 +26,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import { Stringify } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/context-variable-as-jsx-element-tag.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {Stringify} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/destructure-direct-reassignment.expect.md,2,0,2,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 function foo(props) {
   let x, y;
   ({x, y} = {x: props.a, y: props.b});
@@ -21,6 +22,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 function foo(props) {
   let x;
   let y;"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/destructure-direct-reassignment.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 function foo(props) {
   let x, y;
   ({x, y} = {x: props.a, y: props.b});"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.invalid-uncalled-function-capturing-mutable-values-memoizes-with-captures-values.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @flow @enableNewMutationAliasingModel
+// @flow @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 /**
  * This hook returns a function that when called with an input object,
  * will return the result of mapping that input with the supplied map"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.invalid-uncalled-function-capturing-mutable-values-memoizes-with-captures-values.js,1,1,2,"@@ -1,4 +1,4 @@
-// @flow @enableNewMutationAliasingModel
+// @flow @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 /**
  * This hook returns a function that when called with an input object,
  * will return the result of mapping that input with the supplied map"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.repro-preserve-memoization-inner-destructured-value-mistaken-as-dependency-later-mutation.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 
 /**
  * Repro from https://github.com/facebook/react/issues/34262"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.repro-preserve-memoization-inner-destructured-value-mistaken-as-dependency-later-mutation.js,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 
 /**
  * Repro from https://github.com/facebook/react/issues/34262"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.repro-preserve-memoization-inner-destructured-value-mistaken-as-dependency-mutated-dep.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 
 import {identity, Stringify, useHook} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.repro-preserve-memoization-inner-destructured-value-mistaken-as-dependency-mutated-dep.js,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 
 import {identity, Stringify, useHook} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-repro-missed-memoization-from-capture-in-invoked-function-inferred-as-mutation.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @flow @validatePreserveExistingMemoizationGuarantees
+// @flow @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {logValue, useFragment, useHook, typedLog} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-repro-missed-memoization-from-capture-in-invoked-function-inferred-as-mutation.js,1,1,2,"@@ -1,4 +1,4 @@
-// @flow @validatePreserveExistingMemoizationGuarantees
+// @flow @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {logValue, useFragment, useHook, typedLog} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-repro-missed-memoization-from-inferred-mutation-in-logger.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @flow @validatePreserveExistingMemoizationGuarantees
+// @flow @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useFragment} from 'react-relay';
 import LogEvent from 'LogEvent';
 import {useCallback, useMemo} from 'react';"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-repro-missed-memoization-from-inferred-mutation-in-logger.js,1,1,2,"@@ -1,4 +1,4 @@
-// @flow @validatePreserveExistingMemoizationGuarantees
+// @flow @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useFragment} from 'react-relay';
 import LogEvent from 'LogEvent';
 import {useCallback, useMemo} from 'react';"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-repro-unmemoized-callback-captured-in-context-variable.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {ValidateMemoization, useHook} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-repro-unmemoized-callback-captured-in-context-variable.tsx,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {ValidateMemoization, useHook} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.validate-object-entries-mutation.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {makeObject_Primitives, Stringify} from 'shared-runtime';
 
 function Component(props) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.validate-object-entries-mutation.js,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {makeObject_Primitives, Stringify} from 'shared-runtime';
 
 function Component(props) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.validate-object-values-mutation.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {makeObject_Primitives, Stringify} from 'shared-runtime';
 
 function Component(props) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.validate-object-values-mutation.js,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {makeObject_Primitives, Stringify} from 'shared-runtime';
 
 function Component(props) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/existing-variables-with-c-name.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo, useState} from 'react';
 import {ValidateMemoization} from 'shared-runtime';
 
@@ -28,7 +29,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c2 } from ""react/compiler-runtime"";
+import { c as _c2 } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo, useState } from ""react"";
 import { ValidateMemoization } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/existing-variables-with-c-name.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo, useState} from 'react';
 import {ValidateMemoization} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/fbt/bug-fbt-plural-multiple-function-calls.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import fbt from 'fbt';
 
 /**
@@ -35,7 +36,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import fbt from ""fbt"";
 
 /**"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/fbt/bug-fbt-plural-multiple-function-calls.ts,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import fbt from 'fbt';
 
 /**"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/for-in-statement-type-inference.expect.md,2,0,2,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 const {identity, mutate} = require('shared-runtime');
 
 function Component(props) {
@@ -24,6 +25,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 const { identity, mutate } = require(""shared-runtime"");
 
 function Component(props) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/for-in-statement-type-inference.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 const {identity, mutate} = require('shared-runtime');
 
 function Component(props) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/hooks-with-prefix.expect.md,2,2,4,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @hookPattern:"".*\b(use[^$]+)$""
+// @hookPattern:"".*\b(use[^$]+)$"" @enablePreserveExistingMemoizationGuarantees:false
 
 import * as React from 'react';
 import {makeArray, useHook} from 'shared-runtime';
@@ -36,7 +36,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime""; // @hookPattern:"".*\b(use[^$]+)$""
+import { c as _c } from ""react/compiler-runtime""; // @hookPattern:"".*\b(use[^$]+)$"" @enablePreserveExistingMemoizationGuarantees:false
 
 import * as React from ""react"";
 import { makeArray, useHook } from ""shared-runtime"";"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/hooks-with-prefix.js,1,1,2,"@@ -1,4 +1,4 @@
-// @hookPattern:"".*\b(use[^$]+)$""
+// @hookPattern:"".*\b(use[^$]+)$"" @enablePreserveExistingMemoizationGuarantees:false
 
 import * as React from 'react';
 import {makeArray, useHook} from 'shared-runtime';"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/infer-computed-delete.expect.md,2,2,4,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @debug
+// @debug @enablePreserveExistingMemoizationGuarantees:false
 function Component(props) {
   const x = makeObject();
   const y = delete x[props.value];
@@ -14,7 +14,7 @@ function Component(props) {
 ## Code
 
 ```javascript
-// @debug
+// @debug @enablePreserveExistingMemoizationGuarantees:false
 function Component(props) {
   const x = makeObject();
   const y = delete x[props.value];"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/infer-computed-delete.js,1,1,2,"@@ -1,4 +1,4 @@
-// @debug
+// @debug @enablePreserveExistingMemoizationGuarantees:false
 function Component(props) {
   const x = makeObject();
   const y = delete x[props.value];"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/infer-property-delete.expect.md,2,0,2,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 function Component(props) {
   const x = makeObject();
   const y = delete x.value;
@@ -13,6 +14,7 @@ function Component(props) {
 ## Code
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 function Component(props) {
   const x = makeObject();
   const y = delete x.value;"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/infer-property-delete.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 function Component(props) {
   const x = makeObject();
   const y = delete x.value;"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/error.invalid-useCallback-captures-reassigned-context.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees @enableNewMutationAliasingModel
+// @validatePreserveExistingMemoizationGuarantees @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {makeArray} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/error.invalid-useCallback-captures-reassigned-context.js,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees @enableNewMutationAliasingModel
+// @validatePreserveExistingMemoizationGuarantees @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {makeArray} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/mutate-through-identity-function-expression.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {identity, ValidateMemoization} from 'shared-runtime';
 
@@ -32,7 +33,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import { identity, ValidateMemoization } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/mutate-through-identity-function-expression.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {identity, ValidateMemoization} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/mutate-through-identity.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {identity, ValidateMemoization} from 'shared-runtime';
 
@@ -29,7 +30,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import { identity, ValidateMemoization } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/mutate-through-identity.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {identity, ValidateMemoization} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/todo-control-flow-sensitive-mutation.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   mutate,
@@ -49,7 +50,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import {
   mutate,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/todo-control-flow-sensitive-mutation.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   mutate,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/todo-transitivity-createfrom-capture-lambda.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,
@@ -41,7 +42,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/todo-transitivity-createfrom-capture-lambda.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/transitivity-add-captured-array-to-itself.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,
@@ -42,7 +43,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/transitivity-add-captured-array-to-itself.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/transitivity-capture-createfrom-lambda.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,
@@ -40,7 +41,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/transitivity-capture-createfrom-lambda.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/transitivity-capture-createfrom.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,
@@ -36,7 +37,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/transitivity-capture-createfrom.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/transitivity-phi-assign-or-capture.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,
@@ -40,7 +41,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/transitivity-phi-assign-or-capture.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {
   typedCapture,"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/useCallback-reordering-deplist-controlflow.expect.md,2,2,4,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @enableNewMutationAliasingModel
+// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {Stringify} from 'shared-runtime';
 
@@ -36,7 +36,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime""; // @enableNewMutationAliasingModel
+import { c as _c } from ""react/compiler-runtime""; // @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import { useCallback } from ""react"";
 import { Stringify } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/useCallback-reordering-deplist-controlflow.tsx,1,1,2,"@@ -1,4 +1,4 @@
-// @enableNewMutationAliasingModel
+// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {Stringify} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/useCallback-reordering-depslist-assignment.expect.md,2,2,4,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @enableNewMutationAliasingModel
+// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {Stringify} from 'shared-runtime';
 
@@ -31,7 +31,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime""; // @enableNewMutationAliasingModel
+import { c as _c } from ""react/compiler-runtime""; // @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import { useCallback } from ""react"";
 import { Stringify } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/useCallback-reordering-depslist-assignment.tsx,1,1,2,"@@ -1,4 +1,4 @@
-// @enableNewMutationAliasingModel
+// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {Stringify} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/useMemo-reordering-depslist-assignment.expect.md,2,2,4,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @enableNewMutationAliasingModel
+// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 
 function useFoo(arr1, arr2) {
@@ -27,7 +27,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime""; // @enableNewMutationAliasingModel
+import { c as _c } from ""react/compiler-runtime""; // @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 
 function useFoo(arr1, arr2) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/new-mutability/useMemo-reordering-depslist-assignment.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @enableNewMutationAliasingModel
+// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 
 function useFoo(arr1, arr2) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.false-positive-useMemo-infer-mutate-deps.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {identity} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.false-positive-useMemo-infer-mutate-deps.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {identity} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.hoist-useCallback-conditional-access-own-scope.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 
 function Component({propA, propB}) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.hoist-useCallback-conditional-access-own-scope.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 
 function Component({propA, propB}) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.hoist-useCallback-infer-conditional-value-block.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {identity, mutate} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.hoist-useCallback-infer-conditional-value-block.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {identity, mutate} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.invalid-useCallback-captures-reassigned-context.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 
 import {useCallback} from 'react';
 import {makeArray} from 'shared-runtime';"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.invalid-useCallback-captures-reassigned-context.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 
 import {useCallback} from 'react';
 import {makeArray} from 'shared-runtime';"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.useCallback-conditional-access-noAlloc.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 
 function Component({propA, propB}) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.useCallback-conditional-access-noAlloc.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 
 function Component({propA, propB}) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.useCallback-infer-less-specific-conditional-access.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {mutate} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.useCallback-infer-less-specific-conditional-access.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {mutate} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.useMemo-infer-less-specific-conditional-access.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {mutate} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.useMemo-infer-less-specific-conditional-access.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {mutate} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.useMemo-infer-less-specific-conditional-value-block.expect.md,1,1,2,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {identity, mutate} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/error.useMemo-infer-less-specific-conditional-value-block.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @validatePreserveExistingMemoizationGuarantees
+// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {identity, mutate} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/useCallback-reordering-deplist-controlflow.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {Stringify} from 'shared-runtime';
 
@@ -35,7 +36,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useCallback } from ""react"";
 import { Stringify } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/useCallback-reordering-deplist-controlflow.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {Stringify} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/useCallback-reordering-depslist-assignment.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {Stringify} from 'shared-runtime';
 
@@ -30,7 +31,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useCallback } from ""react"";
 import { Stringify } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/useCallback-reordering-depslist-assignment.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useCallback} from 'react';
 import {Stringify} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/useMemo-reordering-depslist-assignment.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 
 function useFoo(arr1, arr2) {
@@ -26,7 +27,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 
 function useFoo(arr1, arr2) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/useMemo-reordering-depslist-assignment.ts,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 
 function useFoo(arr1, arr2) {"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/useMemo-reordering-depslist-controlflow.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {Stringify} from 'shared-runtime';
 
@@ -35,7 +36,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import { Stringify } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-validation/useMemo-reordering-depslist-controlflow.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {Stringify} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/repro-no-declarations-in-reactive-scope-with-early-return.expect.md,2,2,4,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions
+// @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions @enablePreserveExistingMemoizationGuarantees:false
 function Component() {
   const items = useItems();
   const filteredItems = useMemo(
@@ -37,7 +37,7 @@ function Component() {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime""; // @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions
+import { c as _c } from ""react/compiler-runtime""; // @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions @enablePreserveExistingMemoizationGuarantees:false
 function Component() {
   const $ = _c(6);
   const items = useItems();"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/repro-no-declarations-in-reactive-scope-with-early-return.js,1,1,2,"@@ -1,4 +1,4 @@
-// @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions
+// @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions @enablePreserveExistingMemoizationGuarantees:false
 function Component() {
   const items = useItems();
   const filteredItems = useMemo("
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/repro-renaming-conflicting-decls.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {Stringify, identity, makeArray, toJSON} from 'shared-runtime';
 import {useMemo} from 'react';
 
@@ -40,7 +41,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { Stringify, identity, makeArray, toJSON } from ""shared-runtime"";
 import { useMemo } from ""react"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/repro-renaming-conflicting-decls.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {Stringify, identity, makeArray, toJSON} from 'shared-runtime';
 import {useMemo} from 'react';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/ts-non-null-expression-default-value.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 const THEME_MAP: ReadonlyMap<string, string> = new Map([
   ['default', 'light'],
   ['dark', 'dark'],
@@ -21,7 +22,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 const THEME_MAP: ReadonlyMap<string, string> = new Map([
   [""default"", ""light""],
   [""dark"", ""dark""],"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/ts-non-null-expression-default-value.tsx,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 const THEME_MAP: ReadonlyMap<string, string> = new Map([
   ['default', 'light'],
   ['dark', 'dark'],"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/unary-expr.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 function component(a) {
   let t = {t: a};
   let z = +t.t;
@@ -25,7 +26,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 function component(a) {
   const $ = _c(8);
   const t = { t: a };"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/unary-expr.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 function component(a) {
   let t = {t: a};
   let z = +t.t;"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/useMemo-named-function.expect.md,2,2,4,"@@ -2,7 +2,7 @@
 ## Input
 
 ```javascript
-// @validateNoSetStateInRender:false
+// @validateNoSetStateInRender:false @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {makeArray} from 'shared-runtime';
 
@@ -21,7 +21,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime""; // @validateNoSetStateInRender:false
+import { c as _c } from ""react/compiler-runtime""; // @validateNoSetStateInRender:false @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 import { makeArray } from ""shared-runtime"";
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/useMemo-named-function.ts,1,1,2,"@@ -1,4 +1,4 @@
-// @validateNoSetStateInRender:false
+// @validateNoSetStateInRender:false @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 import {makeArray} from 'shared-runtime';
 "
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/useMemo-with-optional.expect.md,2,1,3,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 function Component(props) {
   return (
@@ -21,7 +22,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
-import { c as _c } from ""react/compiler-runtime"";
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false
 import { useMemo } from ""react"";
 function Component(props) {
   const $ = _c(2);"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/useMemo-with-optional.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 import {useMemo} from 'react';
 function Component(props) {
   return ("
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/while-with-assignment-in-test.expect.md,2,0,2,"@@ -2,6 +2,7 @@
 ## Input
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 function Component() {
   const queue = [1, 2, 3];
   let value = 0;
@@ -22,6 +23,7 @@ export const FIXTURE_ENTRYPOINT = {
 ## Code
 
 ```javascript
+// @enablePreserveExistingMemoizationGuarantees:false
 function Component() {
   const queue = [1, 2, 3];
   let value;"
facebook/react,70b52beca64aeac447a6cf57cfe1fda0691435c1,Joseph Savona,2025-10-02T17:25:00Z,"[compiler] `@enablePreserveExistingMemoizationGuarantees` on by default (#34689)

This enables `@enablePreserveExistingMemoizationGuarantees` by default.
As of the previous PR (#34503), this mode now enables the following
behaviors:

- Treating variables referenced within a `useMemo()` or `useCallback()`
as ""frozen"" (immutable) as of the start of the call. Ie, the compiler
will assume that the values you reference are not mutated by the body of
the useMemo, not are they mutated later. Directly modifying them (eg
`var.property = true`) will be an error.
- Similarly, the results of the useMemo/useCallback are treated as
frozen (immutable) after the call.

These two rules match the behavior for other hooks: this means that
developers will see similar behavior to swapping out `useMemo()` for a
custom `useMyMemo()` wrapper/alias.

Additionally, as of #34503 the compiler uses information from the manual
dependencies to know which variables are non-nullable. Even if a useMemo
block conditionally accesses a nested property — `if (cond) { log(x.y.z)
}` — where the compiler would not usually know that `x` is non-nullable,
if the user specifies `x.y.z` as a manual dependency then the compiler
knows that `x` and `x.y` are non-nullable and can infer a more precise
dependency.

Finally, this mode also ensures that we always memoize function calls
that return primitives. See #34343 for more details.

For now, I've explicitly opted out of this feature in all test fixtures
where the behavior changed.",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/while-with-assignment-in-test.js,1,0,1,"@@ -1,3 +1,4 @@
+// @enablePreserveExistingMemoizationGuarantees:false
 function Component() {
   const queue = [1, 2, 3];
   let value = 0;"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/__tests__/store-test.js,0,6,6,"@@ -974,12 +974,8 @@ describe('Store', () => {
             <Suspense name=""three"" rects={[{x:1,y:2,width:5,height:1}]}>
       `);
 
-      const rendererID = getRendererID();
-      const rootID = store.getRootIDForElement(store.getElementIDAtIndex(0));
       await actAsync(() => {
         agent.overrideSuspenseMilestone({
-          rendererID,
-          rootID,
           suspendedSet: [
             store.getElementIDAtIndex(4),
             store.getElementIDAtIndex(8),
@@ -1009,8 +1005,6 @@ describe('Store', () => {
 
       await actAsync(() => {
         agent.overrideSuspenseMilestone({
-          rendererID,
-          rootID,
           suspendedSet: [],
         });
       });"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/backend/agent.js,263,13,276,"@@ -8,7 +8,11 @@
  */
 
 import EventEmitter from '../events';
-import {SESSION_STORAGE_LAST_SELECTION_KEY, __DEBUG__} from '../constants';
+import {
+  SESSION_STORAGE_LAST_SELECTION_KEY,
+  UNKNOWN_SUSPENDERS_NONE,
+  __DEBUG__,
+} from '../constants';
 import setupHighlighter from './views/Highlighter';
 import {
   initialize as setupTraceUpdates,
@@ -26,8 +30,13 @@ import type {
   RendererID,
   RendererInterface,
   DevToolsHookSettings,
+  InspectedElement,
 } from './types';
-import type {ComponentFilter} from 'react-devtools-shared/src/frontend/types';
+import type {
+  ComponentFilter,
+  DehydratedData,
+  ElementType,
+} from 'react-devtools-shared/src/frontend/types';
 import type {GroupItem} from './views/TraceUpdates/canvas';
 import {gte, isReactNativeEnvironment} from './utils';
 import {
@@ -73,6 +82,13 @@ type InspectElementParams = {
   requestID: number,
 };
 
+type InspectScreenParams = {
+  forceFullData: boolean,
+  id: number,
+  path: Array<string | number> | null,
+  requestID: number,
+};
+
 type OverrideHookParams = {
   id: number,
   hookID: number,
@@ -131,8 +147,6 @@ type OverrideSuspenseParams = {
 };
 
 type OverrideSuspenseMilestoneParams = {
-  rendererID: number,
-  rootID: number,
   suspendedSet: Array<number>,
 };
 
@@ -141,6 +155,111 @@ type PersistedSelection = {
   path: Array<PathFrame>,
 };
 
+function createEmptyInspectedScreen(
+  arbitraryRootID: number,
+  type: ElementType,
+): InspectedElement {
+  const suspendedBy: DehydratedData = {
+    cleaned: [],
+    data: [],
+    unserializable: [],
+  };
+  return {
+    // invariants
+    id: arbitraryRootID,
+    type: type,
+    // Properties we merge
+    isErrored: false,
+    errors: [],
+    warnings: [],
+    suspendedBy,
+    suspendedByRange: null,
+    // TODO: How to merge these?
+    unknownSuspenders: UNKNOWN_SUSPENDERS_NONE,
+    // Properties where merging doesn't make sense so we ignore them entirely in the UI
+    rootType: null,
+    plugins: {stylex: null},
+    nativeTag: null,
+    env: null,
+    source: null,
+    stack: null,
+    rendererPackageName: null,
+    rendererVersion: null,
+    // These don't make sense for a Root. They're just bottom values.
+    key: null,
+    canEditFunctionProps: false,
+    canEditHooks: false,
+    canEditFunctionPropsDeletePaths: false,
+    canEditFunctionPropsRenamePaths: false,
+    canEditHooksAndDeletePaths: false,
+    canEditHooksAndRenamePaths: false,
+    canToggleError: false,
+    canToggleSuspense: false,
+    isSuspended: false,
+    hasLegacyContext: false,
+    context: null,
+    hooks: null,
+    props: null,
+    state: null,
+    owners: null,
+  };
+}
+
+function mergeRoots(
+  left: InspectedElement,
+  right: InspectedElement,
+  suspendedByOffset: number,
+): void {
+  const leftSuspendedByRange = left.suspendedByRange;
+  const rightSuspendedByRange = right.suspendedByRange;
+
+  if (right.isErrored) {
+    left.isErrored = true;
+  }
+  for (let i = 0; i < right.errors.length; i++) {
+    left.errors.push(right.errors[i]);
+  }
+  for (let i = 0; i < right.warnings.length; i++) {
+    left.warnings.push(right.warnings[i]);
+  }
+
+  const leftSuspendedBy: DehydratedData = left.suspendedBy;
+  const {data, cleaned, unserializable} = (right.suspendedBy: DehydratedData);
+  const leftSuspendedByData = ((leftSuspendedBy.data: any): Array<mixed>);
+  const rightSuspendedByData = ((data: any): Array<mixed>);
+  for (let i = 0; i < rightSuspendedByData.length; i++) {
+    leftSuspendedByData.push(rightSuspendedByData[i]);
+  }
+  for (let i = 0; i < cleaned.length; i++) {
+    leftSuspendedBy.cleaned.push(
+      [suspendedByOffset + cleaned[i][0]].concat(cleaned[i].slice(1)),
+    );
+  }
+  for (let i = 0; i < unserializable.length; i++) {
+    leftSuspendedBy.unserializable.push(
+      [suspendedByOffset + unserializable[i][0]].concat(
+        unserializable[i].slice(1),
+      ),
+    );
+  }
+
+  if (rightSuspendedByRange !== null) {
+    if (leftSuspendedByRange === null) {
+      left.suspendedByRange = [
+        rightSuspendedByRange[0],
+        rightSuspendedByRange[1],
+      ];
+    } else {
+      if (rightSuspendedByRange[0] < leftSuspendedByRange[0]) {
+        leftSuspendedByRange[0] = rightSuspendedByRange[0];
+      }
+      if (rightSuspendedByRange[1] > leftSuspendedByRange[1]) {
+        leftSuspendedByRange[1] = rightSuspendedByRange[1];
+      }
+    }
+  }
+}
+
 export default class Agent extends EventEmitter<{
   hideNativeHighlight: [],
   showNativeHighlight: [HostInstance],
@@ -201,6 +320,7 @@ export default class Agent extends EventEmitter<{
     bridge.addListener('getProfilingStatus', this.getProfilingStatus);
     bridge.addListener('getOwnersList', this.getOwnersList);
     bridge.addListener('inspectElement', this.inspectElement);
+    bridge.addListener('inspectScreen', this.inspectScreen);
     bridge.addListener('logElementToConsole', this.logElementToConsole);
     bridge.addListener('overrideError', this.overrideError);
     bridge.addListener('overrideSuspense', this.overrideSuspense);
@@ -531,6 +651,138 @@ export default class Agent extends EventEmitter<{
     }
   };
 
+  inspectScreen: InspectScreenParams => void = ({
+    requestID,
+    id,
+    forceFullData,
+    path: screenPath,
+  }) => {
+    let inspectedScreen: InspectedElement | null = null;
+    let found = false;
+    // the suspendedBy index will be from the previously merged roots.
+    // We need to keep track of how many suspendedBy we've already seen to know
+    // to which renderer the index belongs.
+    let suspendedByOffset = 0;
+    let suspendedByPathIndex: number | null = null;
+    // The path to hydrate for a specific renderer
+    let rendererPath: InspectElementParams['path'] = null;
+    if (screenPath !== null && screenPath.length > 1) {
+      const secondaryCategory = screenPath[0];
+      if (secondaryCategory !== 'suspendedBy') {
+        throw new Error(
+          'Only hydrating suspendedBy paths is supported. This is a bug.',
+        );
+      }
+      if (typeof screenPath[1] !== 'number') {
+        throw new Error(
+          `Expected suspendedBy index to be a number. Received '${screenPath[1]}' instead. This is a bug.`,
+        );
+      }
+      suspendedByPathIndex = screenPath[1];
+      rendererPath = screenPath.slice(2);
+    }
+
+    for (const rendererID in this._rendererInterfaces) {
+      const renderer = ((this._rendererInterfaces[
+        (rendererID: any)
+      ]: any): RendererInterface);
+      let path: InspectElementParams['path'] = null;
+      if (suspendedByPathIndex !== null && rendererPath !== null) {
+        const suspendedByPathRendererIndex =
+          suspendedByPathIndex - suspendedByOffset;
+        const rendererHasRequestedSuspendedByPath =
+          renderer.getElementAttributeByPath(id, [
+            'suspendedBy',
+            suspendedByPathRendererIndex,
+          ]) !== undefined;
+        if (rendererHasRequestedSuspendedByPath) {
+          path = ['suspendedBy', suspendedByPathRendererIndex].concat(
+            rendererPath,
+          );
+        }
+      }
+
+      const inspectedRootsPayload = renderer.inspectElement(
+        requestID,
+        id,
+        path,
+        forceFullData,
+      );
+      switch (inspectedRootsPayload.type) {
+        case 'hydrated-path':
+          // The path will be relative to the Roots of this renderer. We adjust it
+          // to be relative to all Roots of this implementation.
+          inspectedRootsPayload.path[1] += suspendedByOffset;
+          // TODO: Hydration logic is flawed since the Frontend path is not based
+          // on the original backend data but rather its own representation of it (e.g. due to reorder).
+          // So we can receive null here instead when hydration fails
+          if (inspectedRootsPayload.value !== null) {
+            for (
+              let i = 0;
+              i < inspectedRootsPayload.value.cleaned.length;
+              i++
+            ) {
+              inspectedRootsPayload.value.cleaned[i][1] += suspendedByOffset;
+            }
+          }
+          this._bridge.send('inspectedScreen', inspectedRootsPayload);
+          // If we hydrated a path, it must've been in a specific renderer so we can stop here.
+          return;
+        case 'full-data':
+          const inspectedRoots = inspectedRootsPayload.value;
+          if (inspectedScreen === null) {
+            inspectedScreen = createEmptyInspectedScreen(
+              inspectedRoots.id,
+              inspectedRoots.type,
+            );
+          }
+          mergeRoots(inspectedScreen, inspectedRoots, suspendedByOffset);
+          const dehydratedSuspendedBy: DehydratedData =
+            inspectedRoots.suspendedBy;
+          const suspendedBy = ((dehydratedSuspendedBy.data: any): Array<mixed>);
+          suspendedByOffset += suspendedBy.length;
+          found = true;
+          break;
+        case 'no-change':
+          found = true;
+          const rootsSuspendedBy: Array<mixed> =
+            (renderer.getElementAttributeByPath(id, ['suspendedBy']): any);
+          suspendedByOffset += rootsSuspendedBy.length;
+          break;
+        case 'not-found':
+          break;
+        case 'error':
+          // bail out and show the error
+          // TODO: aggregate errors
+          this._bridge.send('inspectedScreen', inspectedRootsPayload);
+          return;
+      }
+    }
+
+    if (inspectedScreen === null) {
+      if (found) {
+        this._bridge.send('inspectedScreen', {
+          type: 'no-change',
+          responseID: requestID,
+          id,
+        });
+      } else {
+        this._bridge.send('inspectedScreen', {
+          type: 'not-found',
+          responseID: requestID,
+          id,
+        });
+      }
+    } else {
+      this._bridge.send('inspectedScreen', {
+        type: 'full-data',
+        responseID: requestID,
+        id,
+        value: inspectedScreen,
+      });
+    }
+  };
+
   logElementToConsole: ElementAndRendererID => void = ({id, rendererID}) => {
     const renderer = this._rendererInterfaces[rendererID];
     if (renderer == null) {
@@ -567,17 +819,15 @@ export default class Agent extends EventEmitter<{
   };
 
   overrideSuspenseMilestone: OverrideSuspenseMilestoneParams => void = ({
-    rendererID,
-    rootID,
     suspendedSet,
   }) => {
-    const renderer = this._rendererInterfaces[rendererID];
-    if (renderer == null) {
-      console.warn(
-        `Invalid renderer id ""${rendererID}"" to override suspense milestone`,
-      );
-    } else {
-      renderer.overrideSuspenseMilestone(rootID, suspendedSet);
+    for (const rendererID in this._rendererInterfaces) {
+      const renderer = ((this._rendererInterfaces[
+        (rendererID: any)
+      ]: any): RendererInterface);
+      if (renderer.supportsTogglingSuspense) {
+        renderer.overrideSuspenseMilestone(suspendedSet);
+      }
     }
   };
 "
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/backend/fiber/renderer.js,123,16,139,"@@ -2420,7 +2420,6 @@ export function attach(
         !isProductionBuildOfRenderer && StrictModeBits !== 0 ? 1 : 0,
       );
       pushOperation(hasOwnerMetadata ? 1 : 0);
-      pushOperation(supportsTogglingSuspense ? 1 : 0);
 
       if (isProfiling) {
         if (displayNamesByRootID !== null) {
@@ -4902,7 +4901,11 @@ export function attach(
       fiberInstance.data = nextFiber;
       if (
         mostRecentlyInspectedElement !== null &&
-        mostRecentlyInspectedElement.id === fiberInstance.id &&
+        (mostRecentlyInspectedElement.id === fiberInstance.id ||
+          // If we're inspecting a Root, we inspect the Screen.
+          // Invalidating any Root invalidates the Screen too.
+          (mostRecentlyInspectedElement.type === ElementTypeRoot &&
+            nextFiber.tag === HostRoot)) &&
         didFiberRender(prevFiber, nextFiber)
       ) {
         // If this Fiber has updated, clear cached inspected data.
@@ -6422,7 +6425,10 @@ export function attach(
       return inspectVirtualInstanceRaw(devtoolsInstance);
     }
     if (devtoolsInstance.kind === FIBER_INSTANCE) {
-      return inspectFiberInstanceRaw(devtoolsInstance);
+      const isRoot = devtoolsInstance.parent === null;
+      return isRoot
+        ? inspectRootsRaw(devtoolsInstance.id)
+        : inspectFiberInstanceRaw(devtoolsInstance);
     }
     (devtoolsInstance: FilteredFiberInstance); // assert exhaustive
     throw new Error('Unsupported instance kind');
@@ -6875,10 +6881,24 @@ export function attach(
   let currentlyInspectedPaths: Object = {};
 
   function isMostRecentlyInspectedElement(id: number): boolean {
-    return (
-      mostRecentlyInspectedElement !== null &&
-      mostRecentlyInspectedElement.id === id
-    );
+    if (mostRecentlyInspectedElement === null) {
+      return false;
+    }
+    if (mostRecentlyInspectedElement.id === id) {
+      return true;
+    }
+
+    if (mostRecentlyInspectedElement.type === ElementTypeRoot) {
+      // we inspected the screen recently. If we're inspecting another root, we're
+      // still inspecting the screen.
+      const instance = idToDevToolsInstanceMap.get(id);
+      return (
+        instance !== undefined &&
+        instance.kind === FIBER_INSTANCE &&
+        instance.parent === null
+      );
+    }
+    return false;
   }
 
   function isMostRecentlyInspectedElementCurrent(id: number): boolean {
@@ -7060,8 +7080,8 @@ export function attach(
       if (!hasElementUpdatedSinceLastInspected) {
         if (path !== null) {
           let secondaryCategory: 'suspendedBy' | 'hooks' | null = null;
-          if (path[0] === 'hooks') {
-            secondaryCategory = 'hooks';
+          if (path[0] === 'hooks' || path[0] === 'suspendedBy') {
+            secondaryCategory = path[0];
           }
 
           // If this element has not been updated since it was last inspected,
@@ -7209,6 +7229,99 @@ export function attach(
     };
   }
 
+  function inspectRootsRaw(arbitraryRootID: number): InspectedElement | null {
+    const roots = hook.getFiberRoots(rendererID);
+    if (roots.size === 0) {
+      return null;
+    }
+
+    const inspectedRoots: InspectedElement = {
+      // invariants
+      id: arbitraryRootID,
+      type: ElementTypeRoot,
+      // Properties we merge
+      isErrored: false,
+      errors: [],
+      warnings: [],
+      suspendedBy: [],
+      suspendedByRange: null,
+      // TODO: How to merge these?
+      unknownSuspenders: UNKNOWN_SUSPENDERS_NONE,
+      // Properties where merging doesn't make sense so we ignore them entirely in the UI
+      rootType: null,
+      plugins: {stylex: null},
+      nativeTag: null,
+      env: null,
+      source: null,
+      stack: null,
+      rendererPackageName: null,
+      rendererVersion: null,
+      // These don't make sense for a Root. They're just bottom values.
+      key: null,
+      canEditFunctionProps: false,
+      canEditHooks: false,
+      canEditFunctionPropsDeletePaths: false,
+      canEditFunctionPropsRenamePaths: false,
+      canEditHooksAndDeletePaths: false,
+      canEditHooksAndRenamePaths: false,
+      canToggleError: false,
+      canToggleSuspense: false,
+      isSuspended: false,
+      hasLegacyContext: false,
+      context: null,
+      hooks: null,
+      props: null,
+      state: null,
+      owners: null,
+    };
+
+    let minSuspendedByRange = Infinity;
+    let maxSuspendedByRange = -Infinity;
+    roots.forEach(root => {
+      const rootInstance = rootToFiberInstanceMap.get(root);
+      if (rootInstance === undefined) {
+        throw new Error(
+          'Expected a root instance to exist for this Fiber root',
+        );
+      }
+      const inspectedRoot = inspectFiberInstanceRaw(rootInstance);
+      if (inspectedRoot === null) {
+        return;
+      }
+
+      if (inspectedRoot.isErrored) {
+        inspectedRoots.isErrored = true;
+      }
+      for (let i = 0; i < inspectedRoot.errors.length; i++) {
+        inspectedRoots.errors.push(inspectedRoot.errors[i]);
+      }
+      for (let i = 0; i < inspectedRoot.warnings.length; i++) {
+        inspectedRoots.warnings.push(inspectedRoot.warnings[i]);
+      }
+      for (let i = 0; i < inspectedRoot.suspendedBy.length; i++) {
+        inspectedRoots.suspendedBy.push(inspectedRoot.suspendedBy[i]);
+      }
+      const suspendedByRange = inspectedRoot.suspendedByRange;
+      if (suspendedByRange !== null) {
+        if (suspendedByRange[0] < minSuspendedByRange) {
+          minSuspendedByRange = suspendedByRange[0];
+        }
+        if (suspendedByRange[1] > maxSuspendedByRange) {
+          maxSuspendedByRange = suspendedByRange[1];
+        }
+      }
+    });
+
+    if (minSuspendedByRange !== Infinity || maxSuspendedByRange !== -Infinity) {
+      inspectedRoots.suspendedByRange = [
+        minSuspendedByRange,
+        maxSuspendedByRange,
+      ];
+    }
+
+    return inspectedRoots;
+  }
+
   function logElementToConsole(id: number) {
     const result = isMostRecentlyInspectedElementCurrent(id)
       ? mostRecentlyInspectedElement
@@ -7867,13 +7980,9 @@ export function attach(
 
   /**
    * Resets the all other roots of this renderer.
-   * @param rootID The root that contains this milestone
    * @param suspendedSet List of IDs of SuspenseComponent Fibers
    */
-  function overrideSuspenseMilestone(
-    rootID: FiberInstance['id'],
-    suspendedSet: Array<FiberInstance['id']>,
-  ) {
+  function overrideSuspenseMilestone(suspendedSet: Array<FiberInstance['id']>) {
     if (
       typeof setSuspenseHandler !== 'function' ||
       typeof scheduleUpdate !== 'function'
@@ -7883,8 +7992,6 @@ export function attach(
       );
     }
 
-    // TODO: Allow overriding the timeline for the specified root.
-
     const unsuspendedSet: Set<Fiber> = new Set(forceFallbackForFibers);
 
     let resuspended = false;"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/backend/legacy/renderer.js,106,1,107,"@@ -412,7 +412,6 @@ export function attach(
       pushOperation(0); // Profiling flag
       pushOperation(0); // StrictMode supported?
       pushOperation(hasOwnerMetadata ? 1 : 0);
-      pushOperation(supportsTogglingSuspense ? 1 : 0);
 
       pushOperation(SUSPENSE_TREE_OPERATION_ADD);
       pushOperation(id);
@@ -800,6 +799,20 @@ export function attach(
       return null;
     }
 
+    const rootID = internalInstanceToRootIDMap.get(internalInstance);
+    if (rootID === undefined) {
+      throw new Error('Expected to find root ID.');
+    }
+    const isRoot = rootID === id;
+    return isRoot
+      ? inspectRootsRaw(rootID)
+      : inspectInternalInstanceRaw(id, internalInstance);
+  }
+
+  function inspectInternalInstanceRaw(
+    id: number,
+    internalInstance: InternalInstance,
+  ): InspectedElement | null {
     const {key} = getData(internalInstance);
     const type = getElementType(internalInstance);
 
@@ -903,6 +916,98 @@ export function attach(
     };
   }
 
+  function inspectRootsRaw(arbitraryRootID: number): InspectedElement | null {
+    const roots =
+      renderer.Mount._instancesByReactRootID ||
+      renderer.Mount._instancesByContainerID;
+
+    const inspectedRoots: InspectedElement = {
+      // invariants
+      id: arbitraryRootID,
+      type: ElementTypeRoot,
+      // Properties we merge
+      isErrored: false,
+      errors: [],
+      warnings: [],
+      suspendedBy: [],
+      suspendedByRange: null,
+      // TODO: How to merge these?
+      unknownSuspenders: UNKNOWN_SUSPENDERS_NONE,
+      // Properties where merging doesn't make sense so we ignore them entirely in the UI
+      rootType: null,
+      plugins: {stylex: null},
+      nativeTag: null,
+      env: null,
+      source: null,
+      stack: null,
+      // TODO: We could make the Frontend accept an array to display
+      // a list of unique renderers contributing to this Screen.
+      rendererPackageName: null,
+      rendererVersion: null,
+      // These don't make sense for a Root. They're just bottom values.
+      key: null,
+      canEditFunctionProps: false,
+      canEditHooks: false,
+      canEditFunctionPropsDeletePaths: false,
+      canEditFunctionPropsRenamePaths: false,
+      canEditHooksAndDeletePaths: false,
+      canEditHooksAndRenamePaths: false,
+      canToggleError: false,
+      canToggleSuspense: false,
+      isSuspended: false,
+      hasLegacyContext: false,
+      context: null,
+      hooks: null,
+      props: null,
+      state: null,
+      owners: null,
+    };
+
+    let minSuspendedByRange = Infinity;
+    let maxSuspendedByRange = -Infinity;
+
+    for (const rootKey in roots) {
+      const internalInstance = roots[rootKey];
+      const id = getID(internalInstance);
+      const inspectedRoot = inspectInternalInstanceRaw(id, internalInstance);
+
+      if (inspectedRoot === null) {
+        return null;
+      }
+
+      if (inspectedRoot.isErrored) {
+        inspectedRoots.isErrored = true;
+      }
+      for (let i = 0; i < inspectedRoot.errors.length; i++) {
+        inspectedRoots.errors.push(inspectedRoot.errors[i]);
+      }
+      for (let i = 0; i < inspectedRoot.warnings.length; i++) {
+        inspectedRoots.warnings.push(inspectedRoot.warnings[i]);
+      }
+      for (let i = 0; i < inspectedRoot.suspendedBy.length; i++) {
+        inspectedRoots.suspendedBy.push(inspectedRoot.suspendedBy[i]);
+      }
+      const suspendedByRange = inspectedRoot.suspendedByRange;
+      if (suspendedByRange !== null) {
+        if (suspendedByRange[0] < minSuspendedByRange) {
+          minSuspendedByRange = suspendedByRange[0];
+        }
+        if (suspendedByRange[1] > maxSuspendedByRange) {
+          maxSuspendedByRange = suspendedByRange[1];
+        }
+      }
+    }
+
+    if (minSuspendedByRange !== Infinity || maxSuspendedByRange !== -Infinity) {
+      inspectedRoots.suspendedByRange = [
+        minSuspendedByRange,
+        maxSuspendedByRange,
+      ];
+    }
+
+    return inspectedRoots;
+  }
+
   function logElementToConsole(id: number): void {
     const result = inspectElementRaw(id);
     if (result === null) {"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/backend/types.js,1,4,5,"@@ -450,10 +450,7 @@ export type RendererInterface = {
   onErrorOrWarning?: OnErrorOrWarning,
   overrideError: (id: number, forceError: boolean) => void,
   overrideSuspense: (id: number, forceFallback: boolean) => void,
-  overrideSuspenseMilestone: (
-    rootID: number,
-    suspendedSet: Array<number>,
-  ) => void,
+  overrideSuspenseMilestone: (suspendedSet: Array<number>) => void,
   overrideValueAtPath: (
     type: Type,
     id: number,"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/backend/views/Highlighter/index.js,48,0,48,"@@ -10,6 +10,7 @@
 import Agent from 'react-devtools-shared/src/backend/agent';
 import {hideOverlay, showOverlay} from './Highlighter';
 
+import type {HostInstance} from 'react-devtools-shared/src/backend/types';
 import type {BackendBridge} from 'react-devtools-shared/src/bridge';
 import type {RendererInterface} from '../../types';
 
@@ -26,6 +27,7 @@ export default function setupHighlighter(
 ): void {
   bridge.addListener('clearHostInstanceHighlight', clearHostInstanceHighlight);
   bridge.addListener('highlightHostInstance', highlightHostInstance);
+  bridge.addListener('highlightHostInstances', highlightHostInstances);
   bridge.addListener('scrollToHostInstance', scrollToHostInstance);
   bridge.addListener('shutdown', stopInspectingHost);
   bridge.addListener('startInspectingHost', startInspectingHost);
@@ -157,6 +159,52 @@ export default function setupHighlighter(
     hideOverlay(agent);
   }
 
+  function highlightHostInstances({
+    displayName,
+    hideAfterTimeout,
+    elements,
+    scrollIntoView,
+  }: {
+    displayName: string | null,
+    hideAfterTimeout: boolean,
+    elements: Array<{rendererID: number, id: number}>,
+    scrollIntoView: boolean,
+  }) {
+    const nodes: Array<HostInstance> = [];
+    for (let i = 0; i < elements.length; i++) {
+      const {id, rendererID} = elements[i];
+      const renderer = agent.rendererInterfaces[rendererID];
+      if (renderer == null) {
+        console.warn(`Invalid renderer id ""${rendererID}"" for element ""${id}""`);
+        continue;
+      }
+
+      // In some cases fiber may already be unmounted
+      if (!renderer.hasElementWithId(id)) {
+        continue;
+      }
+
+      const hostInstances = renderer.findHostInstancesForElementID(id);
+      if (hostInstances !== null) {
+        for (let j = 0; j < hostInstances.length; j++) {
+          nodes.push(hostInstances[j]);
+        }
+      }
+    }
+
+    if (nodes.length > 0) {
+      const node = nodes[0];
+      // $FlowFixMe[method-unbinding]
+      if (scrollIntoView && typeof node.scrollIntoView === 'function') {
+        // If the node isn't visible show it before highlighting it.
+        // We may want to reconsider this; it might be a little disruptive.
+        node.scrollIntoView({block: 'nearest', inline: 'nearest'});
+      }
+    }
+
+    showOverlay(nodes, displayName, agent, hideAfterTimeout);
+  }
+
   function attemptScrollToHostInstance(
     renderer: RendererInterface,
     id: number,"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/backendAPI.js,27,1,28,"@@ -95,7 +95,7 @@ export function inspectElement(
   id: number,
   path: InspectedElementPath | null,
   rendererID: number,
-  shouldListenToPauseEvents: boolean = false,
+  shouldListenToPauseEvents: boolean,
 ): Promise<InspectedElementPayload> {
   const requestID = requestCounter++;
   const promise = getPromiseForRequestID<InspectedElementPayload>(
@@ -117,6 +117,32 @@ export function inspectElement(
   return promise;
 }
 
+export function inspectScreen(
+  bridge: FrontendBridge,
+  forceFullData: boolean,
+  arbitraryRootID: number,
+  path: InspectedElementPath | null,
+  shouldListenToPauseEvents: boolean,
+): Promise<InspectedElementPayload> {
+  const requestID = requestCounter++;
+  const promise = getPromiseForRequestID<InspectedElementPayload>(
+    requestID,
+    'inspectedScreen',
+    bridge,
+    `Timed out while inspecting screen.`,
+    shouldListenToPauseEvents,
+  );
+
+  bridge.send('inspectScreen', {
+    requestID,
+    id: arbitraryRootID,
+    path,
+    forceFullData,
+  });
+
+  return promise;
+}
+
 let storeAsGlobalCount = 0;
 
 export function storeAsGlobal({"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/bridge.js,16,8,24,"@@ -65,12 +65,6 @@ export const BRIDGE_PROTOCOL: Array<BridgeProtocol> = [
   {
     version: 2,
     minNpmVersion: '4.22.0',
-    maxNpmVersion: '6.2.0',
-  },
-  // Version 3 adds supports-toggling-suspense bit to add-root
-  {
-    version: 3,
-    minNpmVersion: '6.2.0',
     maxNpmVersion: null,
   },
 ];
@@ -92,6 +86,12 @@ type HighlightHostInstance = {
   openBuiltinElementsPanel: boolean,
   scrollIntoView: boolean,
 };
+type HighlightHostInstances = {
+  elements: Array<ElementAndRendererID>,
+  displayName: string | null,
+  hideAfterTimeout: boolean,
+  scrollIntoView: boolean,
+};
 
 type ScrollToHostInstance = {
   ...ElementAndRendererID,
@@ -145,8 +145,6 @@ type OverrideSuspense = {
 };
 
 type OverrideSuspenseMilestone = {
-  rendererID: number,
-  rootID: number,
   suspendedSet: Array<number>,
 };
 
@@ -167,6 +165,13 @@ type InspectElementParams = {
   requestID: number,
 };
 
+type InspectScreenParams = {
+  requestID: number,
+  id: number,
+  forceFullData: boolean,
+  path: Array<number | string> | null,
+};
+
 type StoreAsGlobalParams = {
   ...ElementAndRendererID,
   count: number,
@@ -199,6 +204,7 @@ export type BackendEvents = {
   fastRefreshScheduled: [],
   getSavedPreferences: [],
   inspectedElement: [InspectedElementPayload],
+  inspectedScreen: [InspectedElementPayload],
   isReloadAndProfileSupportedByBackend: [boolean],
   operations: [Array<number>],
   ownersList: [OwnersList],
@@ -243,7 +249,9 @@ type FrontendEvents = {
   getProfilingData: [{rendererID: RendererID}],
   getProfilingStatus: [],
   highlightHostInstance: [HighlightHostInstance],
+  highlightHostInstances: [HighlightHostInstances],
   inspectElement: [InspectElementParams],
+  inspectScreen: [InspectScreenParams],
   logElementToConsole: [ElementAndRendererID],
   overrideError: [OverrideError],
   overrideSuspense: [OverrideSuspense],"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/devtools/store.js,42,41,83,"@@ -96,7 +96,6 @@ export type Capabilities = {
   supportsBasicProfiling: boolean,
   hasOwnerMetadata: boolean,
   supportsStrictMode: boolean,
-  supportsTogglingSuspense: boolean,
   supportsAdvancedProfiling: AdvancedProfiling,
 };
 
@@ -506,14 +505,6 @@ export default class Store extends EventEmitter<{
     );
   }
 
-  supportsTogglingSuspense(rootID: Element['id']): boolean {
-    const capabilities = this._rootIDToCapabilities.get(rootID);
-    if (capabilities === undefined) {
-      throw new Error(`No capabilities registered for root ${rootID}`);
-    }
-    return capabilities.supportsTogglingSuspense;
-  }
-
   // This build of DevTools supports the Timeline profiler.
   // This is a static flag, controlled by the Store config.
   get supportsTimeline(): boolean {
@@ -898,38 +889,48 @@ export default class Store extends EventEmitter<{
    * @param uniqueSuspendersOnly Filters out boundaries without unique suspenders
    */
   getSuspendableDocumentOrderSuspense(
-    rootID: Element['id'] | void,
     uniqueSuspendersOnly: boolean,
   ): $ReadOnlyArray<SuspenseNode['id']> {
-    if (rootID === undefined) {
-      return [];
-    }
-    const root = this.getElementByID(rootID);
-    if (root === null) {
-      return [];
-    }
-    if (!this.supportsTogglingSuspense(rootID)) {
+    const roots = this.roots;
+    if (roots.length === 0) {
       return [];
     }
+
     const list: SuspenseNode['id'][] = [];
-    const suspense = this.getSuspenseByID(rootID);
-    if (suspense !== null) {
-      const stack = [suspense];
-      while (stack.length > 0) {
-        const current = stack.pop();
-        if (current === undefined) {
-          continue;
-        }
-        // Include the root even if we won't show it suspended (because that's just blank).
-        // You should be able to see what suspended the shell.
-        if (!uniqueSuspendersOnly || current.hasUniqueSuspenders) {
-          list.push(current.id);
+    for (let i = 0; i < roots.length; i++) {
+      const rootID = roots[i];
+      const root = this.getElementByID(rootID);
+      if (root === null) {
+        continue;
+      }
+      // TODO: This includes boundaries that can't be suspended due to no support from the renderer.
+
+      const suspense = this.getSuspenseByID(rootID);
+      if (suspense !== null) {
+        if (list.length === 0) {
+          // start with an arbitrary root that will allow inspection of the Screen
+          list.push(suspense.id);
         }
-        // Add children in reverse order to maintain document order
-        for (let j = current.children.length - 1; j >= 0; j--) {
-          const childSuspense = this.getSuspenseByID(current.children[j]);
-          if (childSuspense !== null) {
-            stack.push(childSuspense);
+
+        const stack = [suspense];
+        while (stack.length > 0) {
+          const current = stack.pop();
+          if (current === undefined) {
+            continue;
+          }
+          if (
+            (!uniqueSuspendersOnly || current.hasUniqueSuspenders) &&
+            // Roots are already included as part of the Screen
+            current.id !== rootID
+          ) {
+            list.push(current.id);
+          }
+          // Add children in reverse order to maintain document order
+          for (let j = current.children.length - 1; j >= 0; j--) {
+            const childSuspense = this.getSuspenseByID(current.children[j]);
+            if (childSuspense !== null) {
+              stack.push(childSuspense);
+            }
           }
         }
       }
@@ -1191,7 +1192,6 @@ export default class Store extends EventEmitter<{
 
             let supportsStrictMode = false;
             let hasOwnerMetadata = false;
-            let supportsTogglingSuspense = false;
 
             // If we don't know the bridge protocol, guess that we're dealing with the latest.
             // If we do know it, we can take it into consideration when parsing operations.
@@ -1204,9 +1204,6 @@ export default class Store extends EventEmitter<{
 
               hasOwnerMetadata = operations[i] > 0;
               i++;
-
-              supportsTogglingSuspense = operations[i] > 0;
-              i++;
             }
 
             this._roots = this._roots.concat(id);
@@ -1215,7 +1212,6 @@ export default class Store extends EventEmitter<{
               supportsBasicProfiling,
               hasOwnerMetadata,
               supportsStrictMode,
-              supportsTogglingSuspense,
               supportsAdvancedProfiling,
             });
 
@@ -1561,7 +1557,12 @@ export default class Store extends EventEmitter<{
             if (name === null) {
               // The boundary isn't explicitly named.
               // Pick a sensible default.
-              name = this._guessSuspenseName(element);
+              if (parentID === 0) {
+                // For Roots we use their display name.
+                name = element.displayName;
+              } else {
+                name = this._guessSuspenseName(element);
+              }
             }
           }
 "
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/devtools/views/Profiler/CommitTreeBuilder.js,0,1,1,"@@ -209,7 +209,6 @@ function updateTree(
           i++; // Profiling flag
           i++; // supportsStrictMode flag
           i++; // hasOwnerMetadata flag
-          i++; // supportsTogglingSuspense flag
 
           if (__DEBUG__) {
             debug('Add', `new root fiber ${id}`);"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseBreadcrumbs.js,4,4,8,"@@ -25,7 +25,7 @@ export default function SuspenseBreadcrumbs(): React$Node {
   const store = useContext(StoreContext);
   const treeDispatch = useContext(TreeDispatcherContext);
   const suspenseTreeDispatch = useContext(SuspenseTreeDispatcherContext);
-  const {selectedSuspenseID, selectedRootID, lineage} = useContext(
+  const {selectedSuspenseID, lineage, roots} = useContext(
     SuspenseTreeStateContext,
   );
 
@@ -45,13 +45,13 @@ export default function SuspenseBreadcrumbs(): React$Node {
         // that rendered the whole screen. In laymans terms this is really ""Initial Paint"".
         // TODO: Once we add subtree selection, then the equivalent should be called
         // ""Transition"" since in that case it's really about a Transition within the page.
-        selectedRootID !== null ? (
+        roots.length > 0 ? (
           <li
             className={styles.SuspenseBreadcrumbsListItem}
-            aria-current={selectedSuspenseID === selectedRootID}>
+            aria-current=""true"">
             <button
               className={styles.SuspenseBreadcrumbsButton}
-              onClick={handleClick.bind(null, selectedRootID)}
+              onClick={handleClick.bind(null, roots[0])}
               type=""button"">
               Initial Paint
             </button>"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseRects.js,24,7,31,"@@ -278,11 +278,7 @@ function getDocumentBoundingRect(
   };
 }
 
-function SuspenseRectsShell({
-  rootID,
-}: {
-  rootID: SuspenseNode['id'],
-}): React$Node {
+function SuspenseRectsRoot({rootID}: {rootID: SuspenseNode['id']}): React$Node {
   const store = useContext(StoreContext);
   const root = store.getSuspenseByID(rootID);
   if (root === null) {
@@ -299,6 +295,8 @@ const ViewBox = createContext<Rect>((null: any));
 
 function SuspenseRectsContainer(): React$Node {
   const store = useContext(StoreContext);
+  const treeDispatch = useContext(TreeDispatcherContext);
+  const suspenseTreeDispatch = useContext(SuspenseTreeDispatcherContext);
   // TODO: This relies on a full re-render of all children when the Suspense tree changes.
   const {roots} = useContext(SuspenseTreeStateContext);
 
@@ -312,14 +310,33 @@ function SuspenseRectsContainer(): React$Node {
   const width = '100%';
   const aspectRatio = `1 / ${heightScale}`;
 
+  function handleClick(event: SyntheticMouseEvent) {
+    if (event.defaultPrevented) {
+      // Already clicked on an inner rect
+      return;
+    }
+    if (roots.length === 0) {
+      // Nothing to select
+      return;
+    }
+    const arbitraryRootID = roots[0];
+
+    event.preventDefault();
+    treeDispatch({type: 'SELECT_ELEMENT_BY_ID', payload: arbitraryRootID});
+    suspenseTreeDispatch({
+      type: 'SET_SUSPENSE_LINEAGE',
+      payload: arbitraryRootID,
+    });
+  }
+
   return (
-    <div className={styles.SuspenseRectsContainer}>
+    <div className={styles.SuspenseRectsContainer} onClick={handleClick}>
       <ViewBox.Provider value={boundingBox}>
         <div
           className={styles.SuspenseRectsViewBox}
           style={{aspectRatio, width}}>
           {roots.map(rootID => {
-            return <SuspenseRectsShell key={rootID} rootID={rootID} />;
+            return <SuspenseRectsRoot key={rootID} rootID={rootID} />;
           })}
         </div>
       </ViewBox.Provider>"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseTab.js,6,66,72,"@@ -34,13 +34,9 @@ import {
   SuspenseTreeStateContext,
 } from './SuspenseTreeContext';
 import {StoreContext, OptionsContext} from '../context';
-import {TreeDispatcherContext} from '../Components/TreeContext';
 import Button from '../Button';
 import Toggle from '../Toggle';
-import typeof {
-  SyntheticEvent,
-  SyntheticPointerEvent,
-} from 'react-dom-bindings/src/events/SyntheticEvent';
+import typeof {SyntheticPointerEvent} from 'react-dom-bindings/src/events/SyntheticEvent';
 import SettingsModal from 'react-devtools-shared/src/devtools/views/Settings/SettingsModal';
 import SettingsModalContextToggle from 'react-devtools-shared/src/devtools/views/Settings/SettingsModalContextToggle';
 import {SettingsModalContextController} from 'react-devtools-shared/src/devtools/views/Settings/SettingsModalContext';
@@ -71,20 +67,14 @@ function ToggleUniqueSuspenders() {
   const store = useContext(StoreContext);
   const suspenseTreeDispatch = useContext(SuspenseTreeDispatcherContext);
 
-  const {selectedRootID: rootID, uniqueSuspendersOnly} = useContext(
-    SuspenseTreeStateContext,
-  );
+  const {uniqueSuspendersOnly} = useContext(SuspenseTreeStateContext);
 
   function handleToggleUniqueSuspenders() {
     const nextUniqueSuspendersOnly = !uniqueSuspendersOnly;
-    const nextTimeline =
-      rootID === null
-        ? []
-        : // TODO: Handle different timeline modes (e.g. random order)
-          store.getSuspendableDocumentOrderSuspense(
-            rootID,
-            nextUniqueSuspendersOnly,
-          );
+    // TODO: Handle different timeline modes (e.g. random order)
+    const nextTimeline = store.getSuspendableDocumentOrderSuspense(
+      nextUniqueSuspendersOnly,
+    );
     suspenseTreeDispatch({
       type: 'SET_SUSPENSE_TIMELINE',
       payload: [nextTimeline, null, nextUniqueSuspendersOnly],
@@ -101,55 +91,6 @@ function ToggleUniqueSuspenders() {
   );
 }
 
-function SelectRoot() {
-  const store = useContext(StoreContext);
-  const {roots, selectedRootID, uniqueSuspendersOnly} = useContext(
-    SuspenseTreeStateContext,
-  );
-  const treeDispatch = useContext(TreeDispatcherContext);
-  const suspenseTreeDispatch = useContext(SuspenseTreeDispatcherContext);
-
-  function handleChange(event: SyntheticEvent) {
-    const newRootID = +event.currentTarget.value;
-    // TODO: scrollIntoView both suspense rects and host instance.
-    const nextTimeline = store.getSuspendableDocumentOrderSuspense(
-      newRootID,
-      uniqueSuspendersOnly,
-    );
-    suspenseTreeDispatch({
-      type: 'SET_SUSPENSE_TIMELINE',
-      payload: [nextTimeline, newRootID, uniqueSuspendersOnly],
-    });
-    if (nextTimeline.length > 0) {
-      const milestone = nextTimeline[nextTimeline.length - 1];
-      treeDispatch({type: 'SELECT_ELEMENT_BY_ID', payload: milestone});
-    }
-  }
-  return (
-    roots.length > 0 && (
-      <select
-        aria-label=""Select Suspense Root""
-        className={styles.SuspenseTimelineRootSwitcher}
-        onChange={handleChange}
-        value={selectedRootID === null ? -1 : selectedRootID}>
-        <option disabled={true} value={-1}>
-          ----
-        </option>
-        {roots.map(rootID => {
-          // TODO: Use name
-          const name = '#' + rootID;
-          // TODO: Highlight host on hover
-          return (
-            <option key={rootID} value={rootID}>
-              {name}
-            </option>
-          );
-        })}
-      </select>
-    )
-  );
-}
-
 function ToggleTreeList({
   dispatch,
   state,
@@ -427,7 +368,6 @@ function SuspenseTab(_: {}) {
               <div className={styles.SuspenseBreadcrumbs}>
                 <SuspenseBreadcrumbs />
               </div>
-              <SelectRoot />
               <div className={styles.VRule} />
               <ToggleUniqueSuspenders />
               {!hideSettings && <SettingsModalContextToggle />}"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseTimeline.js,5,37,42,"@@ -9,7 +9,7 @@
 
 import * as React from 'react';
 import {useContext, useEffect, useRef} from 'react';
-import {BridgeContext, StoreContext} from '../context';
+import {BridgeContext} from '../context';
 import {TreeDispatcherContext} from '../Components/TreeContext';
 import {useHighlightHostInstance, useScrollToHostInstance} from '../hooks';
 import {
@@ -23,20 +23,15 @@ import ButtonIcon from '../ButtonIcon';
 
 function SuspenseTimelineInput() {
   const bridge = useContext(BridgeContext);
-  const store = useContext(StoreContext);
   const treeDispatch = useContext(TreeDispatcherContext);
   const suspenseTreeDispatch = useContext(SuspenseTreeDispatcherContext);
   const {highlightHostInstance, clearHighlightHostInstance} =
     useHighlightHostInstance();
   const scrollToHostInstance = useScrollToHostInstance();
 
-  const {
-    selectedRootID: rootID,
-    timeline,
-    timelineIndex,
-    hoveredTimelineIndex,
-    playing,
-  } = useContext(SuspenseTreeStateContext);
+  const {timeline, timelineIndex, hoveredTimelineIndex, playing} = useContext(
+    SuspenseTreeStateContext,
+  );
 
   const min = 0;
   const max = timeline.length > 0 ? timeline.length - 1 : 0;
@@ -112,24 +107,12 @@ function SuspenseTimelineInput() {
   // For now we just exclude it from deps since we don't lint those anyway.
   function changeTimelineIndex(newIndex: number) {
     // Synchronize timeline index with what is resuspended.
-    if (rootID === null) {
-      return;
-    }
-    const rendererID = store.getRendererIDForElement(rootID);
-    if (rendererID === null) {
-      console.error(
-        `No renderer ID found for root element ${rootID} in suspense timeline.`,
-      );
-      return;
-    }
     // We suspend everything after the current selection. The root isn't showing
     // anything suspended in the root. The step after that should have one less
     // thing suspended. I.e. the first suspense boundary should be unsuspended
     // when it's selected. This also lets you show everything in the last step.
     const suspendedSet = timeline.slice(timelineIndex + 1);
     bridge.send('overrideSuspenseMilestone', {
-      rendererID,
-      rootID,
       suspendedSet,
     });
     if (isInitialMount.current) {
@@ -164,20 +147,6 @@ function SuspenseTimelineInput() {
     };
   }, [playing]);
 
-  if (rootID === null) {
-    return (
-      <div className={styles.SuspenseTimelineInput}>No root selected.</div>
-    );
-  }
-
-  if (!store.supportsTogglingSuspense(rootID)) {
-    return (
-      <div className={styles.SuspenseTimelineInput}>
-        Can't step through Suspense in production apps.
-      </div>
-    );
-  }
-
   if (timeline.length === 0) {
     return (
       <div className={styles.SuspenseTimelineInput}>
@@ -226,10 +195,9 @@ function SuspenseTimelineInput() {
 }
 
 export default function SuspenseTimeline(): React$Node {
-  const {selectedRootID} = useContext(SuspenseTreeStateContext);
   return (
     <div className={styles.SuspenseTimelineContainer}>
-      <SuspenseTimelineInput key={selectedRootID} />
+      <SuspenseTimelineInput />
     </div>
   );
 }"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/devtools/views/SuspenseTab/SuspenseTreeContext.js,24,83,107,"@@ -7,10 +7,7 @@
  * @flow
  */
 import type {ReactContext} from 'shared/ReactTypes';
-import type {
-  Element,
-  SuspenseNode,
-} from 'react-devtools-shared/src/frontend/types';
+import type {SuspenseNode} from 'react-devtools-shared/src/frontend/types';
 import type Store from '../../store';
 
 import * as React from 'react';
@@ -27,7 +24,6 @@ import {StoreContext} from '../context';
 export type SuspenseTreeState = {
   lineage: $ReadOnlyArray<SuspenseNode['id']> | null,
   roots: $ReadOnlyArray<SuspenseNode['id']>,
-  selectedRootID: SuspenseNode['id'] | null,
   selectedSuspenseID: SuspenseNode['id'] | null,
   timeline: $ReadOnlyArray<SuspenseNode['id']>,
   timelineIndex: number | -1,
@@ -107,60 +103,27 @@ type Props = {
   children: React$Node,
 };
 
-function getDefaultRootID(store: Store): Element['id'] | null {
-  const designatedRootID = store.roots.find(rootID => {
-    const suspense = store.getSuspenseByID(rootID);
-    return (
-      store.supportsTogglingSuspense(rootID) &&
-      suspense !== null &&
-      suspense.children.length > 1
-    );
-  });
-
-  return designatedRootID === undefined ? null : designatedRootID;
-}
-
 function getInitialState(store: Store): SuspenseTreeState {
-  let initialState: SuspenseTreeState;
   const uniqueSuspendersOnly = true;
-  const selectedRootID = getDefaultRootID(store);
-  // TODO: Default to nearest from inspected
-  if (selectedRootID === null) {
-    initialState = {
-      selectedSuspenseID: null,
-      lineage: null,
-      roots: store.roots,
-      selectedRootID,
-      timeline: [],
-      timelineIndex: -1,
-      hoveredTimelineIndex: -1,
-      uniqueSuspendersOnly,
-      playing: false,
-    };
-  } else {
-    const timeline = store.getSuspendableDocumentOrderSuspense(
-      selectedRootID,
-      uniqueSuspendersOnly,
-    );
-    const timelineIndex = timeline.length - 1;
-    const selectedSuspenseID =
-      timelineIndex === -1 ? null : timeline[timelineIndex];
-    const lineage =
-      selectedSuspenseID !== null
-        ? store.getSuspenseLineage(selectedSuspenseID)
-        : [];
-    initialState = {
-      selectedSuspenseID,
-      lineage,
-      roots: store.roots,
-      selectedRootID,
-      timeline,
-      timelineIndex,
-      hoveredTimelineIndex: -1,
-      uniqueSuspendersOnly,
-      playing: false,
-    };
-  }
+  const timeline =
+    store.getSuspendableDocumentOrderSuspense(uniqueSuspendersOnly);
+  const timelineIndex = timeline.length - 1;
+  const selectedSuspenseID =
+    timelineIndex === -1 ? null : timeline[timelineIndex];
+  const lineage =
+    selectedSuspenseID !== null
+      ? store.getSuspenseLineage(selectedSuspenseID)
+      : [];
+  const initialState: SuspenseTreeState = {
+    selectedSuspenseID,
+    lineage,
+    roots: store.roots,
+    timeline,
+    timelineIndex,
+    hoveredTimelineIndex: -1,
+    uniqueSuspendersOnly,
+    playing: false,
+  };
 
   return initialState;
 }
@@ -209,23 +172,10 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               selectedTimelineID = removedIDs.get(selectedTimelineID);
             }
 
-            let nextRootID = state.selectedRootID;
-            if (selectedTimelineID !== null && selectedTimelineID !== 0) {
-              nextRootID =
-                store.getSuspenseRootIDForSuspense(selectedTimelineID);
-            }
-            if (nextRootID === null) {
-              nextRootID = getDefaultRootID(store);
-            }
-
-            const nextTimeline =
-              nextRootID === null
-                ? []
-                : // TODO: Handle different timeline modes (e.g. random order)
-                  store.getSuspendableDocumentOrderSuspense(
-                    nextRootID,
-                    state.uniqueSuspendersOnly,
-                  );
+            // TODO: Handle different timeline modes (e.g. random order)
+            const nextTimeline = store.getSuspendableDocumentOrderSuspense(
+              state.uniqueSuspendersOnly,
+            );
 
             let nextTimelineIndex =
               selectedTimelineID === null || nextTimeline.length === 0
@@ -250,35 +200,28 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               ...state,
               lineage: nextLineage,
               roots: store.roots,
-              selectedRootID: nextRootID,
               selectedSuspenseID,
               timeline: nextTimeline,
               timelineIndex: nextTimelineIndex,
             };
           }
           case 'SELECT_SUSPENSE_BY_ID': {
             const selectedSuspenseID = action.payload;
-            const selectedRootID =
-              store.getSuspenseRootIDForSuspense(selectedSuspenseID);
 
             return {
               ...state,
               selectedSuspenseID,
-              selectedRootID,
               playing: false, // pause
             };
           }
           case 'SET_SUSPENSE_LINEAGE': {
             const suspenseID = action.payload;
             const lineage = store.getSuspenseLineage(suspenseID);
-            const selectedRootID =
-              store.getSuspenseRootIDForSuspense(suspenseID);
 
             return {
               ...state,
               lineage,
               selectedSuspenseID: suspenseID,
-              selectedRootID,
               playing: false, // pause
             };
           }
@@ -316,8 +259,6 @@ function SuspenseTreeContextController({children}: Props): React.Node {
               ...state,
               selectedSuspenseID: nextSelectedSuspenseID,
               lineage: nextLineage,
-              selectedRootID:
-                nextRootID === null ? state.selectedRootID : nextRootID,
               timeline: nextTimeline,
               timelineIndex: nextMilestoneIndex,
               uniqueSuspendersOnly: nextUniqueSuspendersOnly,"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/devtools/views/hooks.js,34,10,44,"@@ -353,20 +353,44 @@ export function useHighlightHostInstance(): {
   const highlightHostInstance = useCallback(
     (id: number, scrollIntoView?: boolean = false) => {
       const element = store.getElementByID(id);
-      const rendererID = store.getRendererIDForElement(id);
-      if (element !== null && rendererID !== null) {
+      if (element !== null) {
+        const isRoot = element.parentID === 0;
         let displayName = element.displayName;
         if (displayName !== null && element.nameProp !== null) {
           displayName += ` name=""${element.nameProp}""`;
         }
-        bridge.send('highlightHostInstance', {
-          displayName,
-          hideAfterTimeout: false,
-          id,
-          openBuiltinElementsPanel: false,
-          rendererID,
-          scrollIntoView: scrollIntoView,
-        });
+        if (isRoot) {
+          // Inspect screen
+          const elements: Array<{rendererID: number, id: number}> = [];
+
+          for (let i = 0; i < store.roots.length; i++) {
+            const rootID = store.roots[i];
+            const rendererID = store.getRendererIDForElement(rootID);
+            if (rendererID === null) {
+              continue;
+            }
+            elements.push({rendererID, id: rootID});
+          }
+
+          bridge.send('highlightHostInstances', {
+            displayName,
+            hideAfterTimeout: false,
+            elements,
+            scrollIntoView: scrollIntoView,
+          });
+        } else {
+          const rendererID = store.getRendererIDForElement(id);
+          if (rendererID !== null) {
+            bridge.send('highlightHostInstance', {
+              displayName,
+              hideAfterTimeout: false,
+              id,
+              openBuiltinElementsPanel: false,
+              rendererID,
+              scrollIntoView: scrollIntoView,
+            });
+          }
+        }
       }
     },
     [store, bridge],"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/inspectedElementMutableSource.js,21,10,31,"@@ -12,6 +12,7 @@ import {
   convertInspectedElementBackendToFrontend,
   hydrateHelper,
   inspectElement as inspectElementAPI,
+  inspectScreen as inspectScreenAPI,
 } from 'react-devtools-shared/src/backendAPI';
 import {fillInPath} from 'react-devtools-shared/src/hydration';
 
@@ -57,21 +58,31 @@ export function inspectElement(
   rendererID: number,
   shouldListenToPauseEvents: boolean = false,
 ): Promise<InspectElementReturnType> {
-  const {id} = element;
+  const {id, parentID} = element;
 
   // This could indicate that the DevTools UI has been closed and reopened.
   // The in-memory cache will be clear but the backend still thinks we have cached data.
   // In this case, we need to tell it to resend the full data.
   const forceFullData = !inspectedElementCache.has(id);
-
-  return inspectElementAPI(
-    bridge,
-    forceFullData,
-    id,
-    path,
-    rendererID,
-    shouldListenToPauseEvents,
-  ).then((data: any) => {
+  const isRoot = parentID === 0;
+  const promisedElement = isRoot
+    ? inspectScreenAPI(
+        bridge,
+        forceFullData,
+        id,
+        path,
+        shouldListenToPauseEvents,
+      )
+    : inspectElementAPI(
+        bridge,
+        forceFullData,
+        id,
+        path,
+        rendererID,
+        shouldListenToPauseEvents,
+      );
+
+  return promisedElement.then((data: any) => {
     const {type} = data;
 
     let inspectedElement;"
facebook/react,4a28227960202539f329338f62d33973e76b32d8,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:18:15Z,[DevTools] Inspect the Initial Paint when inspecting a Root (#34454),packages/react-devtools-shared/src/utils.js,0,1,1,"@@ -262,7 +262,6 @@ export function printOperationsArray(operations: Array<number>) {
           i++; // supportsProfiling
           i++; // supportsStrictMode
           i++; // hasOwnerMetadata
-          i++; // supportsTogglingSuspense
         } else {
           const parentID = ((operations[i]: any): number);
           i++;"
facebook/react,e4a27db2836981b3851bb981a3dec93f5a373e32,"Sebastian ""Sebbie"" Silbermann",2025-10-02T17:13:52Z,[DevTools] Defer Suspense tab to 19.3.0-canary (#34688),packages/react-devtools-shared/src/backend/agent.js,1,1,2,"@@ -739,7 +739,7 @@ export default class Agent extends EventEmitter<{
     if (renderer !== null) {
       const devRenderer = renderer.bundleType === 1;
       const enableSuspenseTab =
-        devRenderer && gte(renderer.version, '19.2.0-canary');
+        devRenderer && gte(renderer.version, '19.3.0-canary');
       if (enableSuspenseTab) {
         this._bridge.send('enableSuspenseTab');
       }"
facebook/react,57d5a59748bbec1b507bb778c9fbe4bcb82b0a94,Joseph Savona,2025-10-02T16:48:52Z,"[compiler] enablePreserveMemo treats manual deps as non-nullable (#34503)

The `@enablePreserveExistingMemoizationGuarantees` mode can still fail
to preserve manual memoization due to mismtached dependencies.
Specifically, where the user's dependencies are more precise than the
compiler infers bc the compiler is being conservative about what might
be nullable. In this mode though we're intentionally using information
from the manual memoization and can also rely on the deps as a signal
for what's non-nullable.

The idea of the PR is that we treat manual memo deps just like other
inferred-as-non-nullable objects during PropagateScopeDeps. We're
careful to not treat the full path as non-nullable, only up to the last
property index. So `x.y.z` as a manual dep treats `x` and `x.y` as
non-nullable, allowing us to preserve a conditional dependency on
`x.y.z`.

Optionals within manual dependencies are a bit trickier and aren't
handled yet, but hopefully that's less common and something we can
improve in a follow-up. Not handling them just means that developers may
hit false positives on validating existing memoization if they use
optional chains in manual dependencies.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34503).
* #34689
* __->__ #34503",compiler/packages/babel-plugin-react-compiler/src/HIR/CollectHoistablePropertyLoads.ts,26,0,26,"@@ -454,6 +454,32 @@ function collectNonNullsInBlocks(
             assumedNonNullObjects.add(entry);
           }
         }
+      } else if (
+        fn.env.config.enablePreserveExistingMemoizationGuarantees &&
+        instr.value.kind === 'StartMemoize' &&
+        instr.value.deps != null
+      ) {
+        for (const dep of instr.value.deps) {
+          if (dep.root.kind === 'NamedLocal') {
+            if (
+              !isImmutableAtInstr(dep.root.value.identifier, instr.id, context)
+            ) {
+              continue;
+            }
+            for (let i = 0; i < dep.path.length; i++) {
+              const pathEntry = dep.path[i]!;
+              if (pathEntry.optional) {
+                break;
+              }
+              const depNode = context.registry.getOrCreateProperty({
+                identifier: dep.root.value.identifier,
+                path: dep.path.slice(0, i),
+                reactive: dep.root.value.reactive,
+              });
+              assumedNonNullObjects.add(depNode);
+            }
+          }
+        }
       }
     }
 "
facebook/react,57d5a59748bbec1b507bb778c9fbe4bcb82b0a94,Joseph Savona,2025-10-02T16:48:52Z,"[compiler] enablePreserveMemo treats manual deps as non-nullable (#34503)

The `@enablePreserveExistingMemoizationGuarantees` mode can still fail
to preserve manual memoization due to mismtached dependencies.
Specifically, where the user's dependencies are more precise than the
compiler infers bc the compiler is being conservative about what might
be nullable. In this mode though we're intentionally using information
from the manual memoization and can also rely on the deps as a signal
for what's non-nullable.

The idea of the PR is that we treat manual memo deps just like other
inferred-as-non-nullable objects during PropagateScopeDeps. We're
careful to not treat the full path as non-nullable, only up to the last
property index. So `x.y.z` as a manual dep treats `x` and `x.y` as
non-nullable, allowing us to preserve a conditional dependency on
`x.y.z`.

Optionals within manual dependencies are a bit trickier and aren't
handled yet, but hopefully that's less common and something we can
improve in a follow-up. Not handling them just means that developers may
hit false positives on validating existing memoization if they use
optional chains in manual dependencies.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34503).
* #34689
* __->__ #34503",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-preserve-memo-deps-mixed-optional-nonoptional-property-chain.expect.md,91,0,91,"@@ -0,0 +1,91 @@
+
+## Input
+
+```javascript
+// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import {useMemo} from 'react';
+import {identity, ValidateMemoization} from 'shared-runtime';
+
+function Component({x}) {
+  const object = useMemo(() => {
+    return identity({
+      callback: () => {
+        // This is a bug in our dependency inference: we stop capturing dependencies
+        // after x.a.b?.c. But what this dependency is telling us is that if `x.a.b`
+        // was non-nullish, then we can access `.c.d?.e`. Thus we should take the
+        // full property chain, exactly as-is with optionals/non-optionals, as a
+        // dependency
+        return identity(x.a.b?.c.d?.e);
+      },
+    });
+  }, [x.a.b?.c.d?.e]);
+  const result = useMemo(() => {
+    return [object.callback()];
+  }, [object]);
+  return <Inner x={x} result={result} />;
+}
+
+function Inner({x, result}) {
+  'use no memo';
+  return <ValidateMemoization inputs={[x.y.z]} output={result} />;
+}
+
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [{x: {y: {z: 42}}}],
+  sequentialRenders: [
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+  ],
+};
+
+```
+
+
+## Error
+
+```
+Found 1 error:
+
+Compilation Skipped: Existing memoization could not be preserved
+
+React Compiler has skipped optimizing this component because the existing manual memoization could not be preserved. The inferred dependencies did not match the manually specified dependencies, which could cause the value to change more or less frequently than expected. The inferred dependency was `x.a.b?.c`, but the source dependencies were [x.a.b?.c.d?.e]. Inferred less specific property than source.
+
+error.todo-preserve-memo-deps-mixed-optional-nonoptional-property-chain.ts:7:25
+   5 |
+   6 | function Component({x}) {
+>  7 |   const object = useMemo(() => {
+     |                          ^^^^^^^
+>  8 |     return identity({
+     | ^^^^^^^^^^^^^^^^^^^^^
+>  9 |       callback: () => {
+     | ^^^^^^^^^^^^^^^^^^^^^
+> 10 |         // This is a bug in our dependency inference: we stop capturing dependencies
+     | ^^^^^^^^^^^^^^^^^^^^^
+> 11 |         // after x.a.b?.c. But what this dependency is telling us is that if `x.a.b`
+     | ^^^^^^^^^^^^^^^^^^^^^
+> 12 |         // was non-nullish, then we can access `.c.d?.e`. Thus we should take the
+     | ^^^^^^^^^^^^^^^^^^^^^
+> 13 |         // full property chain, exactly as-is with optionals/non-optionals, as a
+     | ^^^^^^^^^^^^^^^^^^^^^
+> 14 |         // dependency
+     | ^^^^^^^^^^^^^^^^^^^^^
+> 15 |         return identity(x.a.b?.c.d?.e);
+     | ^^^^^^^^^^^^^^^^^^^^^
+> 16 |       },
+     | ^^^^^^^^^^^^^^^^^^^^^
+> 17 |     });
+     | ^^^^^^^^^^^^^^^^^^^^^
+> 18 |   }, [x.a.b?.c.d?.e]);
+     | ^^^^ Could not preserve existing manual memoization
+  19 |   const result = useMemo(() => {
+  20 |     return [object.callback()];
+  21 |   }, [object]);
+```
+          
+      
\ No newline at end of file"
facebook/react,57d5a59748bbec1b507bb778c9fbe4bcb82b0a94,Joseph Savona,2025-10-02T16:48:52Z,"[compiler] enablePreserveMemo treats manual deps as non-nullable (#34503)

The `@enablePreserveExistingMemoizationGuarantees` mode can still fail
to preserve manual memoization due to mismtached dependencies.
Specifically, where the user's dependencies are more precise than the
compiler infers bc the compiler is being conservative about what might
be nullable. In this mode though we're intentionally using information
from the manual memoization and can also rely on the deps as a signal
for what's non-nullable.

The idea of the PR is that we treat manual memo deps just like other
inferred-as-non-nullable objects during PropagateScopeDeps. We're
careful to not treat the full path as non-nullable, only up to the last
property index. So `x.y.z` as a manual dep treats `x` and `x.y` as
non-nullable, allowing us to preserve a conditional dependency on
`x.y.z`.

Optionals within manual dependencies are a bit trickier and aren't
handled yet, but hopefully that's less common and something we can
improve in a follow-up. Not handling them just means that developers may
hit false positives on validating existing memoization if they use
optional chains in manual dependencies.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34503).
* #34689
* __->__ #34503",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/error.todo-preserve-memo-deps-mixed-optional-nonoptional-property-chain.js,41,0,41,"@@ -0,0 +1,41 @@
+// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import {useMemo} from 'react';
+import {identity, ValidateMemoization} from 'shared-runtime';
+
+function Component({x}) {
+  const object = useMemo(() => {
+    return identity({
+      callback: () => {
+        // This is a bug in our dependency inference: we stop capturing dependencies
+        // after x.a.b?.c. But what this dependency is telling us is that if `x.a.b`
+        // was non-nullish, then we can access `.c.d?.e`. Thus we should take the
+        // full property chain, exactly as-is with optionals/non-optionals, as a
+        // dependency
+        return identity(x.a.b?.c.d?.e);
+      },
+    });
+  }, [x.a.b?.c.d?.e]);
+  const result = useMemo(() => {
+    return [object.callback()];
+  }, [object]);
+  return <Inner x={x} result={result} />;
+}
+
+function Inner({x, result}) {
+  'use no memo';
+  return <ValidateMemoization inputs={[x.y.z]} output={result} />;
+}
+
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [{x: {y: {z: 42}}}],
+  sequentialRenders: [
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+  ],
+};"
facebook/react,57d5a59748bbec1b507bb778c9fbe4bcb82b0a94,Joseph Savona,2025-10-02T16:48:52Z,"[compiler] enablePreserveMemo treats manual deps as non-nullable (#34503)

The `@enablePreserveExistingMemoizationGuarantees` mode can still fail
to preserve manual memoization due to mismtached dependencies.
Specifically, where the user's dependencies are more precise than the
compiler infers bc the compiler is being conservative about what might
be nullable. In this mode though we're intentionally using information
from the manual memoization and can also rely on the deps as a signal
for what's non-nullable.

The idea of the PR is that we treat manual memo deps just like other
inferred-as-non-nullable objects during PropagateScopeDeps. We're
careful to not treat the full path as non-nullable, only up to the last
property index. So `x.y.z` as a manual dep treats `x` and `x.y` as
non-nullable, allowing us to preserve a conditional dependency on
`x.y.z`.

Optionals within manual dependencies are a bit trickier and aren't
handled yet, but hopefully that's less common and something we can
improve in a follow-up. Not handling them just means that developers may
hit false positives on validating existing memoization if they use
optional chains in manual dependencies.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34503).
* #34689
* __->__ #34503",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-deps-conditional-property-chain-less-precise-deps.expect.md,122,0,122,"@@ -0,0 +1,122 @@
+
+## Input
+
+```javascript
+// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import {useMemo} from 'react';
+import {identity, ValidateMemoization} from 'shared-runtime';
+
+function Component({x}) {
+  const object = useMemo(() => {
+    return identity({
+      callback: () => {
+        return identity(x.y.z); // accesses more levels of properties than the manual memo
+      },
+    });
+    // x.y as a manual dep only tells us that x is non-nullable, not that x.y is non-nullable
+    // we can only take a dep on x.y, not x.y.z
+  }, [x.y]);
+  const result = useMemo(() => {
+    return [object.callback()];
+  }, [object]);
+  return <ValidateMemoization inputs={[x.y]} output={result} />;
+}
+
+const input1 = {x: {y: {z: 42}}};
+const input1b = {x: {y: {z: 42}}};
+const input2 = {x: {y: {z: 3.14}}};
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [input1],
+  sequentialRenders: [
+    input1,
+    input1,
+    input1b, // should reset even though .z didn't change
+    input1,
+    input2,
+  ],
+};
+
+```
+
+## Code
+
+```javascript
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import { useMemo } from ""react"";
+import { identity, ValidateMemoization } from ""shared-runtime"";
+
+function Component(t0) {
+  const $ = _c(11);
+  const { x } = t0;
+  let t1;
+  if ($[0] !== x.y) {
+    t1 = identity({ callback: () => identity(x.y.z) });
+    $[0] = x.y;
+    $[1] = t1;
+  } else {
+    t1 = $[1];
+  }
+  const object = t1;
+  let t2;
+  if ($[2] !== object) {
+    t2 = object.callback();
+    $[2] = object;
+    $[3] = t2;
+  } else {
+    t2 = $[3];
+  }
+  let t3;
+  if ($[4] !== t2) {
+    t3 = [t2];
+    $[4] = t2;
+    $[5] = t3;
+  } else {
+    t3 = $[5];
+  }
+  const result = t3;
+  let t4;
+  if ($[6] !== x.y) {
+    t4 = [x.y];
+    $[6] = x.y;
+    $[7] = t4;
+  } else {
+    t4 = $[7];
+  }
+  let t5;
+  if ($[8] !== result || $[9] !== t4) {
+    t5 = <ValidateMemoization inputs={t4} output={result} />;
+    $[8] = result;
+    $[9] = t4;
+    $[10] = t5;
+  } else {
+    t5 = $[10];
+  }
+  return t5;
+}
+
+const input1 = { x: { y: { z: 42 } } };
+const input1b = { x: { y: { z: 42 } } };
+const input2 = { x: { y: { z: 3.14 } } };
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [input1],
+  sequentialRenders: [
+    input1,
+    input1,
+    input1b, // should reset even though .z didn't change
+    input1,
+    input2,
+  ],
+};
+
+```
+      
+### Eval output
+(kind: ok) <div>{""inputs"":[{""z"":42}],""output"":[42]}</div>
+<div>{""inputs"":[{""z"":42}],""output"":[42]}</div>
+<div>{""inputs"":[{""z"":42}],""output"":[42]}</div>
+<div>{""inputs"":[{""z"":42}],""output"":[42]}</div>
+<div>{""inputs"":[{""z"":3.14}],""output"":[3.14]}</div>
\ No newline at end of file"
facebook/react,57d5a59748bbec1b507bb778c9fbe4bcb82b0a94,Joseph Savona,2025-10-02T16:48:52Z,"[compiler] enablePreserveMemo treats manual deps as non-nullable (#34503)

The `@enablePreserveExistingMemoizationGuarantees` mode can still fail
to preserve manual memoization due to mismtached dependencies.
Specifically, where the user's dependencies are more precise than the
compiler infers bc the compiler is being conservative about what might
be nullable. In this mode though we're intentionally using information
from the manual memoization and can also rely on the deps as a signal
for what's non-nullable.

The idea of the PR is that we treat manual memo deps just like other
inferred-as-non-nullable objects during PropagateScopeDeps. We're
careful to not treat the full path as non-nullable, only up to the last
property index. So `x.y.z` as a manual dep treats `x` and `x.y` as
non-nullable, allowing us to preserve a conditional dependency on
`x.y.z`.

Optionals within manual dependencies are a bit trickier and aren't
handled yet, but hopefully that's less common and something we can
improve in a follow-up. Not handling them just means that developers may
hit false positives on validating existing memoization if they use
optional chains in manual dependencies.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34503).
* #34689
* __->__ #34503",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-deps-conditional-property-chain-less-precise-deps.js,35,0,35,"@@ -0,0 +1,35 @@
+// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import {useMemo} from 'react';
+import {identity, ValidateMemoization} from 'shared-runtime';
+
+function Component({x}) {
+  const object = useMemo(() => {
+    return identity({
+      callback: () => {
+        return identity(x.y.z); // accesses more levels of properties than the manual memo
+      },
+    });
+    // x.y as a manual dep only tells us that x is non-nullable, not that x.y is non-nullable
+    // we can only take a dep on x.y, not x.y.z
+  }, [x.y]);
+  const result = useMemo(() => {
+    return [object.callback()];
+  }, [object]);
+  return <ValidateMemoization inputs={[x.y]} output={result} />;
+}
+
+const input1 = {x: {y: {z: 42}}};
+const input1b = {x: {y: {z: 42}}};
+const input2 = {x: {y: {z: 3.14}}};
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [input1],
+  sequentialRenders: [
+    input1,
+    input1,
+    input1b, // should reset even though .z didn't change
+    input1,
+    input2,
+  ],
+};"
facebook/react,57d5a59748bbec1b507bb778c9fbe4bcb82b0a94,Joseph Savona,2025-10-02T16:48:52Z,"[compiler] enablePreserveMemo treats manual deps as non-nullable (#34503)

The `@enablePreserveExistingMemoizationGuarantees` mode can still fail
to preserve manual memoization due to mismtached dependencies.
Specifically, where the user's dependencies are more precise than the
compiler infers bc the compiler is being conservative about what might
be nullable. In this mode though we're intentionally using information
from the manual memoization and can also rely on the deps as a signal
for what's non-nullable.

The idea of the PR is that we treat manual memo deps just like other
inferred-as-non-nullable objects during PropagateScopeDeps. We're
careful to not treat the full path as non-nullable, only up to the last
property index. So `x.y.z` as a manual dep treats `x` and `x.y` as
non-nullable, allowing us to preserve a conditional dependency on
`x.y.z`.

Optionals within manual dependencies are a bit trickier and aren't
handled yet, but hopefully that's less common and something we can
improve in a follow-up. Not handling them just means that developers may
hit false positives on validating existing memoization if they use
optional chains in manual dependencies.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34503).
* #34689
* __->__ #34503",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-deps-conditional-property-chain.expect.md,117,0,117,"@@ -0,0 +1,117 @@
+
+## Input
+
+```javascript
+// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import {useMemo} from 'react';
+import {identity, ValidateMemoization} from 'shared-runtime';
+
+function Component({x}) {
+  const object = useMemo(() => {
+    return identity({
+      callback: () => {
+        return identity(x.y.z);
+      },
+    });
+  }, [x.y.z]);
+  const result = useMemo(() => {
+    return [object.callback()];
+  }, [object]);
+  return <ValidateMemoization inputs={[x.y.z]} output={result} />;
+}
+
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [{x: {y: {z: 42}}}],
+  sequentialRenders: [
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+  ],
+};
+
+```
+
+## Code
+
+```javascript
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import { useMemo } from ""react"";
+import { identity, ValidateMemoization } from ""shared-runtime"";
+
+function Component(t0) {
+  const $ = _c(11);
+  const { x } = t0;
+  let t1;
+  if ($[0] !== x.y.z) {
+    t1 = identity({ callback: () => identity(x.y.z) });
+    $[0] = x.y.z;
+    $[1] = t1;
+  } else {
+    t1 = $[1];
+  }
+  const object = t1;
+  let t2;
+  if ($[2] !== object) {
+    t2 = object.callback();
+    $[2] = object;
+    $[3] = t2;
+  } else {
+    t2 = $[3];
+  }
+  let t3;
+  if ($[4] !== t2) {
+    t3 = [t2];
+    $[4] = t2;
+    $[5] = t3;
+  } else {
+    t3 = $[5];
+  }
+  const result = t3;
+  let t4;
+  if ($[6] !== x.y.z) {
+    t4 = [x.y.z];
+    $[6] = x.y.z;
+    $[7] = t4;
+  } else {
+    t4 = $[7];
+  }
+  let t5;
+  if ($[8] !== result || $[9] !== t4) {
+    t5 = <ValidateMemoization inputs={t4} output={result} />;
+    $[8] = result;
+    $[9] = t4;
+    $[10] = t5;
+  } else {
+    t5 = $[10];
+  }
+  return t5;
+}
+
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [{ x: { y: { z: 42 } } }],
+  sequentialRenders: [
+    { x: { y: { z: 42 } } },
+    { x: { y: { z: 42 } } },
+    { x: { y: { z: 3.14 } } },
+    { x: { y: { z: 42 } } },
+    { x: { y: { z: 3.14 } } },
+    { x: { y: { z: 42 } } },
+  ],
+};
+
+```
+      
+### Eval output
+(kind: ok) <div>{""inputs"":[42],""output"":[42]}</div>
+<div>{""inputs"":[42],""output"":[42]}</div>
+<div>{""inputs"":[3.14],""output"":[3.14]}</div>
+<div>{""inputs"":[42],""output"":[42]}</div>
+<div>{""inputs"":[3.14],""output"":[3.14]}</div>
+<div>{""inputs"":[42],""output"":[42]}</div>
\ No newline at end of file"
facebook/react,57d5a59748bbec1b507bb778c9fbe4bcb82b0a94,Joseph Savona,2025-10-02T16:48:52Z,"[compiler] enablePreserveMemo treats manual deps as non-nullable (#34503)

The `@enablePreserveExistingMemoizationGuarantees` mode can still fail
to preserve manual memoization due to mismtached dependencies.
Specifically, where the user's dependencies are more precise than the
compiler infers bc the compiler is being conservative about what might
be nullable. In this mode though we're intentionally using information
from the manual memoization and can also rely on the deps as a signal
for what's non-nullable.

The idea of the PR is that we treat manual memo deps just like other
inferred-as-non-nullable objects during PropagateScopeDeps. We're
careful to not treat the full path as non-nullable, only up to the last
property index. So `x.y.z` as a manual dep treats `x` and `x.y` as
non-nullable, allowing us to preserve a conditional dependency on
`x.y.z`.

Optionals within manual dependencies are a bit trickier and aren't
handled yet, but hopefully that's less common and something we can
improve in a follow-up. Not handling them just means that developers may
hit false positives on validating existing memoization if they use
optional chains in manual dependencies.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34503).
* #34689
* __->__ #34503",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-deps-conditional-property-chain.js,31,0,31,"@@ -0,0 +1,31 @@
+// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import {useMemo} from 'react';
+import {identity, ValidateMemoization} from 'shared-runtime';
+
+function Component({x}) {
+  const object = useMemo(() => {
+    return identity({
+      callback: () => {
+        return identity(x.y.z);
+      },
+    });
+  }, [x.y.z]);
+  const result = useMemo(() => {
+    return [object.callback()];
+  }, [object]);
+  return <ValidateMemoization inputs={[x.y.z]} output={result} />;
+}
+
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [{x: {y: {z: 42}}}],
+  sequentialRenders: [
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+  ],
+};"
facebook/react,57d5a59748bbec1b507bb778c9fbe4bcb82b0a94,Joseph Savona,2025-10-02T16:48:52Z,"[compiler] enablePreserveMemo treats manual deps as non-nullable (#34503)

The `@enablePreserveExistingMemoizationGuarantees` mode can still fail
to preserve manual memoization due to mismtached dependencies.
Specifically, where the user's dependencies are more precise than the
compiler infers bc the compiler is being conservative about what might
be nullable. In this mode though we're intentionally using information
from the manual memoization and can also rely on the deps as a signal
for what's non-nullable.

The idea of the PR is that we treat manual memo deps just like other
inferred-as-non-nullable objects during PropagateScopeDeps. We're
careful to not treat the full path as non-nullable, only up to the last
property index. So `x.y.z` as a manual dep treats `x` and `x.y` as
non-nullable, allowing us to preserve a conditional dependency on
`x.y.z`.

Optionals within manual dependencies are a bit trickier and aren't
handled yet, but hopefully that's less common and something we can
improve in a follow-up. Not handling them just means that developers may
hit false positives on validating existing memoization if they use
optional chains in manual dependencies.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34503).
* #34689
* __->__ #34503",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-deps-optional-property-chain.expect.md,125,0,125,"@@ -0,0 +1,125 @@
+
+## Input
+
+```javascript
+// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import {useMemo} from 'react';
+import {identity, ValidateMemoization} from 'shared-runtime';
+
+function Component({x, y, z}) {
+  const object = useMemo(() => {
+    return identity({
+      callback: () => {
+        return identity(x?.y?.z, y.a?.b, z.a.b?.c);
+      },
+    });
+  }, [x?.y?.z, y.a?.b, z.a.b?.c]);
+  const result = useMemo(() => {
+    return [object.callback()];
+  }, [object]);
+  return <Inner x={x} result={result} />;
+}
+
+function Inner({x, result}) {
+  'use no memo';
+  return <ValidateMemoization inputs={[x.y.z]} output={result} />;
+}
+
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [{x: {y: {z: 42}}}],
+  sequentialRenders: [
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+  ],
+};
+
+```
+
+## Code
+
+```javascript
+import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import { useMemo } from ""react"";
+import { identity, ValidateMemoization } from ""shared-runtime"";
+
+function Component(t0) {
+  const $ = _c(11);
+  const { x, y, z } = t0;
+
+  x?.y?.z;
+  y.a?.b;
+  z.a.b?.c;
+  let t1;
+  if ($[0] !== x?.y?.z || $[1] !== y.a?.b || $[2] !== z.a.b?.c) {
+    t1 = identity({ callback: () => identity(x?.y?.z, y.a?.b, z.a.b?.c) });
+    $[0] = x?.y?.z;
+    $[1] = y.a?.b;
+    $[2] = z.a.b?.c;
+    $[3] = t1;
+  } else {
+    t1 = $[3];
+  }
+  const object = t1;
+  let t2;
+  if ($[4] !== object) {
+    t2 = object.callback();
+    $[4] = object;
+    $[5] = t2;
+  } else {
+    t2 = $[5];
+  }
+  let t3;
+  if ($[6] !== t2) {
+    t3 = [t2];
+    $[6] = t2;
+    $[7] = t3;
+  } else {
+    t3 = $[7];
+  }
+  const result = t3;
+  let t4;
+  if ($[8] !== result || $[9] !== x) {
+    t4 = <Inner x={x} result={result} />;
+    $[8] = result;
+    $[9] = x;
+    $[10] = t4;
+  } else {
+    t4 = $[10];
+  }
+  return t4;
+}
+
+function Inner({ x, result }) {
+  ""use no memo"";
+  return <ValidateMemoization inputs={[x.y.z]} output={result} />;
+}
+
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [{ x: { y: { z: 42 } } }],
+  sequentialRenders: [
+    { x: { y: { z: 42 } } },
+    { x: { y: { z: 42 } } },
+    { x: { y: { z: 3.14 } } },
+    { x: { y: { z: 42 } } },
+    { x: { y: { z: 3.14 } } },
+    { x: { y: { z: 42 } } },
+  ],
+};
+
+```
+      
+### Eval output
+(kind: ok) [[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]]
+[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]]
+[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]]
+[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]]
+[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]]
+[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]]
\ No newline at end of file"
facebook/react,57d5a59748bbec1b507bb778c9fbe4bcb82b0a94,Joseph Savona,2025-10-02T16:48:52Z,"[compiler] enablePreserveMemo treats manual deps as non-nullable (#34503)

The `@enablePreserveExistingMemoizationGuarantees` mode can still fail
to preserve manual memoization due to mismtached dependencies.
Specifically, where the user's dependencies are more precise than the
compiler infers bc the compiler is being conservative about what might
be nullable. In this mode though we're intentionally using information
from the manual memoization and can also rely on the deps as a signal
for what's non-nullable.

The idea of the PR is that we treat manual memo deps just like other
inferred-as-non-nullable objects during PropagateScopeDeps. We're
careful to not treat the full path as non-nullable, only up to the last
property index. So `x.y.z` as a manual dep treats `x` and `x.y` as
non-nullable, allowing us to preserve a conditional dependency on
`x.y.z`.

Optionals within manual dependencies are a bit trickier and aren't
handled yet, but hopefully that's less common and something we can
improve in a follow-up. Not handling them just means that developers may
hit false positives on validating existing memoization if they use
optional chains in manual dependencies.

---
[//]: # (BEGIN SAPLING FOOTER)
Stack created with [Sapling](https://sapling-scm.com). Best reviewed
with [ReviewStack](https://reviewstack.dev/facebook/react/pull/34503).
* #34689
* __->__ #34503",compiler/packages/babel-plugin-react-compiler/src/__tests__/fixtures/compiler/preserve-memo-deps-optional-property-chain.js,36,0,36,"@@ -0,0 +1,36 @@
+// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false
+
+import {useMemo} from 'react';
+import {identity, ValidateMemoization} from 'shared-runtime';
+
+function Component({x, y, z}) {
+  const object = useMemo(() => {
+    return identity({
+      callback: () => {
+        return identity(x?.y?.z, y.a?.b, z.a.b?.c);
+      },
+    });
+  }, [x?.y?.z, y.a?.b, z.a.b?.c]);
+  const result = useMemo(() => {
+    return [object.callback()];
+  }, [object]);
+  return <Inner x={x} result={result} />;
+}
+
+function Inner({x, result}) {
+  'use no memo';
+  return <ValidateMemoization inputs={[x.y.z]} output={result} />;
+}
+
+export const FIXTURE_ENTRYPOINT = {
+  fn: Component,
+  params: [{x: {y: {z: 42}}}],
+  sequentialRenders: [
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+    {x: {y: {z: 3.14}}},
+    {x: {y: {z: 42}}},
+  ],
+};"
facebook/react,bc828bf6e3b762747134099f338a2b57df586f43,"Sebastian ""Sebbie"" Silbermann",2025-10-02T16:33:50Z,[DevTools] Recommend React Performance tracks if supported when Timeline profiler is not supported (#34684),packages/react-devtools-shared/src/backend/fiber/renderer.js,5,0,5,"@@ -78,6 +78,7 @@ import {
   __DEBUG__,
   PROFILING_FLAG_BASIC_SUPPORT,
   PROFILING_FLAG_TIMELINE_SUPPORT,
+  PROFILING_FLAG_PERFORMANCE_TRACKS_SUPPORT,
   TREE_OPERATION_ADD,
   TREE_OPERATION_REMOVE,
   TREE_OPERATION_REORDER_CHILDREN,
@@ -1074,6 +1075,7 @@ export function attach(
   const supportsTogglingSuspense =
     typeof setSuspenseHandler === 'function' &&
     typeof scheduleUpdate === 'function';
+  const supportsPerformanceTracks = gte(version, '19.2.0');
 
   if (typeof scheduleRefresh === 'function') {
     // When Fast Refresh updates a component, the frontend may need to purge cached information.
@@ -2401,6 +2403,9 @@ export function attach(
         if (typeof injectProfilingHooks === 'function') {
           profilingFlags |= PROFILING_FLAG_TIMELINE_SUPPORT;
         }
+        if (supportsPerformanceTracks) {
+          profilingFlags |= PROFILING_FLAG_PERFORMANCE_TRACKS_SUPPORT;
+        }
       }
 
       // Set supportsStrictMode to false for production renderer builds"
facebook/react,bc828bf6e3b762747134099f338a2b57df586f43,"Sebastian ""Sebbie"" Silbermann",2025-10-02T16:33:50Z,[DevTools] Recommend React Performance tracks if supported when Timeline profiler is not supported (#34684),packages/react-devtools-shared/src/constants.js,3,2,5,"@@ -30,8 +30,9 @@ export const SUSPENSE_TREE_OPERATION_REORDER_CHILDREN = 10;
 export const SUSPENSE_TREE_OPERATION_RESIZE = 11;
 export const SUSPENSE_TREE_OPERATION_SUSPENDERS = 12;
 
-export const PROFILING_FLAG_BASIC_SUPPORT = 0b01;
-export const PROFILING_FLAG_TIMELINE_SUPPORT = 0b10;
+export const PROFILING_FLAG_BASIC_SUPPORT /*.             */ = 0b001;
+export const PROFILING_FLAG_TIMELINE_SUPPORT /*           */ = 0b010;
+export const PROFILING_FLAG_PERFORMANCE_TRACKS_SUPPORT /* */ = 0b100;
 
 export const UNKNOWN_SUSPENDERS_NONE: UnknownSuspendersReason = 0; // If we had at least one debugInfo, then that might have been the reason.
 export const UNKNOWN_SUSPENDERS_REASON_PRODUCTION: UnknownSuspendersReason = 1; // We're running in prod. That might be why we had unknown suspenders."
facebook/react,bc828bf6e3b762747134099f338a2b57df586f43,"Sebastian ""Sebbie"" Silbermann",2025-10-02T16:33:50Z,[DevTools] Recommend React Performance tracks if supported when Timeline profiler is not supported (#34684),packages/react-devtools-shared/src/devtools/store.js,47,7,54,"@@ -13,6 +13,7 @@ import {inspect} from 'util';
 import {
   PROFILING_FLAG_BASIC_SUPPORT,
   PROFILING_FLAG_TIMELINE_SUPPORT,
+  PROFILING_FLAG_PERFORMANCE_TRACKS_SUPPORT,
   TREE_OPERATION_ADD,
   TREE_OPERATION_REMOVE,
   TREE_OPERATION_REMOVE_ROOT,
@@ -86,12 +87,17 @@ export type Config = {
   supportsTraceUpdates?: boolean,
 };
 
+const ADVANCED_PROFILING_NONE = 0;
+const ADVANCED_PROFILING_TIMELINE = 1;
+const ADVANCED_PROFILING_PERFORMANCE_TRACKS = 2;
+type AdvancedProfiling = 0 | 1 | 2;
+
 export type Capabilities = {
   supportsBasicProfiling: boolean,
   hasOwnerMetadata: boolean,
   supportsStrictMode: boolean,
   supportsTogglingSuspense: boolean,
-  supportsTimeline: boolean,
+  supportsAdvancedProfiling: AdvancedProfiling,
 };
 
 /**
@@ -112,6 +118,7 @@ export default class Store extends EventEmitter<{
   roots: [],
   rootSupportsBasicProfiling: [],
   rootSupportsTimelineProfiling: [],
+  rootSupportsPerformanceTracks: [],
   suspenseTreeMutated: [[Map<SuspenseNode['id'], SuspenseNode['id']>]],
   supportsNativeStyleEditor: [],
   supportsReloadAndProfile: [],
@@ -195,6 +202,7 @@ export default class Store extends EventEmitter<{
   // These options default to false but may be updated as roots are added and removed.
   _rootSupportsBasicProfiling: boolean = false;
   _rootSupportsTimelineProfiling: boolean = false;
+  _rootSupportsPerformanceTracks: boolean = false;
 
   _bridgeProtocol: BridgeProtocol | null = null;
   _unsupportedBridgeProtocolDetected: boolean = false;
@@ -474,6 +482,11 @@ export default class Store extends EventEmitter<{
     return this._rootSupportsTimelineProfiling;
   }
 
+  // At least one of the currently mounted roots support performance tracks.
+  get rootSupportsPerformanceTracks(): boolean {
+    return this._rootSupportsPerformanceTracks;
+  }
+
   get supportsInspectMatchingDOMElement(): boolean {
     return this._supportsInspectMatchingDOMElement;
   }
@@ -1161,11 +1174,20 @@ export default class Store extends EventEmitter<{
             const isStrictModeCompliant = operations[i] > 0;
             i++;
 
+            const profilerFlags = operations[i++];
             const supportsBasicProfiling =
-              (operations[i] & PROFILING_FLAG_BASIC_SUPPORT) !== 0;
+              (profilerFlags & PROFILING_FLAG_BASIC_SUPPORT) !== 0;
             const supportsTimeline =
-              (operations[i] & PROFILING_FLAG_TIMELINE_SUPPORT) !== 0;
-            i++;
+              (profilerFlags & PROFILING_FLAG_TIMELINE_SUPPORT) !== 0;
+            const supportsPerformanceTracks =
+              (profilerFlags & PROFILING_FLAG_PERFORMANCE_TRACKS_SUPPORT) !== 0;
+            let supportsAdvancedProfiling: AdvancedProfiling =
+              ADVANCED_PROFILING_NONE;
+            if (supportsPerformanceTracks) {
+              supportsAdvancedProfiling = ADVANCED_PROFILING_PERFORMANCE_TRACKS;
+            } else if (supportsTimeline) {
+              supportsAdvancedProfiling = ADVANCED_PROFILING_TIMELINE;
+            }
 
             let supportsStrictMode = false;
             let hasOwnerMetadata = false;
@@ -1194,7 +1216,7 @@ export default class Store extends EventEmitter<{
               hasOwnerMetadata,
               supportsStrictMode,
               supportsTogglingSuspense,
-              supportsTimeline,
+              supportsAdvancedProfiling,
             });
 
             // Not all roots support StrictMode;
@@ -1842,21 +1864,33 @@ export default class Store extends EventEmitter<{
       const prevRootSupportsProfiling = this._rootSupportsBasicProfiling;
       const prevRootSupportsTimelineProfiling =
         this._rootSupportsTimelineProfiling;
+      const prevRootSupportsPerformanceTracks =
+        this._rootSupportsPerformanceTracks;
 
       this._hasOwnerMetadata = false;
       this._rootSupportsBasicProfiling = false;
       this._rootSupportsTimelineProfiling = false;
+      this._rootSupportsPerformanceTracks = false;
       this._rootIDToCapabilities.forEach(
-        ({supportsBasicProfiling, hasOwnerMetadata, supportsTimeline}) => {
+        ({
+          supportsBasicProfiling,
+          hasOwnerMetadata,
+          supportsAdvancedProfiling,
+        }) => {
           if (supportsBasicProfiling) {
             this._rootSupportsBasicProfiling = true;
           }
           if (hasOwnerMetadata) {
             this._hasOwnerMetadata = true;
           }
-          if (supportsTimeline) {
+          if (supportsAdvancedProfiling === ADVANCED_PROFILING_TIMELINE) {
             this._rootSupportsTimelineProfiling = true;
           }
+          if (
+            supportsAdvancedProfiling === ADVANCED_PROFILING_PERFORMANCE_TRACKS
+          ) {
+            this._rootSupportsPerformanceTracks = true;
+          }
         },
       );
 
@@ -1872,6 +1906,12 @@ export default class Store extends EventEmitter<{
       ) {
         this.emit('rootSupportsTimelineProfiling');
       }
+      if (
+        this._rootSupportsPerformanceTracks !==
+        prevRootSupportsPerformanceTracks
+      ) {
+        this.emit('rootSupportsPerformanceTracks');
+      }
     }
 
     if (hasSuspenseTreeChanged) {"
facebook/react,bc828bf6e3b762747134099f338a2b57df586f43,"Sebastian ""Sebbie"" Silbermann",2025-10-02T16:33:50Z,[DevTools] Recommend React Performance tracks if supported when Timeline profiler is not supported (#34684),packages/react-devtools-timeline/src/Timeline.js,13,3,16,"@@ -33,8 +33,14 @@ import {TimelineSearchContextController} from './TimelineSearchContext';
 import styles from './Timeline.css';
 
 export function Timeline(_: {}): React.Node {
-  const {file, inMemoryTimelineData, isTimelineSupported, setFile, viewState} =
-    useContext(TimelineContext);
+  const {
+    file,
+    inMemoryTimelineData,
+    isPerformanceTracksSupported,
+    isTimelineSupported,
+    setFile,
+    viewState,
+  } = useContext(TimelineContext);
   const {didRecordCommits, isProfiling} = useContext(ProfilerContext);
 
   const ref = useRef(null);
@@ -95,7 +101,11 @@ export function Timeline(_: {}): React.Node {
   } else if (isTimelineSupported) {
     content = <NoProfilingData />;
   } else {
-    content = <TimelineNotSupported />;
+    content = (
+      <TimelineNotSupported
+        isPerformanceTracksSupported={isPerformanceTracksSupported}
+      />
+    );
   }
 
   return ("
facebook/react,bc828bf6e3b762747134099f338a2b57df586f43,"Sebastian ""Sebbie"" Silbermann",2025-10-02T16:33:50Z,[DevTools] Recommend React Performance tracks if supported when Timeline profiler is not supported (#34684),packages/react-devtools-timeline/src/TimelineContext.js,15,0,15,"@@ -31,6 +31,7 @@ import type {
 export type Context = {
   file: File | null,
   inMemoryTimelineData: Array<TimelineData> | null,
+  isPerformanceTracksSupported: boolean,
   isTimelineSupported: boolean,
   searchInputContainerRef: RefObject,
   setFile: (file: File | null) => void,
@@ -66,6 +67,18 @@ function TimelineContextController({children}: Props): React.Node {
     },
   );
 
+  const isPerformanceTracksSupported = useSyncExternalStore<boolean>(
+    function subscribe(callback) {
+      store.addListener('rootSupportsPerformanceTracks', callback);
+      return function unsubscribe() {
+        store.removeListener('rootSupportsPerformanceTracks', callback);
+      };
+    },
+    function getState() {
+      return store.rootSupportsPerformanceTracks;
+    },
+  );
+
   const inMemoryTimelineData = useSyncExternalStore<Array<TimelineData> | null>(
     function subscribe(callback) {
       store.profilerStore.addListener('isProcessingData', callback);
@@ -135,6 +148,7 @@ function TimelineContextController({children}: Props): React.Node {
     () => ({
       file,
       inMemoryTimelineData,
+      isPerformanceTracksSupported,
       isTimelineSupported,
       searchInputContainerRef,
       setFile,
@@ -145,6 +159,7 @@ function TimelineContextController({children}: Props): React.Node {
     [
       file,
       inMemoryTimelineData,
+      isPerformanceTracksSupported,
       isTimelineSupported,
       setFile,
       viewState,"
facebook/react,bc828bf6e3b762747134099f338a2b57df586f43,"Sebastian ""Sebbie"" Silbermann",2025-10-02T16:33:50Z,[DevTools] Recommend React Performance tracks if supported when Timeline profiler is not supported (#34684),packages/react-devtools-timeline/src/TimelineNotSupported.js,53,5,58,"@@ -12,16 +12,48 @@ import {isInternalFacebookBuild} from 'react-devtools-feature-flags';
 
 import styles from './TimelineNotSupported.css';
 
-export default function TimelineNotSupported(): React.Node {
+type Props = {
+  isPerformanceTracksSupported: boolean,
+};
+
+function PerformanceTracksSupported() {
   return (
-    <div className={styles.Column}>
-      <div className={styles.Header}>Timeline profiling not supported.</div>
+    <>
       <p className={styles.Paragraph}>
         <span>
-          Timeline profiler requires a development or profiling build of{' '}
-          <code className={styles.Code}>react-dom@^18</code>.
+          Please use{' '}
+          <a
+            className={styles.Link}
+            href=""https://react.dev/reference/dev-tools/react-performance-tracks""
+            rel=""noopener noreferrer""
+            target=""_blank"">
+            React Performance tracks
+          </a>{' '}
+          instead of the Timeline profiler.
         </span>
       </p>
+    </>
+  );
+}
+
+function UnknownUnsupportedReason() {
+  return (
+    <>
+      <p className={styles.Paragraph}>
+        Timeline profiler requires a development or profiling build of{' '}
+        <code className={styles.Code}>react-dom@{'>='}18</code>.
+      </p>
+      <p className={styles.Paragraph}>
+        In React 19.2 and above{' '}
+        <a
+          className={styles.Link}
+          href=""https://react.dev/reference/dev-tools/react-performance-tracks""
+          rel=""noopener noreferrer""
+          target=""_blank"">
+          React Performance tracks
+        </a>{' '}
+        can be used instead.
+      </p>
       <div className={styles.LearnMoreRow}>
         Click{' '}
         <a
@@ -33,6 +65,22 @@ export default function TimelineNotSupported(): React.Node {
         </a>{' '}
         to learn more about profiling.
       </div>
+    </>
+  );
+}
+
+export default function TimelineNotSupported({
+  isPerformanceTracksSupported,
+}: Props): React.Node {
+  return (
+    <div className={styles.Column}>
+      <div className={styles.Header}>Timeline profiling not supported.</div>
+
+      {isPerformanceTracksSupported ? (
+        <PerformanceTracksSupported />
+      ) : (
+        <UnknownUnsupportedReason />
+      )}
 
       {isInternalFacebookBuild && (
         <div className={styles.MetaGKRow}>"
facebook/react,a757cb76671863071cf3672401ce1cbdcf040a85,"Sebastian ""Sebbie"" Silbermann",2025-10-02T12:43:02Z,Fix DevTools fixture crash due to usage of renamed APIs (#34682),packages/react-devtools-shell/src/app/InspectableElements/UseEffectEvent.js,5,3,8,"@@ -1,6 +1,8 @@
 import * as React from 'react';
 
-const {experimental_useEffectEvent, useState, useEffect} = React;
+const {useState, useEffect} = React;
+const useEffectEvent =
+  React.useEffectEvent || React.experimental_useEffectEvent;
 
 export default function UseEffectEvent(): React.Node {
   return (
@@ -12,14 +14,14 @@ export default function UseEffectEvent(): React.Node {
 }
 
 function SingleHookCase() {
-  const onClick = experimental_useEffectEvent(() => {});
+  const onClick = useEffectEvent(() => {});
 
   return <div onClick={onClick} />;
 }
 
 function useCustomHook() {
   const [state, setState] = useState();
-  const onClick = experimental_useEffectEvent(() => {});
+  const onClick = useEffectEvent(() => {});
   useEffect(() => {});
 
   return [state, setState, onClick];"
facebook/react,d74f061b6908e4841b2eb09c296ca4658dbdd38e,Sebastian Markbåge,2025-10-02T01:58:13Z,"[Fiber] Clean up ViewTransition when it fails to start (#34676)

The View Transition docs were unclear about this but apparently the
`finished` promise never settles if the animation never started. So if
there's an error that rejects the `ready` promise, we'll never run the
clean up which can cause it to stall.

Fixes #34662.

However, ultimately that is caused by Chrome stalling our default
`onDefaultTransitionIndicator` but it should be unblocked after 10
seconds, not a minute.",packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js,16,0,16,"@@ -2279,6 +2279,11 @@ export function startViewTransition(
       spawnedWorkCallback();
     };
     const handleError = (error: mixed) => {
+      // $FlowFixMe[prop-missing]
+      if (ownerDocument.__reactViewTransition === transition) {
+        // $FlowFixMe[prop-missing]
+        ownerDocument.__reactViewTransition = null;
+      }
       try {
         error = customizeViewTransitionError(error, false);
         if (error !== null) {
@@ -2293,6 +2298,9 @@ export function startViewTransition(
         layoutCallback();
         // Skip afterMutationCallback() since we're not animating.
         spawnedWorkCallback();
+        if (enableProfilerTimer) {
+          finishedAnimation();
+        }
       }
     };
     transition.ready.then(readyCallback, handleError);
@@ -2699,6 +2707,11 @@ export function startGestureTransition(
         ? () => requestAnimationFrame(readyCallback)
         : readyCallback;
     const handleError = (error: mixed) => {
+      // $FlowFixMe[prop-missing]
+      if (ownerDocument.__reactViewTransition === transition) {
+        // $FlowFixMe[prop-missing]
+        ownerDocument.__reactViewTransition = null;
+      }
       try {
         error = customizeViewTransitionError(error, true);
         if (error !== null) {
@@ -2713,6 +2726,9 @@ export function startGestureTransition(
         // Skip readyCallback() and go straight to animateCallbck() since we're not animating.
         // animateCallback() is still required to restore states.
         animateCallback();
+        if (enableProfilerTimer) {
+          finishedAnimation();
+        }
       }
     };
     transition.ready.then(readyForAnimations, handleError);"
facebook/react,f7254efc5c43ebae57afa32a52d4653878ef23d0,Eugene Choi,2025-10-02T01:26:16Z,"[playground] Persist open tabs on compiler error (#34673)

This change allows it so that tabs that were open before a compiler
error are automatically opened again when the error is resolved. Quality
of life change for those especially working with the advanced view of
the playground.


https://github.com/user-attachments/assets/cd2dc117-e6fc-4f57-a08f-259757c4f5e8",compiler/apps/playground/components/AccordionWindow.tsx,5,1,6,"@@ -23,6 +23,7 @@ export default function AccordionWindow(props: {
   tabsOpen: Set<string>;
   setTabsOpen: (newTab: Set<string>) => void;
   changedPasses: Set<string>;
+  isFailure: boolean;
 }): React.ReactElement {
   return (
     <div className=""flex-1 min-w-[550px] sm:min-w-0"">
@@ -36,6 +37,7 @@ export default function AccordionWindow(props: {
               tabsOpen={props.tabsOpen}
               setTabsOpen={props.setTabsOpen}
               hasChanged={props.changedPasses.has(name)}
+              isFailure={props.isFailure}
             />
           );
         })}
@@ -50,15 +52,17 @@ function AccordionWindowItem({
   tabsOpen,
   setTabsOpen,
   hasChanged,
+  isFailure,
 }: {
   name: string;
   tabs: TabsRecord;
   tabsOpen: Set<string>;
   setTabsOpen: (newTab: Set<string>) => void;
   hasChanged: boolean;
+  isFailure: boolean;
 }): React.ReactElement {
   const id = useId();
-  const isShow = tabsOpen.has(name);
+  const isShow = isFailure ? name === 'Output' : tabsOpen.has(name);
 
   const transitionName = `accordion-window-item-${id}`;
 "
facebook/react,f7254efc5c43ebae57afa32a52d4653878ef23d0,Eugene Choi,2025-10-02T01:26:16Z,"[playground] Persist open tabs on compiler error (#34673)

This change allows it so that tabs that were open before a compiler
error are automatically opened again when the error is resolved. Quality
of life change for those especially working with the advanced view of
the playground.


https://github.com/user-attachments/assets/cd2dc117-e6fc-4f57-a08f-259757c4f5e8",compiler/apps/playground/components/Editor/Output.tsx,5,8,13,"@@ -265,14 +265,8 @@ function OutputContent({store, compilerOutput}: Props): JSX.Element {
    * Update the active tab back to the output or errors tab when the compilation state
    * changes between success/failure.
    */
-  const [previousOutputKind, setPreviousOutputKind] = useState(
-    compilerOutput.kind,
-  );
-  if (compilerOutput.kind !== previousOutputKind) {
-    setPreviousOutputKind(compilerOutput.kind);
-    setTabsOpen(new Set(['Output']));
-    setActiveTab('Output');
-  }
+
+  const isFailure = compilerOutput.kind !== 'ok';
   const changedPasses: Set<string> = new Set(['Output', 'HIR']); // Initial and final passes should always be bold
   let lastResult: string = '';
   for (const [passName, results] of compilerOutput.results) {
@@ -301,6 +295,8 @@ function OutputContent({store, compilerOutput}: Props): JSX.Element {
           tabs={tabs}
           activeTab={activeTab}
           onTabChange={setActiveTab}
+          // Display the Output tab on compilation failure
+          activeTabOverride={isFailure ? 'Output' : undefined}
         />
       </ViewTransition>
     );
@@ -319,6 +315,7 @@ function OutputContent({store, compilerOutput}: Props): JSX.Element {
         tabsOpen={tabsOpen}
         tabs={tabs}
         changedPasses={changedPasses}
+        isFailure={isFailure}
       />
     </ViewTransition>
   );"
facebook/react,f7254efc5c43ebae57afa32a52d4653878ef23d0,Eugene Choi,2025-10-02T01:26:16Z,"[playground] Persist open tabs on compiler error (#34673)

This change allows it so that tabs that were open before a compiler
error are automatically opened again when the error is resolved. Quality
of life change for those especially working with the advanced view of
the playground.


https://github.com/user-attachments/assets/cd2dc117-e6fc-4f57-a08f-259757c4f5e8",compiler/apps/playground/components/TabbedWindow.tsx,10,2,12,"@@ -17,11 +17,15 @@ export default function TabbedWindow({
   tabs,
   activeTab,
   onTabChange,
+  activeTabOverride,
 }: {
   tabs: Map<string, React.ReactNode>;
   activeTab: string;
   onTabChange: (tab: string) => void;
+  activeTabOverride?: string;
 }): React.ReactElement {
+  const currentActiveTab = activeTabOverride ? activeTabOverride : activeTab;
+
   const id = useId();
   const transitionName = `tab-highlight-${id}`;
 
@@ -37,7 +41,7 @@ export default function TabbedWindow({
       <div className=""flex flex-col h-full max-w-full"">
         <div className=""flex p-2 flex-shrink-0"">
           {Array.from(tabs.keys()).map(tab => {
-            const isActive = activeTab === tab;
+            const isActive = currentActiveTab === tab;
             return (
               <button
                 key={tab}
@@ -49,6 +53,8 @@ export default function TabbedWindow({
                 {isActive && (
                   <ViewTransition
                     name={transitionName}
+                    enter={{default: 'none'}}
+                    exit={{default: 'none'}}
                     share={{
                       [TOGGLE_TAB_TRANSITION]: 'tab-highlight',
                       default: 'none',
@@ -58,6 +64,8 @@ export default function TabbedWindow({
                   </ViewTransition>
                 )}
                 <ViewTransition
+                  enter={{default: 'none'}}
+                  exit={{default: 'none'}}
                   update={{
                     [TOGGLE_TAB_TRANSITION]: 'tab-text',
                     default: 'none',
@@ -69,7 +77,7 @@ export default function TabbedWindow({
           })}
         </div>
         <div className=""flex-1 overflow-hidden w-full h-full"">
-          {tabs.get(activeTab)}
+          {tabs.get(currentActiveTab)}
         </div>
       </div>
     </div>"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),ReactVersions.js,10,10,20,"@@ -7,18 +7,18 @@
 //
 // The @latest channel uses the version as-is, e.g.:
 //
-//   19.2.0
+//   19.3.0
 //
 // The @canary channel appends additional information, with the scheme
 // <version>-<label>-<commit_sha>, e.g.:
 //
-//   19.2.0-canary-a1c2d3e4
+//   19.3.0-canary-a1c2d3e4
 //
 // The @experimental channel doesn't include a version, only a date and a sha, e.g.:
 //
 //   0.0.0-experimental-241c4467e-20200129
 
-const ReactVersion = '19.2.0';
+const ReactVersion = '19.3.0';
 
 // The label used by the @canary channel. Represents the upcoming release's
 // stability. Most of the time, this will be ""canary"", but we may temporarily
@@ -33,21 +33,21 @@ const canaryChannelLabel = 'canary';
 const rcNumber = 0;
 
 const stablePackages = {
-  'eslint-plugin-react-hooks': '6.1.0',
-  'jest-react': '0.17.0',
+  'eslint-plugin-react-hooks': '6.2.0',
+  'jest-react': '0.18.0',
   react: ReactVersion,
   'react-art': ReactVersion,
   'react-dom': ReactVersion,
   'react-server-dom-webpack': ReactVersion,
   'react-server-dom-turbopack': ReactVersion,
   'react-server-dom-parcel': ReactVersion,
   'react-is': ReactVersion,
-  'react-reconciler': '0.33.0',
-  'react-refresh': '0.18.0',
+  'react-reconciler': '0.34.0',
+  'react-refresh': '0.19.0',
   'react-test-renderer': ReactVersion,
-  'use-subscription': '1.12.0',
-  'use-sync-external-store': '1.6.0',
-  scheduler: '0.27.0',
+  'use-subscription': '1.13.0',
+  'use-sync-external-store': '1.7.0',
+  scheduler: '0.28.0',
 };
 
 // These packages do not exist in the @canary or @latest channel, only"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-art/package.json,3,3,6,"@@ -1,7 +1,7 @@
 {
   ""name"": ""react-art"",
   ""description"": ""React ART is a JavaScript library for drawing vector graphics using React. It provides declarative and reactive bindings to the ART library. Using the same declarative API you can render the output to either Canvas, SVG or VML (IE8)."",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""main"": ""index.js"",
   ""repository"": {
     ""type"": ""git"",
@@ -24,10 +24,10 @@
   ""dependencies"": {
     ""art"": ""^0.10.1"",
     ""create-react-class"": ""^15.6.2"",
-    ""scheduler"": ""^0.27.0""
+    ""scheduler"": ""^0.28.0""
   },
   ""peerDependencies"": {
-    ""react"": ""^19.2.0""
+    ""react"": ""^19.3.0""
   },
   ""files"": [
     ""LICENSE"","
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-dom-bindings/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""react-dom-bindings"",
   ""description"": ""React implementation details for react-dom."",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""private"": true,
   ""main"": ""index.js"",
   ""repository"": {"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-dom/package.json,3,3,6,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-dom"",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""description"": ""React package for working with the DOM."",
   ""main"": ""index.js"",
   ""repository"": {
@@ -17,10 +17,10 @@
   },
   ""homepage"": ""https://react.dev/"",
   ""dependencies"": {
-    ""scheduler"": ""^0.27.0""
+    ""scheduler"": ""^0.28.0""
   },
   ""peerDependencies"": {
-    ""react"": ""^19.2.0""
+    ""react"": ""^19.3.0""
   },
   ""files"": [
     ""LICENSE"","
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-is/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-is"",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""description"": ""Brand checking of React Elements."",
   ""main"": ""index.js"",
   ""sideEffects"": false,"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-markup/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-markup"",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""description"": ""React package generating embedded markup such as e-mails with support for Server Components."",
   ""main"": ""index.js"",
   ""repository"": {"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-native-renderer/package.json,1,1,2,"@@ -8,7 +8,7 @@
     ""directory"": ""packages/react-native-renderer""
   },
   ""dependencies"": {
-    ""scheduler"": ""^0.27.0""
+    ""scheduler"": ""^0.28.0""
   },
   ""peerDependencies"": {
     ""react"": ""^18.0.0"""
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-reconciler/package.json,3,3,6,"@@ -1,7 +1,7 @@
 {
   ""name"": ""react-reconciler"",
   ""description"": ""React package for creating custom renderers."",
-  ""version"": ""0.33.0"",
+  ""version"": ""0.34.0"",
   ""keywords"": [
     ""react""
   ],
@@ -26,9 +26,9 @@
     ""node"": "">=0.10.0""
   },
   ""peerDependencies"": {
-    ""react"": ""^19.2.0""
+    ""react"": ""^19.3.0""
   },
   ""dependencies"": {
-    ""scheduler"": ""^0.27.0""
+    ""scheduler"": ""^0.28.0""
   }
 }"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-refresh/package.json,1,1,2,"@@ -4,7 +4,7 @@
   ""keywords"": [
     ""react""
   ],
-  ""version"": ""0.18.0"",
+  ""version"": ""0.19.0"",
   ""homepage"": ""https://react.dev/"",
   ""bugs"": ""https://github.com/facebook/react/issues"",
   ""license"": ""MIT"","
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-server-dom-esm/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""react-server-dom-esm"",
   ""description"": ""React Server Components bindings for DOM using ESM. This is intended to be integrated into meta-frameworks. It is not intended to be imported directly."",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""keywords"": [
     ""react""
   ],"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-server-dom-fb/package.json,1,1,2,"@@ -8,7 +8,7 @@
     ""directory"": ""packages/react-server-dom-fb""
   },
   ""dependencies"": {
-    ""scheduler"": ""^0.27.0""
+    ""scheduler"": ""^0.28.0""
   },
   ""peerDependencies"": {
     ""react"": ""^18.0.0"","
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-server-dom-parcel/package.json,3,3,6,"@@ -1,7 +1,7 @@
 {
   ""name"": ""react-server-dom-parcel"",
   ""description"": ""React Server Components bindings for DOM using Parcel. This is intended to be integrated into meta-frameworks. It is not intended to be imported directly."",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""keywords"": [
     ""react""
   ],
@@ -79,7 +79,7 @@
     ""node"": "">=0.10.0""
   },
   ""peerDependencies"": {
-    ""react"": ""^19.2.0"",
-    ""react-dom"": ""^19.2.0""
+    ""react"": ""^19.3.0"",
+    ""react-dom"": ""^19.3.0""
   }
 }"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-server-dom-turbopack/package.json,3,3,6,"@@ -1,7 +1,7 @@
 {
   ""name"": ""react-server-dom-turbopack"",
   ""description"": ""React Server Components bindings for DOM using Turbopack. This is intended to be integrated into meta-frameworks. It is not intended to be imported directly."",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""keywords"": [
     ""react""
   ],
@@ -79,8 +79,8 @@
     ""node"": "">=0.10.0""
   },
   ""peerDependencies"": {
-    ""react"": ""^19.2.0"",
-    ""react-dom"": ""^19.2.0""
+    ""react"": ""^19.3.0"",
+    ""react-dom"": ""^19.3.0""
   },
   ""dependencies"": {
     ""acorn-loose"": ""^8.3.0"","
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-server-dom-webpack/package.json,3,3,6,"@@ -1,7 +1,7 @@
 {
   ""name"": ""react-server-dom-webpack"",
   ""description"": ""React Server Components bindings for DOM using Webpack. This is intended to be integrated into meta-frameworks. It is not intended to be imported directly."",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""keywords"": [
     ""react""
   ],
@@ -100,8 +100,8 @@
     ""node"": "">=0.10.0""
   },
   ""peerDependencies"": {
-    ""react"": ""^19.2.0"",
-    ""react-dom"": ""^19.2.0"",
+    ""react"": ""^19.3.0"",
+    ""react-dom"": ""^19.3.0"",
     ""webpack"": ""^5.59.0""
   },
   ""dependencies"": {"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react-test-renderer/package.json,4,4,8,"@@ -1,6 +1,6 @@
 {
   ""name"": ""react-test-renderer"",
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""description"": ""React package for snapshot testing."",
   ""main"": ""index.js"",
   ""repository"": {
@@ -19,11 +19,11 @@
   },
   ""homepage"": ""https://react.dev/"",
   ""dependencies"": {
-    ""react-is"": ""^19.2.0"",
-    ""scheduler"": ""^0.27.0""
+    ""react-is"": ""^19.3.0"",
+    ""scheduler"": ""^0.28.0""
   },
   ""peerDependencies"": {
-    ""react"": ""^19.2.0""
+    ""react"": ""^19.3.0""
   },
   ""files"": [
     ""LICENSE"","
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/react/package.json,1,1,2,"@@ -4,7 +4,7 @@
   ""keywords"": [
     ""react""
   ],
-  ""version"": ""19.2.0"",
+  ""version"": ""19.3.0"",
   ""homepage"": ""https://react.dev/"",
   ""bugs"": ""https://github.com/facebook/react/issues"",
   ""license"": ""MIT"","
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/scheduler/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""scheduler"",
-  ""version"": ""0.27.0"",
+  ""version"": ""0.28.0"",
   ""description"": ""Cooperative scheduler for the browser environment."",
   ""repository"": {
     ""type"": ""git"","
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/shared/ReactVersion.js,1,1,2,"@@ -12,4 +12,4 @@
 // TODO: This module is used both by the release scripts and to expose a version
 // at runtime. We should instead inject the version number as part of the build
 // process, and use the ReactVersions.js module as the single source of truth.
-export default '19.2.0';
+export default '19.3.0';"
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/use-subscription/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""use-subscription"",
   ""description"": ""Reusable hooks"",
-  ""version"": ""1.12.0"",
+  ""version"": ""1.13.0"",
   ""repository"": {
     ""type"": ""git"",
     ""url"": ""https://github.com/facebook/react.git"","
facebook/react,79ca5ae8557e903f225c9ae61fa4db981ac87dfa,"Sebastian ""Sebbie"" Silbermann",2025-10-01T22:31:55Z,Bump next prerelease version numbers (#34674),packages/use-sync-external-store/package.json,1,1,2,"@@ -1,7 +1,7 @@
 {
   ""name"": ""use-sync-external-store"",
   ""description"": ""Backwards compatible shim for React's useSyncExternalStore. Works with any React that supports hooks."",
-  ""version"": ""1.6.0"",
+  ""version"": ""1.7.0"",
   ""exports"": {
     ""."": ""./index.js"",
     ""./with-selector"": ""./with-selector.js"","
facebook/react,ae74234eae6ebd62f19190731278e20bc1c37d51,lauren,2025-10-01T21:05:42Z,"[eprh] Allow compiler rules to be opted-in but not in the preset (#34672)

Follow up to #34649. This adds the compiler rules back so they can be
opted-in 6.1.0, but aren't included in the presets as that would be a
breaking change.",packages/eslint-plugin-react-hooks/src/index.ts,4,0,4,"@@ -7,12 +7,16 @@
 import type {Linter, Rule} from 'eslint';
 
 import ExhaustiveDeps from './rules/ExhaustiveDeps';
+import {allRules} from './shared/ReactCompiler';
 import RulesOfHooks from './rules/RulesOfHooks';
 
 // All rules
 const rules = {
   'exhaustive-deps': ExhaustiveDeps,
   'rules-of-hooks': RulesOfHooks,
+  ...Object.fromEntries(
+    Object.entries(allRules).map(([name, config]) => [name, config.rule]),
+  ),
 } satisfies Record<string, Rule.RuleModule>;
 
 // Config rules"
facebook/react,861811347b8fa936b4a114fc022db9b8253b3d86,"Sebastian ""Sebbie"" Silbermann",2025-10-01T20:45:31Z,"Bump scheduler version (#34671)

The canaries have been published depending on 0.27-canary. Bumping
scheduler just in case to be sure.",packages/react-art/package.json,1,1,2,"@@ -24,7 +24,7 @@
   ""dependencies"": {
     ""art"": ""^0.10.1"",
     ""create-react-class"": ""^15.6.2"",
-    ""scheduler"": ""^0.26.0""
+    ""scheduler"": ""^0.27.0""
   },
   ""peerDependencies"": {
     ""react"": ""^19.2.0"""
facebook/react,861811347b8fa936b4a114fc022db9b8253b3d86,"Sebastian ""Sebbie"" Silbermann",2025-10-01T20:45:31Z,"Bump scheduler version (#34671)

The canaries have been published depending on 0.27-canary. Bumping
scheduler just in case to be sure.",packages/react-dom/package.json,1,1,2,"@@ -17,7 +17,7 @@
   },
   ""homepage"": ""https://react.dev/"",
   ""dependencies"": {
-    ""scheduler"": ""^0.26.0""
+    ""scheduler"": ""^0.27.0""
   },
   ""peerDependencies"": {
     ""react"": ""^19.2.0"""
facebook/react,861811347b8fa936b4a114fc022db9b8253b3d86,"Sebastian ""Sebbie"" Silbermann",2025-10-01T20:45:31Z,"Bump scheduler version (#34671)

The canaries have been published depending on 0.27-canary. Bumping
scheduler just in case to be sure.",packages/react-native-renderer/package.json,1,1,2,"@@ -8,7 +8,7 @@
     ""directory"": ""packages/react-native-renderer""
   },
   ""dependencies"": {
-    ""scheduler"": ""^0.26.0""
+    ""scheduler"": ""^0.27.0""
   },
   ""peerDependencies"": {
     ""react"": ""^18.0.0"""
facebook/react,861811347b8fa936b4a114fc022db9b8253b3d86,"Sebastian ""Sebbie"" Silbermann",2025-10-01T20:45:31Z,"Bump scheduler version (#34671)

The canaries have been published depending on 0.27-canary. Bumping
scheduler just in case to be sure.",packages/react-reconciler/package.json,1,1,2,"@@ -29,6 +29,6 @@
     ""react"": ""^19.2.0""
   },
   ""dependencies"": {
-    ""scheduler"": ""^0.26.0""
+    ""scheduler"": ""^0.27.0""
   }
 }"
facebook/react,861811347b8fa936b4a114fc022db9b8253b3d86,"Sebastian ""Sebbie"" Silbermann",2025-10-01T20:45:31Z,"Bump scheduler version (#34671)

The canaries have been published depending on 0.27-canary. Bumping
scheduler just in case to be sure.",packages/react-server-dom-fb/package.json,1,1,2,"@@ -8,7 +8,7 @@
     ""directory"": ""packages/react-server-dom-fb""
   },
   ""dependencies"": {
-    ""scheduler"": ""^0.26.0""
+    ""scheduler"": ""^0.27.0""
   },
   ""peerDependencies"": {
     ""react"": ""^18.0.0"","
facebook/react,861811347b8fa936b4a114fc022db9b8253b3d86,"Sebastian ""Sebbie"" Silbermann",2025-10-01T20:45:31Z,"Bump scheduler version (#34671)

The canaries have been published depending on 0.27-canary. Bumping
scheduler just in case to be sure.",packages/react-test-renderer/package.json,1,1,2,"@@ -20,7 +20,7 @@
   ""homepage"": ""https://react.dev/"",
   ""dependencies"": {
     ""react-is"": ""^19.2.0"",
-    ""scheduler"": ""^0.26.0""
+    ""scheduler"": ""^0.27.0""
   },
   ""peerDependencies"": {
     ""react"": ""^19.2.0"""
facebook/react,861811347b8fa936b4a114fc022db9b8253b3d86,"Sebastian ""Sebbie"" Silbermann",2025-10-01T20:45:31Z,"Bump scheduler version (#34671)

The canaries have been published depending on 0.27-canary. Bumping
scheduler just in case to be sure.",packages/scheduler/package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""scheduler"",
-  ""version"": ""0.26.0"",
+  ""version"": ""0.27.0"",
   ""description"": ""Cooperative scheduler for the browser environment."",
   ""repository"": {
     ""type"": ""git"","
facebook/react,7f9d99749c95d69b23efaa328c4388d73a39bf50,Ricky,2025-10-01T20:31:30Z,"Land enableHiddenSubtreeInsertionEffectCleanup (#34372)

Fixes a bug where insertion effects were not cleaned up if a hidden
Activity is unmounted.",packages/shared/ReactFeatureFlags.js,1,1,2,"@@ -166,7 +166,7 @@ export const renameElementSymbol: boolean = true;
 /**
  * Enables a fix to run insertion effect cleanup on hidden subtrees.
  */
-export const enableHiddenSubtreeInsertionEffectCleanup: boolean = false;
+export const enableHiddenSubtreeInsertionEffectCleanup: boolean = true;
 
 /**
  * Removes legacy style context defined using static `contextTypes` and consumed with static `childContextTypes`."
facebook/react,aef8b1b562ed7db87ae9552e44168a54af84aaf8,"Sebastian ""Sebbie"" Silbermann",2025-10-01T20:11:02Z,"19.2 changelog (#34655)

Co-authored-by: Jack Pope <jackpope1@gmail.com>
Co-authored-by: Rick Hanlon <rickhanlonii@meta.com>",CHANGELOG.md,73,0,73,"@@ -1,3 +1,76 @@
+## 19.2.0 (October 1st, 2025)
+
+Below is a list of all new features, APIs, and bug fixes.
+
+Read the [React 19.2 release post](https://react.dev/blog/2025/10/01/react-19-2) for more information.
+
+### New React Features
+
+- [`<Activity>`](https://react.dev/reference/react/Activity): A new API to hide and restore the UI and internal state of its children.
+- [`useEffectEvent`](https://react.dev/reference/react/useEffectEvent) is a React Hook that lets you extract non-reactive logic into an [Effect Event](https://react.dev/learn/separating-events-from-effects#declaring-an-effect-event).
+- [`cacheSignal`](https://react.dev/reference/react/cacheSignal) (for RSCs) lets your know when the `cache()` lifetime is over.
+- [React Performance tracks](https://react.dev/reference/developer-tooling/react-performance-tracks) appear on the Performance panel’s timeline in your browser developer tools
+
+### New React DOM Features
+
+- Added resume APIs for partial pre-rendering with Web Streams:
+  - [`resume`](https://react.dev/reference/react-dom/server/resume): to resume a prerender to a stream.
+  - [`resumeAndPrerender`](https://react.dev/reference/react-dom/static/resumeAndPrerender): to resume a prerender to HTML.
+- Added resume APIs for partial pre-rendering with Node Streams:
+  - [`resumeToPipeableStream`](https://react.dev/reference/react-dom/server/resumeToPipeableStream): to resume a prerender to a stream.
+  - [`resumeAndPrerenderToNodeStream`](https://react.dev/reference/react-dom/static/resumeAndPrerenderToNodeStream): to resume a prerender to HTML.
+- Updated [`prerender`](https://react.dev/reference/react-dom/static/prerender) APIs to return a `postponed` state that can be passed to the `resume` APIs.
+
+### Notable changes
+
+- React DOM now batches suspense boundary reveals, matching the behavior of client side rendering. This change is especially noticeable when animating the reveal of Suspense boundaries e.g. with the upcoming `<ViewTransition>` Component. React will batch as much reveals as possible before the first paint while trying to hit popular first-contentful paint metrics.
+- Add Node Web Streams (`prerender`, `renderToReadableStream`) to server-side-rendering APIs for Node.js
+- Use underscore instead of `:` IDs generated by useId
+
+### All Changes
+
+#### React
+
+- `<Activity />` was developed over many years, starting before `ClassComponent.setState` (@acdlite @sebmarkbage and many others)
+- Stringify context as ""SomeContext"" instead of ""SomeContext.Provider"" (@kassens [#33507](https://github.com/facebook/react/pull/33507))
+- Include stack of cause of React instrumentation errors with `%o` placeholder (@eps1lon [#34198](https://github.com/facebook/react/pull/34198))
+- Fix infinite `useDeferredValue` loop in popstate event (@acdlite [#32821](https://github.com/facebook/react/pull/32821))
+- Fix a bug when an initial value was passed to `useDeferredValue` (@acdlite [#34376](https://github.com/facebook/react/pull/34376))
+- Fix a crash when submitting forms with Client Actions (@sebmarkbage [#33055](https://github.com/facebook/react/pull/33055))
+- Hide/unhide the content of dehydrated suspense boundaries if they resuspend (@sebmarkbage [#32900](https://github.com/facebook/react/pull/32900))
+- Avoid stack overflow on wide trees during Hot Reload (@sophiebits [#34145](https://github.com/facebook/react/pull/34145))
+- Improve Owner and Component stacks in various places (@sebmarkbage, @eps1lon: [#33629](https://github.com/facebook/react/pull/33629), [#33724](https://github.com/facebook/react/pull/33724), [#32735](https://github.com/facebook/react/pull/32735), [#33723](https://github.com/facebook/react/pull/33723))
+- Add `cacheSignal` (@sebmarkbage [#33557](https://github.com/facebook/react/pull/33557))
+
+#### React DOM
+
+- Block on Suspensey Fonts during reveal of server-side-rendered content (@sebmarkbage [#33342](https://github.com/facebook/react/pull/33342))
+- Use underscore instead of `:` for IDs generated by `useId` (@sebmarkbage, @eps1lon: [#32001](https://github.com/facebook/react/pull/32001), [https://github.com/facebook/react/pull/33342](https://github.com/facebook/react/pull/33342)[#33099](https://github.com/facebook/react/pull/33099), [#33422](https://github.com/facebook/react/pull/33422))
+- Stop warning when ARIA 1.3 attributes are used (@Abdul-Omira [#34264](https://github.com/facebook/react/pull/34264))
+- Allow `nonce` to be used on hoistable styles (@Andarist [#32461](https://github.com/facebook/react/pull/32461))
+- Warn for using a React owned node as a Container if it also has text content (@sebmarkbage [#32774](https://github.com/facebook/react/pull/32774))
+- s/HTML/text for for error messages if text hydration mismatches (@rickhanlonii [#32763](https://github.com/facebook/react/pull/32763))
+- Fix a bug with `React.use` inside `React.lazy`\-ed Component (@hi-ogawa [#33941](https://github.com/facebook/react/pull/33941))
+- Enable the `progressiveChunkSize` option for server-side-rendering APIs (@sebmarkbage [#33027](https://github.com/facebook/react/pull/33027))
+- Fix a bug with deeply nested Suspense inside Suspense fallback when server-side-rendering (@gnoff [#33467](https://github.com/facebook/react/pull/33467))
+- Avoid hanging when suspending after aborting while rendering (@gnoff [#34192](https://github.com/facebook/react/pull/34192))
+- Add Node Web Streams to server-side-rendering APIs for Node.js (@sebmarkbage [#33475](https://github.com/facebook/react/pull/33475))
+
+#### React Server Components
+
+- Preload `<img>` and `<link>` using hints before they're rendered (@sebmarkbage [#34604](https://github.com/facebook/react/pull/34604))
+- Log error if production elements are rendered during development (@eps1lon [#34189](https://github.com/facebook/react/pull/34189))
+- Fix a bug when returning a Temporary reference (e.g. a Client Reference) from Server Functions (@sebmarkbage [#34084](https://github.com/facebook/react/pull/34084), @denk0403 [#33761](https://github.com/facebook/react/pull/33761))
+- Pass line/column to `filterStackFrame` (@eps1lon [#33707](https://github.com/facebook/react/pull/33707))
+- Support Async Modules in Turbopack Server References (@lubieowoce [#34531](https://github.com/facebook/react/pull/34531))
+- Add support for .mjs file extension in Webpack (@jennyscript [#33028](https://github.com/facebook/react/pull/33028))
+- Fix a wrong missing key warning (@unstubbable [#34350](https://github.com/facebook/react/pull/34350))
+- Make console log resolve in predictable order (@sebmarkbage [#33665](https://github.com/facebook/react/pull/33665))
+
+#### React Reconciler
+
+- [createContainer](https://github.com/facebook/react/blob/v19.2.0/packages/react-reconciler/src/ReactFiberReconciler.js#L255-L261) and [createHydrationContainer](https://github.com/facebook/react/blob/v19.2.0/packages/react-reconciler/src/ReactFiberReconciler.js#L305-L312) had their parameter order adjusted after `on*` handlers to account for upcoming experimental APIs
+
 ## 19.1.1 (July 28, 2025)
 
 ### React"
facebook/react,aef8b1b562ed7db87ae9552e44168a54af84aaf8,"Sebastian ""Sebbie"" Silbermann",2025-10-01T20:11:02Z,"19.2 changelog (#34655)

Co-authored-by: Jack Pope <jackpope1@gmail.com>
Co-authored-by: Rick Hanlon <rickhanlonii@meta.com>",packages/eslint-plugin-react-hooks/CHANGELOG.md,15,0,15,"@@ -1,3 +1,18 @@
+## 6.1.0
+
+**Note:** Version 6.0.0 was mistakenly released and immediately deprecated and untagged on npm. This is the first official 6.x major release and includes breaking changes. 
+
+- **Breaking:** Require Node.js 18 or newer. ([@michaelfaith](https://github.com/michaelfaith) in [#32458](https://github.com/facebook/react/pull/32458))
+- **Breaking:** Flat config is now the default `recommended` preset. Legacy config moved to `recommended-legacy`. ([@michaelfaith](https://github.com/michaelfaith) in [#32457](https://github.com/facebook/react/pull/32457))
+- **New Violations:** Disallow calling `use` within try/catch blocks. ([@poteto](https://github.com/poteto) in [#34040](https://github.com/facebook/react/pull/34040))
+- **New Violations:** Disallow calling `useEffectEvent` functions in arbitrary closures. ([@jbrown215](https://github.com/jbrown215) in [#33544](https://github.com/facebook/react/pull/33544))
+- Handle `React.useEffect` in addition to `useEffect` in rules-of-hooks. ([@Ayc0](https://github.com/Ayc0) in [#34076](https://github.com/facebook/react/pull/34076))
+- Added `react-hooks` settings config option that to accept `additionalEffectHooks` that are used across exhaustive-deps and rules-of-hooks rules. ([@jbrown215](https://github.com/jbrown215)) in [#34497](https://github.com/facebook/react/pull/34497)
+
+## 6.0.0
+
+Accidentally released. See 6.1.0 for the actual changes.
+
 ## 5.2.0
 
 - Support flat config ([@michaelfaith](https://github.com/michaelfaith) in [#30774](https://github.com/facebook/react/pull/30774))"
facebook/react,67e24bc5279204108b749fe48b4d395ef9e49e67,Jack Pope,2025-10-01T19:17:08Z,"Improve lint error messages for useEffectEvent (#34669)

Called Before:

> `logEvent` is a function created with React Hook ""useEffectEvent"", and
can only be called from the same component.

Called After:

> `logEvent` is a function created with React Hook ""useEffectEvent"", and
can only be called from Effects and Effect Events in the same component.

Referenced Before:

> `logEvent` is a function created with React Hook ""useEffectEvent"", and
can only be called from the same component. They cannot be assigned to
variables or passed down.

Referenced After:

> `logEvent` is a function created with React Hook ""useEffectEvent"", and
can only be called from Effects and Effect Events in the same component.
It cannot be assigned to a variable or passed down.",packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js,19,3,22,"@@ -1637,17 +1637,32 @@ const allTests = {
           const onClick = useEffectEvent(() => {
             showNotification(theme);
           });
+          // error message 1
           const onClick2 = () => { onClick() };
+          // error message 2
           const onClick3 = useCallback(() => onClick(), []);
+          // error message 3
+          const onClick4 = onClick;
           return <>
+            {/** error message 4 */}
+            <Child onClick={onClick}></Child>
             <Child onClick={onClick2}></Child>
             <Child onClick={onClick3}></Child>
           </>;
         }
       `,
+      // Explicitly test error messages here for various cases
       errors: [
-        useEffectEventError('onClick', true),
-        useEffectEventError('onClick', true),
+        `\`onClick\` is a function created with React Hook ""useEffectEvent"", and can only be called from ` +
+          'Effects and Effect Events in the same component.',
+        `\`onClick\` is a function created with React Hook ""useEffectEvent"", and can only be called from ` +
+          'Effects and Effect Events in the same component.',
+        `\`onClick\` is a function created with React Hook ""useEffectEvent"", and can only be called from ` +
+          `Effects and Effect Events in the same component. ` +
+          `It cannot be assigned to a variable or passed down.`,
+        `\`onClick\` is a function created with React Hook ""useEffectEvent"", and can only be called from ` +
+          `Effects and Effect Events in the same component. ` +
+          `It cannot be assigned to a variable or passed down.`,
       ],
     },
   ],
@@ -1714,7 +1729,8 @@ function useEffectEventError(fn, called) {
   return {
     message:
       `\`${fn}\` is a function created with React Hook ""useEffectEvent"", and can only be called from ` +
-      `the same component.${called ? '' : ' They cannot be assigned to variables or passed down.'}`,
+      'Effects and Effect Events in the same component.' +
+      (called ? '' : ' It cannot be assigned to a variable or passed down.'),
   };
 }
 "
facebook/react,67e24bc5279204108b749fe48b4d395ef9e49e67,Jack Pope,2025-10-01T19:17:08Z,"Improve lint error messages for useEffectEvent (#34669)

Called Before:

> `logEvent` is a function created with React Hook ""useEffectEvent"", and
can only be called from the same component.

Called After:

> `logEvent` is a function created with React Hook ""useEffectEvent"", and
can only be called from Effects and Effect Events in the same component.

Referenced Before:

> `logEvent` is a function created with React Hook ""useEffectEvent"", and
can only be called from the same component. They cannot be assigned to
variables or passed down.

Referenced After:

> `logEvent` is a function created with React Hook ""useEffectEvent"", and
can only be called from Effects and Effect Events in the same component.
It cannot be assigned to a variable or passed down.",packages/eslint-plugin-react-hooks/src/rules/RulesOfHooks.ts,14,8,22,"@@ -166,10 +166,19 @@ function isEffectIdentifier(node: Node, additionalHooks?: RegExp): boolean {
 
   return false;
 }
+
 function isUseEffectEventIdentifier(node: Node): boolean {
   return node.type === 'Identifier' && node.name === 'useEffectEvent';
 }
 
+function useEffectEventError(fn: string, called: boolean): string {
+  return (
+    `\`${fn}\` is a function created with React Hook ""useEffectEvent"", and can only be called from ` +
+    'Effects and Effect Events in the same component.' +
+    (called ? '' : ' It cannot be assigned to a variable or passed down.')
+  );
+}
+
 function isUseIdentifier(node: Node): boolean {
   return isReactFunction(node, 'use');
 }
@@ -769,14 +778,11 @@ const rule = {
         // This identifier resolves to a useEffectEvent function, but isn't being referenced in an
         // effect or another event function. It isn't being called either.
         if (lastEffect == null && useEffectEventFunctions.has(node)) {
-          const message =
-            `\`${getSourceCode().getText(
-              node,
-            )}\` is a function created with React Hook ""useEffectEvent"", and can only be called from ` +
-            'the same component.' +
-            (node.parent.type === 'CallExpression'
-              ? ''
-              : ' They cannot be assigned to variables or passed down.');
+          const message = useEffectEventError(
+            getSourceCode().getText(node),
+            node.parent.type === 'CallExpression',
+          );
+
           context.report({
             node,
             message,"
facebook/react,bbc2d596fa48b64d359b96e167403693caaaabd9,Sebastian Markbåge,2025-10-01T17:45:37Z,"Traverse down an updated tree even if it has no passive effects in profiling mode (#34667)

We need this to be able to log the renders that happened inside.

This is the same thing we do here but for the offscreen special cases:


https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberCommitWork.js#L3452-L3457",packages/react-reconciler/src/ReactFiberCommitWork.js,20,3,23,"@@ -3945,7 +3945,12 @@ function commitPassiveMountOnFiber(
           instance._visibility |= OffscreenPassiveEffectsConnected;
 
           const includeWorkInProgressEffects =
-            (finishedWork.subtreeFlags & PassiveMask) !== NoFlags;
+            (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||
+            (enableProfilerTimer &&
+              enableComponentPerformanceTrack &&
+              finishedWork.actualDuration !== 0 &&
+              (finishedWork.alternate === null ||
+                finishedWork.alternate.child !== finishedWork.child));
           recursivelyTraverseReconnectPassiveEffects(
             finishedRoot,
             finishedWork,
@@ -4113,7 +4118,12 @@ function recursivelyTraverseReconnectPassiveEffects(
   // node was reused.
   const childShouldIncludeWorkInProgressEffects =
     includeWorkInProgressEffects &&
-    (parentFiber.subtreeFlags & PassiveMask) !== NoFlags;
+    ((parentFiber.subtreeFlags & PassiveMask) !== NoFlags ||
+      (enableProfilerTimer &&
+        enableComponentPerformanceTrack &&
+        parentFiber.actualDuration !== 0 &&
+        (parentFiber.alternate === null ||
+          parentFiber.alternate.child !== parentFiber.child)));
 
   // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)
   let child = parentFiber.child;
@@ -4379,7 +4389,14 @@ function recursivelyTraverseAtomicPassiveEffects(
   // pre-rendering. We call this function when traversing a hidden tree whose
   // regular effects are currently disconnected.
   // TODO: Add special flag for atomic effects
-  if (parentFiber.subtreeFlags & PassiveMask) {
+  if (
+    parentFiber.subtreeFlags & PassiveMask ||
+    (enableProfilerTimer &&
+      enableComponentPerformanceTrack &&
+      parentFiber.actualDuration !== 0 &&
+      (parentFiber.alternate === null ||
+        parentFiber.alternate.child !== parentFiber.child))
+  ) {
     let child = parentFiber.child;
     while (child !== null) {
       if (enableProfilerTimer && enableComponentPerformanceTrack) {"
actions/checkout,ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493,Salman Chishti,2025-08-13T12:57:25Z,"Update README to include Node.js 24 support details and requirements (#2248)

* Update README to include Node.js 24 support details and requirements

* Update",README.md,7,2,9,"@@ -2,7 +2,11 @@
 
 # Checkout V5
 
-Checkout v5 now supports Node.js 24
+## What's new
+
+- Updated to the node24 runtime
+  - This requires a minimum Actions Runner version of [v2.327.1](https://github.com/actions/runner/releases/tag/v2.327.1) to run.
+
 
 # Checkout V4
 
@@ -154,9 +158,10 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 # Scenarios
 
 - [Checkout V5](#checkout-v5)
+  - [What's new](#whats-new)
 - [Checkout V4](#checkout-v4)
     - [Note](#note)
-- [What's new](#whats-new)
+- [What's new](#whats-new-1)
 - [Usage](#usage)
 - [Scenarios](#scenarios)
   - [Fetch only the root files](#fetch-only-the-root-files)"
actions/checkout,08c6903cd8c0fde910a37f88322edcfb5dd907a8,Salman Chishti,2025-08-11T12:35:28Z,Prepare v5.0.0 release (#2238),.github/workflows/update-main-version.yml,1,0,1,"@@ -11,6 +11,7 @@ on:
         type: choice
         description: The major version to update
         options:
+          - v5
           - v4
           - v3
           - v2"
actions/checkout,08c6903cd8c0fde910a37f88322edcfb5dd907a8,Salman Chishti,2025-08-11T12:35:28Z,Prepare v5.0.0 release (#2238),CHANGELOG.md,4,0,4,"@@ -1,5 +1,9 @@
 # Changelog
 
+## V5.0.0
+* Update actions checkout to use node 24 by @salmanmkc in https://github.com/actions/checkout/pull/2226
+
+
 ## V4.3.0
 * docs: update README.md by @motss in https://github.com/actions/checkout/pull/1971
 * Add internal repos for checking out multiple repositories by @mouismail in https://github.com/actions/checkout/pull/1977"
actions/checkout,08c6903cd8c0fde910a37f88322edcfb5dd907a8,Salman Chishti,2025-08-11T12:35:28Z,Prepare v5.0.0 release (#2238),README.md,42,30,72,"@@ -1,5 +1,9 @@
 [![Build and Test](https://github.com/actions/checkout/actions/workflows/test.yml/badge.svg)](https://github.com/actions/checkout/actions/workflows/test.yml)
 
+# Checkout V5
+
+Checkout v5 now supports Node.js 24
+
 # Checkout V4
 
 This action checks-out your repository under `$GITHUB_WORKSPACE`, so your workflow can access it.
@@ -36,7 +40,7 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 
 <!-- start usage -->
 ```yaml
-- uses: actions/checkout@v4
+- uses: actions/checkout@v5
   with:
     # Repository name with owner. For example, actions/checkout
     # Default: ${{ github.repository }}
@@ -149,32 +153,40 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 
 # Scenarios
 
-- [Fetch only the root files](#Fetch-only-the-root-files)
-- [Fetch only the root files and `.github` and `src` folder](#Fetch-only-the-root-files-and-github-and-src-folder)
-- [Fetch only a single file](#Fetch-only-a-single-file)
-- [Fetch all history for all tags and branches](#Fetch-all-history-for-all-tags-and-branches)
-- [Checkout a different branch](#Checkout-a-different-branch)
-- [Checkout HEAD^](#Checkout-HEAD)
-- [Checkout multiple repos (side by side)](#Checkout-multiple-repos-side-by-side)
-- [Checkout multiple repos (nested)](#Checkout-multiple-repos-nested)
-- [Checkout multiple repos (private)](#Checkout-multiple-repos-private)
-- [Checkout pull request HEAD commit instead of merge commit](#Checkout-pull-request-HEAD-commit-instead-of-merge-commit)
-- [Checkout pull request on closed event](#Checkout-pull-request-on-closed-event)
-- [Push a commit using the built-in token](#Push-a-commit-using-the-built-in-token)
-- [Push a commit to a PR using the built-in token](#Push-a-commit-to-a-PR-using-the-built-in-token)
+- [Checkout V5](#checkout-v5)
+- [Checkout V4](#checkout-v4)
+    - [Note](#note)
+- [What's new](#whats-new)
+- [Usage](#usage)
+- [Scenarios](#scenarios)
+  - [Fetch only the root files](#fetch-only-the-root-files)
+  - [Fetch only the root files and `.github` and `src` folder](#fetch-only-the-root-files-and-github-and-src-folder)
+  - [Fetch only a single file](#fetch-only-a-single-file)
+  - [Fetch all history for all tags and branches](#fetch-all-history-for-all-tags-and-branches)
+  - [Checkout a different branch](#checkout-a-different-branch)
+  - [Checkout HEAD^](#checkout-head)
+  - [Checkout multiple repos (side by side)](#checkout-multiple-repos-side-by-side)
+  - [Checkout multiple repos (nested)](#checkout-multiple-repos-nested)
+  - [Checkout multiple repos (private)](#checkout-multiple-repos-private)
+  - [Checkout pull request HEAD commit instead of merge commit](#checkout-pull-request-head-commit-instead-of-merge-commit)
+  - [Checkout pull request on closed event](#checkout-pull-request-on-closed-event)
+  - [Push a commit using the built-in token](#push-a-commit-using-the-built-in-token)
+  - [Push a commit to a PR using the built-in token](#push-a-commit-to-a-pr-using-the-built-in-token)
+- [Recommended permissions](#recommended-permissions)
+- [License](#license)
 
 ## Fetch only the root files
 
 ```yaml
-- uses: actions/checkout@v4
+- uses: actions/checkout@v5
   with:
     sparse-checkout: .
 ```
 
 ## Fetch only the root files and `.github` and `src` folder
 
 ```yaml
-- uses: actions/checkout@v4
+- uses: actions/checkout@v5
   with:
     sparse-checkout: |
       .github
@@ -184,7 +196,7 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 ## Fetch only a single file
 
 ```yaml
-- uses: actions/checkout@v4
+- uses: actions/checkout@v5
   with:
     sparse-checkout: |
       README.md
@@ -194,23 +206,23 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 ## Fetch all history for all tags and branches
 
 ```yaml
-- uses: actions/checkout@v4
+- uses: actions/checkout@v5
   with:
     fetch-depth: 0
 ```
 
 ## Checkout a different branch
 
 ```yaml
-- uses: actions/checkout@v4
+- uses: actions/checkout@v5
   with:
     ref: my-branch
 ```
 
 ## Checkout HEAD^
 
 ```yaml
-- uses: actions/checkout@v4
+- uses: actions/checkout@v5
   with:
     fetch-depth: 2
 - run: git checkout HEAD^
@@ -220,12 +232,12 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 
 ```yaml
 - name: Checkout
-  uses: actions/checkout@v4
+  uses: actions/checkout@v5
   with:
     path: main
 
 - name: Checkout tools repo
-  uses: actions/checkout@v4
+  uses: actions/checkout@v5
   with:
     repository: my-org/my-tools
     path: my-tools
@@ -236,10 +248,10 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 
 ```yaml
 - name: Checkout
-  uses: actions/checkout@v4
+  uses: actions/checkout@v5
 
 - name: Checkout tools repo
-  uses: actions/checkout@v4
+  uses: actions/checkout@v5
   with:
     repository: my-org/my-tools
     path: my-tools
@@ -250,12 +262,12 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 
 ```yaml
 - name: Checkout
-  uses: actions/checkout@v4
+  uses: actions/checkout@v5
   with:
     path: main
 
 - name: Checkout private tools
-  uses: actions/checkout@v4
+  uses: actions/checkout@v5
   with:
     repository: my-org/my-private-tools
     token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
@@ -268,7 +280,7 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 ## Checkout pull request HEAD commit instead of merge commit
 
 ```yaml
-- uses: actions/checkout@v4
+- uses: actions/checkout@v5
   with:
     ref: ${{ github.event.pull_request.head.sha }}
 ```
@@ -284,7 +296,7 @@ jobs:
   build:
     runs-on: ubuntu-latest
     steps:
-      - uses: actions/checkout@v4
+      - uses: actions/checkout@v5
 ```
 
 ## Push a commit using the built-in token
@@ -295,7 +307,7 @@ jobs:
   build:
     runs-on: ubuntu-latest
     steps:
-      - uses: actions/checkout@v4
+      - uses: actions/checkout@v5
       - run: |
           date > generated.txt
           # Note: the following account information will not work on GHES
@@ -317,7 +329,7 @@ jobs:
   build:
     runs-on: ubuntu-latest
     steps:
-      - uses: actions/checkout@v4
+      - uses: actions/checkout@v5
         with:
           ref: ${{ github.head_ref }}
       - run: |"
actions/checkout,08c6903cd8c0fde910a37f88322edcfb5dd907a8,Salman Chishti,2025-08-11T12:35:28Z,Prepare v5.0.0 release (#2238),package-lock.json,2,2,4,"@@ -1,12 +1,12 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.3.0"",
+  ""version"": ""5.0.0"",
   ""lockfileVersion"": 3,
   ""requires"": true,
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.3.0"",
+      ""version"": ""5.0.0"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.1"","
actions/checkout,08c6903cd8c0fde910a37f88322edcfb5dd907a8,Salman Chishti,2025-08-11T12:35:28Z,Prepare v5.0.0 release (#2238),package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.3.0"",
+  ""version"": ""5.0.0"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {"
actions/checkout,08c6903cd8c0fde910a37f88322edcfb5dd907a8,Salman Chishti,2025-08-11T12:35:28Z,Prepare v5.0.0 release (#2238),src/misc/generate-docs.ts,1,1,2,"@@ -120,7 +120,7 @@ function updateUsage(
 }
 
 updateUsage(
-  'actions/checkout@v4',
+  'actions/checkout@v5',
   path.join(__dirname, '..', '..', 'action.yml'),
   path.join(__dirname, '..', '..', 'README.md')
 )"
actions/checkout,9f265659d3bb64ab1440b03b12f4d47a24320917,Salman Chishti,2025-08-11T10:52:51Z,"Update actions checkout to use node 24 (#2226)

* use node 24

* update other parts to node 24

* bump to major version, audit fix, changelog

* update licenses

* update dist

* update major version

* will do separate pr for v5 and will do a minor version for previous changes",.github/workflows/check-dist.yml,2,2,4,"@@ -24,10 +24,10 @@ jobs:
     steps:
       - uses: actions/checkout@v4.1.6
 
-      - name: Set Node.js 20.x
+      - name: Set Node.js 24.x
         uses: actions/setup-node@v4
         with:
-          node-version: 20.x
+          node-version: 24.x
 
       - name: Install dependencies
         run: npm ci"
actions/checkout,9f265659d3bb64ab1440b03b12f4d47a24320917,Salman Chishti,2025-08-11T10:52:51Z,"Update actions checkout to use node 24 (#2226)

* use node 24

* update other parts to node 24

* bump to major version, audit fix, changelog

* update licenses

* update dist

* update major version

* will do separate pr for v5 and will do a minor version for previous changes",.github/workflows/test.yml,1,1,2,"@@ -18,7 +18,7 @@ jobs:
     steps:
       - uses: actions/setup-node@v4
         with:
-          node-version: 20.x
+          node-version: 24.x
       - uses: actions/checkout@v4.1.6
       - run: npm ci
       - run: npm run build"
actions/checkout,9f265659d3bb64ab1440b03b12f4d47a24320917,Salman Chishti,2025-08-11T10:52:51Z,"Update actions checkout to use node 24 (#2226)

* use node 24

* update other parts to node 24

* bump to major version, audit fix, changelog

* update licenses

* update dist

* update major version

* will do separate pr for v5 and will do a minor version for previous changes",action.yml,1,1,2,"@@ -104,6 +104,6 @@ outputs:
   commit:
     description: 'The commit SHA that was checked out'
 runs:
-  using: node20
+  using: node24
   main: dist/index.js
   post: dist/index.js"
actions/checkout,9f265659d3bb64ab1440b03b12f4d47a24320917,Salman Chishti,2025-08-11T10:52:51Z,"Update actions checkout to use node 24 (#2226)

* use node 24

* update other parts to node 24

* bump to major version, audit fix, changelog

* update licenses

* update dist

* update major version

* will do separate pr for v5 and will do a minor version for previous changes",package-lock.json,8,8,16,"@@ -18,7 +18,7 @@
       },
       ""devDependencies"": {
         ""@types/jest"": ""^29.5.12"",
-        ""@types/node"": ""^20.12.12"",
+        ""@types/node"": ""^24.1.0"",
         ""@types/uuid"": ""^9.0.8"",
         ""@typescript-eslint/eslint-plugin"": ""^7.9.0"",
         ""@typescript-eslint/parser"": ""^7.9.0"",
@@ -1515,12 +1515,12 @@
       ""dev"": true
     },
     ""node_modules/@types/node"": {
-      ""version"": ""20.12.12"",
-      ""resolved"": ""https://registry.npmjs.org/@types/node/-/node-20.12.12.tgz"",
-      ""integrity"": ""sha512-eWLDGF/FOSPtAvEqeRAQ4C8LSA7M1I7i0ky1I8U7kD1J5ITyW3AsRhQrKVoWf5pFKZ2kILsEGJhsI9r93PYnOw=="",
+      ""version"": ""24.1.0"",
+      ""resolved"": ""https://registry.npmjs.org/@types/node/-/node-24.1.0.tgz"",
+      ""integrity"": ""sha512-ut5FthK5moxFKH2T1CUOC6ctR67rQRvvHdFLCD2Ql6KXmMuCrjsSsRI9UsLCm9M18BMwClv4pn327UvB7eeO1w=="",
       ""dev"": true,
       ""dependencies"": {
-        ""undici-types"": ""~5.26.4""
+        ""undici-types"": ""~7.8.0""
       }
     },
     ""node_modules/@types/stack-utils"": {
@@ -6865,9 +6865,9 @@
       }
     },
     ""node_modules/undici-types"": {
-      ""version"": ""5.26.5"",
-      ""resolved"": ""https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz"",
-      ""integrity"": ""sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA=="",
+      ""version"": ""7.8.0"",
+      ""resolved"": ""https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz"",
+      ""integrity"": ""sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw=="",
       ""dev"": true
     },
     ""node_modules/universal-user-agent"": {"
actions/checkout,9f265659d3bb64ab1440b03b12f4d47a24320917,Salman Chishti,2025-08-11T10:52:51Z,"Update actions checkout to use node 24 (#2226)

* use node 24

* update other parts to node 24

* bump to major version, audit fix, changelog

* update licenses

* update dist

* update major version

* will do separate pr for v5 and will do a minor version for previous changes",package.json,1,1,2,"@@ -37,7 +37,7 @@
   },
   ""devDependencies"": {
     ""@types/jest"": ""^29.5.12"",
-    ""@types/node"": ""^20.12.12"",
+    ""@types/node"": ""^24.1.0"",
     ""@types/uuid"": ""^9.0.8"",
     ""@typescript-eslint/eslint-plugin"": ""^7.9.0"",
     ""@typescript-eslint/parser"": ""^7.9.0"","
actions/checkout,08eba0b27e820071cde6df949e0beb9ba4906955,Salman Chishti,2025-08-11T10:30:37Z,Prepare release v4.3.0 (#2237),CHANGELOG.md,9,0,9,"@@ -1,5 +1,14 @@
 # Changelog
 
+## V4.3.0
+* docs: update README.md by @motss in https://github.com/actions/checkout/pull/1971
+* Add internal repos for checking out multiple repositories by @mouismail in https://github.com/actions/checkout/pull/1977
+* Documentation update - add recommended permissions to Readme by @benwells in https://github.com/actions/checkout/pull/2043
+* Adjust positioning of user email note and permissions heading by @joshmgross in https://github.com/actions/checkout/pull/2044
+* Update README.md by @nebuk89 in https://github.com/actions/checkout/pull/2194
+* Update CODEOWNERS for actions by @TingluoHuang in https://github.com/actions/checkout/pull/2224
+* Update package dependencies by @salmanmkc in https://github.com/actions/checkout/pull/2236
+
 ## v4.2.2
 * `url-helper.ts` now leverages well-known environment variables by @jww3 in https://github.com/actions/checkout/pull/1941
 * Expand unit test coverage for `isGhes` by @jww3 in https://github.com/actions/checkout/pull/1946"
actions/checkout,08eba0b27e820071cde6df949e0beb9ba4906955,Salman Chishti,2025-08-11T10:30:37Z,Prepare release v4.3.0 (#2237),package-lock.json,2,2,4,"@@ -1,12 +1,12 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.2.2"",
+  ""version"": ""4.3.0"",
   ""lockfileVersion"": 3,
   ""requires"": true,
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.2.2"",
+      ""version"": ""4.3.0"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.1"","
actions/checkout,08eba0b27e820071cde6df949e0beb9ba4906955,Salman Chishti,2025-08-11T10:30:37Z,Prepare release v4.3.0 (#2237),package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.2.2"",
+  ""version"": ""4.3.0"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {"
actions/checkout,631c7dc4f80f88219c5ee78fee08c6b62fac8da1,Salman Chishti,2025-08-11T10:22:41Z,"Update package dependencies (#2236)

* package updates

* update dist

* Update license files",.licenses/npm/@octokit/endpoint.dep.yml,2,2,4,"@@ -1,9 +1,9 @@
 ---
 name: ""@octokit/endpoint""
-version: 9.0.5
+version: 9.0.6
 type: npm
 summary: Turns REST API endpoints into generic request options
-homepage: 
+homepage:
 license: mit
 licenses:
 - sources: LICENSE"
actions/checkout,631c7dc4f80f88219c5ee78fee08c6b62fac8da1,Salman Chishti,2025-08-11T10:22:41Z,"Update package dependencies (#2236)

* package updates

* update dist

* Update license files",.licenses/npm/@octokit/plugin-paginate-rest.dep.yml,2,2,4,"@@ -1,9 +1,9 @@
 ---
 name: ""@octokit/plugin-paginate-rest""
-version: 9.2.1
+version: 9.2.2
 type: npm
 summary: Octokit plugin to paginate REST API endpoint responses
-homepage: 
+homepage:
 license: mit
 licenses:
 - sources: LICENSE"
actions/checkout,631c7dc4f80f88219c5ee78fee08c6b62fac8da1,Salman Chishti,2025-08-11T10:22:41Z,"Update package dependencies (#2236)

* package updates

* update dist

* Update license files",.licenses/npm/@octokit/request-error.dep.yml,2,2,4,"@@ -1,9 +1,9 @@
 ---
 name: ""@octokit/request-error""
-version: 5.1.0
+version: 5.1.1
 type: npm
 summary: Error class for Octokit request errors
-homepage: 
+homepage:
 license: mit
 licenses:
 - sources: LICENSE"
actions/checkout,631c7dc4f80f88219c5ee78fee08c6b62fac8da1,Salman Chishti,2025-08-11T10:22:41Z,"Update package dependencies (#2236)

* package updates

* update dist

* Update license files",.licenses/npm/@octokit/request.dep.yml,2,2,4,"@@ -1,10 +1,10 @@
 ---
 name: ""@octokit/request""
-version: 8.4.0
+version: 8.4.1
 type: npm
 summary: Send parameterized requests to GitHub's APIs with sensible defaults in browsers
   and Node
-homepage: 
+homepage:
 license: mit
 licenses:
 - sources: LICENSE"
actions/checkout,631c7dc4f80f88219c5ee78fee08c6b62fac8da1,Salman Chishti,2025-08-11T10:22:41Z,"Update package dependencies (#2236)

* package updates

* update dist

* Update license files",.licenses/npm/undici.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: undici
-version: 5.28.4
+version: 5.29.0
 type: npm
 summary: An HTTP/1.1 client, written from scratch for Node.js
 homepage: https://undici.nodejs.org"
actions/checkout,631c7dc4f80f88219c5ee78fee08c6b62fac8da1,Salman Chishti,2025-08-11T10:22:41Z,"Update package dependencies (#2236)

* package updates

* update dist

* Update license files",dist/index.js,57,41,98,"@@ -7802,7 +7802,7 @@ module.exports = __toCommonJS(dist_src_exports);
 var import_universal_user_agent = __nccwpck_require__(5030);
 
 // pkg/dist-src/version.js
-var VERSION = ""9.0.5"";
+var VERSION = ""9.0.6"";
 
 // pkg/dist-src/defaults.js
 var userAgent = `octokit-endpoint.js/${VERSION} ${(0, import_universal_user_agent.getUserAgent)()}`;
@@ -7907,9 +7907,9 @@ function addQueryParameters(url, parameters) {
 }
 
 // pkg/dist-src/util/extract-url-variable-names.js
-var urlVariableRegex = /\{[^}]+\}/g;
+var urlVariableRegex = /\{[^{}}]+\}/g;
 function removeNonChars(variableName) {
-  return variableName.replace(/^\W+|\W+$/g, """").split(/,/);
+  return variableName.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g, """").split(/,/);
 }
 function extractUrlVariableNames(url) {
   const matches = url.match(urlVariableRegex);
@@ -8095,7 +8095,7 @@ function parse(options) {
     }
     if (url.endsWith(""/graphql"")) {
       if (options.mediaType.previews?.length) {
-        const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || [];
+        const previewsFromAcceptHeader = headers.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g) || [];
         headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {
           const format = options.mediaType.format ? `.${options.mediaType.format}` : ""+json"";
           return `application/vnd.github.${preview}-preview${format}`;
@@ -8344,7 +8344,7 @@ __export(dist_src_exports, {
 module.exports = __toCommonJS(dist_src_exports);
 
 // pkg/dist-src/version.js
-var VERSION = ""9.2.1"";
+var VERSION = ""9.2.2"";
 
 // pkg/dist-src/normalize-paginated-list-response.js
 function normalizePaginatedListResponse(response) {
@@ -8392,7 +8392,7 @@ function iterator(octokit, route, parameters) {
           const response = await requestMethod({ method, url, headers });
           const normalizedResponse = normalizePaginatedListResponse(response);
           url = ((normalizedResponse.headers.link || """").match(
-            /<([^>]+)>;\s*rel=""next""/
+            /<([^<>]+)>;\s*rel=""next""/
           ) || [])[1];
           return { value: normalizedResponse };
         } catch (error) {
@@ -10944,7 +10944,7 @@ var RequestError = class extends Error {
     if (options.request.headers.authorization) {
       requestCopy.headers = Object.assign({}, options.request.headers, {
         authorization: options.request.headers.authorization.replace(
-          / .*$/,
+          /(?<! ) .*$/,
           "" [REDACTED]""
         )
       });
@@ -11012,7 +11012,7 @@ var import_endpoint = __nccwpck_require__(9440);
 var import_universal_user_agent = __nccwpck_require__(5030);
 
 // pkg/dist-src/version.js
-var VERSION = ""8.4.0"";
+var VERSION = ""8.4.1"";
 
 // pkg/dist-src/is-plain-object.js
 function isPlainObject(value) {
@@ -11071,7 +11071,7 @@ function fetchWrapper(requestOptions) {
       headers[keyAndValue[0]] = keyAndValue[1];
     }
     if (""deprecation"" in headers) {
-      const matches = headers.link && headers.link.match(/<([^>]+)>; rel=""deprecation""/);
+      const matches = headers.link && headers.link.match(/<([^<>]+)>; rel=""deprecation""/);
       const deprecationLink = matches && matches.pop();
       log.warn(
         `[@octokit/request] ""${requestOptions.method} ${requestOptions.url}"" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : """"}`
@@ -18725,7 +18725,7 @@ module.exports = {
 
 
 const { parseSetCookie } = __nccwpck_require__(4408)
-const { stringify, getHeadersList } = __nccwpck_require__(3121)
+const { stringify } = __nccwpck_require__(3121)
 const { webidl } = __nccwpck_require__(1744)
 const { Headers } = __nccwpck_require__(554)
 
@@ -18801,14 +18801,13 @@ function getSetCookies (headers) {
 
   webidl.brandCheck(headers, Headers, { strict: false })
 
-  const cookies = getHeadersList(headers).cookies
+  const cookies = headers.getSetCookie()
 
   if (!cookies) {
     return []
   }
 
-  // In older versions of undici, cookies is a list of name:value.
-  return cookies.map((pair) => parseSetCookie(Array.isArray(pair) ? pair[1] : pair))
+  return cookies.map((pair) => parseSetCookie(pair))
 }
 
 /**
@@ -19236,14 +19235,15 @@ module.exports = {
 /***/ }),
 
 /***/ 3121:
-/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {
+/***/ ((module) => {
 
 ""use strict"";
 
 
-const assert = __nccwpck_require__(9491)
-const { kHeadersList } = __nccwpck_require__(2785)
-
+/**
+ * @param {string} value
+ * @returns {boolean}
+ */
 function isCTLExcludingHtab (value) {
   if (value.length === 0) {
     return false
@@ -19504,31 +19504,13 @@ function stringify (cookie) {
   return out.join('; ')
 }
 
-let kHeadersListNode
-
-function getHeadersList (headers) {
-  if (headers[kHeadersList]) {
-    return headers[kHeadersList]
-  }
-
-  if (!kHeadersListNode) {
-    kHeadersListNode = Object.getOwnPropertySymbols(headers).find(
-      (symbol) => symbol.description === 'headers list'
-    )
-
-    assert(kHeadersListNode, 'Headers cannot be parsed')
-  }
-
-  const headersList = headers[kHeadersListNode]
-  assert(headersList)
-
-  return headersList
-}
-
 module.exports = {
   isCTLExcludingHtab,
-  stringify,
-  getHeadersList
+  validateCookieName,
+  validateCookiePath,
+  validateCookieValue,
+  toIMFDate,
+  stringify
 }
 
 
@@ -21457,6 +21439,14 @@ const { isUint8Array, isArrayBuffer } = __nccwpck_require__(9830)
 const { File: UndiciFile } = __nccwpck_require__(8511)
 const { parseMIMEType, serializeAMimeType } = __nccwpck_require__(685)
 
+let random
+try {
+  const crypto = __nccwpck_require__(6005)
+  random = (max) => crypto.randomInt(0, max)
+} catch {
+  random = (max) => Math.floor(Math.random(max))
+}
+
 let ReadableStream = globalThis.ReadableStream
 
 /** @type {globalThis['File']} */
@@ -21542,7 +21532,7 @@ function extractBody (object, keepalive = false) {
     // Set source to a copy of the bytes held by object.
     source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength))
   } else if (util.isFormDataLike(object)) {
-    const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, '0')}`
+    const boundary = `----formdata-undici-0${`${random(1e11)}`.padStart(11, '0')}`
     const prefix = `--${boundary}\r\nContent-Disposition: form-data`
 
     /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
@@ -23524,6 +23514,7 @@ const {
   isValidHeaderName,
   isValidHeaderValue
 } = __nccwpck_require__(2538)
+const util = __nccwpck_require__(3837)
 const { webidl } = __nccwpck_require__(1744)
 const assert = __nccwpck_require__(9491)
 
@@ -24077,6 +24068,9 @@ Object.defineProperties(Headers.prototype, {
   [Symbol.toStringTag]: {
     value: 'Headers',
     configurable: true
+  },
+  [util.inspect.custom]: {
+    enumerable: false
   }
 })
 
@@ -33253,6 +33247,20 @@ class Pool extends PoolBase {
       ? { ...options.interceptors }
       : undefined
     this[kFactory] = factory
+
+    this.on('connectionError', (origin, targets, error) => {
+      // If a connection error occurs, we remove the client from the pool,
+      // and emit a connectionError event. They will not be re-used.
+      // Fixes https://github.com/nodejs/undici/issues/3895
+      for (const target of targets) {
+        // Do not use kRemoveClient here, as it will close the client,
+        // but the client cannot be closed in this state.
+        const idx = this[kClients].indexOf(target)
+        if (idx !== -1) {
+          this[kClients].splice(idx, 1)
+        }
+      }
+    })
   }
 
   [kGetDispatcher] () {
@@ -36408,6 +36416,14 @@ module.exports = require(""net"");
 
 /***/ }),
 
+/***/ 6005:
+/***/ ((module) => {
+
+""use strict"";
+module.exports = require(""node:crypto"");
+
+/***/ }),
+
 /***/ 5673:
 /***/ ((module) => {
 "
actions/checkout,631c7dc4f80f88219c5ee78fee08c6b62fac8da1,Salman Chishti,2025-08-11T10:22:41Z,"Update package dependencies (#2236)

* package updates

* update dist

* Update license files",package-lock.json,118,194,312,"@@ -129,13 +129,15 @@
       }
     },
     ""node_modules/@babel/code-frame"": {
-      ""version"": ""7.24.2"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.24.2.tgz"",
-      ""integrity"": ""sha512-y5+tLQyV8pg3fsiln67BVLD1P13Eg4lh5RW9mF0zUuvLrv9uIQ4MCL+CRT+FTsBlBjcIan6PGsLcBN0m3ClUyQ=="",
+      ""version"": ""7.27.1"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz"",
+      ""integrity"": ""sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
-        ""@babel/highlight"": ""^7.24.2"",
-        ""picocolors"": ""^1.0.0""
+        ""@babel/helper-validator-identifier"": ""^7.27.1"",
+        ""js-tokens"": ""^4.0.0"",
+        ""picocolors"": ""^1.1.1""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
@@ -310,19 +312,21 @@
       }
     },
     ""node_modules/@babel/helper-string-parser"": {
-      ""version"": ""7.24.1"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.24.1.tgz"",
-      ""integrity"": ""sha512-2ofRCjnnA9y+wk8b9IAREroeUP02KHp431N2mhKniy2yKIDKpbrHv9eXwm8cBeWQYcJmzv5qKCu65P47eCF7CQ=="",
+      ""version"": ""7.27.1"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz"",
+      ""integrity"": ""sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
     ""node_modules/@babel/helper-validator-identifier"": {
-      ""version"": ""7.22.20"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz"",
-      ""integrity"": ""sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A=="",
+      ""version"": ""7.27.1"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz"",
+      ""integrity"": ""sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""engines"": {
         ""node"": "">=6.9.0""
       }
@@ -337,110 +341,28 @@
       }
     },
     ""node_modules/@babel/helpers"": {
-      ""version"": ""7.24.4"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helpers/-/helpers-7.24.4.tgz"",
-      ""integrity"": ""sha512-FewdlZbSiwaVGlgT1DPANDuCHaDMiOo+D/IDYRFYjHOuv66xMSJ7fQwwODwRNAPkADIO/z1EoF/l2BCWlWABDw=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""@babel/template"": ""^7.24.0"",
-        ""@babel/traverse"": ""^7.24.1"",
-        ""@babel/types"": ""^7.24.0""
-      },
-      ""engines"": {
-        ""node"": "">=6.9.0""
-      }
-    },
-    ""node_modules/@babel/highlight"": {
-      ""version"": ""7.24.2"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/highlight/-/highlight-7.24.2.tgz"",
-      ""integrity"": ""sha512-Yac1ao4flkTxTteCDZLEvdxg2fZfz1v8M4QpaGypq/WPDqg3ijHYbDfs+LG5hvzSoqaSZ9/Z9lKSP3CjZjv+pA=="",
+      ""version"": ""7.28.2"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.2.tgz"",
+      ""integrity"": ""sha512-/V9771t+EgXz62aCcyofnQhGM8DQACbRhvzKFsXKC9QM+5MadF8ZmIm0crDMaz3+o0h0zXfJnd4EhbYbxsrcFw=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
-        ""@babel/helper-validator-identifier"": ""^7.22.20"",
-        ""chalk"": ""^2.4.2"",
-        ""js-tokens"": ""^4.0.0"",
-        ""picocolors"": ""^1.0.0""
+        ""@babel/template"": ""^7.27.2"",
+        ""@babel/types"": ""^7.28.2""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
-    ""node_modules/@babel/highlight/node_modules/ansi-styles"": {
-      ""version"": ""3.2.1"",
-      ""resolved"": ""https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz"",
-      ""integrity"": ""sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""color-convert"": ""^1.9.0""
-      },
-      ""engines"": {
-        ""node"": "">=4""
-      }
-    },
-    ""node_modules/@babel/highlight/node_modules/chalk"": {
-      ""version"": ""2.4.2"",
-      ""resolved"": ""https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz"",
-      ""integrity"": ""sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""ansi-styles"": ""^3.2.1"",
-        ""escape-string-regexp"": ""^1.0.5"",
-        ""supports-color"": ""^5.3.0""
-      },
-      ""engines"": {
-        ""node"": "">=4""
-      }
-    },
-    ""node_modules/@babel/highlight/node_modules/color-convert"": {
-      ""version"": ""1.9.3"",
-      ""resolved"": ""https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz"",
-      ""integrity"": ""sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""color-name"": ""1.1.3""
-      }
-    },
-    ""node_modules/@babel/highlight/node_modules/color-name"": {
-      ""version"": ""1.1.3"",
-      ""resolved"": ""https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz"",
-      ""integrity"": ""sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="",
-      ""dev"": true
-    },
-    ""node_modules/@babel/highlight/node_modules/escape-string-regexp"": {
-      ""version"": ""1.0.5"",
-      ""resolved"": ""https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz"",
-      ""integrity"": ""sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg=="",
-      ""dev"": true,
-      ""engines"": {
-        ""node"": "">=0.8.0""
-      }
-    },
-    ""node_modules/@babel/highlight/node_modules/has-flag"": {
-      ""version"": ""3.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz"",
-      ""integrity"": ""sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="",
-      ""dev"": true,
-      ""engines"": {
-        ""node"": "">=4""
-      }
-    },
-    ""node_modules/@babel/highlight/node_modules/supports-color"": {
-      ""version"": ""5.5.0"",
-      ""resolved"": ""https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz"",
-      ""integrity"": ""sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow=="",
+    ""node_modules/@babel/parser"": {
+      ""version"": ""7.28.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz"",
+      ""integrity"": ""sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
-        ""has-flag"": ""^3.0.0""
+        ""@babel/types"": ""^7.28.0""
       },
-      ""engines"": {
-        ""node"": "">=4""
-      }
-    },
-    ""node_modules/@babel/parser"": {
-      ""version"": ""7.24.4"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.24.4.tgz"",
-      ""integrity"": ""sha512-zTvEBcghmeBma9QIGunWevvBAp4/Qu9Bdq+2k0Ot4fVMD6v3dsC9WOcRSKk7tRRyBM/53yKMJko9xOatGQAwSg=="",
-      ""dev"": true,
       ""bin"": {
         ""parser"": ""bin/babel-parser.js""
       },
@@ -626,26 +548,25 @@
       }
     },
     ""node_modules/@babel/runtime"": {
-      ""version"": ""7.24.4"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/runtime/-/runtime-7.24.4.tgz"",
-      ""integrity"": ""sha512-dkxf7+hn8mFBwKjs9bvBlArzLVxVbS8usaPUDd5p2a9JCL9tB8OaOVN1isD4+Xyk4ns89/xeOmbQvgdK7IIVdA=="",
+      ""version"": ""7.28.2"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.2.tgz"",
+      ""integrity"": ""sha512-KHp2IflsnGywDjBWDkR9iEqiWSpc8GIi0lgTT3mOElT0PP1tG26P4tmFI2YvAdzgq9RGyoHZQEIEdZy6Ec5xCA=="",
       ""dev"": true,
-      ""dependencies"": {
-        ""regenerator-runtime"": ""^0.14.0""
-      },
+      ""license"": ""MIT"",
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
     ""node_modules/@babel/template"": {
-      ""version"": ""7.24.0"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.24.0.tgz"",
-      ""integrity"": ""sha512-Bkf2q8lMB0AFpX0NFEqSbx1OkTHf0f+0j82mkw+ZpzBnkk7e9Ql0891vlfgi+kHwOk8tQjiQHpqh4LaSa0fKEA=="",
+      ""version"": ""7.27.2"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz"",
+      ""integrity"": ""sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
-        ""@babel/code-frame"": ""^7.23.5"",
-        ""@babel/parser"": ""^7.24.0"",
-        ""@babel/types"": ""^7.24.0""
+        ""@babel/code-frame"": ""^7.27.1"",
+        ""@babel/parser"": ""^7.27.2"",
+        ""@babel/types"": ""^7.27.1""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
@@ -682,14 +603,14 @@
       }
     },
     ""node_modules/@babel/types"": {
-      ""version"": ""7.24.0"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.24.0.tgz"",
-      ""integrity"": ""sha512-+j7a5c253RfKh8iABBhywc8NSfP5LURe7Uh4qpsh6jc+aLJguvmIUBdjSdEMQv2bENrCR5MfRdjGo7vzS/ob7w=="",
+      ""version"": ""7.28.2"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.28.2.tgz"",
+      ""integrity"": ""sha512-ruv7Ae4J5dUYULmeXw1gmb7rYRz57OWCPM57pHojnLq/3Z1CK2lNSLTCVjxVk1F/TZHwOZZrOWi0ur95BbLxNQ=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
-        ""@babel/helper-string-parser"": ""^7.23.4"",
-        ""@babel/helper-validator-identifier"": ""^7.22.20"",
-        ""to-fast-properties"": ""^2.0.0""
+        ""@babel/helper-string-parser"": ""^7.27.1"",
+        ""@babel/helper-validator-identifier"": ""^7.27.1""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
@@ -749,10 +670,11 @@
       }
     },
     ""node_modules/@eslint/eslintrc/node_modules/brace-expansion"": {
-      ""version"": ""1.1.11"",
-      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"",
-      ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="",
+      ""version"": ""1.1.12"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"",
+      ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""balanced-match"": ""^1.0.0"",
         ""concat-map"": ""0.0.1""
@@ -808,10 +730,11 @@
       }
     },
     ""node_modules/@humanwhocodes/config-array/node_modules/brace-expansion"": {
-      ""version"": ""1.1.11"",
-      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"",
-      ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="",
+      ""version"": ""1.1.12"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"",
+      ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""balanced-match"": ""^1.0.0"",
         ""concat-map"": ""0.0.1""
@@ -1343,9 +1266,10 @@
       }
     },
     ""node_modules/@octokit/endpoint"": {
-      ""version"": ""9.0.5"",
-      ""resolved"": ""https://registry.npmjs.org/@octokit/endpoint/-/endpoint-9.0.5.tgz"",
-      ""integrity"": ""sha512-ekqR4/+PCLkEBF6qgj8WqJfvDq65RH85OAgrtnVp1mSxaXF03u2xW/hUdweGS5654IlC0wkNYC18Z50tSYTAFw=="",
+      ""version"": ""9.0.6"",
+      ""resolved"": ""https://registry.npmjs.org/@octokit/endpoint/-/endpoint-9.0.6.tgz"",
+      ""integrity"": ""sha512-H1fNTMA57HbkFESSt3Y9+FBICv+0jFceJFPWDePYlR/iMGrwM5ph+Dd4XRQs+8X+PUFURLQgX9ChPfhJ/1uNQw=="",
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""@octokit/types"": ""^13.1.0"",
         ""universal-user-agent"": ""^6.0.0""
@@ -1373,9 +1297,10 @@
       ""integrity"": ""sha512-pGUdSP+eEPfZiQHNkZI0U01HLipxncisdJQB4G//OAmfeO8sqTQ9KRa0KF03TUPCziNsoXUrTg4B2Q1EX++T0Q==""
     },
     ""node_modules/@octokit/plugin-paginate-rest"": {
-      ""version"": ""9.2.1"",
-      ""resolved"": ""https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-9.2.1.tgz"",
-      ""integrity"": ""sha512-wfGhE/TAkXZRLjksFXuDZdmGnJQHvtU/joFQdweXUgzo1XwvBCD4o4+75NtFfjfLK5IwLf9vHTfSiU3sLRYpRw=="",
+      ""version"": ""9.2.2"",
+      ""resolved"": ""https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-9.2.2.tgz"",
+      ""integrity"": ""sha512-u3KYkGF7GcZnSD/3UP0S7K5XUFT2FkOQdcfXZGZQPGv3lm4F2Xbf71lvjldr8c1H3nNbF+33cLEkWYbokGWqiQ=="",
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""@octokit/types"": ""^12.6.0""
       },
@@ -1427,12 +1352,13 @@
       }
     },
     ""node_modules/@octokit/request"": {
-      ""version"": ""8.4.0"",
-      ""resolved"": ""https://registry.npmjs.org/@octokit/request/-/request-8.4.0.tgz"",
-      ""integrity"": ""sha512-9Bb014e+m2TgBeEJGEbdplMVWwPmL1FPtggHQRkV+WVsMggPtEkLKPlcVYm/o8xKLkpJ7B+6N8WfQMtDLX2Dpw=="",
+      ""version"": ""8.4.1"",
+      ""resolved"": ""https://registry.npmjs.org/@octokit/request/-/request-8.4.1.tgz"",
+      ""integrity"": ""sha512-qnB2+SY3hkCmBxZsR/MPCybNmbJe4KAlfWErXq+rBKkQJlbjdJeS85VI9r8UqeLYLvnAenU8Q1okM/0MBsAGXw=="",
+      ""license"": ""MIT"",
       ""dependencies"": {
-        ""@octokit/endpoint"": ""^9.0.1"",
-        ""@octokit/request-error"": ""^5.1.0"",
+        ""@octokit/endpoint"": ""^9.0.6"",
+        ""@octokit/request-error"": ""^5.1.1"",
         ""@octokit/types"": ""^13.1.0"",
         ""universal-user-agent"": ""^6.0.0""
       },
@@ -1441,9 +1367,10 @@
       }
     },
     ""node_modules/@octokit/request-error"": {
-      ""version"": ""5.1.0"",
-      ""resolved"": ""https://registry.npmjs.org/@octokit/request-error/-/request-error-5.1.0.tgz"",
-      ""integrity"": ""sha512-GETXfE05J0+7H2STzekpKObFe765O5dlAKUTLNGeH+x47z7JjXHfsHKo5z21D/o/IOZTUEI6nyWyR+bZVP/n5Q=="",
+      ""version"": ""5.1.1"",
+      ""resolved"": ""https://registry.npmjs.org/@octokit/request-error/-/request-error-5.1.1.tgz"",
+      ""integrity"": ""sha512-v9iyEQJH6ZntoENr9/yXxjuezh4My67CBSu9r6Ve/05Iu5gNgnisNWOsoJHTP6k0Rr0+HQIpnH+kyammu90q/g=="",
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""@octokit/types"": ""^13.1.0"",
         ""deprecation"": ""^2.0.0"",
@@ -2238,10 +2165,11 @@
       ""integrity"": ""sha512-NzUnlZexiaH/46WDhANlyR2bXRopNg4F/zuSA3OpZnllCUgRaOF2znDioDWrmbNVsuZk6l9pMquQB38cfBZwkQ==""
     },
     ""node_modules/brace-expansion"": {
-      ""version"": ""2.0.1"",
-      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz"",
-      ""integrity"": ""sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA=="",
+      ""version"": ""2.0.2"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz"",
+      ""integrity"": ""sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""balanced-match"": ""^1.0.0""
       }
@@ -2502,10 +2430,11 @@
       }
     },
     ""node_modules/cross-spawn"": {
-      ""version"": ""7.0.3"",
-      ""resolved"": ""https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz"",
-      ""integrity"": ""sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w=="",
+      ""version"": ""7.0.6"",
+      ""resolved"": ""https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz"",
+      ""integrity"": ""sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""path-key"": ""^3.1.0"",
         ""shebang-command"": ""^2.0.0"",
@@ -3175,10 +3104,11 @@
       }
     },
     ""node_modules/eslint-plugin-import/node_modules/brace-expansion"": {
-      ""version"": ""1.1.11"",
-      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"",
-      ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="",
+      ""version"": ""1.1.12"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"",
+      ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""balanced-match"": ""^1.0.0"",
         ""concat-map"": ""0.0.1""
@@ -3273,10 +3203,11 @@
       }
     },
     ""node_modules/eslint-plugin-jsx-a11y/node_modules/brace-expansion"": {
-      ""version"": ""1.1.11"",
-      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"",
-      ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="",
+      ""version"": ""1.1.12"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"",
+      ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""balanced-match"": ""^1.0.0"",
         ""concat-map"": ""0.0.1""
@@ -3371,10 +3302,11 @@
       }
     },
     ""node_modules/eslint/node_modules/brace-expansion"": {
-      ""version"": ""1.1.11"",
-      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"",
-      ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="",
+      ""version"": ""1.1.12"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"",
+      ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""balanced-match"": ""^1.0.0"",
         ""concat-map"": ""0.0.1""
@@ -3836,10 +3768,11 @@
       }
     },
     ""node_modules/glob/node_modules/brace-expansion"": {
-      ""version"": ""1.1.11"",
-      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"",
-      ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="",
+      ""version"": ""1.1.12"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"",
+      ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""balanced-match"": ""^1.0.0"",
         ""concat-map"": ""0.0.1""
@@ -4635,10 +4568,11 @@
       }
     },
     ""node_modules/jake/node_modules/brace-expansion"": {
-      ""version"": ""1.1.11"",
-      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"",
-      ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="",
+      ""version"": ""1.1.12"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"",
+      ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""balanced-match"": ""^1.0.0"",
         ""concat-map"": ""0.0.1""
@@ -5248,7 +5182,8 @@
       ""version"": ""4.0.0"",
       ""resolved"": ""https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz"",
       ""integrity"": ""sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="",
-      ""dev"": true
+      ""dev"": true,
+      ""license"": ""MIT""
     },
     ""node_modules/js-yaml"": {
       ""version"": ""4.1.0"",
@@ -5528,12 +5463,13 @@
       }
     },
     ""node_modules/micromatch"": {
-      ""version"": ""4.0.5"",
-      ""resolved"": ""https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz"",
-      ""integrity"": ""sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA=="",
+      ""version"": ""4.0.8"",
+      ""resolved"": ""https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz"",
+      ""integrity"": ""sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
-        ""braces"": ""^3.0.2"",
+        ""braces"": ""^3.0.3"",
         ""picomatch"": ""^2.3.1""
       },
       ""engines"": {
@@ -5869,10 +5805,11 @@
       }
     },
     ""node_modules/picocolors"": {
-      ""version"": ""1.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz"",
-      ""integrity"": ""sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="",
-      ""dev"": true
+      ""version"": ""1.1.1"",
+      ""resolved"": ""https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz"",
+      ""integrity"": ""sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA=="",
+      ""dev"": true,
+      ""license"": ""ISC""
     },
     ""node_modules/picomatch"": {
       ""version"": ""2.3.1"",
@@ -6115,12 +6052,6 @@
         ""url"": ""https://github.com/sponsors/ljharb""
       }
     },
-    ""node_modules/regenerator-runtime"": {
-      ""version"": ""0.14.1"",
-      ""resolved"": ""https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz"",
-      ""integrity"": ""sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw=="",
-      ""dev"": true
-    },
     ""node_modules/regexp.prototype.flags"": {
       ""version"": ""1.5.2"",
       ""resolved"": ""https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.2.tgz"",
@@ -6622,10 +6553,11 @@
       }
     },
     ""node_modules/test-exclude/node_modules/brace-expansion"": {
-      ""version"": ""1.1.11"",
-      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"",
-      ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="",
+      ""version"": ""1.1.12"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"",
+      ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="",
       ""dev"": true,
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""balanced-match"": ""^1.0.0"",
         ""concat-map"": ""0.0.1""
@@ -6655,15 +6587,6 @@
       ""integrity"": ""sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw=="",
       ""dev"": true
     },
-    ""node_modules/to-fast-properties"": {
-      ""version"": ""2.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz"",
-      ""integrity"": ""sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog=="",
-      ""dev"": true,
-      ""engines"": {
-        ""node"": "">=4""
-      }
-    },
     ""node_modules/to-regex-range"": {
       ""version"": ""5.0.1"",
       ""resolved"": ""https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz"",
@@ -6930,9 +6853,10 @@
       }
     },
     ""node_modules/undici"": {
-      ""version"": ""5.28.4"",
-      ""resolved"": ""https://registry.npmjs.org/undici/-/undici-5.28.4.tgz"",
-      ""integrity"": ""sha512-72RFADWFqKmUb2hmmvNODKL3p9hcB6Gt2DOQMis1SEBaV6a4MH8soBvzg+95CYhCKPFedut2JY9bMfrDl9D23g=="",
+      ""version"": ""5.29.0"",
+      ""resolved"": ""https://registry.npmjs.org/undici/-/undici-5.29.0.tgz"",
+      ""integrity"": ""sha512-raqeBD6NQK4SkWhQzeYKd1KmIG6dllBOTt55Rmkt4HtI9mwdWtJljnrXjAFUBLTSN67HWrOIZ3EPF4kjUw80Bg=="",
+      ""license"": ""MIT"",
       ""dependencies"": {
         ""@fastify/busboy"": ""^2.0.0""
       },"
actions/checkout,8edcb1bdb4e267140fa742c62e395cd74f332709,Tingluo Huang,2025-07-23T13:20:20Z,Update CODEOWNERS for actions (#2224),CODEOWNERS,1,1,2,"@@ -1 +1 @@
-* @actions/actions-launch
+* @actions/actions-runtime"
actions/checkout,09d2acae674a48949e3602304ab46fd20ae0c42f,Ben De St Paer-Gotch,2025-06-06T08:19:16Z,Update README.md (#2194),README.md,18,0,18,"@@ -10,6 +10,24 @@ The auth token is persisted in the local git config. This enables your scripts t
 
 When Git 2.18 or higher is not in your PATH, falls back to the REST API to download the files.
 
+### Note
+
+Thank you for your interest in this GitHub action, however, right now we are not taking contributions. 
+
+We continue to focus our resources on strategic areas that help our customers be successful while making developers' lives easier. While GitHub Actions remains a key part of this vision, we are allocating resources towards other areas of Actions and are not taking contributions to this repository at this time. The GitHub public roadmap is the best place to follow along for any updates on features we’re working on and what stage they’re in.
+
+We are taking the following steps to better direct requests related to GitHub Actions, including:
+
+1. We will be directing questions and support requests to our [Community Discussions area](https://github.com/orgs/community/discussions/categories/actions)
+
+2. High Priority bugs can be reported through Community Discussions or you can report these to our support team https://support.github.com/contact/bug-report.
+
+3. Security Issues should be handled as per our [security.md](security.md)
+
+We will still provide security updates for this project and fix major breaking changes during this time.
+
+You are welcome to still raise bugs in this repo.
+
 # What's new
 
 Please refer to the [release page](https://github.com/actions/checkout/releases/latest) for the latest release notes."
actions/checkout,85e6279cec87321a52edac9c87bce653a07cf6c2,Josh Gross,2025-01-16T20:56:18Z,Adjust positioning of user email note and permissions heading (#2044),README.md,3,4,7,"@@ -312,7 +312,9 @@ jobs:
           git push
 ```
 
-## Recommended permissions
+*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D
+
+# Recommended permissions
 
 When using the `checkout` action in your GitHub Actions workflow, it is recommended to set the following `GITHUB_TOKEN` permissions to ensure proper functionality, unless alternative auth is provided via the `token` or `ssh-key` inputs:
 
@@ -321,9 +323,6 @@ permissions:
   contents: read
 ```
 
-*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D
-
-
 # License
 
 The scripts and documentation in this project are released under the [MIT License](LICENSE)"
actions/checkout,009b9ae9e446ad8d9b8c809870b0fbcc5e03573e,Ben Wells,2025-01-16T19:14:48Z,"Documentation update - add recommended permissions to Readme (#2043)

* Update README.md

* Update README.md

Co-authored-by: Josh Gross <joshmgross@github.com>

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",README.md,10,0,10,"@@ -311,6 +311,16 @@ jobs:
           git commit -m ""generated""
           git push
 ```
+
+## Recommended permissions
+
+When using the `checkout` action in your GitHub Actions workflow, it is recommended to set the following `GITHUB_TOKEN` permissions to ensure proper functionality, unless alternative auth is provided via the `token` or `ssh-key` inputs:
+
+```yaml
+permissions:
+  contents: read
+```
+
 *NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D
 
 "
actions/checkout,cbb722410c2e876e24abbe8de2cc27693e501dcb,Mohammad Ismail,2024-11-14T15:41:00Z,Update README.md (#1977),README.md,2,2,4,"@@ -212,7 +212,7 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
     repository: my-org/my-tools
     path: my-tools
 ```
-> - If your secondary repository is private you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private)
+> - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private)
 
 ## Checkout multiple repos (nested)
 
@@ -226,7 +226,7 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
     repository: my-org/my-tools
     path: my-tools
 ```
-> - If your secondary repository is private you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private)
+> - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private)
 
 ## Checkout multiple repos (private)
 "
actions/checkout,3b9b8c884f6b4bb4d5be2779c26374abadae0871,The web walker,2024-11-08T15:32:54Z,"docs: update README.md (#1971)

Add a scenario where it is necessary to push a commit to a pull request.",README.md,26,0,26,"@@ -143,6 +143,7 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
 - [Checkout pull request HEAD commit instead of merge commit](#Checkout-pull-request-HEAD-commit-instead-of-merge-commit)
 - [Checkout pull request on closed event](#Checkout-pull-request-on-closed-event)
 - [Push a commit using the built-in token](#Push-a-commit-using-the-built-in-token)
+- [Push a commit to a PR using the built-in token](#Push-a-commit-to-a-PR-using-the-built-in-token)
 
 ## Fetch only the root files
 
@@ -288,6 +289,31 @@ jobs:
 ```
 *NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D
 
+## Push a commit to a PR using the built-in token
+
+In a pull request trigger, `ref` is required as GitHub Actions checks out in detached HEAD mode, meaning it doesn’t check out your branch by default.
+
+```yaml
+on: pull_request
+jobs:
+  build:
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v4
+        with:
+          ref: ${{ github.head_ref }}
+      - run: |
+          date > generated.txt
+          # Note: the following account information will not work on GHES
+          git config user.name ""github-actions[bot]""
+          git config user.email ""41898282+github-actions[bot]@users.noreply.github.com""
+          git add .
+          git commit -m ""generated""
+          git push
+```
+*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D
+
+
 # License
 
 The scripts and documentation in this project are released under the [MIT License](LICENSE)"
actions/checkout,11bd71901bbe5b1630ceea73d27597364c9af683,John Wesley Walker III,2024-10-23T14:24:28Z,"Prepare 4.2.2 Release (#1953)

* Prepare 4.2.2 Release

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",CHANGELOG.md,4,0,4,"@@ -1,5 +1,9 @@
 # Changelog
 
+## v4.2.2
+* `url-helper.ts` now leverages well-known environment variables by @jww3 in https://github.com/actions/checkout/pull/1941
+* Expand unit test coverage for `isGhes` by @jww3 in https://github.com/actions/checkout/pull/1946
+
 ## v4.2.1
 * Check out other refs/* by commit if provided, fall back to ref by @orhantoy in https://github.com/actions/checkout/pull/1924
 "
actions/checkout,11bd71901bbe5b1630ceea73d27597364c9af683,John Wesley Walker III,2024-10-23T14:24:28Z,"Prepare 4.2.2 Release (#1953)

* Prepare 4.2.2 Release

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",package-lock.json,2,2,4,"@@ -1,12 +1,12 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.2.1"",
+  ""version"": ""4.2.2"",
   ""lockfileVersion"": 3,
   ""requires"": true,
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.2.1"",
+      ""version"": ""4.2.2"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.1"","
actions/checkout,11bd71901bbe5b1630ceea73d27597364c9af683,John Wesley Walker III,2024-10-23T14:24:28Z,"Prepare 4.2.2 Release (#1953)

* Prepare 4.2.2 Release

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.2.1"",
+  ""version"": ""4.2.2"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {"
actions/checkout,e3d2460bbb42d7710191569f88069044cfb9d8cf,John Wesley Walker III,2024-10-23T13:59:08Z,Expand unit test coverage (#1946),__test__/url-helper.test.ts,37,0,37,"@@ -24,13 +24,50 @@ describe('getServerUrl tests', () => {
 })
 
 describe('isGhes tests', () => {
+  const pristineEnv = process.env
+
+  beforeEach(() => {
+    jest.resetModules()
+    process.env = {...pristineEnv}
+  })
+
+  afterAll(() => {
+    process.env = pristineEnv
+  })
+
   it('basics', async () => {
+    delete process.env['GITHUB_SERVER_URL']
     expect(urlHelper.isGhes()).toBeFalsy()
     expect(urlHelper.isGhes('https://github.com')).toBeFalsy()
     expect(urlHelper.isGhes('https://contoso.ghe.com')).toBeFalsy()
     expect(urlHelper.isGhes('https://test.github.localhost')).toBeFalsy()
     expect(urlHelper.isGhes('https://src.onpremise.fabrikam.com')).toBeTruthy()
   })
+
+  it('returns false when the GITHUB_SERVER_URL environment variable is not defined', async () => {
+    delete process.env['GITHUB_SERVER_URL']
+    expect(urlHelper.isGhes()).toBeFalsy()
+  })
+
+  it('returns false when the GITHUB_SERVER_URL environment variable is set to github.com', async () => {
+    process.env['GITHUB_SERVER_URL'] = 'https://github.com'
+    expect(urlHelper.isGhes()).toBeFalsy()
+  })
+
+  it('returns false when the GITHUB_SERVER_URL environment variable is set to a GitHub Enterprise Cloud-style URL', async () => {
+    process.env['GITHUB_SERVER_URL'] = 'https://contoso.ghe.com'
+    expect(urlHelper.isGhes()).toBeFalsy()
+  })
+
+  it('returns false when the GITHUB_SERVER_URL environment variable has a .localhost suffix', async () => {
+    process.env['GITHUB_SERVER_URL'] = 'https://mock-github.localhost'
+    expect(urlHelper.isGhes()).toBeFalsy()
+  })
+
+  it('returns true when the GITHUB_SERVER_URL environment variable is set to some other URL', async () => {
+    process.env['GITHUB_SERVER_URL'] = 'https://src.onpremise.fabrikam.com'
+    expect(urlHelper.isGhes()).toBeTruthy()
+  })
 })
 
 describe('getServerApiUrl tests', () => {"
actions/checkout,163217dfcd28294438ea1c1c149cfaf66eec283e,John Wesley Walker III,2024-10-18T08:07:17Z,"`url-helper.ts` now leverages well-known environment variables. (#1941)

* `utl-helper.ts` now leverages well-known environment variables.

---------
Co-authored-by: Erez Testiler <easyt@github.com>",__test__/url-helper.test.ts,55,0,55,"@@ -0,0 +1,55 @@
+import * as urlHelper from '../src/url-helper'
+
+describe('getServerUrl tests', () => {
+  it('basics', async () => {
+    // Note that URL::toString will append a trailing / when passed just a domain name ...
+    expect(urlHelper.getServerUrl().toString()).toBe('https://github.com/')
+    expect(urlHelper.getServerUrl(' ').toString()).toBe('https://github.com/')
+    expect(urlHelper.getServerUrl('   ').toString()).toBe('https://github.com/')
+    expect(urlHelper.getServerUrl('http://contoso.com').toString()).toBe(
+      'http://contoso.com/'
+    )
+    expect(urlHelper.getServerUrl('https://contoso.com').toString()).toBe(
+      'https://contoso.com/'
+    )
+    expect(urlHelper.getServerUrl('https://contoso.com/').toString()).toBe(
+      'https://contoso.com/'
+    )
+
+    // ... but can't make that same assumption when passed an URL that includes some deeper path.
+    expect(urlHelper.getServerUrl('https://contoso.com/a/b').toString()).toBe(
+      'https://contoso.com/a/b'
+    )
+  })
+})
+
+describe('isGhes tests', () => {
+  it('basics', async () => {
+    expect(urlHelper.isGhes()).toBeFalsy()
+    expect(urlHelper.isGhes('https://github.com')).toBeFalsy()
+    expect(urlHelper.isGhes('https://contoso.ghe.com')).toBeFalsy()
+    expect(urlHelper.isGhes('https://test.github.localhost')).toBeFalsy()
+    expect(urlHelper.isGhes('https://src.onpremise.fabrikam.com')).toBeTruthy()
+  })
+})
+
+describe('getServerApiUrl tests', () => {
+  it('basics', async () => {
+    expect(urlHelper.getServerApiUrl()).toBe('https://api.github.com')
+    expect(urlHelper.getServerApiUrl('https://github.com')).toBe(
+      'https://api.github.com'
+    )
+    expect(urlHelper.getServerApiUrl('https://GitHub.com')).toBe(
+      'https://api.github.com'
+    )
+    expect(urlHelper.getServerApiUrl('https://contoso.ghe.com')).toBe(
+      'https://api.contoso.ghe.com'
+    )
+    expect(urlHelper.getServerApiUrl('https://fabrikam.GHE.COM')).toBe(
+      'https://api.fabrikam.ghe.com'
+    )
+    expect(
+      urlHelper.getServerApiUrl('https://src.onpremise.fabrikam.com')
+    ).toBe('https://src.onpremise.fabrikam.com/api/v3')
+  })
+})"
actions/checkout,163217dfcd28294438ea1c1c149cfaf66eec283e,John Wesley Walker III,2024-10-18T08:07:17Z,"`url-helper.ts` now leverages well-known environment variables. (#1941)

* `utl-helper.ts` now leverages well-known environment variables.

---------
Co-authored-by: Erez Testiler <easyt@github.com>",dist/index.js,39,11,50,"@@ -2454,22 +2454,50 @@ function getFetchUrl(settings) {
     return `${serviceUrl.origin}/${encodedOwner}/${encodedName}`;
 }
 function getServerUrl(url) {
-    let urlValue = url && url.trim().length > 0
-        ? url
-        : process.env['GITHUB_SERVER_URL'] || 'https://github.com';
-    return new url_1.URL(urlValue);
+    let resolvedUrl = process.env['GITHUB_SERVER_URL'] || 'https://github.com';
+    if (hasContent(url, WhitespaceMode.Trim)) {
+        resolvedUrl = url;
+    }
+    return new url_1.URL(resolvedUrl);
 }
 function getServerApiUrl(url) {
-    let apiUrl = 'https://api.github.com';
-    if (isGhes(url)) {
-        const serverUrl = getServerUrl(url);
-        apiUrl = new url_1.URL(`${serverUrl.origin}/api/v3`).toString();
+    if (hasContent(url, WhitespaceMode.Trim)) {
+        let serverUrl = getServerUrl(url);
+        if (isGhes(url)) {
+            serverUrl.pathname = 'api/v3';
+        }
+        else {
+            serverUrl.hostname = 'api.' + serverUrl.hostname;
+        }
+        return pruneSuffix(serverUrl.toString(), '/');
     }
-    return apiUrl;
+    return process.env['GITHUB_API_URL'] || 'https://api.github.com';
 }
 function isGhes(url) {
-    const ghUrl = getServerUrl(url);
-    return ghUrl.hostname.toUpperCase() !== 'GITHUB.COM';
+    const ghUrl = new url_1.URL(url || process.env['GITHUB_SERVER_URL'] || 'https://github.com');
+    const hostname = ghUrl.hostname.trimEnd().toUpperCase();
+    const isGitHubHost = hostname === 'GITHUB.COM';
+    const isGitHubEnterpriseCloudHost = hostname.endsWith('.GHE.COM');
+    const isLocalHost = hostname.endsWith('.LOCALHOST');
+    return !isGitHubHost && !isGitHubEnterpriseCloudHost && !isLocalHost;
+}
+function pruneSuffix(text, suffix) {
+    if (hasContent(suffix, WhitespaceMode.Preserve) && (text === null || text === void 0 ? void 0 : text.endsWith(suffix))) {
+        return text.substring(0, text.length - suffix.length);
+    }
+    return text;
+}
+var WhitespaceMode;
+(function (WhitespaceMode) {
+    WhitespaceMode[WhitespaceMode[""Trim""] = 0] = ""Trim"";
+    WhitespaceMode[WhitespaceMode[""Preserve""] = 1] = ""Preserve"";
+})(WhitespaceMode || (WhitespaceMode = {}));
+function hasContent(text, whitespaceMode) {
+    let refinedText = text !== null && text !== void 0 ? text : '';
+    if (whitespaceMode == WhitespaceMode.Trim) {
+        refinedText = refinedText.trim();
+    }
+    return refinedText.length > 0;
 }
 
 "
actions/checkout,163217dfcd28294438ea1c1c149cfaf66eec283e,John Wesley Walker III,2024-10-18T08:07:17Z,"`url-helper.ts` now leverages well-known environment variables. (#1941)

* `utl-helper.ts` now leverages well-known environment variables.

---------
Co-authored-by: Erez Testiler <easyt@github.com>",src/url-helper.ts,47,12,59,"@@ -21,26 +21,61 @@ export function getFetchUrl(settings: IGitSourceSettings): string {
 }
 
 export function getServerUrl(url?: string): URL {
-  let urlValue =
-    url && url.trim().length > 0
-      ? url
-      : process.env['GITHUB_SERVER_URL'] || 'https://github.com'
-  return new URL(urlValue)
+  let resolvedUrl = process.env['GITHUB_SERVER_URL'] || 'https://github.com'
+  if (hasContent(url, WhitespaceMode.Trim)) {
+    resolvedUrl = url!
+  }
+
+  return new URL(resolvedUrl)
 }
 
 export function getServerApiUrl(url?: string): string {
-  let apiUrl = 'https://api.github.com'
+  if (hasContent(url, WhitespaceMode.Trim)) {
+    let serverUrl = getServerUrl(url)
+    if (isGhes(url)) {
+      serverUrl.pathname = 'api/v3'
+    } else {
+      serverUrl.hostname = 'api.' + serverUrl.hostname
+    }
 
-  if (isGhes(url)) {
-    const serverUrl = getServerUrl(url)
-    apiUrl = new URL(`${serverUrl.origin}/api/v3`).toString()
+    return pruneSuffix(serverUrl.toString(), '/')
   }
 
-  return apiUrl
+  return process.env['GITHUB_API_URL'] || 'https://api.github.com'
 }
 
 export function isGhes(url?: string): boolean {
-  const ghUrl = getServerUrl(url)
+  const ghUrl = new URL(
+    url || process.env['GITHUB_SERVER_URL'] || 'https://github.com'
+  )
+
+  const hostname = ghUrl.hostname.trimEnd().toUpperCase()
+  const isGitHubHost = hostname === 'GITHUB.COM'
+  const isGitHubEnterpriseCloudHost = hostname.endsWith('.GHE.COM')
+  const isLocalHost = hostname.endsWith('.LOCALHOST')
+
+  return !isGitHubHost && !isGitHubEnterpriseCloudHost && !isLocalHost
+}
 
-  return ghUrl.hostname.toUpperCase() !== 'GITHUB.COM'
+function pruneSuffix(text: string, suffix: string) {
+  if (hasContent(suffix, WhitespaceMode.Preserve) && text?.endsWith(suffix)) {
+    return text.substring(0, text.length - suffix.length)
+  }
+  return text
+}
+
+enum WhitespaceMode {
+  Trim,
+  Preserve
+}
+
+function hasContent(
+  text: string | undefined,
+  whitespaceMode: WhitespaceMode
+): boolean {
+  let refinedText = text ?? ''
+  if (whitespaceMode == WhitespaceMode.Trim) {
+    refinedText = refinedText.trim()
+  }
+  return refinedText.length > 0
 }"
actions/checkout,eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871,Josh Gross,2024-10-07T16:38:04Z,Prepare 4.2.1 release (#1925),CHANGELOG.md,3,0,3,"@@ -1,5 +1,8 @@
 # Changelog
 
+## v4.2.1
+* Check out other refs/* by commit if provided, fall back to ref by @orhantoy in https://github.com/actions/checkout/pull/1924
+
 ## v4.2.0
 
 * Add Ref and Commit outputs by @lucacome in https://github.com/actions/checkout/pull/1180"
actions/checkout,eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871,Josh Gross,2024-10-07T16:38:04Z,Prepare 4.2.1 release (#1925),package-lock.json,2,2,4,"@@ -1,12 +1,12 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.2.0"",
+  ""version"": ""4.2.1"",
   ""lockfileVersion"": 3,
   ""requires"": true,
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.2.0"",
+      ""version"": ""4.2.1"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.1"","
actions/checkout,eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871,Josh Gross,2024-10-07T16:38:04Z,Prepare 4.2.1 release (#1925),package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.2.0"",
+  ""version"": ""4.2.1"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {"
actions/checkout,6b42224f41ee5dfe5395e27c8b2746f1f9955030,Joel Ambass,2024-10-03T09:03:35Z,"Add workflow file for publishing releases to immutable action package (#1919)

This workflow file publishes new action releases to the immutable action package of the same name as this repo.

This is part of the Immutable Actions project which is not yet fully released to the public. First party actions like this one are part of our initial testing of this feature.",.github/workflows/publish-immutable-actions.yml,20,0,20,"@@ -0,0 +1,20 @@
+name: 'Publish Immutable Action Version'
+
+on:
+  release:
+    types: [published]
+
+jobs:
+  publish:
+    runs-on: ubuntu-latest
+    permissions:
+      contents: read
+      id-token: write
+      packages: write
+
+    steps:
+      - name: Checking out
+        uses: actions/checkout@v4
+      - name: Publish
+        id: publish
+        uses: actions/publish-immutable-action@0.0.3"
actions/checkout,de5a000abf73b6f4965bd1bcdf8f8d94a56ea815,Orhan Toy,2024-10-02T00:24:28Z,"Check out other refs/* by commit if provided, fall back to ref (#1924)",__test__/ref-helper.test.ts,10,0,10,"@@ -77,6 +77,16 @@ describe('ref-helper tests', () => {
     expect(checkoutInfo.startPoint).toBeFalsy()
   })
 
+  it('getCheckoutInfo refs/ without commit', async () => {
+    const checkoutInfo = await refHelper.getCheckoutInfo(
+      git,
+      'refs/non-standard-ref',
+      ''
+    )
+    expect(checkoutInfo.ref).toBe('refs/non-standard-ref')
+    expect(checkoutInfo.startPoint).toBeFalsy()
+  })
+
   it('getCheckoutInfo unqualified branch only', async () => {
     git.branchExists = jest.fn(async (remote: boolean, pattern: string) => {
       return true"
actions/checkout,de5a000abf73b6f4965bd1bcdf8f8d94a56ea815,Orhan Toy,2024-10-02T00:24:28Z,"Check out other refs/* by commit if provided, fall back to ref (#1924)",dist/index.js,2,2,4,"@@ -2005,8 +2005,8 @@ function getCheckoutInfo(git, ref, commit) {
             result.ref = ref;
         }
         // refs/
-        else if (upperRef.startsWith('REFS/') && commit) {
-            result.ref = commit;
+        else if (upperRef.startsWith('REFS/')) {
+            result.ref = commit ? commit : ref;
         }
         // Unqualified ref, check for a matching branch or tag
         else {"
actions/checkout,de5a000abf73b6f4965bd1bcdf8f8d94a56ea815,Orhan Toy,2024-10-02T00:24:28Z,"Check out other refs/* by commit if provided, fall back to ref (#1924)",src/ref-helper.ts,2,2,4,"@@ -46,8 +46,8 @@ export async function getCheckoutInfo(
     result.ref = ref
   }
   // refs/
-  else if (upperRef.startsWith('REFS/') && commit) {
-    result.ref = commit
+  else if (upperRef.startsWith('REFS/')) {
+    result.ref = commit ? commit : ref
   }
   // Unqualified ref, check for a matching branch or tag
   else {"
actions/checkout,d632683dd7b4114ad314bca15554477dd762a938,Josh Gross,2024-09-25T17:51:15Z,"Prepare 4.2.0 release (#1878)

* Bump package version to 4.1.8

* Add v4.1.8 changelog

* Bump version to `4.2.0`",CHANGELOG.md,5,0,5,"@@ -1,5 +1,10 @@
 # Changelog
 
+## v4.2.0
+
+* Add Ref and Commit outputs by @lucacome in https://github.com/actions/checkout/pull/1180
+* Dependency updates by @dependabot- https://github.com/actions/checkout/pull/1777, https://github.com/actions/checkout/pull/1872
+
 ## v4.1.7
 * Bump the minor-npm-dependencies group across 1 directory with 4 updates by @dependabot in https://github.com/actions/checkout/pull/1739
 * Bump actions/checkout from 3 to 4 by @dependabot in https://github.com/actions/checkout/pull/1697"
actions/checkout,d632683dd7b4114ad314bca15554477dd762a938,Josh Gross,2024-09-25T17:51:15Z,"Prepare 4.2.0 release (#1878)

* Bump package version to 4.1.8

* Add v4.1.8 changelog

* Bump version to `4.2.0`",package-lock.json,2,2,4,"@@ -1,12 +1,12 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.7"",
+  ""version"": ""4.2.0"",
   ""lockfileVersion"": 3,
   ""requires"": true,
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.1.7"",
+      ""version"": ""4.2.0"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.1"","
actions/checkout,d632683dd7b4114ad314bca15554477dd762a938,Josh Gross,2024-09-25T17:51:15Z,"Prepare 4.2.0 release (#1878)

* Bump package version to 4.1.8

* Add v4.1.8 changelog

* Bump version to `4.2.0`",package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.7"",
+  ""version"": ""4.2.0"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {"
actions/checkout,6d193bf28034eafb982f37bd894289fe649468fc,dependabot[bot],2024-09-05T19:04:42Z,"Bump braces from 3.0.2 to 3.0.3 (#1777)

Bumps [braces](https://github.com/micromatch/braces) from 3.0.2 to 3.0.3.
- [Changelog](https://github.com/micromatch/braces/blob/master/CHANGELOG.md)
- [Commits](https://github.com/micromatch/braces/compare/3.0.2...3.0.3)

---
updated-dependencies:
- dependency-name: braces
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",package-lock.json,7,7,14,"@@ -2247,12 +2247,12 @@
       }
     },
     ""node_modules/braces"": {
-      ""version"": ""3.0.2"",
-      ""resolved"": ""https://registry.npmjs.org/braces/-/braces-3.0.2.tgz"",
-      ""integrity"": ""sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A=="",
+      ""version"": ""3.0.3"",
+      ""resolved"": ""https://registry.npmjs.org/braces/-/braces-3.0.3.tgz"",
+      ""integrity"": ""sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA=="",
       ""dev"": true,
       ""dependencies"": {
-        ""fill-range"": ""^7.0.1""
+        ""fill-range"": ""^7.1.1""
       },
       ""engines"": {
         ""node"": "">=8""
@@ -3616,9 +3616,9 @@
       }
     },
     ""node_modules/fill-range"": {
-      ""version"": ""7.0.1"",
-      ""resolved"": ""https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz"",
-      ""integrity"": ""sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ=="",
+      ""version"": ""7.1.1"",
+      ""resolved"": ""https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz"",
+      ""integrity"": ""sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg=="",
       ""dev"": true,
       ""dependencies"": {
         ""to-regex-range"": ""^5.0.1"""
actions/checkout,db0cee9a514becbbd4a101a5fbbbf47865ee316c,dependabot[bot],2024-09-05T19:04:17Z,"Bump the minor-npm-dependencies group across 1 directory with 4 updates (#1872)

* Bump the minor-npm-dependencies group across 1 directory with 4 updates

Bumps the minor-npm-dependencies group with 4 updates in the / directory: [eslint-plugin-jest](https://github.com/jest-community/eslint-plugin-jest), [prettier](https://github.com/prettier/prettier), [ts-jest](https://github.com/kulshekhar/ts-jest) and [typescript](https://github.com/Microsoft/TypeScript).


Updates `eslint-plugin-jest` from 28.5.0 to 28.8.2
- [Release notes](https://github.com/jest-community/eslint-plugin-jest/releases)
- [Changelog](https://github.com/jest-community/eslint-plugin-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/jest-community/eslint-plugin-jest/compare/v28.5.0...v28.8.2)

Updates `prettier` from 3.2.5 to 3.3.3
- [Release notes](https://github.com/prettier/prettier/releases)
- [Changelog](https://github.com/prettier/prettier/blob/main/CHANGELOG.md)
- [Commits](https://github.com/prettier/prettier/compare/3.2.5...3.3.3)

Updates `ts-jest` from 29.1.2 to 29.2.5
- [Release notes](https://github.com/kulshekhar/ts-jest/releases)
- [Changelog](https://github.com/kulshekhar/ts-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/kulshekhar/ts-jest/compare/v29.1.2...v29.2.5)

Updates `typescript` from 5.4.5 to 5.5.4
- [Release notes](https://github.com/Microsoft/TypeScript/releases)
- [Changelog](https://github.com/microsoft/TypeScript/blob/main/azure-pipelines.release.yml)
- [Commits](https://github.com/Microsoft/TypeScript/compare/v5.4.5...v5.5.4)

---
updated-dependencies:
- dependency-name: eslint-plugin-jest
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: prettier
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: ts-jest
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: typescript
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
...

Signed-off-by: dependabot[bot] <support@github.com>

* `npm run build`

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Josh Gross <joshmgross@github.com>",dist/index.js,31,40,71,"@@ -30,7 +30,9 @@ var __importStar = (this && this.__importStar) || function (mod) {
     return result;
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.fileExistsSync = exports.existsSync = exports.directoryExistsSync = void 0;
+exports.directoryExistsSync = directoryExistsSync;
+exports.existsSync = existsSync;
+exports.fileExistsSync = fileExistsSync;
 const fs = __importStar(__nccwpck_require__(7147));
 function directoryExistsSync(path, required) {
     var _a;
@@ -58,7 +60,6 @@ function directoryExistsSync(path, required) {
     }
     throw new Error(`Directory '${path}' does not exist`);
 }
-exports.directoryExistsSync = directoryExistsSync;
 function existsSync(path) {
     var _a;
     if (!path) {
@@ -75,7 +76,6 @@ function existsSync(path) {
     }
     return true;
 }
-exports.existsSync = existsSync;
 function fileExistsSync(path) {
     var _a;
     if (!path) {
@@ -96,7 +96,6 @@ function fileExistsSync(path) {
     }
     return false;
 }
-exports.fileExistsSync = fileExistsSync;
 
 
 /***/ }),
@@ -139,7 +138,7 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.createAuthHelper = void 0;
+exports.createAuthHelper = createAuthHelper;
 const assert = __importStar(__nccwpck_require__(9491));
 const core = __importStar(__nccwpck_require__(2186));
 const exec = __importStar(__nccwpck_require__(1514));
@@ -156,7 +155,6 @@ const SSH_COMMAND_KEY = 'core.sshCommand';
 function createAuthHelper(git, settings) {
     return new GitAuthHelper(git, settings);
 }
-exports.createAuthHelper = createAuthHelper;
 class GitAuthHelper {
     constructor(gitCommandManager, gitSourceSettings) {
         this.insteadOfValues = [];
@@ -475,7 +473,8 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.createCommandManager = exports.MinimumGitSparseCheckoutVersion = exports.MinimumGitVersion = void 0;
+exports.MinimumGitSparseCheckoutVersion = exports.MinimumGitVersion = void 0;
+exports.createCommandManager = createCommandManager;
 const core = __importStar(__nccwpck_require__(2186));
 const exec = __importStar(__nccwpck_require__(1514));
 const fs = __importStar(__nccwpck_require__(7147));
@@ -496,7 +495,6 @@ function createCommandManager(workingDirectory, lfs, doSparseCheckout) {
         return yield GitCommandManager.createCommandManager(workingDirectory, lfs, doSparseCheckout);
     });
 }
-exports.createCommandManager = createCommandManager;
 class GitCommandManager {
     // Private constructor; use createCommandManager()
     constructor() {
@@ -1020,7 +1018,7 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.prepareExistingDirectory = void 0;
+exports.prepareExistingDirectory = prepareExistingDirectory;
 const assert = __importStar(__nccwpck_require__(9491));
 const core = __importStar(__nccwpck_require__(2186));
 const fs = __importStar(__nccwpck_require__(7147));
@@ -1124,7 +1122,6 @@ function prepareExistingDirectory(git, repositoryPath, repositoryUrl, clean, ref
         }
     });
 }
-exports.prepareExistingDirectory = prepareExistingDirectory;
 
 
 /***/ }),
@@ -1167,7 +1164,8 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.cleanup = exports.getSource = void 0;
+exports.getSource = getSource;
+exports.cleanup = cleanup;
 const core = __importStar(__nccwpck_require__(2186));
 const fsHelper = __importStar(__nccwpck_require__(7219));
 const gitAuthHelper = __importStar(__nccwpck_require__(2565));
@@ -1373,7 +1371,6 @@ function getSource(settings) {
         }
     });
 }
-exports.getSource = getSource;
 function cleanup(repositoryPath) {
     return __awaiter(this, void 0, void 0, function* () {
         // Repo exists?
@@ -1409,7 +1406,6 @@ function cleanup(repositoryPath) {
         }
     });
 }
-exports.cleanup = cleanup;
 function getGitCommandManager(settings) {
     return __awaiter(this, void 0, void 0, function* () {
         core.info(`Working directory is '${settings.repositoryPath}'`);
@@ -1548,7 +1544,8 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.getDefaultBranch = exports.downloadRepository = void 0;
+exports.downloadRepository = downloadRepository;
+exports.getDefaultBranch = getDefaultBranch;
 const assert = __importStar(__nccwpck_require__(9491));
 const core = __importStar(__nccwpck_require__(2186));
 const fs = __importStar(__nccwpck_require__(7147));
@@ -1612,7 +1609,6 @@ function downloadRepository(authToken, owner, repo, ref, commit, repositoryPath,
         yield io.rmRF(extractPath);
     });
 }
-exports.downloadRepository = downloadRepository;
 /**
  * Looks up the default branch name
  */
@@ -1651,7 +1647,6 @@ function getDefaultBranch(authToken, owner, repo, baseUrl) {
         }));
     });
 }
-exports.getDefaultBranch = getDefaultBranch;
 function downloadArchive(authToken, owner, repo, ref, commit, baseUrl) {
     return __awaiter(this, void 0, void 0, function* () {
         const octokit = github.getOctokit(authToken, {
@@ -1710,7 +1705,7 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.getInputs = void 0;
+exports.getInputs = getInputs;
 const core = __importStar(__nccwpck_require__(2186));
 const fsHelper = __importStar(__nccwpck_require__(7219));
 const github = __importStar(__nccwpck_require__(5438));
@@ -1839,7 +1834,6 @@ function getInputs() {
         return result;
     });
 }
-exports.getInputs = getInputs;
 
 
 /***/ }),
@@ -1971,7 +1965,12 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.checkCommitInfo = exports.testRef = exports.getRefSpec = exports.getRefSpecForAllHistory = exports.getCheckoutInfo = exports.tagsRefSpec = void 0;
+exports.tagsRefSpec = void 0;
+exports.getCheckoutInfo = getCheckoutInfo;
+exports.getRefSpecForAllHistory = getRefSpecForAllHistory;
+exports.getRefSpec = getRefSpec;
+exports.testRef = testRef;
+exports.checkCommitInfo = checkCommitInfo;
 const core = __importStar(__nccwpck_require__(2186));
 const github = __importStar(__nccwpck_require__(5438));
 const url_helper_1 = __nccwpck_require__(9437);
@@ -2025,7 +2024,6 @@ function getCheckoutInfo(git, ref, commit) {
         return result;
     });
 }
-exports.getCheckoutInfo = getCheckoutInfo;
 function getRefSpecForAllHistory(ref, commit) {
     const result = ['+refs/heads/*:refs/remotes/origin/*', exports.tagsRefSpec];
     if (ref && ref.toUpperCase().startsWith('REFS/PULL/')) {
@@ -2034,7 +2032,6 @@ function getRefSpecForAllHistory(ref, commit) {
     }
     return result;
 }
-exports.getRefSpecForAllHistory = getRefSpecForAllHistory;
 function getRefSpec(ref, commit) {
     if (!ref && !commit) {
         throw new Error('Args ref and commit cannot both be empty');
@@ -2083,7 +2080,6 @@ function getRefSpec(ref, commit) {
         return [`+${ref}:${ref}`];
     }
 }
-exports.getRefSpec = getRefSpec;
 /**
  * Tests whether the initial fetch created the ref at the expected commit
  */
@@ -2127,7 +2123,6 @@ function testRef(git, ref, commit) {
         }
     });
 }
-exports.testRef = testRef;
 function checkCommitInfo(token, commitInfo, repositoryOwner, repositoryName, ref, commit, baseUrl) {
     return __awaiter(this, void 0, void 0, function* () {
         var _a;
@@ -2193,7 +2188,6 @@ function checkCommitInfo(token, commitInfo, repositoryOwner, repositoryName, ref
         }
     });
 }
-exports.checkCommitInfo = checkCommitInfo;
 function fromPayload(path) {
     return select(github.context.payload, path);
 }
@@ -2218,13 +2212,12 @@ function select(obj, path) {
 ""use strict"";
 
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.escape = void 0;
+exports.escape = escape;
 function escape(value) {
     return value.replace(/[^a-zA-Z0-9_]/g, x => {
         return `\\${x}`;
     });
 }
-exports.escape = escape;
 
 
 /***/ }),
@@ -2267,7 +2260,8 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.execute = exports.RetryHelper = void 0;
+exports.RetryHelper = void 0;
+exports.execute = execute;
 const core = __importStar(__nccwpck_require__(2186));
 const defaultMaxAttempts = 3;
 const defaultMinSeconds = 10;
@@ -2319,7 +2313,6 @@ function execute(action) {
         return yield retryHelper.execute(action);
     });
 }
-exports.execute = execute;
 
 
 /***/ }),
@@ -2353,7 +2346,11 @@ var __importStar = (this && this.__importStar) || function (mod) {
     return result;
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.setSafeDirectory = exports.setSshKnownHostsPath = exports.setSshKeyPath = exports.setRepositoryPath = exports.SshKnownHostsPath = exports.SshKeyPath = exports.PostSetSafeDirectory = exports.RepositoryPath = exports.IsPost = void 0;
+exports.SshKnownHostsPath = exports.SshKeyPath = exports.PostSetSafeDirectory = exports.RepositoryPath = exports.IsPost = void 0;
+exports.setRepositoryPath = setRepositoryPath;
+exports.setSshKeyPath = setSshKeyPath;
+exports.setSshKnownHostsPath = setSshKnownHostsPath;
+exports.setSafeDirectory = setSafeDirectory;
 const core = __importStar(__nccwpck_require__(2186));
 /**
  * Indicates whether the POST action is running
@@ -2381,28 +2378,24 @@ exports.SshKnownHostsPath = core.getState('sshKnownHostsPath');
 function setRepositoryPath(repositoryPath) {
     core.saveState('repositoryPath', repositoryPath);
 }
-exports.setRepositoryPath = setRepositoryPath;
 /**
  * Save the SSH key path so the POST action can retrieve the value.
  */
 function setSshKeyPath(sshKeyPath) {
     core.saveState('sshKeyPath', sshKeyPath);
 }
-exports.setSshKeyPath = setSshKeyPath;
 /**
  * Save the SSH known hosts path so the POST action can retrieve the value.
  */
 function setSshKnownHostsPath(sshKnownHostsPath) {
     core.saveState('sshKnownHostsPath', sshKnownHostsPath);
 }
-exports.setSshKnownHostsPath = setSshKnownHostsPath;
 /**
  * Save the set-safe-directory input so the POST action can retrieve the value.
  */
 function setSafeDirectory() {
     core.saveState('setSafeDirectory', 'true');
 }
-exports.setSafeDirectory = setSafeDirectory;
 // Publish a variable so that when the POST action runs, it can determine it should run the cleanup logic.
 // This is necessary since we don't have a separate entry point.
 if (!exports.IsPost) {
@@ -2441,7 +2434,10 @@ var __importStar = (this && this.__importStar) || function (mod) {
     return result;
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.isGhes = exports.getServerApiUrl = exports.getServerUrl = exports.getFetchUrl = void 0;
+exports.getFetchUrl = getFetchUrl;
+exports.getServerUrl = getServerUrl;
+exports.getServerApiUrl = getServerApiUrl;
+exports.isGhes = isGhes;
 const assert = __importStar(__nccwpck_require__(9491));
 const url_1 = __nccwpck_require__(7310);
 function getFetchUrl(settings) {
@@ -2457,14 +2453,12 @@ function getFetchUrl(settings) {
     // ""origin"" is SCHEME://HOSTNAME[:PORT]
     return `${serviceUrl.origin}/${encodedOwner}/${encodedName}`;
 }
-exports.getFetchUrl = getFetchUrl;
 function getServerUrl(url) {
     let urlValue = url && url.trim().length > 0
         ? url
         : process.env['GITHUB_SERVER_URL'] || 'https://github.com';
     return new url_1.URL(urlValue);
 }
-exports.getServerUrl = getServerUrl;
 function getServerApiUrl(url) {
     let apiUrl = 'https://api.github.com';
     if (isGhes(url)) {
@@ -2473,12 +2467,10 @@ function getServerApiUrl(url) {
     }
     return apiUrl;
 }
-exports.getServerApiUrl = getServerApiUrl;
 function isGhes(url) {
     const ghUrl = getServerUrl(url);
     return ghUrl.hostname.toUpperCase() !== 'GITHUB.COM';
 }
-exports.isGhes = isGhes;
 
 
 /***/ }),
@@ -2521,7 +2513,7 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.getOrganizationId = void 0;
+exports.getOrganizationId = getOrganizationId;
 const core = __importStar(__nccwpck_require__(2186));
 const fs = __importStar(__nccwpck_require__(7147));
 /**
@@ -2550,7 +2542,6 @@ function getOrganizationId() {
         }
     });
 }
-exports.getOrganizationId = getOrganizationId;
 
 
 /***/ }),"
actions/checkout,db0cee9a514becbbd4a101a5fbbbf47865ee316c,dependabot[bot],2024-09-05T19:04:17Z,"Bump the minor-npm-dependencies group across 1 directory with 4 updates (#1872)

* Bump the minor-npm-dependencies group across 1 directory with 4 updates

Bumps the minor-npm-dependencies group with 4 updates in the / directory: [eslint-plugin-jest](https://github.com/jest-community/eslint-plugin-jest), [prettier](https://github.com/prettier/prettier), [ts-jest](https://github.com/kulshekhar/ts-jest) and [typescript](https://github.com/Microsoft/TypeScript).


Updates `eslint-plugin-jest` from 28.5.0 to 28.8.2
- [Release notes](https://github.com/jest-community/eslint-plugin-jest/releases)
- [Changelog](https://github.com/jest-community/eslint-plugin-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/jest-community/eslint-plugin-jest/compare/v28.5.0...v28.8.2)

Updates `prettier` from 3.2.5 to 3.3.3
- [Release notes](https://github.com/prettier/prettier/releases)
- [Changelog](https://github.com/prettier/prettier/blob/main/CHANGELOG.md)
- [Commits](https://github.com/prettier/prettier/compare/3.2.5...3.3.3)

Updates `ts-jest` from 29.1.2 to 29.2.5
- [Release notes](https://github.com/kulshekhar/ts-jest/releases)
- [Changelog](https://github.com/kulshekhar/ts-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/kulshekhar/ts-jest/compare/v29.1.2...v29.2.5)

Updates `typescript` from 5.4.5 to 5.5.4
- [Release notes](https://github.com/Microsoft/TypeScript/releases)
- [Changelog](https://github.com/microsoft/TypeScript/blob/main/azure-pipelines.release.yml)
- [Commits](https://github.com/Microsoft/TypeScript/compare/v5.4.5...v5.5.4)

---
updated-dependencies:
- dependency-name: eslint-plugin-jest
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: prettier
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: ts-jest
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: typescript
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
...

Signed-off-by: dependabot[bot] <support@github.com>

* `npm run build`

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Josh Gross <joshmgross@github.com>",package-lock.json,115,49,164,"@@ -25,13 +25,13 @@
         ""@vercel/ncc"": ""^0.38.1"",
         ""eslint"": ""^8.57.0"",
         ""eslint-plugin-github"": ""^4.10.2"",
-        ""eslint-plugin-jest"": ""^28.5.0"",
+        ""eslint-plugin-jest"": ""^28.8.2"",
         ""jest"": ""^29.7.0"",
         ""jest-circus"": ""^29.7.0"",
         ""js-yaml"": ""^4.1.0"",
-        ""prettier"": ""^3.2.5"",
-        ""ts-jest"": ""^29.1.2"",
-        ""typescript"": ""^5.4.5""
+        ""prettier"": ""^3.3.3"",
+        ""ts-jest"": ""^29.2.5"",
+        ""typescript"": ""^5.5.4""
       }
     },
     ""node_modules/@aashutoshrathi/word-wrap"": {
@@ -2080,6 +2080,12 @@
       ""integrity"": ""sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ=="",
       ""dev"": true
     },
+    ""node_modules/async"": {
+      ""version"": ""3.2.6"",
+      ""resolved"": ""https://registry.npmjs.org/async/-/async-3.2.6.tgz"",
+      ""integrity"": ""sha512-htCUDlxyyCLMgaM3xXg0C0LW2xqfuQ6p05pCEIsXuyQ+a1koYKTuBMzRNwmybfLgvJDMd0r1LTn4+E0Ti6C2AA=="",
+      ""dev"": true
+    },
     ""node_modules/available-typed-arrays"": {
       ""version"": ""1.0.7"",
       ""resolved"": ""https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz"",
@@ -2702,6 +2708,21 @@
         ""node"": "">=6.0.0""
       }
     },
+    ""node_modules/ejs"": {
+      ""version"": ""3.1.10"",
+      ""resolved"": ""https://registry.npmjs.org/ejs/-/ejs-3.1.10.tgz"",
+      ""integrity"": ""sha512-UeJmFfOrAQS8OJWPZ4qtgHyWExa088/MtK5UEyoJGFH67cDEXkZSviOiKRCZ4Xij0zxI3JECgYs3oKx+AizQBA=="",
+      ""dev"": true,
+      ""dependencies"": {
+        ""jake"": ""^10.8.5""
+      },
+      ""bin"": {
+        ""ejs"": ""bin/cli.js""
+      },
+      ""engines"": {
+        ""node"": "">=0.10.0""
+      }
+    },
     ""node_modules/electron-to-chromium"": {
       ""version"": ""1.4.747"",
       ""resolved"": ""https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.4.747.tgz"",
@@ -3197,18 +3218,18 @@
       }
     },
     ""node_modules/eslint-plugin-jest"": {
-      ""version"": ""28.5.0"",
-      ""resolved"": ""https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-28.5.0.tgz"",
-      ""integrity"": ""sha512-6np6DGdmNq/eBbA7HOUNV8fkfL86PYwBfwyb8n23FXgJNTR8+ot3smRHjza9LGsBBZRypK3qyF79vMjohIL8eQ=="",
+      ""version"": ""28.8.2"",
+      ""resolved"": ""https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-28.8.2.tgz"",
+      ""integrity"": ""sha512-mC3OyklHmS5i7wYU1rGId9EnxRI8TVlnFG56AE+8U9iRy6zwaNygZR+DsdZuCL0gRG0wVeyzq+uWcPt6yJrrMA=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@typescript-eslint/utils"": ""^6.0.0 || ^7.0.0""
+        ""@typescript-eslint/utils"": ""^6.0.0 || ^7.0.0 || ^8.0.0""
       },
       ""engines"": {
         ""node"": ""^16.10.0 || ^18.12.0 || >=20.0.0""
       },
       ""peerDependencies"": {
-        ""@typescript-eslint/eslint-plugin"": ""^6.0.0 || ^7.0.0"",
+        ""@typescript-eslint/eslint-plugin"": ""^6.0.0 || ^7.0.0 || ^8.0.0"",
         ""eslint"": ""^7.0.0 || ^8.0.0 || ^9.0.0"",
         ""jest"": ""*""
       },
@@ -3573,6 +3594,27 @@
         ""node"": ""^10.12.0 || >=12.0.0""
       }
     },
+    ""node_modules/filelist"": {
+      ""version"": ""1.0.4"",
+      ""resolved"": ""https://registry.npmjs.org/filelist/-/filelist-1.0.4.tgz"",
+      ""integrity"": ""sha512-w1cEuf3S+DrLCQL7ET6kz+gmlJdbq9J7yXCSjK/OZCPA+qEN1WyF4ZAf0YYJa4/shHJra2t/d/r8SV4Ji+x+8Q=="",
+      ""dev"": true,
+      ""dependencies"": {
+        ""minimatch"": ""^5.0.1""
+      }
+    },
+    ""node_modules/filelist/node_modules/minimatch"": {
+      ""version"": ""5.1.6"",
+      ""resolved"": ""https://registry.npmjs.org/minimatch/-/minimatch-5.1.6.tgz"",
+      ""integrity"": ""sha512-lKwV/1brpG6mBUFHtb7NUmtABCb2WZZmm2wNiOA5hAb8VdCS4B3dtMWyvcoViccwAW/COERjXLt0zP1zXUN26g=="",
+      ""dev"": true,
+      ""dependencies"": {
+        ""brace-expansion"": ""^2.0.1""
+      },
+      ""engines"": {
+        ""node"": "">=10""
+      }
+    },
     ""node_modules/fill-range"": {
       ""version"": ""7.0.1"",
       ""resolved"": ""https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz"",
@@ -4574,6 +4616,46 @@
         ""set-function-name"": ""^2.0.1""
       }
     },
+    ""node_modules/jake"": {
+      ""version"": ""10.9.2"",
+      ""resolved"": ""https://registry.npmjs.org/jake/-/jake-10.9.2.tgz"",
+      ""integrity"": ""sha512-2P4SQ0HrLQ+fw6llpLnOaGAvN2Zu6778SJMrCUwns4fOoG9ayrTiZk3VV8sCPkVZF8ab0zksVpS8FDY5pRCNBA=="",
+      ""dev"": true,
+      ""dependencies"": {
+        ""async"": ""^3.2.3"",
+        ""chalk"": ""^4.0.2"",
+        ""filelist"": ""^1.0.4"",
+        ""minimatch"": ""^3.1.2""
+      },
+      ""bin"": {
+        ""jake"": ""bin/cli.js""
+      },
+      ""engines"": {
+        ""node"": "">=10""
+      }
+    },
+    ""node_modules/jake/node_modules/brace-expansion"": {
+      ""version"": ""1.1.11"",
+      ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"",
+      ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="",
+      ""dev"": true,
+      ""dependencies"": {
+        ""balanced-match"": ""^1.0.0"",
+        ""concat-map"": ""0.0.1""
+      }
+    },
+    ""node_modules/jake/node_modules/minimatch"": {
+      ""version"": ""3.1.2"",
+      ""resolved"": ""https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz"",
+      ""integrity"": ""sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw=="",
+      ""dev"": true,
+      ""dependencies"": {
+        ""brace-expansion"": ""^1.1.7""
+      },
+      ""engines"": {
+        ""node"": ""*""
+      }
+    },
     ""node_modules/jest"": {
       ""version"": ""29.7.0"",
       ""resolved"": ""https://registry.npmjs.org/jest/-/jest-29.7.0.tgz"",
@@ -5896,9 +5978,9 @@
       }
     },
     ""node_modules/prettier"": {
-      ""version"": ""3.2.5"",
-      ""resolved"": ""https://registry.npmjs.org/prettier/-/prettier-3.2.5.tgz"",
-      ""integrity"": ""sha512-3/GWa9aOC0YeD7LUfvOG2NiDyhOWRvt1k+rcKhOuYnMY24iiCphgneUfJDyFXd6rZCAnuLBv6UeAULtrhT/F4A=="",
+      ""version"": ""3.3.3"",
+      ""resolved"": ""https://registry.npmjs.org/prettier/-/prettier-3.3.3.tgz"",
+      ""integrity"": ""sha512-i2tDNA0O5IrMO757lfrdQZCc2jPNDVntV0m/+4whiDfWaTKfMNgR7Qz0NAeGz/nRqF4m5/6CLzbP4/liHt12Ew=="",
       ""dev"": true,
       ""bin"": {
         ""prettier"": ""bin/prettier.cjs""
@@ -6607,28 +6689,30 @@
       }
     },
     ""node_modules/ts-jest"": {
-      ""version"": ""29.1.2"",
-      ""resolved"": ""https://registry.npmjs.org/ts-jest/-/ts-jest-29.1.2.tgz"",
-      ""integrity"": ""sha512-br6GJoH/WUX4pu7FbZXuWGKGNDuU7b8Uj77g/Sp7puZV6EXzuByl6JrECvm0MzVzSTkSHWTihsXt+5XYER5b+g=="",
+      ""version"": ""29.2.5"",
+      ""resolved"": ""https://registry.npmjs.org/ts-jest/-/ts-jest-29.2.5.tgz"",
+      ""integrity"": ""sha512-KD8zB2aAZrcKIdGk4OwpJggeLcH1FgrICqDSROWqlnJXGCXK4Mn6FcdK2B6670Xr73lHMG1kHw8R87A0ecZ+vA=="",
       ""dev"": true,
       ""dependencies"": {
-        ""bs-logger"": ""0.x"",
-        ""fast-json-stable-stringify"": ""2.x"",
+        ""bs-logger"": ""^0.2.6"",
+        ""ejs"": ""^3.1.10"",
+        ""fast-json-stable-stringify"": ""^2.1.0"",
         ""jest-util"": ""^29.0.0"",
         ""json5"": ""^2.2.3"",
-        ""lodash.memoize"": ""4.x"",
-        ""make-error"": ""1.x"",
-        ""semver"": ""^7.5.3"",
-        ""yargs-parser"": ""^21.0.1""
+        ""lodash.memoize"": ""^4.1.2"",
+        ""make-error"": ""^1.3.6"",
+        ""semver"": ""^7.6.3"",
+        ""yargs-parser"": ""^21.1.1""
       },
       ""bin"": {
         ""ts-jest"": ""cli.js""
       },
       ""engines"": {
-        ""node"": ""^16.10.0 || ^18.0.0 || >=20.0.0""
+        ""node"": ""^14.15.0 || ^16.10.0 || ^18.0.0 || >=20.0.0""
       },
       ""peerDependencies"": {
         ""@babel/core"": "">=7.0.0-beta.0 <8"",
+        ""@jest/transform"": ""^29.0.0"",
         ""@jest/types"": ""^29.0.0"",
         ""babel-jest"": ""^29.0.0"",
         ""jest"": ""^29.0.0"",
@@ -6638,6 +6722,9 @@
         ""@babel/core"": {
           ""optional"": true
         },
+        ""@jest/transform"": {
+          ""optional"": true
+        },
         ""@jest/types"": {
           ""optional"": true
         },
@@ -6649,39 +6736,18 @@
         }
       }
     },
-    ""node_modules/ts-jest/node_modules/lru-cache"": {
-      ""version"": ""6.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"",
-      ""integrity"": ""sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""yallist"": ""^4.0.0""
-      },
-      ""engines"": {
-        ""node"": "">=10""
-      }
-    },
     ""node_modules/ts-jest/node_modules/semver"": {
-      ""version"": ""7.6.0"",
-      ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.0.tgz"",
-      ""integrity"": ""sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg=="",
+      ""version"": ""7.6.3"",
+      ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.3.tgz"",
+      ""integrity"": ""sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A=="",
       ""dev"": true,
-      ""dependencies"": {
-        ""lru-cache"": ""^6.0.0""
-      },
       ""bin"": {
         ""semver"": ""bin/semver.js""
       },
       ""engines"": {
         ""node"": "">=10""
       }
     },
-    ""node_modules/ts-jest/node_modules/yallist"": {
-      ""version"": ""4.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"",
-      ""integrity"": ""sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="",
-      ""dev"": true
-    },
     ""node_modules/tsconfig-paths"": {
       ""version"": ""3.15.0"",
       ""resolved"": ""https://registry.npmjs.org/tsconfig-paths/-/tsconfig-paths-3.15.0.tgz"",
@@ -6836,9 +6902,9 @@
       }
     },
     ""node_modules/typescript"": {
-      ""version"": ""5.4.5"",
-      ""resolved"": ""https://registry.npmjs.org/typescript/-/typescript-5.4.5.tgz"",
-      ""integrity"": ""sha512-vcI4UpRgg81oIRUFwR0WSIHKt11nJ7SAVlYNIu+QpqeyXP+gpQJy/Z4+F0aGxSE4MqwjyXvW/TzgkLAx2AGHwQ=="",
+      ""version"": ""5.5.4"",
+      ""resolved"": ""https://registry.npmjs.org/typescript/-/typescript-5.5.4.tgz"",
+      ""integrity"": ""sha512-Mtq29sKDAEYP7aljRgtPOpTvOfbwRWlS6dPRzwjdE+C0R4brX/GUyhHSecbHMFLNBLcJIPt9nl9yG5TZ1weH+Q=="",
       ""dev"": true,
       ""bin"": {
         ""tsc"": ""bin/tsc"","
actions/checkout,db0cee9a514becbbd4a101a5fbbbf47865ee316c,dependabot[bot],2024-09-05T19:04:17Z,"Bump the minor-npm-dependencies group across 1 directory with 4 updates (#1872)

* Bump the minor-npm-dependencies group across 1 directory with 4 updates

Bumps the minor-npm-dependencies group with 4 updates in the / directory: [eslint-plugin-jest](https://github.com/jest-community/eslint-plugin-jest), [prettier](https://github.com/prettier/prettier), [ts-jest](https://github.com/kulshekhar/ts-jest) and [typescript](https://github.com/Microsoft/TypeScript).


Updates `eslint-plugin-jest` from 28.5.0 to 28.8.2
- [Release notes](https://github.com/jest-community/eslint-plugin-jest/releases)
- [Changelog](https://github.com/jest-community/eslint-plugin-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/jest-community/eslint-plugin-jest/compare/v28.5.0...v28.8.2)

Updates `prettier` from 3.2.5 to 3.3.3
- [Release notes](https://github.com/prettier/prettier/releases)
- [Changelog](https://github.com/prettier/prettier/blob/main/CHANGELOG.md)
- [Commits](https://github.com/prettier/prettier/compare/3.2.5...3.3.3)

Updates `ts-jest` from 29.1.2 to 29.2.5
- [Release notes](https://github.com/kulshekhar/ts-jest/releases)
- [Changelog](https://github.com/kulshekhar/ts-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/kulshekhar/ts-jest/compare/v29.1.2...v29.2.5)

Updates `typescript` from 5.4.5 to 5.5.4
- [Release notes](https://github.com/Microsoft/TypeScript/releases)
- [Changelog](https://github.com/microsoft/TypeScript/blob/main/azure-pipelines.release.yml)
- [Commits](https://github.com/Microsoft/TypeScript/compare/v5.4.5...v5.5.4)

---
updated-dependencies:
- dependency-name: eslint-plugin-jest
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: prettier
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: ts-jest
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: typescript
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
...

Signed-off-by: dependabot[bot] <support@github.com>

* `npm run build`

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Josh Gross <joshmgross@github.com>",package.json,4,4,8,"@@ -44,12 +44,12 @@
     ""@vercel/ncc"": ""^0.38.1"",
     ""eslint"": ""^8.57.0"",
     ""eslint-plugin-github"": ""^4.10.2"",
-    ""eslint-plugin-jest"": ""^28.5.0"",
+    ""eslint-plugin-jest"": ""^28.8.2"",
     ""jest"": ""^29.7.0"",
     ""jest-circus"": ""^29.7.0"",
     ""js-yaml"": ""^4.1.0"",
-    ""prettier"": ""^3.2.5"",
-    ""ts-jest"": ""^29.1.2"",
-    ""typescript"": ""^5.4.5""
+    ""prettier"": ""^3.3.3"",
+    ""ts-jest"": ""^29.2.5"",
+    ""typescript"": ""^5.5.4""
   }
 }"
actions/checkout,b6849436894e144dbce29d7d7fda2ae3bf9d8365,Luca Comellini,2024-09-05T15:57:13Z,"Add Ref and Commit outputs (#1180)

Signed-off-by: Luca Comellini <luca.com@gmail.com>",.github/workflows/test.yml,34,0,34,"@@ -295,3 +295,37 @@ jobs:
         uses: actions/checkout@v4.1.6
         with:
           path: localClone
+
+  test-output:
+    runs-on: ubuntu-latest
+    steps:
+      # Clone this repo
+      - name: Checkout
+        uses: actions/checkout@v4.1.6
+
+      # Basic checkout using git
+      - name: Checkout basic
+        id: checkout
+        uses: ./
+        with:
+          ref: test-data/v2/basic
+
+      # Verify output
+      - name: Verify output
+        run: |
+          echo ""Commit: ${{ steps.checkout.outputs.commit }}""
+          echo ""Ref: ${{ steps.checkout.outputs.ref }}""
+
+          if [ ""${{ steps.checkout.outputs.ref }}"" != ""test-data/v2/basic"" ]; then
+            echo ""Expected ref to be test-data/v2/basic""
+            exit 1
+          fi
+
+          if [ ""${{ steps.checkout.outputs.commit }}"" != ""82f71901cf8c021332310dcc8cdba84c4193ff5d"" ]; then
+            echo ""Expected commit to be 82f71901cf8c021332310dcc8cdba84c4193ff5d""
+            exit 1
+          fi
+
+      # needed to make checkout post cleanup succeed
+      - name: Fix Checkout
+        uses: actions/checkout@v4.1.6"
actions/checkout,b6849436894e144dbce29d7d7fda2ae3bf9d8365,Luca Comellini,2024-09-05T15:57:13Z,"Add Ref and Commit outputs (#1180)

Signed-off-by: Luca Comellini <luca.com@gmail.com>",action.yml,5,0,5,"@@ -98,6 +98,11 @@ inputs:
   github-server-url:
     description: The base URL for the GitHub instance that you are trying to clone from, will use environment defaults to fetch from the same instance that the workflow is running from unless specified. Example URLs are https://github.com or https://my-ghes-server.example.com
     required: false
+outputs:
+  ref:
+    description: 'The branch, tag or SHA that was checked out'
+  commit:
+    description: 'The commit SHA that was checked out'
 runs:
   using: node20
   main: dist/index.js"
actions/checkout,b6849436894e144dbce29d7d7fda2ae3bf9d8365,Luca Comellini,2024-09-05T15:57:13Z,"Add Ref and Commit outputs (#1180)

Signed-off-by: Luca Comellini <luca.com@gmail.com>",dist/index.js,3,1,4,"@@ -1355,7 +1355,8 @@ function getSource(settings) {
             // Get commit information
             const commitInfo = yield git.log1();
             // Log commit sha
-            yield git.log1(""--format='%H'"");
+            const commitSHA = yield git.log1('--format=%H');
+            core.setOutput('commit', commitSHA.trim());
             // Check for incorrect pull request merge commit
             yield refHelper.checkCommitInfo(settings.authToken, commitInfo, settings.repositoryOwner, settings.repositoryName, settings.ref, settings.commit, settings.githubServerUrl);
         }
@@ -1897,6 +1898,7 @@ function run() {
                 coreCommand.issueCommand('add-matcher', {}, path.join(__dirname, 'problem-matcher.json'));
                 // Get sources
                 yield gitSourceProvider.getSource(sourceSettings);
+                core.setOutput('ref', sourceSettings.ref);
             }
             finally {
                 // Unregister problem matcher"
actions/checkout,b6849436894e144dbce29d7d7fda2ae3bf9d8365,Luca Comellini,2024-09-05T15:57:13Z,"Add Ref and Commit outputs (#1180)

Signed-off-by: Luca Comellini <luca.com@gmail.com>",src/git-source-provider.ts,2,1,3,"@@ -261,7 +261,8 @@ export async function getSource(settings: IGitSourceSettings): Promise<void> {
     const commitInfo = await git.log1()
 
     // Log commit sha
-    await git.log1(""--format='%H'"")
+    const commitSHA = await git.log1('--format=%H')
+    core.setOutput('commit', commitSHA.trim())
 
     // Check for incorrect pull request merge commit
     await refHelper.checkCommitInfo("
actions/checkout,b6849436894e144dbce29d7d7fda2ae3bf9d8365,Luca Comellini,2024-09-05T15:57:13Z,"Add Ref and Commit outputs (#1180)

Signed-off-by: Luca Comellini <luca.com@gmail.com>",src/main.ts,1,0,1,"@@ -19,6 +19,7 @@ async function run(): Promise<void> {
 
       // Get sources
       await gitSourceProvider.getSource(sourceSettings)
+      core.setOutput('ref', sourceSettings.ref)
     } finally {
       // Unregister problem matcher
       coreCommand.issueCommand('remove-matcher', {owner: 'checkout-git'}, '')"
actions/checkout,2d7d9f7ff5b310f983d059b68785b3c74d8b8edd,yasonk,2024-09-02T13:53:38Z,"Provide explanation for where user email came from (#1869)

* Provide explanation for where user email came from

* bringing back the newline",README.md,1,0,1,"@@ -286,6 +286,7 @@ jobs:
           git commit -m ""generated""
           git push
 ```
+*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D
 
 # License
 "
actions/checkout,9a9194f87191a7e9055e3e9b95b8cfb13023bb08,dependabot[bot],2024-07-29T20:10:36Z,"Bump docker/build-push-action from 5.3.0 to 6.5.0 (#1832)

Bumps [docker/build-push-action](https://github.com/docker/build-push-action) from 5.3.0 to 6.5.0.
- [Release notes](https://github.com/docker/build-push-action/releases)
- [Commits](https://github.com/docker/build-push-action/compare/v5.3.0...v6.5.0)

---
updated-dependencies:
- dependency-name: docker/build-push-action
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",.github/workflows/update-test-ubuntu-git.yml,1,1,2,"@@ -48,7 +48,7 @@ jobs:
 
       # Use `docker/build-push-action` to build (and optionally publish) the image. 
       - name: Build Docker Image (with optional Push)
-        uses: docker/build-push-action@v5.3.0
+        uses: docker/build-push-action@v6.5.0
         with:
           context: .
           file: images/test-ubuntu-git.Dockerfile"
actions/checkout,dd960bd3c3f080561a1810e32349ac211ecec7d4,dependabot[bot],2024-07-29T20:10:02Z,"Bump docker/login-action in the minor-actions-dependencies group (#1831)

Bumps the minor-actions-dependencies group with 1 update: [docker/login-action](https://github.com/docker/login-action).


Updates `docker/login-action` from 3.1.0 to 3.3.0
- [Release notes](https://github.com/docker/login-action/releases)
- [Commits](https://github.com/docker/login-action/compare/v3.1.0...v3.3.0)

---
updated-dependencies:
- dependency-name: docker/login-action
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: minor-actions-dependencies
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",.github/workflows/update-test-ubuntu-git.yml,1,1,2,"@@ -31,7 +31,7 @@ jobs:
       # Use `docker/login-action` to log in to GHCR.io. 
       # Once published, the packages are scoped to the account defined here.
       - name: Log in to the ghcr.io container registry
-        uses: docker/login-action@v3.1.0
+        uses: docker/login-action@v3.3.0
         with:
           registry: ${{ env.REGISTRY }}
           username: ${{ github.actor }}"
actions/checkout,692973e3d937129bcbf40652eb9f2f61becf3332,Josh Gross,2024-06-12T18:41:43Z,"Prepare 4.1.7 release (#1775)

* Prepare 4.1.7 release

* Include #1776 in 4.1.7 release",CHANGELOG.md,6,0,6,"@@ -1,5 +1,11 @@
 # Changelog
 
+## v4.1.7
+* Bump the minor-npm-dependencies group across 1 directory with 4 updates by @dependabot in https://github.com/actions/checkout/pull/1739
+* Bump actions/checkout from 3 to 4 by @dependabot in https://github.com/actions/checkout/pull/1697
+* Check out other refs/* by commit by @orhantoy in https://github.com/actions/checkout/pull/1774
+* Pin actions/checkout's own workflows to a known, good, stable version. by @jww3 in https://github.com/actions/checkout/pull/1776
+
 ## v4.1.6
 * Check platform to set archive extension appropriately by @cory-miller in https://github.com/actions/checkout/pull/1732
 "
actions/checkout,692973e3d937129bcbf40652eb9f2f61becf3332,Josh Gross,2024-06-12T18:41:43Z,"Prepare 4.1.7 release (#1775)

* Prepare 4.1.7 release

* Include #1776 in 4.1.7 release",package-lock.json,2,2,4,"@@ -1,12 +1,12 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.6"",
+  ""version"": ""4.1.7"",
   ""lockfileVersion"": 3,
   ""requires"": true,
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.1.6"",
+      ""version"": ""4.1.7"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.1"","
actions/checkout,692973e3d937129bcbf40652eb9f2f61becf3332,Josh Gross,2024-06-12T18:41:43Z,"Prepare 4.1.7 release (#1775)

* Prepare 4.1.7 release

* Include #1776 in 4.1.7 release",package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.6"",
+  ""version"": ""4.1.7"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {"
actions/checkout,6ccd57f4c5d15bdc2fef309bd9fb6cc9db2ef1c6,John Wesley Walker III,2024-06-12T17:11:03Z,"Pin actions/checkout's own workflows to a known, good, stable version. (#1776)

* Pin actions/checkout's own workflows to a known, good, stable version.

* fixed failing unit test

* fix unit test",.github/workflows/check-dist.yml,1,1,2,"@@ -22,7 +22,7 @@ jobs:
     runs-on: ubuntu-latest
 
     steps:
-      - uses: actions/checkout@v4
+      - uses: actions/checkout@v4.1.6
 
       - name: Set Node.js 20.x
         uses: actions/setup-node@v4"
actions/checkout,6ccd57f4c5d15bdc2fef309bd9fb6cc9db2ef1c6,John Wesley Walker III,2024-06-12T17:11:03Z,"Pin actions/checkout's own workflows to a known, good, stable version. (#1776)

* Pin actions/checkout's own workflows to a known, good, stable version.

* fixed failing unit test

* fix unit test",.github/workflows/codeql-analysis.yml,1,1,2,"@@ -39,7 +39,7 @@ jobs:
 
     steps:
     - name: Checkout repository
-      uses: actions/checkout@v4
+      uses: actions/checkout@v4.1.6
 
     - name: Initialize CodeQL
       uses: github/codeql-action/init@v3"
actions/checkout,6ccd57f4c5d15bdc2fef309bd9fb6cc9db2ef1c6,John Wesley Walker III,2024-06-12T17:11:03Z,"Pin actions/checkout's own workflows to a known, good, stable version. (#1776)

* Pin actions/checkout's own workflows to a known, good, stable version.

* fixed failing unit test

* fix unit test",.github/workflows/licensed.yml,1,1,2,"@@ -9,6 +9,6 @@ jobs:
     runs-on: ubuntu-latest
     name: Check licenses
     steps:
-      - uses: actions/checkout@v4
+      - uses: actions/checkout@v4.1.6
       - run: npm ci
       - run: npm run licensed-check
\ No newline at end of file"
actions/checkout,6ccd57f4c5d15bdc2fef309bd9fb6cc9db2ef1c6,John Wesley Walker III,2024-06-12T17:11:03Z,"Pin actions/checkout's own workflows to a known, good, stable version. (#1776)

* Pin actions/checkout's own workflows to a known, good, stable version.

* fixed failing unit test

* fix unit test",.github/workflows/test.yml,9,9,18,"@@ -19,7 +19,7 @@ jobs:
       - uses: actions/setup-node@v4
         with:
           node-version: 20.x
-      - uses: actions/checkout@v4
+      - uses: actions/checkout@v4.1.6
       - run: npm ci
       - run: npm run build
       - run: npm run format-check
@@ -37,7 +37,7 @@ jobs:
     steps:
       # Clone this repo
       - name: Checkout
-        uses: actions/checkout@v4
+        uses: actions/checkout@v4.1.6
 
       # Basic checkout
       - name: Checkout basic
@@ -202,7 +202,7 @@ jobs:
     steps:
       # Clone this repo
       - name: Checkout
-        uses: actions/checkout@v4
+        uses: actions/checkout@v4.1.6
 
       # Basic checkout using git
       - name: Checkout basic
@@ -234,7 +234,7 @@ jobs:
     steps:
       # Clone this repo
       - name: Checkout
-        uses: actions/checkout@v4
+        uses: actions/checkout@v4.1.6
 
       # Basic checkout using git
       - name: Checkout basic
@@ -264,13 +264,13 @@ jobs:
     steps:
       # Clone this repo
       - name: Checkout
-        uses: actions/checkout@v4
+        uses: actions/checkout@v4.1.6
         with:
-          path: v4
+          path: localClone
 
       # Basic checkout using git
       - name: Checkout basic
-        uses: ./v4
+        uses: ./localClone
         with:
           ref: test-data/v2/basic
       - name: Verify basic
@@ -292,6 +292,6 @@ jobs:
 
       # needed to make checkout post cleanup succeed
       - name: Fix Checkout v4
-        uses: actions/checkout@v4
+        uses: actions/checkout@v4.1.6
         with:
-          path: v4
+          path: localClone"
actions/checkout,6ccd57f4c5d15bdc2fef309bd9fb6cc9db2ef1c6,John Wesley Walker III,2024-06-12T17:11:03Z,"Pin actions/checkout's own workflows to a known, good, stable version. (#1776)

* Pin actions/checkout's own workflows to a known, good, stable version.

* fixed failing unit test

* fix unit test",.github/workflows/update-main-version.yml,1,1,2,"@@ -22,7 +22,7 @@ jobs:
     # Note this update workflow can also be used as a rollback tool.
     # For that reason, it's best to pin `actions/checkout` to a known, stable version
     # (typically, about two releases back).
-    - uses: actions/checkout@v4
+    - uses: actions/checkout@v4.1.6
       with:
         fetch-depth: 0
     - name: Git config"
actions/checkout,b17fe1e4d59a9d1d95a7aead5e6fcd13e50939a5,Orhan Toy,2024-06-12T15:01:40Z,"Handle hidden refs (#1774)

Co-authored-by: Chris Gavin <chris@chrisgavin.me>",__test__/ref-helper.test.ts,10,0,10,"@@ -67,6 +67,16 @@ describe('ref-helper tests', () => {
     expect(checkoutInfo.startPoint).toBeFalsy()
   })
 
+  it('getCheckoutInfo refs/', async () => {
+    const checkoutInfo = await refHelper.getCheckoutInfo(
+      git,
+      'refs/gh/queue/main/pr-123',
+      commit
+    )
+    expect(checkoutInfo.ref).toBe(commit)
+    expect(checkoutInfo.startPoint).toBeFalsy()
+  })
+
   it('getCheckoutInfo unqualified branch only', async () => {
     git.branchExists = jest.fn(async (remote: boolean, pattern: string) => {
       return true"
actions/checkout,b17fe1e4d59a9d1d95a7aead5e6fcd13e50939a5,Orhan Toy,2024-06-12T15:01:40Z,"Handle hidden refs (#1774)

Co-authored-by: Chris Gavin <chris@chrisgavin.me>",dist/index.js,5,1,6,"@@ -2000,9 +2000,13 @@ function getCheckoutInfo(git, ref, commit) {
             result.ref = `refs/remotes/pull/${branch}`;
         }
         // refs/tags/
-        else if (upperRef.startsWith('REFS/')) {
+        else if (upperRef.startsWith('REFS/TAGS/')) {
             result.ref = ref;
         }
+        // refs/
+        else if (upperRef.startsWith('REFS/') && commit) {
+            result.ref = commit;
+        }
         // Unqualified ref, check for a matching branch or tag
         else {
             if (yield git.branchExists(true, `origin/${ref}`)) {"
actions/checkout,b17fe1e4d59a9d1d95a7aead5e6fcd13e50939a5,Orhan Toy,2024-06-12T15:01:40Z,"Handle hidden refs (#1774)

Co-authored-by: Chris Gavin <chris@chrisgavin.me>",src/ref-helper.ts,5,1,6,"@@ -42,9 +42,13 @@ export async function getCheckoutInfo(
     result.ref = `refs/remotes/pull/${branch}`
   }
   // refs/tags/
-  else if (upperRef.startsWith('REFS/')) {
+  else if (upperRef.startsWith('REFS/TAGS/')) {
     result.ref = ref
   }
+  // refs/
+  else if (upperRef.startsWith('REFS/') && commit) {
+    result.ref = commit
+  }
   // Unqualified ref, check for a matching branch or tag
   else {
     if (await git.branchExists(true, `origin/${ref}`)) {"
actions/checkout,b80ff79f1755d06ba70441c368a6fe801f5f3a62,dependabot[bot],2024-05-20T18:25:59Z,"Bump actions/checkout from 3 to 4 (#1697)

* Bump actions/checkout from 3 to 4

Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Apply suggestions from code review

* .

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Cory Miller <13227161+cory-miller@users.noreply.github.com>",.github/workflows/check-dist.yml,1,1,2,"@@ -22,7 +22,7 @@ jobs:
     runs-on: ubuntu-latest
 
     steps:
-      - uses: actions/checkout@v3
+      - uses: actions/checkout@v4
 
       - name: Set Node.js 20.x
         uses: actions/setup-node@v4"
actions/checkout,b80ff79f1755d06ba70441c368a6fe801f5f3a62,dependabot[bot],2024-05-20T18:25:59Z,"Bump actions/checkout from 3 to 4 (#1697)

* Bump actions/checkout from 3 to 4

Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Apply suggestions from code review

* .

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Cory Miller <13227161+cory-miller@users.noreply.github.com>",.github/workflows/codeql-analysis.yml,1,1,2,"@@ -39,7 +39,7 @@ jobs:
 
     steps:
     - name: Checkout repository
-      uses: actions/checkout@v3
+      uses: actions/checkout@v4
 
     - name: Initialize CodeQL
       uses: github/codeql-action/init@v3"
actions/checkout,b80ff79f1755d06ba70441c368a6fe801f5f3a62,dependabot[bot],2024-05-20T18:25:59Z,"Bump actions/checkout from 3 to 4 (#1697)

* Bump actions/checkout from 3 to 4

Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Apply suggestions from code review

* .

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Cory Miller <13227161+cory-miller@users.noreply.github.com>",.github/workflows/licensed.yml,1,1,2,"@@ -9,6 +9,6 @@ jobs:
     runs-on: ubuntu-latest
     name: Check licenses
     steps:
-      - uses: actions/checkout@v3
+      - uses: actions/checkout@v4
       - run: npm ci
       - run: npm run licensed-check
\ No newline at end of file"
actions/checkout,b80ff79f1755d06ba70441c368a6fe801f5f3a62,dependabot[bot],2024-05-20T18:25:59Z,"Bump actions/checkout from 3 to 4 (#1697)

* Bump actions/checkout from 3 to 4

Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Apply suggestions from code review

* .

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Cory Miller <13227161+cory-miller@users.noreply.github.com>",.github/workflows/test.yml,10,10,20,"@@ -19,7 +19,7 @@ jobs:
       - uses: actions/setup-node@v4
         with:
           node-version: 20.x
-      - uses: actions/checkout@v3
+      - uses: actions/checkout@v4
       - run: npm ci
       - run: npm run build
       - run: npm run format-check
@@ -37,7 +37,7 @@ jobs:
     steps:
       # Clone this repo
       - name: Checkout
-        uses: actions/checkout@v4.1.1
+        uses: actions/checkout@v4
 
       # Basic checkout
       - name: Checkout basic
@@ -202,7 +202,7 @@ jobs:
     steps:
       # Clone this repo
       - name: Checkout
-        uses: actions/checkout@v3
+        uses: actions/checkout@v4
 
       # Basic checkout using git
       - name: Checkout basic
@@ -234,7 +234,7 @@ jobs:
     steps:
       # Clone this repo
       - name: Checkout
-        uses: actions/checkout@v3
+        uses: actions/checkout@v4
 
       # Basic checkout using git
       - name: Checkout basic
@@ -264,13 +264,13 @@ jobs:
     steps:
       # Clone this repo
       - name: Checkout
-        uses: actions/checkout@v3
+        uses: actions/checkout@v4
         with:
-          path: v3
+          path: v4
 
       # Basic checkout using git
       - name: Checkout basic
-        uses: ./v3
+        uses: ./v4
         with:
           ref: test-data/v2/basic
       - name: Verify basic
@@ -291,7 +291,7 @@ jobs:
           git fetch --no-tags --depth=1 origin +refs/heads/main:refs/remotes/origin/main
 
       # needed to make checkout post cleanup succeed
-      - name: Fix Checkout v3
-        uses: actions/checkout@v3
+      - name: Fix Checkout v4
+        uses: actions/checkout@v4
         with:
-          path: v3
+          path: v4"
actions/checkout,b80ff79f1755d06ba70441c368a6fe801f5f3a62,dependabot[bot],2024-05-20T18:25:59Z,"Bump actions/checkout from 3 to 4 (#1697)

* Bump actions/checkout from 3 to 4

Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

* Apply suggestions from code review

* .

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Cory Miller <13227161+cory-miller@users.noreply.github.com>",.github/workflows/update-main-version.yml,1,1,2,"@@ -22,7 +22,7 @@ jobs:
     # Note this update workflow can also be used as a rollback tool.
     # For that reason, it's best to pin `actions/checkout` to a known, stable version
     # (typically, about two releases back).
-    - uses: actions/checkout@v4.1.1
+    - uses: actions/checkout@v4
       with:
         fetch-depth: 0
     - name: Git config"
actions/checkout,b1ec3021b8fa02164da82ca1557d017d83b0e179,dependabot[bot],2024-05-20T13:56:19Z,"Bump the minor-npm-dependencies group across 1 directory with 4 updates (#1739)

Bumps the minor-npm-dependencies group with 4 updates in the / directory: [@types/node](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/node), [@typescript-eslint/eslint-plugin](https://github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin), [@typescript-eslint/parser](https://github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser) and [eslint-plugin-jest](https://github.com/jest-community/eslint-plugin-jest).


Updates `@types/node` from 20.12.7 to 20.12.12
- [Release notes](https://github.com/DefinitelyTyped/DefinitelyTyped/releases)
- [Commits](https://github.com/DefinitelyTyped/DefinitelyTyped/commits/HEAD/types/node)

Updates `@typescript-eslint/eslint-plugin` from 7.7.1 to 7.9.0
- [Release notes](https://github.com/typescript-eslint/typescript-eslint/releases)
- [Changelog](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/CHANGELOG.md)
- [Commits](https://github.com/typescript-eslint/typescript-eslint/commits/v7.9.0/packages/eslint-plugin)

Updates `@typescript-eslint/parser` from 7.7.1 to 7.9.0
- [Release notes](https://github.com/typescript-eslint/typescript-eslint/releases)
- [Changelog](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/parser/CHANGELOG.md)
- [Commits](https://github.com/typescript-eslint/typescript-eslint/commits/v7.9.0/packages/parser)

Updates `eslint-plugin-jest` from 28.2.0 to 28.5.0
- [Release notes](https://github.com/jest-community/eslint-plugin-jest/releases)
- [Changelog](https://github.com/jest-community/eslint-plugin-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/jest-community/eslint-plugin-jest/compare/v28.2.0...v28.5.0)

---
updated-dependencies:
- dependency-name: ""@types/node""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: minor-npm-dependencies
- dependency-name: ""@typescript-eslint/eslint-plugin""
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: ""@typescript-eslint/parser""
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: eslint-plugin-jest
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",package-lock.json,57,309,366,"@@ -6,7 +6,7 @@
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.1.4"",
+      ""version"": ""4.1.6"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.1"",
@@ -18,14 +18,14 @@
       },
       ""devDependencies"": {
         ""@types/jest"": ""^29.5.12"",
-        ""@types/node"": ""^20.12.7"",
+        ""@types/node"": ""^20.12.12"",
         ""@types/uuid"": ""^9.0.8"",
-        ""@typescript-eslint/eslint-plugin"": ""^7.7.1"",
-        ""@typescript-eslint/parser"": ""^7.7.1"",
+        ""@typescript-eslint/eslint-plugin"": ""^7.9.0"",
+        ""@typescript-eslint/parser"": ""^7.9.0"",
         ""@vercel/ncc"": ""^0.38.1"",
         ""eslint"": ""^8.57.0"",
         ""eslint-plugin-github"": ""^4.10.2"",
-        ""eslint-plugin-jest"": ""^28.2.0"",
+        ""eslint-plugin-jest"": ""^28.5.0"",
         ""jest"": ""^29.7.0"",
         ""jest-circus"": ""^29.7.0"",
         ""js-yaml"": ""^4.1.0"",
@@ -1581,33 +1581,21 @@
         ""pretty-format"": ""^29.0.0""
       }
     },
-    ""node_modules/@types/json-schema"": {
-      ""version"": ""7.0.15"",
-      ""resolved"": ""https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz"",
-      ""integrity"": ""sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA=="",
-      ""dev"": true
-    },
     ""node_modules/@types/json5"": {
       ""version"": ""0.0.29"",
       ""resolved"": ""https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz"",
       ""integrity"": ""sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ=="",
       ""dev"": true
     },
     ""node_modules/@types/node"": {
-      ""version"": ""20.12.7"",
-      ""resolved"": ""https://registry.npmjs.org/@types/node/-/node-20.12.7.tgz"",
-      ""integrity"": ""sha512-wq0cICSkRLVaf3UGLMGItu/PtdY7oaXaI/RVU+xliKVOtRna3PRY57ZDfztpDL0n11vfymMUnXv8QwYCO7L1wg=="",
+      ""version"": ""20.12.12"",
+      ""resolved"": ""https://registry.npmjs.org/@types/node/-/node-20.12.12.tgz"",
+      ""integrity"": ""sha512-eWLDGF/FOSPtAvEqeRAQ4C8LSA7M1I7i0ky1I8U7kD1J5ITyW3AsRhQrKVoWf5pFKZ2kILsEGJhsI9r93PYnOw=="",
       ""dev"": true,
       ""dependencies"": {
         ""undici-types"": ""~5.26.4""
       }
     },
-    ""node_modules/@types/semver"": {
-      ""version"": ""7.5.8"",
-      ""resolved"": ""https://registry.npmjs.org/@types/semver/-/semver-7.5.8.tgz"",
-      ""integrity"": ""sha512-I8EUhyrgfLrcTkzV3TSsGyl1tSuPrEDzr0yd5m90UgNxQkyDXULk3b6MlQqTCpZpNtWe1K0hzclnZkTcLBe2UQ=="",
-      ""dev"": true
-    },
     ""node_modules/@types/stack-utils"": {
       ""version"": ""2.0.3"",
       ""resolved"": ""https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.3.tgz"",
@@ -1636,21 +1624,19 @@
       ""dev"": true
     },
     ""node_modules/@typescript-eslint/eslint-plugin"": {
-      ""version"": ""7.7.1"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.7.1.tgz"",
-      ""integrity"": ""sha512-KwfdWXJBOviaBVhxO3p5TJiLpNuh2iyXyjmWN0f1nU87pwyvfS0EmjC6ukQVYVFJd/K1+0NWGPDXiyEyQorn0Q=="",
+      ""version"": ""7.9.0"",
+      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.9.0.tgz"",
+      ""integrity"": ""sha512-6e+X0X3sFe/G/54aC3jt0txuMTURqLyekmEHViqyA2VnxhLMpvA6nqmcjIy+Cr9tLDHPssA74BP5Mx9HQIxBEA=="",
       ""dev"": true,
       ""dependencies"": {
         ""@eslint-community/regexpp"": ""^4.10.0"",
-        ""@typescript-eslint/scope-manager"": ""7.7.1"",
-        ""@typescript-eslint/type-utils"": ""7.7.1"",
-        ""@typescript-eslint/utils"": ""7.7.1"",
-        ""@typescript-eslint/visitor-keys"": ""7.7.1"",
-        ""debug"": ""^4.3.4"",
+        ""@typescript-eslint/scope-manager"": ""7.9.0"",
+        ""@typescript-eslint/type-utils"": ""7.9.0"",
+        ""@typescript-eslint/utils"": ""7.9.0"",
+        ""@typescript-eslint/visitor-keys"": ""7.9.0"",
         ""graphemer"": ""^1.4.0"",
         ""ignore"": ""^5.3.1"",
         ""natural-compare"": ""^1.4.0"",
-        ""semver"": ""^7.6.0"",
         ""ts-api-utils"": ""^1.3.0""
       },
       ""engines"": {
@@ -1670,49 +1656,16 @@
         }
       }
     },
-    ""node_modules/@typescript-eslint/eslint-plugin/node_modules/lru-cache"": {
-      ""version"": ""6.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"",
-      ""integrity"": ""sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""yallist"": ""^4.0.0""
-      },
-      ""engines"": {
-        ""node"": "">=10""
-      }
-    },
-    ""node_modules/@typescript-eslint/eslint-plugin/node_modules/semver"": {
-      ""version"": ""7.6.0"",
-      ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.0.tgz"",
-      ""integrity"": ""sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""lru-cache"": ""^6.0.0""
-      },
-      ""bin"": {
-        ""semver"": ""bin/semver.js""
-      },
-      ""engines"": {
-        ""node"": "">=10""
-      }
-    },
-    ""node_modules/@typescript-eslint/eslint-plugin/node_modules/yallist"": {
-      ""version"": ""4.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"",
-      ""integrity"": ""sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="",
-      ""dev"": true
-    },
     ""node_modules/@typescript-eslint/parser"": {
-      ""version"": ""7.7.1"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.7.1.tgz"",
-      ""integrity"": ""sha512-vmPzBOOtz48F6JAGVS/kZYk4EkXao6iGrD838sp1w3NQQC0W8ry/q641KU4PrG7AKNAf56NOcR8GOpH8l9FPCw=="",
+      ""version"": ""7.9.0"",
+      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.9.0.tgz"",
+      ""integrity"": ""sha512-qHMJfkL5qvgQB2aLvhUSXxbK7OLnDkwPzFalg458pxQgfxKDfT1ZDbHQM/I6mDIf/svlMkj21kzKuQ2ixJlatQ=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@typescript-eslint/scope-manager"": ""7.7.1"",
-        ""@typescript-eslint/types"": ""7.7.1"",
-        ""@typescript-eslint/typescript-estree"": ""7.7.1"",
-        ""@typescript-eslint/visitor-keys"": ""7.7.1"",
+        ""@typescript-eslint/scope-manager"": ""7.9.0"",
+        ""@typescript-eslint/types"": ""7.9.0"",
+        ""@typescript-eslint/typescript-estree"": ""7.9.0"",
+        ""@typescript-eslint/visitor-keys"": ""7.9.0"",
         ""debug"": ""^4.3.4""
       },
       ""engines"": {
@@ -1732,13 +1685,13 @@
       }
     },
     ""node_modules/@typescript-eslint/scope-manager"": {
-      ""version"": ""7.7.1"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.7.1.tgz"",
-      ""integrity"": ""sha512-PytBif2SF+9SpEUKynYn5g1RHFddJUcyynGpztX3l/ik7KmZEv19WCMhUBkHXPU9es/VWGD3/zg3wg90+Dh2rA=="",
+      ""version"": ""7.9.0"",
+      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.9.0.tgz"",
+      ""integrity"": ""sha512-ZwPK4DeCDxr3GJltRz5iZejPFAAr4Wk3+2WIBaj1L5PYK5RgxExu/Y68FFVclN0y6GGwH8q+KgKRCvaTmFBbgQ=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@typescript-eslint/types"": ""7.7.1"",
-        ""@typescript-eslint/visitor-keys"": ""7.7.1""
+        ""@typescript-eslint/types"": ""7.9.0"",
+        ""@typescript-eslint/visitor-keys"": ""7.9.0""
       },
       ""engines"": {
         ""node"": ""^18.18.0 || >=20.0.0""
@@ -1749,13 +1702,13 @@
       }
     },
     ""node_modules/@typescript-eslint/type-utils"": {
-      ""version"": ""7.7.1"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.7.1.tgz"",
-      ""integrity"": ""sha512-ZksJLW3WF7o75zaBPScdW1Gbkwhd/lyeXGf1kQCxJaOeITscoSl0MjynVvCzuV5boUz/3fOI06Lz8La55mu29Q=="",
+      ""version"": ""7.9.0"",
+      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.9.0.tgz"",
+      ""integrity"": ""sha512-6Qy8dfut0PFrFRAZsGzuLoM4hre4gjzWJB6sUvdunCYZsYemTkzZNwF1rnGea326PHPT3zn5Lmg32M/xfJfByA=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@typescript-eslint/typescript-estree"": ""7.7.1"",
-        ""@typescript-eslint/utils"": ""7.7.1"",
+        ""@typescript-eslint/typescript-estree"": ""7.9.0"",
+        ""@typescript-eslint/utils"": ""7.9.0"",
         ""debug"": ""^4.3.4"",
         ""ts-api-utils"": ""^1.3.0""
       },
@@ -1776,9 +1729,9 @@
       }
     },
     ""node_modules/@typescript-eslint/types"": {
-      ""version"": ""7.7.1"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/types/-/types-7.7.1.tgz"",
-      ""integrity"": ""sha512-AmPmnGW1ZLTpWa+/2omPrPfR7BcbUU4oha5VIbSbS1a1Tv966bklvLNXxp3mrbc+P2j4MNOTfDffNsk4o0c6/w=="",
+      ""version"": ""7.9.0"",
+      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/types/-/types-7.9.0.tgz"",
+      ""integrity"": ""sha512-oZQD9HEWQanl9UfsbGVcZ2cGaR0YT5476xfWE0oE5kQa2sNK2frxOlkeacLOTh9po4AlUT5rtkGyYM5kew0z5w=="",
       ""dev"": true,
       ""engines"": {
         ""node"": ""^18.18.0 || >=20.0.0""
@@ -1789,13 +1742,13 @@
       }
     },
     ""node_modules/@typescript-eslint/typescript-estree"": {
-      ""version"": ""7.7.1"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.7.1.tgz"",
-      ""integrity"": ""sha512-CXe0JHCXru8Fa36dteXqmH2YxngKJjkQLjxzoj6LYwzZ7qZvgsLSc+eqItCrqIop8Vl2UKoAi0StVWu97FQZIQ=="",
+      ""version"": ""7.9.0"",
+      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.9.0.tgz"",
+      ""integrity"": ""sha512-zBCMCkrb2YjpKV3LA0ZJubtKCDxLttxfdGmwZvTqqWevUPN0FZvSI26FalGFFUZU/9YQK/A4xcQF9o/VVaCKAg=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@typescript-eslint/types"": ""7.7.1"",
-        ""@typescript-eslint/visitor-keys"": ""7.7.1"",
+        ""@typescript-eslint/types"": ""7.9.0"",
+        ""@typescript-eslint/visitor-keys"": ""7.9.0"",
         ""debug"": ""^4.3.4"",
         ""globby"": ""^11.1.0"",
         ""is-glob"": ""^4.0.3"",
@@ -1816,52 +1769,28 @@
         }
       }
     },
-    ""node_modules/@typescript-eslint/typescript-estree/node_modules/lru-cache"": {
-      ""version"": ""6.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"",
-      ""integrity"": ""sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""yallist"": ""^4.0.0""
-      },
-      ""engines"": {
-        ""node"": "">=10""
-      }
-    },
     ""node_modules/@typescript-eslint/typescript-estree/node_modules/semver"": {
-      ""version"": ""7.6.0"",
-      ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.0.tgz"",
-      ""integrity"": ""sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg=="",
+      ""version"": ""7.6.2"",
+      ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.2.tgz"",
+      ""integrity"": ""sha512-FNAIBWCx9qcRhoHcgcJ0gvU7SN1lYU2ZXuSfl04bSC5OpvDHFyJCjdNHomPXxjQlCBU67YW64PzY7/VIEH7F2w=="",
       ""dev"": true,
-      ""dependencies"": {
-        ""lru-cache"": ""^6.0.0""
-      },
       ""bin"": {
         ""semver"": ""bin/semver.js""
       },
       ""engines"": {
         ""node"": "">=10""
       }
     },
-    ""node_modules/@typescript-eslint/typescript-estree/node_modules/yallist"": {
-      ""version"": ""4.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"",
-      ""integrity"": ""sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="",
-      ""dev"": true
-    },
     ""node_modules/@typescript-eslint/utils"": {
-      ""version"": ""7.7.1"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.7.1.tgz"",
-      ""integrity"": ""sha512-QUvBxPEaBXf41ZBbaidKICgVL8Hin0p6prQDu6bbetWo39BKbWJxRsErOzMNT1rXvTll+J7ChrbmMCXM9rsvOQ=="",
+      ""version"": ""7.9.0"",
+      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.9.0.tgz"",
+      ""integrity"": ""sha512-5KVRQCzZajmT4Ep+NEgjXCvjuypVvYHUW7RHlXzNPuak2oWpVoD1jf5xCP0dPAuNIchjC7uQyvbdaSTFaLqSdA=="",
       ""dev"": true,
       ""dependencies"": {
         ""@eslint-community/eslint-utils"": ""^4.4.0"",
-        ""@types/json-schema"": ""^7.0.15"",
-        ""@types/semver"": ""^7.5.8"",
-        ""@typescript-eslint/scope-manager"": ""7.7.1"",
-        ""@typescript-eslint/types"": ""7.7.1"",
-        ""@typescript-eslint/typescript-estree"": ""7.7.1"",
-        ""semver"": ""^7.6.0""
+        ""@typescript-eslint/scope-manager"": ""7.9.0"",
+        ""@typescript-eslint/types"": ""7.9.0"",
+        ""@typescript-eslint/typescript-estree"": ""7.9.0""
       },
       ""engines"": {
         ""node"": ""^18.18.0 || >=20.0.0""
@@ -1874,46 +1803,13 @@
         ""eslint"": ""^8.56.0""
       }
     },
-    ""node_modules/@typescript-eslint/utils/node_modules/lru-cache"": {
-      ""version"": ""6.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"",
-      ""integrity"": ""sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""yallist"": ""^4.0.0""
-      },
-      ""engines"": {
-        ""node"": "">=10""
-      }
-    },
-    ""node_modules/@typescript-eslint/utils/node_modules/semver"": {
-      ""version"": ""7.6.0"",
-      ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.0.tgz"",
-      ""integrity"": ""sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""lru-cache"": ""^6.0.0""
-      },
-      ""bin"": {
-        ""semver"": ""bin/semver.js""
-      },
-      ""engines"": {
-        ""node"": "">=10""
-      }
-    },
-    ""node_modules/@typescript-eslint/utils/node_modules/yallist"": {
-      ""version"": ""4.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"",
-      ""integrity"": ""sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="",
-      ""dev"": true
-    },
     ""node_modules/@typescript-eslint/visitor-keys"": {
-      ""version"": ""7.7.1"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.7.1.tgz"",
-      ""integrity"": ""sha512-gBL3Eq25uADw1LQ9kVpf3hRM+DWzs0uZknHYK3hq4jcTPqVCClHGDnB6UUUV2SFeBeA4KWHWbbLqmbGcZ4FYbw=="",
+      ""version"": ""7.9.0"",
+      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.9.0.tgz"",
+      ""integrity"": ""sha512-iESPx2TNLDNGQLyjKhUvIKprlP49XNEK+MvIf9nIO7ZZaZdbnfWKHnXAgufpxqfA0YryH8XToi4+CjBgVnFTSQ=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@typescript-eslint/types"": ""7.7.1"",
+        ""@typescript-eslint/types"": ""7.9.0"",
         ""eslint-visitor-keys"": ""^3.4.3""
       },
       ""engines"": {
@@ -3301,12 +3197,12 @@
       }
     },
     ""node_modules/eslint-plugin-jest"": {
-      ""version"": ""28.2.0"",
-      ""resolved"": ""https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-28.2.0.tgz"",
-      ""integrity"": ""sha512-yRDti/a+f+SMSmNTiT9/M/MzXGkitl8CfzUxnpoQcTyfq8gUrXMriVcWU36W1X6BZSUoyUCJrDAWWUA2N4hE5g=="",
+      ""version"": ""28.5.0"",
+      ""resolved"": ""https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-28.5.0.tgz"",
+      ""integrity"": ""sha512-6np6DGdmNq/eBbA7HOUNV8fkfL86PYwBfwyb8n23FXgJNTR8+ot3smRHjza9LGsBBZRypK3qyF79vMjohIL8eQ=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@typescript-eslint/utils"": ""^6.0.0""
+        ""@typescript-eslint/utils"": ""^6.0.0 || ^7.0.0""
       },
       ""engines"": {
         ""node"": ""^16.10.0 || ^18.12.0 || >=20.0.0""
@@ -3325,154 +3221,6 @@
         }
       }
     },
-    ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/scope-manager"": {
-      ""version"": ""6.21.0"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-6.21.0.tgz"",
-      ""integrity"": ""sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""@typescript-eslint/types"": ""6.21.0"",
-        ""@typescript-eslint/visitor-keys"": ""6.21.0""
-      },
-      ""engines"": {
-        ""node"": ""^16.0.0 || >=18.0.0""
-      },
-      ""funding"": {
-        ""type"": ""opencollective"",
-        ""url"": ""https://opencollective.com/typescript-eslint""
-      }
-    },
-    ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/types"": {
-      ""version"": ""6.21.0"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/types/-/types-6.21.0.tgz"",
-      ""integrity"": ""sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg=="",
-      ""dev"": true,
-      ""engines"": {
-        ""node"": ""^16.0.0 || >=18.0.0""
-      },
-      ""funding"": {
-        ""type"": ""opencollective"",
-        ""url"": ""https://opencollective.com/typescript-eslint""
-      }
-    },
-    ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/typescript-estree"": {
-      ""version"": ""6.21.0"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-6.21.0.tgz"",
-      ""integrity"": ""sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""@typescript-eslint/types"": ""6.21.0"",
-        ""@typescript-eslint/visitor-keys"": ""6.21.0"",
-        ""debug"": ""^4.3.4"",
-        ""globby"": ""^11.1.0"",
-        ""is-glob"": ""^4.0.3"",
-        ""minimatch"": ""9.0.3"",
-        ""semver"": ""^7.5.4"",
-        ""ts-api-utils"": ""^1.0.1""
-      },
-      ""engines"": {
-        ""node"": ""^16.0.0 || >=18.0.0""
-      },
-      ""funding"": {
-        ""type"": ""opencollective"",
-        ""url"": ""https://opencollective.com/typescript-eslint""
-      },
-      ""peerDependenciesMeta"": {
-        ""typescript"": {
-          ""optional"": true
-        }
-      }
-    },
-    ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/utils"": {
-      ""version"": ""6.21.0"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/utils/-/utils-6.21.0.tgz"",
-      ""integrity"": ""sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""@eslint-community/eslint-utils"": ""^4.4.0"",
-        ""@types/json-schema"": ""^7.0.12"",
-        ""@types/semver"": ""^7.5.0"",
-        ""@typescript-eslint/scope-manager"": ""6.21.0"",
-        ""@typescript-eslint/types"": ""6.21.0"",
-        ""@typescript-eslint/typescript-estree"": ""6.21.0"",
-        ""semver"": ""^7.5.4""
-      },
-      ""engines"": {
-        ""node"": ""^16.0.0 || >=18.0.0""
-      },
-      ""funding"": {
-        ""type"": ""opencollective"",
-        ""url"": ""https://opencollective.com/typescript-eslint""
-      },
-      ""peerDependencies"": {
-        ""eslint"": ""^7.0.0 || ^8.0.0""
-      }
-    },
-    ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/visitor-keys"": {
-      ""version"": ""6.21.0"",
-      ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-6.21.0.tgz"",
-      ""integrity"": ""sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""@typescript-eslint/types"": ""6.21.0"",
-        ""eslint-visitor-keys"": ""^3.4.1""
-      },
-      ""engines"": {
-        ""node"": ""^16.0.0 || >=18.0.0""
-      },
-      ""funding"": {
-        ""type"": ""opencollective"",
-        ""url"": ""https://opencollective.com/typescript-eslint""
-      }
-    },
-    ""node_modules/eslint-plugin-jest/node_modules/lru-cache"": {
-      ""version"": ""6.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"",
-      ""integrity"": ""sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""yallist"": ""^4.0.0""
-      },
-      ""engines"": {
-        ""node"": "">=10""
-      }
-    },
-    ""node_modules/eslint-plugin-jest/node_modules/minimatch"": {
-      ""version"": ""9.0.3"",
-      ""resolved"": ""https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz"",
-      ""integrity"": ""sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""brace-expansion"": ""^2.0.1""
-      },
-      ""engines"": {
-        ""node"": "">=16 || 14 >=14.17""
-      },
-      ""funding"": {
-        ""url"": ""https://github.com/sponsors/isaacs""
-      }
-    },
-    ""node_modules/eslint-plugin-jest/node_modules/semver"": {
-      ""version"": ""7.6.0"",
-      ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.0.tgz"",
-      ""integrity"": ""sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""lru-cache"": ""^6.0.0""
-      },
-      ""bin"": {
-        ""semver"": ""bin/semver.js""
-      },
-      ""engines"": {
-        ""node"": "">=10""
-      }
-    },
-    ""node_modules/eslint-plugin-jest/node_modules/yallist"": {
-      ""version"": ""4.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"",
-      ""integrity"": ""sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="",
-      ""dev"": true
-    },
     ""node_modules/eslint-plugin-jsx-a11y"": {
       ""version"": ""6.8.0"",
       ""resolved"": ""https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.8.0.tgz"","
actions/checkout,b1ec3021b8fa02164da82ca1557d017d83b0e179,dependabot[bot],2024-05-20T13:56:19Z,"Bump the minor-npm-dependencies group across 1 directory with 4 updates (#1739)

Bumps the minor-npm-dependencies group with 4 updates in the / directory: [@types/node](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/HEAD/types/node), [@typescript-eslint/eslint-plugin](https://github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/eslint-plugin), [@typescript-eslint/parser](https://github.com/typescript-eslint/typescript-eslint/tree/HEAD/packages/parser) and [eslint-plugin-jest](https://github.com/jest-community/eslint-plugin-jest).


Updates `@types/node` from 20.12.7 to 20.12.12
- [Release notes](https://github.com/DefinitelyTyped/DefinitelyTyped/releases)
- [Commits](https://github.com/DefinitelyTyped/DefinitelyTyped/commits/HEAD/types/node)

Updates `@typescript-eslint/eslint-plugin` from 7.7.1 to 7.9.0
- [Release notes](https://github.com/typescript-eslint/typescript-eslint/releases)
- [Changelog](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/eslint-plugin/CHANGELOG.md)
- [Commits](https://github.com/typescript-eslint/typescript-eslint/commits/v7.9.0/packages/eslint-plugin)

Updates `@typescript-eslint/parser` from 7.7.1 to 7.9.0
- [Release notes](https://github.com/typescript-eslint/typescript-eslint/releases)
- [Changelog](https://github.com/typescript-eslint/typescript-eslint/blob/main/packages/parser/CHANGELOG.md)
- [Commits](https://github.com/typescript-eslint/typescript-eslint/commits/v7.9.0/packages/parser)

Updates `eslint-plugin-jest` from 28.2.0 to 28.5.0
- [Release notes](https://github.com/jest-community/eslint-plugin-jest/releases)
- [Changelog](https://github.com/jest-community/eslint-plugin-jest/blob/main/CHANGELOG.md)
- [Commits](https://github.com/jest-community/eslint-plugin-jest/compare/v28.2.0...v28.5.0)

---
updated-dependencies:
- dependency-name: ""@types/node""
  dependency-type: direct:development
  update-type: version-update:semver-patch
  dependency-group: minor-npm-dependencies
- dependency-name: ""@typescript-eslint/eslint-plugin""
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: ""@typescript-eslint/parser""
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
- dependency-name: eslint-plugin-jest
  dependency-type: direct:development
  update-type: version-update:semver-minor
  dependency-group: minor-npm-dependencies
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",package.json,4,4,8,"@@ -37,14 +37,14 @@
   },
   ""devDependencies"": {
     ""@types/jest"": ""^29.5.12"",
-    ""@types/node"": ""^20.12.7"",
+    ""@types/node"": ""^20.12.12"",
     ""@types/uuid"": ""^9.0.8"",
-    ""@typescript-eslint/eslint-plugin"": ""^7.7.1"",
-    ""@typescript-eslint/parser"": ""^7.7.1"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.9.0"",
+    ""@typescript-eslint/parser"": ""^7.9.0"",
     ""@vercel/ncc"": ""^0.38.1"",
     ""eslint"": ""^8.57.0"",
     ""eslint-plugin-github"": ""^4.10.2"",
-    ""eslint-plugin-jest"": ""^28.2.0"",
+    ""eslint-plugin-jest"": ""^28.5.0"",
     ""jest"": ""^29.7.0"",
     ""jest-circus"": ""^29.7.0"",
     ""js-yaml"": ""^4.1.0"","
actions/checkout,a5ac7e51b41094c92402da3b24376905380afc29,Cory Miller,2024-05-16T18:08:36Z,Update for 4.1.6 release (#1733),CHANGELOG.md,10,0,10,"@@ -1,5 +1,15 @@
 # Changelog
 
+## v4.1.6
+* Check platform to set archive extension appropriately by @cory-miller in https://github.com/actions/checkout/pull/1732
+
+## v4.1.5
+* Update NPM dependencies by @cory-miller in https://github.com/actions/checkout/pull/1703
+* Bump github/codeql-action from 2 to 3 by @dependabot in https://github.com/actions/checkout/pull/1694
+* Bump actions/setup-node from 1 to 4 by @dependabot in https://github.com/actions/checkout/pull/1696
+* Bump actions/upload-artifact from 2 to 4 by @dependabot in https://github.com/actions/checkout/pull/1695
+* README: Suggest `user.email` to be `41898282+github-actions[bot]@users.noreply.github.com` by @cory-miller in https://github.com/actions/checkout/pull/1707
+
 ## v4.1.4
 - Disable `extensions.worktreeConfig` when disabling `sparse-checkout` by @jww3 in https://github.com/actions/checkout/pull/1692
 - Add dependabot config by @cory-miller in https://github.com/actions/checkout/pull/1688"
actions/checkout,a5ac7e51b41094c92402da3b24376905380afc29,Cory Miller,2024-05-16T18:08:36Z,Update for 4.1.6 release (#1733),package-lock.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.4"",
+  ""version"": ""4.1.6"",
   ""lockfileVersion"": 3,
   ""requires"": true,
   ""packages"": {"
actions/checkout,a5ac7e51b41094c92402da3b24376905380afc29,Cory Miller,2024-05-16T18:08:36Z,Update for 4.1.6 release (#1733),package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.4"",
+  ""version"": ""4.1.6"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {"
actions/checkout,24ed1a352802348c9e4e8d13de9177fb95b537ba,Cory Miller,2024-05-16T17:40:36Z,Check platform for extension (#1732),dist/index.js,3,1,4,"@@ -1574,7 +1574,9 @@ function downloadRepository(authToken, owner, repo, ref, commit, repositoryPath,
         // Write archive to disk
         core.info('Writing archive to disk');
         const uniqueId = (0, uuid_1.v4)();
-        const archivePath = path.join(repositoryPath, `${uniqueId}.tar.gz`);
+        const archivePath = IS_WINDOWS
+            ? path.join(repositoryPath, `${uniqueId}.zip`)
+            : path.join(repositoryPath, `${uniqueId}.tar.gz`);
         yield fs.promises.writeFile(archivePath, archiveData);
         archiveData = Buffer.from(''); // Free memory
         // Extract archive"
actions/checkout,24ed1a352802348c9e4e8d13de9177fb95b537ba,Cory Miller,2024-05-16T17:40:36Z,Check platform for extension (#1732),src/github-api-helper.ts,3,1,4,"@@ -35,7 +35,9 @@ export async function downloadRepository(
   // Write archive to disk
   core.info('Writing archive to disk')
   const uniqueId = uuid()
-  const archivePath = path.join(repositoryPath, `${uniqueId}.tar.gz`)
+  const archivePath = IS_WINDOWS
+    ? path.join(repositoryPath, `${uniqueId}.zip`)
+    : path.join(repositoryPath, `${uniqueId}.tar.gz`)
   await fs.promises.writeFile(archivePath, archiveData)
   archiveData = Buffer.from('') // Free memory
 "
actions/checkout,44c2b7a8a4ea60a981eaca3cf939b5f4305c123b,Cory Miller,2024-04-30T15:50:54Z,"README: Suggest `user.email` to be `41898282+github-actions[bot]@users.noreply.github.com` (#1707)

* README: Set `user.email` to GitHub Actions Bot

* Update workflow to use proper bot GitHub Bot email

* Prefix `user.email` with `41898282+`

To match squash merge user, else showing as two different users, see: https://github.com/SocketDev/socket-sdk-js/commit/b0948d0da0cfb5b240c69d063cc34a6399abce48

* Update README.md

---------

Co-authored-by: Pelle Wessman <pelle@kodfabrik.se>",.github/workflows/update-main-version.yml,2,2,4,"@@ -27,8 +27,8 @@ jobs:
         fetch-depth: 0
     - name: Git config
       run: |
-        git config user.name github-actions
-        git config user.email github-actions@github.com
+        git config user.name ""github-actions[bot]""
+        git config user.email ""41898282+github-actions[bot]@users.noreply.github.com""
     - name: Tag new target
       run: git tag -f ${{ github.event.inputs.major_version }} ${{ github.event.inputs.target }}
     - name: Push new tag"
actions/checkout,44c2b7a8a4ea60a981eaca3cf939b5f4305c123b,Cory Miller,2024-04-30T15:50:54Z,"README: Suggest `user.email` to be `41898282+github-actions[bot]@users.noreply.github.com` (#1707)

* README: Set `user.email` to GitHub Actions Bot

* Update workflow to use proper bot GitHub Bot email

* Prefix `user.email` with `41898282+`

To match squash merge user, else showing as two different users, see: https://github.com/SocketDev/socket-sdk-js/commit/b0948d0da0cfb5b240c69d063cc34a6399abce48

* Update README.md

---------

Co-authored-by: Pelle Wessman <pelle@kodfabrik.se>",README.md,3,2,5,"@@ -279,8 +279,9 @@ jobs:
       - uses: actions/checkout@v4
       - run: |
           date > generated.txt
-          git config user.name github-actions
-          git config user.email github-actions@github.com
+          # Note: the following account information will not work on GHES
+          git config user.name ""github-actions[bot]""
+          git config user.email ""41898282+github-actions[bot]@users.noreply.github.com""
           git add .
           git commit -m ""generated""
           git push"
actions/checkout,8459bc0c7e3759cdf591f513d9f141a95fef0a8f,dependabot[bot],2024-04-24T16:39:59Z,"Bump actions/upload-artifact from 2 to 4 (#1695)

Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 2 to 4.
- [Release notes](https://github.com/actions/upload-artifact/releases)
- [Commits](https://github.com/actions/upload-artifact/compare/v2...v4)

---
updated-dependencies:
- dependency-name: actions/upload-artifact
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",.github/workflows/check-dist.yml,1,1,2,"@@ -44,7 +44,7 @@ jobs:
           fi
 
       # If dist/ was different than expected, upload the expected version as an artifact
-      - uses: actions/upload-artifact@v2
+      - uses: actions/upload-artifact@v4
         if: ${{ failure() && steps.diff.conclusion == 'failure' }}
         with:
           name: dist"
actions/checkout,3f603f6d5e9f40714f97b2f017aa0df2a443192a,dependabot[bot],2024-04-24T16:34:46Z,"Bump actions/setup-node from 1 to 4 (#1696)

Bumps [actions/setup-node](https://github.com/actions/setup-node) from 1 to 4.
- [Release notes](https://github.com/actions/setup-node/releases)
- [Commits](https://github.com/actions/setup-node/compare/v1...v4)

---
updated-dependencies:
- dependency-name: actions/setup-node
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",.github/workflows/check-dist.yml,1,1,2,"@@ -25,7 +25,7 @@ jobs:
       - uses: actions/checkout@v3
 
       - name: Set Node.js 20.x
-        uses: actions/setup-node@v1
+        uses: actions/setup-node@v4
         with:
           node-version: 20.x
 "
actions/checkout,3f603f6d5e9f40714f97b2f017aa0df2a443192a,dependabot[bot],2024-04-24T16:34:46Z,"Bump actions/setup-node from 1 to 4 (#1696)

Bumps [actions/setup-node](https://github.com/actions/setup-node) from 1 to 4.
- [Release notes](https://github.com/actions/setup-node/releases)
- [Commits](https://github.com/actions/setup-node/compare/v1...v4)

---
updated-dependencies:
- dependency-name: actions/setup-node
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",.github/workflows/test.yml,1,1,2,"@@ -16,7 +16,7 @@ jobs:
   build:
     runs-on: ubuntu-latest
     steps:
-      - uses: actions/setup-node@v1
+      - uses: actions/setup-node@v4
         with:
           node-version: 20.x
       - uses: actions/checkout@v3"
actions/checkout,fd084cde189b7b76ec305d52e27be545a0172823,dependabot[bot],2024-04-24T16:33:41Z,"Bump github/codeql-action from 2 to 3 (#1694)

Bumps [github/codeql-action](https://github.com/github/codeql-action) from 2 to 3.
- [Release notes](https://github.com/github/codeql-action/releases)
- [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
- [Commits](https://github.com/github/codeql-action/compare/v2...v3)

---
updated-dependencies:
- dependency-name: github/codeql-action
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",.github/workflows/codeql-analysis.yml,2,2,4,"@@ -42,7 +42,7 @@ jobs:
       uses: actions/checkout@v3
 
     - name: Initialize CodeQL
-      uses: github/codeql-action/init@v2
+      uses: github/codeql-action/init@v3
       with:
         languages: ${{ matrix.language }}
         # If you wish to specify custom queries, you can do so here or in a config file.
@@ -55,4 +55,4 @@ jobs:
     - run: rm -rf dist # We want code scanning to analyze lib instead (individual .js files)
 
     - name: Perform CodeQL Analysis
-      uses: github/codeql-action/analyze@v2
+      uses: github/codeql-action/analyze@v3"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@actions/core.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@actions/core""
-version: 1.10.0
+version: 1.10.1
 type: npm
 summary: Actions core lib
 homepage: https://github.com/actions/toolkit/tree/main/packages/core"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@actions/exec.dep.yml,4,2,6,"@@ -1,13 +1,15 @@
 ---
 name: ""@actions/exec""
-version: 1.0.1
+version: 1.1.1
 type: npm
 summary: Actions exec lib
-homepage: https://github.com/actions/toolkit/tree/master/packages/exec
+homepage: https://github.com/actions/toolkit/tree/main/packages/exec
 license: mit
 licenses:
 - sources: LICENSE.md
   text: |-
+    The MIT License (MIT)
+
     Copyright 2019 GitHub
 
     Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@actions/github.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@actions/github""
-version: 5.1.1
+version: 6.0.0
 type: npm
 summary: Actions github lib
 homepage: https://github.com/actions/toolkit/tree/main/packages/github"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@actions/http-client.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@actions/http-client""
-version: 2.1.0
+version: 2.2.1
 type: npm
 summary: Actions Http Client
 homepage: https://github.com/actions/toolkit/tree/main/packages/http-client"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@actions/tool-cache.dep.yml,10,20,30,"@@ -1,30 +1,20 @@
 ---
 name: ""@actions/tool-cache""
-version: 1.1.2
+version: 2.0.1
 type: npm
 summary: Actions tool-cache lib
-homepage: https://github.com/actions/toolkit/tree/master/packages/exec
+homepage: https://github.com/actions/toolkit/tree/main/packages/tool-cache
 license: mit
 licenses:
-- sources: Auto-generated MIT license text
-  text: |
-    MIT License
+- sources: LICENSE.md
+  text: |-
+    The MIT License (MIT)
 
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
+    Copyright 2019 GitHub
 
-    The above copyright notice and this permission notice shall be included in all
-    copies or substantial portions of the Software.
+    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-    SOFTWARE.
+    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
+
+    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@fastify/busboy.dep.yml,13,14,27,"@@ -1,20 +1,20 @@
 ---
-name: function-bind
-version: 1.1.1
+name: ""@fastify/busboy""
+version: 2.1.1
 type: npm
-summary: Implementation of Function.prototype.bind
-homepage: https://github.com/Raynos/function-bind
+summary: A streaming parser for HTML form data for node.js
+homepage: 
 license: mit
 licenses:
 - sources: LICENSE
-  text: |+
-    Copyright (c) 2013 Raynos.
+  text: |-
+    Copyright Brian White. All rights reserved.
 
     Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
+    of this software and associated documentation files (the ""Software""), to
+    deal in the Software without restriction, including without limitation the
+    rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+    sell copies of the Software, and to permit persons to whom the Software is
     furnished to do so, subject to the following conditions:
 
     The above copyright notice and this permission notice shall be included in
@@ -24,8 +24,7 @@ licenses:
     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-    THE SOFTWARE.
-
+    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
+    IN THE SOFTWARE.
 notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/auth-token.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/auth-token""
-version: 2.5.0
+version: 4.0.0
 type: npm
 summary: GitHub API token authentication for browsers and Node.js
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/core.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/core""
-version: 3.6.0
+version: 5.2.0
 type: npm
 summary: Extendable client for GitHub's REST & GraphQL APIs
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/endpoint.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/endpoint""
-version: 6.0.12
+version: 9.0.5
 type: npm
 summary: Turns REST API endpoints into generic request options
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/graphql.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/graphql""
-version: 4.8.0
+version: 7.1.0
 type: npm
 summary: GitHub GraphQL API client for browsers and Node
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/openapi-types-20.0.0.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/openapi-types""
-version: 12.11.0
+version: 20.0.0
 type: npm
 summary: Generated TypeScript definitions based on GitHub's OpenAPI spec for api.github.com
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/openapi-types-22.1.0.dep.yml,20,0,20,"@@ -0,0 +1,20 @@
+---
+name: ""@octokit/openapi-types""
+version: 22.1.0
+type: npm
+summary: Generated TypeScript definitions based on GitHub's OpenAPI spec for api.github.com
+homepage: 
+license: mit
+licenses:
+- sources: LICENSE
+  text: |-
+    Copyright 2020 Gregor Martynus
+
+    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+
+    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
+
+    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+- sources: README.md
+  text: ""[MIT](LICENSE)""
+notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/plugin-paginate-rest.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/plugin-paginate-rest""
-version: 2.21.3
+version: 9.2.1
 type: npm
 summary: Octokit plugin to paginate REST API endpoint responses
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/plugin-rest-endpoint-methods.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/plugin-rest-endpoint-methods""
-version: 5.16.2
+version: 10.4.1
 type: npm
 summary: Octokit plugin adding one method for all of api.github.com REST API endpoints
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/request-error.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/request-error""
-version: 2.1.0
+version: 5.1.0
 type: npm
 summary: Error class for Octokit request errors
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/request.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/request""
-version: 5.6.3
+version: 8.4.0
 type: npm
 summary: Send parameterized requests to GitHub's APIs with sensible defaults in browsers
   and Node"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/types-12.6.0.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: ""@octokit/types""
-version: 6.41.0
+version: 12.6.0
 type: npm
 summary: Shared TypeScript definitions for Octokit projects
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/@octokit/types-13.4.1.dep.yml,20,0,20,"@@ -0,0 +1,20 @@
+---
+name: ""@octokit/types""
+version: 13.4.1
+type: npm
+summary: Shared TypeScript definitions for Octokit projects
+homepage: 
+license: mit
+licenses:
+- sources: LICENSE
+  text: |
+    MIT License Copyright (c) 2019 Octokit contributors
+
+    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+
+    The above copyright notice and this permission notice (including the next paragraph) shall be included in all copies or substantial portions of the Software.
+
+    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+- sources: README.md
+  text: ""[MIT](LICENSE)""
+notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/call-bind.dep.yml,0,32,32,"@@ -1,32 +0,0 @@
----
-name: call-bind
-version: 1.0.2
-type: npm
-summary: Robustly `.call.bind()` a function
-homepage: https://github.com/ljharb/call-bind#readme
-license: mit
-licenses:
-- sources: LICENSE
-  text: |
-    MIT License
-
-    Copyright (c) 2020 Jordan Harband
-
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included in all
-    copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-    SOFTWARE.
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/get-intrinsic.dep.yml,0,33,33,"@@ -1,33 +0,0 @@
----
-name: get-intrinsic
-version: 1.1.1
-type: npm
-summary: Get and robustly cache all JS language-level intrinsics at first require
-  time
-homepage: https://github.com/ljharb/get-intrinsic#readme
-license: mit
-licenses:
-- sources: LICENSE
-  text: |
-    MIT License
-
-    Copyright (c) 2020 Jordan Harband
-
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included in all
-    copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-    SOFTWARE.
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/has.dep.yml,0,33,33,"@@ -1,33 +0,0 @@
----
-name: has
-version: 1.0.3
-type: npm
-summary: Object.prototype.hasOwnProperty.call shortcut
-homepage: https://github.com/tarruda/has
-license: mit
-licenses:
-- sources: LICENSE-MIT
-  text: |
-    Copyright (c) 2013 Thiago de Arruda
-
-    Permission is hereby granted, free of charge, to any person
-    obtaining a copy of this software and associated documentation
-    files (the ""Software""), to deal in the Software without
-    restriction, including without limitation the rights to use,
-    copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the
-    Software is furnished to do so, subject to the following
-    conditions:
-
-    The above copyright notice and this permission notice shall be
-    included in all copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
-    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
-    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
-    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
-    OTHER DEALINGS IN THE SOFTWARE.
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/is-plain-object.dep.yml,0,40,40,"@@ -1,40 +0,0 @@
----
-name: is-plain-object
-version: 5.0.0
-type: npm
-summary: Returns true if an object was created by the `Object` constructor, or Object.create(null).
-homepage: https://github.com/jonschlinkert/is-plain-object
-license: mit
-licenses:
-- sources: LICENSE
-  text: |
-    The MIT License (MIT)
-
-    Copyright (c) 2014-2017, Jon Schlinkert.
-
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included in
-    all copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-    THE SOFTWARE.
-- sources: README.md
-  text: |-
-    Copyright © 2019, [Jon Schlinkert](https://github.com/jonschlinkert).
-    Released under the [MIT License](LICENSE).
-
-    ***
-
-    _This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 28, 2019._
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/node-fetch.dep.yml,0,56,56,"@@ -1,56 +0,0 @@
----
-name: node-fetch
-version: 2.6.9
-type: npm
-summary: A light-weight module that brings window.fetch to node.js
-homepage: https://github.com/bitinn/node-fetch
-license: mit
-licenses:
-- sources: LICENSE.md
-  text: |+
-    The MIT License (MIT)
-
-    Copyright (c) 2016 David Frank
-
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included in all
-    copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-    SOFTWARE.
-
-- sources: README.md
-  text: |-
-    MIT
-
-    [npm-image]: https://flat.badgen.net/npm/v/node-fetch
-    [npm-url]: https://www.npmjs.com/package/node-fetch
-    [travis-image]: https://flat.badgen.net/travis/bitinn/node-fetch
-    [travis-url]: https://travis-ci.org/bitinn/node-fetch
-    [codecov-image]: https://flat.badgen.net/codecov/c/github/bitinn/node-fetch/master
-    [codecov-url]: https://codecov.io/gh/bitinn/node-fetch
-    [install-size-image]: https://flat.badgen.net/packagephobia/install/node-fetch
-    [install-size-url]: https://packagephobia.now.sh/result?p=node-fetch
-    [discord-image]: https://img.shields.io/discord/619915844268326952?color=%237289DA&label=Discord&style=flat-square
-    [discord-url]: https://discord.gg/Zxbndcm
-    [opencollective-image]: https://opencollective.com/node-fetch/backers.svg
-    [opencollective-url]: https://opencollective.com/node-fetch
-    [whatwg-fetch]: https://fetch.spec.whatwg.org/
-    [response-init]: https://fetch.spec.whatwg.org/#responseinit
-    [node-readable]: https://nodejs.org/api/stream.html#stream_readable_streams
-    [mdn-headers]: https://developer.mozilla.org/en-US/docs/Web/API/Headers
-    [LIMITS.md]: https://github.com/bitinn/node-fetch/blob/master/LIMITS.md
-    [ERROR-HANDLING.md]: https://github.com/bitinn/node-fetch/blob/master/ERROR-HANDLING.md
-    [UPGRADE-GUIDE.md]: https://github.com/bitinn/node-fetch/blob/master/UPGRADE-GUIDE.md
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/object-inspect.dep.yml,0,51,51,"@@ -1,51 +0,0 @@
----
-name: object-inspect
-version: 1.11.0
-type: npm
-summary: string representations of objects in node and the browser
-homepage: https://github.com/inspect-js/object-inspect
-license: mit
-licenses:
-- sources: LICENSE
-  text: |
-    MIT License
-
-    Copyright (c) 2013 James Halliday
-
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included in all
-    copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-    SOFTWARE.
-- sources: readme.markdown
-  text: |-
-    MIT
-
-    [1]: https://npmjs.org/package/object-inspect
-    [2]: https://versionbadg.es/inspect-js/object-inspect.svg
-    [5]: https://david-dm.org/inspect-js/object-inspect.svg
-    [6]: https://david-dm.org/inspect-js/object-inspect
-    [7]: https://david-dm.org/inspect-js/object-inspect/dev-status.svg
-    [8]: https://david-dm.org/inspect-js/object-inspect#info=devDependencies
-    [11]: https://nodei.co/npm/object-inspect.png?downloads=true&stars=true
-    [license-image]: https://img.shields.io/npm/l/object-inspect.svg
-    [license-url]: LICENSE
-    [downloads-image]: https://img.shields.io/npm/dm/object-inspect.svg
-    [downloads-url]: https://npm-stat.com/charts.html?package=object-inspect
-    [codecov-image]: https://codecov.io/gh/inspect-js/object-inspect/branch/main/graphs/badge.svg
-    [codecov-url]: https://app.codecov.io/gh/inspect-js/object-inspect/
-    [actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/inspect-js/object-inspect
-    [actions-url]: https://github.com/inspect-js/object-inspect/actions
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/qs.dep.yml,0,40,40,"@@ -1,40 +0,0 @@
----
-name: qs
-version: 6.11.0
-type: npm
-summary: A querystring parser that supports nesting and arrays, with a depth limit
-homepage: https://github.com/ljharb/qs
-license: bsd-3-clause
-licenses:
-- sources: LICENSE.md
-  text: |
-    BSD 3-Clause License
-
-    Copyright (c) 2014, Nathan LaFreniere and other [contributors](https://github.com/ljharb/qs/graphs/contributors)
-    All rights reserved.
-
-    Redistribution and use in source and binary forms, with or without
-    modification, are permitted provided that the following conditions are met:
-
-    1. Redistributions of source code must retain the above copyright notice, this
-       list of conditions and the following disclaimer.
-
-    2. Redistributions in binary form must reproduce the above copyright notice,
-       this list of conditions and the following disclaimer in the documentation
-       and/or other materials provided with the distribution.
-
-    3. Neither the name of the copyright holder nor the names of its
-       contributors may be used to endorse or promote products derived from
-       this software without specific prior written permission.
-
-    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS""
-    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-    DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
-    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-    DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
-    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
-    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-    OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/semver.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: semver
-version: 6.3.0
+version: 6.3.1
 type: npm
 summary: The semantic version parser used by npm.
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/side-channel.dep.yml,0,32,32,"@@ -1,32 +0,0 @@
----
-name: side-channel
-version: 1.0.4
-type: npm
-summary: Store information about any JS value in a side channel. Uses WeakMap if available.
-homepage: https://github.com/ljharb/side-channel#readme
-license: mit
-licenses:
-- sources: LICENSE
-  text: |
-    MIT License
-
-    Copyright (c) 2019 Jordan Harband
-
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included in all
-    copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-    SOFTWARE.
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/tr46.dep.yml,0,30,30,"@@ -1,30 +0,0 @@
----
-name: tr46
-version: 0.0.3
-type: npm
-summary: An implementation of the Unicode TR46 spec
-homepage: https://github.com/Sebmaster/tr46.js#readme
-license: mit
-licenses:
-- sources: Auto-generated MIT license text
-  text: |
-    MIT License
-
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included in all
-    copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-    SOFTWARE.
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/typed-rest-client.dep.yml,0,945,945,"@@ -1,945 +0,0 @@
----
-name: typed-rest-client
-version: 1.8.6
-type: npm
-summary: Node Rest and Http Clients for use with TypeScript
-homepage: https://github.com/Microsoft/typed-rest-client#readme
-license: mit
-licenses:
-- sources: LICENSE
-  text: |
-    Typed Rest Client for Node.js
-
-    Copyright (c) Microsoft Corporation
-
-    All rights reserved.
-
-    MIT License
-
-    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
-    associated documentation files (the ""Software""), to deal in the Software without restriction,
-    including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
-    and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
-    subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
-    LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
-    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
-    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-    /* Node-SMB/ntlm
-     * https://github.com/Node-SMB/ntlm
-     * Permission to use, copy, modify, and/or distribute this software for any
-     * purpose with or without fee is hereby granted, provided that the above
-     * copyright notice and this permission notice appear in all copies.
-     *
-     * THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
-     * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
-     * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
-     * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-     * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-     * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-     * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-     *
-     * Copyright (C) 2012  Joshua M. Clulow <josh@sysmgr.org>
-     */
-notices:
-- sources: ThirdPartyNotice.txt
-  text: ""\nTHIRD-PARTY SOFTWARE NOTICES AND INFORMATION\nDo Not Translate or Localize\n\nThis
-    Visual Studio Team Services extension (vsts-task-lib) is based on or incorporates
-    material from the projects listed below (Third Party IP). The original copyright
-    notice and the license under which Microsoft received such Third Party IP, are
-    set forth below. Such licenses and notices are provided for informational purposes
-    only. Microsoft licenses the Third Party IP to you under the licensing terms for
-    the Visual Studio Team Services extension. Microsoft reserves all other rights
-    not expressly granted under this agreement, whether by implication, estoppel or
-    otherwise.\n\n1.\t@types/glob (https://www.github.com/DefinitelyTyped/DefinitelyTyped.git)\n2.\t@types/minimatch
-    (https://www.github.com/DefinitelyTyped/DefinitelyTyped.git)\n3.\t@types/mocha
-    (https://www.github.com/DefinitelyTyped/DefinitelyTyped.git)\n4.\t@types/node
-    (https://www.github.com/DefinitelyTyped/DefinitelyTyped.git)\n5.\t@types/shelljs
-    (https://www.github.com/DefinitelyTyped/DefinitelyTyped.git)\n6.\tbalanced-match
-    (git://github.com/juliangruber/balanced-match.git)\n7.\tbrace-expansion (git://github.com/juliangruber/brace-expansion.git)\n8.\tbrowser-stdout
-    (git+ssh://git@github.com/kumavis/browser-stdout.git)\n9.\tcommander (git+https://github.com/tj/commander.js.git)\n10.\tconcat-map
-    (git://github.com/substack/node-concat-map.git)\n11.\tdebug (git://github.com/visionmedia/debug.git)\n12.\tdiff
-    (git://github.com/kpdecker/jsdiff.git)\n13.\tescape-string-regexp (git+https://github.com/sindresorhus/escape-string-regexp.git)\n14.\tfs.realpath
-    (git+https://github.com/isaacs/fs.realpath.git)\n15.\tglob (git://github.com/isaacs/node-glob.git)\n16.\tgraceful-readlink
-    (git://github.com/zhiyelee/graceful-readlink.git)\n17.\tgrowl (git://github.com/tj/node-growl.git)\n18.\thas-flag
-    (git+https://github.com/sindresorhus/has-flag.git)\n19.\the (git+https://github.com/mathiasbynens/he.git)\n20.\tinflight
-    (git+https://github.com/npm/inflight.git)\n21.\tinherits (git://github.com/isaacs/inherits.git)\n22.\tinterpret
-    (git://github.com/tkellen/node-interpret.git)\n23.\tjson3 (git://github.com/bestiejs/json3.git)\n24.\tlodash.create
-    (git+https://github.com/lodash/lodash.git)\n25.\tlodash.isarguments (git+https://github.com/lodash/lodash.git)\n26.\tlodash.isarray
-    (git+https://github.com/lodash/lodash.git)\n27.\tlodash.keys (git+https://github.com/lodash/lodash.git)\n28.\tlodash._baseassign
-    (git+https://github.com/lodash/lodash.git)\n29.\tlodash._basecopy (git+https://github.com/lodash/lodash.git)\n30.\tlodash._basecreate
-    (git+https://github.com/lodash/lodash.git)\n31.\tlodash._getnative (git+https://github.com/lodash/lodash.git)\n32.\tlodash._isiterateecall
-    (git+https://github.com/lodash/lodash.git)\n33.\tminimatch (git://github.com/isaacs/minimatch.git)\n34.\tminimist
-    (git://github.com/substack/minimist.git)\n35.\tmkdirp (git+https://github.com/substack/node-mkdirp.git)\n36.\tmocha
-    (git+https://github.com/mochajs/mocha.git)\n37.\tms (git+https://github.com/zeit/ms.git)\n38.\tonce
-    (git://github.com/isaacs/once.git)\n39.\tpath-is-absolute (git+https://github.com/sindresorhus/path-is-absolute.git)\n40.\tpath-parse
-    (git+https://github.com/jbgutierrez/path-parse.git)\n41.\trechoir (git://github.com/tkellen/node-rechoir.git)\n42.\tresolve
-    (git://github.com/substack/node-resolve.git)\n43.\tsemver (git://github.com/npm/node-semver.git)\n44.\tshelljs
-    (git://github.com/shelljs/shelljs.git)\n45.\tsupports-color (git+https://github.com/chalk/supports-color.git)\n46.\ttunnel
-    (git+https://github.com/koichik/node-tunnel.git)\n47.\ttypescript (git+https://github.com/Microsoft/TypeScript.git)\n48.\tunderscore
-    (git://github.com/jashkenas/underscore.git)\n49.\twrappy (git+https://github.com/npm/wrappy.git)\n\n\n%%
-    @types/glob NOTICES, INFORMATION, AND LICENSE BEGIN HERE\n=========================================\nMIT
-    License\n\n    Copyright (c) Microsoft Corporation. All rights reserved.\n\n    Permission
-    is hereby granted, free of charge, to any person obtaining a copy\n    of this
-    software and associated documentation files (the \""Software\""), to deal\n    in
-    the Software without restriction, including without limitation the rights\n    to
-    use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies
-    of the Software, and to permit persons to whom the Software is\n    furnished
-    to do so, subject to the following conditions:\n\n    The above copyright notice
-    and this permission notice shall be included in all\n    copies or substantial
-    portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-    DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
-    ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-    DEALINGS IN THE\n    SOFTWARE\n=========================================\nEND
-    OF @types/glob NOTICES, INFORMATION, AND LICENSE\n\n%% @types/minimatch NOTICES,
-    INFORMATION, AND LICENSE BEGIN HERE\n=========================================\nMIT
-    License\n\n    Copyright (c) Microsoft Corporation. All rights reserved.\n\n    Permission
-    is hereby granted, free of charge, to any person obtaining a copy\n    of this
-    software and associated documentation files (the \""Software\""), to deal\n    in
-    the Software without restriction, including without limitation the rights\n    to
-    use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies
-    of the Software, and to permit persons to whom the Software is\n    furnished
-    to do so, subject to the following conditions:\n\n    The above copyright notice
-    and this permission notice shall be included in all\n    copies or substantial
-    portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-    DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
-    ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-    DEALINGS IN THE\n    SOFTWARE\n=========================================\nEND
-    OF @types/minimatch NOTICES, INFORMATION, AND LICENSE\n\n%% @types/mocha NOTICES,
-    INFORMATION, AND LICENSE BEGIN HERE\n=========================================\nMIT
-    License\n\n    Copyright (c) Microsoft Corporation. All rights reserved.\n\n    Permission
-    is hereby granted, free of charge, to any person obtaining a copy\n    of this
-    software and associated documentation files (the \""Software\""), to deal\n    in
-    the Software without restriction, including without limitation the rights\n    to
-    use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies
-    of the Software, and to permit persons to whom the Software is\n    furnished
-    to do so, subject to the following conditions:\n\n    The above copyright notice
-    and this permission notice shall be included in all\n    copies or substantial
-    portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-    DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
-    ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-    DEALINGS IN THE\n    SOFTWARE\n=========================================\nEND
-    OF @types/mocha NOTICES, INFORMATION, AND LICENSE\n\n%% @types/node NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nMIT License\n\n
-    \   Copyright (c) Microsoft Corporation. All rights reserved.\n\n    Permission
-    is hereby granted, free of charge, to any person obtaining a copy\n    of this
-    software and associated documentation files (the \""Software\""), to deal\n    in
-    the Software without restriction, including without limitation the rights\n    to
-    use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies
-    of the Software, and to permit persons to whom the Software is\n    furnished
-    to do so, subject to the following conditions:\n\n    The above copyright notice
-    and this permission notice shall be included in all\n    copies or substantial
-    portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-    DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
-    ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-    DEALINGS IN THE\n    SOFTWARE\n=========================================\nEND
-    OF @types/node NOTICES, INFORMATION, AND LICENSE\n\n%% @types/shelljs NOTICES,
-    INFORMATION, AND LICENSE BEGIN HERE\n=========================================\nMIT
-    License\n\n    Copyright (c) Microsoft Corporation. All rights reserved.\n\n    Permission
-    is hereby granted, free of charge, to any person obtaining a copy\n    of this
-    software and associated documentation files (the \""Software\""), to deal\n    in
-    the Software without restriction, including without limitation the rights\n    to
-    use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies
-    of the Software, and to permit persons to whom the Software is\n    furnished
-    to do so, subject to the following conditions:\n\n    The above copyright notice
-    and this permission notice shall be included in all\n    copies or substantial
-    portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-    DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
-    ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-    DEALINGS IN THE\n    SOFTWARE\n=========================================\nEND
-    OF @types/shelljs NOTICES, INFORMATION, AND LICENSE\n\n%% balanced-match NOTICES,
-    INFORMATION, AND LICENSE BEGIN HERE\n=========================================\n(MIT)\n\nCopyright
-    (c) 2013 Julian Gruber &lt;julian@juliangruber.com&gt;\n\nPermission is hereby
-    granted, free of charge, to any person obtaining a copy of\nthis software and
-    associated documentation files (the \""Software\""), to deal in\nthe Software without
-    restriction, including without limitation the rights to\nuse, copy, modify, merge,
-    publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit
-    persons to whom the Software is furnished to do\nso, subject to the following
-    conditions:\n\nThe above copyright notice and this permission notice shall be
-    included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE
-    IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING
-    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR
-    PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS
-    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF
-    CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE
-    OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n=========================================\nEND
-    OF balanced-match NOTICES, INFORMATION, AND LICENSE\n\n%% brace-expansion NOTICES,
-    INFORMATION, AND LICENSE BEGIN HERE\n=========================================\nNo
-    license text available.\n=========================================\nEND OF brace-expansion
-    NOTICES, INFORMATION, AND LICENSE\n\n%% browser-stdout NOTICES, INFORMATION, AND
-    LICENSE BEGIN HERE\n=========================================\nNo license text
-    available.\n=========================================\nEND OF browser-stdout NOTICES,
-    INFORMATION, AND LICENSE\n\n%% commander NOTICES, INFORMATION, AND LICENSE BEGIN
-    HERE\n=========================================\n(The MIT License)\n\nCopyright
-    (c) 2011 TJ Holowaychuk <tj@vision-media.ca>\n\nPermission is hereby granted,
-    free of charge, to any person obtaining\na copy of this software and associated
-    documentation files (the\n'Software'), to deal in the Software without restriction,
-    including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute,
-    sublicense, and/or sell copies of the Software, and to\npermit persons to whom
-    the Software is furnished to do so, subject to\nthe following conditions:\n\nThe
-    above copyright notice and this permission notice shall be\nincluded in all copies
-    or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS',
-    WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
-    THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF commander
-    NOTICES, INFORMATION, AND LICENSE\n\n%% concat-map NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\nThis software is released
-    under the MIT license:\n\nPermission is hereby granted, free of charge, to any
-    person obtaining a copy of\nthis software and associated documentation files (the
-    \""Software\""), to deal in\nthe Software without restriction, including without
-    limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense,
-    and/or sell copies of\nthe Software, and to permit persons to whom the Software
-    is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright
-    notice and this permission notice shall be included in all\ncopies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF concat-map
-    NOTICES, INFORMATION, AND LICENSE\n\n%% debug NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\n(The MIT License)\n\nCopyright
-    (c) 2014 TJ Holowaychuk <tj@vision-media.ca>\n\nPermission is hereby granted,
-    free of charge, to any person obtaining a copy of this software \nand associated
-    documentation files (the 'Software'), to deal in the Software without restriction,
-    \nincluding without limitation the rights to use, copy, modify, merge, publish,
-    distribute, sublicense, \nand/or sell copies of the Software, and to permit persons
-    to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe
-    above copyright notice and this permission notice shall be included in all copies
-    or substantial \nportions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS',
-    WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT \nLIMITED
-    TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
-    DAMAGES OR OTHER LIABILITY, \nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
-    ARISING FROM, OUT OF OR IN CONNECTION WITH THE \nSOFTWARE OR THE USE OR OTHER
-    DEALINGS IN THE SOFTWARE.\n=========================================\nEND OF debug
-    NOTICES, INFORMATION, AND LICENSE\n\n%% diff NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\nSoftware License Agreement
-    (BSD License)\n\nCopyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>\n\nAll
-    rights reserved.\n\nRedistribution and use of this software in source and binary
-    forms, with or without modification,\nare permitted provided that the following
-    conditions are met:\n\n* Redistributions of source code must retain the above\n
-    \ copyright notice, this list of conditions and the\n  following disclaimer.\n\n*
-    Redistributions in binary form must reproduce the above\n  copyright notice, this
-    list of conditions and the\n  following disclaimer in the documentation and/or
-    other\n  materials provided with the distribution.\n\n* Neither the name of Kevin
-    Decker nor the names of its\n  contributors may be used to endorse or promote
-    products\n  derived from this software without specific prior\n  written permission.\n\nTHIS
-    SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \""AS IS\"" AND ANY
-    EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
-    OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
-    EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT
-    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR
-    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
-    WHETHER\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-    ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
-    OF SUCH DAMAGE.\n=========================================\nEND OF diff NOTICES,
-    INFORMATION, AND LICENSE\n\n%% escape-string-regexp NOTICES, INFORMATION, AND
-    LICENSE BEGIN HERE\n=========================================\nThe MIT License
-    (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission
-    is hereby granted, free of charge, to any person obtaining a copy\nof this software
-    and associated documentation files (the \""Software\""), to deal\nin the Software
-    without restriction, including without limitation the rights\nto use, copy, modify,
-    merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and
-    to permit persons to whom the Software is\nfurnished to do so, subject to the
-    following conditions:\n\nThe above copyright notice and this permission notice
-    shall be included in\nall copies or substantial portions of the Software.\n\nTHE
-    SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED,
-    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A
-    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT
-    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION
-    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE
-    SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n=========================================\nEND
-    OF escape-string-regexp NOTICES, INFORMATION, AND LICENSE\n\n%% fs.realpath NOTICES,
-    INFORMATION, AND LICENSE BEGIN HERE\n=========================================\nThe
-    ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission
-    to use, copy, modify, and/or distribute this software for any\npurpose with or
-    without fee is hereby granted, provided that the above\ncopyright notice and this
-    permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\""
-    AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING
-    ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
-    AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
-    OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
-    IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-    OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n----\n\nThis
-    library bundles a version of the `fs.realpath` and `fs.realpathSync`\nmethods
-    from Node.js v0.10 under the terms of the Node.js MIT license.\n\nNode's license
-    follows, also included at the header of `old.js` which contains\nthe licensed
-    code:\n\n  Copyright Joyent, Inc. and other Node contributors.\n\n  Permission
-    is hereby granted, free of charge, to any person obtaining a\n  copy of this software
-    and associated documentation files (the \""Software\""),\n  to deal in the Software
-    without restriction, including without limitation\n  the rights to use, copy,
-    modify, merge, publish, distribute, sublicense,\n  and/or sell copies of the Software,
-    and to permit persons to whom the\n  Software is furnished to do so, subject to
-    the following conditions:\n\n  The above copyright notice and this permission
-    notice shall be included in\n  all copies or substantial portions of the Software.\n\n
-    \ THE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n
-    \ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS
-    OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n  FROM, OUT OF OR IN CONNECTION
-    WITH THE SOFTWARE OR THE USE OR OTHER\n  DEALINGS IN THE SOFTWARE.\n=========================================\nEND
-    OF fs.realpath NOTICES, INFORMATION, AND LICENSE\n\n%% glob NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nThe ISC License\n\nCopyright
-    (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or
-    distribute this software for any\npurpose with or without fee is hereby granted,
-    provided that the above\ncopyright notice and this permission notice appear in
-    all copies.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"" AND THE AUTHOR DISCLAIMS ALL
-    WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY
-    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT,
-    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS
-    OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER
-    TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE
-    OF THIS SOFTWARE.\n=========================================\nEND OF glob NOTICES,
-    INFORMATION, AND LICENSE\n\n%% graceful-readlink NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\nThe MIT License (MIT)\n\nCopyright
-    (c) 2015 Zhiye Li\n\nPermission is hereby granted, free of charge, to any person
-    obtaining a copy\nof this software and associated documentation files (the \""Software\""),
-    to deal\nin the Software without restriction, including without limitation the
-    rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies
-    of the Software, and to permit persons to whom the Software is\nfurnished to do
-    so, subject to the following conditions:\n\nThe above copyright notice and this
-    permission notice shall be included in all\ncopies or substantial portions of
-    the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND,
-    EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION
-    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n=========================================\nEND
-    OF graceful-readlink NOTICES, INFORMATION, AND LICENSE\n\n%% growl NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nNo license
-    text available.\n=========================================\nEND OF growl NOTICES,
-    INFORMATION, AND LICENSE\n\n%% has-flag NOTICES, INFORMATION, AND LICENSE BEGIN
-    HERE\n=========================================\nThe MIT License (MIT)\n\nCopyright
-    (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is
-    hereby granted, free of charge, to any person obtaining a copy\nof this software
-    and associated documentation files (the \""Software\""), to deal\nin the Software
-    without restriction, including without limitation the rights\nto use, copy, modify,
-    merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and
-    to permit persons to whom the Software is\nfurnished to do so, subject to the
-    following conditions:\n\nThe above copyright notice and this permission notice
-    shall be included in\nall copies or substantial portions of the Software.\n\nTHE
-    SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED,
-    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A
-    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT
-    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION
-    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE
-    SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n=========================================\nEND
-    OF has-flag NOTICES, INFORMATION, AND LICENSE\n\n%% he NOTICES, INFORMATION, AND
-    LICENSE BEGIN HERE\n=========================================\nCopyright Mathias
-    Bynens <https://mathiasbynens.be/>\n\nPermission is hereby granted, free of charge,
-    to any person obtaining\na copy of this software and associated documentation
-    files (the\n\""Software\""), to deal in the Software without restriction, including\nwithout
-    limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense,
-    and/or sell copies of the Software, and to\npermit persons to whom the Software
-    is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright
-    notice and this permission notice shall be\nincluded in all copies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF he NOTICES,
-    INFORMATION, AND LICENSE\n\n%% inflight NOTICES, INFORMATION, AND LICENSE BEGIN
-    HERE\n=========================================\nThe ISC License\n\nCopyright
-    (c) Isaac Z. Schlueter\n\nPermission to use, copy, modify, and/or distribute this
-    software for any\npurpose with or without fee is hereby granted, provided that
-    the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE
-    SOFTWARE IS PROVIDED \""AS IS\"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD
-    TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS.
-    IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR
-    CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA
-    OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
-    ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n=========================================\nEND
-    OF inflight NOTICES, INFORMATION, AND LICENSE\n\n%% inherits NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nThe ISC License\n\nCopyright
-    (c) Isaac Z. Schlueter\n\nPermission to use, copy, modify, and/or distribute this
-    software for any\npurpose with or without fee is hereby granted, provided that
-    the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE
-    SOFTWARE IS PROVIDED \""AS IS\"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD
-    TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS.
-    IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR
-    CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA
-    OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION,
-    ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n=========================================\nEND
-    OF inherits NOTICES, INFORMATION, AND LICENSE\n\n%% interpret NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nCopyright (c)
-    2014 Tyler Kellen\n\nPermission is hereby granted, free of charge, to any person\nobtaining
-    a copy of this software and associated documentation\nfiles (the \""Software\""),
-    to deal in the Software without\nrestriction, including without limitation the
-    rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies
-    of the Software, and to permit persons to whom the\nSoftware is furnished to do
-    so, subject to the following\nconditions:\n\nThe above copyright notice and this
-    permission notice shall be\nincluded in all copies or substantial portions of
-    the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS
-    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION
-    WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n=========================================\nEND
-    OF interpret NOTICES, INFORMATION, AND LICENSE\n\n%% json3 NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nCopyright (c)
-    2012-2014 Kit Cambridge.\nhttp://kitcambridge.be/\n\nPermission is hereby granted,
-    free of charge, to any person obtaining a copy of\nthis software and associated
-    documentation files (the \""Software\""), to deal in\nthe Software without restriction,
-    including without limitation the rights to\nuse, copy, modify, merge, publish,
-    distribute, sublicense, and/or sell copies\nof the Software, and to permit persons
-    to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe
-    above copyright notice and this permission notice shall be included in all\ncopies
-    or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"",
-    WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO
-    THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE\nSOFTWARE.\n=========================================\nEND OF json3 NOTICES,
-    INFORMATION, AND LICENSE\n\n%% lodash.create NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\nCopyright 2012-2015 The
-    Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js, copyright
-    2009-2015 Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors
-    <http://underscorejs.org/>\n\nPermission is hereby granted, free of charge, to
-    any person obtaining\na copy of this software and associated documentation files
-    (the\n\""Software\""), to deal in the Software without restriction, including\nwithout
-    limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense,
-    and/or sell copies of the Software, and to\npermit persons to whom the Software
-    is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright
-    notice and this permission notice shall be\nincluded in all copies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF lodash.create
-    NOTICES, INFORMATION, AND LICENSE\n\n%% lodash.isarguments NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nCopyright jQuery
-    Foundation and other contributors <https://jquery.org/>\n\nBased on Underscore.js,
-    copyright Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors
-    <http://underscorejs.org/>\n\nThis software consists of voluntary contributions
-    made by many\nindividuals. For exact contribution history, see the revision history\navailable
-    at https://github.com/lodash/lodash\n\nThe following license applies to all parts
-    of this software except as\ndocumented below:\n\n====\n\nPermission is hereby
-    granted, free of charge, to any person obtaining\na copy of this software and
-    associated documentation files (the\n\""Software\""), to deal in the Software without
-    restriction, including\nwithout limitation the rights to use, copy, modify, merge,
-    publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit
-    persons to whom the Software is furnished to do so, subject to\nthe following
-    conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded
-    in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED
-    \""AS IS\"", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT
-    LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
-    AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE
-    FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT,
-    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR
-    THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights
-    for sample code are waived via CC0. Sample\ncode is defined as all source code
-    displayed within the prose of the\ndocumentation.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nFiles
-    located in the node_modules and vendor directories are externally\nmaintained
-    libraries used by this software which have their own\nlicenses; we recommend you
-    read them, as their terms may differ from the\nterms above.\n=========================================\nEND
-    OF lodash.isarguments NOTICES, INFORMATION, AND LICENSE\n\n%% lodash.isarray NOTICES,
-    INFORMATION, AND LICENSE BEGIN HERE\n=========================================\nCopyright
-    2012-2015 The Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js,
-    copyright 2009-2015 Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters
-    & Editors <http://underscorejs.org/>\n\nPermission is hereby granted, free of
-    charge, to any person obtaining\na copy of this software and associated documentation
-    files (the\n\""Software\""), to deal in the Software without restriction, including\nwithout
-    limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense,
-    and/or sell copies of the Software, and to\npermit persons to whom the Software
-    is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright
-    notice and this permission notice shall be\nincluded in all copies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF lodash.isarray
-    NOTICES, INFORMATION, AND LICENSE\n\n%% lodash.keys NOTICES, INFORMATION, AND
-    LICENSE BEGIN HERE\n=========================================\nCopyright 2012-2015
-    The Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js, copyright
-    2009-2015 Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors
-    <http://underscorejs.org/>\n\nPermission is hereby granted, free of charge, to
-    any person obtaining\na copy of this software and associated documentation files
-    (the\n\""Software\""), to deal in the Software without restriction, including\nwithout
-    limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense,
-    and/or sell copies of the Software, and to\npermit persons to whom the Software
-    is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright
-    notice and this permission notice shall be\nincluded in all copies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF lodash.keys
-    NOTICES, INFORMATION, AND LICENSE\n\n%% lodash._baseassign NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nCopyright 2012-2015
-    The Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js, copyright
-    2009-2015 Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors
-    <http://underscorejs.org/>\n\nPermission is hereby granted, free of charge, to
-    any person obtaining\na copy of this software and associated documentation files
-    (the\n\""Software\""), to deal in the Software without restriction, including\nwithout
-    limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense,
-    and/or sell copies of the Software, and to\npermit persons to whom the Software
-    is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright
-    notice and this permission notice shall be\nincluded in all copies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF lodash._baseassign
-    NOTICES, INFORMATION, AND LICENSE\n\n%% lodash._basecopy NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nCopyright 2012-2015
-    The Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js, copyright
-    2009-2015 Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors
-    <http://underscorejs.org/>\n\nPermission is hereby granted, free of charge, to
-    any person obtaining\na copy of this software and associated documentation files
-    (the\n\""Software\""), to deal in the Software without restriction, including\nwithout
-    limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense,
-    and/or sell copies of the Software, and to\npermit persons to whom the Software
-    is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright
-    notice and this permission notice shall be\nincluded in all copies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF lodash._basecopy
-    NOTICES, INFORMATION, AND LICENSE\n\n%% lodash._basecreate NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nCopyright 2012-2015
-    The Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js, copyright
-    2009-2015 Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors
-    <http://underscorejs.org/>\n\nPermission is hereby granted, free of charge, to
-    any person obtaining\na copy of this software and associated documentation files
-    (the\n\""Software\""), to deal in the Software without restriction, including\nwithout
-    limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense,
-    and/or sell copies of the Software, and to\npermit persons to whom the Software
-    is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright
-    notice and this permission notice shall be\nincluded in all copies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF lodash._basecreate
-    NOTICES, INFORMATION, AND LICENSE\n\n%% lodash._getnative NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nCopyright 2012-2015
-    The Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js, copyright
-    2009-2015 Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors
-    <http://underscorejs.org/>\n\nPermission is hereby granted, free of charge, to
-    any person obtaining\na copy of this software and associated documentation files
-    (the\n\""Software\""), to deal in the Software without restriction, including\nwithout
-    limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense,
-    and/or sell copies of the Software, and to\npermit persons to whom the Software
-    is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright
-    notice and this permission notice shall be\nincluded in all copies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF lodash._getnative
-    NOTICES, INFORMATION, AND LICENSE\n\n%% lodash._isiterateecall NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nCopyright 2012-2015
-    The Dojo Foundation <http://dojofoundation.org/>\nBased on Underscore.js, copyright
-    2009-2015 Jeremy Ashkenas,\nDocumentCloud and Investigative Reporters & Editors
-    <http://underscorejs.org/>\n\nPermission is hereby granted, free of charge, to
-    any person obtaining\na copy of this software and associated documentation files
-    (the\n\""Software\""), to deal in the Software without restriction, including\nwithout
-    limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense,
-    and/or sell copies of the Software, and to\npermit persons to whom the Software
-    is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright
-    notice and this permission notice shall be\nincluded in all copies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF lodash._isiterateecall
-    NOTICES, INFORMATION, AND LICENSE\n\n%% minimatch NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\nThe ISC License\n\nCopyright
-    (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or
-    distribute this software for any\npurpose with or without fee is hereby granted,
-    provided that the above\ncopyright notice and this permission notice appear in
-    all copies.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"" AND THE AUTHOR DISCLAIMS ALL
-    WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY
-    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT,
-    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS
-    OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER
-    TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE
-    OF THIS SOFTWARE.\n=========================================\nEND OF minimatch
-    NOTICES, INFORMATION, AND LICENSE\n\n%% minimist NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\nThis software is released
-    under the MIT license:\n\nPermission is hereby granted, free of charge, to any
-    person obtaining a copy of\nthis software and associated documentation files (the
-    \""Software\""), to deal in\nthe Software without restriction, including without
-    limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense,
-    and/or sell copies of\nthe Software, and to permit persons to whom the Software
-    is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright
-    notice and this permission notice shall be included in all\ncopies or substantial
-    portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY
-    OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
-    NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF minimist NOTICES,
-    INFORMATION, AND LICENSE\n\n%% mkdirp NOTICES, INFORMATION, AND LICENSE BEGIN
-    HERE\n=========================================\nCopyright 2010 James Halliday
-    (mail@substack.net)\n\nThis project is free software released under the MIT/X11
-    license:\n\nPermission is hereby granted, free of charge, to any person obtaining
-    a copy\nof this software and associated documentation files (the \""Software\""),
-    to deal\nin the Software without restriction, including without limitation the
-    rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies
-    of the Software, and to permit persons to whom the Software is\nfurnished to do
-    so, subject to the following conditions:\n\nThe above copyright notice and this
-    permission notice shall be included in\nall copies or substantial portions of
-    the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND,
-    EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION
-    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n=========================================\nEND
-    OF mkdirp NOTICES, INFORMATION, AND LICENSE\n\n%% mocha NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\n(The MIT License)\n\nCopyright
-    (c) 2011-2017 JS Foundation and contributors, https://js.foundation\n\nPermission
-    is hereby granted, free of charge, to any person obtaining\na copy of this software
-    and associated documentation files (the\n'Software'), to deal in the Software
-    without restriction, including\nwithout limitation the rights to use, copy, modify,
-    merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and
-    to\npermit persons to whom the Software is furnished to do so, subject to\nthe
-    following conditions:\n\nThe above copyright notice and this permission notice
-    shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE
-    SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED,
-    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A
-    PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
-    HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-    OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE
-    OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n=========================================\nEND
-    OF mocha NOTICES, INFORMATION, AND LICENSE\n\n%% ms NOTICES, INFORMATION, AND
-    LICENSE BEGIN HERE\n=========================================\nThe MIT License
-    (MIT)\n\nCopyright (c) 2016 Zeit, Inc.\n\nPermission is hereby granted, free of
-    charge, to any person obtaining a copy\nof this software and associated documentation
-    files (the \""Software\""), to deal\nin the Software without restriction, including
-    without limitation the rights\nto use, copy, modify, merge, publish, distribute,
-    sublicense, and/or sell\ncopies of the Software, and to permit persons to whom
-    the Software is\nfurnished to do so, subject to the following conditions:\n\nThe
-    above copyright notice and this permission notice shall be included in all\ncopies
-    or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"",
-    WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO
-    THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE\nSOFTWARE.\n=========================================\nEND OF ms NOTICES,
-    INFORMATION, AND LICENSE\n\n%% once NOTICES, INFORMATION, AND LICENSE BEGIN HERE\n=========================================\nThe
-    ISC License\n\nCopyright (c) Isaac Z. Schlueter and Contributors\n\nPermission
-    to use, copy, modify, and/or distribute this software for any\npurpose with or
-    without fee is hereby granted, provided that the above\ncopyright notice and this
-    permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\""
-    AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING
-    ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
-    AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
-    OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER
-    IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-    OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n=========================================\nEND
-    OF once NOTICES, INFORMATION, AND LICENSE\n\n%% path-is-absolute NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nThe MIT License
-    (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission
-    is hereby granted, free of charge, to any person obtaining a copy\nof this software
-    and associated documentation files (the \""Software\""), to deal\nin the Software
-    without restriction, including without limitation the rights\nto use, copy, modify,
-    merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and
-    to permit persons to whom the Software is\nfurnished to do so, subject to the
-    following conditions:\n\nThe above copyright notice and this permission notice
-    shall be included in\nall copies or substantial portions of the Software.\n\nTHE
-    SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED,
-    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A
-    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT
-    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION
-    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE
-    SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n=========================================\nEND
-    OF path-is-absolute NOTICES, INFORMATION, AND LICENSE\n\n%% path-parse NOTICES,
-    INFORMATION, AND LICENSE BEGIN HERE\n=========================================\nNo
-    license text available.\n=========================================\nEND OF path-parse
-    NOTICES, INFORMATION, AND LICENSE\n\n%% rechoir NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\nCopyright (c) 2015 Tyler
-    Kellen\n\nPermission is hereby granted, free of charge, to any person\nobtaining
-    a copy of this software and associated documentation\nfiles (the \""Software\""),
-    to deal in the Software without\nrestriction, including without limitation the
-    rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies
-    of the Software, and to permit persons to whom the\nSoftware is furnished to do
-    so, subject to the following\nconditions:\n\nThe above copyright notice and this
-    permission notice shall be\nincluded in all copies or substantial portions of
-    the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS
-    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION
-    WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n=========================================\nEND
-    OF rechoir NOTICES, INFORMATION, AND LICENSE\n\n%% resolve NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nThis software
-    is released under the MIT license:\n\nPermission is hereby granted, free of charge,
-    to any person obtaining a copy of\nthis software and associated documentation
-    files (the \""Software\""), to deal in\nthe Software without restriction, including
-    without limitation the rights to\nuse, copy, modify, merge, publish, distribute,
-    sublicense, and/or sell copies of\nthe Software, and to permit persons to whom
-    the Software is furnished to do so,\nsubject to the following conditions:\n\nThe
-    above copyright notice and this permission notice shall be included in all\ncopies
-    or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"",
-    WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO
-    THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN THE SOFTWARE.\n=========================================\nEND OF resolve NOTICES,
-    INFORMATION, AND LICENSE\n\n%% semver NOTICES, INFORMATION, AND LICENSE BEGIN
-    HERE\n=========================================\nCopyright (c) Isaac Z. Schlueter
-    (\""Author\"")\nAll rights reserved.\n\nThe BSD License\n\nRedistribution and use
-    in source and binary forms, with or without\nmodification, are permitted provided
-    that the following conditions\nare met:\n\n1. Redistributions of source code must
-    retain the above copyright\n   notice, this list of conditions and the following
-    disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n
-    \  notice, this list of conditions and the following disclaimer in the\n   documentation
-    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED
-    BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES,
-    INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND
-    FITNESS FOR A PARTICULAR\nPURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR
-    OR CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
-    OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE
-    GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\nBUSINESS INTERRUPTION) HOWEVER
-    CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY,
-    OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-    OF THIS SOFTWARE, EVEN\nIF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n=========================================\nEND
-    OF semver NOTICES, INFORMATION, AND LICENSE\n\n%% shelljs NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nCopyright (c)
-    2012, Artur Adib <arturadib@gmail.com>\nAll rights reserved.\n\nYou may use this
-    project under the terms of the New BSD license as follows:\n\nRedistribution and
-    use in source and binary forms, with or without\nmodification, are permitted provided
-    that the following conditions are met:\n    * Redistributions of source code must
-    retain the above copyright\n      notice, this list of conditions and the following
-    disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n
-    \     notice, this list of conditions and the following disclaimer in the\n      documentation
-    and/or other materials provided with the distribution.\n    * Neither the name
-    of Artur Adib nor the\n      names of the contributors may be used to endorse
-    or promote products\n      derived from this software without specific prior written
-    permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-    \""AS IS\"" \nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
-    TO, THE \nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-    \nARE DISCLAIMED. IN NO EVENT SHALL ARTUR ADIB BE LIABLE FOR ANY\nDIRECT, INDIRECT,
-    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT
-    LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR
-    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY,
-    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE)
-    ARISING IN ANY WAY OUT OF THE USE OF \nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
-    OF SUCH DAMAGE.\n=========================================\nEND OF shelljs NOTICES,
-    INFORMATION, AND LICENSE\n\n%% supports-color NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\nThe MIT License (MIT)\n\nCopyright
-    (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is
-    hereby granted, free of charge, to any person obtaining a copy\nof this software
-    and associated documentation files (the \""Software\""), to deal\nin the Software
-    without restriction, including without limitation the rights\nto use, copy, modify,
-    merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and
-    to permit persons to whom the Software is\nfurnished to do so, subject to the
-    following conditions:\n\nThe above copyright notice and this permission notice
-    shall be included in\nall copies or substantial portions of the Software.\n\nTHE
-    SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED,
-    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A
-    PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT
-    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION
-    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE
-    SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n=========================================\nEND
-    OF supports-color NOTICES, INFORMATION, AND LICENSE\n\n%% tunnel NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nThe MIT License
-    (MIT)\n\nCopyright (c) 2012 Koichi Kobayashi\n\nPermission is hereby granted,
-    free of charge, to any person obtaining a copy\nof this software and associated
-    documentation files (the \""Software\""), to deal\nin the Software without restriction,
-    including without limitation the rights\nto use, copy, modify, merge, publish,
-    distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons
-    to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe
-    above copyright notice and this permission notice shall be included in\nall copies
-    or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"",
-    WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO
-    THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
-    IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES
-    OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-    IN\nTHE SOFTWARE.\n=========================================\nEND OF tunnel NOTICES,
-    INFORMATION, AND LICENSE\n\n%% typescript NOTICES, INFORMATION, AND LICENSE BEGIN
-    HERE\n=========================================\nApache License\n\nVersion 2.0,
-    January 2004\n\nhttp://www.apache.org/licenses/ \n\nTERMS AND CONDITIONS FOR USE,
-    REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n\""License\"" shall mean the
-    terms and conditions for use, reproduction, and distribution as defined by Sections
-    1 through 9 of this document.\n\n\""Licensor\"" shall mean the copyright owner or
-    entity authorized by the copyright owner that is granting the License.\n\n\""Legal
-    Entity\"" shall mean the union of the acting entity and all other entities that
-    control, are controlled by, or are under common control with that entity. For
-    the purposes of this definition, \""control\"" means (i) the power, direct or indirect,
-    to cause the direction or management of such entity, whether by contract or otherwise,
-    or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or
-    (iii) beneficial ownership of such entity.\n\n\""You\"" (or \""Your\"") shall mean
-    an individual or Legal Entity exercising permissions granted by this License.\n\n\""Source\""
-    form shall mean the preferred form for making modifications, including but not
-    limited to software source code, documentation source, and configuration files.\n\n\""Object\""
-    form shall mean any form resulting from mechanical transformation or translation
-    of a Source form, including but not limited to compiled object code, generated
-    documentation, and conversions to other media types.\n\n\""Work\"" shall mean the
-    work of authorship, whether in Source or Object form, made available under the
-    License, as indicated by a copyright notice that is included in or attached to
-    the work (an example is provided in the Appendix below).\n\n\""Derivative Works\""
-    shall mean any work, whether in Source or Object form, that is based on (or derived
-    from) the Work and for which the editorial revisions, annotations, elaborations,
-    or other modifications represent, as a whole, an original work of authorship.
-    For the purposes of this License, Derivative Works shall not include works that
-    remain separable from, or merely link (or bind by name) to the interfaces of,
-    the Work and Derivative Works thereof.\n\n\""Contribution\"" shall mean any work
-    of authorship, including the original version of the Work and any modifications
-    or additions to that Work or Derivative Works thereof, that is intentionally submitted
-    to Licensor for inclusion in the Work by the copyright owner or by an individual
-    or Legal Entity authorized to submit on behalf of the copyright owner. For the
-    purposes of this definition, \""submitted\"" means any form of electronic, verbal,
-    or written communication sent to the Licensor or its representatives, including
-    but not limited to communication on electronic mailing lists, source code control
-    systems, and issue tracking systems that are managed by, or on behalf of, the
-    Licensor for the purpose of discussing and improving the Work, but excluding communication
-    that is conspicuously marked or otherwise designated in writing by the copyright
-    owner as \""Not a Contribution.\""\n\n\""Contributor\"" shall mean Licensor and any
-    individual or Legal Entity on behalf of whom a Contribution has been received
-    by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright
-    License. Subject to the terms and conditions of this License, each Contributor
-    hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,
-    irrevocable copyright license to reproduce, prepare Derivative Works of, publicly
-    display, publicly perform, sublicense, and distribute the Work and such Derivative
-    Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the
-    terms and conditions of this License, each Contributor hereby grants to You a
-    perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except
-    as stated in this section) patent license to make, have made, use, offer to sell,
-    sell, import, and otherwise transfer the Work, where such license applies only
-    to those patent claims licensable by such Contributor that are necessarily infringed
-    by their Contribution(s) alone or by combination of their Contribution(s) with
-    the Work to which such Contribution(s) was submitted. If You institute patent
-    litigation against any entity (including a cross-claim or counterclaim in a lawsuit)
-    alleging that the Work or a Contribution incorporated within the Work constitutes
-    direct or contributory patent infringement, then any patent licenses granted to
-    You under this License for that Work shall terminate as of the date such litigation
-    is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the
-    Work or Derivative Works thereof in any medium, with or without modifications,
-    and in Source or Object form, provided that You meet the following conditions:\n\nYou
-    must give any other recipients of the Work or Derivative Works a copy of this
-    License; and\n\nYou must cause any modified files to carry prominent notices stating
-    that You changed the files; and\n\nYou must retain, in the Source form of any
-    Derivative Works that You distribute, all copyright, patent, trademark, and attribution
-    notices from the Source form of the Work, excluding those notices that do not
-    pertain to any part of the Derivative Works; and\n\nIf the Work includes a \""NOTICE\""
-    text file as part of its distribution, then any Derivative Works that You distribute
-    must include a readable copy of the attribution notices contained within such
-    NOTICE file, excluding those notices that do not pertain to any part of the Derivative
-    Works, in at least one of the following places: within a NOTICE text file distributed
-    as part of the Derivative Works; within the Source form or documentation, if provided
-    along with the Derivative Works; or, within a display generated by the Derivative
-    Works, if and wherever such third-party notices normally appear. The contents
-    of the NOTICE file are for informational purposes only and do not modify the License.
-    You may add Your own attribution notices within Derivative Works that You distribute,
-    alongside or as an addendum to the NOTICE text from the Work, provided that such
-    additional attribution notices cannot be construed as modifying the License. You
-    may add Your own copyright statement to Your modifications and may provide additional
-    or different license terms and conditions for use, reproduction, or distribution
-    of Your modifications, or for any such Derivative Works as a whole, provided Your
-    use, reproduction, and distribution of the Work otherwise complies with the conditions
-    stated in this License.\n\n5. Submission of Contributions. Unless You explicitly
-    state otherwise, any Contribution intentionally submitted for inclusion in the
-    Work by You to the Licensor shall be under the terms and conditions of this License,
-    without any additional terms or conditions. Notwithstanding the above, nothing
-    herein shall supersede or modify the terms of any separate license agreement you
-    may have executed with Licensor regarding such Contributions.\n\n6. Trademarks.
-    This License does not grant permission to use the trade names, trademarks, service
-    marks, or product names of the Licensor, except as required for reasonable and
-    customary use in describing the origin of the Work and reproducing the content
-    of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable
-    law or agreed to in writing, Licensor provides the Work (and each Contributor
-    provides its Contributions) on an \""AS IS\"" BASIS, WITHOUT WARRANTIES OR CONDITIONS
-    OF ANY KIND, either express or implied, including, without limitation, any warranties
-    or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR
-    PURPOSE. You are solely responsible for determining the appropriateness of using
-    or redistributing the Work and assume any risks associated with Your exercise
-    of permissions under this License.\n\n8. Limitation of Liability. In no event
-    and under no legal theory, whether in tort (including negligence), contract, or
-    otherwise, unless required by applicable law (such as deliberate and grossly negligent
-    acts) or agreed to in writing, shall any Contributor be liable to You for damages,
-    including any direct, indirect, special, incidental, or consequential damages
-    of any character arising as a result of this License or out of the use or inability
-    to use the Work (including but not limited to damages for loss of goodwill, work
-    stoppage, computer failure or malfunction, or any and all other commercial damages
-    or losses), even if such Contributor has been advised of the possibility of such
-    damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing
-    the Work or Derivative Works thereof, You may choose to offer, and charge a fee
-    for, acceptance of support, warranty, indemnity, or other liability obligations
-    and/or rights consistent with this License. However, in accepting such obligations,
-    You may act only on Your own behalf and on Your sole responsibility, not on behalf
-    of any other Contributor, and only if You agree to indemnify, defend, and hold
-    each Contributor harmless for any liability incurred by, or claims asserted against,
-    such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND
-    OF TERMS AND CONDITIONS\n=========================================\nEND OF typescript
-    NOTICES, INFORMATION, AND LICENSE\n\n%% underscore NOTICES, INFORMATION, AND LICENSE
-    BEGIN HERE\n=========================================\nCopyright (c) 2009-2015
-    Jeremy Ashkenas, DocumentCloud and Investigative\nReporters & Editors\n\nPermission
-    is hereby granted, free of charge, to any person\nobtaining a copy of this software
-    and associated documentation\nfiles (the \""Software\""), to deal in the Software
-    without\nrestriction, including without limitation the rights to use,\ncopy, modify,
-    merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and
-    to permit persons to whom the\nSoftware is furnished to do so, subject to the
-    following\nconditions:\n\nThe above copyright notice and this permission notice
-    shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE
-    SOFTWARE IS PROVIDED \""AS IS\"", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED,
-    INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A
-    PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS
-    BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF
-    CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
-    OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n=========================================\nEND
-    OF underscore NOTICES, INFORMATION, AND LICENSE\n\n%% wrappy NOTICES, INFORMATION,
-    AND LICENSE BEGIN HERE\n=========================================\nThe ISC License\n\nCopyright
-    (c) Isaac Z. Schlueter and Contributors\n\nPermission to use, copy, modify, and/or
-    distribute this software for any\npurpose with or without fee is hereby granted,
-    provided that the above\ncopyright notice and this permission notice appear in
-    all copies.\n\nTHE SOFTWARE IS PROVIDED \""AS IS\"" AND THE AUTHOR DISCLAIMS ALL
-    WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY
-    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT,
-    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS
-    OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER
-    TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE
-    OF THIS SOFTWARE.\n=========================================\nEND OF wrappy NOTICES,
-    INFORMATION, AND LICENSE"""
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/underscore.dep.yml,0,33,33,"@@ -1,33 +0,0 @@
----
-name: underscore
-version: 1.13.1
-type: npm
-summary: JavaScript's functional programming helper library.
-homepage: https://underscorejs.org
-license: mit
-licenses:
-- sources: LICENSE
-  text: |
-    Copyright (c) 2009-2021 Jeremy Ashkenas, Julian Gonggrijp, and DocumentCloud and Investigative Reporters & Editors
-
-    Permission is hereby granted, free of charge, to any person
-    obtaining a copy of this software and associated documentation
-    files (the ""Software""), to deal in the Software without
-    restriction, including without limitation the rights to use,
-    copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the
-    Software is furnished to do so, subject to the following
-    conditions:
-
-    The above copyright notice and this permission notice shall be
-    included in all copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
-    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
-    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
-    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
-    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
-    OTHER DEALINGS IN THE SOFTWARE.
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/undici.dep.yml,7,5,12,"@@ -1,16 +1,16 @@
 ---
-name: has-symbols
-version: 1.0.2
+name: undici
+version: 5.28.4
 type: npm
-summary: Determine if the JS environment has Symbol support. Supports spec, or shams.
-homepage: https://github.com/inspect-js/has-symbols#readme
+summary: An HTTP/1.1 client, written from scratch for Node.js
+homepage: https://undici.nodejs.org
 license: mit
 licenses:
 - sources: LICENSE
   text: |
     MIT License
 
-    Copyright (c) 2016 Jordan Harband
+    Copyright (c) Matteo Collina and Undici contributors
 
     Permission is hereby granted, free of charge, to any person obtaining a copy
     of this software and associated documentation files (the ""Software""), to deal
@@ -29,4 +29,6 @@ licenses:
     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
     SOFTWARE.
+- sources: README.md
+  text: MIT
 notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/universal-user-agent.dep.yml,1,1,2,"@@ -1,6 +1,6 @@
 ---
 name: universal-user-agent
-version: 6.0.0
+version: 6.0.1
 type: npm
 summary: Get a user agent string in both browser and node
 homepage: "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/uuid-3.4.0.dep.yml,2,2,4,"@@ -1,9 +1,9 @@
 ---
 name: uuid
-version: 3.3.3
+version: 3.4.0
 type: npm
 summary: RFC4122 (v1, v4, and v5) UUIDs
-homepage: https://github.com/kelektiv/node-uuid#readme
+homepage: 
 license: mit
 licenses:
 - sources: LICENSE.md"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/uuid-9.0.1.dep.yml,20,0,20,"@@ -0,0 +1,20 @@
+---
+name: uuid
+version: 9.0.1
+type: npm
+summary: RFC4122 (v1, v4, and v5) UUIDs
+homepage: 
+license: mit
+licenses:
+- sources: LICENSE.md
+  text: |
+    The MIT License (MIT)
+
+    Copyright (c) 2010-2020 Robert Kieffer and other contributors
+
+    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
+
+    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
+
+    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/webidl-conversions.dep.yml,0,23,23,"@@ -1,23 +0,0 @@
----
-name: webidl-conversions
-version: 3.0.1
-type: npm
-summary: Implements the WebIDL algorithms for converting to and from JavaScript values
-homepage: https://github.com/jsdom/webidl-conversions#readme
-license: bsd-2-clause
-licenses:
-- sources: LICENSE.md
-  text: |
-    # The BSD 2-Clause License
-
-    Copyright (c) 2014, Domenic Denicola
-    All rights reserved.
-
-    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
-
-    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
-
-    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
-
-    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",.licenses/npm/whatwg-url.dep.yml,0,32,32,"@@ -1,32 +0,0 @@
----
-name: whatwg-url
-version: 5.0.0
-type: npm
-summary: An implementation of the WHATWG URL Standard's URL API and parsing machinery
-homepage: https://github.com/jsdom/whatwg-url#readme
-license: mit
-licenses:
-- sources: LICENSE.txt
-  text: |
-    The MIT License (MIT)
-
-    Copyright (c) 2015–2016 Sebastian Mayr
-
-    Permission is hereby granted, free of charge, to any person obtaining a copy
-    of this software and associated documentation files (the ""Software""), to deal
-    in the Software without restriction, including without limitation the rights
-    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-    copies of the Software, and to permit persons to whom the Software is
-    furnished to do so, subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included in
-    all copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-    THE SOFTWARE.
-notices: []"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",__test__/git-auth-helper.test.ts,4,4,8,"@@ -169,8 +169,9 @@ describe('git-auth-helper tests', () => {
 
     // Mock fs.promises.readFile
     const realReadFile = fs.promises.readFile
-    jest.spyOn(fs.promises, 'readFile').mockImplementation(
-      async (file: any, options: any): Promise<Buffer> => {
+    jest
+      .spyOn(fs.promises, 'readFile')
+      .mockImplementation(async (file: any, options: any): Promise<Buffer> => {
         const userKnownHostsPath = path.join(
           os.homedir(),
           '.ssh',
@@ -181,8 +182,7 @@ describe('git-auth-helper tests', () => {
         }
 
         return await realReadFile(file, options)
-      }
-    )
+      })
 
     // Act
     const authHelper = gitAuthHelper.createAuthHelper(git, settings)"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",__test__/ref-helper.test.ts,2,2,4,"@@ -7,11 +7,11 @@ let git: IGitCommandManager
 
 describe('ref-helper tests', () => {
   beforeEach(() => {
-    git = ({} as unknown) as IGitCommandManager
+    git = {} as unknown as IGitCommandManager
   })
 
   it('getCheckoutInfo requires git', async () => {
-    const git = (null as unknown) as IGitCommandManager
+    const git = null as unknown as IGitCommandManager
     try {
       await refHelper.getCheckoutInfo(git, 'refs/heads/my/branch', commit)
       throw new Error('Should not reach here')"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",__test__/retry-helper.test.ts,1,1,2,"@@ -68,7 +68,7 @@ describe('retry-helper tests', () => {
 
   it('all attempts fail succeeds', async () => {
     let attempts = 0
-    let error: Error = (null as unknown) as Error
+    let error: Error = null as unknown as Error
     try {
       await retryHelper.execute(() => {
         throw new Error(`some error ${++attempts}`)"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",dist/index.js,30129,10258,40387,
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",jest.config.js,1,0,1,"@@ -1,5 +1,6 @@
 module.exports = {
   clearMocks: true,
+  fakeTimers: {},
   moduleFileExtensions: ['js', 'ts'],
   testEnvironment: 'node',
   testMatch: ['**/*.test.ts'],"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",package-lock.json,4109,12881,16990,
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",package.json,20,20,40,"@@ -28,28 +28,28 @@
   },
   ""homepage"": ""https://github.com/actions/checkout#readme"",
   ""dependencies"": {
-    ""@actions/core"": ""^1.10.0"",
-    ""@actions/exec"": ""^1.0.1"",
-    ""@actions/github"": ""^5.0.0"",
+    ""@actions/core"": ""^1.10.1"",
+    ""@actions/exec"": ""^1.1.1"",
+    ""@actions/github"": ""^6.0.0"",
     ""@actions/io"": ""^1.1.3"",
-    ""@actions/tool-cache"": ""^1.1.2"",
-    ""uuid"": ""^3.3.3""
+    ""@actions/tool-cache"": ""^2.0.1"",
+    ""uuid"": ""^9.0.1""
   },
   ""devDependencies"": {
-    ""@types/jest"": ""^27.0.2"",
-    ""@types/node"": ""^20.5.3"",
-    ""@types/uuid"": ""^3.4.6"",
-    ""@typescript-eslint/eslint-plugin"": ""^5.45.0"",
-    ""@typescript-eslint/parser"": ""^5.45.0"",
-    ""@vercel/ncc"": ""^0.36.1"",
-    ""eslint"": ""^7.32.0"",
-    ""eslint-plugin-github"": ""^4.3.2"",
-    ""eslint-plugin-jest"": ""^25.7.0"",
-    ""jest"": ""^27.3.0"",
-    ""jest-circus"": ""^27.3.0"",
-    ""js-yaml"": ""^3.13.1"",
-    ""prettier"": ""^1.19.1"",
-    ""ts-jest"": ""^27.0.7"",
-    ""typescript"": ""^4.4.4""
+    ""@types/jest"": ""^29.5.12"",
+    ""@types/node"": ""^20.12.7"",
+    ""@types/uuid"": ""^9.0.8"",
+    ""@typescript-eslint/eslint-plugin"": ""^7.7.1"",
+    ""@typescript-eslint/parser"": ""^7.7.1"",
+    ""@vercel/ncc"": ""^0.38.1"",
+    ""eslint"": ""^8.57.0"",
+    ""eslint-plugin-github"": ""^4.10.2"",
+    ""eslint-plugin-jest"": ""^28.2.0"",
+    ""jest"": ""^29.7.0"",
+    ""jest-circus"": ""^29.7.0"",
+    ""js-yaml"": ""^4.1.0"",
+    ""prettier"": ""^3.2.5"",
+    ""ts-jest"": ""^29.1.2"",
+    ""typescript"": ""^5.4.5""
   }
 }"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",src/fs-helper.ts,9,6,15,"@@ -18,8 +18,9 @@ export function directoryExistsSync(path: string, required?: boolean): boolean {
     }
 
     throw new Error(
-      `Encountered an error when checking whether path '${path}' exists: ${(error as any)
-        ?.message ?? error}`
+      `Encountered an error when checking whether path '${path}' exists: ${
+        (error as any)?.message ?? error
+      }`
     )
   }
 
@@ -45,8 +46,9 @@ export function existsSync(path: string): boolean {
     }
 
     throw new Error(
-      `Encountered an error when checking whether path '${path}' exists: ${(error as any)
-        ?.message ?? error}`
+      `Encountered an error when checking whether path '${path}' exists: ${
+        (error as any)?.message ?? error
+      }`
     )
   }
 
@@ -67,8 +69,9 @@ export function fileExistsSync(path: string): boolean {
     }
 
     throw new Error(
-      `Encountered an error when checking whether path '${path}' exists: ${(error as any)
-        ?.message ?? error}`
+      `Encountered an error when checking whether path '${path}' exists: ${
+        (error as any)?.message ?? error
+      }`
     )
   }
 "
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",src/git-auth-helper.ts,2,2,4,"@@ -8,7 +8,7 @@ import * as path from 'path'
 import * as regexpHelper from './regexp-helper'
 import * as stateHelper from './state-helper'
 import * as urlHelper from './url-helper'
-import {default as uuid} from 'uuid/v4'
+import {v4 as uuid} from 'uuid'
 import {IGitCommandManager} from './git-command-manager'
 import {IGitSourceSettings} from './git-source-settings'
 
@@ -49,7 +49,7 @@ class GitAuthHelper {
     gitSourceSettings: IGitSourceSettings | undefined
   ) {
     this.git = gitCommandManager
-    this.settings = gitSourceSettings || (({} as unknown) as IGitSourceSettings)
+    this.settings = gitSourceSettings || ({} as unknown as IGitSourceSettings)
 
     // Token auth header
     const serverUrl = urlHelper.getServerUrl(this.settings.githubServerUrl)"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",src/github-api-helper.ts,1,1,2,"@@ -6,7 +6,7 @@ import * as io from '@actions/io'
 import * as path from 'path'
 import * as retryHelper from './retry-helper'
 import * as toolCache from '@actions/tool-cache'
-import {default as uuid} from 'uuid/v4'
+import {v4 as uuid} from 'uuid'
 import {getServerApiUrl} from './url-helper'
 
 const IS_WINDOWS = process.platform === 'win32'"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",src/input-helper.ts,3,2,5,"@@ -6,7 +6,7 @@ import * as workflowContextHelper from './workflow-context-helper'
 import {IGitSourceSettings} from './git-source-settings'
 
 export async function getInputs(): Promise<IGitSourceSettings> {
-  const result = ({} as unknown) as IGitSourceSettings
+  const result = {} as unknown as IGitSourceSettings
 
   // GitHub workspace
   let githubWorkspacePath = process.env['GITHUB_WORKSPACE']
@@ -150,7 +150,8 @@ export async function getInputs(): Promise<IGitSourceSettings> {
     (core.getInput('persist-credentials') || 'false').toUpperCase() === 'TRUE'
 
   // Workflow organization ID
-  result.workflowOrganizationId = await workflowContextHelper.getOrganizationId()
+  result.workflowOrganizationId =
+    await workflowContextHelper.getOrganizationId()
 
   // Set safe.directory in git global config.
   result.setSafeDirectory ="
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",src/misc/generate-docs.ts,1,1,2,"@@ -20,7 +20,7 @@ function updateUsage(
   }
 
   // Load the action.yml
-  const actionYaml = yaml.safeLoad(fs.readFileSync(actionYamlPath).toString())
+  const actionYaml = yaml.load(fs.readFileSync(actionYamlPath).toString())
 
   // Load the README
   const originalReadme = fs.readFileSync(readmePath).toString()"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",src/ref-helper.ts,1,1,2,"@@ -23,7 +23,7 @@ export async function getCheckoutInfo(
     throw new Error('Args ref and commit cannot both be empty')
   }
 
-  const result = ({} as unknown) as ICheckoutInfo
+  const result = {} as unknown as ICheckoutInfo
   const upperRef = (ref || '').toUpperCase()
 
   // SHA only"
actions/checkout,9c1e94e0ad997d618b6113a2171b055037589028,Cory Miller,2024-04-24T16:04:10Z,"Update NPM dependencies (#1703)

* Update dependencies manually
* Format files
* Update licenses",src/workflow-context-helper.ts,3,2,5,"@@ -23,8 +23,9 @@ export async function getOrganizationId(): Promise<number | undefined> {
     return id as number
   } catch (err) {
     core.debug(
-      `Unable to load organization ID from GITHUB_EVENT_PATH: ${(err as any)
-        .message || err}`
+      `Unable to load organization ID from GITHUB_EVENT_PATH: ${
+        (err as any).message || err
+      }`
     )
   }
 }"
actions/checkout,0ad4b8fadaa221de15dcec353f45205ec38ea70b,John Wesley Walker III,2024-04-24T13:29:05Z,"Prep Release v4.1.4 (#1704)

* Update package.json and package-lock.json to reflect v4.1.4
* Update CHANGELOG",CHANGELOG.md,11,0,11,"@@ -1,5 +1,16 @@
 # Changelog
 
+## v4.1.4
+- Disable `extensions.worktreeConfig` when disabling `sparse-checkout` by @jww3 in https://github.com/actions/checkout/pull/1692
+- Add dependabot config by @cory-miller in https://github.com/actions/checkout/pull/1688
+- Bump the minor-actions-dependencies group with 2 updates by @dependabot in https://github.com/actions/checkout/pull/1693
+- Bump word-wrap from 1.2.3 to 1.2.5 by @dependabot in https://github.com/actions/checkout/pull/1643
+
+## v4.1.3
+- Check git version before attempting to disable `sparse-checkout` by @jww3 in https://github.com/actions/checkout/pull/1656
+- Add SSH user parameter by @cory-miller in https://github.com/actions/checkout/pull/1685
+- Update `actions/checkout` version in `update-main-version.yml` by @jww3 in https://github.com/actions/checkout/pull/1650
+
 ## v4.1.2
 - Fix: Disable sparse checkout whenever `sparse-checkout` option is not present @dscho in https://github.com/actions/checkout/pull/1598
 "
actions/checkout,0ad4b8fadaa221de15dcec353f45205ec38ea70b,John Wesley Walker III,2024-04-24T13:29:05Z,"Prep Release v4.1.4 (#1704)

* Update package.json and package-lock.json to reflect v4.1.4
* Update CHANGELOG",package-lock.json,2,2,4,"@@ -1,12 +1,12 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.3"",
+  ""version"": ""4.1.4"",
   ""lockfileVersion"": 2,
   ""requires"": true,
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.1.3"",
+      ""version"": ""4.1.4"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.0"","
actions/checkout,0ad4b8fadaa221de15dcec353f45205ec38ea70b,John Wesley Walker III,2024-04-24T13:29:05Z,"Prep Release v4.1.4 (#1704)

* Update package.json and package-lock.json to reflect v4.1.4
* Update CHANGELOG",package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.3"",
+  ""version"": ""4.1.4"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {"
actions/checkout,43045ae669be728bd34ed56fcd1a230c0dc4d8e2,John Wesley Walker III,2024-04-23T20:07:43Z,Disable `extensions.worktreeConfig` when disabling `sparse-checkout` (#1692),.github/workflows/test.yml,3,3,6,"@@ -8,7 +8,7 @@ on:
       - releases/*
 
 
-# Note that when you see patterns like ""ref: test-data/v2/basic"" within this workflow, 
+# Note that when you see patterns like ""ref: test-data/v2/basic"" within this workflow,
 # these refer to ""test-data"" branches on this actions/checkout repo.
 # (For example, test-data/v2/basic -> https://github.com/actions/checkout/tree/test-data/v2/basic)
 
@@ -37,7 +37,7 @@ jobs:
     steps:
       # Clone this repo
       - name: Checkout
-        uses: actions/checkout@v3
+        uses: actions/checkout@v4.1.1
 
       # Basic checkout
       - name: Checkout basic
@@ -257,7 +257,7 @@ jobs:
           path: basic
       - name: Verify basic
         run: __test__/verify-basic.sh --archive
-    
+
   test-git-container:
     runs-on: ubuntu-latest
     container: bitnami/git:latest"
actions/checkout,43045ae669be728bd34ed56fcd1a230c0dc4d8e2,John Wesley Walker III,2024-04-23T20:07:43Z,Disable `extensions.worktreeConfig` when disabling `sparse-checkout` (#1692),__test__/verify-basic.sh,14,0,14,"@@ -18,6 +18,20 @@ else
     exit 1
   fi
 
+  # Verify that sparse-checkout is disabled.
+  SPARSE_CHECKOUT_ENABLED=$(git -C ./basic config --local --get-all core.sparseCheckout)
+  if [ ""$SPARSE_CHECKOUT_ENABLED"" != """" ]; then
+    echo ""Expected sparse-checkout to be disabled (discovered: $SPARSE_CHECKOUT_ENABLED)""
+    exit 1
+  fi
+
+  # Verify git configuration shows worktreeConfig is effectively disabled
+  WORKTREE_CONFIG_ENABLED=$(git -C ./basic config --local --get-all extensions.worktreeConfig)
+  if [[ ""$WORKTREE_CONFIG_ENABLED"" != """" ]]; then
+    echo ""Expected extensions.worktreeConfig (boolean) to be disabled in git config.  This could be an artifact of sparse checkout functionality.""
+    exit 1
+  fi
+
   # Verify auth token
   cd basic
   git fetch --no-tags --depth=1 origin +refs/heads/main:refs/remotes/origin/main"
actions/checkout,43045ae669be728bd34ed56fcd1a230c0dc4d8e2,John Wesley Walker III,2024-04-23T20:07:43Z,Disable `extensions.worktreeConfig` when disabling `sparse-checkout` (#1692),dist/index.js,2,0,2,"@@ -582,6 +582,8 @@ class GitCommandManager {
     disableSparseCheckout() {
         return __awaiter(this, void 0, void 0, function* () {
             yield this.execGit(['sparse-checkout', 'disable']);
+            // Disabling 'sparse-checkout` leaves behind an undesirable side-effect in config (even in a pristine environment).
+            yield this.tryConfigUnset('extensions.worktreeConfig', false);
         });
     }
     sparseCheckout(sparseCheckout) {"
actions/checkout,43045ae669be728bd34ed56fcd1a230c0dc4d8e2,John Wesley Walker III,2024-04-23T20:07:43Z,Disable `extensions.worktreeConfig` when disabling `sparse-checkout` (#1692),src/git-command-manager.ts,2,0,2,"@@ -178,6 +178,8 @@ class GitCommandManager {
 
   async disableSparseCheckout(): Promise<void> {
     await this.execGit(['sparse-checkout', 'disable'])
+    // Disabling 'sparse-checkout` leaves behind an undesirable side-effect in config (even in a pristine environment).
+    await this.tryConfigUnset('extensions.worktreeConfig', false)
   }
 
   async sparseCheckout(sparseCheckout: string[]): Promise<void> {"
actions/checkout,37b082107ba410260a3aaddf93122e04801ce631,dependabot[bot],2024-04-23T17:14:23Z,"Bump the minor-actions-dependencies group with 2 updates (#1693)

Bumps the minor-actions-dependencies group with 2 updates: [docker/login-action](https://github.com/docker/login-action) and [docker/build-push-action](https://github.com/docker/build-push-action).


Updates `docker/login-action` from 3.0.0 to 3.1.0
- [Release notes](https://github.com/docker/login-action/releases)
- [Commits](https://github.com/docker/login-action/compare/v3.0.0...v3.1.0)

Updates `docker/build-push-action` from 5.1.0 to 5.3.0
- [Release notes](https://github.com/docker/build-push-action/releases)
- [Commits](https://github.com/docker/build-push-action/compare/v5.1.0...v5.3.0)

---
updated-dependencies:
- dependency-name: docker/login-action
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: minor-actions-dependencies
- dependency-name: docker/build-push-action
  dependency-type: direct:production
  update-type: version-update:semver-minor
  dependency-group: minor-actions-dependencies
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",.github/workflows/update-test-ubuntu-git.yml,2,2,4,"@@ -31,7 +31,7 @@ jobs:
       # Use `docker/login-action` to log in to GHCR.io. 
       # Once published, the packages are scoped to the account defined here.
       - name: Log in to the ghcr.io container registry
-        uses: docker/login-action@v3.0.0
+        uses: docker/login-action@v3.1.0
         with:
           registry: ${{ env.REGISTRY }}
           username: ${{ github.actor }}
@@ -48,7 +48,7 @@ jobs:
 
       # Use `docker/build-push-action` to build (and optionally publish) the image. 
       - name: Build Docker Image (with optional Push)
-        uses: docker/build-push-action@v5.1.0
+        uses: docker/build-push-action@v5.3.0
         with:
           context: .
           file: images/test-ubuntu-git.Dockerfile"
actions/checkout,9839dc14a02ddc6b6995e69eb3ecb98132fc8b6b,Cory Miller,2024-04-23T17:02:51Z,"Add dependabot config (#1688)

* Add dependabot config
* Group minor and patch updates for NPM and GH Actions",.github/dependabot.yml,20,0,20,"@@ -0,0 +1,20 @@
+---
+version: 2
+
+updates:
+- package-ecosystem: ""npm""
+  directory: ""/""
+  schedule:
+    interval: ""weekly""
+  groups:
+    minor-npm-dependencies:
+      # NPM: Only group minor and patch updates (we want to carefully review major updates)
+      update-types: [minor, patch]
+- package-ecosystem: ""github-actions""
+  directory: ""/""
+  schedule:
+    interval: ""weekly""
+  groups:
+    minor-actions-dependencies:
+      # GitHub Actions: Only group minor and patch updates (we want to carefully review major updates)
+      update-types: [minor, patch]"
actions/checkout,9b4c13b0bfa31b4514c14f74b5a166c2708f43c6,dependabot[bot],2024-04-23T10:52:06Z,"Bump word-wrap from 1.2.3 to 1.2.5 (#1643)

Bumps [word-wrap](https://github.com/jonschlinkert/word-wrap) from 1.2.3 to 1.2.5.
- [Release notes](https://github.com/jonschlinkert/word-wrap/releases)
- [Commits](https://github.com/jonschlinkert/word-wrap/compare/1.2.3...1.2.5)

---
updated-dependencies:
- dependency-name: word-wrap
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",package-lock.json,6,6,12,"@@ -9129,9 +9129,9 @@
       }
     },
     ""node_modules/word-wrap"": {
-      ""version"": ""1.2.3"",
-      ""resolved"": ""https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz"",
-      ""integrity"": ""sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ=="",
+      ""version"": ""1.2.5"",
+      ""resolved"": ""https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz"",
+      ""integrity"": ""sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA=="",
       ""dev"": true,
       ""engines"": {
         ""node"": "">=0.10.0""
@@ -16055,9 +16055,9 @@
       }
     },
     ""word-wrap"": {
-      ""version"": ""1.2.3"",
-      ""resolved"": ""https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz"",
-      ""integrity"": ""sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ=="",
+      ""version"": ""1.2.5"",
+      ""resolved"": ""https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz"",
+      ""integrity"": ""sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA=="",
       ""dev"": true
     },
     ""wrap-ansi"": {"
actions/checkout,1d96c772d19495a3b5c517cd2bc0cb401ea0529f,Cory Miller,2024-04-18T19:29:55Z,"Add SSH user parameter (#1685)

* Add a configurable SSH user

* Update docs with param

* Indentation of readme

* formatting woes

* Update src/url-helper.ts

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update action.yml

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update genfiles

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",README.md,5,0,5,"@@ -62,6 +62,11 @@ Please refer to the [release page](https://github.com/actions/checkout/releases/
     # Default: true
     ssh-strict: ''
 
+    # The user to use when connecting to the remote SSH host. By default 'git' is
+    # used.
+    # Default: git
+    ssh-user: ''
+
     # Whether to configure the token or SSH key with the local git config
     # Default: true
     persist-credentials: ''"
actions/checkout,1d96c772d19495a3b5c517cd2bc0cb401ea0529f,Cory Miller,2024-04-18T19:29:55Z,"Add SSH user parameter (#1685)

* Add a configurable SSH user

* Update docs with param

* Indentation of readme

* formatting woes

* Update src/url-helper.ts

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update action.yml

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update genfiles

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",__test__/git-auth-helper.test.ts,1,0,1,"@@ -821,6 +821,7 @@ async function setup(testName: string): Promise<void> {
     sshKey: sshPath ? 'some ssh private key' : '',
     sshKnownHosts: '',
     sshStrict: true,
+    sshUser: '',
     workflowOrganizationId: 123456,
     setSafeDirectory: true,
     githubServerUrl: githubServerUrl"
actions/checkout,1d96c772d19495a3b5c517cd2bc0cb401ea0529f,Cory Miller,2024-04-18T19:29:55Z,"Add SSH user parameter (#1685)

* Add a configurable SSH user

* Update docs with param

* Indentation of readme

* formatting woes

* Update src/url-helper.ts

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update action.yml

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update genfiles

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",action.yml,4,0,4,"@@ -45,6 +45,10 @@ inputs:
       and `CheckHostIP=no` to the SSH command line. Use the input `ssh-known-hosts` to
       configure additional hosts.
     default: true
+  ssh-user:
+    description: >
+      The user to use when connecting to the remote SSH host. By default 'git' is used.
+    default: git
   persist-credentials:
     description: 'Whether to configure the token or SSH key with the local git config'
     default: true"
actions/checkout,1d96c772d19495a3b5c517cd2bc0cb401ea0529f,Cory Miller,2024-04-18T19:29:55Z,"Add SSH user parameter (#1685)

* Add a configurable SSH user

* Update docs with param

* Indentation of readme

* formatting woes

* Update src/url-helper.ts

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update action.yml

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update genfiles

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",dist/index.js,3,1,4,"@@ -1798,6 +1798,7 @@ function getInputs() {
         result.sshKnownHosts = core.getInput('ssh-known-hosts');
         result.sshStrict =
             (core.getInput('ssh-strict') || 'true').toUpperCase() === 'TRUE';
+        result.sshUser = core.getInput('ssh-user');
         // Persist credentials
         result.persistCredentials =
             (core.getInput('persist-credentials') || 'false').toUpperCase() === 'TRUE';
@@ -2400,7 +2401,8 @@ function getFetchUrl(settings) {
     const encodedOwner = encodeURIComponent(settings.repositoryOwner);
     const encodedName = encodeURIComponent(settings.repositoryName);
     if (settings.sshKey) {
-        return `git@${serviceUrl.hostname}:${encodedOwner}/${encodedName}.git`;
+        const user = settings.sshUser.length > 0 ? settings.sshUser : 'git';
+        return `${user}@${serviceUrl.hostname}:${encodedOwner}/${encodedName}.git`;
     }
     // ""origin"" is SCHEME://HOSTNAME[:PORT]
     return `${serviceUrl.origin}/${encodedOwner}/${encodedName}`;"
actions/checkout,1d96c772d19495a3b5c517cd2bc0cb401ea0529f,Cory Miller,2024-04-18T19:29:55Z,"Add SSH user parameter (#1685)

* Add a configurable SSH user

* Update docs with param

* Indentation of readme

* formatting woes

* Update src/url-helper.ts

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update action.yml

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update genfiles

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",src/git-source-settings.ts,5,0,5,"@@ -94,6 +94,11 @@ export interface IGitSourceSettings {
    */
   sshStrict: boolean
 
+  /**
+   * The SSH user to login as
+   */
+  sshUser: string
+
   /**
    * Indicates whether to persist the credentials on disk to enable scripting authenticated git commands
    */"
actions/checkout,1d96c772d19495a3b5c517cd2bc0cb401ea0529f,Cory Miller,2024-04-18T19:29:55Z,"Add SSH user parameter (#1685)

* Add a configurable SSH user

* Update docs with param

* Indentation of readme

* formatting woes

* Update src/url-helper.ts

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update action.yml

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update genfiles

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",src/input-helper.ts,1,0,1,"@@ -143,6 +143,7 @@ export async function getInputs(): Promise<IGitSourceSettings> {
   result.sshKnownHosts = core.getInput('ssh-known-hosts')
   result.sshStrict =
     (core.getInput('ssh-strict') || 'true').toUpperCase() === 'TRUE'
+  result.sshUser = core.getInput('ssh-user')
 
   // Persist credentials
   result.persistCredentials ="
actions/checkout,1d96c772d19495a3b5c517cd2bc0cb401ea0529f,Cory Miller,2024-04-18T19:29:55Z,"Add SSH user parameter (#1685)

* Add a configurable SSH user

* Update docs with param

* Indentation of readme

* formatting woes

* Update src/url-helper.ts

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update action.yml

Co-authored-by: Josh Gross <joshmgross@github.com>

* Update genfiles

---------

Co-authored-by: Josh Gross <joshmgross@github.com>",src/url-helper.ts,2,1,3,"@@ -12,7 +12,8 @@ export function getFetchUrl(settings: IGitSourceSettings): string {
   const encodedOwner = encodeURIComponent(settings.repositoryOwner)
   const encodedName = encodeURIComponent(settings.repositoryName)
   if (settings.sshKey) {
-    return `git@${serviceUrl.hostname}:${encodedOwner}/${encodedName}.git`
+    const user = settings.sshUser.length > 0 ? settings.sshUser : 'git'
+    return `${user}@${serviceUrl.hostname}:${encodedOwner}/${encodedName}.git`
   }
 
   // ""origin"" is SCHEME://HOSTNAME[:PORT]"
actions/checkout,cd7d8d697e10461458bc61a30d094dc601a8b017,John Wesley Walker III,2024-03-14T14:40:14Z,"Check git version before attempting to disable `sparse-checkout` (#1656)

* Check git version before attempting to disable `sparse-checkout`
* Bump `MinimumGitSparseCheckoutVersion` to 2.28 due to #1386
* Initial prep for release 4.1.3",__test__/git-auth-helper.test.ts,2,1,3,"@@ -796,7 +796,8 @@ async function setup(testName: string): Promise<void> {
     ),
     tryDisableAutomaticGarbageCollection: jest.fn(),
     tryGetFetchUrl: jest.fn(),
-    tryReset: jest.fn()
+    tryReset: jest.fn(),
+    version: jest.fn()
   }
 
   settings = {"
actions/checkout,cd7d8d697e10461458bc61a30d094dc601a8b017,John Wesley Walker III,2024-03-14T14:40:14Z,"Check git version before attempting to disable `sparse-checkout` (#1656)

* Check git version before attempting to disable `sparse-checkout`
* Bump `MinimumGitSparseCheckoutVersion` to 2.28 due to #1386
* Initial prep for release 4.1.3",__test__/git-directory-helper.test.ts,2,1,3,"@@ -501,6 +501,7 @@ async function setup(testName: string): Promise<void> {
     }),
     tryReset: jest.fn(async () => {
       return true
-    })
+    }),
+    version: jest.fn()
   }
 }"
actions/checkout,cd7d8d697e10461458bc61a30d094dc601a8b017,John Wesley Walker III,2024-03-14T14:40:14Z,"Check git version before attempting to disable `sparse-checkout` (#1656)

* Check git version before attempting to disable `sparse-checkout`
* Bump `MinimumGitSparseCheckoutVersion` to 2.28 due to #1386
* Initial prep for release 4.1.3",__test__/git-version.test.ts,42,1,43,"@@ -1,4 +1,5 @@
-import {GitVersion} from '../lib/git-version'
+import {GitVersion} from '../src/git-version'
+import {MinimumGitSparseCheckoutVersion} from '../src/git-command-manager'
 
 describe('git-version tests', () => {
   it('basics', async () => {
@@ -42,4 +43,44 @@ describe('git-version tests', () => {
     expect(version.checkMinimum(new GitVersion('5.1'))).toBeFalsy()
     expect(version.checkMinimum(new GitVersion('5.1.2'))).toBeFalsy()
   })
+
+  it('sparse checkout', async () => {
+    const minSparseVer = MinimumGitSparseCheckoutVersion
+    expect(new GitVersion('1.0').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('1.99').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.0').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.24').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.24.0').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.24.9').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.25').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.25.0').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.25.1').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.25.9').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.26').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.26.0').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.26.1').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.26.9').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.27').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.27.0').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.27.1').checkMinimum(minSparseVer)).toBeFalsy()
+    expect(new GitVersion('2.27.9').checkMinimum(minSparseVer)).toBeFalsy()
+    //                             /---------------------------------------
+    //         ^^^ before         /         after vvv
+    // --------------------------/
+    expect(new GitVersion('2.28').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('2.28.0').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('2.28.1').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('2.28.9').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('2.29').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('2.29.0').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('2.29.1').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('2.29.9').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('2.99').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('3.0').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('3.99').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('4.0').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('4.99').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('5.0').checkMinimum(minSparseVer)).toBeTruthy()
+    expect(new GitVersion('5.99').checkMinimum(minSparseVer)).toBeTruthy()
+  })
 })"
actions/checkout,cd7d8d697e10461458bc61a30d094dc601a8b017,John Wesley Walker III,2024-03-14T14:40:14Z,"Check git version before attempting to disable `sparse-checkout` (#1656)

* Check git version before attempting to disable `sparse-checkout`
* Bump `MinimumGitSparseCheckoutVersion` to 2.28 due to #1386
* Initial prep for release 4.1.3",dist/index.js,23,12,35,"@@ -467,7 +467,7 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 Object.defineProperty(exports, ""__esModule"", ({ value: true }));
-exports.createCommandManager = exports.MinimumGitVersion = void 0;
+exports.createCommandManager = exports.MinimumGitSparseCheckoutVersion = exports.MinimumGitVersion = void 0;
 const core = __importStar(__nccwpck_require__(2186));
 const exec = __importStar(__nccwpck_require__(1514));
 const fs = __importStar(__nccwpck_require__(7147));
@@ -480,7 +480,9 @@ const retryHelper = __importStar(__nccwpck_require__(2155));
 const git_version_1 = __nccwpck_require__(3142);
 // Auth header not supported before 2.9
 // Wire protocol v2 not supported before 2.18
+// sparse-checkout not [well-]supported before 2.28 (see https://github.com/actions/checkout/issues/1386)
 exports.MinimumGitVersion = new git_version_1.GitVersion('2.18');
+exports.MinimumGitSparseCheckoutVersion = new git_version_1.GitVersion('2.28');
 function createCommandManager(workingDirectory, lfs, doSparseCheckout) {
     return __awaiter(this, void 0, void 0, function* () {
         return yield GitCommandManager.createCommandManager(workingDirectory, lfs, doSparseCheckout);
@@ -498,6 +500,7 @@ class GitCommandManager {
         this.lfs = false;
         this.doSparseCheckout = false;
         this.workingDirectory = '';
+        this.gitVersion = new git_version_1.GitVersion();
     }
     branchDelete(remote, branch) {
         return __awaiter(this, void 0, void 0, function* () {
@@ -850,6 +853,11 @@ class GitCommandManager {
             return output.exitCode === 0;
         });
     }
+    version() {
+        return __awaiter(this, void 0, void 0, function* () {
+            return this.gitVersion;
+        });
+    }
     static createCommandManager(workingDirectory, lfs, doSparseCheckout) {
         return __awaiter(this, void 0, void 0, function* () {
             const result = new GitCommandManager();
@@ -901,21 +909,21 @@ class GitCommandManager {
             this.gitPath = yield io.which('git', true);
             // Git version
             core.debug('Getting git version');
-            let gitVersion = new git_version_1.GitVersion();
+            this.gitVersion = new git_version_1.GitVersion();
             let gitOutput = yield this.execGit(['version']);
             let stdout = gitOutput.stdout.trim();
             if (!stdout.includes('\n')) {
                 const match = stdout.match(/\d+\.\d+(\.\d+)?/);
                 if (match) {
-                    gitVersion = new git_version_1.GitVersion(match[0]);
+                    this.gitVersion = new git_version_1.GitVersion(match[0]);
                 }
             }
-            if (!gitVersion.isValid()) {
+            if (!this.gitVersion.isValid()) {
                 throw new Error('Unable to determine git version');
             }
             // Minimum git version
-            if (!gitVersion.checkMinimum(exports.MinimumGitVersion)) {
-                throw new Error(`Minimum required git version is ${exports.MinimumGitVersion}. Your git ('${this.gitPath}') is ${gitVersion}`);
+            if (!this.gitVersion.checkMinimum(exports.MinimumGitVersion)) {
+                throw new Error(`Minimum required git version is ${exports.MinimumGitVersion}. Your git ('${this.gitPath}') is ${this.gitVersion}`);
             }
             if (this.lfs) {
                 // Git-lfs version
@@ -943,14 +951,12 @@ class GitCommandManager {
             }
             this.doSparseCheckout = doSparseCheckout;
             if (this.doSparseCheckout) {
-                // The `git sparse-checkout` command was introduced in Git v2.25.0
-                const minimumGitSparseCheckoutVersion = new git_version_1.GitVersion('2.25');
-                if (!gitVersion.checkMinimum(minimumGitSparseCheckoutVersion)) {
-                    throw new Error(`Minimum Git version required for sparse checkout is ${minimumGitSparseCheckoutVersion}. Your git ('${this.gitPath}') is ${gitVersion}`);
+                if (!this.gitVersion.checkMinimum(exports.MinimumGitSparseCheckoutVersion)) {
+                    throw new Error(`Minimum Git version required for sparse checkout is ${exports.MinimumGitSparseCheckoutVersion}. Your git ('${this.gitPath}') is ${this.gitVersion}`);
                 }
             }
             // Set the user agent
-            const gitHttpUserAgent = `git/${gitVersion} (github-actions-checkout)`;
+            const gitHttpUserAgent = `git/${this.gitVersion} (github-actions-checkout)`;
             core.debug(`Set git useragent to: ${gitHttpUserAgent}`);
             this.gitEnv['GIT_HTTP_USER_AGENT'] = gitHttpUserAgent;
         });
@@ -1155,6 +1161,7 @@ const path = __importStar(__nccwpck_require__(1017));
 const refHelper = __importStar(__nccwpck_require__(8601));
 const stateHelper = __importStar(__nccwpck_require__(8647));
 const urlHelper = __importStar(__nccwpck_require__(9437));
+const git_command_manager_1 = __nccwpck_require__(738);
 function getSource(settings) {
     return __awaiter(this, void 0, void 0, function* () {
         // Repository URL
@@ -1288,7 +1295,11 @@ function getSource(settings) {
             }
             // Sparse checkout
             if (!settings.sparseCheckout) {
-                yield git.disableSparseCheckout();
+                let gitVersion = yield git.version();
+                // no need to disable sparse-checkout if the installed git runtime doesn't even support it.
+                if (gitVersion.checkMinimum(git_command_manager_1.MinimumGitSparseCheckoutVersion)) {
+                    yield git.disableSparseCheckout();
+                }
             }
             else {
                 core.startGroup('Setting up sparse checkout');"
actions/checkout,cd7d8d697e10461458bc61a30d094dc601a8b017,John Wesley Walker III,2024-03-14T14:40:14Z,"Check git version before attempting to disable `sparse-checkout` (#1656)

* Check git version before attempting to disable `sparse-checkout`
* Bump `MinimumGitSparseCheckoutVersion` to 2.28 due to #1386
* Initial prep for release 4.1.3",package-lock.json,2,2,4,"@@ -1,12 +1,12 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.2"",
+  ""version"": ""4.1.3"",
   ""lockfileVersion"": 2,
   ""requires"": true,
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.1.2"",
+      ""version"": ""4.1.3"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.0"","
actions/checkout,cd7d8d697e10461458bc61a30d094dc601a8b017,John Wesley Walker III,2024-03-14T14:40:14Z,"Check git version before attempting to disable `sparse-checkout` (#1656)

* Check git version before attempting to disable `sparse-checkout`
* Bump `MinimumGitSparseCheckoutVersion` to 2.28 due to #1386
* Initial prep for release 4.1.3",package.json,1,1,2,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.2"",
+  ""version"": ""4.1.3"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {"
actions/checkout,cd7d8d697e10461458bc61a30d094dc601a8b017,John Wesley Walker III,2024-03-14T14:40:14Z,"Check git version before attempting to disable `sparse-checkout` (#1656)

* Check git version before attempting to disable `sparse-checkout`
* Bump `MinimumGitSparseCheckoutVersion` to 2.28 due to #1386
* Initial prep for release 4.1.3",src/git-command-manager.ts,16,10,26,"@@ -11,7 +11,9 @@ import {GitVersion} from './git-version'
 
 // Auth header not supported before 2.9
 // Wire protocol v2 not supported before 2.18
+// sparse-checkout not [well-]supported before 2.28 (see https://github.com/actions/checkout/issues/1386)
 export const MinimumGitVersion = new GitVersion('2.18')
+export const MinimumGitSparseCheckoutVersion = new GitVersion('2.28')
 
 export interface IGitCommandManager {
   branchDelete(remote: boolean, branch: string): Promise<void>
@@ -60,6 +62,7 @@ export interface IGitCommandManager {
   tryDisableAutomaticGarbageCollection(): Promise<boolean>
   tryGetFetchUrl(): Promise<string>
   tryReset(): Promise<boolean>
+  version(): Promise<GitVersion>
 }
 
 export async function createCommandManager(
@@ -83,6 +86,7 @@ class GitCommandManager {
   private lfs = false
   private doSparseCheckout = false
   private workingDirectory = ''
+  private gitVersion: GitVersion = new GitVersion()
 
   // Private constructor; use createCommandManager()
   private constructor() {}
@@ -480,6 +484,10 @@ class GitCommandManager {
     return output.exitCode === 0
   }
 
+  async version(): Promise<GitVersion> {
+    return this.gitVersion
+  }
+
   static async createCommandManager(
     workingDirectory: string,
     lfs: boolean,
@@ -556,23 +564,23 @@ class GitCommandManager {
 
     // Git version
     core.debug('Getting git version')
-    let gitVersion = new GitVersion()
+    this.gitVersion = new GitVersion()
     let gitOutput = await this.execGit(['version'])
     let stdout = gitOutput.stdout.trim()
     if (!stdout.includes('\n')) {
       const match = stdout.match(/\d+\.\d+(\.\d+)?/)
       if (match) {
-        gitVersion = new GitVersion(match[0])
+        this.gitVersion = new GitVersion(match[0])
       }
     }
-    if (!gitVersion.isValid()) {
+    if (!this.gitVersion.isValid()) {
       throw new Error('Unable to determine git version')
     }
 
     // Minimum git version
-    if (!gitVersion.checkMinimum(MinimumGitVersion)) {
+    if (!this.gitVersion.checkMinimum(MinimumGitVersion)) {
       throw new Error(
-        `Minimum required git version is ${MinimumGitVersion}. Your git ('${this.gitPath}') is ${gitVersion}`
+        `Minimum required git version is ${MinimumGitVersion}. Your git ('${this.gitPath}') is ${this.gitVersion}`
       )
     }
 
@@ -606,16 +614,14 @@ class GitCommandManager {
 
     this.doSparseCheckout = doSparseCheckout
     if (this.doSparseCheckout) {
-      // The `git sparse-checkout` command was introduced in Git v2.25.0
-      const minimumGitSparseCheckoutVersion = new GitVersion('2.25')
-      if (!gitVersion.checkMinimum(minimumGitSparseCheckoutVersion)) {
+      if (!this.gitVersion.checkMinimum(MinimumGitSparseCheckoutVersion)) {
         throw new Error(
-          `Minimum Git version required for sparse checkout is ${minimumGitSparseCheckoutVersion}. Your git ('${this.gitPath}') is ${gitVersion}`
+          `Minimum Git version required for sparse checkout is ${MinimumGitSparseCheckoutVersion}. Your git ('${this.gitPath}') is ${this.gitVersion}`
         )
       }
     }
     // Set the user agent
-    const gitHttpUserAgent = `git/${gitVersion} (github-actions-checkout)`
+    const gitHttpUserAgent = `git/${this.gitVersion} (github-actions-checkout)`
     core.debug(`Set git useragent to: ${gitHttpUserAgent}`)
     this.gitEnv['GIT_HTTP_USER_AGENT'] = gitHttpUserAgent
   }"
actions/checkout,cd7d8d697e10461458bc61a30d094dc601a8b017,John Wesley Walker III,2024-03-14T14:40:14Z,"Check git version before attempting to disable `sparse-checkout` (#1656)

* Check git version before attempting to disable `sparse-checkout`
* Bump `MinimumGitSparseCheckoutVersion` to 2.28 due to #1386
* Initial prep for release 4.1.3",src/git-source-provider.ts,9,2,11,"@@ -9,7 +9,10 @@ import * as path from 'path'
 import * as refHelper from './ref-helper'
 import * as stateHelper from './state-helper'
 import * as urlHelper from './url-helper'
-import {IGitCommandManager} from './git-command-manager'
+import {
+  MinimumGitSparseCheckoutVersion,
+  IGitCommandManager
+} from './git-command-manager'
 import {IGitSourceSettings} from './git-source-settings'
 
 export async function getSource(settings: IGitSourceSettings): Promise<void> {
@@ -209,7 +212,11 @@ export async function getSource(settings: IGitSourceSettings): Promise<void> {
 
     // Sparse checkout
     if (!settings.sparseCheckout) {
-      await git.disableSparseCheckout()
+      let gitVersion = await git.version()
+      // no need to disable sparse-checkout if the installed git runtime doesn't even support it.
+      if (gitVersion.checkMinimum(MinimumGitSparseCheckoutVersion)) {
+        await git.disableSparseCheckout()
+      }
     } else {
       core.startGroup('Setting up sparse checkout')
       if (settings.sparseCheckoutConeMode) {"
actions/checkout,8410ad0602e1e429cee44a835ae9f77f654a6694,John Wesley Walker III,2024-03-12T11:39:30Z,Update `actions/checkout` version in `update-main-version.yml` (#1650),.github/workflows/update-main-version.yml,4,1,5,"@@ -19,7 +19,10 @@ jobs:
   tag:
     runs-on: ubuntu-latest
     steps:
-    - uses: actions/checkout@v3
+    # Note this update workflow can also be used as a rollback tool.
+    # For that reason, it's best to pin `actions/checkout` to a known, stable version
+    # (typically, about two releases back).
+    - uses: actions/checkout@v4.1.1
       with:
         fetch-depth: 0
     - name: Git config"
actions/checkout,9bb56186c3b09b4f86b1c65136769dd318469633,John Wesley Walker III,2024-03-12T11:11:01Z,"Prep for release of  v4.1.2  (#1649)

* Add v4.1.2 and v4.1.1 to CHANGELOG.md
* Bump version in package.json to 4.1.2
* Ran `npm i` to regenerate package-lock.json",CHANGELOG.md,7,0,7,"@@ -1,5 +1,12 @@
 # Changelog
 
+## v4.1.2
+- Fix: Disable sparse checkout whenever `sparse-checkout` option is not present @dscho in https://github.com/actions/checkout/pull/1598
+
+## v4.1.1
+- Correct link to GitHub Docs by @peterbe in https://github.com/actions/checkout/pull/1511
+- Link to release page from what's new section by @cory-miller in https://github.com/actions/checkout/pull/1514
+
 ## v4.1.0
 - [Add support for partial checkout filters](https://github.com/actions/checkout/pull/1396)
 "
actions/checkout,9bb56186c3b09b4f86b1c65136769dd318469633,John Wesley Walker III,2024-03-12T11:11:01Z,"Prep for release of  v4.1.2  (#1649)

* Add v4.1.2 and v4.1.1 to CHANGELOG.md
* Bump version in package.json to 4.1.2
* Ran `npm i` to regenerate package-lock.json",package-lock.json,2,2,4,"@@ -1,12 +1,12 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.0"",
+  ""version"": ""4.1.2"",
   ""lockfileVersion"": 2,
   ""requires"": true,
   ""packages"": {
     """": {
       ""name"": ""checkout"",
-      ""version"": ""4.1.0"",
+      ""version"": ""4.1.2"",
       ""license"": ""MIT"",
       ""dependencies"": {
         ""@actions/core"": ""^1.10.0"","
actions/checkout,9bb56186c3b09b4f86b1c65136769dd318469633,John Wesley Walker III,2024-03-12T11:11:01Z,"Prep for release of  v4.1.2  (#1649)

* Add v4.1.2 and v4.1.1 to CHANGELOG.md
* Bump version in package.json to 4.1.2
* Ran `npm i` to regenerate package-lock.json",package.json,2,2,4,"@@ -1,6 +1,6 @@
 {
   ""name"": ""checkout"",
-  ""version"": ""4.1.0"",
+  ""version"": ""4.1.2"",
   ""description"": ""checkout action"",
   ""main"": ""lib/main.js"",
   ""scripts"": {
@@ -52,4 +52,4 @@
     ""ts-jest"": ""^27.0.7"",
     ""typescript"": ""^4.4.4""
   }
-}
\ No newline at end of file
+}"
actions/checkout,8eb1f6a495037164bea451156472f35fdd6bafc0,dependabot[bot],2024-03-05T18:09:59Z,"Bump @babel/traverse from 7.20.5 to 7.24.0 (#1642)

Bumps [@babel/traverse](https://github.com/babel/babel/tree/HEAD/packages/babel-traverse) from 7.20.5 to 7.24.0.
- [Release notes](https://github.com/babel/babel/releases)
- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)
- [Commits](https://github.com/babel/babel/commits/v7.24.0/packages/babel-traverse)

---
updated-dependencies:
- dependency-name: ""@babel/traverse""
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",package-lock.json,130,126,256,"@@ -115,12 +115,13 @@
       }
     },
     ""node_modules/@babel/code-frame"": {
-      ""version"": ""7.18.6"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz"",
-      ""integrity"": ""sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q=="",
+      ""version"": ""7.23.5"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.23.5.tgz"",
+      ""integrity"": ""sha512-CgH3s1a96LipHCmSUmYFPwY7MNx8C3avkq7i4Wl3cfa662ldtUe4VM1TPXX70pfmrlWTb6jLqTYrZyT2ZTJBgA=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@babel/highlight"": ""^7.18.6""
+        ""@babel/highlight"": ""^7.23.4"",
+        ""chalk"": ""^2.4.2""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
@@ -175,13 +176,14 @@
       }
     },
     ""node_modules/@babel/generator"": {
-      ""version"": ""7.20.5"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/generator/-/generator-7.20.5.tgz"",
-      ""integrity"": ""sha512-jl7JY2Ykn9S0yj4DQP82sYvPU+T3g0HFcWTqDLqiuA9tGRNIj9VfbtXGAYTTkyNEnQk1jkMGOdYka8aG/lulCA=="",
+      ""version"": ""7.23.6"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/generator/-/generator-7.23.6.tgz"",
+      ""integrity"": ""sha512-qrSfCYxYQB5owCmGLbl8XRpX1ytXlpueOb0N0UmQwA073KZxejgQTzAmJezxvpwQD9uGtK2shHdi55QT+MbjIw=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@babel/types"": ""^7.20.5"",
+        ""@babel/types"": ""^7.23.6"",
         ""@jridgewell/gen-mapping"": ""^0.3.2"",
+        ""@jridgewell/trace-mapping"": ""^0.3.17"",
         ""jsesc"": ""^2.5.1""
       },
       ""engines"": {
@@ -230,34 +232,34 @@
       }
     },
     ""node_modules/@babel/helper-environment-visitor"": {
-      ""version"": ""7.18.9"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz"",
-      ""integrity"": ""sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg=="",
+      ""version"": ""7.22.20"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.22.20.tgz"",
+      ""integrity"": ""sha512-zfedSIzFhat/gFhWfHtgWvlec0nqB9YEIVrpuwjruLlXfUSnA8cJB0miHKwqDnQ7d32aKo2xt88/xZptwxbfhA=="",
       ""dev"": true,
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
     ""node_modules/@babel/helper-function-name"": {
-      ""version"": ""7.19.0"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.19.0.tgz"",
-      ""integrity"": ""sha512-WAwHBINyrpqywkUH0nTnNgI5ina5TFn85HKS0pbPDfxFfhyR/aNQEn4hGi1P1JyT//I0t4OgXUlofzWILRvS5w=="",
+      ""version"": ""7.23.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.23.0.tgz"",
+      ""integrity"": ""sha512-OErEqsrxjZTJciZ4Oo+eoZqeW9UIiOcuYKRJA4ZAgV9myA+pOXhhmpfNCKjEH/auVfEYVFJ6y1Tc4r0eIApqiw=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@babel/template"": ""^7.18.10"",
-        ""@babel/types"": ""^7.19.0""
+        ""@babel/template"": ""^7.22.15"",
+        ""@babel/types"": ""^7.23.0""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
     ""node_modules/@babel/helper-hoist-variables"": {
-      ""version"": ""7.18.6"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz"",
-      ""integrity"": ""sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q=="",
+      ""version"": ""7.22.5"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.22.5.tgz"",
+      ""integrity"": ""sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@babel/types"": ""^7.18.6""
+        ""@babel/types"": ""^7.22.5""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
@@ -313,30 +315,30 @@
       }
     },
     ""node_modules/@babel/helper-split-export-declaration"": {
-      ""version"": ""7.18.6"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz"",
-      ""integrity"": ""sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA=="",
+      ""version"": ""7.22.6"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.6.tgz"",
+      ""integrity"": ""sha512-AsUnxuLhRYsisFiaJwvp1QF+I3KjD5FOxut14q/GzovUe6orHLesW2C7d754kRm53h5gqrz6sFl6sxc4BVtE/g=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@babel/types"": ""^7.18.6""
+        ""@babel/types"": ""^7.22.5""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
     ""node_modules/@babel/helper-string-parser"": {
-      ""version"": ""7.19.4"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.19.4.tgz"",
-      ""integrity"": ""sha512-nHtDoQcuqFmwYNYPz3Rah5ph2p8PFeFCsZk9A/48dPc/rGocJ5J3hAAZ7pb76VWX3fZKu+uEr/FhH5jLx7umrw=="",
+      ""version"": ""7.23.4"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.23.4.tgz"",
+      ""integrity"": ""sha512-803gmbQdqwdf4olxrX4AJyFBV/RTr3rSmOj0rKwesmzlfhYNDEs+/iOcznzpNWlJlIlTJC2QfPFcHB6DlzdVLQ=="",
       ""dev"": true,
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
     ""node_modules/@babel/helper-validator-identifier"": {
-      ""version"": ""7.19.1"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz"",
-      ""integrity"": ""sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w=="",
+      ""version"": ""7.22.20"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz"",
+      ""integrity"": ""sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A=="",
       ""dev"": true,
       ""engines"": {
         ""node"": "">=6.9.0""
@@ -366,23 +368,23 @@
       }
     },
     ""node_modules/@babel/highlight"": {
-      ""version"": ""7.18.6"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz"",
-      ""integrity"": ""sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g=="",
+      ""version"": ""7.23.4"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/highlight/-/highlight-7.23.4.tgz"",
+      ""integrity"": ""sha512-acGdbYSfp2WheJoJm/EBBBLh/ID8KDc64ISZ9DYtBmC8/Q204PZJLHyzeB5qMzJ5trcOkybd78M4x2KWsUq++A=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@babel/helper-validator-identifier"": ""^7.18.6"",
-        ""chalk"": ""^2.0.0"",
+        ""@babel/helper-validator-identifier"": ""^7.22.20"",
+        ""chalk"": ""^2.4.2"",
         ""js-tokens"": ""^4.0.0""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
     ""node_modules/@babel/parser"": {
-      ""version"": ""7.20.5"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.20.5.tgz"",
-      ""integrity"": ""sha512-r27t/cy/m9uKLXQNWWebeCUHgnAZq0CpG1OwKRxzJMP1vpSU4bSIK2hq+/cp0bQxetkXx38n09rNu8jVkcK/zA=="",
+      ""version"": ""7.24.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.24.0.tgz"",
+      ""integrity"": ""sha512-QuP/FxEAzMSjXygs8v4N9dvdXzEHN4W1oF3PxuWAtPo08UdM17u89RDMgjLn/mlc56iM0HlLmVkO/wgR+rDgHg=="",
       ""dev"": true,
       ""bin"": {
         ""parser"": ""bin/babel-parser.js""
@@ -671,48 +673,48 @@
       }
     },
     ""node_modules/@babel/template"": {
-      ""version"": ""7.18.10"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.18.10.tgz"",
-      ""integrity"": ""sha512-TI+rCtooWHr3QJ27kJxfjutghu44DLnasDMwpDqCXVTal9RLp3RSYNh4NdBrRP2cQAoG9A8juOQl6P6oZG4JxA=="",
+      ""version"": ""7.24.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.24.0.tgz"",
+      ""integrity"": ""sha512-Bkf2q8lMB0AFpX0NFEqSbx1OkTHf0f+0j82mkw+ZpzBnkk7e9Ql0891vlfgi+kHwOk8tQjiQHpqh4LaSa0fKEA=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@babel/code-frame"": ""^7.18.6"",
-        ""@babel/parser"": ""^7.18.10"",
-        ""@babel/types"": ""^7.18.10""
+        ""@babel/code-frame"": ""^7.23.5"",
+        ""@babel/parser"": ""^7.24.0"",
+        ""@babel/types"": ""^7.24.0""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
     ""node_modules/@babel/traverse"": {
-      ""version"": ""7.20.5"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/traverse/-/traverse-7.20.5.tgz"",
-      ""integrity"": ""sha512-WM5ZNN3JITQIq9tFZaw1ojLU3WgWdtkxnhM1AegMS+PvHjkM5IXjmYEGY7yukz5XS4sJyEf2VzWjI8uAavhxBQ=="",
-      ""dev"": true,
-      ""dependencies"": {
-        ""@babel/code-frame"": ""^7.18.6"",
-        ""@babel/generator"": ""^7.20.5"",
-        ""@babel/helper-environment-visitor"": ""^7.18.9"",
-        ""@babel/helper-function-name"": ""^7.19.0"",
-        ""@babel/helper-hoist-variables"": ""^7.18.6"",
-        ""@babel/helper-split-export-declaration"": ""^7.18.6"",
-        ""@babel/parser"": ""^7.20.5"",
-        ""@babel/types"": ""^7.20.5"",
-        ""debug"": ""^4.1.0"",
+      ""version"": ""7.24.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/traverse/-/traverse-7.24.0.tgz"",
+      ""integrity"": ""sha512-HfuJlI8qq3dEDmNU5ChzzpZRWq+oxCZQyMzIMEqLho+AQnhMnKQUzH6ydo3RBl/YjPCuk68Y6s0Gx0AeyULiWw=="",
+      ""dev"": true,
+      ""dependencies"": {
+        ""@babel/code-frame"": ""^7.23.5"",
+        ""@babel/generator"": ""^7.23.6"",
+        ""@babel/helper-environment-visitor"": ""^7.22.20"",
+        ""@babel/helper-function-name"": ""^7.23.0"",
+        ""@babel/helper-hoist-variables"": ""^7.22.5"",
+        ""@babel/helper-split-export-declaration"": ""^7.22.6"",
+        ""@babel/parser"": ""^7.24.0"",
+        ""@babel/types"": ""^7.24.0"",
+        ""debug"": ""^4.3.1"",
         ""globals"": ""^11.1.0""
       },
       ""engines"": {
         ""node"": "">=6.9.0""
       }
     },
     ""node_modules/@babel/types"": {
-      ""version"": ""7.20.5"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.20.5.tgz"",
-      ""integrity"": ""sha512-c9fst/h2/dcF7H+MJKZ2T0KjEQ8hY/BNnDk/H3XY8C4Aw/eWQXWn/lWntHF9ooUBnGmEvbfGrTgLWc+um0YDUg=="",
+      ""version"": ""7.24.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.24.0.tgz"",
+      ""integrity"": ""sha512-+j7a5c253RfKh8iABBhywc8NSfP5LURe7Uh4qpsh6jc+aLJguvmIUBdjSdEMQv2bENrCR5MfRdjGo7vzS/ob7w=="",
       ""dev"": true,
       ""dependencies"": {
-        ""@babel/helper-string-parser"": ""^7.19.4"",
-        ""@babel/helper-validator-identifier"": ""^7.19.1"",
+        ""@babel/helper-string-parser"": ""^7.23.4"",
+        ""@babel/helper-validator-identifier"": ""^7.22.20"",
         ""to-fast-properties"": ""^2.0.0""
       },
       ""engines"": {
@@ -9355,12 +9357,13 @@
       }
     },
     ""@babel/code-frame"": {
-      ""version"": ""7.18.6"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.18.6.tgz"",
-      ""integrity"": ""sha512-TDCmlK5eOvH+eH7cdAFlNXeVJqWIQ7gW9tY1GJIpUtFb6CmjVyq2VM3u71bOyR8CRihcCgMUYoDNyLXao3+70Q=="",
+      ""version"": ""7.23.5"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.23.5.tgz"",
+      ""integrity"": ""sha512-CgH3s1a96LipHCmSUmYFPwY7MNx8C3avkq7i4Wl3cfa662ldtUe4VM1TPXX70pfmrlWTb6jLqTYrZyT2ZTJBgA=="",
       ""dev"": true,
       ""requires"": {
-        ""@babel/highlight"": ""^7.18.6""
+        ""@babel/highlight"": ""^7.23.4"",
+        ""chalk"": ""^2.4.2""
       }
     },
     ""@babel/compat-data"": {
@@ -9401,13 +9404,14 @@
       }
     },
     ""@babel/generator"": {
-      ""version"": ""7.20.5"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/generator/-/generator-7.20.5.tgz"",
-      ""integrity"": ""sha512-jl7JY2Ykn9S0yj4DQP82sYvPU+T3g0HFcWTqDLqiuA9tGRNIj9VfbtXGAYTTkyNEnQk1jkMGOdYka8aG/lulCA=="",
+      ""version"": ""7.23.6"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/generator/-/generator-7.23.6.tgz"",
+      ""integrity"": ""sha512-qrSfCYxYQB5owCmGLbl8XRpX1ytXlpueOb0N0UmQwA073KZxejgQTzAmJezxvpwQD9uGtK2shHdi55QT+MbjIw=="",
       ""dev"": true,
       ""requires"": {
-        ""@babel/types"": ""^7.20.5"",
+        ""@babel/types"": ""^7.23.6"",
         ""@jridgewell/gen-mapping"": ""^0.3.2"",
+        ""@jridgewell/trace-mapping"": ""^0.3.17"",
         ""jsesc"": ""^2.5.1""
       },
       ""dependencies"": {
@@ -9445,28 +9449,28 @@
       }
     },
     ""@babel/helper-environment-visitor"": {
-      ""version"": ""7.18.9"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.18.9.tgz"",
-      ""integrity"": ""sha512-3r/aACDJ3fhQ/EVgFy0hpj8oHyHpQc+LPtJoY9SzTThAsStm4Ptegq92vqKoE3vD706ZVFWITnMnxucw+S9Ipg=="",
+      ""version"": ""7.22.20"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-environment-visitor/-/helper-environment-visitor-7.22.20.tgz"",
+      ""integrity"": ""sha512-zfedSIzFhat/gFhWfHtgWvlec0nqB9YEIVrpuwjruLlXfUSnA8cJB0miHKwqDnQ7d32aKo2xt88/xZptwxbfhA=="",
       ""dev"": true
     },
     ""@babel/helper-function-name"": {
-      ""version"": ""7.19.0"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.19.0.tgz"",
-      ""integrity"": ""sha512-WAwHBINyrpqywkUH0nTnNgI5ina5TFn85HKS0pbPDfxFfhyR/aNQEn4hGi1P1JyT//I0t4OgXUlofzWILRvS5w=="",
+      ""version"": ""7.23.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.23.0.tgz"",
+      ""integrity"": ""sha512-OErEqsrxjZTJciZ4Oo+eoZqeW9UIiOcuYKRJA4ZAgV9myA+pOXhhmpfNCKjEH/auVfEYVFJ6y1Tc4r0eIApqiw=="",
       ""dev"": true,
       ""requires"": {
-        ""@babel/template"": ""^7.18.10"",
-        ""@babel/types"": ""^7.19.0""
+        ""@babel/template"": ""^7.22.15"",
+        ""@babel/types"": ""^7.23.0""
       }
     },
     ""@babel/helper-hoist-variables"": {
-      ""version"": ""7.18.6"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.18.6.tgz"",
-      ""integrity"": ""sha512-UlJQPkFqFULIcyW5sbzgbkxn2FKRgwWiRexcuaR8RNJRy8+LLveqPjwZV/bwrLZCN0eUHD/x8D0heK1ozuoo6Q=="",
+      ""version"": ""7.22.5"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.22.5.tgz"",
+      ""integrity"": ""sha512-wGjk9QZVzvknA6yKIUURb8zY3grXCcOZt+/7Wcy8O2uctxhplmUPkOdlgoNhmdVee2c92JXbf1xpMtVNbfoxRw=="",
       ""dev"": true,
       ""requires"": {
-        ""@babel/types"": ""^7.18.6""
+        ""@babel/types"": ""^7.22.5""
       }
     },
     ""@babel/helper-module-imports"": {
@@ -9510,24 +9514,24 @@
       }
     },
     ""@babel/helper-split-export-declaration"": {
-      ""version"": ""7.18.6"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.18.6.tgz"",
-      ""integrity"": ""sha512-bde1etTx6ZyTmobl9LLMMQsaizFVZrquTEHOqKeQESMKo4PlObf+8+JA25ZsIpZhT/WEd39+vOdLXAFG/nELpA=="",
+      ""version"": ""7.22.6"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.22.6.tgz"",
+      ""integrity"": ""sha512-AsUnxuLhRYsisFiaJwvp1QF+I3KjD5FOxut14q/GzovUe6orHLesW2C7d754kRm53h5gqrz6sFl6sxc4BVtE/g=="",
       ""dev"": true,
       ""requires"": {
-        ""@babel/types"": ""^7.18.6""
+        ""@babel/types"": ""^7.22.5""
       }
     },
     ""@babel/helper-string-parser"": {
-      ""version"": ""7.19.4"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.19.4.tgz"",
-      ""integrity"": ""sha512-nHtDoQcuqFmwYNYPz3Rah5ph2p8PFeFCsZk9A/48dPc/rGocJ5J3hAAZ7pb76VWX3fZKu+uEr/FhH5jLx7umrw=="",
+      ""version"": ""7.23.4"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.23.4.tgz"",
+      ""integrity"": ""sha512-803gmbQdqwdf4olxrX4AJyFBV/RTr3rSmOj0rKwesmzlfhYNDEs+/iOcznzpNWlJlIlTJC2QfPFcHB6DlzdVLQ=="",
       ""dev"": true
     },
     ""@babel/helper-validator-identifier"": {
-      ""version"": ""7.19.1"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.19.1.tgz"",
-      ""integrity"": ""sha512-awrNfaMtnHUr653GgGEs++LlAvW6w+DcPrOliSMXWCKo597CwL5Acf/wWdNkf/tfEQE3mjkeD1YOVZOUV/od1w=="",
+      ""version"": ""7.22.20"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz"",
+      ""integrity"": ""sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A=="",
       ""dev"": true
     },
     ""@babel/helper-validator-option"": {
@@ -9548,20 +9552,20 @@
       }
     },
     ""@babel/highlight"": {
-      ""version"": ""7.18.6"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/highlight/-/highlight-7.18.6.tgz"",
-      ""integrity"": ""sha512-u7stbOuYjaPezCuLj29hNW1v64M2Md2qupEKP1fHc7WdOA3DgLh37suiSrZYY7haUB7iBeQZ9P1uiRF359do3g=="",
+      ""version"": ""7.23.4"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/highlight/-/highlight-7.23.4.tgz"",
+      ""integrity"": ""sha512-acGdbYSfp2WheJoJm/EBBBLh/ID8KDc64ISZ9DYtBmC8/Q204PZJLHyzeB5qMzJ5trcOkybd78M4x2KWsUq++A=="",
       ""dev"": true,
       ""requires"": {
-        ""@babel/helper-validator-identifier"": ""^7.18.6"",
-        ""chalk"": ""^2.0.0"",
+        ""@babel/helper-validator-identifier"": ""^7.22.20"",
+        ""chalk"": ""^2.4.2"",
         ""js-tokens"": ""^4.0.0""
       }
     },
     ""@babel/parser"": {
-      ""version"": ""7.20.5"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.20.5.tgz"",
-      ""integrity"": ""sha512-r27t/cy/m9uKLXQNWWebeCUHgnAZq0CpG1OwKRxzJMP1vpSU4bSIK2hq+/cp0bQxetkXx38n09rNu8jVkcK/zA=="",
+      ""version"": ""7.24.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.24.0.tgz"",
+      ""integrity"": ""sha512-QuP/FxEAzMSjXygs8v4N9dvdXzEHN4W1oF3PxuWAtPo08UdM17u89RDMgjLn/mlc56iM0HlLmVkO/wgR+rDgHg=="",
       ""dev"": true
     },
     ""@babel/plugin-syntax-async-generators"": {
@@ -9786,42 +9790,42 @@
       }
     },
     ""@babel/template"": {
-      ""version"": ""7.18.10"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.18.10.tgz"",
-      ""integrity"": ""sha512-TI+rCtooWHr3QJ27kJxfjutghu44DLnasDMwpDqCXVTal9RLp3RSYNh4NdBrRP2cQAoG9A8juOQl6P6oZG4JxA=="",
+      ""version"": ""7.24.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.24.0.tgz"",
+      ""integrity"": ""sha512-Bkf2q8lMB0AFpX0NFEqSbx1OkTHf0f+0j82mkw+ZpzBnkk7e9Ql0891vlfgi+kHwOk8tQjiQHpqh4LaSa0fKEA=="",
       ""dev"": true,
       ""requires"": {
-        ""@babel/code-frame"": ""^7.18.6"",
-        ""@babel/parser"": ""^7.18.10"",
-        ""@babel/types"": ""^7.18.10""
+        ""@babel/code-frame"": ""^7.23.5"",
+        ""@babel/parser"": ""^7.24.0"",
+        ""@babel/types"": ""^7.24.0""
       }
     },
     ""@babel/traverse"": {
-      ""version"": ""7.20.5"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/traverse/-/traverse-7.20.5.tgz"",
-      ""integrity"": ""sha512-WM5ZNN3JITQIq9tFZaw1ojLU3WgWdtkxnhM1AegMS+PvHjkM5IXjmYEGY7yukz5XS4sJyEf2VzWjI8uAavhxBQ=="",
-      ""dev"": true,
-      ""requires"": {
-        ""@babel/code-frame"": ""^7.18.6"",
-        ""@babel/generator"": ""^7.20.5"",
-        ""@babel/helper-environment-visitor"": ""^7.18.9"",
-        ""@babel/helper-function-name"": ""^7.19.0"",
-        ""@babel/helper-hoist-variables"": ""^7.18.6"",
-        ""@babel/helper-split-export-declaration"": ""^7.18.6"",
-        ""@babel/parser"": ""^7.20.5"",
-        ""@babel/types"": ""^7.20.5"",
-        ""debug"": ""^4.1.0"",
+      ""version"": ""7.24.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/traverse/-/traverse-7.24.0.tgz"",
+      ""integrity"": ""sha512-HfuJlI8qq3dEDmNU5ChzzpZRWq+oxCZQyMzIMEqLho+AQnhMnKQUzH6ydo3RBl/YjPCuk68Y6s0Gx0AeyULiWw=="",
+      ""dev"": true,
+      ""requires"": {
+        ""@babel/code-frame"": ""^7.23.5"",
+        ""@babel/generator"": ""^7.23.6"",
+        ""@babel/helper-environment-visitor"": ""^7.22.20"",
+        ""@babel/helper-function-name"": ""^7.23.0"",
+        ""@babel/helper-hoist-variables"": ""^7.22.5"",
+        ""@babel/helper-split-export-declaration"": ""^7.22.6"",
+        ""@babel/parser"": ""^7.24.0"",
+        ""@babel/types"": ""^7.24.0"",
+        ""debug"": ""^4.3.1"",
         ""globals"": ""^11.1.0""
       }
     },
     ""@babel/types"": {
-      ""version"": ""7.20.5"",
-      ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.20.5.tgz"",
-      ""integrity"": ""sha512-c9fst/h2/dcF7H+MJKZ2T0KjEQ8hY/BNnDk/H3XY8C4Aw/eWQXWn/lWntHF9ooUBnGmEvbfGrTgLWc+um0YDUg=="",
+      ""version"": ""7.24.0"",
+      ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.24.0.tgz"",
+      ""integrity"": ""sha512-+j7a5c253RfKh8iABBhywc8NSfP5LURe7Uh4qpsh6jc+aLJguvmIUBdjSdEMQv2bENrCR5MfRdjGo7vzS/ob7w=="",
       ""dev"": true,
       ""requires"": {
-        ""@babel/helper-string-parser"": ""^7.19.4"",
-        ""@babel/helper-validator-identifier"": ""^7.19.1"",
+        ""@babel/helper-string-parser"": ""^7.23.4"",
+        ""@babel/helper-validator-identifier"": ""^7.22.20"",
         ""to-fast-properties"": ""^2.0.0""
       }
     },"
actions/checkout,556e4c3cb0b8b54b734286d5439adadcb0a8cb92,dependabot[bot],2024-03-05T17:49:25Z,"Bump tough-cookie from 4.0.0 to 4.1.3 (#1406)

Bumps [tough-cookie](https://github.com/salesforce/tough-cookie) from 4.0.0 to 4.1.3.
- [Release notes](https://github.com/salesforce/tough-cookie/releases)
- [Changelog](https://github.com/salesforce/tough-cookie/blob/master/CHANGELOG.md)
- [Commits](https://github.com/salesforce/tough-cookie/compare/v4.0.0...v4.1.3)

---
updated-dependencies:
- dependency-name: tough-cookie
  dependency-type: indirect
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",package-lock.json,60,14,74,"@@ -8141,6 +8141,12 @@
         ""url"": ""https://github.com/sponsors/ljharb""
       }
     },
+    ""node_modules/querystringify"": {
+      ""version"": ""2.2.0"",
+      ""resolved"": ""https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz"",
+      ""integrity"": ""sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ=="",
+      ""dev"": true
+    },
     ""node_modules/queue-microtask"": {
       ""version"": ""1.2.3"",
       ""resolved"": ""https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz"",
@@ -8191,6 +8197,12 @@
         ""node"": "">=0.10.0""
       }
     },
+    ""node_modules/requires-port"": {
+      ""version"": ""1.0.0"",
+      ""resolved"": ""https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz"",
+      ""integrity"": ""sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ=="",
+      ""dev"": true
+    },
     ""node_modules/resolve-cwd"": {
       ""version"": ""3.0.0"",
       ""resolved"": ""https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz"",
@@ -8713,14 +8725,15 @@
       }
     },
     ""node_modules/tough-cookie"": {
-      ""version"": ""4.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.0.0.tgz"",
-      ""integrity"": ""sha512-tHdtEpQCMrc1YLrMaqXXcj6AxhYi/xgit6mZu1+EDWUn+qhUf8wMQoFIy9NXuq23zAwtcB0t/MjACGR18pcRbg=="",
+      ""version"": ""4.1.3"",
+      ""resolved"": ""https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.3.tgz"",
+      ""integrity"": ""sha512-aX/y5pVRkfRnfmuX+OdbSdXvPe6ieKX/G2s7e98f4poJHnqH3281gDPm/metm6E/WRamfx7WC4HUqkWHfQHprw=="",
       ""dev"": true,
       ""dependencies"": {
         ""psl"": ""^1.1.33"",
         ""punycode"": ""^2.1.1"",
-        ""universalify"": ""^0.1.2""
+        ""universalify"": ""^0.2.0"",
+        ""url-parse"": ""^1.5.3""
       },
       ""engines"": {
         ""node"": "">=6""
@@ -8937,9 +8950,9 @@
       ""integrity"": ""sha512-isyNax3wXoKaulPDZWHQqbmIx1k2tb9fb3GGDBRxCscfYV2Ch7WxPArBsFEG8s/safwXTT7H4QGhaIkTp9447w==""
     },
     ""node_modules/universalify"": {
-      ""version"": ""0.1.2"",
-      ""resolved"": ""https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz"",
-      ""integrity"": ""sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg=="",
+      ""version"": ""0.2.0"",
+      ""resolved"": ""https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz"",
+      ""integrity"": ""sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg=="",
       ""dev"": true,
       ""engines"": {
         ""node"": "">= 4.0.0""
@@ -8980,6 +8993,16 @@
         ""punycode"": ""^2.1.0""
       }
     },
+    ""node_modules/url-parse"": {
+      ""version"": ""1.5.10"",
+      ""resolved"": ""https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz"",
+      ""integrity"": ""sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ=="",
+      ""dev"": true,
+      ""dependencies"": {
+        ""querystringify"": ""^2.1.1"",
+        ""requires-port"": ""^1.0.0""
+      }
+    },
     ""node_modules/uuid"": {
       ""version"": ""3.3.3"",
       ""resolved"": ""https://registry.npmjs.org/uuid/-/uuid-3.3.3.tgz"",
@@ -15300,6 +15323,12 @@
         ""side-channel"": ""^1.0.4""
       }
     },
+    ""querystringify"": {
+      ""version"": ""2.2.0"",
+      ""resolved"": ""https://registry.npmjs.org/querystringify/-/querystringify-2.2.0.tgz"",
+      ""integrity"": ""sha512-FIqgj2EUvTa7R50u0rGsyTftzjYmv/a3hO345bZNrqabNqjtgiDMgmo4mkUjd+nzU5oF3dClKqFIPUKybUyqoQ=="",
+      ""dev"": true
+    },
     ""queue-microtask"": {
       ""version"": ""1.2.3"",
       ""resolved"": ""https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz"",
@@ -15324,6 +15353,12 @@
       ""integrity"": ""sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw=="",
       ""dev"": true
     },
+    ""requires-port"": {
+      ""version"": ""1.0.0"",
+      ""resolved"": ""https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz"",
+      ""integrity"": ""sha512-KigOCHcocU3XODJxsu8i/j8T9tzT4adHiecwORRQ0ZZFcp7ahwXuRU1m+yuO90C5ZUyGeGfocHDI14M3L3yDAQ=="",
+      ""dev"": true
+    },
     ""resolve-cwd"": {
       ""version"": ""3.0.0"",
       ""resolved"": ""https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz"",
@@ -15720,14 +15755,15 @@
       }
     },
     ""tough-cookie"": {
-      ""version"": ""4.0.0"",
-      ""resolved"": ""https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.0.0.tgz"",
-      ""integrity"": ""sha512-tHdtEpQCMrc1YLrMaqXXcj6AxhYi/xgit6mZu1+EDWUn+qhUf8wMQoFIy9NXuq23zAwtcB0t/MjACGR18pcRbg=="",
+      ""version"": ""4.1.3"",
+      ""resolved"": ""https://registry.npmjs.org/tough-cookie/-/tough-cookie-4.1.3.tgz"",
+      ""integrity"": ""sha512-aX/y5pVRkfRnfmuX+OdbSdXvPe6ieKX/G2s7e98f4poJHnqH3281gDPm/metm6E/WRamfx7WC4HUqkWHfQHprw=="",
       ""dev"": true,
       ""requires"": {
         ""psl"": ""^1.1.33"",
         ""punycode"": ""^2.1.1"",
-        ""universalify"": ""^0.1.2""
+        ""universalify"": ""^0.2.0"",
+        ""url-parse"": ""^1.5.3""
       }
     },
     ""tr46"": {
@@ -15878,9 +15914,9 @@
       ""integrity"": ""sha512-isyNax3wXoKaulPDZWHQqbmIx1k2tb9fb3GGDBRxCscfYV2Ch7WxPArBsFEG8s/safwXTT7H4QGhaIkTp9447w==""
     },
     ""universalify"": {
-      ""version"": ""0.1.2"",
-      ""resolved"": ""https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz"",
-      ""integrity"": ""sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg=="",
+      ""version"": ""0.2.0"",
+      ""resolved"": ""https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz"",
+      ""integrity"": ""sha512-CJ1QgKmNg3CwvAv/kOFmtnEN05f0D/cn9QntgNOQlQF9dgvVTHj3t+8JPdjqawCHk7V/KA+fbUqzZ9XWhcqPUg=="",
       ""dev"": true
     },
     ""update-browserslist-db"": {
@@ -15902,6 +15938,16 @@
         ""punycode"": ""^2.1.0""
       }
     },
+    ""url-parse"": {
+      ""version"": ""1.5.10"",
+      ""resolved"": ""https://registry.npmjs.org/url-parse/-/url-parse-1.5.10.tgz"",
+      ""integrity"": ""sha512-WypcfiRhfeUP9vvF0j6rw0J3hrWrw6iZv3+22h6iRMJ/8z1Tj6XfLP4DsUix5MhMPnXpiHDoKyoZ/bdCkwBCiQ=="",
+      ""dev"": true,
+      ""requires"": {
+        ""querystringify"": ""^2.1.1"",
+        ""requires-port"": ""^1.0.0""
+      }
+    },
     ""uuid"": {
       ""version"": ""3.3.3"",
       ""resolved"": ""https://registry.npmjs.org/uuid/-/uuid-3.3.3.tgz"","
actions/checkout,b32f140b0c872d58512e0a66172253c302617b90,John Wesley Walker III,2024-02-22T13:38:58Z,"Warn on attempts to publish `test-ubuntu-git` from non-main branch. (#1623)

* Warn on attempts to publish test-ubuntu-git from non-main branch.
* Rename build step to clarify that Push is optional.",.github/workflows/update-test-ubuntu-git.yml,5,1,6,"@@ -42,8 +42,12 @@ jobs:
         # Use `date` with a custom format to achieve the key=value format GITHUB_OUTPUT expects.
         run: date -u ""+now=%Y%m%d.%H%M%S.%3NZ"" >> ""$GITHUB_OUTPUT""
 
+      - name: Issue Image Publish Warning
+        if:  ${{ inputs.publish && github.ref_name != 'main' }}
+        run: echo ""::warning::test-ubuntu-git images can only be published from the actions/checkout 'main' branch.  Workflow will continue with push/publish disabled.""
+
       # Use `docker/build-push-action` to build (and optionally publish) the image. 
-      - name: Build and push Docker image
+      - name: Build Docker Image (with optional Push)
         uses: docker/build-push-action@v5.1.0
         with:
           context: ."
actions/checkout,2650dbd060003e3b5ae211e4358852f336b682a7,John Wesley Walker III,2024-02-22T09:59:35Z,"Give `test-ubuntu-git` its own `README` (#1620)

* Give `test-ubuntu-git` its own `README`
* Refined title and description in `test-ubuntu-git.Dockerfile`
* nit accepted:  Remove double space

---------

Co-authored-by: Ferenc Hammerl <31069338+fhammerl@users.noreply.github.com>",images/test-ubuntu-git.Dockerfile,3,1,4,"@@ -6,5 +6,7 @@ FROM ubuntu:latest
 RUN apt update
 RUN apt install -y git
 
-LABEL org.opencontainers.image.description=""Ubuntu image with git pre-installed""
+LABEL org.opencontainers.image.title=""Ubuntu + git (validation image)""
+LABEL org.opencontainers.image.description=""Ubuntu image with git pre-installed. Intended primarily for testing `actions/checkout` during CI/CD workflows.""
+LABEL org.opencontainers.image.documentation=""https://github.com/actions/checkout/tree/main/images/test-ubuntu-git.md""
 LABEL org.opencontainers.image.licenses=MIT"
actions/checkout,2650dbd060003e3b5ae211e4358852f336b682a7,John Wesley Walker III,2024-02-22T09:59:35Z,"Give `test-ubuntu-git` its own `README` (#1620)

* Give `test-ubuntu-git` its own `README`
* Refined title and description in `test-ubuntu-git.Dockerfile`
* nit accepted:  Remove double space

---------

Co-authored-by: Ferenc Hammerl <31069338+fhammerl@users.noreply.github.com>",images/test-ubuntu-git.md,15,0,15,"@@ -0,0 +1,15 @@
+# `test-ubuntu-git` Container Image
+
+[![Publish test-ubuntu-git Container](https://github.com/actions/checkout/actions/workflows/update-test-ubuntu-git.yml/badge.svg)](https://github.com/actions/checkout/actions/workflows/update-test-ubuntu-git.yml)
+
+## Purpose
+
+`test-ubuntu-git` is a container image hosted on the GitHub Container Registry, `ghcr.io`.  
+
+It is intended primarily for testing the [`actions/checkout` repository](https://github.com/actions/checkout) as part of `actions/checkout`'s CI/CD workflows.
+
+The composition of `test-ubuntu-git` is intentionally minimal.  It is comprised of [git](https://git-scm.com/) installed on top of a [base-level ubuntu image](https://hub.docker.com/_/ubuntu/tags).
+
+# License
+
+`test-ubuntu-git` is released under the [MIT License](/LICENSE)."
actions/checkout,aadec899646c8e0f34c52d9219c2faac36626b55,Johannes Schindelin,2024-02-21T12:56:19Z,"Explicitly disable sparse checkout unless asked for (#1598)

When a worktree is reused by actions/checkout and the first time sparse checkout was enabled, we need to ensure that the second time it is only a sparse checkout if explicitly asked for. Otherwise, we need to disable the sparse checkout so that a full checkout is the outcome of this Action.

## Details
* If no `sparse-checkout` parameter is specified, disable it

This should allow users to reuse existing folders when running
`actions/checkout` where a previous run asked for a sparse checkout but
the current run does not ask for a sparse checkout.

This fixes https://github.com/actions/checkout/issues/1475

There are use cases in particular with non-ephemeral (self-hosted) runners where an
existing worktree (that has been initialized as a sparse checkout) is
reused in subsequent CI runs (where `actions/checkout` is run _without_
any `sparse-checkout` parameter).

In these scenarios, we need to make sure that the sparse checkout is
disabled before checking out the files.

### Also includes:

* npm run build
* ci: verify that an existing sparse checkout can be made unsparse
* Added a clarifying comment about test branches.
* `test-proxy` now uses newly-minted `test-ubuntu-git` container image from ghcr.io

---------

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
Co-authored-by: John Wesley Walker III <81404201+jww3@users.noreply.github.com>",.github/workflows/test.yml,17,2,19,"@@ -7,6 +7,11 @@ on:
       - main
       - releases/*
 
+
+# Note that when you see patterns like ""ref: test-data/v2/basic"" within this workflow, 
+# these refer to ""test-data"" branches on this actions/checkout repo.
+# (For example, test-data/v2/basic -> https://github.com/actions/checkout/tree/test-data/v2/basic)
+
 jobs:
   build:
     runs-on: ubuntu-latest
@@ -95,6 +100,16 @@ jobs:
       - name: Verify sparse checkout
         run: __test__/verify-sparse-checkout.sh
 
+      # Disabled sparse checkout in existing checkout
+      - name: Disabled sparse checkout
+        uses: ./
+        with:
+          path: sparse-checkout
+
+      - name: Verify disabled sparse checkout
+        shell: bash
+        run: set -x && ls -l sparse-checkout/src/git-command-manager.ts
+
       # Sparse checkout (non-cone mode)
       - name: Sparse checkout (non-cone mode)
         uses: ./
@@ -175,7 +190,7 @@ jobs:
   test-proxy:
     runs-on: ubuntu-latest
     container:
-      image: alpine/git:latest
+      image: ghcr.io/actions/test-ubuntu-git:main.20240221.114913.703z
       options: --dns 127.0.0.1
     services:
       squid-proxy:
@@ -279,4 +294,4 @@ jobs:
       - name: Fix Checkout v3
         uses: actions/checkout@v3
         with:
-          path: v3
\ No newline at end of file
+          path: v3"
actions/checkout,aadec899646c8e0f34c52d9219c2faac36626b55,Johannes Schindelin,2024-02-21T12:56:19Z,"Explicitly disable sparse checkout unless asked for (#1598)

When a worktree is reused by actions/checkout and the first time sparse checkout was enabled, we need to ensure that the second time it is only a sparse checkout if explicitly asked for. Otherwise, we need to disable the sparse checkout so that a full checkout is the outcome of this Action.

## Details
* If no `sparse-checkout` parameter is specified, disable it

This should allow users to reuse existing folders when running
`actions/checkout` where a previous run asked for a sparse checkout but
the current run does not ask for a sparse checkout.

This fixes https://github.com/actions/checkout/issues/1475

There are use cases in particular with non-ephemeral (self-hosted) runners where an
existing worktree (that has been initialized as a sparse checkout) is
reused in subsequent CI runs (where `actions/checkout` is run _without_
any `sparse-checkout` parameter).

In these scenarios, we need to make sure that the sparse checkout is
disabled before checking out the files.

### Also includes:

* npm run build
* ci: verify that an existing sparse checkout can be made unsparse
* Added a clarifying comment about test branches.
* `test-proxy` now uses newly-minted `test-ubuntu-git` container image from ghcr.io

---------

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
Co-authored-by: John Wesley Walker III <81404201+jww3@users.noreply.github.com>",__test__/git-auth-helper.test.ts,1,0,1,"@@ -727,6 +727,7 @@ async function setup(testName: string): Promise<void> {
     branchDelete: jest.fn(),
     branchExists: jest.fn(),
     branchList: jest.fn(),
+    disableSparseCheckout: jest.fn(),
     sparseCheckout: jest.fn(),
     sparseCheckoutNonConeMode: jest.fn(),
     checkout: jest.fn(),"
actions/checkout,aadec899646c8e0f34c52d9219c2faac36626b55,Johannes Schindelin,2024-02-21T12:56:19Z,"Explicitly disable sparse checkout unless asked for (#1598)

When a worktree is reused by actions/checkout and the first time sparse checkout was enabled, we need to ensure that the second time it is only a sparse checkout if explicitly asked for. Otherwise, we need to disable the sparse checkout so that a full checkout is the outcome of this Action.

## Details
* If no `sparse-checkout` parameter is specified, disable it

This should allow users to reuse existing folders when running
`actions/checkout` where a previous run asked for a sparse checkout but
the current run does not ask for a sparse checkout.

This fixes https://github.com/actions/checkout/issues/1475

There are use cases in particular with non-ephemeral (self-hosted) runners where an
existing worktree (that has been initialized as a sparse checkout) is
reused in subsequent CI runs (where `actions/checkout` is run _without_
any `sparse-checkout` parameter).

In these scenarios, we need to make sure that the sparse checkout is
disabled before checking out the files.

### Also includes:

* npm run build
* ci: verify that an existing sparse checkout can be made unsparse
* Added a clarifying comment about test branches.
* `test-proxy` now uses newly-minted `test-ubuntu-git` container image from ghcr.io

---------

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
Co-authored-by: John Wesley Walker III <81404201+jww3@users.noreply.github.com>",__test__/git-directory-helper.test.ts,1,0,1,"@@ -462,6 +462,7 @@ async function setup(testName: string): Promise<void> {
     branchList: jest.fn(async () => {
       return []
     }),
+    disableSparseCheckout: jest.fn(),
     sparseCheckout: jest.fn(),
     sparseCheckoutNonConeMode: jest.fn(),
     checkout: jest.fn(),"
actions/checkout,aadec899646c8e0f34c52d9219c2faac36626b55,Johannes Schindelin,2024-02-21T12:56:19Z,"Explicitly disable sparse checkout unless asked for (#1598)

When a worktree is reused by actions/checkout and the first time sparse checkout was enabled, we need to ensure that the second time it is only a sparse checkout if explicitly asked for. Otherwise, we need to disable the sparse checkout so that a full checkout is the outcome of this Action.

## Details
* If no `sparse-checkout` parameter is specified, disable it

This should allow users to reuse existing folders when running
`actions/checkout` where a previous run asked for a sparse checkout but
the current run does not ask for a sparse checkout.

This fixes https://github.com/actions/checkout/issues/1475

There are use cases in particular with non-ephemeral (self-hosted) runners where an
existing worktree (that has been initialized as a sparse checkout) is
reused in subsequent CI runs (where `actions/checkout` is run _without_
any `sparse-checkout` parameter).

In these scenarios, we need to make sure that the sparse checkout is
disabled before checking out the files.

### Also includes:

* npm run build
* ci: verify that an existing sparse checkout can be made unsparse
* Added a clarifying comment about test branches.
* `test-proxy` now uses newly-minted `test-ubuntu-git` container image from ghcr.io

---------

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
Co-authored-by: John Wesley Walker III <81404201+jww3@users.noreply.github.com>",dist/index.js,9,1,10,"@@ -576,6 +576,11 @@ class GitCommandManager {
             return result;
         });
     }
+    disableSparseCheckout() {
+        return __awaiter(this, void 0, void 0, function* () {
+            yield this.execGit(['sparse-checkout', 'disable']);
+        });
+    }
     sparseCheckout(sparseCheckout) {
         return __awaiter(this, void 0, void 0, function* () {
             yield this.execGit(['sparse-checkout', 'set', ...sparseCheckout]);
@@ -1282,7 +1287,10 @@ function getSource(settings) {
                 core.endGroup();
             }
             // Sparse checkout
-            if (settings.sparseCheckout) {
+            if (!settings.sparseCheckout) {
+                yield git.disableSparseCheckout();
+            }
+            else {
                 core.startGroup('Setting up sparse checkout');
                 if (settings.sparseCheckoutConeMode) {
                     yield git.sparseCheckout(settings.sparseCheckout);"
actions/checkout,aadec899646c8e0f34c52d9219c2faac36626b55,Johannes Schindelin,2024-02-21T12:56:19Z,"Explicitly disable sparse checkout unless asked for (#1598)

When a worktree is reused by actions/checkout and the first time sparse checkout was enabled, we need to ensure that the second time it is only a sparse checkout if explicitly asked for. Otherwise, we need to disable the sparse checkout so that a full checkout is the outcome of this Action.

## Details
* If no `sparse-checkout` parameter is specified, disable it

This should allow users to reuse existing folders when running
`actions/checkout` where a previous run asked for a sparse checkout but
the current run does not ask for a sparse checkout.

This fixes https://github.com/actions/checkout/issues/1475

There are use cases in particular with non-ephemeral (self-hosted) runners where an
existing worktree (that has been initialized as a sparse checkout) is
reused in subsequent CI runs (where `actions/checkout` is run _without_
any `sparse-checkout` parameter).

In these scenarios, we need to make sure that the sparse checkout is
disabled before checking out the files.

### Also includes:

* npm run build
* ci: verify that an existing sparse checkout can be made unsparse
* Added a clarifying comment about test branches.
* `test-proxy` now uses newly-minted `test-ubuntu-git` container image from ghcr.io

---------

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
Co-authored-by: John Wesley Walker III <81404201+jww3@users.noreply.github.com>",src/git-command-manager.ts,5,0,5,"@@ -17,6 +17,7 @@ export interface IGitCommandManager {
   branchDelete(remote: boolean, branch: string): Promise<void>
   branchExists(remote: boolean, pattern: string): Promise<boolean>
   branchList(remote: boolean): Promise<string[]>
+  disableSparseCheckout(): Promise<void>
   sparseCheckout(sparseCheckout: string[]): Promise<void>
   sparseCheckoutNonConeMode(sparseCheckout: string[]): Promise<void>
   checkout(ref: string, startPoint: string): Promise<void>
@@ -171,6 +172,10 @@ class GitCommandManager {
     return result
   }
 
+  async disableSparseCheckout(): Promise<void> {
+    await this.execGit(['sparse-checkout', 'disable'])
+  }
+
   async sparseCheckout(sparseCheckout: string[]): Promise<void> {
     await this.execGit(['sparse-checkout', 'set', ...sparseCheckout])
   }"
actions/checkout,aadec899646c8e0f34c52d9219c2faac36626b55,Johannes Schindelin,2024-02-21T12:56:19Z,"Explicitly disable sparse checkout unless asked for (#1598)

When a worktree is reused by actions/checkout and the first time sparse checkout was enabled, we need to ensure that the second time it is only a sparse checkout if explicitly asked for. Otherwise, we need to disable the sparse checkout so that a full checkout is the outcome of this Action.

## Details
* If no `sparse-checkout` parameter is specified, disable it

This should allow users to reuse existing folders when running
`actions/checkout` where a previous run asked for a sparse checkout but
the current run does not ask for a sparse checkout.

This fixes https://github.com/actions/checkout/issues/1475

There are use cases in particular with non-ephemeral (self-hosted) runners where an
existing worktree (that has been initialized as a sparse checkout) is
reused in subsequent CI runs (where `actions/checkout` is run _without_
any `sparse-checkout` parameter).

In these scenarios, we need to make sure that the sparse checkout is
disabled before checking out the files.

### Also includes:

* npm run build
* ci: verify that an existing sparse checkout can be made unsparse
* Added a clarifying comment about test branches.
* `test-proxy` now uses newly-minted `test-ubuntu-git` container image from ghcr.io

---------

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
Co-authored-by: John Wesley Walker III <81404201+jww3@users.noreply.github.com>",src/git-source-provider.ts,3,1,4,"@@ -208,7 +208,9 @@ export async function getSource(settings: IGitSourceSettings): Promise<void> {
     }
 
     // Sparse checkout
-    if (settings.sparseCheckout) {
+    if (!settings.sparseCheckout) {
+      await git.disableSparseCheckout()
+    } else {
       core.startGroup('Setting up sparse checkout')
       if (settings.sparseCheckoutConeMode) {
         await git.sparseCheckout(settings.sparseCheckout)"
kubernetes/kubernetes,3a53784ecbe4bed2aa0cbc159acbb56add05eef9,Kubernetes Prow Robot,2025-10-07T15:55:02Z,"Merge pull request #133876 from kei01234kei/make_v1_version_fist_priotiry_inresource

make v1 resource version first priority in resource",api/discovery/apis__resource.k8s.io__v1.json,4,4,8,"@@ -8,7 +8,7 @@
       ""name"": ""deviceclasses"",
       ""namespaced"": false,
       ""singularName"": ""deviceclass"",
-      ""storageVersionHash"": ""weQRMT6DeYM="",
+      ""storageVersionHash"": ""Yk2PTc1Ybxk="",
       ""verbs"": [
         ""create"",
         ""delete"",
@@ -25,7 +25,7 @@
       ""name"": ""resourceclaims"",
       ""namespaced"": true,
       ""singularName"": ""resourceclaim"",
-      ""storageVersionHash"": ""EJAWH5WrAYg="",
+      ""storageVersionHash"": ""wgAZaHcZxUg="",
       ""verbs"": [
         ""create"",
         ""delete"",
@@ -53,7 +53,7 @@
       ""name"": ""resourceclaimtemplates"",
       ""namespaced"": true,
       ""singularName"": ""resourceclaimtemplate"",
-      ""storageVersionHash"": ""24m0okHrUtk="",
+      ""storageVersionHash"": ""TuzjC49aUfM="",
       ""verbs"": [
         ""create"",
         ""delete"",
@@ -70,7 +70,7 @@
       ""name"": ""resourceslices"",
       ""namespaced"": false,
       ""singularName"": ""resourceslice"",
-      ""storageVersionHash"": ""z6Bc9vgk6yE="",
+      ""storageVersionHash"": ""KsC072WgaEY="",
       ""verbs"": [
         ""create"",
         ""delete"","
kubernetes/kubernetes,3a53784ecbe4bed2aa0cbc159acbb56add05eef9,Kubernetes Prow Robot,2025-10-07T15:55:02Z,"Merge pull request #133876 from kei01234kei/make_v1_version_fist_priotiry_inresource

make v1 resource version first priority in resource",api/discovery/apis__resource.k8s.io__v1beta1.json,4,4,8,"@@ -8,7 +8,7 @@
       ""name"": ""deviceclasses"",
       ""namespaced"": false,
       ""singularName"": ""deviceclass"",
-      ""storageVersionHash"": ""weQRMT6DeYM="",
+      ""storageVersionHash"": ""Yk2PTc1Ybxk="",
       ""verbs"": [
         ""create"",
         ""delete"",
@@ -25,7 +25,7 @@
       ""name"": ""resourceclaims"",
       ""namespaced"": true,
       ""singularName"": ""resourceclaim"",
-      ""storageVersionHash"": ""EJAWH5WrAYg="",
+      ""storageVersionHash"": ""wgAZaHcZxUg="",
       ""verbs"": [
         ""create"",
         ""delete"",
@@ -53,7 +53,7 @@
       ""name"": ""resourceclaimtemplates"",
       ""namespaced"": true,
       ""singularName"": ""resourceclaimtemplate"",
-      ""storageVersionHash"": ""24m0okHrUtk="",
+      ""storageVersionHash"": ""TuzjC49aUfM="",
       ""verbs"": [
         ""create"",
         ""delete"",
@@ -70,7 +70,7 @@
       ""name"": ""resourceslices"",
       ""namespaced"": false,
       ""singularName"": ""resourceslice"",
-      ""storageVersionHash"": ""z6Bc9vgk6yE="",
+      ""storageVersionHash"": ""KsC072WgaEY="",
       ""verbs"": [
         ""create"",
         ""delete"","
kubernetes/kubernetes,3a53784ecbe4bed2aa0cbc159acbb56add05eef9,Kubernetes Prow Robot,2025-10-07T15:55:02Z,"Merge pull request #133876 from kei01234kei/make_v1_version_fist_priotiry_inresource

make v1 resource version first priority in resource",api/discovery/apis__resource.k8s.io__v1beta2.json,4,4,8,"@@ -8,7 +8,7 @@
       ""name"": ""deviceclasses"",
       ""namespaced"": false,
       ""singularName"": ""deviceclass"",
-      ""storageVersionHash"": ""weQRMT6DeYM="",
+      ""storageVersionHash"": ""Yk2PTc1Ybxk="",
       ""verbs"": [
         ""create"",
         ""delete"",
@@ -25,7 +25,7 @@
       ""name"": ""resourceclaims"",
       ""namespaced"": true,
       ""singularName"": ""resourceclaim"",
-      ""storageVersionHash"": ""EJAWH5WrAYg="",
+      ""storageVersionHash"": ""wgAZaHcZxUg="",
       ""verbs"": [
         ""create"",
         ""delete"",
@@ -53,7 +53,7 @@
       ""name"": ""resourceclaimtemplates"",
       ""namespaced"": true,
       ""singularName"": ""resourceclaimtemplate"",
-      ""storageVersionHash"": ""24m0okHrUtk="",
+      ""storageVersionHash"": ""TuzjC49aUfM="",
       ""verbs"": [
         ""create"",
         ""delete"",
@@ -70,7 +70,7 @@
       ""name"": ""resourceslices"",
       ""namespaced"": false,
       ""singularName"": ""resourceslice"",
-      ""storageVersionHash"": ""z6Bc9vgk6yE="",
+      ""storageVersionHash"": ""KsC072WgaEY="",
       ""verbs"": [
         ""create"",
         ""delete"","
kubernetes/kubernetes,3a53784ecbe4bed2aa0cbc159acbb56add05eef9,Kubernetes Prow Robot,2025-10-07T15:55:02Z,"Merge pull request #133876 from kei01234kei/make_v1_version_fist_priotiry_inresource

make v1 resource version first priority in resource",pkg/apis/resource/install/install.go,1,2,3,"@@ -40,6 +40,5 @@ func Install(scheme *runtime.Scheme) {
 	utilruntime.Must(v1beta1.AddToScheme(scheme))
 	utilruntime.Must(v1beta2.AddToScheme(scheme))
 	utilruntime.Must(v1.AddToScheme(scheme))
-	// TODO (https://github.com/kubernetes/kubernetes/issues/133131): put v1 first in 1.35
-	utilruntime.Must(scheme.SetVersionPriority(v1beta2.SchemeGroupVersion, v1.SchemeGroupVersion, v1beta1.SchemeGroupVersion, v1alpha3.SchemeGroupVersion))
+	utilruntime.Must(scheme.SetVersionPriority(v1.SchemeGroupVersion, v1beta2.SchemeGroupVersion, v1beta1.SchemeGroupVersion, v1alpha3.SchemeGroupVersion))
 }"
kubernetes/kubernetes,3a53784ecbe4bed2aa0cbc159acbb56add05eef9,Kubernetes Prow Robot,2025-10-07T15:55:02Z,"Merge pull request #133876 from kei01234kei/make_v1_version_fist_priotiry_inresource

make v1 resource version first priority in resource",pkg/controlplane/storageversionhashdata/data.go,4,4,8,"@@ -70,10 +70,10 @@ var GVRToStorageVersionHash = map[string]string{
 	""rbac.authorization.k8s.io/v1/clusterroles"":                         ""bYE5ZWDrJ44="",
 	""rbac.authorization.k8s.io/v1/rolebindings"":                         ""eGsCzGH6b1g="",
 	""rbac.authorization.k8s.io/v1/roles"":                                ""7FuwZcIIItM="",
-	""resource.k8s.io/v1/deviceclasses"":                                  ""weQRMT6DeYM="",
-	""resource.k8s.io/v1/resourceclaims"":                                 ""EJAWH5WrAYg="",
-	""resource.k8s.io/v1/resourceclaimtemplates"":                         ""24m0okHrUtk="",
-	""resource.k8s.io/v1/resourceslices"":                                 ""z6Bc9vgk6yE="",
+	""resource.k8s.io/v1/deviceclasses"":                                  ""Yk2PTc1Ybxk="",
+	""resource.k8s.io/v1/resourceclaims"":                                 ""wgAZaHcZxUg="",
+	""resource.k8s.io/v1/resourceclaimtemplates"":                         ""TuzjC49aUfM="",
+	""resource.k8s.io/v1/resourceslices"":                                 ""KsC072WgaEY="",
 	""scheduling.k8s.io/v1/priorityclasses"":                              ""1QwjyaZjj3Y="",
 	""storage.k8s.io/v1/csidrivers"":                                      ""hL6j/rwBV5w="",
 	""storage.k8s.io/v1/csinodes"":                                        ""Pe62DkZtjuo="","
kubernetes/kubernetes,3a53784ecbe4bed2aa0cbc159acbb56add05eef9,Kubernetes Prow Robot,2025-10-07T15:55:02Z,"Merge pull request #133876 from kei01234kei/make_v1_version_fist_priotiry_inresource

make v1 resource version first priority in resource",test/integration/etcd/data.go,12,12,24,"@@ -586,28 +586,28 @@ func GetEtcdStorageDataForNamespaceServedAt(namespace string, v string, isEmulat
 		gvr(""resource.k8s.io"", ""v1beta1"", ""deviceclasses""): {
 			Stub:              `{""metadata"": {""name"": ""class2name""}}`,
 			ExpectedEtcdPath:  ""/registry/deviceclasses/class2name"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""DeviceClass""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""DeviceClass""),
 			IntroducedVersion: ""1.32"",
 			RemovedVersion:    ""1.38"",
 		},
 		gvr(""resource.k8s.io"", ""v1beta1"", ""resourceclaims""): {
 			Stub:              `{""metadata"": {""name"": ""claim2name""}, ""spec"": {""devices"": {""requests"": [{""name"": ""req-0"", ""deviceClassName"": ""example-class"", ""allocationMode"": ""ExactCount"", ""count"": 1}]}}}`,
 			ExpectedEtcdPath:  ""/registry/resourceclaims/"" + namespace + ""/claim2name"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""ResourceClaim""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""ResourceClaim""),
 			IntroducedVersion: ""1.32"",
 			RemovedVersion:    ""1.38"",
 		},
 		gvr(""resource.k8s.io"", ""v1beta1"", ""resourceclaimtemplates""): {
 			Stub:              `{""metadata"": {""name"": ""claimtemplate2name""}, ""spec"": {""spec"": {""devices"": {""requests"": [{""name"": ""req-0"", ""deviceClassName"": ""example-class"", ""allocationMode"": ""ExactCount"", ""count"": 1}]}}}}`,
 			ExpectedEtcdPath:  ""/registry/resourceclaimtemplates/"" + namespace + ""/claimtemplate2name"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""ResourceClaimTemplate""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""ResourceClaimTemplate""),
 			IntroducedVersion: ""1.32"",
 			RemovedVersion:    ""1.38"",
 		},
 		gvr(""resource.k8s.io"", ""v1beta1"", ""resourceslices""): {
 			Stub:              `{""metadata"": {""name"": ""node2slice""}, ""spec"": {""nodeName"": ""worker1"", ""driver"": ""dra.example.com"", ""pool"": {""name"": ""worker1"", ""resourceSliceCount"": 1}}}`,
 			ExpectedEtcdPath:  ""/registry/resourceslices/node2slice"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""ResourceSlice""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""ResourceSlice""),
 			IntroducedVersion: ""1.32"",
 			RemovedVersion:    ""1.38"",
 		},
@@ -620,28 +620,28 @@ func GetEtcdStorageDataForNamespaceServedAt(namespace string, v string, isEmulat
 		gvr(""resource.k8s.io"", ""v1beta2"", ""deviceclasses""): {
 			Stub:              `{""metadata"": {""name"": ""class3name""}}`,
 			ExpectedEtcdPath:  ""/registry/deviceclasses/class3name"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""DeviceClass""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""DeviceClass""),
 			IntroducedVersion: ""1.33"",
 			RemovedVersion:    ""1.39"",
 		},
 		gvr(""resource.k8s.io"", ""v1beta2"", ""resourceclaims""): {
 			Stub:              `{""metadata"": {""name"": ""claim3name""}, ""spec"": {""devices"": {""requests"": [{""name"": ""req-0"", ""exactly"": {""deviceClassName"": ""example-class"", ""allocationMode"": ""ExactCount"", ""count"": 1}}]}}}`,
 			ExpectedEtcdPath:  ""/registry/resourceclaims/"" + namespace + ""/claim3name"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""ResourceClaim""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""ResourceClaim""),
 			IntroducedVersion: ""1.33"",
 			RemovedVersion:    ""1.39"",
 		},
 		gvr(""resource.k8s.io"", ""v1beta2"", ""resourceclaimtemplates""): {
 			Stub:              `{""metadata"": {""name"": ""claimtemplate3name""}, ""spec"": {""spec"": {""devices"": {""requests"": [{""name"": ""req-0"", ""exactly"": {""deviceClassName"": ""example-class"", ""allocationMode"": ""ExactCount"", ""count"": 1}}]}}}}`,
 			ExpectedEtcdPath:  ""/registry/resourceclaimtemplates/"" + namespace + ""/claimtemplate3name"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""ResourceClaimTemplate""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""ResourceClaimTemplate""),
 			IntroducedVersion: ""1.33"",
 			RemovedVersion:    ""1.39"",
 		},
 		gvr(""resource.k8s.io"", ""v1beta2"", ""resourceslices""): {
 			Stub:              `{""metadata"": {""name"": ""node3slice""}, ""spec"": {""nodeName"": ""worker1"", ""driver"": ""dra.example.com"", ""pool"": {""name"": ""worker1"", ""resourceSliceCount"": 1}}}`,
 			ExpectedEtcdPath:  ""/registry/resourceslices/node3slice"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""ResourceSlice""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""ResourceSlice""),
 			IntroducedVersion: ""1.33"",
 			RemovedVersion:    ""1.39"",
 		},
@@ -651,25 +651,25 @@ func GetEtcdStorageDataForNamespaceServedAt(namespace string, v string, isEmulat
 		gvr(""resource.k8s.io"", ""v1"", ""deviceclasses""): {
 			Stub:              `{""metadata"": {""name"": ""class4name""}}`,
 			ExpectedEtcdPath:  ""/registry/deviceclasses/class4name"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""DeviceClass""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""DeviceClass""),
 			IntroducedVersion: ""1.34"",
 		},
 		gvr(""resource.k8s.io"", ""v1"", ""resourceclaims""): {
 			Stub:              `{""metadata"": {""name"": ""claim4name""}, ""spec"": {""devices"": {""requests"": [{""name"": ""req-0"", ""exactly"": {""deviceClassName"": ""example-class"", ""allocationMode"": ""ExactCount"", ""count"": 1}}]}}}`,
 			ExpectedEtcdPath:  ""/registry/resourceclaims/"" + namespace + ""/claim4name"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""ResourceClaim""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""ResourceClaim""),
 			IntroducedVersion: ""1.34"",
 		},
 		gvr(""resource.k8s.io"", ""v1"", ""resourceclaimtemplates""): {
 			Stub:              `{""metadata"": {""name"": ""claimtemplate4name""}, ""spec"": {""spec"": {""devices"": {""requests"": [{""name"": ""req-0"", ""exactly"": {""deviceClassName"": ""example-class"", ""allocationMode"": ""ExactCount"", ""count"": 1}}]}}}}`,
 			ExpectedEtcdPath:  ""/registry/resourceclaimtemplates/"" + namespace + ""/claimtemplate4name"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""ResourceClaimTemplate""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""ResourceClaimTemplate""),
 			IntroducedVersion: ""1.34"",
 		},
 		gvr(""resource.k8s.io"", ""v1"", ""resourceslices""): {
 			Stub:              `{""metadata"": {""name"": ""node4slice""}, ""spec"": {""nodeName"": ""worker1"", ""driver"": ""dra.example.com"", ""pool"": {""name"": ""worker1"", ""resourceSliceCount"": 1}}}`,
 			ExpectedEtcdPath:  ""/registry/resourceslices/node4slice"",
-			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1beta2"", ""ResourceSlice""),
+			ExpectedGVK:       gvkP(""resource.k8s.io"", ""v1"", ""ResourceSlice""),
 			IntroducedVersion: ""1.34"",
 		},
 		// --"
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",pkg/apis/resource/v1/zz_generated.validations.go,47,1,48,"@@ -31,6 +31,7 @@ import (
 	safe ""k8s.io/apimachinery/pkg/api/safe""
 	validate ""k8s.io/apimachinery/pkg/api/validate""
 	runtime ""k8s.io/apimachinery/pkg/runtime""
+	types ""k8s.io/apimachinery/pkg/types""
 	field ""k8s.io/apimachinery/pkg/util/validation/field""
 )
 
@@ -90,6 +91,34 @@ func RegisterValidations(scheme *runtime.Scheme) error {
 	return nil
 }
 
+// Validate_AllocatedDeviceStatus validates an instance of AllocatedDeviceStatus according
+// to declarative validation rules in the API schema.
+func Validate_AllocatedDeviceStatus(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.AllocatedDeviceStatus) (errs field.ErrorList) {
+	// field resourcev1.AllocatedDeviceStatus.Driver has no validation
+	// field resourcev1.AllocatedDeviceStatus.Pool has no validation
+	// field resourcev1.AllocatedDeviceStatus.Device has no validation
+
+	// field resourcev1.AllocatedDeviceStatus.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1.AllocatedDeviceStatus) *string { return oldObj.ShareID }))...)
+
+	// field resourcev1.AllocatedDeviceStatus.Conditions has no validation
+	// field resourcev1.AllocatedDeviceStatus.Data has no validation
+	// field resourcev1.AllocatedDeviceStatus.NetworkData has no validation
+	return errs
+}
+
 // Validate_AllocationResult validates an instance of AllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_AllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.AllocationResult) (errs field.ErrorList) {
@@ -386,7 +415,22 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 	// field resourcev1.DeviceRequestAllocationResult.Tolerations has no validation
 	// field resourcev1.DeviceRequestAllocationResult.BindingConditions has no validation
 	// field resourcev1.DeviceRequestAllocationResult.BindingFailureConditions has no validation
-	// field resourcev1.DeviceRequestAllocationResult.ShareID has no validation
+
+	// field resourcev1.DeviceRequestAllocationResult.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *types.UID) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1.DeviceRequestAllocationResult) *types.UID { return oldObj.ShareID }))...)
+
 	// field resourcev1.DeviceRequestAllocationResult.ConsumedCapacity has no validation
 	return errs
 }
@@ -565,6 +609,8 @@ func Validate_ResourceClaimStatus(ctx context.Context, op operation.Operation, f
 			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_AllocatedDeviceStatus)...)
 			return
 		}(fldPath.Child(""devices""), obj.Devices, safe.Field(oldObj, func(oldObj *resourcev1.ResourceClaimStatus) []resourcev1.AllocatedDeviceStatus { return oldObj.Devices }))...)
 "
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",pkg/apis/resource/v1beta1/zz_generated.validations.go,47,1,48,"@@ -31,6 +31,7 @@ import (
 	safe ""k8s.io/apimachinery/pkg/api/safe""
 	validate ""k8s.io/apimachinery/pkg/api/validate""
 	runtime ""k8s.io/apimachinery/pkg/runtime""
+	types ""k8s.io/apimachinery/pkg/types""
 	field ""k8s.io/apimachinery/pkg/util/validation/field""
 )
 
@@ -90,6 +91,34 @@ func RegisterValidations(scheme *runtime.Scheme) error {
 	return nil
 }
 
+// Validate_AllocatedDeviceStatus validates an instance of AllocatedDeviceStatus according
+// to declarative validation rules in the API schema.
+func Validate_AllocatedDeviceStatus(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.AllocatedDeviceStatus) (errs field.ErrorList) {
+	// field resourcev1beta1.AllocatedDeviceStatus.Driver has no validation
+	// field resourcev1beta1.AllocatedDeviceStatus.Pool has no validation
+	// field resourcev1beta1.AllocatedDeviceStatus.Device has no validation
+
+	// field resourcev1beta1.AllocatedDeviceStatus.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1beta1.AllocatedDeviceStatus) *string { return oldObj.ShareID }))...)
+
+	// field resourcev1beta1.AllocatedDeviceStatus.Conditions has no validation
+	// field resourcev1beta1.AllocatedDeviceStatus.Data has no validation
+	// field resourcev1beta1.AllocatedDeviceStatus.NetworkData has no validation
+	return errs
+}
+
 // Validate_AllocationResult validates an instance of AllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_AllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.AllocationResult) (errs field.ErrorList) {
@@ -421,7 +450,22 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 
 	// field resourcev1beta1.DeviceRequestAllocationResult.BindingConditions has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.BindingFailureConditions has no validation
-	// field resourcev1beta1.DeviceRequestAllocationResult.ShareID has no validation
+
+	// field resourcev1beta1.DeviceRequestAllocationResult.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *types.UID) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceRequestAllocationResult) *types.UID { return oldObj.ShareID }))...)
+
 	// field resourcev1beta1.DeviceRequestAllocationResult.ConsumedCapacity has no validation
 	return errs
 }
@@ -578,6 +622,8 @@ func Validate_ResourceClaimStatus(ctx context.Context, op operation.Operation, f
 			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_AllocatedDeviceStatus)...)
 			return
 		}(fldPath.Child(""devices""), obj.Devices, safe.Field(oldObj, func(oldObj *resourcev1beta1.ResourceClaimStatus) []resourcev1beta1.AllocatedDeviceStatus {
 			return oldObj.Devices"
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",pkg/apis/resource/v1beta2/zz_generated.validations.go,47,1,48,"@@ -31,6 +31,7 @@ import (
 	safe ""k8s.io/apimachinery/pkg/api/safe""
 	validate ""k8s.io/apimachinery/pkg/api/validate""
 	runtime ""k8s.io/apimachinery/pkg/runtime""
+	types ""k8s.io/apimachinery/pkg/types""
 	field ""k8s.io/apimachinery/pkg/util/validation/field""
 )
 
@@ -90,6 +91,34 @@ func RegisterValidations(scheme *runtime.Scheme) error {
 	return nil
 }
 
+// Validate_AllocatedDeviceStatus validates an instance of AllocatedDeviceStatus according
+// to declarative validation rules in the API schema.
+func Validate_AllocatedDeviceStatus(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.AllocatedDeviceStatus) (errs field.ErrorList) {
+	// field resourcev1beta2.AllocatedDeviceStatus.Driver has no validation
+	// field resourcev1beta2.AllocatedDeviceStatus.Pool has no validation
+	// field resourcev1beta2.AllocatedDeviceStatus.Device has no validation
+
+	// field resourcev1beta2.AllocatedDeviceStatus.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1beta2.AllocatedDeviceStatus) *string { return oldObj.ShareID }))...)
+
+	// field resourcev1beta2.AllocatedDeviceStatus.Conditions has no validation
+	// field resourcev1beta2.AllocatedDeviceStatus.Data has no validation
+	// field resourcev1beta2.AllocatedDeviceStatus.NetworkData has no validation
+	return errs
+}
+
 // Validate_AllocationResult validates an instance of AllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_AllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.AllocationResult) (errs field.ErrorList) {
@@ -398,7 +427,22 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 	// field resourcev1beta2.DeviceRequestAllocationResult.Tolerations has no validation
 	// field resourcev1beta2.DeviceRequestAllocationResult.BindingConditions has no validation
 	// field resourcev1beta2.DeviceRequestAllocationResult.BindingFailureConditions has no validation
-	// field resourcev1beta2.DeviceRequestAllocationResult.ShareID has no validation
+
+	// field resourcev1beta2.DeviceRequestAllocationResult.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *types.UID) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceRequestAllocationResult) *types.UID { return oldObj.ShareID }))...)
+
 	// field resourcev1beta2.DeviceRequestAllocationResult.ConsumedCapacity has no validation
 	return errs
 }
@@ -585,6 +629,8 @@ func Validate_ResourceClaimStatus(ctx context.Context, op operation.Operation, f
 			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_AllocatedDeviceStatus)...)
 			return
 		}(fldPath.Child(""devices""), obj.Devices, safe.Field(oldObj, func(oldObj *resourcev1beta2.ResourceClaimStatus) []resourcev1beta2.AllocatedDeviceStatus {
 			return oldObj.Devices"
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",pkg/apis/resource/validation/validation.go,3,3,6,"@@ -84,7 +84,7 @@ func validateUID(uid string, fldPath *field.Path) field.ErrorList {
 	} else if len(uid) != 36 || uid != strings.ToLower(uid) {
 		allErrs = append(allErrs, field.Invalid(fldPath, uid, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters""))
 	}
-	return allErrs
+	return allErrs.WithOrigin(""format=k8s-uuid"")
 }
 
 // ValidateResourceClaim validates a ResourceClaim.
@@ -489,7 +489,7 @@ func validateDeviceRequestAllocationResult(result resource.DeviceRequestAllocati
 	allErrs = append(allErrs, validateDeviceName(result.Device, fldPath.Child(""device""))...)
 	allErrs = append(allErrs, validateDeviceBindingParameters(result.BindingConditions, result.BindingFailureConditions, fldPath)...)
 	if result.ShareID != nil {
-		allErrs = append(allErrs, validateUID(string(*result.ShareID), fldPath.Child(""shareID""))...)
+		allErrs = append(allErrs, validateUID(string(*result.ShareID), fldPath.Child(""shareID"")).MarkCoveredByDeclarative()...)
 	}
 	return allErrs
 }
@@ -1212,7 +1212,7 @@ func validateDeviceStatus(device resource.AllocatedDeviceStatus, fldPath *field.
 	allErrs = append(allErrs, validatePoolName(device.Pool, fldPath.Child(""pool""))...)
 	allErrs = append(allErrs, validateDeviceName(device.Device, fldPath.Child(""device""))...)
 	if device.ShareID != nil {
-		allErrs = append(allErrs, validateUID(*device.ShareID, fldPath.Child(""shareID""))...)
+		allErrs = append(allErrs, validateUID(*device.ShareID, fldPath.Child(""shareID"")).MarkCoveredByDeclarative()...)
 	}
 	deviceID := structured.MakeDeviceID(device.Driver, device.Pool, device.Device)
 	sharedDeviceID := structured.MakeSharedDeviceID(deviceID, (*types.UID)(device.ShareID))"
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",pkg/apis/resource/validation/validation_resourceclaim_test.go,4,4,8,"@@ -2157,10 +2157,10 @@ func TestValidateClaimStatusUpdate(t *testing.T) {
 		},
 		""invalid-add-allocated-status-invalid-share-id"": {
 			wantFailures: field.ErrorList{
-				field.Invalid(field.NewPath(""status"", ""devices"").Index(0).Child(""shareID""), badLengthShareIDStr, ""error validating uid: invalid UUID length: 1""),
-				field.Invalid(field.NewPath(""status"", ""devices"").Index(1).Child(""shareID""), badFormatShareIDStr, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters""),
-				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), badLengthShareIDStr, ""error validating uid: invalid UUID length: 1""),
-				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(1).Child(""shareID""), badFormatShareIDStr, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters""),
+				field.Invalid(field.NewPath(""status"", ""devices"").Index(0).Child(""shareID""), badLengthShareIDStr, ""error validating uid: invalid UUID length: 1"").MarkCoveredByDeclarative(),
+				field.Invalid(field.NewPath(""status"", ""devices"").Index(1).Child(""shareID""), badFormatShareIDStr, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"").MarkCoveredByDeclarative(),
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), badLengthShareIDStr, ""error validating uid: invalid UUID length: 1"").MarkCoveredByDeclarative(),
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(1).Child(""shareID""), badFormatShareIDStr, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"").MarkCoveredByDeclarative(),
 			},
 			oldClaim: testClaim(goodName, goodNS, validClaimSpec),
 			update: func(claim *resource.ResourceClaim) *resource.ResourceClaim {"
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",pkg/registry/resource/resourceclaim/declarative_validation_test.go,85,0,85,"@@ -23,6 +23,7 @@ import (
 
 	v1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
 	""k8s.io/apimachinery/pkg/runtime""
+	""k8s.io/apimachinery/pkg/types""
 	""k8s.io/apimachinery/pkg/util/validation/field""
 	genericapirequest ""k8s.io/apiserver/pkg/endpoints/request""
 	""k8s.io/client-go/kubernetes/fake""
@@ -319,6 +320,7 @@ func TestValidateStatusUpdateForDeclarative(t *testing.T) {
 	ctx := genericapirequest.WithRequestInfo(genericapirequest.NewDefaultContext(), &genericapirequest.RequestInfo{
 		APIGroup:    ""resource.k8s.io"",
 		APIVersion:  ""v1"",
+		Resource:    ""resourceclaims"",
 		Subresource: ""status"",
 	})
 	poolPath := field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""pool"")
@@ -327,6 +329,7 @@ func TestValidateStatusUpdateForDeclarative(t *testing.T) {
 		update       resource.ResourceClaim
 		expectedErrs field.ErrorList
 	}{
+		// .Status.Allocation.Devices.Results[%d].Pool
 		""valid pool name"": {
 			old:    mkValidResourceClaim(),
 			update: mkResourceClaimWithStatus(tweakStatusDeviceRequestAllocationResultPool(""dra.example.com/pool-a"")),
@@ -377,6 +380,58 @@ func TestValidateStatusUpdateForDeclarative(t *testing.T) {
 				field.Invalid(poolPath, """", """").WithOrigin(""format=k8s-resource-pool-name""),
 			},
 		},
+		// .Status.Allocation.Devices.Results[%d].ShareID
+		""valid status.Allocation.Devices.Results[].ShareID"": {
+			old:    mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(tweakStatusDeviceRequestAllocationResultShareID(""123e4567-e89b-12d3-a456-426614174000"")),
+		},
+		""invalid status.Allocation.Devices.Results[].ShareID"": {
+			old:    mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(tweakStatusDeviceRequestAllocationResultShareID(""invalid-uid"")),
+			expectedErrs: field.ErrorList{
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), ""invalid-uid"", """").WithOrigin(""format=k8s-uuid""),
+			},
+		},
+		""invalid uppercase status.Allocation.Devices.Results[].ShareID "": {
+			old:    mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(tweakStatusDeviceRequestAllocationResultShareID(""123e4567-E89b-12d3-A456-426614174000"")),
+			expectedErrs: field.ErrorList{
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), ""invalid-uid"", """").WithOrigin(""format=k8s-uuid""),
+			},
+		},
+		// .Status.Devices[%d].ShareID
+		""valid status.Devices[].ShareID"": {
+			old: mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(
+				tweakStatusDevices(standardAllocatedDeviceStatus()),
+				tweakStatusDeviceRequestAllocationResultShareID(""123e4567-e89b-12d3-a456-426614174000""),
+				tweakStatusAllocatedDeviceStatusShareID(""123e4567-e89b-12d3-a456-426614174000""),
+			),
+		},
+		""invalid status.Devices[].ShareID"": {
+			old: mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(
+				tweakStatusDevices(standardAllocatedDeviceStatus()),
+				tweakStatusDeviceRequestAllocationResultShareID(""invalid-uid""),
+				tweakStatusAllocatedDeviceStatusShareID(""invalid-uid""),
+			),
+			expectedErrs: field.ErrorList{
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), ""invalid-uid"", ""must be a lowercase UUID in 8-4-4-4-12 format"").WithOrigin(""format=k8s-uuid""),
+				field.Invalid(field.NewPath(""status"", ""devices"").Index(0).Child(""shareID""), ""invalid-uid"", ""must be a lowercase UUID in 8-4-4-4-12 format"").WithOrigin(""format=k8s-uuid""),
+			},
+		},
+		""invalid upper case status.Devices[].ShareID"": {
+			old: mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(
+				tweakStatusDevices(standardAllocatedDeviceStatus()),
+				tweakStatusDeviceRequestAllocationResultShareID(""123e4567-E89b-12d3-A456-426614174000""),
+				tweakStatusAllocatedDeviceStatusShareID(""123e4567-E89b-12d3-A456-426614174000""),
+			),
+			expectedErrs: field.ErrorList{
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), ""invalid-uid"", ""must be a lowercase UUID in 8-4-4-4-12 format"").WithOrigin(""format=k8s-uuid""),
+				field.Invalid(field.NewPath(""status"", ""devices"").Index(0).Child(""shareID""), ""invalid-uid"", ""must be a lowercase UUID in 8-4-4-4-12 format"").WithOrigin(""format=k8s-uuid""),
+			},
+		},
 	}
 	for k, tc := range testCases {
 		t.Run(k, func(t *testing.T) {
@@ -454,10 +509,40 @@ func mkResourceClaimWithStatus(tweaks ...func(rc *resource.ResourceClaim)) resou
 	return rc
 }
 
+func tweakStatusDevices(devices ...resource.AllocatedDeviceStatus) func(rc *resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		rc.Status.Devices = devices
+	}
+}
+
 func tweakStatusDeviceRequestAllocationResultPool(pool string) func(rc *resource.ResourceClaim) {
 	return func(rc *resource.ResourceClaim) {
 		for i := range rc.Status.Allocation.Devices.Results {
 			rc.Status.Allocation.Devices.Results[i].Pool = pool
 		}
 	}
 }
+
+func tweakStatusDeviceRequestAllocationResultShareID(shareID types.UID) func(rc *resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		for i := range rc.Status.Allocation.Devices.Results {
+			rc.Status.Allocation.Devices.Results[i].ShareID = &shareID
+		}
+	}
+}
+
+func tweakStatusAllocatedDeviceStatusShareID(shareID string) func(rc *resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		for i := range rc.Status.Devices {
+			rc.Status.Devices[i].ShareID = &shareID
+		}
+	}
+}
+
+func standardAllocatedDeviceStatus() resource.AllocatedDeviceStatus {
+	return resource.AllocatedDeviceStatus{
+		Driver: ""dra.example.com"",
+		Pool:   ""pool-0"",
+		Device: ""device-0"",
+	}
+}"
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",staging/src/k8s.io/api/resource/v1/generated.proto,4,0,4,"@@ -65,6 +65,8 @@ message AllocatedDeviceStatus {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 7;
 
   // Conditions contains the latest observation of the device's state.
@@ -901,6 +903,8 @@ message DeviceRequestAllocationResult {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 9;
 
   // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request."
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",staging/src/k8s.io/api/resource/v1/types.go,4,0,4,"@@ -1581,6 +1581,8 @@ type DeviceRequestAllocationResult struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *types.UID `json:""shareID,omitempty"" protobuf:""bytes,9,opt,name=shareID""`
 
 	// ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request.
@@ -1836,6 +1838,8 @@ type AllocatedDeviceStatus struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *string `json:""shareID,omitempty"" protobuf:""bytes,7,opt,name=shareID""`
 
 	// Conditions contains the latest observation of the device's state."
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",staging/src/k8s.io/api/resource/v1beta1/generated.proto,4,0,4,"@@ -65,6 +65,8 @@ message AllocatedDeviceStatus {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 7;
 
   // Conditions contains the latest observation of the device's state.
@@ -1023,6 +1025,8 @@ message DeviceRequestAllocationResult {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 9;
 
   // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request."
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",staging/src/k8s.io/api/resource/v1beta1/types.go,4,0,4,"@@ -1589,6 +1589,8 @@ type DeviceRequestAllocationResult struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *types.UID `json:""shareID,omitempty"" protobuf:""bytes,9,opt,name=shareID""`
 
 	// ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request.
@@ -1844,6 +1846,8 @@ type AllocatedDeviceStatus struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *string `json:""shareID,omitempty"" protobuf:""bytes,7,opt,name=shareID""`
 
 	// Conditions contains the latest observation of the device's state."
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",staging/src/k8s.io/api/resource/v1beta2/generated.proto,4,0,4,"@@ -65,6 +65,8 @@ message AllocatedDeviceStatus {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 7;
 
   // Conditions contains the latest observation of the device's state.
@@ -901,6 +903,8 @@ message DeviceRequestAllocationResult {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 9;
 
   // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request."
kubernetes/kubernetes,ad82c3d39f5e9f21e173ffeb8aa57953a0da4601,Kubernetes Prow Robot,2025-10-06T22:42:59Z,"Merge pull request #134391 from lalitc375/k8s-uuid

Add DV for uids in resourceClaim Status",staging/src/k8s.io/api/resource/v1beta2/types.go,4,0,4,"@@ -1581,6 +1581,8 @@ type DeviceRequestAllocationResult struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *types.UID `json:""shareID,omitempty"" protobuf:""bytes,9,opt,name=shareID""`
 
 	// ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request.
@@ -1836,6 +1838,8 @@ type AllocatedDeviceStatus struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *string `json:""shareID,omitempty"" protobuf:""bytes,7,opt,name=shareID""`
 
 	// Conditions contains the latest observation of the device's state."
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",pkg/api/testing/validation.go,44,9,53,"@@ -156,6 +156,28 @@ func convertToInternal(t *testing.T, scheme *runtime.Scheme, obj runtime.Object)
 	return scheme.ConvertToVersion(obj, schema.GroupVersion{Group: gvk.Group, Version: runtime.APIVersionInternal})
 }
 
+type ValidationTestConfig func(*validationOption)
+
+// validationOptions encapsulates optional parameters for validation equivalence tests.
+type validationOption struct {
+	// SubResources are the subresources to validate.
+	SubResources []string
+	// NormalizationRules are the rules to apply to field paths before comparison.
+	NormalizationRules []field.NormalizationRule
+}
+
+func WithSubResources(subResources ...string) ValidationTestConfig {
+	return func(o *validationOption) {
+		o.SubResources = subResources
+	}
+}
+
+func WithNormalizationRules(rules ...field.NormalizationRule) ValidationTestConfig {
+	return func(o *validationOption) {
+		o.NormalizationRules = rules
+	}
+}
+
 // VerifyValidationEquivalence provides a helper for testing the migration from
 // hand-written imperative validation to declarative validation. It ensures that
 // the validation logic remains consistent before and after the feature is enabled.
@@ -169,12 +191,16 @@ func convertToInternal(t *testing.T, scheme *runtime.Scheme, obj runtime.Object)
 // guaranteeing a safe migration. It also checks the errors against an expected set.
 // It compares errors by field, origin and type; all three should match to be called equivalent.
 // It also make sure all versions of the given API returns equivalent errors.
-func VerifyValidationEquivalence(t *testing.T, ctx context.Context, obj runtime.Object, validateFn ValidateFunc, expectedErrs field.ErrorList, subResources ...string) {
+func VerifyValidationEquivalence(t *testing.T, ctx context.Context, obj runtime.Object, validateFn ValidateFunc, expectedErrs field.ErrorList, testConfigs ...ValidationTestConfig) {
 	t.Helper()
+	opts := &validationOption{}
+	for _, testcfg := range testConfigs {
+		testcfg(opts)
+	}
 	verifyValidationEquivalence(t, expectedErrs, func() field.ErrorList {
 		return validateFn(ctx, obj)
-	})
-	VerifyVersionedValidationEquivalence(t, obj, nil, subResources...)
+	}, opts)
+	VerifyVersionedValidationEquivalence(t, obj, nil, opts.SubResources...)
 }
 
 // VerifyUpdateValidationEquivalence provides a helper for testing the migration from
@@ -190,22 +216,26 @@ func VerifyValidationEquivalence(t *testing.T, ctx context.Context, obj runtime.
 // guaranteeing a safe migration. It also checks the errors against an expected set.
 // It compares errors by field, origin and type; all three should match to be called equivalent.
 // It also make sure all versions of the given API returns equivalent errors.
-func VerifyUpdateValidationEquivalence(t *testing.T, ctx context.Context, obj, old runtime.Object, validateUpdateFn ValidateUpdateFunc, expectedErrs field.ErrorList, subResources ...string) {
+func VerifyUpdateValidationEquivalence(t *testing.T, ctx context.Context, obj, old runtime.Object, validateUpdateFn ValidateUpdateFunc, expectedErrs field.ErrorList, testConfigs ...ValidationTestConfig) {
 	t.Helper()
+	opts := &validationOption{}
+	for _, testcfg := range testConfigs {
+		testcfg(opts)
+	}
 	verifyValidationEquivalence(t, expectedErrs, func() field.ErrorList {
 		return validateUpdateFn(ctx, obj, old)
-	})
-	VerifyVersionedValidationEquivalence(t, obj, old, subResources...)
+	}, opts)
+	VerifyVersionedValidationEquivalence(t, obj, old, opts.SubResources...)
 }
 
 // verifyValidationEquivalence is a generic helper that verifies validation equivalence with and without declarative validation.
-func verifyValidationEquivalence(t *testing.T, expectedErrs field.ErrorList, runValidations func() field.ErrorList) {
+func verifyValidationEquivalence(t *testing.T, expectedErrs field.ErrorList, runValidations func() field.ErrorList, opt *validationOption) {
 	t.Helper()
 	var declarativeTakeoverErrs field.ErrorList
 	var imperativeErrs field.ErrorList
 
 	// The errOutputMatcher is used to verify the output matches the expected errors in test cases.
-	errOutputMatcher := field.ErrorMatcher{}.ByType().ByField().ByOrigin()
+	errOutputMatcher := field.ErrorMatcher{}.ByType().ByOrigin().ByFieldNormalized(opt.NormalizationRules)
 
 	// We only need to test both gate enabled and disabled together, because
 	// 1) the DeclarativeValidationTakeover won't take effect if DeclarativeValidation is disabled.
@@ -241,7 +271,12 @@ func verifyValidationEquivalence(t *testing.T, expectedErrs field.ErrorList, run
 
 	// The equivalenceMatcher is used to verify the output errors from hand-written imperative validation
 	// are equivalent to the output errors when DeclarativeValidationTakeover is enabled.
-	equivalenceMatcher := field.ErrorMatcher{}.ByType().ByField().ByOrigin()
+	equivalenceMatcher := field.ErrorMatcher{}.ByType().ByOrigin()
+	if len(opt.NormalizationRules) > 0 {
+		equivalenceMatcher = equivalenceMatcher.ByFieldNormalized(opt.NormalizationRules)
+	} else {
+		equivalenceMatcher = equivalenceMatcher.ByField()
+	}
 
 	// The imperative validation may produce duplicate errors, which is not supported by the ErrorMatcher.
 	// TODO: remove this once ErrorMatcher has been extended to handle this form of deduplication."
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",pkg/apis/resource/v1/zz_generated.validations.go,148,0,148,"@@ -146,6 +146,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceRequest)...)
 			return
 		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClaim) []resourcev1.DeviceRequest { return oldObj.Requests }))...)
 
@@ -161,6 +163,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceConstraint)...)
 			return
 		}(fldPath.Child(""constraints""), obj.Constraints, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClaim) []resourcev1.DeviceConstraint { return oldObj.Constraints }))...)
 
@@ -176,12 +180,36 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceClaimConfiguration)...)
 			return
 		}(fldPath.Child(""config""), obj.Config, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClaim) []resourcev1.DeviceClaimConfiguration { return oldObj.Config }))...)
 
 	return errs
 }
 
+// Validate_DeviceClaimConfiguration validates an instance of DeviceClaimConfiguration according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClaimConfiguration(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceClaimConfiguration) (errs field.ErrorList) {
+	// field resourcev1.DeviceClaimConfiguration.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClaimConfiguration) []string { return oldObj.Requests }))...)
+
+	// field resourcev1.DeviceClaimConfiguration.DeviceConfiguration has no validation
+	return errs
+}
+
 // Validate_DeviceClass validates an instance of DeviceClass according
 // to declarative validation rules in the API schema.
 func Validate_DeviceClass(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceClass) (errs field.ErrorList) {
@@ -267,6 +295,70 @@ func Validate_DeviceClassSpec(ctx context.Context, op operation.Operation, fldPa
 	return errs
 }
 
+// Validate_DeviceConstraint validates an instance of DeviceConstraint according
+// to declarative validation rules in the API schema.
+func Validate_DeviceConstraint(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceConstraint) (errs field.ErrorList) {
+	// field resourcev1.DeviceConstraint.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1.DeviceConstraint) []string { return oldObj.Requests }))...)
+
+	// field resourcev1.DeviceConstraint.MatchAttribute has no validation
+	// field resourcev1.DeviceConstraint.DistinctAttribute has no validation
+	return errs
+}
+
+// Validate_DeviceRequest validates an instance of DeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceRequest) (errs field.ErrorList) {
+	// field resourcev1.DeviceRequest.Name has no validation
+
+	// field resourcev1.DeviceRequest.Exactly
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *resourcev1.ExactDeviceRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			// call the type's validation function
+			errs = append(errs, Validate_ExactDeviceRequest(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""exactly""), obj.Exactly, safe.Field(oldObj, func(oldObj *resourcev1.DeviceRequest) *resourcev1.ExactDeviceRequest { return oldObj.Exactly }))...)
+
+	// field resourcev1.DeviceRequest.FirstAvailable
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1.DeviceSubRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 8); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceSubRequest)...)
+			return
+		}(fldPath.Child(""firstAvailable""), obj.FirstAvailable, safe.Field(oldObj, func(oldObj *resourcev1.DeviceRequest) []resourcev1.DeviceSubRequest { return oldObj.FirstAvailable }))...)
+
+	return errs
+}
+
 // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceRequestAllocationResult) (errs field.ErrorList) {
@@ -299,6 +391,62 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 	return errs
 }
 
+// Validate_DeviceSubRequest validates an instance of DeviceSubRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceSubRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceSubRequest) (errs field.ErrorList) {
+	// field resourcev1.DeviceSubRequest.Name has no validation
+	// field resourcev1.DeviceSubRequest.DeviceClassName has no validation
+
+	// field resourcev1.DeviceSubRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1.DeviceSubRequest) []resourcev1.DeviceSelector { return oldObj.Selectors }))...)
+
+	// field resourcev1.DeviceSubRequest.AllocationMode has no validation
+	// field resourcev1.DeviceSubRequest.Count has no validation
+	// field resourcev1.DeviceSubRequest.Tolerations has no validation
+	// field resourcev1.DeviceSubRequest.Capacity has no validation
+	return errs
+}
+
+// Validate_ExactDeviceRequest validates an instance of ExactDeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_ExactDeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.ExactDeviceRequest) (errs field.ErrorList) {
+	// field resourcev1.ExactDeviceRequest.DeviceClassName has no validation
+
+	// field resourcev1.ExactDeviceRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1.ExactDeviceRequest) []resourcev1.DeviceSelector { return oldObj.Selectors }))...)
+
+	// field resourcev1.ExactDeviceRequest.AllocationMode has no validation
+	// field resourcev1.ExactDeviceRequest.Count has no validation
+	// field resourcev1.ExactDeviceRequest.AdminAccess has no validation
+	// field resourcev1.ExactDeviceRequest.Tolerations has no validation
+	// field resourcev1.ExactDeviceRequest.Capacity has no validation
+	return errs
+}
+
 // Validate_ResourceClaim validates an instance of ResourceClaim according
 // to declarative validation rules in the API schema.
 func Validate_ResourceClaim(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.ResourceClaim) (errs field.ErrorList) {"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",pkg/apis/resource/v1beta1/zz_generated.validations.go,148,1,149,"@@ -148,6 +148,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceRequest)...)
 			return
 		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClaim) []resourcev1beta1.DeviceRequest { return oldObj.Requests }))...)
 
@@ -163,6 +165,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceConstraint)...)
 			return
 		}(fldPath.Child(""constraints""), obj.Constraints, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClaim) []resourcev1beta1.DeviceConstraint {
 			return oldObj.Constraints
@@ -180,6 +184,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceClaimConfiguration)...)
 			return
 		}(fldPath.Child(""config""), obj.Config, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClaim) []resourcev1beta1.DeviceClaimConfiguration {
 			return oldObj.Config
@@ -188,6 +194,28 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 	return errs
 }
 
+// Validate_DeviceClaimConfiguration validates an instance of DeviceClaimConfiguration according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClaimConfiguration(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceClaimConfiguration) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceClaimConfiguration.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClaimConfiguration) []string { return oldObj.Requests }))...)
+
+	// field resourcev1beta1.DeviceClaimConfiguration.DeviceConfiguration has no validation
+	return errs
+}
+
 // Validate_DeviceClass validates an instance of DeviceClass according
 // to declarative validation rules in the API schema.
 func Validate_DeviceClass(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceClass) (errs field.ErrorList) {
@@ -277,6 +305,78 @@ func Validate_DeviceClassSpec(ctx context.Context, op operation.Operation, fldPa
 	return errs
 }
 
+// Validate_DeviceConstraint validates an instance of DeviceConstraint according
+// to declarative validation rules in the API schema.
+func Validate_DeviceConstraint(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceConstraint) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceConstraint.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceConstraint) []string { return oldObj.Requests }))...)
+
+	// field resourcev1beta1.DeviceConstraint.MatchAttribute has no validation
+	// field resourcev1beta1.DeviceConstraint.DistinctAttribute has no validation
+	return errs
+}
+
+// Validate_DeviceRequest validates an instance of DeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceRequest) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceRequest.Name has no validation
+	// field resourcev1beta1.DeviceRequest.DeviceClassName has no validation
+
+	// field resourcev1beta1.DeviceRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceRequest) []resourcev1beta1.DeviceSelector { return oldObj.Selectors }))...)
+
+	// field resourcev1beta1.DeviceRequest.AllocationMode has no validation
+	// field resourcev1beta1.DeviceRequest.Count has no validation
+	// field resourcev1beta1.DeviceRequest.AdminAccess has no validation
+
+	// field resourcev1beta1.DeviceRequest.FirstAvailable
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceSubRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 8); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceSubRequest)...)
+			return
+		}(fldPath.Child(""firstAvailable""), obj.FirstAvailable, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceRequest) []resourcev1beta1.DeviceSubRequest {
+			return oldObj.FirstAvailable
+		}))...)
+
+	// field resourcev1beta1.DeviceRequest.Tolerations has no validation
+	// field resourcev1beta1.DeviceRequest.Capacity has no validation
+	return errs
+}
+
 // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceRequestAllocationResult) (errs field.ErrorList) {
@@ -301,14 +401,61 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 
 	// field resourcev1beta1.DeviceRequestAllocationResult.Device has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.AdminAccess has no validation
-	// field resourcev1beta1.DeviceRequestAllocationResult.Tolerations has no validation
+
+	// field resourcev1beta1.DeviceRequestAllocationResult.Tolerations
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceToleration) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 16); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""tolerations""), obj.Tolerations, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceRequestAllocationResult) []resourcev1beta1.DeviceToleration {
+			return oldObj.Tolerations
+		}))...)
+
 	// field resourcev1beta1.DeviceRequestAllocationResult.BindingConditions has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.BindingFailureConditions has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.ShareID has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.ConsumedCapacity has no validation
 	return errs
 }
 
+// Validate_DeviceSubRequest validates an instance of DeviceSubRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceSubRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceSubRequest) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceSubRequest.Name has no validation
+	// field resourcev1beta1.DeviceSubRequest.DeviceClassName has no validation
+
+	// field resourcev1beta1.DeviceSubRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceSubRequest) []resourcev1beta1.DeviceSelector {
+			return oldObj.Selectors
+		}))...)
+
+	// field resourcev1beta1.DeviceSubRequest.AllocationMode has no validation
+	// field resourcev1beta1.DeviceSubRequest.Count has no validation
+	// field resourcev1beta1.DeviceSubRequest.Tolerations has no validation
+	// field resourcev1beta1.DeviceSubRequest.Capacity has no validation
+	return errs
+}
+
 // Validate_ResourceClaim validates an instance of ResourceClaim according
 // to declarative validation rules in the API schema.
 func Validate_ResourceClaim(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.ResourceClaim) (errs field.ErrorList) {"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",pkg/apis/resource/v1beta2/zz_generated.validations.go,154,0,154,"@@ -148,6 +148,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceRequest)...)
 			return
 		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClaim) []resourcev1beta2.DeviceRequest { return oldObj.Requests }))...)
 
@@ -163,6 +165,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceConstraint)...)
 			return
 		}(fldPath.Child(""constraints""), obj.Constraints, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClaim) []resourcev1beta2.DeviceConstraint {
 			return oldObj.Constraints
@@ -180,6 +184,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceClaimConfiguration)...)
 			return
 		}(fldPath.Child(""config""), obj.Config, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClaim) []resourcev1beta2.DeviceClaimConfiguration {
 			return oldObj.Config
@@ -188,6 +194,28 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 	return errs
 }
 
+// Validate_DeviceClaimConfiguration validates an instance of DeviceClaimConfiguration according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClaimConfiguration(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceClaimConfiguration) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceClaimConfiguration.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClaimConfiguration) []string { return oldObj.Requests }))...)
+
+	// field resourcev1beta2.DeviceClaimConfiguration.DeviceConfiguration has no validation
+	return errs
+}
+
 // Validate_DeviceClass validates an instance of DeviceClass according
 // to declarative validation rules in the API schema.
 func Validate_DeviceClass(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceClass) (errs field.ErrorList) {
@@ -277,6 +305,72 @@ func Validate_DeviceClassSpec(ctx context.Context, op operation.Operation, fldPa
 	return errs
 }
 
+// Validate_DeviceConstraint validates an instance of DeviceConstraint according
+// to declarative validation rules in the API schema.
+func Validate_DeviceConstraint(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceConstraint) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceConstraint.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceConstraint) []string { return oldObj.Requests }))...)
+
+	// field resourcev1beta2.DeviceConstraint.MatchAttribute has no validation
+	// field resourcev1beta2.DeviceConstraint.DistinctAttribute has no validation
+	return errs
+}
+
+// Validate_DeviceRequest validates an instance of DeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceRequest) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceRequest.Name has no validation
+
+	// field resourcev1beta2.DeviceRequest.Exactly
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *resourcev1beta2.ExactDeviceRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			// call the type's validation function
+			errs = append(errs, Validate_ExactDeviceRequest(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""exactly""), obj.Exactly, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceRequest) *resourcev1beta2.ExactDeviceRequest { return oldObj.Exactly }))...)
+
+	// field resourcev1beta2.DeviceRequest.FirstAvailable
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta2.DeviceSubRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 8); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceSubRequest)...)
+			return
+		}(fldPath.Child(""firstAvailable""), obj.FirstAvailable, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceRequest) []resourcev1beta2.DeviceSubRequest {
+			return oldObj.FirstAvailable
+		}))...)
+
+	return errs
+}
+
 // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceRequestAllocationResult) (errs field.ErrorList) {
@@ -309,6 +403,66 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 	return errs
 }
 
+// Validate_DeviceSubRequest validates an instance of DeviceSubRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceSubRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceSubRequest) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceSubRequest.Name has no validation
+	// field resourcev1beta2.DeviceSubRequest.DeviceClassName has no validation
+
+	// field resourcev1beta2.DeviceSubRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta2.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceSubRequest) []resourcev1beta2.DeviceSelector {
+			return oldObj.Selectors
+		}))...)
+
+	// field resourcev1beta2.DeviceSubRequest.AllocationMode has no validation
+	// field resourcev1beta2.DeviceSubRequest.Count has no validation
+	// field resourcev1beta2.DeviceSubRequest.Tolerations has no validation
+	// field resourcev1beta2.DeviceSubRequest.Capacity has no validation
+	return errs
+}
+
+// Validate_ExactDeviceRequest validates an instance of ExactDeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_ExactDeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.ExactDeviceRequest) (errs field.ErrorList) {
+	// field resourcev1beta2.ExactDeviceRequest.DeviceClassName has no validation
+
+	// field resourcev1beta2.ExactDeviceRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta2.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta2.ExactDeviceRequest) []resourcev1beta2.DeviceSelector {
+			return oldObj.Selectors
+		}))...)
+
+	// field resourcev1beta2.ExactDeviceRequest.AllocationMode has no validation
+	// field resourcev1beta2.ExactDeviceRequest.Count has no validation
+	// field resourcev1beta2.ExactDeviceRequest.AdminAccess has no validation
+	// field resourcev1beta2.ExactDeviceRequest.Tolerations has no validation
+	// field resourcev1beta2.ExactDeviceRequest.Capacity has no validation
+	return errs
+}
+
 // Validate_ResourceClaim validates an instance of ResourceClaim according
 // to declarative validation rules in the API schema.
 func Validate_ResourceClaim(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.ResourceClaim) (errs field.ErrorList) {"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",pkg/apis/resource/validation/validation.go,4,4,8,"@@ -203,7 +203,7 @@ func validateDeviceRequest(request resource.DeviceRequest, fldPath *field.Path,
 			func(subRequest resource.DeviceSubRequest) (string, string) {
 				return subRequest.Name, ""name""
 			},
-			fldPath.Child(""firstAvailable""))...)
+			fldPath.Child(""firstAvailable""), sizeCovered)...)
 	}
 
 	if request.Exactly != nil {
@@ -275,7 +275,7 @@ func validateSelectorSlice(selectors []resource.DeviceSelector, fldPath *field.P
 		func(selector resource.DeviceSelector, fldPath *field.Path) field.ErrorList {
 			return validateSelector(selector, fldPath, stored)
 		},
-		fldPath)
+		fldPath, sizeCovered)
 }
 
 func validateSelector(selector resource.DeviceSelector, fldPath *field.Path, stored bool) field.ErrorList {
@@ -331,7 +331,7 @@ func validateDeviceConstraint(constraint resource.DeviceConstraint, fldPath *fie
 		func(name string, fldPath *field.Path) field.ErrorList {
 			return validateRequestNameRef(name, fldPath, requestNames)
 		},
-		stringKey, fldPath.Child(""requests""))...)
+		stringKey, fldPath.Child(""requests""), sizeCovered)...)
 	if constraint.MatchAttribute != nil {
 		allErrs = append(allErrs, validateFullyQualifiedName(*constraint.MatchAttribute, fldPath.Child(""matchAttribute""))...)
 	} else if constraint.DistinctAttribute != nil {
@@ -349,7 +349,7 @@ func validateDeviceClaimConfiguration(config resource.DeviceClaimConfiguration,
 	allErrs = append(allErrs, validateSet(config.Requests, resource.DeviceRequestsMaxSize,
 		func(name string, fldPath *field.Path) field.ErrorList {
 			return validateRequestNameRef(name, fldPath, requestNames)
-		}, stringKey, fldPath.Child(""requests""))...)
+		}, stringKey, fldPath.Child(""requests""), sizeCovered)...)
 	allErrs = append(allErrs, validateDeviceConfiguration(config.DeviceConfiguration, fldPath, stored)...)
 	return allErrs
 }"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",pkg/apis/resource/validation/validation_resourceclaim_test.go,1,1,2,"@@ -648,7 +648,7 @@ func TestValidateClaim(t *testing.T) {
 		},
 		""prioritized-list-too-many-subrequests"": {
 			wantFailures: field.ErrorList{
-				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""firstAvailable""), 9, 8),
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""firstAvailable""), 9, 8).MarkCoveredByDeclarative(),
 			},
 			claim: func() *resource.ResourceClaim {
 				claim := testClaim(goodName, goodNS, validClaimSpec)"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",pkg/registry/resource/resourceclaim/declarative_validation_test.go,127,3,130,"@@ -84,11 +84,58 @@ func testDeclarativeValidate(t *testing.T, apiVersion string) {
 				field.TooMany(field.NewPath(""spec"", ""devices"", ""config""), 33, 32).WithOrigin(""maxItems""),
 			},
 		},
+		""invalid firstAvailable, too many"": {
+			input: mkValidResourceClaim(tweakFirstAvailable(9)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""firstAvailable""), 9, 8).WithOrigin(""maxItems""),
+			},
+		},
+		""invalid selectors, too many"": {
+			input: mkValidResourceClaim(tweakExactlySelectors(33)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""exactly"", ""selectors""), 33, 32).WithOrigin(""maxItems"").MarkCoveredByDeclarative(),
+			},
+		},
+		""invalid subrequest selectors, too many"": {
+			input: mkValidResourceClaim(tweakSubRequestSelectors(33)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""firstAvailable"").Index(0).Child(""selectors""), 33, 32).WithOrigin(""maxItems""),
+			},
+		},
+		""invalid constraint requests, too many"": {
+			input: mkValidResourceClaim(tweakConstraintRequests(33)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests""), 33, 32).WithOrigin(""maxItems""),
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""constraints"").Index(0).Child(""requests""), 33, 32).WithOrigin(""maxItems""),
+			},
+		},
+		""invalid config requests, too many"": {
+			input: mkValidResourceClaim(tweakConfigRequests(33)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests""), 33, 32).WithOrigin(""maxItems""),
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""config"").Index(0).Child(""requests""), 33, 32).WithOrigin(""maxItems""),
+			},
+		},
+		""valid firstAvailable, max allowed"": {
+			input: mkValidResourceClaim(tweakFirstAvailable(8)),
+		},
+		""valid selectors, max allowed"": {
+			input: mkValidResourceClaim(tweakExactlySelectors(32)),
+		},
+		""valid subrequest selectors, max allowed"": {
+			input: mkValidResourceClaim(tweakSubRequestSelectors(32)),
+		},
+		""valid constraint requests, max allowed"": {
+			input: mkValidResourceClaim(tweakConstraintRequests(32)),
+		},
+		""valid config requests, max allowed"": {
+			input: mkValidResourceClaim(tweakConfigRequests(32)),
+		},
 		// TODO: Add more test cases
 	}
 	for k, tc := range testCases {
 		t.Run(k, func(t *testing.T) {
-			apitesting.VerifyValidationEquivalence(t, ctx, &tc.input, Strategy.Validate, tc.expectedErrs)
+			apitesting.VerifyValidationEquivalence(t, ctx, &tc.input, Strategy.Validate, tc.expectedErrs, apitesting.WithNormalizationRules(resourceClaimNormalizationRules...))
 		})
 	}
 }
@@ -118,6 +165,83 @@ func tweakDevicesRequests(items int) func(*resource.ResourceClaim) {
 	}
 }
 
+func tweakExactlySelectors(items int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		for i := 0; i < items; i++ {
+			rc.Spec.Devices.Requests[0].Exactly.Selectors = append(rc.Spec.Devices.Requests[0].Exactly.Selectors,
+				resource.DeviceSelector{
+					CEL: &resource.CELDeviceSelector{
+						Expression: fmt.Sprintf(""device.driver == \""test.driver.io%d\"""", i),
+					},
+				},
+			)
+		}
+	}
+}
+
+func tweakSubRequestSelectors(items int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		rc.Spec.Devices.Requests[0].Exactly = nil
+		rc.Spec.Devices.Requests[0].FirstAvailable = []resource.DeviceSubRequest{
+			{
+				Name:            ""sub-0"",
+				DeviceClassName: ""class"",
+				AllocationMode:  resource.DeviceAllocationModeAll,
+			},
+		}
+		for i := 0; i < items; i++ {
+			rc.Spec.Devices.Requests[0].FirstAvailable[0].Selectors = append(rc.Spec.Devices.Requests[0].FirstAvailable[0].Selectors,
+				resource.DeviceSelector{
+					CEL: &resource.CELDeviceSelector{
+						Expression: fmt.Sprintf(""device.driver == \""test.driver.io%d\"""", i),
+					},
+				},
+			)
+		}
+	}
+}
+
+func tweakConstraintRequests(count int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		tweakDevicesRequests(count)(rc)
+		if len(rc.Spec.Devices.Constraints) == 0 {
+			rc.Spec.Devices.Constraints = append(rc.Spec.Devices.Constraints, mkDeviceConstraint())
+		}
+		rc.Spec.Devices.Constraints[0].Requests = []string{}
+		for i := 0; i < count; i++ {
+			rc.Spec.Devices.Constraints[0].Requests = append(rc.Spec.Devices.Constraints[0].Requests, fmt.Sprintf(""req-%d"", i))
+		}
+	}
+}
+
+func tweakConfigRequests(count int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		tweakDevicesRequests(count)(rc)
+		if len(rc.Spec.Devices.Config) == 0 {
+			rc.Spec.Devices.Config = append(rc.Spec.Devices.Config, mkDeviceClaimConfiguration())
+		}
+		rc.Spec.Devices.Config[0].Requests = []string{}
+		for i := 0; i < count; i++ {
+			rc.Spec.Devices.Config[0].Requests = append(rc.Spec.Devices.Config[0].Requests, fmt.Sprintf(""req-%d"", i))
+		}
+	}
+}
+
+func tweakFirstAvailable(items int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		rc.Spec.Devices.Requests[0].Exactly = nil
+		for i := 0; i < items; i++ {
+			rc.Spec.Devices.Requests[0].FirstAvailable = append(rc.Spec.Devices.Requests[0].FirstAvailable,
+				resource.DeviceSubRequest{
+					Name:            fmt.Sprintf(""sub-%d"", i),
+					DeviceClassName: ""class"",
+					AllocationMode:  resource.DeviceAllocationModeAll,
+				},
+			)
+		}
+	}
+}
+
 func mkDeviceClaimConfiguration() resource.DeviceClaimConfiguration {
 	return resource.DeviceClaimConfiguration{
 		Requests: []string{""req-0""},
@@ -181,7 +305,7 @@ func testDeclarativeValidateUpdate(t *testing.T, apiVersion string) {
 		t.Run(k, func(t *testing.T) {
 			tc.old.ResourceVersion = ""1""
 			tc.update.ResourceVersion = ""2""
-			apitesting.VerifyUpdateValidationEquivalence(t, ctx, &tc.update, &tc.old, Strategy.ValidateUpdate, tc.expectedErrs)
+			apitesting.VerifyUpdateValidationEquivalence(t, ctx, &tc.update, &tc.old, Strategy.ValidateUpdate, tc.expectedErrs, apitesting.WithNormalizationRules(resourceClaimNormalizationRules...))
 		})
 	}
 }
@@ -258,7 +382,7 @@ func TestValidateStatusUpdateForDeclarative(t *testing.T) {
 		t.Run(k, func(t *testing.T) {
 			tc.old.ObjectMeta.ResourceVersion = ""1""
 			tc.update.ObjectMeta.ResourceVersion = ""1""
-			apitesting.VerifyUpdateValidationEquivalence(t, ctx, &tc.update, &tc.old, strategy.ValidateUpdate, tc.expectedErrs, ""status"")
+			apitesting.VerifyUpdateValidationEquivalence(t, ctx, &tc.update, &tc.old, strategy.ValidateUpdate, tc.expectedErrs, apitesting.WithSubResources(""status""))
 		})
 	}
 }"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",pkg/registry/resource/resourceclaim/strategy.go,12,2,14,"@@ -19,6 +19,7 @@ package resourceclaim
 import (
 	""context""
 	""errors""
+	""regexp""
 
 	""sigs.k8s.io/structured-merge-diff/v6/fieldpath""
 
@@ -52,6 +53,15 @@ type resourceclaimStrategy struct {
 	nsClient v1.NamespaceInterface
 }
 
+var resourceClaimNormalizationRules = []field.NormalizationRule{
+	{
+		// The ""exactly"" struct was added in v1beta2. In earlier API
+		// versions, its fields were directly part of the DeviceRequest.
+		Regexp:      regexp.MustCompile(`spec\.devices\.requests\[(\d+)\]\.selectors`),
+		Replacement: ""spec.devices.requests[$1].exactly.selectors"",
+	},
+}
+
 // NewStrategy is the default logic that applies when creating and updating ResourceClaim objects.
 func NewStrategy(nsClient v1.NamespaceInterface) *resourceclaimStrategy {
 	return &resourceclaimStrategy{
@@ -100,7 +110,7 @@ func (s *resourceclaimStrategy) Validate(ctx context.Context, obj runtime.Object
 
 	allErrs := resourceutils.AuthorizedForAdmin(ctx, claim.Spec.Devices.Requests, claim.Namespace, s.nsClient)
 	allErrs = append(allErrs, validation.ValidateResourceClaim(claim)...)
-	return rest.ValidateDeclarativelyWithMigrationChecks(ctx, legacyscheme.Scheme, claim, nil, allErrs, operation.Create)
+	return rest.ValidateDeclarativelyWithMigrationChecks(ctx, legacyscheme.Scheme, claim, nil, allErrs, operation.Create, rest.WithNormalizationRules(resourceClaimNormalizationRules))
 }
 
 func (*resourceclaimStrategy) WarningsOnCreate(ctx context.Context, obj runtime.Object) []string {
@@ -128,7 +138,7 @@ func (s *resourceclaimStrategy) ValidateUpdate(ctx context.Context, obj, old run
 	// AuthorizedForAdmin isn't needed here because the spec is immutable.
 	errorList := validation.ValidateResourceClaim(newClaim)
 	errorList = append(errorList, validation.ValidateResourceClaimUpdate(newClaim, oldClaim)...)
-	return rest.ValidateDeclarativelyWithMigrationChecks(ctx, legacyscheme.Scheme, newClaim, oldClaim, errorList, operation.Update)
+	return rest.ValidateDeclarativelyWithMigrationChecks(ctx, legacyscheme.Scheme, newClaim, oldClaim, errorList, operation.Update, rest.WithNormalizationRules(resourceClaimNormalizationRules))
 }
 
 func (*resourceclaimStrategy) WarningsOnUpdate(ctx context.Context, obj, old runtime.Object) []string {"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",staging/src/k8s.io/api/resource/v1/generated.proto,6,0,6,"@@ -592,6 +592,7 @@ message DeviceClaimConfiguration {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   optional DeviceConfiguration deviceConfiguration = 2;
@@ -698,6 +699,7 @@ message DeviceConstraint {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   // MatchAttribute requires that all devices in question have this
@@ -780,6 +782,7 @@ message DeviceRequest {
   //
   // +optional
   // +oneOf=deviceRequestType
+  // +k8s:optional
   optional ExactDeviceRequest exactly = 2;
 
   // FirstAvailable contains subrequests, of which exactly one will be
@@ -800,6 +803,7 @@ message DeviceRequest {
   // +oneOf=deviceRequestType
   // +listType=atomic
   // +featureGate=DRAPrioritizedList
+  // +k8s:maxItems=8
   repeated DeviceSubRequest firstAvailable = 3;
 }
 
@@ -962,6 +966,7 @@ message DeviceSubRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 3;
 
   // AllocationMode and its related fields define how devices are allocated
@@ -1133,6 +1138,7 @@ message ExactDeviceRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 2;
 
   // AllocationMode and its related fields define how devices are allocated"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",staging/src/k8s.io/api/resource/v1/types.go,6,0,6,"@@ -792,6 +792,7 @@ type DeviceRequest struct {
 	//
 	// +optional
 	// +oneOf=deviceRequestType
+	// +k8s:optional
 	Exactly *ExactDeviceRequest `json:""exactly,omitempty"" protobuf:""bytes,2,name=exactly""`
 
 	// FirstAvailable contains subrequests, of which exactly one will be
@@ -812,6 +813,7 @@ type DeviceRequest struct {
 	// +oneOf=deviceRequestType
 	// +listType=atomic
 	// +featureGate=DRAPrioritizedList
+	// +k8s:maxItems=8
 	FirstAvailable []DeviceSubRequest `json:""firstAvailable,omitempty"" protobuf:""bytes,3,name=firstAvailable""`
 }
 
@@ -839,6 +841,7 @@ type ExactDeviceRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,2,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -965,6 +968,7 @@ type DeviceSubRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,3,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -1190,6 +1194,7 @@ type DeviceConstraint struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	// MatchAttribute requires that all devices in question have this
@@ -1247,6 +1252,7 @@ type DeviceClaimConfiguration struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	DeviceConfiguration `json:"",inline"" protobuf:""bytes,2,name=deviceConfiguration""`"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",staging/src/k8s.io/api/resource/v1beta1/generated.proto,6,0,6,"@@ -600,6 +600,7 @@ message DeviceClaimConfiguration {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   optional DeviceConfiguration deviceConfiguration = 2;
@@ -706,6 +707,7 @@ message DeviceConstraint {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   // MatchAttribute requires that all devices in question have this
@@ -804,6 +806,7 @@ message DeviceRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 3;
 
   // AllocationMode and its related fields define how devices are allocated
@@ -878,6 +881,7 @@ message DeviceRequest {
   // +oneOf=deviceRequestType
   // +listType=atomic
   // +featureGate=DRAPrioritizedList
+  // +k8s:maxItems=8
   repeated DeviceSubRequest firstAvailable = 7;
 
   // If specified, the request's tolerations.
@@ -987,6 +991,7 @@ message DeviceRequestAllocationResult {
   // +optional
   // +listType=atomic
   // +featureGate=DRADeviceTaints
+  // +k8s:maxItems=16
   repeated DeviceToleration tolerations = 6;
 
   // BindingConditions contains a copy of the BindingConditions
@@ -1084,6 +1089,7 @@ message DeviceSubRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 3;
 
   // AllocationMode and its related fields define how devices are allocated"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",staging/src/k8s.io/api/resource/v1beta1/types.go,6,0,6,"@@ -812,6 +812,7 @@ type DeviceRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,3,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -886,6 +887,7 @@ type DeviceRequest struct {
 	// +oneOf=deviceRequestType
 	// +listType=atomic
 	// +featureGate=DRAPrioritizedList
+	// +k8s:maxItems=8
 	FirstAvailable []DeviceSubRequest `json:""firstAvailable,omitempty"" protobuf:""bytes,7,name=firstAvailable""`
 
 	// If specified, the request's tolerations.
@@ -973,6 +975,7 @@ type DeviceSubRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,3,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -1198,6 +1201,7 @@ type DeviceConstraint struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	// MatchAttribute requires that all devices in question have this
@@ -1255,6 +1259,7 @@ type DeviceClaimConfiguration struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	DeviceConfiguration `json:"",inline"" protobuf:""bytes,2,name=deviceConfiguration""`
@@ -1552,6 +1557,7 @@ type DeviceRequestAllocationResult struct {
 	// +optional
 	// +listType=atomic
 	// +featureGate=DRADeviceTaints
+	// +k8s:maxItems=16
 	Tolerations []DeviceToleration `json:""tolerations,omitempty"" protobuf:""bytes,6,opt,name=tolerations""`
 
 	// BindingConditions contains a copy of the BindingConditions"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",staging/src/k8s.io/api/resource/v1beta2/generated.proto,6,0,6,"@@ -592,6 +592,7 @@ message DeviceClaimConfiguration {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   optional DeviceConfiguration deviceConfiguration = 2;
@@ -698,6 +699,7 @@ message DeviceConstraint {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   // MatchAttribute requires that all devices in question have this
@@ -780,6 +782,7 @@ message DeviceRequest {
   //
   // +optional
   // +oneOf=deviceRequestType
+  // +k8s:optional
   optional ExactDeviceRequest exactly = 2;
 
   // FirstAvailable contains subrequests, of which exactly one will be
@@ -800,6 +803,7 @@ message DeviceRequest {
   // +oneOf=deviceRequestType
   // +listType=atomic
   // +featureGate=DRAPrioritizedList
+  // +k8s:maxItems=8
   repeated DeviceSubRequest firstAvailable = 3;
 }
 
@@ -962,6 +966,7 @@ message DeviceSubRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 3;
 
   // AllocationMode and its related fields define how devices are allocated
@@ -1133,6 +1138,7 @@ message ExactDeviceRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 2;
 
   // AllocationMode and its related fields define how devices are allocated"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",staging/src/k8s.io/api/resource/v1beta2/types.go,6,0,6,"@@ -792,6 +792,7 @@ type DeviceRequest struct {
 	//
 	// +optional
 	// +oneOf=deviceRequestType
+	// +k8s:optional
 	Exactly *ExactDeviceRequest `json:""exactly,omitempty"" protobuf:""bytes,2,name=exactly""`
 
 	// FirstAvailable contains subrequests, of which exactly one will be
@@ -812,6 +813,7 @@ type DeviceRequest struct {
 	// +oneOf=deviceRequestType
 	// +listType=atomic
 	// +featureGate=DRAPrioritizedList
+	// +k8s:maxItems=8
 	FirstAvailable []DeviceSubRequest `json:""firstAvailable,omitempty"" protobuf:""bytes,3,name=firstAvailable""`
 }
 
@@ -839,6 +841,7 @@ type ExactDeviceRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,2,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -965,6 +968,7 @@ type DeviceSubRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,3,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -1190,6 +1194,7 @@ type DeviceConstraint struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	// MatchAttribute requires that all devices in question have this
@@ -1247,6 +1252,7 @@ type DeviceClaimConfiguration struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	DeviceConfiguration `json:"",inline"" protobuf:""bytes,2,name=deviceConfiguration""`"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",staging/src/k8s.io/apiserver/pkg/registry/rest/validate.go,13,6,19,"@@ -68,12 +68,20 @@ func WithSubresourceMapper(subresourceMapper GroupVersionKindProvider) Validatio
 	}
 }
 
+// WithNormalizationRules sets the normalization rules for validation.
+func WithNormalizationRules(rules []field.NormalizationRule) ValidationConfig {
+	return func(config *validationConfigOption) {
+		config.normalizationRules = rules
+	}
+}
+
 type validationConfigOption struct {
 	opType               operation.Type
 	options              []string
 	takeover             bool
 	subresourceGVKMapper GroupVersionKindProvider
 	validationIdentifier string
+	normalizationRules   []field.NormalizationRule
 }
 
 // validateDeclaratively validates obj and oldObj against declarative
@@ -146,9 +154,9 @@ func parseSubresourcePath(subresourcePath string) ([]string, error) {
 
 // compareDeclarativeErrorsAndEmitMismatches checks for mismatches between imperative and declarative validation
 // and logs + emits metrics when inconsistencies are found
-func compareDeclarativeErrorsAndEmitMismatches(ctx context.Context, imperativeErrs, declarativeErrs field.ErrorList, takeover bool, validationIdentifier string) {
+func compareDeclarativeErrorsAndEmitMismatches(ctx context.Context, imperativeErrs, declarativeErrs field.ErrorList, takeover bool, validationIdentifier string, normalizationRules []field.NormalizationRule) {
 	logger := klog.FromContext(ctx)
-	mismatchDetails := gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs, takeover)
+	mismatchDetails := gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs, takeover, normalizationRules)
 	for _, detail := range mismatchDetails {
 		// Log information about the mismatch using contextual logger
 		logger.Error(nil, detail)
@@ -160,7 +168,7 @@ func compareDeclarativeErrorsAndEmitMismatches(ctx context.Context, imperativeEr
 
 // gatherDeclarativeValidationMismatches compares imperative and declarative validation errors
 // and returns detailed information about any mismatches found. Errors are compared via type, field, and origin
-func gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs field.ErrorList, takeover bool) []string {
+func gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs field.ErrorList, takeover bool, normalizationRules []field.NormalizationRule) []string {
 	var mismatchDetails []string
 	// short circuit here to minimize allocs for usual case of 0 validation errors
 	if len(imperativeErrs) == 0 && len(declarativeErrs) == 0 {
@@ -171,7 +179,7 @@ func gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs field
 	if takeover {
 		recommendation = ""Consider disabling the DeclarativeValidationTakeover feature gate to keep data persisted in etcd consistent with prior versions of Kubernetes.""
 	}
-	fuzzyMatcher := field.ErrorMatcher{}.ByType().ByField().ByOrigin().RequireOriginWhenInvalid()
+	fuzzyMatcher := field.ErrorMatcher{}.ByType().ByOrigin().RequireOriginWhenInvalid().ByFieldNormalized(normalizationRules)
 	exactMatcher := field.ErrorMatcher{}.Exactly()
 
 	// Dedupe imperative errors of exact error matches as they are
@@ -353,8 +361,7 @@ func ValidateDeclarativelyWithMigrationChecks(ctx context.Context, scheme *runti
 	// Call the panic-safe wrapper with the real validation function.
 	declarativeErrs := panicSafeValidateFunc(validateDeclaratively, cfg.takeover, cfg.validationIdentifier)(ctx, scheme, obj, oldObj, cfg)
 
-	compareDeclarativeErrorsAndEmitMismatches(ctx, errs, declarativeErrs, takeover, validationIdentifier)
-
+	compareDeclarativeErrorsAndEmitMismatches(ctx, errs, declarativeErrs, takeover, validationIdentifier, cfg.normalizationRules)
 	if takeover {
 		errs = append(errs.RemoveCoveredByDeclarative(), declarativeErrs...)
 	}"
kubernetes/kubernetes,9343d041209560f487cdf9121d5400a5685fa27a,Kubernetes Prow Robot,2025-10-06T21:53:06Z,"Merge pull request #134408 from yongruilin/vg_resourceclaim

feat(validation-gen): add path normalization options & migration k8s:maxItem on ResourceClaimSpec fields",staging/src/k8s.io/apiserver/pkg/registry/rest/validate_test.go,22,2,24,"@@ -213,6 +213,7 @@ func TestGatherDeclarativeValidationMismatches(t *testing.T) {
 	errB := field.Invalid(minReadySecondsPath, -1, ""covered error B"").WithOrigin(""minimum"")
 	coveredErrB := field.Invalid(minReadySecondsPath, -1, ""covered error B"").WithOrigin(""minimum"")
 	errBWithDiffDetail := field.Invalid(minReadySecondsPath, -1, ""covered error B - different detail"").WithOrigin(""minimum"")
+	errBWithDiffPath := field.Invalid(field.NewPath(""spec"").Child(""fakeminReadySeconds""), -1, ""covered error B"").WithOrigin(""minimum"")
 	coveredErrB.CoveredByDeclarative = true
 	errC := field.Invalid(replicasPath, nil, ""covered error C"").WithOrigin(""minimum"")
 	coveredErrC := field.Invalid(replicasPath, nil, ""covered error C"").WithOrigin(""minimum"")
@@ -227,6 +228,7 @@ func TestGatherDeclarativeValidationMismatches(t *testing.T) {
 		takeover                bool
 		expectMismatches        bool
 		expectDetailsContaining []string
+		normalizedRules         []field.NormalizationRule
 	}{
 		{
 			name:                    ""Declarative and imperative return 0 errors - no mismatch"",
@@ -358,11 +360,29 @@ func TestGatherDeclarativeValidationMismatches(t *testing.T) {
 			expectMismatches:        false,
 			expectDetailsContaining: []string{},
 		},
+		{
+			name: ""Field normalization, errors don't match - mismatch"",
+			imperativeErrors: field.ErrorList{
+				coveredErrB,
+			},
+			declarativeErrors: field.ErrorList{
+				errBWithDiffPath,
+			},
+			normalizedRules: []field.NormalizationRule{
+				{
+					Regexp:      regexp.MustCompile(`spec.fakeminReadySeconds`),
+					Replacement: ""spec.minReadySeconds"",
+				},
+			},
+			takeover:                false,
+			expectMismatches:        false,
+			expectDetailsContaining: []string{},
+		},
 	}
 
 	for _, tc := range testCases {
 		t.Run(tc.name, func(t *testing.T) {
-			details := gatherDeclarativeValidationMismatches(tc.imperativeErrors, tc.declarativeErrors, tc.takeover)
+			details := gatherDeclarativeValidationMismatches(tc.imperativeErrors, tc.declarativeErrors, tc.takeover, tc.normalizedRules)
 			// Check if mismatches were found if expected
 			if tc.expectMismatches && len(details) == 0 {
 				t.Errorf(""Expected mismatches but got none"")
@@ -429,7 +449,7 @@ func TestCompareDeclarativeErrorsAndEmitMismatches(t *testing.T) {
 			defer klog.LogToStderr(true)
 			ctx := context.Background()
 
-			compareDeclarativeErrorsAndEmitMismatches(ctx, tc.imperativeErrs, tc.declarativeErrs, tc.takeover, ""test_validationIdentifier"")
+			compareDeclarativeErrorsAndEmitMismatches(ctx, tc.imperativeErrs, tc.declarativeErrs, tc.takeover, ""test_validationIdentifier"", nil)
 
 			klog.Flush()
 			logOutput := buf.String()"
kubernetes/kubernetes,fd1ea25e9a2c22a2f038635d4e58eb766b099cc6,Kubernetes Prow Robot,2025-10-06T21:52:58Z,"Merge pull request #134389 from thockin/takeover-130780

Add resourcequota WarningsOnCreate when request > limits",pkg/registry/core/resourcequota/strategy.go,29,1,30,"@@ -18,6 +18,7 @@ package resourcequota
 
 import (
 	""context""
+	""fmt""
 
 	""k8s.io/apimachinery/pkg/runtime""
 	""k8s.io/apimachinery/pkg/util/validation/field""
@@ -74,9 +75,36 @@ func (resourcequotaStrategy) Validate(ctx context.Context, obj runtime.Object) f
 	return validation.ValidateResourceQuota(resourcequota)
 }
 
+// all known resource names that we want to check for request <= limit
+var knownResourceNames = []api.ResourceName{
+	api.ResourceCPU,
+	api.ResourceMemory,
+	api.ResourceStorage,
+	api.ResourceEphemeralStorage,
+}
+
 // WarningsOnCreate returns warnings for the creation of the given object.
 func (resourcequotaStrategy) WarningsOnCreate(ctx context.Context, obj runtime.Object) []string {
-	return nil
+	resourcequota := obj.(*api.ResourceQuota)
+	var allWarnings []string
+	for _, resourceName := range knownResourceNames {
+		requestResourceName := api.ResourceName(fmt.Sprintf(""requests.%s"", resourceName))
+		request, requestOK := resourcequota.Spec.Hard[requestResourceName]
+		if !requestOK && (resourceName == api.ResourceCPU || resourceName == api.ResourceMemory) {
+			// try the bare name for cpu and memory
+			request, requestOK = resourcequota.Spec.Hard[resourceName]
+			if requestOK {
+				requestResourceName = resourceName
+			}
+		}
+		limitResourceName := api.ResourceName(fmt.Sprintf(""limits.%s"", resourceName))
+		limit, limitOK := resourcequota.Spec.Hard[limitResourceName]
+		if requestOK && limitOK && request.Cmp(limit) > 0 {
+			allWarnings = append(allWarnings, fmt.Sprintf(""ResourceQuota %s (%s) should be less than %s (%s)"",
+				requestResourceName, request.String(), limitResourceName, limit.String()))
+		}
+	}
+	return allWarnings
 }
 
 // Canonicalize normalizes the object after validation."
kubernetes/kubernetes,fd1ea25e9a2c22a2f038635d4e58eb766b099cc6,Kubernetes Prow Robot,2025-10-06T21:52:58Z,"Merge pull request #134389 from thockin/takeover-130780

Add resourcequota WarningsOnCreate when request > limits",pkg/registry/core/resourcequota/strategy_test.go,83,0,83,"@@ -17,6 +17,8 @@ limitations under the License.
 package resourcequota
 
 import (
+	""context""
+	""reflect""
 	""testing""
 
 	""k8s.io/apimachinery/pkg/api/resource""
@@ -58,3 +60,84 @@ func TestResourceQuotaStrategy(t *testing.T) {
 		t.Errorf(""ResourceQuota does not allow setting status on create"")
 	}
 }
+
+func Test_WarningsOnCreate(t *testing.T) {
+	tests := []struct {
+		name         string
+		args         *api.ResourceQuota
+		wantWarnings []string
+	}{
+		{
+			name:         ""Empty Hard Spec"",
+			args:         &api.ResourceQuota{},
+			wantWarnings: []string{},
+		},
+		{
+			name: ""Request less than limit"",
+			args: &api.ResourceQuota{
+				Spec: api.ResourceQuotaSpec{
+					Hard: api.ResourceList{
+						api.ResourceName(""requests.cpu""):               resource.MustParse(""500m""),
+						api.ResourceName(""limits.cpu""):                 resource.MustParse(""1""),
+						api.ResourceName(""requests.memory""):            resource.MustParse(""1Gi""),
+						api.ResourceName(""limits.memory""):              resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.storage""):           resource.MustParse(""1Gi""),
+						api.ResourceName(""limits.storage""):             resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.ephemeral-storage""): resource.MustParse(""1Gi""),
+						api.ResourceName(""limits.ephemeral-storage""):   resource.MustParse(""2Gi""),
+					},
+				},
+			},
+			wantWarnings: []string{},
+		},
+		{
+			name: ""Request greater than limit"",
+			args: &api.ResourceQuota{
+				Spec: api.ResourceQuotaSpec{
+					Hard: api.ResourceList{
+						api.ResourceName(""requests.cpu""):               resource.MustParse(""2""),
+						api.ResourceName(""limits.cpu""):                 resource.MustParse(""1""),
+						api.ResourceName(""requests.memory""):            resource.MustParse(""3Gi""),
+						api.ResourceName(""limits.memory""):              resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.storage""):           resource.MustParse(""3Gi""),
+						api.ResourceName(""limits.storage""):             resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.ephemeral-storage""): resource.MustParse(""3Gi""),
+						api.ResourceName(""limits.ephemeral-storage""):   resource.MustParse(""2Gi""),
+					},
+				},
+			},
+			wantWarnings: []string{
+				""ResourceQuota requests.cpu (2) should be less than limits.cpu (1)"",
+				""ResourceQuota requests.memory (3Gi) should be less than limits.memory (2Gi)"",
+				""ResourceQuota requests.storage (3Gi) should be less than limits.storage (2Gi)"",
+				""ResourceQuota requests.ephemeral-storage (3Gi) should be less than limits.ephemeral-storage (2Gi)"",
+			},
+		},
+		{
+			name: ""Request greater than limit, bare names"",
+			args: &api.ResourceQuota{
+				Spec: api.ResourceQuotaSpec{
+					Hard: api.ResourceList{
+						api.ResourceName(""cpu""):           resource.MustParse(""2""),
+						api.ResourceName(""limits.cpu""):    resource.MustParse(""1""),
+						api.ResourceName(""memory""):        resource.MustParse(""3Gi""),
+						api.ResourceName(""limits.memory""): resource.MustParse(""2Gi""),
+					},
+				},
+			},
+			wantWarnings: []string{
+				""ResourceQuota cpu (2) should be less than limits.cpu (1)"",
+				""ResourceQuota memory (3Gi) should be less than limits.memory (2Gi)"",
+			},
+		},
+	}
+
+	for _, tt := range tests {
+		t.Run(tt.name, func(t *testing.T) {
+			warnings := Strategy.WarningsOnCreate(context.Background(), tt.args)
+			if len(warnings)+len(tt.wantWarnings) > 0 && !reflect.DeepEqual(warnings, tt.wantWarnings) {
+				t.Errorf(""WarningsOnCreate()\n   got: %q\n  want: %q"", warnings, tt.wantWarnings)
+			}
+		})
+	}
+}"
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,pkg/apis/resource/v1/zz_generated.validations.go,47,1,48,"@@ -31,6 +31,7 @@ import (
 	safe ""k8s.io/apimachinery/pkg/api/safe""
 	validate ""k8s.io/apimachinery/pkg/api/validate""
 	runtime ""k8s.io/apimachinery/pkg/runtime""
+	types ""k8s.io/apimachinery/pkg/types""
 	field ""k8s.io/apimachinery/pkg/util/validation/field""
 )
 
@@ -90,6 +91,34 @@ func RegisterValidations(scheme *runtime.Scheme) error {
 	return nil
 }
 
+// Validate_AllocatedDeviceStatus validates an instance of AllocatedDeviceStatus according
+// to declarative validation rules in the API schema.
+func Validate_AllocatedDeviceStatus(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.AllocatedDeviceStatus) (errs field.ErrorList) {
+	// field resourcev1.AllocatedDeviceStatus.Driver has no validation
+	// field resourcev1.AllocatedDeviceStatus.Pool has no validation
+	// field resourcev1.AllocatedDeviceStatus.Device has no validation
+
+	// field resourcev1.AllocatedDeviceStatus.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1.AllocatedDeviceStatus) *string { return oldObj.ShareID }))...)
+
+	// field resourcev1.AllocatedDeviceStatus.Conditions has no validation
+	// field resourcev1.AllocatedDeviceStatus.Data has no validation
+	// field resourcev1.AllocatedDeviceStatus.NetworkData has no validation
+	return errs
+}
+
 // Validate_AllocationResult validates an instance of AllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_AllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.AllocationResult) (errs field.ErrorList) {
@@ -294,7 +323,22 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 	// field resourcev1.DeviceRequestAllocationResult.Tolerations has no validation
 	// field resourcev1.DeviceRequestAllocationResult.BindingConditions has no validation
 	// field resourcev1.DeviceRequestAllocationResult.BindingFailureConditions has no validation
-	// field resourcev1.DeviceRequestAllocationResult.ShareID has no validation
+
+	// field resourcev1.DeviceRequestAllocationResult.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *types.UID) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1.DeviceRequestAllocationResult) *types.UID { return oldObj.ShareID }))...)
+
 	// field resourcev1.DeviceRequestAllocationResult.ConsumedCapacity has no validation
 	return errs
 }
@@ -417,6 +461,8 @@ func Validate_ResourceClaimStatus(ctx context.Context, op operation.Operation, f
 			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_AllocatedDeviceStatus)...)
 			return
 		}(fldPath.Child(""devices""), obj.Devices, safe.Field(oldObj, func(oldObj *resourcev1.ResourceClaimStatus) []resourcev1.AllocatedDeviceStatus { return oldObj.Devices }))...)
 "
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,pkg/apis/resource/v1beta1/zz_generated.validations.go,47,1,48,"@@ -31,6 +31,7 @@ import (
 	safe ""k8s.io/apimachinery/pkg/api/safe""
 	validate ""k8s.io/apimachinery/pkg/api/validate""
 	runtime ""k8s.io/apimachinery/pkg/runtime""
+	types ""k8s.io/apimachinery/pkg/types""
 	field ""k8s.io/apimachinery/pkg/util/validation/field""
 )
 
@@ -90,6 +91,34 @@ func RegisterValidations(scheme *runtime.Scheme) error {
 	return nil
 }
 
+// Validate_AllocatedDeviceStatus validates an instance of AllocatedDeviceStatus according
+// to declarative validation rules in the API schema.
+func Validate_AllocatedDeviceStatus(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.AllocatedDeviceStatus) (errs field.ErrorList) {
+	// field resourcev1beta1.AllocatedDeviceStatus.Driver has no validation
+	// field resourcev1beta1.AllocatedDeviceStatus.Pool has no validation
+	// field resourcev1beta1.AllocatedDeviceStatus.Device has no validation
+
+	// field resourcev1beta1.AllocatedDeviceStatus.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1beta1.AllocatedDeviceStatus) *string { return oldObj.ShareID }))...)
+
+	// field resourcev1beta1.AllocatedDeviceStatus.Conditions has no validation
+	// field resourcev1beta1.AllocatedDeviceStatus.Data has no validation
+	// field resourcev1beta1.AllocatedDeviceStatus.NetworkData has no validation
+	return errs
+}
+
 // Validate_AllocationResult validates an instance of AllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_AllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.AllocationResult) (errs field.ErrorList) {
@@ -304,7 +333,22 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 	// field resourcev1beta1.DeviceRequestAllocationResult.Tolerations has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.BindingConditions has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.BindingFailureConditions has no validation
-	// field resourcev1beta1.DeviceRequestAllocationResult.ShareID has no validation
+
+	// field resourcev1beta1.DeviceRequestAllocationResult.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *types.UID) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceRequestAllocationResult) *types.UID { return oldObj.ShareID }))...)
+
 	// field resourcev1beta1.DeviceRequestAllocationResult.ConsumedCapacity has no validation
 	return errs
 }
@@ -431,6 +475,8 @@ func Validate_ResourceClaimStatus(ctx context.Context, op operation.Operation, f
 			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_AllocatedDeviceStatus)...)
 			return
 		}(fldPath.Child(""devices""), obj.Devices, safe.Field(oldObj, func(oldObj *resourcev1beta1.ResourceClaimStatus) []resourcev1beta1.AllocatedDeviceStatus {
 			return oldObj.Devices"
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,pkg/apis/resource/v1beta2/zz_generated.validations.go,47,1,48,"@@ -31,6 +31,7 @@ import (
 	safe ""k8s.io/apimachinery/pkg/api/safe""
 	validate ""k8s.io/apimachinery/pkg/api/validate""
 	runtime ""k8s.io/apimachinery/pkg/runtime""
+	types ""k8s.io/apimachinery/pkg/types""
 	field ""k8s.io/apimachinery/pkg/util/validation/field""
 )
 
@@ -90,6 +91,34 @@ func RegisterValidations(scheme *runtime.Scheme) error {
 	return nil
 }
 
+// Validate_AllocatedDeviceStatus validates an instance of AllocatedDeviceStatus according
+// to declarative validation rules in the API schema.
+func Validate_AllocatedDeviceStatus(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.AllocatedDeviceStatus) (errs field.ErrorList) {
+	// field resourcev1beta2.AllocatedDeviceStatus.Driver has no validation
+	// field resourcev1beta2.AllocatedDeviceStatus.Pool has no validation
+	// field resourcev1beta2.AllocatedDeviceStatus.Device has no validation
+
+	// field resourcev1beta2.AllocatedDeviceStatus.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1beta2.AllocatedDeviceStatus) *string { return oldObj.ShareID }))...)
+
+	// field resourcev1beta2.AllocatedDeviceStatus.Conditions has no validation
+	// field resourcev1beta2.AllocatedDeviceStatus.Data has no validation
+	// field resourcev1beta2.AllocatedDeviceStatus.NetworkData has no validation
+	return errs
+}
+
 // Validate_AllocationResult validates an instance of AllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_AllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.AllocationResult) (errs field.ErrorList) {
@@ -304,7 +333,22 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 	// field resourcev1beta2.DeviceRequestAllocationResult.Tolerations has no validation
 	// field resourcev1beta2.DeviceRequestAllocationResult.BindingConditions has no validation
 	// field resourcev1beta2.DeviceRequestAllocationResult.BindingFailureConditions has no validation
-	// field resourcev1beta2.DeviceRequestAllocationResult.ShareID has no validation
+
+	// field resourcev1beta2.DeviceRequestAllocationResult.ShareID
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *types.UID) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			errs = append(errs, validate.UUID(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""shareID""), obj.ShareID, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceRequestAllocationResult) *types.UID { return oldObj.ShareID }))...)
+
 	// field resourcev1beta2.DeviceRequestAllocationResult.ConsumedCapacity has no validation
 	return errs
 }
@@ -431,6 +475,8 @@ func Validate_ResourceClaimStatus(ctx context.Context, op operation.Operation, f
 			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_AllocatedDeviceStatus)...)
 			return
 		}(fldPath.Child(""devices""), obj.Devices, safe.Field(oldObj, func(oldObj *resourcev1beta2.ResourceClaimStatus) []resourcev1beta2.AllocatedDeviceStatus {
 			return oldObj.Devices"
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,pkg/apis/resource/validation/validation.go,3,3,6,"@@ -84,7 +84,7 @@ func validateUID(uid string, fldPath *field.Path) field.ErrorList {
 	} else if len(uid) != 36 || uid != strings.ToLower(uid) {
 		allErrs = append(allErrs, field.Invalid(fldPath, uid, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters""))
 	}
-	return allErrs
+	return allErrs.WithOrigin(""format=k8s-uuid"")
 }
 
 // ValidateResourceClaim validates a ResourceClaim.
@@ -489,7 +489,7 @@ func validateDeviceRequestAllocationResult(result resource.DeviceRequestAllocati
 	allErrs = append(allErrs, validateDeviceName(result.Device, fldPath.Child(""device""))...)
 	allErrs = append(allErrs, validateDeviceBindingParameters(result.BindingConditions, result.BindingFailureConditions, fldPath)...)
 	if result.ShareID != nil {
-		allErrs = append(allErrs, validateUID(string(*result.ShareID), fldPath.Child(""shareID""))...)
+		allErrs = append(allErrs, validateUID(string(*result.ShareID), fldPath.Child(""shareID"")).MarkCoveredByDeclarative()...)
 	}
 	return allErrs
 }
@@ -1212,7 +1212,7 @@ func validateDeviceStatus(device resource.AllocatedDeviceStatus, fldPath *field.
 	allErrs = append(allErrs, validatePoolName(device.Pool, fldPath.Child(""pool""))...)
 	allErrs = append(allErrs, validateDeviceName(device.Device, fldPath.Child(""device""))...)
 	if device.ShareID != nil {
-		allErrs = append(allErrs, validateUID(*device.ShareID, fldPath.Child(""shareID""))...)
+		allErrs = append(allErrs, validateUID(*device.ShareID, fldPath.Child(""shareID"")).MarkCoveredByDeclarative()...)
 	}
 	deviceID := structured.MakeDeviceID(device.Driver, device.Pool, device.Device)
 	sharedDeviceID := structured.MakeSharedDeviceID(deviceID, (*types.UID)(device.ShareID))"
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,pkg/apis/resource/validation/validation_resourceclaim_test.go,4,4,8,"@@ -2157,10 +2157,10 @@ func TestValidateClaimStatusUpdate(t *testing.T) {
 		},
 		""invalid-add-allocated-status-invalid-share-id"": {
 			wantFailures: field.ErrorList{
-				field.Invalid(field.NewPath(""status"", ""devices"").Index(0).Child(""shareID""), badLengthShareIDStr, ""error validating uid: invalid UUID length: 1""),
-				field.Invalid(field.NewPath(""status"", ""devices"").Index(1).Child(""shareID""), badFormatShareIDStr, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters""),
-				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), badLengthShareIDStr, ""error validating uid: invalid UUID length: 1""),
-				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(1).Child(""shareID""), badFormatShareIDStr, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters""),
+				field.Invalid(field.NewPath(""status"", ""devices"").Index(0).Child(""shareID""), badLengthShareIDStr, ""error validating uid: invalid UUID length: 1"").MarkCoveredByDeclarative(),
+				field.Invalid(field.NewPath(""status"", ""devices"").Index(1).Child(""shareID""), badFormatShareIDStr, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"").MarkCoveredByDeclarative(),
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), badLengthShareIDStr, ""error validating uid: invalid UUID length: 1"").MarkCoveredByDeclarative(),
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(1).Child(""shareID""), badFormatShareIDStr, ""uid must be in RFC 4122 normalized form, `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"").MarkCoveredByDeclarative(),
 			},
 			oldClaim: testClaim(goodName, goodNS, validClaimSpec),
 			update: func(claim *resource.ResourceClaim) *resource.ResourceClaim {"
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,pkg/registry/resource/resourceclaim/declarative_validation_test.go,85,0,85,"@@ -23,6 +23,7 @@ import (
 
 	v1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
 	""k8s.io/apimachinery/pkg/runtime""
+	""k8s.io/apimachinery/pkg/types""
 	""k8s.io/apimachinery/pkg/util/validation/field""
 	genericapirequest ""k8s.io/apiserver/pkg/endpoints/request""
 	""k8s.io/client-go/kubernetes/fake""
@@ -195,6 +196,7 @@ func TestValidateStatusUpdateForDeclarative(t *testing.T) {
 	ctx := genericapirequest.WithRequestInfo(genericapirequest.NewDefaultContext(), &genericapirequest.RequestInfo{
 		APIGroup:    ""resource.k8s.io"",
 		APIVersion:  ""v1"",
+		Resource:    ""resourceclaims"",
 		Subresource: ""status"",
 	})
 	poolPath := field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""pool"")
@@ -203,6 +205,7 @@ func TestValidateStatusUpdateForDeclarative(t *testing.T) {
 		update       resource.ResourceClaim
 		expectedErrs field.ErrorList
 	}{
+		// .Status.Allocation.Devices.Results[%d].Pool
 		""valid pool name"": {
 			old:    mkValidResourceClaim(),
 			update: mkResourceClaimWithStatus(tweakStatusDeviceRequestAllocationResultPool(""dra.example.com/pool-a"")),
@@ -253,6 +256,58 @@ func TestValidateStatusUpdateForDeclarative(t *testing.T) {
 				field.Invalid(poolPath, """", """").WithOrigin(""format=k8s-resource-pool-name""),
 			},
 		},
+		// .Status.Allocation.Devices.Results[%d].ShareID
+		""valid status.Allocation.Devices.Results[].ShareID"": {
+			old:    mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(tweakStatusDeviceRequestAllocationResultShareID(""123e4567-e89b-12d3-a456-426614174000"")),
+		},
+		""invalid status.Allocation.Devices.Results[].ShareID"": {
+			old:    mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(tweakStatusDeviceRequestAllocationResultShareID(""invalid-uid"")),
+			expectedErrs: field.ErrorList{
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), ""invalid-uid"", """").WithOrigin(""format=k8s-uuid""),
+			},
+		},
+		""invalid uppercase status.Allocation.Devices.Results[].ShareID "": {
+			old:    mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(tweakStatusDeviceRequestAllocationResultShareID(""123e4567-E89b-12d3-A456-426614174000"")),
+			expectedErrs: field.ErrorList{
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), ""invalid-uid"", """").WithOrigin(""format=k8s-uuid""),
+			},
+		},
+		// .Status.Devices[%d].ShareID
+		""valid status.Devices[].ShareID"": {
+			old: mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(
+				tweakStatusDevices(standardAllocatedDeviceStatus()),
+				tweakStatusDeviceRequestAllocationResultShareID(""123e4567-e89b-12d3-a456-426614174000""),
+				tweakStatusAllocatedDeviceStatusShareID(""123e4567-e89b-12d3-a456-426614174000""),
+			),
+		},
+		""invalid status.Devices[].ShareID"": {
+			old: mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(
+				tweakStatusDevices(standardAllocatedDeviceStatus()),
+				tweakStatusDeviceRequestAllocationResultShareID(""invalid-uid""),
+				tweakStatusAllocatedDeviceStatusShareID(""invalid-uid""),
+			),
+			expectedErrs: field.ErrorList{
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), ""invalid-uid"", ""must be a lowercase UUID in 8-4-4-4-12 format"").WithOrigin(""format=k8s-uuid""),
+				field.Invalid(field.NewPath(""status"", ""devices"").Index(0).Child(""shareID""), ""invalid-uid"", ""must be a lowercase UUID in 8-4-4-4-12 format"").WithOrigin(""format=k8s-uuid""),
+			},
+		},
+		""invalid upper case status.Devices[].ShareID"": {
+			old: mkValidResourceClaim(),
+			update: mkResourceClaimWithStatus(
+				tweakStatusDevices(standardAllocatedDeviceStatus()),
+				tweakStatusDeviceRequestAllocationResultShareID(""123e4567-E89b-12d3-A456-426614174000""),
+				tweakStatusAllocatedDeviceStatusShareID(""123e4567-E89b-12d3-A456-426614174000""),
+			),
+			expectedErrs: field.ErrorList{
+				field.Invalid(field.NewPath(""status"", ""allocation"", ""devices"", ""results"").Index(0).Child(""shareID""), ""invalid-uid"", ""must be a lowercase UUID in 8-4-4-4-12 format"").WithOrigin(""format=k8s-uuid""),
+				field.Invalid(field.NewPath(""status"", ""devices"").Index(0).Child(""shareID""), ""invalid-uid"", ""must be a lowercase UUID in 8-4-4-4-12 format"").WithOrigin(""format=k8s-uuid""),
+			},
+		},
 	}
 	for k, tc := range testCases {
 		t.Run(k, func(t *testing.T) {
@@ -330,10 +385,40 @@ func mkResourceClaimWithStatus(tweaks ...func(rc *resource.ResourceClaim)) resou
 	return rc
 }
 
+func tweakStatusDevices(devices ...resource.AllocatedDeviceStatus) func(rc *resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		rc.Status.Devices = devices
+	}
+}
+
 func tweakStatusDeviceRequestAllocationResultPool(pool string) func(rc *resource.ResourceClaim) {
 	return func(rc *resource.ResourceClaim) {
 		for i := range rc.Status.Allocation.Devices.Results {
 			rc.Status.Allocation.Devices.Results[i].Pool = pool
 		}
 	}
 }
+
+func tweakStatusDeviceRequestAllocationResultShareID(shareID types.UID) func(rc *resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		for i := range rc.Status.Allocation.Devices.Results {
+			rc.Status.Allocation.Devices.Results[i].ShareID = &shareID
+		}
+	}
+}
+
+func tweakStatusAllocatedDeviceStatusShareID(shareID string) func(rc *resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		for i := range rc.Status.Devices {
+			rc.Status.Devices[i].ShareID = &shareID
+		}
+	}
+}
+
+func standardAllocatedDeviceStatus() resource.AllocatedDeviceStatus {
+	return resource.AllocatedDeviceStatus{
+		Driver: ""dra.example.com"",
+		Pool:   ""pool-0"",
+		Device: ""device-0"",
+	}
+}"
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,staging/src/k8s.io/api/resource/v1/generated.proto,4,0,4,"@@ -65,6 +65,8 @@ message AllocatedDeviceStatus {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 7;
 
   // Conditions contains the latest observation of the device's state.
@@ -897,6 +899,8 @@ message DeviceRequestAllocationResult {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 9;
 
   // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request."
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,staging/src/k8s.io/api/resource/v1/types.go,4,0,4,"@@ -1575,6 +1575,8 @@ type DeviceRequestAllocationResult struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *types.UID `json:""shareID,omitempty"" protobuf:""bytes,9,opt,name=shareID""`
 
 	// ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request.
@@ -1830,6 +1832,8 @@ type AllocatedDeviceStatus struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *string `json:""shareID,omitempty"" protobuf:""bytes,7,opt,name=shareID""`
 
 	// Conditions contains the latest observation of the device's state."
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,staging/src/k8s.io/api/resource/v1beta1/generated.proto,4,0,4,"@@ -65,6 +65,8 @@ message AllocatedDeviceStatus {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 7;
 
   // Conditions contains the latest observation of the device's state.
@@ -1018,6 +1020,8 @@ message DeviceRequestAllocationResult {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 9;
 
   // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request."
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,staging/src/k8s.io/api/resource/v1beta1/types.go,4,0,4,"@@ -1583,6 +1583,8 @@ type DeviceRequestAllocationResult struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *types.UID `json:""shareID,omitempty"" protobuf:""bytes,9,opt,name=shareID""`
 
 	// ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request.
@@ -1838,6 +1840,8 @@ type AllocatedDeviceStatus struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *string `json:""shareID,omitempty"" protobuf:""bytes,7,opt,name=shareID""`
 
 	// Conditions contains the latest observation of the device's state."
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,staging/src/k8s.io/api/resource/v1beta2/generated.proto,4,0,4,"@@ -65,6 +65,8 @@ message AllocatedDeviceStatus {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 7;
 
   // Conditions contains the latest observation of the device's state.
@@ -897,6 +899,8 @@ message DeviceRequestAllocationResult {
   //
   // +optional
   // +featureGate=DRAConsumableCapacity
+  // +k8s:optional
+  // +k8s:format=k8s-uuid
   optional string shareID = 9;
 
   // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request."
kubernetes/kubernetes,4ca286819a96d20df31ce6868c879ddb6f6d2c6d,Lalit Chauhan,2025-10-02T21:36:37Z,Add DV for uids in resourceClaim Status,staging/src/k8s.io/api/resource/v1beta2/types.go,4,0,4,"@@ -1575,6 +1575,8 @@ type DeviceRequestAllocationResult struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *types.UID `json:""shareID,omitempty"" protobuf:""bytes,9,opt,name=shareID""`
 
 	// ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request.
@@ -1830,6 +1832,8 @@ type AllocatedDeviceStatus struct {
 	//
 	// +optional
 	// +featureGate=DRAConsumableCapacity
+	// +k8s:optional
+	// +k8s:format=k8s-uuid
 	ShareID *string `json:""shareID,omitempty"" protobuf:""bytes,7,opt,name=shareID""`
 
 	// Conditions contains the latest observation of the device's state."
kubernetes/kubernetes,439a3c4f3577f837b273e07e443fbdf19e14b6a7,Kubernetes Prow Robot,2025-10-06T19:12:59Z,"Merge pull request #134074 from rutigs/master

Record SyncTerminatingPod error and set error status on span when non-nil err returned",pkg/kubelet/kubelet.go,15,6,21,"@@ -2128,19 +2128,28 @@ func (kl *Kubelet) SyncPod(ctx context.Context, updateType kubetypes.SyncPodType
 // during eviction). This method is not guaranteed to be called if a pod is force deleted from the
 // configuration and the kubelet is restarted - SyncTerminatingRuntimePod handles those orphaned
 // pods.
-func (kl *Kubelet) SyncTerminatingPod(_ context.Context, pod *v1.Pod, podStatus *kubecontainer.PodStatus, gracePeriod *int64, podStatusFn func(*v1.PodStatus)) error {
+func (kl *Kubelet) SyncTerminatingPod(_ context.Context, pod *v1.Pod, podStatus *kubecontainer.PodStatus, gracePeriod *int64, podStatusFn func(*v1.PodStatus)) (err error) {
 	// TODO(#113606): connect this with the incoming context parameter, which comes from the pod worker.
 	// Currently, using that context causes test failures.
-	ctx, otelSpan := kl.tracer.Start(context.Background(), ""syncTerminatingPod"", trace.WithAttributes(
+	ctx := context.Background()
+
+	logger := klog.FromContext(ctx)
+	klog.V(4).InfoS(""SyncTerminatingPod enter"", ""pod"", klog.KObj(pod), ""podUID"", pod.UID)
+
+	ctx, otelSpan := kl.tracer.Start(ctx, ""syncTerminatingPod"", trace.WithAttributes(
 		semconv.K8SPodUIDKey.String(string(pod.UID)),
 		attribute.String(""k8s.pod"", klog.KObj(pod).String()),
 		semconv.K8SPodNameKey.String(pod.Name),
 		semconv.K8SNamespaceNameKey.String(pod.Namespace),
 	))
-	logger := klog.FromContext(ctx)
-	defer otelSpan.End()
-	klog.V(4).InfoS(""SyncTerminatingPod enter"", ""pod"", klog.KObj(pod), ""podUID"", pod.UID)
-	defer klog.V(4).InfoS(""SyncTerminatingPod exit"", ""pod"", klog.KObj(pod), ""podUID"", pod.UID)
+	defer func() {
+		if err != nil {
+			otelSpan.RecordError(err)
+			otelSpan.SetStatus(codes.Error, err.Error())
+		}
+		otelSpan.End()
+		klog.V(4).InfoS(""SyncTerminatingPod exit"", ""pod"", klog.KObj(pod), ""podUID"", pod.UID)
+	}()
 
 	apiPodStatus := kl.generateAPIPodStatus(pod, podStatus, false)
 	if podStatusFn != nil {"
kubernetes/kubernetes,da05e3ccc786c6787ee1f45a1e925d55c61ced60,Kubernetes Prow Robot,2025-10-06T18:21:08Z,"Merge pull request #134369 from rbiamru/add-nodeconformance-mirror-pod

test/e2e_node: mark MirrorPod update tests as [NodeConformance]",test/e2e_node/mirror_pod_test.go,3,3,6,"@@ -300,7 +300,7 @@ var _ = SIGDescribe(""MirrorPod (Pod Generation)"", func() {
 			}, 2*time.Minute, time.Second*4).Should(gomega.Succeed())
 		})
 
-		f.It(""mirror pod: update activeDeadlineSeconds"", func(ctx context.Context) {
+		f.It(""mirror pod: update activeDeadlineSeconds"", f.WithNodeConformance(), func(ctx context.Context) {
 			ginkgo.By(""get mirror pod uid"")
 			pod, err := f.ClientSet.CoreV1().Pods(ns).Get(ctx, mirrorPodName, metav1.GetOptions{})
 			framework.ExpectNoError(err)
@@ -323,7 +323,7 @@ var _ = SIGDescribe(""MirrorPod (Pod Generation)"", func() {
 			gomega.Expect(pod.Status.ObservedGeneration).To(gomega.BeEquivalentTo(int64(0)))
 		})
 
-		f.It(""mirror pod: update container image"", func(ctx context.Context) {
+		f.It(""mirror pod: update container image"", f.WithNodeConformance(), func(ctx context.Context) {
 			ginkgo.By(""get mirror pod uid"")
 			pod, err := f.ClientSet.CoreV1().Pods(ns).Get(ctx, mirrorPodName, metav1.GetOptions{})
 			framework.ExpectNoError(err)
@@ -346,7 +346,7 @@ var _ = SIGDescribe(""MirrorPod (Pod Generation)"", func() {
 			gomega.Expect(pod.Status.ObservedGeneration).To(gomega.BeEquivalentTo(int64(0)))
 		})
 
-		f.It(""mirror pod: update initContainer image"", func(ctx context.Context) {
+		f.It(""mirror pod: update initContainer image"", f.WithNodeConformance(), func(ctx context.Context) {
 			ginkgo.By(""get mirror pod uid"")
 			pod, err := f.ClientSet.CoreV1().Pods(ns).Get(ctx, mirrorPodName, metav1.GetOptions{})
 			framework.ExpectNoError(err)"
kubernetes/kubernetes,f74a7458d945e27b78cac0f83d1d3f24cbf9170b,Kubernetes Prow Robot,2025-10-06T18:21:00Z,"Merge pull request #134173 from toVersus/test/deflake-sidecar-e2e

deflake e2e: ensure pod with sidecars restarts in correct order after node reboot",test/e2e_node/container_lifecycle_test.go,4,4,8,"@@ -5916,7 +5916,7 @@ var _ = SIGDescribe(feature.SidecarContainers, framework.WithSerial(), ""Containe
 	f.NamespacePodSecurityLevel = admissionapi.LevelPrivileged
 
 	ginkgo.When(""A node running restartable init containers reboots"", func() {
-		ginkgo.It(""should restart the containers in right order with the proper phase after the node reboot"", func(ctx context.Context) {
+		ginkgo.It(""should restart the containers in right order after the node reboot"", func(ctx context.Context) {
 			init1 := ""init-1""
 			restartableInit2 := ""restartable-init-2""
 			init3 := ""init-3""
@@ -6016,9 +6016,9 @@ var _ = SIGDescribe(feature.SidecarContainers, framework.WithSerial(), ""Containe
 			})
 			framework.ExpectNoError(err)
 
-			ginkgo.By(""Waiting for the pod to run after re-initialization"")
-			err = e2epod.WaitForPodRunningInNamespace(ctx, f.ClientSet, pod)
-			framework.ExpectNoError(err)
+			ginkgo.By(""Waiting for regular container to start running"")
+			err = e2epod.WaitForContainerRunning(ctx, f.ClientSet, pod.Namespace, pod.Name, regular1, f.Timeouts.PodStart)
+			framework.ExpectNoError(err, ""regular container %q should be running"", regular1)
 
 			ginkgo.By(""Parsing results"")
 			pod, err = client.Get(ctx, pod.Name, metav1.GetOptions{})"
kubernetes/kubernetes,6965075ebd8eab5b1adf230cedc50da99d8343e4,yongruilin,2025-10-06T16:41:10Z,Address feedback: simpliy errormatcher instantiation,pkg/api/testing/validation.go,1,6,7,"@@ -235,12 +235,7 @@ func verifyValidationEquivalence(t *testing.T, expectedErrs field.ErrorList, run
 	var imperativeErrs field.ErrorList
 
 	// The errOutputMatcher is used to verify the output matches the expected errors in test cases.
-	errOutputMatcher := field.ErrorMatcher{}.ByType().ByOrigin()
-	if len(opt.NormalizationRules) > 0 {
-		errOutputMatcher = errOutputMatcher.ByFieldNormalized(opt.NormalizationRules)
-	} else {
-		errOutputMatcher = errOutputMatcher.ByField()
-	}
+	errOutputMatcher := field.ErrorMatcher{}.ByType().ByOrigin().ByFieldNormalized(opt.NormalizationRules)
 
 	// We only need to test both gate enabled and disabled together, because
 	// 1) the DeclarativeValidationTakeover won't take effect if DeclarativeValidation is disabled."
kubernetes/kubernetes,6965075ebd8eab5b1adf230cedc50da99d8343e4,yongruilin,2025-10-06T16:41:10Z,Address feedback: simpliy errormatcher instantiation,staging/src/k8s.io/apiserver/pkg/registry/rest/validate.go,1,6,7,"@@ -179,12 +179,7 @@ func gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs field
 	if takeover {
 		recommendation = ""Consider disabling the DeclarativeValidationTakeover feature gate to keep data persisted in etcd consistent with prior versions of Kubernetes.""
 	}
-	fuzzyMatcher := field.ErrorMatcher{}.ByType().ByOrigin().RequireOriginWhenInvalid()
-	if len(normalizationRules) > 0 {
-		fuzzyMatcher = fuzzyMatcher.ByFieldNormalized(normalizationRules)
-	} else {
-		fuzzyMatcher = fuzzyMatcher.ByField()
-	}
+	fuzzyMatcher := field.ErrorMatcher{}.ByType().ByOrigin().RequireOriginWhenInvalid().ByFieldNormalized(normalizationRules)
 	exactMatcher := field.ErrorMatcher{}.Exactly()
 
 	// Dedupe imperative errors of exact error matches as they are"
kubernetes/kubernetes,6138a68f4e8e4a4c9851f23cd800ca126e0a89dd,yongruilin,2025-10-06T16:36:57Z,fix(validation): Mark covered errors in TestValidateClaim for better clarity,pkg/apis/resource/validation/validation_resourceclaim_test.go,1,1,2,"@@ -648,7 +648,7 @@ func TestValidateClaim(t *testing.T) {
 		},
 		""prioritized-list-too-many-subrequests"": {
 			wantFailures: field.ErrorList{
-				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""firstAvailable""), 9, 8),
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""firstAvailable""), 9, 8).MarkCoveredByDeclarative(),
 			},
 			claim: func() *resource.ResourceClaim {
 				claim := testClaim(goodName, goodNS, validClaimSpec)"
kubernetes/kubernetes,763c01ef68f4ddd18cdcd78bfeb61170a90a2f96,yongruilin,2025-10-03T20:56:06Z,feat(validation): Add normalization rules for ResourceClaim validation,pkg/registry/resource/resourceclaim/declarative_validation_test.go,127,3,130,"@@ -84,11 +84,58 @@ func testDeclarativeValidate(t *testing.T, apiVersion string) {
 				field.TooMany(field.NewPath(""spec"", ""devices"", ""config""), 33, 32).WithOrigin(""maxItems""),
 			},
 		},
+		""invalid firstAvailable, too many"": {
+			input: mkValidResourceClaim(tweakFirstAvailable(9)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""firstAvailable""), 9, 8).WithOrigin(""maxItems""),
+			},
+		},
+		""invalid selectors, too many"": {
+			input: mkValidResourceClaim(tweakExactlySelectors(33)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""exactly"", ""selectors""), 33, 32).WithOrigin(""maxItems"").MarkCoveredByDeclarative(),
+			},
+		},
+		""invalid subrequest selectors, too many"": {
+			input: mkValidResourceClaim(tweakSubRequestSelectors(33)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests"").Index(0).Child(""firstAvailable"").Index(0).Child(""selectors""), 33, 32).WithOrigin(""maxItems""),
+			},
+		},
+		""invalid constraint requests, too many"": {
+			input: mkValidResourceClaim(tweakConstraintRequests(33)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests""), 33, 32).WithOrigin(""maxItems""),
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""constraints"").Index(0).Child(""requests""), 33, 32).WithOrigin(""maxItems""),
+			},
+		},
+		""invalid config requests, too many"": {
+			input: mkValidResourceClaim(tweakConfigRequests(33)),
+			expectedErrs: field.ErrorList{
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""requests""), 33, 32).WithOrigin(""maxItems""),
+				field.TooMany(field.NewPath(""spec"", ""devices"", ""config"").Index(0).Child(""requests""), 33, 32).WithOrigin(""maxItems""),
+			},
+		},
+		""valid firstAvailable, max allowed"": {
+			input: mkValidResourceClaim(tweakFirstAvailable(8)),
+		},
+		""valid selectors, max allowed"": {
+			input: mkValidResourceClaim(tweakExactlySelectors(32)),
+		},
+		""valid subrequest selectors, max allowed"": {
+			input: mkValidResourceClaim(tweakSubRequestSelectors(32)),
+		},
+		""valid constraint requests, max allowed"": {
+			input: mkValidResourceClaim(tweakConstraintRequests(32)),
+		},
+		""valid config requests, max allowed"": {
+			input: mkValidResourceClaim(tweakConfigRequests(32)),
+		},
 		// TODO: Add more test cases
 	}
 	for k, tc := range testCases {
 		t.Run(k, func(t *testing.T) {
-			apitesting.VerifyValidationEquivalence(t, ctx, &tc.input, Strategy.Validate, tc.expectedErrs)
+			apitesting.VerifyValidationEquivalence(t, ctx, &tc.input, Strategy.Validate, tc.expectedErrs, apitesting.WithNormalizationRules(resourceClaimNormalizationRules...))
 		})
 	}
 }
@@ -118,6 +165,83 @@ func tweakDevicesRequests(items int) func(*resource.ResourceClaim) {
 	}
 }
 
+func tweakExactlySelectors(items int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		for i := 0; i < items; i++ {
+			rc.Spec.Devices.Requests[0].Exactly.Selectors = append(rc.Spec.Devices.Requests[0].Exactly.Selectors,
+				resource.DeviceSelector{
+					CEL: &resource.CELDeviceSelector{
+						Expression: fmt.Sprintf(""device.driver == \""test.driver.io%d\"""", i),
+					},
+				},
+			)
+		}
+	}
+}
+
+func tweakSubRequestSelectors(items int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		rc.Spec.Devices.Requests[0].Exactly = nil
+		rc.Spec.Devices.Requests[0].FirstAvailable = []resource.DeviceSubRequest{
+			{
+				Name:            ""sub-0"",
+				DeviceClassName: ""class"",
+				AllocationMode:  resource.DeviceAllocationModeAll,
+			},
+		}
+		for i := 0; i < items; i++ {
+			rc.Spec.Devices.Requests[0].FirstAvailable[0].Selectors = append(rc.Spec.Devices.Requests[0].FirstAvailable[0].Selectors,
+				resource.DeviceSelector{
+					CEL: &resource.CELDeviceSelector{
+						Expression: fmt.Sprintf(""device.driver == \""test.driver.io%d\"""", i),
+					},
+				},
+			)
+		}
+	}
+}
+
+func tweakConstraintRequests(count int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		tweakDevicesRequests(count)(rc)
+		if len(rc.Spec.Devices.Constraints) == 0 {
+			rc.Spec.Devices.Constraints = append(rc.Spec.Devices.Constraints, mkDeviceConstraint())
+		}
+		rc.Spec.Devices.Constraints[0].Requests = []string{}
+		for i := 0; i < count; i++ {
+			rc.Spec.Devices.Constraints[0].Requests = append(rc.Spec.Devices.Constraints[0].Requests, fmt.Sprintf(""req-%d"", i))
+		}
+	}
+}
+
+func tweakConfigRequests(count int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		tweakDevicesRequests(count)(rc)
+		if len(rc.Spec.Devices.Config) == 0 {
+			rc.Spec.Devices.Config = append(rc.Spec.Devices.Config, mkDeviceClaimConfiguration())
+		}
+		rc.Spec.Devices.Config[0].Requests = []string{}
+		for i := 0; i < count; i++ {
+			rc.Spec.Devices.Config[0].Requests = append(rc.Spec.Devices.Config[0].Requests, fmt.Sprintf(""req-%d"", i))
+		}
+	}
+}
+
+func tweakFirstAvailable(items int) func(*resource.ResourceClaim) {
+	return func(rc *resource.ResourceClaim) {
+		rc.Spec.Devices.Requests[0].Exactly = nil
+		for i := 0; i < items; i++ {
+			rc.Spec.Devices.Requests[0].FirstAvailable = append(rc.Spec.Devices.Requests[0].FirstAvailable,
+				resource.DeviceSubRequest{
+					Name:            fmt.Sprintf(""sub-%d"", i),
+					DeviceClassName: ""class"",
+					AllocationMode:  resource.DeviceAllocationModeAll,
+				},
+			)
+		}
+	}
+}
+
 func mkDeviceClaimConfiguration() resource.DeviceClaimConfiguration {
 	return resource.DeviceClaimConfiguration{
 		Requests: []string{""req-0""},
@@ -181,7 +305,7 @@ func testDeclarativeValidateUpdate(t *testing.T, apiVersion string) {
 		t.Run(k, func(t *testing.T) {
 			tc.old.ResourceVersion = ""1""
 			tc.update.ResourceVersion = ""2""
-			apitesting.VerifyUpdateValidationEquivalence(t, ctx, &tc.update, &tc.old, Strategy.ValidateUpdate, tc.expectedErrs)
+			apitesting.VerifyUpdateValidationEquivalence(t, ctx, &tc.update, &tc.old, Strategy.ValidateUpdate, tc.expectedErrs, apitesting.WithNormalizationRules(resourceClaimNormalizationRules...))
 		})
 	}
 }
@@ -258,7 +382,7 @@ func TestValidateStatusUpdateForDeclarative(t *testing.T) {
 		t.Run(k, func(t *testing.T) {
 			tc.old.ObjectMeta.ResourceVersion = ""1""
 			tc.update.ObjectMeta.ResourceVersion = ""1""
-			apitesting.VerifyUpdateValidationEquivalence(t, ctx, &tc.update, &tc.old, strategy.ValidateUpdate, tc.expectedErrs, ""status"")
+			apitesting.VerifyUpdateValidationEquivalence(t, ctx, &tc.update, &tc.old, strategy.ValidateUpdate, tc.expectedErrs, apitesting.WithSubResources(""status""))
 		})
 	}
 }"
kubernetes/kubernetes,763c01ef68f4ddd18cdcd78bfeb61170a90a2f96,yongruilin,2025-10-03T20:56:06Z,feat(validation): Add normalization rules for ResourceClaim validation,pkg/registry/resource/resourceclaim/strategy.go,12,2,14,"@@ -19,6 +19,7 @@ package resourceclaim
 import (
 	""context""
 	""errors""
+	""regexp""
 
 	""sigs.k8s.io/structured-merge-diff/v6/fieldpath""
 
@@ -52,6 +53,15 @@ type resourceclaimStrategy struct {
 	nsClient v1.NamespaceInterface
 }
 
+var resourceClaimNormalizationRules = []field.NormalizationRule{
+	{
+		// The ""exactly"" struct was added in v1beta2. In earlier API
+		// versions, its fields were directly part of the DeviceRequest.
+		Regexp:      regexp.MustCompile(`spec\.devices\.requests\[(\d+)\]\.selectors`),
+		Replacement: ""spec.devices.requests[$1].exactly.selectors"",
+	},
+}
+
 // NewStrategy is the default logic that applies when creating and updating ResourceClaim objects.
 func NewStrategy(nsClient v1.NamespaceInterface) *resourceclaimStrategy {
 	return &resourceclaimStrategy{
@@ -100,7 +110,7 @@ func (s *resourceclaimStrategy) Validate(ctx context.Context, obj runtime.Object
 
 	allErrs := resourceutils.AuthorizedForAdmin(ctx, claim.Spec.Devices.Requests, claim.Namespace, s.nsClient)
 	allErrs = append(allErrs, validation.ValidateResourceClaim(claim)...)
-	return rest.ValidateDeclarativelyWithMigrationChecks(ctx, legacyscheme.Scheme, claim, nil, allErrs, operation.Create)
+	return rest.ValidateDeclarativelyWithMigrationChecks(ctx, legacyscheme.Scheme, claim, nil, allErrs, operation.Create, rest.WithNormalizationRules(resourceClaimNormalizationRules))
 }
 
 func (*resourceclaimStrategy) WarningsOnCreate(ctx context.Context, obj runtime.Object) []string {
@@ -128,7 +138,7 @@ func (s *resourceclaimStrategy) ValidateUpdate(ctx context.Context, obj, old run
 	// AuthorizedForAdmin isn't needed here because the spec is immutable.
 	errorList := validation.ValidateResourceClaim(newClaim)
 	errorList = append(errorList, validation.ValidateResourceClaimUpdate(newClaim, oldClaim)...)
-	return rest.ValidateDeclarativelyWithMigrationChecks(ctx, legacyscheme.Scheme, newClaim, oldClaim, errorList, operation.Update)
+	return rest.ValidateDeclarativelyWithMigrationChecks(ctx, legacyscheme.Scheme, newClaim, oldClaim, errorList, operation.Update, rest.WithNormalizationRules(resourceClaimNormalizationRules))
 }
 
 func (*resourceclaimStrategy) WarningsOnUpdate(ctx context.Context, obj, old runtime.Object) []string {"
kubernetes/kubernetes,37f067778e9ef714d02e5e901c25e83170144dc1,Kubernetes Prow Robot,2025-10-06T10:19:06Z,"Merge pull request #134384 from tchap/kubectl-config-set-context-shorthand-namespace

kubectl config set-context: Add -n flag",staging/src/k8s.io/kubectl/pkg/cmd/config/set_context.go,1,1,2,"@@ -79,7 +79,7 @@ func NewCmdConfigSetContext(restClientGetter genericclioptions.RESTClientGetter,
 	cmd.Flags().BoolVar(&options.currContext, ""current"", options.currContext, ""Modify the current context"")
 	cmd.Flags().Var(&options.cluster, clientcmd.FlagClusterName, clientcmd.FlagClusterName+"" for the context entry in kubeconfig"")
 	cmd.Flags().Var(&options.authInfo, clientcmd.FlagAuthInfoName, clientcmd.FlagAuthInfoName+"" for the context entry in kubeconfig"")
-	cmd.Flags().Var(&options.namespace, clientcmd.FlagNamespace, clientcmd.FlagNamespace+"" for the context entry in kubeconfig"")
+	cmd.Flags().VarP(&options.namespace, clientcmd.FlagNamespace, ""n"", clientcmd.FlagNamespace+"" for the context entry in kubeconfig"")
 	cmdutil.CheckErr(cmd.RegisterFlagCompletionFunc(
 		""namespace"",
 		func(cmd *cobra.Command, args []string, toComplete string) ([]string, cobra.ShellCompDirective) {"
kubernetes/kubernetes,37f067778e9ef714d02e5e901c25e83170144dc1,Kubernetes Prow Robot,2025-10-06T10:19:06Z,"Merge pull request #134384 from tchap/kubectl-config-set-context-shorthand-namespace

kubectl config set-context: Add -n flag",staging/src/k8s.io/kubectl/pkg/cmd/config/set_context_test.go,60,37,97,"@@ -37,48 +37,71 @@ type setContextTest struct {
 	expectedConfig clientcmdapi.Config //expect kubectl config
 }
 
+var namespaceFlagCases = []struct {
+	description   string
+	namespaceFlag string
+}{
+	{
+		description:   ""long namespace flag"",
+		namespaceFlag: ""--namespace"",
+	},
+	{
+		description:   ""short namespace flag"",
+		namespaceFlag: ""-n"",
+	},
+}
+
 func TestCreateContext(t *testing.T) {
-	conf := clientcmdapi.Config{}
-	test := setContextTest{
-		testContext: ""shaker-context"",
-		description: ""Testing for create a new context"",
-		config:      conf,
-		args:        []string{""shaker-context""},
-		flags: []string{
-			""--cluster=cluster_nickname"",
-			""--user=user_nickname"",
-			""--namespace=namespace"",
-		},
-		expected: `Context ""shaker-context"" created.` + ""\n"",
-		expectedConfig: clientcmdapi.Config{
-			Contexts: map[string]*clientcmdapi.Context{
-				""shaker-context"": {AuthInfo: ""user_nickname"", Cluster: ""cluster_nickname"", Namespace: ""namespace""}},
-		},
+	for _, tc := range namespaceFlagCases {
+		t.Run(tc.description, func(t *testing.T) {
+			conf := clientcmdapi.Config{}
+			test := setContextTest{
+				testContext: ""shaker-context"",
+				description: ""Testing for create a new context"",
+				config:      conf,
+				args:        []string{""shaker-context""},
+				flags: []string{
+					""--cluster=cluster_nickname"",
+					""--user=user_nickname"",
+					tc.namespaceFlag + ""=namespace"",
+				},
+				expected: `Context ""shaker-context"" created.` + ""\n"",
+				expectedConfig: clientcmdapi.Config{
+					Contexts: map[string]*clientcmdapi.Context{
+						""shaker-context"": {AuthInfo: ""user_nickname"", Cluster: ""cluster_nickname"", Namespace: ""namespace""}},
+				},
+			}
+			test.run(t)
+		})
 	}
-	test.run(t)
 }
+
 func TestModifyContext(t *testing.T) {
-	conf := clientcmdapi.Config{
-		Contexts: map[string]*clientcmdapi.Context{
-			""shaker-context"": {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""},
-			""not-this"":       {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""}}}
-	test := setContextTest{
-		testContext: ""shaker-context"",
-		description: ""Testing for modify a already exist context"",
-		config:      conf,
-		args:        []string{""shaker-context""},
-		flags: []string{
-			""--cluster=cluster_nickname"",
-			""--user=user_nickname"",
-			""--namespace=namespace"",
-		},
-		expected: `Context ""shaker-context"" modified.` + ""\n"",
-		expectedConfig: clientcmdapi.Config{
-			Contexts: map[string]*clientcmdapi.Context{
-				""shaker-context"": {AuthInfo: ""user_nickname"", Cluster: ""cluster_nickname"", Namespace: ""namespace""},
-				""not-this"":       {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""}}},
+	for _, tc := range namespaceFlagCases {
+		t.Run(tc.description, func(t *testing.T) {
+			conf := clientcmdapi.Config{
+				Contexts: map[string]*clientcmdapi.Context{
+					""shaker-context"": {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""},
+					""not-this"":       {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""}}}
+			test := setContextTest{
+				testContext: ""shaker-context"",
+				description: ""Testing for modify a already exist context"",
+				config:      conf,
+				args:        []string{""shaker-context""},
+				flags: []string{
+					""--cluster=cluster_nickname"",
+					""--user=user_nickname"",
+					tc.namespaceFlag + ""=namespace"",
+				},
+				expected: `Context ""shaker-context"" modified.` + ""\n"",
+				expectedConfig: clientcmdapi.Config{
+					Contexts: map[string]*clientcmdapi.Context{
+						""shaker-context"": {AuthInfo: ""user_nickname"", Cluster: ""cluster_nickname"", Namespace: ""namespace""},
+						""not-this"":       {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""}}},
+			}
+			test.run(t)
+		})
 	}
-	test.run(t)
 }
 
 func TestModifyCurrentContext(t *testing.T) {"
kubernetes/kubernetes,37f067778e9ef714d02e5e901c25e83170144dc1,Kubernetes Prow Robot,2025-10-06T10:19:06Z,"Merge pull request #134384 from tchap/kubectl-config-set-context-shorthand-namespace

kubectl config set-context: Add -n flag",test/cmd/delete.sh,2,2,4,"@@ -38,15 +38,15 @@ run_kubectl_delete_allnamespaces_tests() {
   kubectl delete configmap --dry-run=server -l deletetest=true --all-namespaces
   kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}""
   kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'one:'
-  kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}""
+  kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}""
   kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'two:'
 
   kubectl delete configmap -l deletetest=true --all-namespaces
 
   # no configmaps should be in either of those namespaces with label deletetest
   kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}""
   kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" ''
-  kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}""
+  kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}""
   kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" ''
 
   set +o nounset"
kubernetes/kubernetes,d03fab555f1fb77d5045f24bc4cce94ecde2bb98,Ondra Kupka,2025-10-02T15:26:18Z,"kubectl config set-context: Add -n flag

This is simply a shorthand for --namespace as with other commands.",staging/src/k8s.io/kubectl/pkg/cmd/config/set_context.go,1,1,2,"@@ -79,7 +79,7 @@ func NewCmdConfigSetContext(restClientGetter genericclioptions.RESTClientGetter,
 	cmd.Flags().BoolVar(&options.currContext, ""current"", options.currContext, ""Modify the current context"")
 	cmd.Flags().Var(&options.cluster, clientcmd.FlagClusterName, clientcmd.FlagClusterName+"" for the context entry in kubeconfig"")
 	cmd.Flags().Var(&options.authInfo, clientcmd.FlagAuthInfoName, clientcmd.FlagAuthInfoName+"" for the context entry in kubeconfig"")
-	cmd.Flags().Var(&options.namespace, clientcmd.FlagNamespace, clientcmd.FlagNamespace+"" for the context entry in kubeconfig"")
+	cmd.Flags().VarP(&options.namespace, clientcmd.FlagNamespace, ""n"", clientcmd.FlagNamespace+"" for the context entry in kubeconfig"")
 	cmdutil.CheckErr(cmd.RegisterFlagCompletionFunc(
 		""namespace"",
 		func(cmd *cobra.Command, args []string, toComplete string) ([]string, cobra.ShellCompDirective) {"
kubernetes/kubernetes,d03fab555f1fb77d5045f24bc4cce94ecde2bb98,Ondra Kupka,2025-10-02T15:26:18Z,"kubectl config set-context: Add -n flag

This is simply a shorthand for --namespace as with other commands.",staging/src/k8s.io/kubectl/pkg/cmd/config/set_context_test.go,60,37,97,"@@ -37,48 +37,71 @@ type setContextTest struct {
 	expectedConfig clientcmdapi.Config //expect kubectl config
 }
 
+var namespaceFlagCases = []struct {
+	description   string
+	namespaceFlag string
+}{
+	{
+		description:   ""long namespace flag"",
+		namespaceFlag: ""--namespace"",
+	},
+	{
+		description:   ""short namespace flag"",
+		namespaceFlag: ""-n"",
+	},
+}
+
 func TestCreateContext(t *testing.T) {
-	conf := clientcmdapi.Config{}
-	test := setContextTest{
-		testContext: ""shaker-context"",
-		description: ""Testing for create a new context"",
-		config:      conf,
-		args:        []string{""shaker-context""},
-		flags: []string{
-			""--cluster=cluster_nickname"",
-			""--user=user_nickname"",
-			""--namespace=namespace"",
-		},
-		expected: `Context ""shaker-context"" created.` + ""\n"",
-		expectedConfig: clientcmdapi.Config{
-			Contexts: map[string]*clientcmdapi.Context{
-				""shaker-context"": {AuthInfo: ""user_nickname"", Cluster: ""cluster_nickname"", Namespace: ""namespace""}},
-		},
+	for _, tc := range namespaceFlagCases {
+		t.Run(tc.description, func(t *testing.T) {
+			conf := clientcmdapi.Config{}
+			test := setContextTest{
+				testContext: ""shaker-context"",
+				description: ""Testing for create a new context"",
+				config:      conf,
+				args:        []string{""shaker-context""},
+				flags: []string{
+					""--cluster=cluster_nickname"",
+					""--user=user_nickname"",
+					tc.namespaceFlag + ""=namespace"",
+				},
+				expected: `Context ""shaker-context"" created.` + ""\n"",
+				expectedConfig: clientcmdapi.Config{
+					Contexts: map[string]*clientcmdapi.Context{
+						""shaker-context"": {AuthInfo: ""user_nickname"", Cluster: ""cluster_nickname"", Namespace: ""namespace""}},
+				},
+			}
+			test.run(t)
+		})
 	}
-	test.run(t)
 }
+
 func TestModifyContext(t *testing.T) {
-	conf := clientcmdapi.Config{
-		Contexts: map[string]*clientcmdapi.Context{
-			""shaker-context"": {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""},
-			""not-this"":       {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""}}}
-	test := setContextTest{
-		testContext: ""shaker-context"",
-		description: ""Testing for modify a already exist context"",
-		config:      conf,
-		args:        []string{""shaker-context""},
-		flags: []string{
-			""--cluster=cluster_nickname"",
-			""--user=user_nickname"",
-			""--namespace=namespace"",
-		},
-		expected: `Context ""shaker-context"" modified.` + ""\n"",
-		expectedConfig: clientcmdapi.Config{
-			Contexts: map[string]*clientcmdapi.Context{
-				""shaker-context"": {AuthInfo: ""user_nickname"", Cluster: ""cluster_nickname"", Namespace: ""namespace""},
-				""not-this"":       {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""}}},
+	for _, tc := range namespaceFlagCases {
+		t.Run(tc.description, func(t *testing.T) {
+			conf := clientcmdapi.Config{
+				Contexts: map[string]*clientcmdapi.Context{
+					""shaker-context"": {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""},
+					""not-this"":       {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""}}}
+			test := setContextTest{
+				testContext: ""shaker-context"",
+				description: ""Testing for modify a already exist context"",
+				config:      conf,
+				args:        []string{""shaker-context""},
+				flags: []string{
+					""--cluster=cluster_nickname"",
+					""--user=user_nickname"",
+					tc.namespaceFlag + ""=namespace"",
+				},
+				expected: `Context ""shaker-context"" modified.` + ""\n"",
+				expectedConfig: clientcmdapi.Config{
+					Contexts: map[string]*clientcmdapi.Context{
+						""shaker-context"": {AuthInfo: ""user_nickname"", Cluster: ""cluster_nickname"", Namespace: ""namespace""},
+						""not-this"":       {AuthInfo: ""blue-user"", Cluster: ""big-cluster"", Namespace: ""saw-ns""}}},
+			}
+			test.run(t)
+		})
 	}
-	test.run(t)
 }
 
 func TestModifyCurrentContext(t *testing.T) {"
kubernetes/kubernetes,d03fab555f1fb77d5045f24bc4cce94ecde2bb98,Ondra Kupka,2025-10-02T15:26:18Z,"kubectl config set-context: Add -n flag

This is simply a shorthand for --namespace as with other commands.",test/cmd/delete.sh,2,2,4,"@@ -38,15 +38,15 @@ run_kubectl_delete_allnamespaces_tests() {
   kubectl delete configmap --dry-run=server -l deletetest=true --all-namespaces
   kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}""
   kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'one:'
-  kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}""
+  kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}""
   kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'two:'
 
   kubectl delete configmap -l deletetest=true --all-namespaces
 
   # no configmaps should be in either of those namespaces with label deletetest
   kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}""
   kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" ''
-  kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}""
+  kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}""
   kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" ''
 
   set +o nounset"
kubernetes/kubernetes,4b9d59f14f77e35c8d3336d37b8e89e7a3bf8fab,Kubernetes Prow Robot,2025-10-05T18:28:58Z,"Merge pull request #134425 from HirazawaUi/fix-wrong-message-1006

Fix incorrect error messages",test/e2e_node/terminate_pods_test.go,1,1,2,"@@ -78,7 +78,7 @@ var _ = SIGDescribe(""Terminate Pods"", func() {
 				}
 			}
 			return false
-		}, 20*time.Second, 1*time.Second).Should(gomega.BeTrueBecause(""expected container to be ready""))
+		}, 20*time.Second, 1*time.Second).Should(gomega.BeTrueBecause(""expected container to be not ready""))
 
 		err := client.Delete(context.Background(), pod.Name, metav1.DeleteOptions{})
 "
kubernetes/kubernetes,f9a893be37b025b4e84d7a41bc03e1b8e83d3834,HirazawaUi,2025-10-05T16:42:21Z,Fix incorrect error messages,test/e2e_node/terminate_pods_test.go,1,1,2,"@@ -78,7 +78,7 @@ var _ = SIGDescribe(""Terminate Pods"", func() {
 				}
 			}
 			return false
-		}, 20*time.Second, 1*time.Second).Should(gomega.BeTrueBecause(""expected container to be ready""))
+		}, 20*time.Second, 1*time.Second).Should(gomega.BeTrueBecause(""expected container to be not ready""))
 
 		err := client.Delete(context.Background(), pod.Name, metav1.DeleteOptions{})
 "
kubernetes/kubernetes,cafff6eadeb58cbf006c77017c341b8858eccd9b,Kubernetes Prow Robot,2025-10-04T15:42:57Z,"Merge pull request #134409 from SergeyKanzhelev/remove-cpu-conversion-methods

remove cpuSharesToCPUWeight that is not used any longer",pkg/kubelet/cm/cgroup_manager_linux_test.go,0,43,43,"@@ -170,49 +170,6 @@ func TestParseSystemdToCgroupName(t *testing.T) {
 	}
 }
 
-func TestCpuSharesToCPUWeight(t *testing.T) {
-	testCases := []struct {
-		cpuShares         uint64
-		expectedCpuWeight uint64
-	}{
-		{
-			cpuShares:         2,
-			expectedCpuWeight: 1,
-		},
-		{
-			cpuShares:         3,
-			expectedCpuWeight: 1,
-		},
-		{
-			cpuShares:         4,
-			expectedCpuWeight: 1,
-		},
-		{
-			cpuShares:         28,
-			expectedCpuWeight: 1,
-		},
-		{
-			cpuShares:         29,
-			expectedCpuWeight: 2,
-		},
-		{
-			cpuShares:         245,
-			expectedCpuWeight: 10,
-		},
-		{
-			cpuShares:         262144,
-			expectedCpuWeight: 10000,
-		},
-	}
-
-	for _, testCase := range testCases {
-		if actual := cpuSharesToCPUWeight(testCase.cpuShares); actual != testCase.expectedCpuWeight {
-			t.Errorf(""cpuShares: %v, expectedCpuWeight: %v, actualCpuWeight: %v"",
-				testCase.cpuShares, testCase.expectedCpuWeight, actual)
-		}
-	}
-}
-
 func TestCpuWeightToCPUShares(t *testing.T) {
 	testCases := []struct {
 		cpuWeight         uint64"
kubernetes/kubernetes,cafff6eadeb58cbf006c77017c341b8858eccd9b,Kubernetes Prow Robot,2025-10-04T15:42:57Z,"Merge pull request #134409 from SergeyKanzhelev/remove-cpu-conversion-methods

remove cpuSharesToCPUWeight that is not used any longer",pkg/kubelet/cm/cgroup_v2_manager_linux.go,0,6,6,"@@ -168,12 +168,6 @@ func (c *cgroupV2impl) buildCgroupUnifiedPath(name CgroupName) string {
 	return path.Join(cmutil.CgroupRoot, cgroupFsAdaptedName)
 }
 
-// Convert cgroup v1 cpu.shares value to cgroup v2 cpu.weight
-// https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2254-cgroup-v2#phase-1-convert-from-cgroups-v1-settings-to-v2
-func cpuSharesToCPUWeight(cpuShares uint64) uint64 {
-	return uint64((((cpuShares - 2) * 9999) / 262142) + 1)
-}
-
 // Convert cgroup v2 cpu.weight value to cgroup v1 cpu.shares
 // https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2254-cgroup-v2#phase-1-convert-from-cgroups-v1-settings-to-v2
 func cpuWeightToCPUShares(cpuWeight uint64) uint64 {"
kubernetes/kubernetes,ae8ea8994ef8c9fac81f31d459ed120da3b122f3,yongruilin,2025-10-03T19:33:46Z,feat(validation): Enhance validation tests with normalization rules support,pkg/api/testing/validation.go,49,9,58,"@@ -156,6 +156,28 @@ func convertToInternal(t *testing.T, scheme *runtime.Scheme, obj runtime.Object)
 	return scheme.ConvertToVersion(obj, schema.GroupVersion{Group: gvk.Group, Version: runtime.APIVersionInternal})
 }
 
+type ValidationTestConfig func(*validationOption)
+
+// validationOptions encapsulates optional parameters for validation equivalence tests.
+type validationOption struct {
+	// SubResources are the subresources to validate.
+	SubResources []string
+	// NormalizationRules are the rules to apply to field paths before comparison.
+	NormalizationRules []field.NormalizationRule
+}
+
+func WithSubResources(subResources ...string) ValidationTestConfig {
+	return func(o *validationOption) {
+		o.SubResources = subResources
+	}
+}
+
+func WithNormalizationRules(rules ...field.NormalizationRule) ValidationTestConfig {
+	return func(o *validationOption) {
+		o.NormalizationRules = rules
+	}
+}
+
 // VerifyValidationEquivalence provides a helper for testing the migration from
 // hand-written imperative validation to declarative validation. It ensures that
 // the validation logic remains consistent before and after the feature is enabled.
@@ -169,12 +191,16 @@ func convertToInternal(t *testing.T, scheme *runtime.Scheme, obj runtime.Object)
 // guaranteeing a safe migration. It also checks the errors against an expected set.
 // It compares errors by field, origin and type; all three should match to be called equivalent.
 // It also make sure all versions of the given API returns equivalent errors.
-func VerifyValidationEquivalence(t *testing.T, ctx context.Context, obj runtime.Object, validateFn ValidateFunc, expectedErrs field.ErrorList, subResources ...string) {
+func VerifyValidationEquivalence(t *testing.T, ctx context.Context, obj runtime.Object, validateFn ValidateFunc, expectedErrs field.ErrorList, testConfigs ...ValidationTestConfig) {
 	t.Helper()
+	opts := &validationOption{}
+	for _, testcfg := range testConfigs {
+		testcfg(opts)
+	}
 	verifyValidationEquivalence(t, expectedErrs, func() field.ErrorList {
 		return validateFn(ctx, obj)
-	})
-	VerifyVersionedValidationEquivalence(t, obj, nil, subResources...)
+	}, opts)
+	VerifyVersionedValidationEquivalence(t, obj, nil, opts.SubResources...)
 }
 
 // VerifyUpdateValidationEquivalence provides a helper for testing the migration from
@@ -190,22 +216,31 @@ func VerifyValidationEquivalence(t *testing.T, ctx context.Context, obj runtime.
 // guaranteeing a safe migration. It also checks the errors against an expected set.
 // It compares errors by field, origin and type; all three should match to be called equivalent.
 // It also make sure all versions of the given API returns equivalent errors.
-func VerifyUpdateValidationEquivalence(t *testing.T, ctx context.Context, obj, old runtime.Object, validateUpdateFn ValidateUpdateFunc, expectedErrs field.ErrorList, subResources ...string) {
+func VerifyUpdateValidationEquivalence(t *testing.T, ctx context.Context, obj, old runtime.Object, validateUpdateFn ValidateUpdateFunc, expectedErrs field.ErrorList, testConfigs ...ValidationTestConfig) {
 	t.Helper()
+	opts := &validationOption{}
+	for _, testcfg := range testConfigs {
+		testcfg(opts)
+	}
 	verifyValidationEquivalence(t, expectedErrs, func() field.ErrorList {
 		return validateUpdateFn(ctx, obj, old)
-	})
-	VerifyVersionedValidationEquivalence(t, obj, old, subResources...)
+	}, opts)
+	VerifyVersionedValidationEquivalence(t, obj, old, opts.SubResources...)
 }
 
 // verifyValidationEquivalence is a generic helper that verifies validation equivalence with and without declarative validation.
-func verifyValidationEquivalence(t *testing.T, expectedErrs field.ErrorList, runValidations func() field.ErrorList) {
+func verifyValidationEquivalence(t *testing.T, expectedErrs field.ErrorList, runValidations func() field.ErrorList, opt *validationOption) {
 	t.Helper()
 	var declarativeTakeoverErrs field.ErrorList
 	var imperativeErrs field.ErrorList
 
 	// The errOutputMatcher is used to verify the output matches the expected errors in test cases.
-	errOutputMatcher := field.ErrorMatcher{}.ByType().ByField().ByOrigin()
+	errOutputMatcher := field.ErrorMatcher{}.ByType().ByOrigin()
+	if len(opt.NormalizationRules) > 0 {
+		errOutputMatcher = errOutputMatcher.ByFieldNormalized(opt.NormalizationRules)
+	} else {
+		errOutputMatcher = errOutputMatcher.ByField()
+	}
 
 	// We only need to test both gate enabled and disabled together, because
 	// 1) the DeclarativeValidationTakeover won't take effect if DeclarativeValidation is disabled.
@@ -241,7 +276,12 @@ func verifyValidationEquivalence(t *testing.T, expectedErrs field.ErrorList, run
 
 	// The equivalenceMatcher is used to verify the output errors from hand-written imperative validation
 	// are equivalent to the output errors when DeclarativeValidationTakeover is enabled.
-	equivalenceMatcher := field.ErrorMatcher{}.ByType().ByField().ByOrigin()
+	equivalenceMatcher := field.ErrorMatcher{}.ByType().ByOrigin()
+	if len(opt.NormalizationRules) > 0 {
+		equivalenceMatcher = equivalenceMatcher.ByFieldNormalized(opt.NormalizationRules)
+	} else {
+		equivalenceMatcher = equivalenceMatcher.ByField()
+	}
 
 	// The imperative validation may produce duplicate errors, which is not supported by the ErrorMatcher.
 	// TODO: remove this once ErrorMatcher has been extended to handle this form of deduplication."
kubernetes/kubernetes,ae8ea8994ef8c9fac81f31d459ed120da3b122f3,yongruilin,2025-10-03T19:33:46Z,feat(validation): Enhance validation tests with normalization rules support,staging/src/k8s.io/apiserver/pkg/registry/rest/validate.go,18,6,24,"@@ -68,12 +68,20 @@ func WithSubresourceMapper(subresourceMapper GroupVersionKindProvider) Validatio
 	}
 }
 
+// WithNormalizationRules sets the normalization rules for validation.
+func WithNormalizationRules(rules []field.NormalizationRule) ValidationConfig {
+	return func(config *validationConfigOption) {
+		config.normalizationRules = rules
+	}
+}
+
 type validationConfigOption struct {
 	opType               operation.Type
 	options              []string
 	takeover             bool
 	subresourceGVKMapper GroupVersionKindProvider
 	validationIdentifier string
+	normalizationRules   []field.NormalizationRule
 }
 
 // validateDeclaratively validates obj and oldObj against declarative
@@ -146,9 +154,9 @@ func parseSubresourcePath(subresourcePath string) ([]string, error) {
 
 // compareDeclarativeErrorsAndEmitMismatches checks for mismatches between imperative and declarative validation
 // and logs + emits metrics when inconsistencies are found
-func compareDeclarativeErrorsAndEmitMismatches(ctx context.Context, imperativeErrs, declarativeErrs field.ErrorList, takeover bool, validationIdentifier string) {
+func compareDeclarativeErrorsAndEmitMismatches(ctx context.Context, imperativeErrs, declarativeErrs field.ErrorList, takeover bool, validationIdentifier string, normalizationRules []field.NormalizationRule) {
 	logger := klog.FromContext(ctx)
-	mismatchDetails := gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs, takeover)
+	mismatchDetails := gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs, takeover, normalizationRules)
 	for _, detail := range mismatchDetails {
 		// Log information about the mismatch using contextual logger
 		logger.Error(nil, detail)
@@ -160,7 +168,7 @@ func compareDeclarativeErrorsAndEmitMismatches(ctx context.Context, imperativeEr
 
 // gatherDeclarativeValidationMismatches compares imperative and declarative validation errors
 // and returns detailed information about any mismatches found. Errors are compared via type, field, and origin
-func gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs field.ErrorList, takeover bool) []string {
+func gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs field.ErrorList, takeover bool, normalizationRules []field.NormalizationRule) []string {
 	var mismatchDetails []string
 	// short circuit here to minimize allocs for usual case of 0 validation errors
 	if len(imperativeErrs) == 0 && len(declarativeErrs) == 0 {
@@ -171,7 +179,12 @@ func gatherDeclarativeValidationMismatches(imperativeErrs, declarativeErrs field
 	if takeover {
 		recommendation = ""Consider disabling the DeclarativeValidationTakeover feature gate to keep data persisted in etcd consistent with prior versions of Kubernetes.""
 	}
-	fuzzyMatcher := field.ErrorMatcher{}.ByType().ByField().ByOrigin().RequireOriginWhenInvalid()
+	fuzzyMatcher := field.ErrorMatcher{}.ByType().ByOrigin().RequireOriginWhenInvalid()
+	if len(normalizationRules) > 0 {
+		fuzzyMatcher = fuzzyMatcher.ByFieldNormalized(normalizationRules)
+	} else {
+		fuzzyMatcher = fuzzyMatcher.ByField()
+	}
 	exactMatcher := field.ErrorMatcher{}.Exactly()
 
 	// Dedupe imperative errors of exact error matches as they are
@@ -353,8 +366,7 @@ func ValidateDeclarativelyWithMigrationChecks(ctx context.Context, scheme *runti
 	// Call the panic-safe wrapper with the real validation function.
 	declarativeErrs := panicSafeValidateFunc(validateDeclaratively, cfg.takeover, cfg.validationIdentifier)(ctx, scheme, obj, oldObj, cfg)
 
-	compareDeclarativeErrorsAndEmitMismatches(ctx, errs, declarativeErrs, takeover, validationIdentifier)
-
+	compareDeclarativeErrorsAndEmitMismatches(ctx, errs, declarativeErrs, takeover, validationIdentifier, cfg.normalizationRules)
 	if takeover {
 		errs = append(errs.RemoveCoveredByDeclarative(), declarativeErrs...)
 	}"
kubernetes/kubernetes,ae8ea8994ef8c9fac81f31d459ed120da3b122f3,yongruilin,2025-10-03T19:33:46Z,feat(validation): Enhance validation tests with normalization rules support,staging/src/k8s.io/apiserver/pkg/registry/rest/validate_test.go,22,2,24,"@@ -213,6 +213,7 @@ func TestGatherDeclarativeValidationMismatches(t *testing.T) {
 	errB := field.Invalid(minReadySecondsPath, -1, ""covered error B"").WithOrigin(""minimum"")
 	coveredErrB := field.Invalid(minReadySecondsPath, -1, ""covered error B"").WithOrigin(""minimum"")
 	errBWithDiffDetail := field.Invalid(minReadySecondsPath, -1, ""covered error B - different detail"").WithOrigin(""minimum"")
+	errBWithDiffPath := field.Invalid(field.NewPath(""spec"").Child(""fakeminReadySeconds""), -1, ""covered error B"").WithOrigin(""minimum"")
 	coveredErrB.CoveredByDeclarative = true
 	errC := field.Invalid(replicasPath, nil, ""covered error C"").WithOrigin(""minimum"")
 	coveredErrC := field.Invalid(replicasPath, nil, ""covered error C"").WithOrigin(""minimum"")
@@ -227,6 +228,7 @@ func TestGatherDeclarativeValidationMismatches(t *testing.T) {
 		takeover                bool
 		expectMismatches        bool
 		expectDetailsContaining []string
+		normalizedRules         []field.NormalizationRule
 	}{
 		{
 			name:                    ""Declarative and imperative return 0 errors - no mismatch"",
@@ -358,11 +360,29 @@ func TestGatherDeclarativeValidationMismatches(t *testing.T) {
 			expectMismatches:        false,
 			expectDetailsContaining: []string{},
 		},
+		{
+			name: ""Field normalization, errors don't match - mismatch"",
+			imperativeErrors: field.ErrorList{
+				coveredErrB,
+			},
+			declarativeErrors: field.ErrorList{
+				errBWithDiffPath,
+			},
+			normalizedRules: []field.NormalizationRule{
+				{
+					Regexp:      regexp.MustCompile(`spec.fakeminReadySeconds`),
+					Replacement: ""spec.minReadySeconds"",
+				},
+			},
+			takeover:                false,
+			expectMismatches:        false,
+			expectDetailsContaining: []string{},
+		},
 	}
 
 	for _, tc := range testCases {
 		t.Run(tc.name, func(t *testing.T) {
-			details := gatherDeclarativeValidationMismatches(tc.imperativeErrors, tc.declarativeErrors, tc.takeover)
+			details := gatherDeclarativeValidationMismatches(tc.imperativeErrors, tc.declarativeErrors, tc.takeover, tc.normalizedRules)
 			// Check if mismatches were found if expected
 			if tc.expectMismatches && len(details) == 0 {
 				t.Errorf(""Expected mismatches but got none"")
@@ -429,7 +449,7 @@ func TestCompareDeclarativeErrorsAndEmitMismatches(t *testing.T) {
 			defer klog.LogToStderr(true)
 			ctx := context.Background()
 
-			compareDeclarativeErrorsAndEmitMismatches(ctx, tc.imperativeErrs, tc.declarativeErrs, tc.takeover, ""test_validationIdentifier"")
+			compareDeclarativeErrorsAndEmitMismatches(ctx, tc.imperativeErrs, tc.declarativeErrs, tc.takeover, ""test_validationIdentifier"", nil)
 
 			klog.Flush()
 			logOutput := buf.String()"
kubernetes/kubernetes,7bbc7228aca7a7250f2e8a7ebd1e31f8f24631bf,yongruilin,2025-10-03T07:09:35Z,run update-codegen.sh,pkg/apis/resource/v1/zz_generated.validations.go,148,0,148,"@@ -146,6 +146,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceRequest)...)
 			return
 		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClaim) []resourcev1.DeviceRequest { return oldObj.Requests }))...)
 
@@ -161,6 +163,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceConstraint)...)
 			return
 		}(fldPath.Child(""constraints""), obj.Constraints, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClaim) []resourcev1.DeviceConstraint { return oldObj.Constraints }))...)
 
@@ -176,12 +180,36 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceClaimConfiguration)...)
 			return
 		}(fldPath.Child(""config""), obj.Config, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClaim) []resourcev1.DeviceClaimConfiguration { return oldObj.Config }))...)
 
 	return errs
 }
 
+// Validate_DeviceClaimConfiguration validates an instance of DeviceClaimConfiguration according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClaimConfiguration(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceClaimConfiguration) (errs field.ErrorList) {
+	// field resourcev1.DeviceClaimConfiguration.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClaimConfiguration) []string { return oldObj.Requests }))...)
+
+	// field resourcev1.DeviceClaimConfiguration.DeviceConfiguration has no validation
+	return errs
+}
+
 // Validate_DeviceClass validates an instance of DeviceClass according
 // to declarative validation rules in the API schema.
 func Validate_DeviceClass(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceClass) (errs field.ErrorList) {
@@ -267,6 +295,70 @@ func Validate_DeviceClassSpec(ctx context.Context, op operation.Operation, fldPa
 	return errs
 }
 
+// Validate_DeviceConstraint validates an instance of DeviceConstraint according
+// to declarative validation rules in the API schema.
+func Validate_DeviceConstraint(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceConstraint) (errs field.ErrorList) {
+	// field resourcev1.DeviceConstraint.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1.DeviceConstraint) []string { return oldObj.Requests }))...)
+
+	// field resourcev1.DeviceConstraint.MatchAttribute has no validation
+	// field resourcev1.DeviceConstraint.DistinctAttribute has no validation
+	return errs
+}
+
+// Validate_DeviceRequest validates an instance of DeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceRequest) (errs field.ErrorList) {
+	// field resourcev1.DeviceRequest.Name has no validation
+
+	// field resourcev1.DeviceRequest.Exactly
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *resourcev1.ExactDeviceRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			// call the type's validation function
+			errs = append(errs, Validate_ExactDeviceRequest(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""exactly""), obj.Exactly, safe.Field(oldObj, func(oldObj *resourcev1.DeviceRequest) *resourcev1.ExactDeviceRequest { return oldObj.Exactly }))...)
+
+	// field resourcev1.DeviceRequest.FirstAvailable
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1.DeviceSubRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 8); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceSubRequest)...)
+			return
+		}(fldPath.Child(""firstAvailable""), obj.FirstAvailable, safe.Field(oldObj, func(oldObj *resourcev1.DeviceRequest) []resourcev1.DeviceSubRequest { return oldObj.FirstAvailable }))...)
+
+	return errs
+}
+
 // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceRequestAllocationResult) (errs field.ErrorList) {
@@ -299,6 +391,62 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 	return errs
 }
 
+// Validate_DeviceSubRequest validates an instance of DeviceSubRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceSubRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceSubRequest) (errs field.ErrorList) {
+	// field resourcev1.DeviceSubRequest.Name has no validation
+	// field resourcev1.DeviceSubRequest.DeviceClassName has no validation
+
+	// field resourcev1.DeviceSubRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1.DeviceSubRequest) []resourcev1.DeviceSelector { return oldObj.Selectors }))...)
+
+	// field resourcev1.DeviceSubRequest.AllocationMode has no validation
+	// field resourcev1.DeviceSubRequest.Count has no validation
+	// field resourcev1.DeviceSubRequest.Tolerations has no validation
+	// field resourcev1.DeviceSubRequest.Capacity has no validation
+	return errs
+}
+
+// Validate_ExactDeviceRequest validates an instance of ExactDeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_ExactDeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.ExactDeviceRequest) (errs field.ErrorList) {
+	// field resourcev1.ExactDeviceRequest.DeviceClassName has no validation
+
+	// field resourcev1.ExactDeviceRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1.ExactDeviceRequest) []resourcev1.DeviceSelector { return oldObj.Selectors }))...)
+
+	// field resourcev1.ExactDeviceRequest.AllocationMode has no validation
+	// field resourcev1.ExactDeviceRequest.Count has no validation
+	// field resourcev1.ExactDeviceRequest.AdminAccess has no validation
+	// field resourcev1.ExactDeviceRequest.Tolerations has no validation
+	// field resourcev1.ExactDeviceRequest.Capacity has no validation
+	return errs
+}
+
 // Validate_ResourceClaim validates an instance of ResourceClaim according
 // to declarative validation rules in the API schema.
 func Validate_ResourceClaim(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.ResourceClaim) (errs field.ErrorList) {"
kubernetes/kubernetes,7bbc7228aca7a7250f2e8a7ebd1e31f8f24631bf,yongruilin,2025-10-03T07:09:35Z,run update-codegen.sh,pkg/apis/resource/v1beta1/zz_generated.validations.go,148,1,149,"@@ -148,6 +148,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceRequest)...)
 			return
 		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClaim) []resourcev1beta1.DeviceRequest { return oldObj.Requests }))...)
 
@@ -163,6 +165,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceConstraint)...)
 			return
 		}(fldPath.Child(""constraints""), obj.Constraints, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClaim) []resourcev1beta1.DeviceConstraint {
 			return oldObj.Constraints
@@ -180,6 +184,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceClaimConfiguration)...)
 			return
 		}(fldPath.Child(""config""), obj.Config, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClaim) []resourcev1beta1.DeviceClaimConfiguration {
 			return oldObj.Config
@@ -188,6 +194,28 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 	return errs
 }
 
+// Validate_DeviceClaimConfiguration validates an instance of DeviceClaimConfiguration according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClaimConfiguration(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceClaimConfiguration) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceClaimConfiguration.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClaimConfiguration) []string { return oldObj.Requests }))...)
+
+	// field resourcev1beta1.DeviceClaimConfiguration.DeviceConfiguration has no validation
+	return errs
+}
+
 // Validate_DeviceClass validates an instance of DeviceClass according
 // to declarative validation rules in the API schema.
 func Validate_DeviceClass(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceClass) (errs field.ErrorList) {
@@ -277,6 +305,78 @@ func Validate_DeviceClassSpec(ctx context.Context, op operation.Operation, fldPa
 	return errs
 }
 
+// Validate_DeviceConstraint validates an instance of DeviceConstraint according
+// to declarative validation rules in the API schema.
+func Validate_DeviceConstraint(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceConstraint) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceConstraint.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceConstraint) []string { return oldObj.Requests }))...)
+
+	// field resourcev1beta1.DeviceConstraint.MatchAttribute has no validation
+	// field resourcev1beta1.DeviceConstraint.DistinctAttribute has no validation
+	return errs
+}
+
+// Validate_DeviceRequest validates an instance of DeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceRequest) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceRequest.Name has no validation
+	// field resourcev1beta1.DeviceRequest.DeviceClassName has no validation
+
+	// field resourcev1beta1.DeviceRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceRequest) []resourcev1beta1.DeviceSelector { return oldObj.Selectors }))...)
+
+	// field resourcev1beta1.DeviceRequest.AllocationMode has no validation
+	// field resourcev1beta1.DeviceRequest.Count has no validation
+	// field resourcev1beta1.DeviceRequest.AdminAccess has no validation
+
+	// field resourcev1beta1.DeviceRequest.FirstAvailable
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceSubRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 8); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceSubRequest)...)
+			return
+		}(fldPath.Child(""firstAvailable""), obj.FirstAvailable, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceRequest) []resourcev1beta1.DeviceSubRequest {
+			return oldObj.FirstAvailable
+		}))...)
+
+	// field resourcev1beta1.DeviceRequest.Tolerations has no validation
+	// field resourcev1beta1.DeviceRequest.Capacity has no validation
+	return errs
+}
+
 // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceRequestAllocationResult) (errs field.ErrorList) {
@@ -301,14 +401,61 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 
 	// field resourcev1beta1.DeviceRequestAllocationResult.Device has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.AdminAccess has no validation
-	// field resourcev1beta1.DeviceRequestAllocationResult.Tolerations has no validation
+
+	// field resourcev1beta1.DeviceRequestAllocationResult.Tolerations
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceToleration) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 16); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""tolerations""), obj.Tolerations, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceRequestAllocationResult) []resourcev1beta1.DeviceToleration {
+			return oldObj.Tolerations
+		}))...)
+
 	// field resourcev1beta1.DeviceRequestAllocationResult.BindingConditions has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.BindingFailureConditions has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.ShareID has no validation
 	// field resourcev1beta1.DeviceRequestAllocationResult.ConsumedCapacity has no validation
 	return errs
 }
 
+// Validate_DeviceSubRequest validates an instance of DeviceSubRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceSubRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceSubRequest) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceSubRequest.Name has no validation
+	// field resourcev1beta1.DeviceSubRequest.DeviceClassName has no validation
+
+	// field resourcev1beta1.DeviceSubRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceSubRequest) []resourcev1beta1.DeviceSelector {
+			return oldObj.Selectors
+		}))...)
+
+	// field resourcev1beta1.DeviceSubRequest.AllocationMode has no validation
+	// field resourcev1beta1.DeviceSubRequest.Count has no validation
+	// field resourcev1beta1.DeviceSubRequest.Tolerations has no validation
+	// field resourcev1beta1.DeviceSubRequest.Capacity has no validation
+	return errs
+}
+
 // Validate_ResourceClaim validates an instance of ResourceClaim according
 // to declarative validation rules in the API schema.
 func Validate_ResourceClaim(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.ResourceClaim) (errs field.ErrorList) {"
kubernetes/kubernetes,7bbc7228aca7a7250f2e8a7ebd1e31f8f24631bf,yongruilin,2025-10-03T07:09:35Z,run update-codegen.sh,pkg/apis/resource/v1beta2/zz_generated.validations.go,154,0,154,"@@ -148,6 +148,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceRequest)...)
 			return
 		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClaim) []resourcev1beta2.DeviceRequest { return oldObj.Requests }))...)
 
@@ -163,6 +165,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceConstraint)...)
 			return
 		}(fldPath.Child(""constraints""), obj.Constraints, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClaim) []resourcev1beta2.DeviceConstraint {
 			return oldObj.Constraints
@@ -180,6 +184,8 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 				errs = append(errs, e...)
 				return // do not proceed
 			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceClaimConfiguration)...)
 			return
 		}(fldPath.Child(""config""), obj.Config, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClaim) []resourcev1beta2.DeviceClaimConfiguration {
 			return oldObj.Config
@@ -188,6 +194,28 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 	return errs
 }
 
+// Validate_DeviceClaimConfiguration validates an instance of DeviceClaimConfiguration according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClaimConfiguration(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceClaimConfiguration) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceClaimConfiguration.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClaimConfiguration) []string { return oldObj.Requests }))...)
+
+	// field resourcev1beta2.DeviceClaimConfiguration.DeviceConfiguration has no validation
+	return errs
+}
+
 // Validate_DeviceClass validates an instance of DeviceClass according
 // to declarative validation rules in the API schema.
 func Validate_DeviceClass(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceClass) (errs field.ErrorList) {
@@ -277,6 +305,72 @@ func Validate_DeviceClassSpec(ctx context.Context, op operation.Operation, fldPa
 	return errs
 }
 
+// Validate_DeviceConstraint validates an instance of DeviceConstraint according
+// to declarative validation rules in the API schema.
+func Validate_DeviceConstraint(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceConstraint) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceConstraint.Requests
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []string) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""requests""), obj.Requests, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceConstraint) []string { return oldObj.Requests }))...)
+
+	// field resourcev1beta2.DeviceConstraint.MatchAttribute has no validation
+	// field resourcev1beta2.DeviceConstraint.DistinctAttribute has no validation
+	return errs
+}
+
+// Validate_DeviceRequest validates an instance of DeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceRequest) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceRequest.Name has no validation
+
+	// field resourcev1beta2.DeviceRequest.Exactly
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *resourcev1beta2.ExactDeviceRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.OptionalPointer(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			// call the type's validation function
+			errs = append(errs, Validate_ExactDeviceRequest(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""exactly""), obj.Exactly, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceRequest) *resourcev1beta2.ExactDeviceRequest { return oldObj.Exactly }))...)
+
+	// field resourcev1beta2.DeviceRequest.FirstAvailable
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta2.DeviceSubRequest) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 8); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceSubRequest)...)
+			return
+		}(fldPath.Child(""firstAvailable""), obj.FirstAvailable, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceRequest) []resourcev1beta2.DeviceSubRequest {
+			return oldObj.FirstAvailable
+		}))...)
+
+	return errs
+}
+
 // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceRequestAllocationResult) (errs field.ErrorList) {
@@ -309,6 +403,66 @@ func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Op
 	return errs
 }
 
+// Validate_DeviceSubRequest validates an instance of DeviceSubRequest according
+// to declarative validation rules in the API schema.
+func Validate_DeviceSubRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceSubRequest) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceSubRequest.Name has no validation
+	// field resourcev1beta2.DeviceSubRequest.DeviceClassName has no validation
+
+	// field resourcev1beta2.DeviceSubRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta2.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceSubRequest) []resourcev1beta2.DeviceSelector {
+			return oldObj.Selectors
+		}))...)
+
+	// field resourcev1beta2.DeviceSubRequest.AllocationMode has no validation
+	// field resourcev1beta2.DeviceSubRequest.Count has no validation
+	// field resourcev1beta2.DeviceSubRequest.Tolerations has no validation
+	// field resourcev1beta2.DeviceSubRequest.Capacity has no validation
+	return errs
+}
+
+// Validate_ExactDeviceRequest validates an instance of ExactDeviceRequest according
+// to declarative validation rules in the API schema.
+func Validate_ExactDeviceRequest(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.ExactDeviceRequest) (errs field.ErrorList) {
+	// field resourcev1beta2.ExactDeviceRequest.DeviceClassName has no validation
+
+	// field resourcev1beta2.ExactDeviceRequest.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta2.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta2.ExactDeviceRequest) []resourcev1beta2.DeviceSelector {
+			return oldObj.Selectors
+		}))...)
+
+	// field resourcev1beta2.ExactDeviceRequest.AllocationMode has no validation
+	// field resourcev1beta2.ExactDeviceRequest.Count has no validation
+	// field resourcev1beta2.ExactDeviceRequest.AdminAccess has no validation
+	// field resourcev1beta2.ExactDeviceRequest.Tolerations has no validation
+	// field resourcev1beta2.ExactDeviceRequest.Capacity has no validation
+	return errs
+}
+
 // Validate_ResourceClaim validates an instance of ResourceClaim according
 // to declarative validation rules in the API schema.
 func Validate_ResourceClaim(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.ResourceClaim) (errs field.ErrorList) {"
kubernetes/kubernetes,7bbc7228aca7a7250f2e8a7ebd1e31f8f24631bf,yongruilin,2025-10-03T07:09:35Z,run update-codegen.sh,staging/src/k8s.io/api/resource/v1/generated.proto,6,0,6,"@@ -592,6 +592,7 @@ message DeviceClaimConfiguration {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   optional DeviceConfiguration deviceConfiguration = 2;
@@ -698,6 +699,7 @@ message DeviceConstraint {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   // MatchAttribute requires that all devices in question have this
@@ -780,6 +782,7 @@ message DeviceRequest {
   //
   // +optional
   // +oneOf=deviceRequestType
+  // +k8s:optional
   optional ExactDeviceRequest exactly = 2;
 
   // FirstAvailable contains subrequests, of which exactly one will be
@@ -800,6 +803,7 @@ message DeviceRequest {
   // +oneOf=deviceRequestType
   // +listType=atomic
   // +featureGate=DRAPrioritizedList
+  // +k8s:maxItems=8
   repeated DeviceSubRequest firstAvailable = 3;
 }
 
@@ -962,6 +966,7 @@ message DeviceSubRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 3;
 
   // AllocationMode and its related fields define how devices are allocated
@@ -1133,6 +1138,7 @@ message ExactDeviceRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 2;
 
   // AllocationMode and its related fields define how devices are allocated"
kubernetes/kubernetes,7bbc7228aca7a7250f2e8a7ebd1e31f8f24631bf,yongruilin,2025-10-03T07:09:35Z,run update-codegen.sh,staging/src/k8s.io/api/resource/v1beta1/generated.proto,6,0,6,"@@ -600,6 +600,7 @@ message DeviceClaimConfiguration {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   optional DeviceConfiguration deviceConfiguration = 2;
@@ -706,6 +707,7 @@ message DeviceConstraint {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   // MatchAttribute requires that all devices in question have this
@@ -804,6 +806,7 @@ message DeviceRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 3;
 
   // AllocationMode and its related fields define how devices are allocated
@@ -878,6 +881,7 @@ message DeviceRequest {
   // +oneOf=deviceRequestType
   // +listType=atomic
   // +featureGate=DRAPrioritizedList
+  // +k8s:maxItems=8
   repeated DeviceSubRequest firstAvailable = 7;
 
   // If specified, the request's tolerations.
@@ -987,6 +991,7 @@ message DeviceRequestAllocationResult {
   // +optional
   // +listType=atomic
   // +featureGate=DRADeviceTaints
+  // +k8s:maxItems=16
   repeated DeviceToleration tolerations = 6;
 
   // BindingConditions contains a copy of the BindingConditions
@@ -1084,6 +1089,7 @@ message DeviceSubRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 3;
 
   // AllocationMode and its related fields define how devices are allocated"
kubernetes/kubernetes,7bbc7228aca7a7250f2e8a7ebd1e31f8f24631bf,yongruilin,2025-10-03T07:09:35Z,run update-codegen.sh,staging/src/k8s.io/api/resource/v1beta2/generated.proto,6,0,6,"@@ -592,6 +592,7 @@ message DeviceClaimConfiguration {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   optional DeviceConfiguration deviceConfiguration = 2;
@@ -698,6 +699,7 @@ message DeviceConstraint {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated string requests = 1;
 
   // MatchAttribute requires that all devices in question have this
@@ -780,6 +782,7 @@ message DeviceRequest {
   //
   // +optional
   // +oneOf=deviceRequestType
+  // +k8s:optional
   optional ExactDeviceRequest exactly = 2;
 
   // FirstAvailable contains subrequests, of which exactly one will be
@@ -800,6 +803,7 @@ message DeviceRequest {
   // +oneOf=deviceRequestType
   // +listType=atomic
   // +featureGate=DRAPrioritizedList
+  // +k8s:maxItems=8
   repeated DeviceSubRequest firstAvailable = 3;
 }
 
@@ -962,6 +966,7 @@ message DeviceSubRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 3;
 
   // AllocationMode and its related fields define how devices are allocated
@@ -1133,6 +1138,7 @@ message ExactDeviceRequest {
   //
   // +optional
   // +listType=atomic
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 2;
 
   // AllocationMode and its related fields define how devices are allocated"
kubernetes/kubernetes,7366031541ac614176c5a86a88a73c446186baa6,yongruilin,2025-10-03T06:51:15Z,"feat(dra): Add maxItems validation tags for ResourceClaim fields

This commit adds +k8s:maxItems tags to several slice fields within the ResourceClaimSpec across versions v1, v1beta1, and v1beta2.

The following fields under ResourceClaimSpec are now validated for their maximum number of items:
 - DeviceRequest.FirstAvailable
 - ExactDeviceRequest.Selectors
 - DeviceSubRequest.Selectors
 - DeviceConstraint.Requests
 - DeviceClaimConfiguration.Requests",pkg/apis/resource/validation/validation.go,4,4,8,"@@ -203,7 +203,7 @@ func validateDeviceRequest(request resource.DeviceRequest, fldPath *field.Path,
 			func(subRequest resource.DeviceSubRequest) (string, string) {
 				return subRequest.Name, ""name""
 			},
-			fldPath.Child(""firstAvailable""))...)
+			fldPath.Child(""firstAvailable""), sizeCovered)...)
 	}
 
 	if request.Exactly != nil {
@@ -275,7 +275,7 @@ func validateSelectorSlice(selectors []resource.DeviceSelector, fldPath *field.P
 		func(selector resource.DeviceSelector, fldPath *field.Path) field.ErrorList {
 			return validateSelector(selector, fldPath, stored)
 		},
-		fldPath)
+		fldPath, sizeCovered)
 }
 
 func validateSelector(selector resource.DeviceSelector, fldPath *field.Path, stored bool) field.ErrorList {
@@ -331,7 +331,7 @@ func validateDeviceConstraint(constraint resource.DeviceConstraint, fldPath *fie
 		func(name string, fldPath *field.Path) field.ErrorList {
 			return validateRequestNameRef(name, fldPath, requestNames)
 		},
-		stringKey, fldPath.Child(""requests""))...)
+		stringKey, fldPath.Child(""requests""), sizeCovered)...)
 	if constraint.MatchAttribute != nil {
 		allErrs = append(allErrs, validateFullyQualifiedName(*constraint.MatchAttribute, fldPath.Child(""matchAttribute""))...)
 	} else if constraint.DistinctAttribute != nil {
@@ -349,7 +349,7 @@ func validateDeviceClaimConfiguration(config resource.DeviceClaimConfiguration,
 	allErrs = append(allErrs, validateSet(config.Requests, resource.DeviceRequestsMaxSize,
 		func(name string, fldPath *field.Path) field.ErrorList {
 			return validateRequestNameRef(name, fldPath, requestNames)
-		}, stringKey, fldPath.Child(""requests""))...)
+		}, stringKey, fldPath.Child(""requests""), sizeCovered)...)
 	allErrs = append(allErrs, validateDeviceConfiguration(config.DeviceConfiguration, fldPath, stored)...)
 	return allErrs
 }"
kubernetes/kubernetes,7366031541ac614176c5a86a88a73c446186baa6,yongruilin,2025-10-03T06:51:15Z,"feat(dra): Add maxItems validation tags for ResourceClaim fields

This commit adds +k8s:maxItems tags to several slice fields within the ResourceClaimSpec across versions v1, v1beta1, and v1beta2.

The following fields under ResourceClaimSpec are now validated for their maximum number of items:
 - DeviceRequest.FirstAvailable
 - ExactDeviceRequest.Selectors
 - DeviceSubRequest.Selectors
 - DeviceConstraint.Requests
 - DeviceClaimConfiguration.Requests",staging/src/k8s.io/api/resource/v1/types.go,6,0,6,"@@ -792,6 +792,7 @@ type DeviceRequest struct {
 	//
 	// +optional
 	// +oneOf=deviceRequestType
+	// +k8s:optional
 	Exactly *ExactDeviceRequest `json:""exactly,omitempty"" protobuf:""bytes,2,name=exactly""`
 
 	// FirstAvailable contains subrequests, of which exactly one will be
@@ -812,6 +813,7 @@ type DeviceRequest struct {
 	// +oneOf=deviceRequestType
 	// +listType=atomic
 	// +featureGate=DRAPrioritizedList
+	// +k8s:maxItems=8
 	FirstAvailable []DeviceSubRequest `json:""firstAvailable,omitempty"" protobuf:""bytes,3,name=firstAvailable""`
 }
 
@@ -839,6 +841,7 @@ type ExactDeviceRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,2,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -965,6 +968,7 @@ type DeviceSubRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,3,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -1190,6 +1194,7 @@ type DeviceConstraint struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	// MatchAttribute requires that all devices in question have this
@@ -1247,6 +1252,7 @@ type DeviceClaimConfiguration struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	DeviceConfiguration `json:"",inline"" protobuf:""bytes,2,name=deviceConfiguration""`"
kubernetes/kubernetes,7366031541ac614176c5a86a88a73c446186baa6,yongruilin,2025-10-03T06:51:15Z,"feat(dra): Add maxItems validation tags for ResourceClaim fields

This commit adds +k8s:maxItems tags to several slice fields within the ResourceClaimSpec across versions v1, v1beta1, and v1beta2.

The following fields under ResourceClaimSpec are now validated for their maximum number of items:
 - DeviceRequest.FirstAvailable
 - ExactDeviceRequest.Selectors
 - DeviceSubRequest.Selectors
 - DeviceConstraint.Requests
 - DeviceClaimConfiguration.Requests",staging/src/k8s.io/api/resource/v1beta1/types.go,6,0,6,"@@ -812,6 +812,7 @@ type DeviceRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,3,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -886,6 +887,7 @@ type DeviceRequest struct {
 	// +oneOf=deviceRequestType
 	// +listType=atomic
 	// +featureGate=DRAPrioritizedList
+	// +k8s:maxItems=8
 	FirstAvailable []DeviceSubRequest `json:""firstAvailable,omitempty"" protobuf:""bytes,7,name=firstAvailable""`
 
 	// If specified, the request's tolerations.
@@ -973,6 +975,7 @@ type DeviceSubRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,3,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -1198,6 +1201,7 @@ type DeviceConstraint struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	// MatchAttribute requires that all devices in question have this
@@ -1255,6 +1259,7 @@ type DeviceClaimConfiguration struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	DeviceConfiguration `json:"",inline"" protobuf:""bytes,2,name=deviceConfiguration""`
@@ -1552,6 +1557,7 @@ type DeviceRequestAllocationResult struct {
 	// +optional
 	// +listType=atomic
 	// +featureGate=DRADeviceTaints
+	// +k8s:maxItems=16
 	Tolerations []DeviceToleration `json:""tolerations,omitempty"" protobuf:""bytes,6,opt,name=tolerations""`
 
 	// BindingConditions contains a copy of the BindingConditions"
kubernetes/kubernetes,7366031541ac614176c5a86a88a73c446186baa6,yongruilin,2025-10-03T06:51:15Z,"feat(dra): Add maxItems validation tags for ResourceClaim fields

This commit adds +k8s:maxItems tags to several slice fields within the ResourceClaimSpec across versions v1, v1beta1, and v1beta2.

The following fields under ResourceClaimSpec are now validated for their maximum number of items:
 - DeviceRequest.FirstAvailable
 - ExactDeviceRequest.Selectors
 - DeviceSubRequest.Selectors
 - DeviceConstraint.Requests
 - DeviceClaimConfiguration.Requests",staging/src/k8s.io/api/resource/v1beta2/types.go,6,0,6,"@@ -792,6 +792,7 @@ type DeviceRequest struct {
 	//
 	// +optional
 	// +oneOf=deviceRequestType
+	// +k8s:optional
 	Exactly *ExactDeviceRequest `json:""exactly,omitempty"" protobuf:""bytes,2,name=exactly""`
 
 	// FirstAvailable contains subrequests, of which exactly one will be
@@ -812,6 +813,7 @@ type DeviceRequest struct {
 	// +oneOf=deviceRequestType
 	// +listType=atomic
 	// +featureGate=DRAPrioritizedList
+	// +k8s:maxItems=8
 	FirstAvailable []DeviceSubRequest `json:""firstAvailable,omitempty"" protobuf:""bytes,3,name=firstAvailable""`
 }
 
@@ -839,6 +841,7 @@ type ExactDeviceRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,2,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -965,6 +968,7 @@ type DeviceSubRequest struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,3,name=selectors""`
 
 	// AllocationMode and its related fields define how devices are allocated
@@ -1190,6 +1194,7 @@ type DeviceConstraint struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	// MatchAttribute requires that all devices in question have this
@@ -1247,6 +1252,7 @@ type DeviceClaimConfiguration struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:maxItems=32
 	Requests []string `json:""requests,omitempty"" protobuf:""bytes,1,opt,name=requests""`
 
 	DeviceConfiguration `json:"",inline"" protobuf:""bytes,2,name=deviceConfiguration""`"
kubernetes/kubernetes,054af8e91bd4789b071eadefe31cbfddb1b178de,Kubernetes Prow Robot,2025-10-04T00:00:58Z,"Merge pull request #134368 from aaron-prindle/error-matcher-path-normalization

feat: add path normalization support to error matcher",staging/src/k8s.io/apimachinery/pkg/util/validation/field/error_matcher.go,78,9,87,"@@ -23,6 +23,13 @@ import (
 	""strings""
 )
 
+// NormalizationRule holds a pre-compiled regular expression and its replacement string
+// for normalizing field paths.
+type NormalizationRule struct {
+	Regexp      *regexp.Regexp
+	Replacement string
+}
+
 // ErrorMatcher is a helper for comparing Error objects.
 type ErrorMatcher struct {
 	// TODO(thockin): consider whether type is ever NOT required, maybe just
@@ -37,17 +44,32 @@ type ErrorMatcher struct {
 	matchOrigin              bool
 	matchDetail              func(want, got string) bool
 	requireOriginWhenInvalid bool
+	// normalizationRules holds the pre-compiled regex patterns for path normalization.
+	normalizationRules []NormalizationRule
 }
 
 // Matches returns true if the two Error objects match according to the
-// configured criteria.
+// configured criteria. When field normalization is configured, only the
+// ""got"" error's field path is normalized (to bring older API versions up
+// to the internal/latest format), while ""want"" is assumed to already be
+// in the canonical internal API format.
 func (m ErrorMatcher) Matches(want, got *Error) bool {
 	if m.matchType && want.Type != got.Type {
 		return false
 	}
-	if m.matchField && want.Field != got.Field {
-		return false
+	if m.matchField {
+		// Try direct match first (common case)
+		if want.Field != got.Field {
+			// Fields don't match, try normalization if rules are configured.
+			// Only normalize ""got"" - it may be from an older API version that
+			// needs to be brought up to the internal/latest format that ""want""
+			// is already in.
+			if want.Field != m.normalizePath(got.Field) {
+				return false
+			}
+		}
 	}
+
 	if m.matchValue && !reflect.DeepEqual(want.BadValue, got.BadValue) {
 		return false
 	}
@@ -67,6 +89,18 @@ func (m ErrorMatcher) Matches(want, got *Error) bool {
 	return true
 }
 
+// normalizePath applies configured path normalization rules.
+func (m ErrorMatcher) normalizePath(path string) string {
+	for _, rule := range m.normalizationRules {
+		normalized := rule.Regexp.ReplaceAllString(path, rule.Replacement)
+		if normalized != path {
+			// Only apply the first matching rule.
+			return normalized
+		}
+	}
+	return path
+}
+
 // Render returns a string representation of the specified Error object,
 // according to the criteria configured in the ErrorMatcher.
 func (m ErrorMatcher) Render(e *Error) string {
@@ -84,7 +118,11 @@ func (m ErrorMatcher) Render(e *Error) string {
 	}
 	if m.matchField {
 		comma()
-		buf.WriteString(fmt.Sprintf(""Field=%q"", e.Field))
+		if normalized := m.normalizePath(e.Field); normalized != e.Field {
+			buf.WriteString(fmt.Sprintf(""Field=%q (aka %q)"", normalized, e.Field))
+		} else {
+			buf.WriteString(fmt.Sprintf(""Field=%q"", e.Field))
+		}
 	}
 	if m.matchValue {
 		comma()
@@ -125,11 +163,39 @@ func (m ErrorMatcher) ByType() ErrorMatcher {
 }
 
 // ByField returns a derived ErrorMatcher which also matches by field path.
+// If you need to mutate the field path (e.g. to normalize across versions),
+// see ByFieldNormalized.
 func (m ErrorMatcher) ByField() ErrorMatcher {
 	m.matchField = true
 	return m
 }
 
+// ByFieldNormalized returns a derived ErrorMatcher which also matches by field path
+// after applying normalization rules to the actual (got) error's field path.
+// This allows matching field paths from older API versions against the canonical
+// internal API format.
+//
+// The normalization rules are applied ONLY to the ""got"" error's field path, bringing
+// older API version field paths up to the latest/internal format. The ""want"" error
+// is assumed to always be in the internal API format (latest).
+//
+// The rules slice holds pre-compiled regular expressions and their replacement strings.
+//
+// Example:
+//
+//	rules := []NormalizationRule{
+//	  {
+//	    Regexp:      regexp.MustCompile(`spec\.devices\.requests\[(\d+)\]\.allocationMode`),
+//	    Replacement: ""spec.devices.requests[$1].exactly.allocationMode"",
+//	  },
+//	}
+//	matcher := ErrorMatcher{}.ByFieldNormalized(rules)
+func (m ErrorMatcher) ByFieldNormalized(rules []NormalizationRule) ErrorMatcher {
+	m.matchField = true
+	m.normalizationRules = rules
+	return m
+}
+
 // ByValue returns a derived ErrorMatcher which also matches by the errant
 // value.
 func (m ErrorMatcher) ByValue() ErrorMatcher {
@@ -194,11 +260,14 @@ type TestIntf interface {
 }
 
 // Test compares two ErrorLists by the criteria configured in this matcher, and
-// fails the test if they don't match. If matching by origin is enabled and the
-// error has a non-empty origin, a given ""want"" error can match multiple
-// ""got"" errors, and they will all be consumed. The only exception to this is
-// if the matcher got multiple identical (in every way, even those not being
-// matched on) errors, which is likely to indicate a bug.
+// fails the test if they don't match. The ""want"" errors are expected to be in
+// the internal API format (latest), while ""got"" errors may be from any API version
+// and will be normalized if field normalization rules are configured.
+//
+// If matching by origin is enabled and the error has a non-empty origin, a given
+// ""want"" error can match multiple ""got"" errors, and they will all be consumed.
+// The only exception to this is if the matcher got multiple identical (in every way,
+// even those not being matched on) errors, which is likely to indicate a bug.
 func (m ErrorMatcher) Test(tb TestIntf, want, got ErrorList) {
 	tb.Helper()
 "
kubernetes/kubernetes,054af8e91bd4789b071eadefe31cbfddb1b178de,Kubernetes Prow Robot,2025-10-04T00:00:58Z,"Merge pull request #134368 from aaron-prindle/error-matcher-path-normalization

feat: add path normalization support to error matcher",staging/src/k8s.io/apimachinery/pkg/util/validation/field/error_matcher_test.go,122,0,122,"@@ -18,6 +18,7 @@ package field
 
 import (
 	""fmt""
+	""regexp""
 	""strings""
 	""testing""
 )
@@ -63,6 +64,67 @@ func TestErrorMatcher_Matches(t *testing.T) {
 		wantedErr: baseErr,
 		actualErr: &Error{Field: ""other""},
 		matches:   false,
+	}, {
+		name: ""ByFieldNormalized: older API to latest"",
+		matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+		}),
+		wantedErr: func() *Error {
+			e := baseErr()
+			e.Field = ""f[0].x.a""
+			return e
+		},
+		actualErr: &Error{Field: ""f[0].a""},
+		matches:   true,
+	}, {
+		name: ""ByFieldNormalized: both latest format"",
+		matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+		}),
+		wantedErr: func() *Error {
+			e := baseErr()
+			e.Field = ""f[0].x.a""
+			return e
+		},
+		actualErr: &Error{Field: ""f[0].x.a""},
+		matches:   true,
+	}, {
+		name: ""ByFieldNormalized: different index"",
+		matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+		}),
+		wantedErr: func() *Error {
+			e := baseErr()
+			e.Field = ""f[0].x.a""
+			return e
+		},
+		actualErr: &Error{Field: ""f[1].a""},
+		matches:   false,
+	}, {
+		name: ""ByFieldNormalized: multiple patterns"",
+		matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.b`), Replacement: ""f[$1].x.b""},
+		}),
+		wantedErr: func() *Error {
+			e := baseErr()
+			e.Field = ""f[2].x.b""
+			return e
+		},
+		actualErr: &Error{Field: ""f[2].b""},
+		matches:   true,
+	}, {
+		name: ""ByFieldNormalized: no normalization needed"",
+		matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+		}),
+		wantedErr: func() *Error {
+			e := baseErr()
+			e.Field = ""other.field""
+			return e
+		},
+		actualErr: &Error{Field: ""other.field""},
+		matches:   true,
 	}, {
 		name:      ""ByValue: match"",
 		matcher:   ErrorMatcher{}.ByValue(),
@@ -308,6 +370,42 @@ func TestErrorMatcher_Test(t *testing.T) {
 		want:           ErrorList{Invalid(NewPath(""f1""), nil, """")},
 		got:            ErrorList{Invalid(NewPath(""f2""), ""v"", ""d"")},
 		expectedErrors: []string{""expected an error matching:"", ""unmatched error:""},
+	}, {
+		name: ""with normalization: older API to latest"",
+		matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+		}),
+		want: ErrorList{Invalid(NewPath(""f"").Index(0).Child(""x"", ""a""), nil, """")},
+		got:  ErrorList{Invalid(NewPath(""f"").Index(0).Child(""a""), ""v"", ""d"")},
+	}, {
+		name: ""with normalization: both latest"",
+		matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+		}),
+		want: ErrorList{Invalid(NewPath(""f"").Index(0).Child(""x"", ""a""), nil, """")},
+		got:  ErrorList{Invalid(NewPath(""f"").Index(0).Child(""x"", ""a""), ""v"", ""d"")},
+	}, {
+		name: ""with normalization: multiple"",
+		matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.b`), Replacement: ""f[$1].x.b""},
+		}),
+		want: ErrorList{
+			Invalid(NewPath(""f"").Index(0).Child(""x"", ""a""), nil, """"),
+			Invalid(NewPath(""f"").Index(1).Child(""x"", ""b""), nil, """"),
+		},
+		got: ErrorList{
+			Invalid(NewPath(""f"").Index(0).Child(""a""), ""v1"", ""d1""),
+			Invalid(NewPath(""f"").Index(1).Child(""b""), ""v2"", ""d2""),
+		},
+	}, {
+		name: ""with normalization: no match"",
+		matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+			{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+		}),
+		want:           ErrorList{Invalid(NewPath(""f"").Index(0).Child(""x"", ""a""), nil, """")},
+		got:            ErrorList{Invalid(NewPath(""f"").Index(1).Child(""a""), ""v"", ""d"")},
+		expectedErrors: []string{""expected an error matching:"", ""unmatched error:""},
 	}, {
 		name:    ""with origin: single match"",
 		matcher: ErrorMatcher{}.ByField().ByOrigin(),
@@ -410,6 +508,30 @@ func TestErrorMatcher_Render(t *testing.T) {
 			err:      Invalid(NewPath(""field""), ""value"", ""detail"").WithOrigin(""origin""),
 			expected: `{Type=""Invalid value"", Field=""field"", Value=""value"", Origin=""origin"", Detail=""detail""}`,
 		},
+		{
+			name: ""with normalization: normalized"",
+			matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+				{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+			}),
+			err:      Invalid(NewPath(""f"").Index(0).Child(""a""), ""value"", ""detail""),
+			expected: `{Field=""f[0].x.a"" (aka ""f[0].a"")}`,
+		},
+		{
+			name: ""with normalization: no normalization"",
+			matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+				{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+			}),
+			err:      Invalid(NewPath(""other"", ""field""), ""value"", ""detail""),
+			expected: `{Field=""other.field""}`,
+		},
+		{
+			name: ""with normalization: already normalized"",
+			matcher: ErrorMatcher{}.ByFieldNormalized([]NormalizationRule{
+				{Regexp: regexp.MustCompile(`f\[(\d+)\]\.a`), Replacement: ""f[$1].x.a""},
+			}),
+			err:      Invalid(NewPath(""f"").Index(0).Child(""x"", ""a""), ""value"", ""detail""),
+			expected: `{Field=""f[0].x.a""}`,
+		},
 		{
 			name:     ""requireOriginWhenInvalid with origin"",
 			matcher:  ErrorMatcher{}.ByOrigin().RequireOriginWhenInvalid(),"
kubernetes/kubernetes,5b7e96219f8afbb54b0462ace066fa4ac76e7abb,Sergey Kanzhelev,2025-10-03T22:50:07Z,remove cpuSharesToCPUWeight that is not used any longer,pkg/kubelet/cm/cgroup_manager_linux_test.go,0,43,43,"@@ -170,49 +170,6 @@ func TestParseSystemdToCgroupName(t *testing.T) {
 	}
 }
 
-func TestCpuSharesToCPUWeight(t *testing.T) {
-	testCases := []struct {
-		cpuShares         uint64
-		expectedCpuWeight uint64
-	}{
-		{
-			cpuShares:         2,
-			expectedCpuWeight: 1,
-		},
-		{
-			cpuShares:         3,
-			expectedCpuWeight: 1,
-		},
-		{
-			cpuShares:         4,
-			expectedCpuWeight: 1,
-		},
-		{
-			cpuShares:         28,
-			expectedCpuWeight: 1,
-		},
-		{
-			cpuShares:         29,
-			expectedCpuWeight: 2,
-		},
-		{
-			cpuShares:         245,
-			expectedCpuWeight: 10,
-		},
-		{
-			cpuShares:         262144,
-			expectedCpuWeight: 10000,
-		},
-	}
-
-	for _, testCase := range testCases {
-		if actual := cpuSharesToCPUWeight(testCase.cpuShares); actual != testCase.expectedCpuWeight {
-			t.Errorf(""cpuShares: %v, expectedCpuWeight: %v, actualCpuWeight: %v"",
-				testCase.cpuShares, testCase.expectedCpuWeight, actual)
-		}
-	}
-}
-
 func TestCpuWeightToCPUShares(t *testing.T) {
 	testCases := []struct {
 		cpuWeight         uint64"
kubernetes/kubernetes,5b7e96219f8afbb54b0462ace066fa4ac76e7abb,Sergey Kanzhelev,2025-10-03T22:50:07Z,remove cpuSharesToCPUWeight that is not used any longer,pkg/kubelet/cm/cgroup_v2_manager_linux.go,0,6,6,"@@ -168,12 +168,6 @@ func (c *cgroupV2impl) buildCgroupUnifiedPath(name CgroupName) string {
 	return path.Join(cmutil.CgroupRoot, cgroupFsAdaptedName)
 }
 
-// Convert cgroup v1 cpu.shares value to cgroup v2 cpu.weight
-// https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2254-cgroup-v2#phase-1-convert-from-cgroups-v1-settings-to-v2
-func cpuSharesToCPUWeight(cpuShares uint64) uint64 {
-	return uint64((((cpuShares - 2) * 9999) / 262142) + 1)
-}
-
 // Convert cgroup v2 cpu.weight value to cgroup v1 cpu.shares
 // https://github.com/kubernetes/enhancements/tree/master/keps/sig-node/2254-cgroup-v2#phase-1-convert-from-cgroups-v1-settings-to-v2
 func cpuWeightToCPUShares(cpuWeight uint64) uint64 {"
kubernetes/kubernetes,ab7e45228f8238530ec1f11b0abf532f50e0ae45,Kubernetes Prow Robot,2025-10-03T21:22:58Z,"Merge pull request #134400 from macsko/disable_async_api_calls_feature_gate

Disable SchedulerAsyncAPICalls feature gate due to a known regression in v1.34",pkg/features/kube_features.go,1,1,2,"@@ -1606,7 +1606,7 @@ var defaultVersionedKubernetesFeatureGates = map[featuregate.Feature]featuregate
 	},
 
 	SchedulerAsyncAPICalls: {
-		{Version: version.MustParse(""1.34""), Default: true, PreRelease: featuregate.Beta},
+		{Version: version.MustParse(""1.34""), Default: false, PreRelease: featuregate.Beta},
 	},
 
 	SchedulerAsyncPreemption: {"
kubernetes/kubernetes,ab7e45228f8238530ec1f11b0abf532f50e0ae45,Kubernetes Prow Robot,2025-10-03T21:22:58Z,"Merge pull request #134400 from macsko/disable_async_api_calls_feature_gate

Disable SchedulerAsyncAPICalls feature gate due to a known regression in v1.34",pkg/scheduler/backend/api_dispatcher/api_dispatcher_test.go,6,4,10,"@@ -22,19 +22,21 @@ import (
 
 	metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
 	""k8s.io/apimachinery/pkg/types""
+	utilfeature ""k8s.io/apiserver/pkg/util/feature""
 	clientset ""k8s.io/client-go/kubernetes""
 	""k8s.io/client-go/kubernetes/fake""
+	featuregatetesting ""k8s.io/component-base/featuregate/testing""
 	""k8s.io/component-base/metrics/testutil""
 	""k8s.io/klog/v2/ktesting""
 	fwk ""k8s.io/kube-scheduler/framework""
+	""k8s.io/kubernetes/pkg/features""
 	""k8s.io/kubernetes/pkg/scheduler/metrics""
 )
 
-func init() {
+func registerAndResetMetrics(t *testing.T) {
+	featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.SchedulerAsyncAPICalls, true)
 	metrics.Register()
-}
 
-func resetMetrics() {
 	metrics.AsyncAPICallsTotal.Reset()
 	metrics.AsyncAPICallDuration.Reset()
 	metrics.AsyncAPIPendingCalls.Reset()
@@ -100,7 +102,7 @@ func (mac *mockAPICall) IsNoOp() bool {
 
 func TestAPIDispatcherLifecycle(t *testing.T) {
 	// Reset all async API metrics
-	resetMetrics()
+	registerAndResetMetrics(t)
 
 	logger, _ := ktesting.NewTestContext(t)
 "
kubernetes/kubernetes,ab7e45228f8238530ec1f11b0abf532f50e0ae45,Kubernetes Prow Robot,2025-10-03T21:22:58Z,"Merge pull request #134400 from macsko/disable_async_api_calls_feature_gate

Disable SchedulerAsyncAPICalls feature gate due to a known regression in v1.34",pkg/scheduler/backend/api_dispatcher/call_queue_test.go,11,11,22,"@@ -106,7 +106,7 @@ func TestCallQueueAdd(t *testing.T) {
 	uid2 := types.UID(""uid2"")
 
 	t.Run(""First call is added without collision"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call := &queuedAPICall{
@@ -124,7 +124,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""No-op call is skipped"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		onFinishCh := make(chan error, 1)
@@ -149,7 +149,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""Two calls for different objects don't collide"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call1 := &queuedAPICall{
@@ -176,7 +176,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""New call overwrites less relevant call"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		onFinishCh := make(chan error, 1)
@@ -206,7 +206,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""New call is skipped if less relevant"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		onFinishCh := make(chan error, 1)
@@ -237,7 +237,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""New call merges with old call and skips if no-op"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		onFinishCh1 := make(chan error, 1)
@@ -308,7 +308,7 @@ func TestCallQueuePop(t *testing.T) {
 	uid2 := types.UID(""uid2"")
 
 	t.Run(""Calls are popped from the queue in FIFO order"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call1 := &queuedAPICall{
@@ -395,7 +395,7 @@ func TestCallQueueFinalize(t *testing.T) {
 	uid := types.UID(""uid"")
 
 	t.Run(""Call details are cleared if there is no waiting call"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call := &queuedAPICall{
@@ -420,7 +420,7 @@ func TestCallQueueFinalize(t *testing.T) {
 	})
 
 	t.Run(""UID is re-queued if a new call arrived while one was in-flight"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call1 := &queuedAPICall{
@@ -462,7 +462,7 @@ func TestCallQueueSyncObject(t *testing.T) {
 	uid2 := types.UID(""uid2"")
 
 	t.Run(""Object is synced with pending call details"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		obj := &metav1.ObjectMeta{
@@ -497,7 +497,7 @@ func TestCallQueueSyncObject(t *testing.T) {
 	})
 
 	t.Run(""Pending call is canceled if sync results in no-op"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		obj := &metav1.ObjectMeta{UID: uid1}"
kubernetes/kubernetes,ab7e45228f8238530ec1f11b0abf532f50e0ae45,Kubernetes Prow Robot,2025-10-03T21:22:58Z,"Merge pull request #134400 from macsko/disable_async_api_calls_feature_gate

Disable SchedulerAsyncAPICalls feature gate due to a known regression in v1.34",test/compatibility_lifecycle/reference/versioned_feature_list.yaml,1,1,2,"@@ -1385,7 +1385,7 @@
     version: ""1.29""
 - name: SchedulerAsyncAPICalls
   versionedSpecs:
-  - default: true
+  - default: false
     lockToDefault: false
     preRelease: Beta
     version: ""1.34"""
kubernetes/kubernetes,8c6fa3bd2f87efdd46e27483556213c5759e6bf4,Kubernetes Prow Robot,2025-10-03T20:32:56Z,"Merge pull request #134398 from humblec/metrics-csi

correct metrics function comments",pkg/kubelet/metrics/metrics.go,4,4,8,"@@ -136,7 +136,7 @@ const (
 	// Metric for tracking garbage collected images
 	ImageGarbageCollectedTotalKey = ""image_garbage_collected_total""
 
-	// Metric for tracking aligment of compute resources
+	// Metric for tracking alignment of compute resources
 	ContainerAlignedComputeResourcesNameKey          = ""container_aligned_compute_resources_count""
 	ContainerAlignedComputeResourcesFailureNameKey   = ""container_aligned_compute_resources_failure_count""
 	ContainerAlignedComputeResourcesScopeLabelKey    = ""scope""
@@ -924,7 +924,7 @@ var (
 		},
 	)
 
-	// TopologyManagerAdmissionDuration is a Histogram that tracks the duration (in seconds) to serve a pod admission request.
+	// TopologyManagerAdmissionDuration is a Histogram that tracks the duration (in milliseconds) to serve a pod admission request.
 	TopologyManagerAdmissionDuration = metrics.NewHistogram(
 		&metrics.HistogramOpts{
 			Subsystem:      KubeletSubsystem,
@@ -944,7 +944,7 @@ var (
 			StabilityLevel: metrics.ALPHA,
 		},
 	)
-	// OrphanPodCleanedVolumes is number of times that removeOrphanedPodVolumeDirs failed.
+	// OrphanPodCleanedVolumesErrors is the number of times that removeOrphanedPodVolumeDirs failed.
 	OrphanPodCleanedVolumesErrors = metrics.NewGauge(
 		&metrics.GaugeOpts{
 			Subsystem:      KubeletSubsystem,
@@ -1095,7 +1095,7 @@ var (
 		[]string{""reason""},
 	)
 
-	// ImageVolumeRequestedTotal trakcs the number of requested image volumes.
+	// ImageVolumeRequestedTotal tracks the number of requested image volumes.
 	ImageVolumeRequestedTotal = metrics.NewCounter(
 		&metrics.CounterOpts{
 			Subsystem:      KubeletSubsystem,"
kubernetes/kubernetes,8c6fa3bd2f87efdd46e27483556213c5759e6bf4,Kubernetes Prow Robot,2025-10-03T20:32:56Z,"Merge pull request #134398 from humblec/metrics-csi

correct metrics function comments",pkg/volume/csi/csi_attacher.go,1,1,2,"@@ -356,7 +356,7 @@ func (c *csiAttacher) MountDevice(spec *volume.Spec, devicePath string, deviceMo
 		return nil
 	}
 
-	//TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
+	// TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
 	accessMode := v1.ReadWriteOnce
 	if spec.PersistentVolume.Spec.AccessModes != nil {
 		accessMode = spec.PersistentVolume.Spec.AccessModes[0]"
kubernetes/kubernetes,8c6fa3bd2f87efdd46e27483556213c5759e6bf4,Kubernetes Prow Robot,2025-10-03T20:32:56Z,"Merge pull request #134398 from humblec/metrics-csi

correct metrics function comments",pkg/volume/csi/csi_block.go,2,2,4,"@@ -308,7 +308,7 @@ func (m *csiBlockMapper) SetUpDevice() (string, error) {
 		}
 	}
 
-	//TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
+	// TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
 	accessMode := v1.ReadWriteOnce
 	if m.spec.PersistentVolume.Spec.AccessModes != nil {
 		accessMode = m.spec.PersistentVolume.Spec.AccessModes[0]
@@ -370,7 +370,7 @@ func (m *csiBlockMapper) MapPodDevice() (string, error) {
 		}
 	}
 
-	//TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
+	// TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
 	accessMode := v1.ReadWriteOnce
 	if m.spec.PersistentVolume.Spec.AccessModes != nil {
 		accessMode = m.spec.PersistentVolume.Spec.AccessModes[0]"
kubernetes/kubernetes,8c6fa3bd2f87efdd46e27483556213c5759e6bf4,Kubernetes Prow Robot,2025-10-03T20:32:56Z,"Merge pull request #134398 from humblec/metrics-csi

correct metrics function comments",pkg/volume/csi/csi_mounter.go,1,1,2,"@@ -172,7 +172,7 @@ func (c *csiMountMgr) SetUpAt(dir string, mounterArgs volume.MounterArgs) error
 			secretRef = pvSrc.NodePublishSecretRef
 		}
 
-		//TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
+		// TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
 		if c.spec.PersistentVolume.Spec.AccessModes != nil {
 			accessMode = c.spec.PersistentVolume.Spec.AccessModes[0]
 		}"
kubernetes/kubernetes,8c6fa3bd2f87efdd46e27483556213c5759e6bf4,Kubernetes Prow Robot,2025-10-03T20:32:56Z,"Merge pull request #134398 from humblec/metrics-csi

correct metrics function comments",pkg/volume/volume.go,1,1,2,"@@ -99,7 +99,7 @@ type Metrics struct {
 	// and will not equal InodesUsed + InodesFree as the fs is shared.
 	Inodes *resource.Quantity
 
-	// InodesFree represent the inodes available for the volume.  For Volumes that share
+	// InodesFree represents the inodes available for the volume. For Volumes that share
 	// a filesystem with the host (e.g. emptydir, hostpath), this is the free inodes
 	// on the underlying storage, and is shared with host processes and other volumes
 	InodesFree *resource.Quantity"
kubernetes/kubernetes,8c6fa3bd2f87efdd46e27483556213c5759e6bf4,Kubernetes Prow Robot,2025-10-03T20:32:56Z,"Merge pull request #134398 from humblec/metrics-csi

correct metrics function comments",pkg/volume/volume_linux.go,1,1,2,"@@ -252,7 +252,7 @@ func readDirNames(dirname string) ([]string, error) {
 // walkDeep can be used to traverse directories and has two minor differences
 // from filepath.Walk:
 //   - List of files/dirs is not sorted for performance reasons
-//   - callback walkFunc is invoked on root directory after visiting children dirs and files
+//   - callback walkFunc is invoked on root directory after visiting child dirs and files
 func walkDeep(root string, walkFunc filepath.WalkFunc) error {
 	info, err := os.Lstat(root)
 	if err != nil {"
kubernetes/kubernetes,8443187688845d8e3c21385b9689c1519280ad27,Tim Hockin,2025-10-02T21:51:58Z,Warn when quota request > limit,pkg/registry/core/resourcequota/strategy.go,23,15,38,"@@ -75,25 +75,33 @@ func (resourcequotaStrategy) Validate(ctx context.Context, obj runtime.Object) f
 	return validation.ValidateResourceQuota(resourcequota)
 }
 
+// all known resource names that we want to check for request <= limit
+var knownResourceNames = []api.ResourceName{
+	api.ResourceCPU,
+	api.ResourceMemory,
+	api.ResourceStorage,
+	api.ResourceEphemeralStorage,
+}
+
 // WarningsOnCreate returns warnings for the creation of the given object.
 func (resourcequotaStrategy) WarningsOnCreate(ctx context.Context, obj runtime.Object) []string {
 	resourcequota := obj.(*api.ResourceQuota)
-	allWarnings := make([]string, 0)
-	coreReosurces := []api.ResourceName{
-		api.ResourceCPU, api.ResourceMemory,
-		api.ResourceStorage, api.ResourceEphemeralStorage,
-	}
-	for _, resourceName := range coreReosurces {
-		requestResourceName := fmt.Sprintf(""requests.%s"", resourceName)
-		requestResource, requestOK := resourcequota.Spec.Hard[api.ResourceName(requestResourceName)]
-		if (resourceName == api.ResourceCPU || resourceName == api.ResourceMemory) && !requestOK {
-			requestResourceName = string(resourceName)
-			requestResource, requestOK = resourcequota.Spec.Hard[api.ResourceName(requestResourceName)]
+	var allWarnings []string
+	for _, resourceName := range knownResourceNames {
+		requestResourceName := api.ResourceName(fmt.Sprintf(""requests.%s"", resourceName))
+		request, requestOK := resourcequota.Spec.Hard[requestResourceName]
+		if !requestOK && (resourceName == api.ResourceCPU || resourceName == api.ResourceMemory) {
+			// try the bare name for cpu and memory
+			request, requestOK = resourcequota.Spec.Hard[resourceName]
+			if requestOK {
+				requestResourceName = resourceName
+			}
 		}
-		limitResourceName := fmt.Sprintf(""limits.%s"", resourceName)
-		limitResource, limitOK := resourcequota.Spec.Hard[api.ResourceName(limitResourceName)]
-		if requestOK && limitOK && requestResource.Cmp(limitResource) == 1 {
-			allWarnings = append(allWarnings, fmt.Sprintf(""Create ResourceQuota requests.%s: %s should be less than limits.%s: %s"", resourceName, requestResource.String(), resourceName, limitResource.String()))
+		limitResourceName := api.ResourceName(fmt.Sprintf(""limits.%s"", resourceName))
+		limit, limitOK := resourcequota.Spec.Hard[limitResourceName]
+		if requestOK && limitOK && request.Cmp(limit) > 0 {
+			allWarnings = append(allWarnings, fmt.Sprintf(""ResourceQuota %s (%s) should be less than %s (%s)"",
+				requestResourceName, request.String(), limitResourceName, limit.String()))
 		}
 	}
 	return allWarnings"
kubernetes/kubernetes,8443187688845d8e3c21385b9689c1519280ad27,Tim Hockin,2025-10-02T21:51:58Z,Warn when quota request > limit,pkg/registry/core/resourcequota/strategy_test.go,25,15,40,"@@ -77,10 +77,14 @@ func Test_WarningsOnCreate(t *testing.T) {
 			args: &api.ResourceQuota{
 				Spec: api.ResourceQuotaSpec{
 					Hard: api.ResourceList{
-						api.ResourceName(""requests.cpu""):    resource.MustParse(""500m""),
-						api.ResourceName(""limits.cpu""):      resource.MustParse(""1""),
-						api.ResourceName(""requests.memory""): resource.MustParse(""1Gi""),
-						api.ResourceName(""limits.memory""):   resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.cpu""):               resource.MustParse(""500m""),
+						api.ResourceName(""limits.cpu""):                 resource.MustParse(""1""),
+						api.ResourceName(""requests.memory""):            resource.MustParse(""1Gi""),
+						api.ResourceName(""limits.memory""):              resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.storage""):           resource.MustParse(""1Gi""),
+						api.ResourceName(""limits.storage""):             resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.ephemeral-storage""): resource.MustParse(""1Gi""),
+						api.ResourceName(""limits.ephemeral-storage""):   resource.MustParse(""2Gi""),
 					},
 				},
 			},
@@ -91,20 +95,26 @@ func Test_WarningsOnCreate(t *testing.T) {
 			args: &api.ResourceQuota{
 				Spec: api.ResourceQuotaSpec{
 					Hard: api.ResourceList{
-						api.ResourceName(""requests.cpu""):    resource.MustParse(""2""),
-						api.ResourceName(""limits.cpu""):      resource.MustParse(""1""),
-						api.ResourceName(""requests.memory""): resource.MustParse(""3Gi""),
-						api.ResourceName(""limits.memory""):   resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.cpu""):               resource.MustParse(""2""),
+						api.ResourceName(""limits.cpu""):                 resource.MustParse(""1""),
+						api.ResourceName(""requests.memory""):            resource.MustParse(""3Gi""),
+						api.ResourceName(""limits.memory""):              resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.storage""):           resource.MustParse(""3Gi""),
+						api.ResourceName(""limits.storage""):             resource.MustParse(""2Gi""),
+						api.ResourceName(""requests.ephemeral-storage""): resource.MustParse(""3Gi""),
+						api.ResourceName(""limits.ephemeral-storage""):   resource.MustParse(""2Gi""),
 					},
 				},
 			},
 			wantWarnings: []string{
-				""Create ResourceQuota requests.cpu: 2 should be less than limits.cpu: 1"",
-				""Create ResourceQuota requests.memory: 3Gi should be less than limits.memory: 2Gi"",
+				""ResourceQuota requests.cpu (2) should be less than limits.cpu (1)"",
+				""ResourceQuota requests.memory (3Gi) should be less than limits.memory (2Gi)"",
+				""ResourceQuota requests.storage (3Gi) should be less than limits.storage (2Gi)"",
+				""ResourceQuota requests.ephemeral-storage (3Gi) should be less than limits.ephemeral-storage (2Gi)"",
 			},
 		},
 		{
-			name: ""Request greater than limit, and not requests"",
+			name: ""Request greater than limit, bare names"",
 			args: &api.ResourceQuota{
 				Spec: api.ResourceQuotaSpec{
 					Hard: api.ResourceList{
@@ -116,17 +126,17 @@ func Test_WarningsOnCreate(t *testing.T) {
 				},
 			},
 			wantWarnings: []string{
-				""Create ResourceQuota requests.cpu: 2 should be less than limits.cpu: 1"",
-				""Create ResourceQuota requests.memory: 3Gi should be less than limits.memory: 2Gi"",
+				""ResourceQuota cpu (2) should be less than limits.cpu (1)"",
+				""ResourceQuota memory (3Gi) should be less than limits.memory (2Gi)"",
 			},
 		},
 	}
 
 	for _, tt := range tests {
 		t.Run(tt.name, func(t *testing.T) {
 			warnings := Strategy.WarningsOnCreate(context.Background(), tt.args)
-			if !reflect.DeepEqual(warnings, tt.wantWarnings) {
-				t.Errorf(""WarningsOnCreate() warnings = %v, wantWarnings %v"", warnings, tt.wantWarnings)
+			if len(warnings)+len(tt.wantWarnings) > 0 && !reflect.DeepEqual(warnings, tt.wantWarnings) {
+				t.Errorf(""WarningsOnCreate()\n   got: %q\n  want: %q"", warnings, tt.wantWarnings)
 			}
 		})
 	}"
kubernetes/kubernetes,79678dd39359b9bd617fe283d05fad2ca1c37094,rongfu.leng,2025-03-13T13:06:59Z,"feat: add resourcequota WarningsOnCreate request less than limits

Signed-off-by: rongfu.leng <lenronfu@gmail.com>",pkg/registry/core/resourcequota/strategy.go,21,1,22,"@@ -18,6 +18,7 @@ package resourcequota
 
 import (
 	""context""
+	""fmt""
 
 	""k8s.io/apimachinery/pkg/runtime""
 	""k8s.io/apimachinery/pkg/util/validation/field""
@@ -76,7 +77,26 @@ func (resourcequotaStrategy) Validate(ctx context.Context, obj runtime.Object) f
 
 // WarningsOnCreate returns warnings for the creation of the given object.
 func (resourcequotaStrategy) WarningsOnCreate(ctx context.Context, obj runtime.Object) []string {
-	return nil
+	resourcequota := obj.(*api.ResourceQuota)
+	allWarnings := make([]string, 0)
+	coreReosurces := []api.ResourceName{
+		api.ResourceCPU, api.ResourceMemory,
+		api.ResourceStorage, api.ResourceEphemeralStorage,
+	}
+	for _, resourceName := range coreReosurces {
+		requestResourceName := fmt.Sprintf(""requests.%s"", resourceName)
+		requestResource, requestOK := resourcequota.Spec.Hard[api.ResourceName(requestResourceName)]
+		if (resourceName == api.ResourceCPU || resourceName == api.ResourceMemory) && !requestOK {
+			requestResourceName = string(resourceName)
+			requestResource, requestOK = resourcequota.Spec.Hard[api.ResourceName(requestResourceName)]
+		}
+		limitResourceName := fmt.Sprintf(""limits.%s"", resourceName)
+		limitResource, limitOK := resourcequota.Spec.Hard[api.ResourceName(limitResourceName)]
+		if requestOK && limitOK && requestResource.Cmp(limitResource) == 1 {
+			allWarnings = append(allWarnings, fmt.Sprintf(""Create ResourceQuota requests.%s: %s should be less than limits.%s: %s"", resourceName, requestResource.String(), resourceName, limitResource.String()))
+		}
+	}
+	return allWarnings
 }
 
 // Canonicalize normalizes the object after validation."
kubernetes/kubernetes,79678dd39359b9bd617fe283d05fad2ca1c37094,rongfu.leng,2025-03-13T13:06:59Z,"feat: add resourcequota WarningsOnCreate request less than limits

Signed-off-by: rongfu.leng <lenronfu@gmail.com>",pkg/registry/core/resourcequota/strategy_test.go,73,0,73,"@@ -17,6 +17,8 @@ limitations under the License.
 package resourcequota
 
 import (
+	""context""
+	""reflect""
 	""testing""
 
 	""k8s.io/apimachinery/pkg/api/resource""
@@ -58,3 +60,74 @@ func TestResourceQuotaStrategy(t *testing.T) {
 		t.Errorf(""ResourceQuota does not allow setting status on create"")
 	}
 }
+
+func Test_WarningsOnCreate(t *testing.T) {
+	tests := []struct {
+		name         string
+		args         *api.ResourceQuota
+		wantWarnings []string
+	}{
+		{
+			name:         ""Empty Hard Spec"",
+			args:         &api.ResourceQuota{},
+			wantWarnings: []string{},
+		},
+		{
+			name: ""Request less than limit"",
+			args: &api.ResourceQuota{
+				Spec: api.ResourceQuotaSpec{
+					Hard: api.ResourceList{
+						api.ResourceName(""requests.cpu""):    resource.MustParse(""500m""),
+						api.ResourceName(""limits.cpu""):      resource.MustParse(""1""),
+						api.ResourceName(""requests.memory""): resource.MustParse(""1Gi""),
+						api.ResourceName(""limits.memory""):   resource.MustParse(""2Gi""),
+					},
+				},
+			},
+			wantWarnings: []string{},
+		},
+		{
+			name: ""Request greater than limit"",
+			args: &api.ResourceQuota{
+				Spec: api.ResourceQuotaSpec{
+					Hard: api.ResourceList{
+						api.ResourceName(""requests.cpu""):    resource.MustParse(""2""),
+						api.ResourceName(""limits.cpu""):      resource.MustParse(""1""),
+						api.ResourceName(""requests.memory""): resource.MustParse(""3Gi""),
+						api.ResourceName(""limits.memory""):   resource.MustParse(""2Gi""),
+					},
+				},
+			},
+			wantWarnings: []string{
+				""Create ResourceQuota requests.cpu: 2 should be less than limits.cpu: 1"",
+				""Create ResourceQuota requests.memory: 3Gi should be less than limits.memory: 2Gi"",
+			},
+		},
+		{
+			name: ""Request greater than limit, and not requests"",
+			args: &api.ResourceQuota{
+				Spec: api.ResourceQuotaSpec{
+					Hard: api.ResourceList{
+						api.ResourceName(""cpu""):           resource.MustParse(""2""),
+						api.ResourceName(""limits.cpu""):    resource.MustParse(""1""),
+						api.ResourceName(""memory""):        resource.MustParse(""3Gi""),
+						api.ResourceName(""limits.memory""): resource.MustParse(""2Gi""),
+					},
+				},
+			},
+			wantWarnings: []string{
+				""Create ResourceQuota requests.cpu: 2 should be less than limits.cpu: 1"",
+				""Create ResourceQuota requests.memory: 3Gi should be less than limits.memory: 2Gi"",
+			},
+		},
+	}
+
+	for _, tt := range tests {
+		t.Run(tt.name, func(t *testing.T) {
+			warnings := Strategy.WarningsOnCreate(context.Background(), tt.args)
+			if !reflect.DeepEqual(warnings, tt.wantWarnings) {
+				t.Errorf(""WarningsOnCreate() warnings = %v, wantWarnings %v"", warnings, tt.wantWarnings)
+			}
+		})
+	}
+}"
kubernetes/kubernetes,9624c3dcdc9a9e1286e8ca32d07d231e69ed2f0c,Kubernetes Prow Robot,2025-10-03T16:34:58Z,"Merge pull request #134360 from ajaysundark/fix-node-swap-metric-time-stamp

Fix: Correct timestamp for node swap metrics",pkg/kubelet/metrics/collectors/resource_metrics.go,1,1,2,"@@ -213,7 +213,7 @@ func (rc *resourceMetricsCollector) collectNodeSwapMetrics(ch chan<- metrics.Met
 		return
 	}
 
-	ch <- metrics.NewLazyMetricWithTimestamp(s.Memory.Time.Time,
+	ch <- metrics.NewLazyMetricWithTimestamp(s.Swap.Time.Time,
 		metrics.NewLazyConstMetric(nodeSwapUsageDesc, metrics.GaugeValue, float64(*s.Swap.SwapUsageBytes)))
 }
 "
kubernetes/kubernetes,9624c3dcdc9a9e1286e8ca32d07d231e69ed2f0c,Kubernetes Prow Robot,2025-10-03T16:34:58Z,"Merge pull request #134360 from ajaysundark/fix-node-swap-metric-time-stamp

Fix: Correct timestamp for node swap metrics",pkg/kubelet/metrics/collectors/resource_metrics_test.go,39,0,39,"@@ -33,7 +33,9 @@ import (
 func TestCollectResourceMetrics(t *testing.T) {
 	// a static timestamp: 2021-06-23 05:11:18.302091597 +0800
 	staticTimestamp := time.Unix(0, 1624396278302091597)
+	swapTimestamp := staticTimestamp.Add(10 * time.Second)
 	testTime := metav1.NewTime(staticTimestamp)
+	swapTestTime := metav1.NewTime(swapTimestamp)
 	interestedMetrics := []string{
 		""scrape_error"",
 		""resource_scrape_error"",
@@ -106,6 +108,43 @@ func TestCollectResourceMetrics(t *testing.T) {
 				resource_scrape_error 0
 			`,
 		},
+		{
+			name: ""node metrics with different timestamps"",
+			summary: &statsapi.Summary{
+				Node: statsapi.NodeStats{
+					CPU: &statsapi.CPUStats{
+						Time:                 testTime,
+						UsageCoreNanoSeconds: ptr.To[uint64](10000000000),
+					},
+					Memory: &statsapi.MemoryStats{
+						Time:            testTime,
+						WorkingSetBytes: ptr.To[uint64](1000),
+					},
+					Swap: &statsapi.SwapStats{
+						Time:           swapTestTime,
+						SwapUsageBytes: ptr.To[uint64](500),
+					},
+				},
+			},
+			summaryErr: nil,
+			expectedMetrics: `
+				# HELP node_cpu_usage_seconds_total [STABLE] Cumulative cpu time consumed by the node in core-seconds
+				# TYPE node_cpu_usage_seconds_total counter
+				node_cpu_usage_seconds_total 10 1624396278302
+				# HELP node_memory_working_set_bytes [STABLE] Current working set of the node in bytes
+				# TYPE node_memory_working_set_bytes gauge
+				node_memory_working_set_bytes 1000 1624396278302
+				# HELP node_swap_usage_bytes [ALPHA] Current swap usage of the node in bytes. Reported only on non-windows systems
+				# TYPE node_swap_usage_bytes gauge
+				node_swap_usage_bytes 500 1624396288302
+				# HELP scrape_error [ALPHA] 1 if there was an error while getting container metrics, 0 otherwise
+				# TYPE scrape_error gauge
+				scrape_error 0
+				# HELP resource_scrape_error [STABLE] 1 if there was an error while getting container metrics, 0 otherwise
+				# TYPE resource_scrape_error gauge
+				resource_scrape_error 0
+			`,
+		},
 		{
 			name: ""nil node metrics"",
 			summary: &statsapi.Summary{"
kubernetes/kubernetes,bd715a38d32561b45742b2d0cf0762b024107a31,Kubernetes Prow Robot,2025-10-03T14:01:05Z,"Merge pull request #134397 from AwesomePatrol/move-stats-to-get-list

Move stats updates to getList",staging/src/k8s.io/apiserver/pkg/storage/etcd3/store.go,21,21,42,"@@ -778,8 +778,6 @@ func (s *store) GetList(ctx context.Context, key string, opts storage.ListOption
 		metrics.RecordStorageListMetrics(s.groupResource, numFetched, numEvald, numReturn)
 	}()
 
-	stats := s.getResourceSizeEstimator()
-
 	aggregator := s.listErrAggrFactory()
 	for {
 		getResp, err = s.getList(ctx, keyPrefix, opts.Recursive, kubernetes.ListOptions{
@@ -819,9 +817,6 @@ func (s *store) GetList(ctx context.Context, key string, opts storage.ListOption
 		} else {
 			growSlice(v, 2048, len(getResp.Kvs))
 		}
-		if stats != nil {
-			stats.Update(getResp.Kvs)
-		}
 
 		// take items from the response until the bucket is full, filtering as we go
 		for i, kv := range getResp.Kvs {
@@ -903,26 +898,31 @@ func (s *store) GetList(ctx context.Context, key string, opts storage.ListOption
 	return s.versioner.UpdateList(listObj, uint64(withRev), continueValue, remainingItemCount)
 }
 
-func (s *store) getList(ctx context.Context, keyPrefix string, recursive bool, options kubernetes.ListOptions) (kubernetes.ListResponse, error) {
+func (s *store) getList(ctx context.Context, keyPrefix string, recursive bool, options kubernetes.ListOptions) (resp kubernetes.ListResponse, err error) {
 	startTime := time.Now()
 	if recursive {
-		resp, err := s.client.Kubernetes.List(ctx, keyPrefix, options)
+		resp, err = s.client.Kubernetes.List(ctx, keyPrefix, options)
 		metrics.RecordEtcdRequest(""list"", s.groupResource, err, startTime)
-		return resp, err
-	}
-	getResp, err := s.client.Kubernetes.Get(ctx, keyPrefix, kubernetes.GetOptions{
-		Revision: options.Revision,
-	})
-	metrics.RecordEtcdRequest(""get"", s.groupResource, err, startTime)
-	var resp kubernetes.ListResponse
-	if getResp.KV != nil {
-		resp.Kvs = []*mvccpb.KeyValue{getResp.KV}
-		resp.Count = 1
-		resp.Revision = getResp.Revision
 	} else {
-		resp.Kvs = []*mvccpb.KeyValue{}
-		resp.Count = 0
-		resp.Revision = getResp.Revision
+		var getResp kubernetes.GetResponse
+		getResp, err = s.client.Kubernetes.Get(ctx, keyPrefix, kubernetes.GetOptions{
+			Revision: options.Revision,
+		})
+		metrics.RecordEtcdRequest(""get"", s.groupResource, err, startTime)
+		if getResp.KV != nil {
+			resp.Kvs = []*mvccpb.KeyValue{getResp.KV}
+			resp.Count = 1
+			resp.Revision = getResp.Revision
+		} else {
+			resp.Kvs = []*mvccpb.KeyValue{}
+			resp.Count = 0
+			resp.Revision = getResp.Revision
+		}
+	}
+
+	stats := s.getResourceSizeEstimator()
+	if len(resp.Kvs) > 0 && stats != nil {
+		stats.Update(resp.Kvs)
 	}
 	return resp, err
 }"
kubernetes/kubernetes,4db43d13217423bf266a1b6362113e7cabf2a823,Kubernetes Prow Robot,2025-10-03T14:00:58Z,"Merge pull request #134251 from joshjms/update-etcd-3.6.5

etcd: Update etcd to v3.6.5",build/dependencies.yaml,2,2,4,"@@ -64,7 +64,7 @@ dependencies:
 
   # etcd
   - name: ""etcd""
-    version: 3.6.4
+    version: 3.6.5
     refPaths:
     - path: cluster/gce/manifests/etcd.manifest
       match: etcd_docker_tag|etcd_version
@@ -75,7 +75,7 @@ dependencies:
     - path: hack/lib/etcd.sh
       match: ETCD_VERSION=
     - path: staging/src/k8s.io/sample-apiserver/artifacts/example/deployment.yaml
-      match: gcr.io/etcd-development/etcd
+      match: registry.k8s.io/etcd
     - path: test/utils/image/manifest.go
       match: configs\[Etcd\] = Config{list\.GcEtcdRegistry, ""etcd"", ""\d+\.\d+.\d+(-(alpha|beta|rc).\d+)?(-\d+)?""}
 "
kubernetes/kubernetes,4db43d13217423bf266a1b6362113e7cabf2a823,Kubernetes Prow Robot,2025-10-03T14:00:58Z,"Merge pull request #134251 from joshjms/update-etcd-3.6.5

etcd: Update etcd to v3.6.5",cluster/gce/manifests/etcd.manifest,2,2,4,"@@ -18,7 +18,7 @@
     {
     ""name"": ""etcd-container"",
     {{security_context}}
-    ""image"": ""{{ pillar.get('etcd_docker_repository', 'registry.k8s.io/etcd') }}:{{ pillar.get('etcd_docker_tag', '3.6.4-0') }}"",
+    ""image"": ""{{ pillar.get('etcd_docker_repository', 'registry.k8s.io/etcd') }}:{{ pillar.get('etcd_docker_tag', '3.6.5-0') }}"",
     ""resources"": {
       ""requests"": {
         ""cpu"": {{ cpulimit }}
@@ -43,7 +43,7 @@
         ""value"": ""{{ pillar.get('storage_backend', 'etcd3') }}""
       },
       { ""name"": ""TARGET_VERSION"",
-        ""value"": ""{{ pillar.get('etcd_version', '3.6.4') }}""
+        ""value"": ""{{ pillar.get('etcd_version', '3.6.5') }}""
       },
       {
         ""name"": ""DO_NOT_MOVE_BINARIES"","
kubernetes/kubernetes,4db43d13217423bf266a1b6362113e7cabf2a823,Kubernetes Prow Robot,2025-10-03T14:00:58Z,"Merge pull request #134251 from joshjms/update-etcd-3.6.5

etcd: Update etcd to v3.6.5",cluster/gce/upgrade-aliases.sh,2,2,4,"@@ -170,8 +170,8 @@ export KUBE_GCE_ENABLE_IP_ALIASES=true
 export SECONDARY_RANGE_NAME=""pods-default""
 export STORAGE_BACKEND=""etcd3""
 export STORAGE_MEDIA_TYPE=""application/vnd.kubernetes.protobuf""
-export ETCD_IMAGE=3.6.4-0
-export ETCD_VERSION=3.6.4
+export ETCD_IMAGE=3.6.5-0
+export ETCD_VERSION=3.6.5
 
 # Upgrade master with updated kube envs
 ""${KUBE_ROOT}/cluster/gce/upgrade.sh"" -M -l"
kubernetes/kubernetes,4db43d13217423bf266a1b6362113e7cabf2a823,Kubernetes Prow Robot,2025-10-03T14:00:58Z,"Merge pull request #134251 from joshjms/update-etcd-3.6.5

etcd: Update etcd to v3.6.5",cmd/kubeadm/app/constants/constants.go,2,2,4,"@@ -326,7 +326,7 @@ const (
 	MinExternalEtcdVersion = ""3.5.21-0""
 
 	// DefaultEtcdVersion indicates the default etcd version that kubeadm uses
-	DefaultEtcdVersion = ""3.6.4-0""
+	DefaultEtcdVersion = ""3.6.5-0""
 
 	// Etcd defines variable used internally when referring to etcd component
 	Etcd = ""etcd""
@@ -501,7 +501,7 @@ var (
 		31: ""3.5.21-0"",
 		32: ""3.5.21-0"",
 		33: ""3.5.21-0"",
-		34: ""3.6.4-0"",
+		34: ""3.6.5-0"",
 	}
 
 	// KubeadmCertsClusterRoleName sets the name for the ClusterRole that allows"
kubernetes/kubernetes,4db43d13217423bf266a1b6362113e7cabf2a823,Kubernetes Prow Robot,2025-10-03T14:00:58Z,"Merge pull request #134251 from joshjms/update-etcd-3.6.5

etcd: Update etcd to v3.6.5",hack/lib/etcd.sh,1,1,2,"@@ -16,7 +16,7 @@
 
 # A set of helpers for starting/running etcd for tests
 
-ETCD_VERSION=${ETCD_VERSION:-3.6.4}
+ETCD_VERSION=${ETCD_VERSION:-3.6.5}
 ETCD_HOST=${ETCD_HOST:-127.0.0.1}
 ETCD_PORT=${ETCD_PORT:-2379}
 # This is intentionally not called ETCD_LOG_LEVEL:"
kubernetes/kubernetes,4db43d13217423bf266a1b6362113e7cabf2a823,Kubernetes Prow Robot,2025-10-03T14:00:58Z,"Merge pull request #134251 from joshjms/update-etcd-3.6.5

etcd: Update etcd to v3.6.5",staging/src/k8s.io/sample-apiserver/artifacts/example/deployment.yaml,1,1,2,"@@ -26,4 +26,4 @@ spec:
         imagePullPolicy: Never
         args: [ ""--etcd-servers=http://localhost:2379"" ]
       - name: etcd
-        image: gcr.io/etcd-development/etcd:v3.6.4
+        image: registry.k8s.io/etcd:v3.6.5"
kubernetes/kubernetes,4db43d13217423bf266a1b6362113e7cabf2a823,Kubernetes Prow Robot,2025-10-03T14:00:58Z,"Merge pull request #134251 from joshjms/update-etcd-3.6.5

etcd: Update etcd to v3.6.5",test/utils/image/manifest.go,1,1,2,"@@ -226,7 +226,7 @@ func initImageConfigs(list RegistryList) (map[ImageID]Config, map[ImageID]Config
 	configs[AppArmorLoader] = Config{list.PromoterE2eRegistry, ""apparmor-loader"", ""1.4""}
 	configs[BusyBox] = Config{list.PromoterE2eRegistry, ""busybox"", ""1.37.0-1""}
 	configs[DistrolessIptables] = Config{list.BuildImageRegistry, ""distroless-iptables"", ""v0.8.2""}
-	configs[Etcd] = Config{list.GcEtcdRegistry, ""etcd"", ""3.6.4-0""}
+	configs[Etcd] = Config{list.GcEtcdRegistry, ""etcd"", ""3.6.5-0""}
 	configs[InvalidRegistryImage] = Config{list.InvalidRegistry, ""alpine"", ""3.1""}
 	configs[IpcUtils] = Config{list.PromoterE2eRegistry, ""ipc-utils"", ""1.3""}
 	configs[JessieDnsutils] = Config{list.PromoterE2eRegistry, ""jessie-dnsutils"", ""1.7""}"
kubernetes/kubernetes,1137d51b3588f82daedbd067d2d8b0c8bab3aca8,Maciej Skoczeń,2025-09-23T09:29:44Z,Disable SchedulerAsyncAPICalls feature gate due to a known regression,pkg/features/kube_features.go,1,1,2,"@@ -1606,7 +1606,7 @@ var defaultVersionedKubernetesFeatureGates = map[featuregate.Feature]featuregate
 	},
 
 	SchedulerAsyncAPICalls: {
-		{Version: version.MustParse(""1.34""), Default: true, PreRelease: featuregate.Beta},
+		{Version: version.MustParse(""1.34""), Default: false, PreRelease: featuregate.Beta},
 	},
 
 	SchedulerAsyncPreemption: {"
kubernetes/kubernetes,1137d51b3588f82daedbd067d2d8b0c8bab3aca8,Maciej Skoczeń,2025-09-23T09:29:44Z,Disable SchedulerAsyncAPICalls feature gate due to a known regression,pkg/scheduler/backend/api_dispatcher/api_dispatcher_test.go,6,4,10,"@@ -22,19 +22,21 @@ import (
 
 	metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
 	""k8s.io/apimachinery/pkg/types""
+	utilfeature ""k8s.io/apiserver/pkg/util/feature""
 	clientset ""k8s.io/client-go/kubernetes""
 	""k8s.io/client-go/kubernetes/fake""
+	featuregatetesting ""k8s.io/component-base/featuregate/testing""
 	""k8s.io/component-base/metrics/testutil""
 	""k8s.io/klog/v2/ktesting""
 	fwk ""k8s.io/kube-scheduler/framework""
+	""k8s.io/kubernetes/pkg/features""
 	""k8s.io/kubernetes/pkg/scheduler/metrics""
 )
 
-func init() {
+func registerAndResetMetrics(t *testing.T) {
+	featuregatetesting.SetFeatureGateDuringTest(t, utilfeature.DefaultFeatureGate, features.SchedulerAsyncAPICalls, true)
 	metrics.Register()
-}
 
-func resetMetrics() {
 	metrics.AsyncAPICallsTotal.Reset()
 	metrics.AsyncAPICallDuration.Reset()
 	metrics.AsyncAPIPendingCalls.Reset()
@@ -100,7 +102,7 @@ func (mac *mockAPICall) IsNoOp() bool {
 
 func TestAPIDispatcherLifecycle(t *testing.T) {
 	// Reset all async API metrics
-	resetMetrics()
+	registerAndResetMetrics(t)
 
 	logger, _ := ktesting.NewTestContext(t)
 "
kubernetes/kubernetes,1137d51b3588f82daedbd067d2d8b0c8bab3aca8,Maciej Skoczeń,2025-09-23T09:29:44Z,Disable SchedulerAsyncAPICalls feature gate due to a known regression,pkg/scheduler/backend/api_dispatcher/call_queue_test.go,11,11,22,"@@ -106,7 +106,7 @@ func TestCallQueueAdd(t *testing.T) {
 	uid2 := types.UID(""uid2"")
 
 	t.Run(""First call is added without collision"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call := &queuedAPICall{
@@ -124,7 +124,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""No-op call is skipped"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		onFinishCh := make(chan error, 1)
@@ -149,7 +149,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""Two calls for different objects don't collide"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call1 := &queuedAPICall{
@@ -176,7 +176,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""New call overwrites less relevant call"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		onFinishCh := make(chan error, 1)
@@ -206,7 +206,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""New call is skipped if less relevant"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		onFinishCh := make(chan error, 1)
@@ -237,7 +237,7 @@ func TestCallQueueAdd(t *testing.T) {
 	})
 
 	t.Run(""New call merges with old call and skips if no-op"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		onFinishCh1 := make(chan error, 1)
@@ -308,7 +308,7 @@ func TestCallQueuePop(t *testing.T) {
 	uid2 := types.UID(""uid2"")
 
 	t.Run(""Calls are popped from the queue in FIFO order"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call1 := &queuedAPICall{
@@ -395,7 +395,7 @@ func TestCallQueueFinalize(t *testing.T) {
 	uid := types.UID(""uid"")
 
 	t.Run(""Call details are cleared if there is no waiting call"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call := &queuedAPICall{
@@ -420,7 +420,7 @@ func TestCallQueueFinalize(t *testing.T) {
 	})
 
 	t.Run(""UID is re-queued if a new call arrived while one was in-flight"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		call1 := &queuedAPICall{
@@ -462,7 +462,7 @@ func TestCallQueueSyncObject(t *testing.T) {
 	uid2 := types.UID(""uid2"")
 
 	t.Run(""Object is synced with pending call details"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		obj := &metav1.ObjectMeta{
@@ -497,7 +497,7 @@ func TestCallQueueSyncObject(t *testing.T) {
 	})
 
 	t.Run(""Pending call is canceled if sync results in no-op"", func(t *testing.T) {
-		resetMetrics()
+		registerAndResetMetrics(t)
 
 		cq := newCallQueue(mockRelevances)
 		obj := &metav1.ObjectMeta{UID: uid1}"
kubernetes/kubernetes,1137d51b3588f82daedbd067d2d8b0c8bab3aca8,Maciej Skoczeń,2025-09-23T09:29:44Z,Disable SchedulerAsyncAPICalls feature gate due to a known regression,test/compatibility_lifecycle/reference/versioned_feature_list.yaml,1,1,2,"@@ -1385,7 +1385,7 @@
     version: ""1.29""
 - name: SchedulerAsyncAPICalls
   versionedSpecs:
-  - default: true
+  - default: false
     lockToDefault: false
     preRelease: Beta
     version: ""1.34"""
kubernetes/kubernetes,aa42060beb0961352cdcff34cec71d2094e000f2,Kubernetes Prow Robot,2025-10-03T11:52:57Z,"Merge pull request #134387 from adrianmoisey/attempt-at-fixing-flake

Use a dedicated delete channel in HPA test",pkg/controller/podautoscaler/horizontal_test.go,3,2,5,"@@ -5192,6 +5192,7 @@ func TestMultipleHPAs(t *testing.T) {
 	const testNamespace = ""dummy-namespace""
 
 	processed := make(chan string, hpaCount)
+	processedDeleted := make(chan string, 1)
 
 	testClient := &fake.Clientset{}
 	testScaleClient := &scalefake.FakeScaleClient{}
@@ -5423,7 +5424,7 @@ func TestMultipleHPAs(t *testing.T) {
 	testClient.AddReactor(""delete"", ""horizontalpodautoscalers"", func(action core.Action) (handled bool, ret runtime.Object, err error) {
 		deleteAction := action.(core.DeleteAction)
 		hpaName := deleteAction.GetName()
-		processed <- hpaName
+		processedDeleted <- hpaName
 		return true, nil, nil
 	})
 
@@ -5481,7 +5482,7 @@ func TestMultipleHPAs(t *testing.T) {
 
 	// Wait for deletion to be processed
 	select {
-	case deletedHPAName := <-processed:
+	case deletedHPAName := <-processedDeleted:
 		assert.Equal(t, hpaName, deletedHPAName, ""Expected the deleted HPA name to match"")
 	case <-time.After(5 * time.Second):
 		t.Fatalf(""Timeout waiting for HPA deletion to be processed"")"
kubernetes/kubernetes,2ddc95555828c49037f7ae2ab0adebf311c41fc1,Humble Devassy Chirammal,2025-10-03T11:17:23Z,"correct metrics function comments

Signed-off-by: Humble Devassy Chirammal <humble.devassy@gmail.com>",pkg/kubelet/metrics/metrics.go,4,4,8,"@@ -136,7 +136,7 @@ const (
 	// Metric for tracking garbage collected images
 	ImageGarbageCollectedTotalKey = ""image_garbage_collected_total""
 
-	// Metric for tracking aligment of compute resources
+	// Metric for tracking alignment of compute resources
 	ContainerAlignedComputeResourcesNameKey          = ""container_aligned_compute_resources_count""
 	ContainerAlignedComputeResourcesFailureNameKey   = ""container_aligned_compute_resources_failure_count""
 	ContainerAlignedComputeResourcesScopeLabelKey    = ""scope""
@@ -924,7 +924,7 @@ var (
 		},
 	)
 
-	// TopologyManagerAdmissionDuration is a Histogram that tracks the duration (in seconds) to serve a pod admission request.
+	// TopologyManagerAdmissionDuration is a Histogram that tracks the duration (in milliseconds) to serve a pod admission request.
 	TopologyManagerAdmissionDuration = metrics.NewHistogram(
 		&metrics.HistogramOpts{
 			Subsystem:      KubeletSubsystem,
@@ -944,7 +944,7 @@ var (
 			StabilityLevel: metrics.ALPHA,
 		},
 	)
-	// OrphanPodCleanedVolumes is number of times that removeOrphanedPodVolumeDirs failed.
+	// OrphanPodCleanedVolumesErrors is the number of times that removeOrphanedPodVolumeDirs failed.
 	OrphanPodCleanedVolumesErrors = metrics.NewGauge(
 		&metrics.GaugeOpts{
 			Subsystem:      KubeletSubsystem,
@@ -1095,7 +1095,7 @@ var (
 		[]string{""reason""},
 	)
 
-	// ImageVolumeRequestedTotal trakcs the number of requested image volumes.
+	// ImageVolumeRequestedTotal tracks the number of requested image volumes.
 	ImageVolumeRequestedTotal = metrics.NewCounter(
 		&metrics.CounterOpts{
 			Subsystem:      KubeletSubsystem,"
kubernetes/kubernetes,2ddc95555828c49037f7ae2ab0adebf311c41fc1,Humble Devassy Chirammal,2025-10-03T11:17:23Z,"correct metrics function comments

Signed-off-by: Humble Devassy Chirammal <humble.devassy@gmail.com>",pkg/volume/csi/csi_attacher.go,1,1,2,"@@ -356,7 +356,7 @@ func (c *csiAttacher) MountDevice(spec *volume.Spec, devicePath string, deviceMo
 		return nil
 	}
 
-	//TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
+	// TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
 	accessMode := v1.ReadWriteOnce
 	if spec.PersistentVolume.Spec.AccessModes != nil {
 		accessMode = spec.PersistentVolume.Spec.AccessModes[0]"
kubernetes/kubernetes,2ddc95555828c49037f7ae2ab0adebf311c41fc1,Humble Devassy Chirammal,2025-10-03T11:17:23Z,"correct metrics function comments

Signed-off-by: Humble Devassy Chirammal <humble.devassy@gmail.com>",pkg/volume/csi/csi_block.go,2,2,4,"@@ -308,7 +308,7 @@ func (m *csiBlockMapper) SetUpDevice() (string, error) {
 		}
 	}
 
-	//TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
+	// TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
 	accessMode := v1.ReadWriteOnce
 	if m.spec.PersistentVolume.Spec.AccessModes != nil {
 		accessMode = m.spec.PersistentVolume.Spec.AccessModes[0]
@@ -370,7 +370,7 @@ func (m *csiBlockMapper) MapPodDevice() (string, error) {
 		}
 	}
 
-	//TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
+	// TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
 	accessMode := v1.ReadWriteOnce
 	if m.spec.PersistentVolume.Spec.AccessModes != nil {
 		accessMode = m.spec.PersistentVolume.Spec.AccessModes[0]"
kubernetes/kubernetes,2ddc95555828c49037f7ae2ab0adebf311c41fc1,Humble Devassy Chirammal,2025-10-03T11:17:23Z,"correct metrics function comments

Signed-off-by: Humble Devassy Chirammal <humble.devassy@gmail.com>",pkg/volume/csi/csi_mounter.go,1,1,2,"@@ -172,7 +172,7 @@ func (c *csiMountMgr) SetUpAt(dir string, mounterArgs volume.MounterArgs) error
 			secretRef = pvSrc.NodePublishSecretRef
 		}
 
-		//TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
+		// TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI
 		if c.spec.PersistentVolume.Spec.AccessModes != nil {
 			accessMode = c.spec.PersistentVolume.Spec.AccessModes[0]
 		}"
kubernetes/kubernetes,2ddc95555828c49037f7ae2ab0adebf311c41fc1,Humble Devassy Chirammal,2025-10-03T11:17:23Z,"correct metrics function comments

Signed-off-by: Humble Devassy Chirammal <humble.devassy@gmail.com>",pkg/volume/volume.go,1,1,2,"@@ -99,7 +99,7 @@ type Metrics struct {
 	// and will not equal InodesUsed + InodesFree as the fs is shared.
 	Inodes *resource.Quantity
 
-	// InodesFree represent the inodes available for the volume.  For Volumes that share
+	// InodesFree represents the inodes available for the volume. For Volumes that share
 	// a filesystem with the host (e.g. emptydir, hostpath), this is the free inodes
 	// on the underlying storage, and is shared with host processes and other volumes
 	InodesFree *resource.Quantity"
kubernetes/kubernetes,2ddc95555828c49037f7ae2ab0adebf311c41fc1,Humble Devassy Chirammal,2025-10-03T11:17:23Z,"correct metrics function comments

Signed-off-by: Humble Devassy Chirammal <humble.devassy@gmail.com>",pkg/volume/volume_linux.go,1,1,2,"@@ -252,7 +252,7 @@ func readDirNames(dirname string) ([]string, error) {
 // walkDeep can be used to traverse directories and has two minor differences
 // from filepath.Walk:
 //   - List of files/dirs is not sorted for performance reasons
-//   - callback walkFunc is invoked on root directory after visiting children dirs and files
+//   - callback walkFunc is invoked on root directory after visiting child dirs and files
 func walkDeep(root string, walkFunc filepath.WalkFunc) error {
 	info, err := os.Lstat(root)
 	if err != nil {"
kubernetes/kubernetes,389507c72325bb4a26b623e7b81a9c5c57d97745,Kubernetes Prow Robot,2025-10-03T10:38:58Z,"Merge pull request #134294 from ania-borowiec/test_for_rollback

Fix for incorrect activation of preemptor pod waiting for deletion of victim, plus integration test verifying the fix",pkg/scheduler/framework/preemption/preemption.go,6,2,8,"@@ -184,8 +184,12 @@ func NewEvaluator(pluginName string, fh fwk.Handle, i Interface, enableAsyncPree
 			updated := apipod.UpdatePodCondition(newStatus, condition)
 			if updated {
 				if err := util.PatchPodStatus(ctx, ev.Handler.ClientSet(), victim.Name, victim.Namespace, &victim.Status, newStatus); err != nil {
-					logger.Error(err, ""Could not add DisruptionTarget condition due to preemption"", ""pod"", klog.KObj(victim), ""preemptor"", klog.KObj(preemptor))
-					return err
+					if !apierrors.IsNotFound(err) {
+						logger.Error(err, ""Could not add DisruptionTarget condition due to preemption"", ""preemptor"", klog.KObj(preemptor), ""victim"", klog.KObj(victim))
+						return err
+					}
+					logger.V(2).Info(""Victim Pod is already deleted"", ""preemptor"", klog.KObj(preemptor), ""victim"", klog.KObj(victim), ""node"", c.Name())
+					return nil
 				}
 			}
 			if err := util.DeletePod(ctx, ev.Handler.ClientSet(), victim); err != nil {"
kubernetes/kubernetes,389507c72325bb4a26b623e7b81a9c5c57d97745,Kubernetes Prow Robot,2025-10-03T10:38:58Z,"Merge pull request #134294 from ania-borowiec/test_for_rollback

Fix for incorrect activation of preemptor pod waiting for deletion of victim, plus integration test verifying the fix",test/integration/scheduler/preemption/preemption_test.go,189,13,202,"@@ -20,7 +20,9 @@ package preemption
 
 import (
 	""context""
+	""errors""
 	""fmt""
+	""strings""
 	""sync""
 	""testing""
 	""time""
@@ -41,6 +43,7 @@ import (
 	""k8s.io/kubernetes/pkg/scheduler/apis/config""
 	configtesting ""k8s.io/kubernetes/pkg/scheduler/apis/config/testing""
 	""k8s.io/kubernetes/pkg/scheduler/backend/queue""
+	""k8s.io/kubernetes/pkg/scheduler/framework/plugins/defaultbinder""
 	""k8s.io/kubernetes/pkg/scheduler/framework/plugins/defaultpreemption""
 	plfeature ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/feature""
 	""k8s.io/kubernetes/pkg/scheduler/framework/plugins/names""
@@ -478,6 +481,8 @@ func TestPreemption(t *testing.T) {
 }
 
 func TestAsyncPreemption(t *testing.T) {
+	const podBlockedInBindingName = ""pod-blocked-in-binding""
+
 	type createPod struct {
 		pod *v1.Pod
 		// count is the number of times the pod should be created by this action.
@@ -487,8 +492,9 @@ func TestAsyncPreemption(t *testing.T) {
 	}
 
 	type schedulePod struct {
-		podName       string
-		expectSuccess bool
+		podName             string
+		expectSuccess       bool
+		expectUnschedulable bool
 	}
 
 	type scenario struct {
@@ -512,6 +518,15 @@ func TestAsyncPreemption(t *testing.T) {
 		// You should give a Pod index representing the order of Pod creation.
 		// e.g., if you want to check the Pod created first in the test case, you should give 0.
 		podRunningPreemption *int
+		// activatePod moves the pod from unschedulable to active or backoff.
+		// The value is the name of the pod to activate.
+		activatePod string
+		// resumeBind resumes the binding operation that keeps the pod blocked.
+		// Note: The pod will only become blocked in the first place, if pod name matches string defined in podBlockedInBinding.
+		resumeBind bool
+		// verifyPodInUnschedulable waits for some time and confirms that the given pod is in the unschedulable pool.
+		// The value is the name of the checked pod.
+		verifyPodInUnschedulable string
 	}
 
 	tests := []struct {
@@ -539,7 +554,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the preemptor Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor"",
+						podName:             ""preemptor"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -582,7 +598,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the preemptor Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-high-priority"",
+						podName:             ""preemptor-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -604,7 +621,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the mid-priority Pod"",
 					schedulePod: &schedulePod{
-						podName: ""pod-mid-priority"",
+						podName:             ""pod-mid-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -622,7 +640,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the mid-priority Pod again"",
 					schedulePod: &schedulePod{
-						podName: ""pod-mid-priority"",
+						podName:             ""pod-mid-priority"",
+						expectUnschedulable: true,
 					},
 				},
 			},
@@ -646,7 +665,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the preemptor Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-high-priority"",
+						podName:             ""preemptor-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -668,7 +688,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the super-high-priority Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-super-high-priority"",
+						podName:             ""preemptor-super-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -700,7 +721,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the high-priority Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-high-priority"",
+						podName:             ""preemptor-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 			},
@@ -725,7 +747,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the preemptor Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-high-priority"",
+						podName:             ""preemptor-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -748,7 +771,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the mid-priority Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-mid-priority"",
+						podName:             ""preemptor-mid-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -784,6 +808,74 @@ func TestAsyncPreemption(t *testing.T) {
 				},
 			},
 		},
+		{
+			// This scenario verifies the fix for https://github.com/kubernetes/kubernetes/issues/134249
+			// Scenario reproduces the issue:
+			// Victim pod takes long in binding. Preemptor pod attempts preemption, goes to unschedulable, then gets activated by some unknown trigger.
+			// Preemptor pod is expected to go back to unschedulable queue and remain there until victim binding and preemption is completed.
+			name: ""victim blocked in binding, preemptor pod gets activated randomly and returns to unschedulable queue until victim is bound and deleted"",
+			scenarios: []scenario{
+				{
+					name: ""create victim Pod that is going to be blocked in binding"",
+					createPod: &createPod{
+						pod: st.MakePod().Name(podBlockedInBindingName).Req(map[v1.ResourceName]string{v1.ResourceCPU: ""2""}).Container(""image"").ZeroTerminationGracePeriod().Priority(1).Obj(),
+					},
+				},
+				{
+					name: ""schedule victim Pod"",
+					schedulePod: &schedulePod{
+						podName: podBlockedInBindingName,
+					},
+				},
+				{
+					name: ""create a preemptor Pod"",
+					createPod: &createPod{
+						pod: st.MakePod().Name(""preemptor"").Req(map[v1.ResourceName]string{v1.ResourceCPU: ""4""}).Container(""image"").Priority(100).Obj(),
+					},
+				},
+				{
+					name: ""schedule the preemptor Pod"",
+					schedulePod: &schedulePod{
+						podName:             ""preemptor"",
+						expectUnschedulable: true,
+					},
+				},
+				{
+					name:               ""complete the preemption API call"",
+					completePreemption: ""preemptor"",
+				},
+				{
+					name:        ""activate preemptor Pod, simulating a random event that activated it"",
+					activatePod: ""preemptor"",
+				},
+				{
+					name: ""schedule the preemptor Pod again and expect it to end up in unschedulable (waiting for preemption to finish)"",
+					schedulePod: &schedulePod{
+						podName:             ""preemptor"",
+						expectUnschedulable: true,
+					},
+				},
+				{
+					name:               ""complete the preemption API call"",
+					completePreemption: ""preemptor"",
+				},
+				{
+					name:                     ""check that preemptor remained in unschedulable queue"",
+					verifyPodInUnschedulable: ""preemptor"",
+				},
+				{
+					name:       ""resume binding of the blocked pod"",
+					resumeBind: true,
+				},
+				{
+					name: ""schedule the preemptor Pod after the completed binding and preemption of the blocked pod"",
+					schedulePod: &schedulePod{
+						podName:       ""preemptor"",
+						expectSuccess: true,
+					},
+				},
+			},
+		},
 	}
 
 	// All test cases have the same node.
@@ -840,16 +932,40 @@ func TestAsyncPreemption(t *testing.T) {
 				if err != nil {
 					t.Fatalf(""Error registering a filter: %v"", err)
 				}
+
+				// Register fake bind plugin that will block on binding for the specified pod name, until it receives a resume signal via the blockBindingChannel.
+				blockBindingChannel := make(chan struct{})
+				defer close(blockBindingChannel)
+				blockingBindPluginName := ""blockingBindPlugin""
+				err = registry.Register(blockingBindPluginName, func(ctx context.Context, o runtime.Object, fh fwk.Handle) (fwk.Plugin, error) {
+					db, err := defaultbinder.New(ctx, o, fh)
+					if err != nil {
+						t.Fatalf(""Error creating a default binder plugin: %v"", err)
+					}
+					var bindPlugin = blockingBindPlugin{
+						name:                blockingBindPluginName,
+						nameOfPodToBlock:    podBlockedInBindingName,
+						realPlugin:          db.(fwk.BindPlugin),
+						blockBindingChannel: blockBindingChannel,
+					}
+					return &bindPlugin, nil
+				})
+				if err != nil {
+					t.Fatalf(""Error registering a bind plugin: %v"", err)
+				}
+
 				cfg := configtesting.V1ToInternalWithDefaults(t, configv1.KubeSchedulerConfiguration{
 					Profiles: []configv1.KubeSchedulerProfile{{
 						SchedulerName: ptr.To(v1.DefaultSchedulerName),
 						Plugins: &configv1.Plugins{
 							MultiPoint: configv1.PluginSet{
 								Enabled: []configv1.Plugin{
+									{Name: blockingBindPluginName},
 									{Name: delayedPreemptionPluginName},
 								},
 								Disabled: []configv1.Plugin{
 									{Name: names.DefaultPreemption},
+									{Name: names.DefaultBinder},
 								},
 							},
 						},
@@ -937,15 +1053,23 @@ func TestAsyncPreemption(t *testing.T) {
 						preemptionDoneChannels[scenario.schedulePod.podName] = make(chan struct{})
 						lock.Unlock()
 						testCtx.Scheduler.ScheduleOne(testCtx.Ctx)
+
 						if scenario.schedulePod.expectSuccess {
 							if err := wait.PollUntilContextTimeout(testCtx.Ctx, 200*time.Millisecond, wait.ForeverTestTimeout, false, testutils.PodScheduled(cs, testCtx.NS.Name, scenario.schedulePod.podName)); err != nil {
 								t.Fatalf(""Expected the pod %s to be scheduled"", scenario.schedulePod.podName)
 							}
-						} else {
+						} else if scenario.schedulePod.expectUnschedulable {
 							if !podInUnschedulablePodPool(t, testCtx.Scheduler.SchedulingQueue, scenario.schedulePod.podName) {
-								t.Fatalf(""Expected the pod %s to be in the queue after the scheduling attempt"", scenario.schedulePod.podName)
+								t.Fatalf(""Expected the pod %s to be in the unschedulable queue after the scheduling attempt"", scenario.schedulePod.podName)
 							}
 						}
+					case scenario.activatePod != """":
+						pod := unschedulablePod(t, testCtx.Scheduler.SchedulingQueue, scenario.activatePod)
+						if pod == nil {
+							t.Fatalf(""Expected the pod %s to be in unschedulable queue before activation phase"", scenario.activatePod)
+						}
+						m := map[string]*v1.Pod{scenario.activatePod: pod}
+						testCtx.Scheduler.SchedulingQueue.Activate(logger, m)
 					case scenario.completePreemption != """":
 						lock.Lock()
 						if _, ok := preemptionDoneChannels[scenario.completePreemption]; !ok {
@@ -973,6 +1097,20 @@ func TestAsyncPreemption(t *testing.T) {
 						}); err != nil {
 							t.Fatalf(""Expected the pod %s to be running preemption"", createdPods[*scenario.podRunningPreemption].Name)
 						}
+					case scenario.resumeBind:
+						blockBindingChannel <- struct{}{}
+					case scenario.verifyPodInUnschedulable != """":
+						if err := wait.PollUntilContextTimeout(testCtx.Ctx, 50*time.Millisecond, 200*time.Millisecond, false, func(ctx context.Context) (bool, error) {
+							if !podInUnschedulablePodPool(t, testCtx.Scheduler.SchedulingQueue, scenario.verifyPodInUnschedulable) {
+								return false, fmt.Errorf(""expected the pod %s to remain in the unschedulable queue after the scheduling attempt"", scenario.verifyPodInUnschedulable)
+							}
+							// Continue polling to confirm that pod remains in unschedulable queue and does not get activated.
+							return false, nil
+						}); err != nil && !errors.Is(err, context.DeadlineExceeded) {
+							// If timeout was reached or context was cancelled without finding that vanished from unschedulable, it means the state is as expected.
+							// If a different error occurred, it means that the pod got unexpectedly activated, or something else went wrong.
+							t.Fatalf(""Error in scenario verifyPodInUnschedulable: %v"", err)
+						}
 					}
 				}
 			})
@@ -998,3 +1136,41 @@ func podInUnschedulablePodPool(t *testing.T, queue queue.SchedulingQueue, podNam
 	}
 	return false
 }
+
+// unschedulablePod checks if the given Pod is in the unschedulable queue and returns it.
+func unschedulablePod(t *testing.T, queue queue.SchedulingQueue, podName string) *v1.Pod {
+	t.Helper()
+	unschedPods := queue.UnschedulablePods()
+	for _, pod := range unschedPods {
+		if pod.Name == podName {
+			return pod
+		}
+	}
+	return nil
+}
+
+// blockingBindPlugin is a fake plugin that simulates a long binding operation.
+// Underneath it calls realPlugin.Bind(), after receiving a signal that binding can be unblocked.
+type blockingBindPlugin struct {
+	name                string
+	nameOfPodToBlock    string
+	realPlugin          fwk.BindPlugin
+	blockBindingChannel chan struct{}
+}
+
+func (bp *blockingBindPlugin) Name() string {
+	return bp.name
+}
+
+func (bp *blockingBindPlugin) Bind(ctx context.Context, state fwk.CycleState, p *v1.Pod, nodeName string) *fwk.Status {
+	if strings.Contains(p.Name, bp.nameOfPodToBlock) {
+		// block the bind goroutine to complete until the test case allows it to proceed.
+		select {
+		case <-bp.blockBindingChannel:
+		case <-ctx.Done():
+		}
+	}
+	return bp.realPlugin.Bind(ctx, state, p, nodeName)
+}
+
+var _ fwk.BindPlugin = &blockingBindPlugin{}"
kubernetes/kubernetes,070d4c1846b98a144ba3ffcb2ce885280efca420,joshjms,2025-09-24T17:12:57Z,"bump etcd to v3.6.5

Signed-off-by: joshjms <joshjms1607@gmail.com>",build/dependencies.yaml,2,2,4,"@@ -64,7 +64,7 @@ dependencies:
 
   # etcd
   - name: ""etcd""
-    version: 3.6.4
+    version: 3.6.5
     refPaths:
     - path: cluster/gce/manifests/etcd.manifest
       match: etcd_docker_tag|etcd_version
@@ -75,7 +75,7 @@ dependencies:
     - path: hack/lib/etcd.sh
       match: ETCD_VERSION=
     - path: staging/src/k8s.io/sample-apiserver/artifacts/example/deployment.yaml
-      match: gcr.io/etcd-development/etcd
+      match: registry.k8s.io/etcd
     - path: test/utils/image/manifest.go
       match: configs\[Etcd\] = Config{list\.GcEtcdRegistry, ""etcd"", ""\d+\.\d+.\d+(-(alpha|beta|rc).\d+)?(-\d+)?""}
 "
kubernetes/kubernetes,070d4c1846b98a144ba3ffcb2ce885280efca420,joshjms,2025-09-24T17:12:57Z,"bump etcd to v3.6.5

Signed-off-by: joshjms <joshjms1607@gmail.com>",cluster/gce/manifests/etcd.manifest,2,2,4,"@@ -18,7 +18,7 @@
     {
     ""name"": ""etcd-container"",
     {{security_context}}
-    ""image"": ""{{ pillar.get('etcd_docker_repository', 'registry.k8s.io/etcd') }}:{{ pillar.get('etcd_docker_tag', '3.6.4-0') }}"",
+    ""image"": ""{{ pillar.get('etcd_docker_repository', 'registry.k8s.io/etcd') }}:{{ pillar.get('etcd_docker_tag', '3.6.5-0') }}"",
     ""resources"": {
       ""requests"": {
         ""cpu"": {{ cpulimit }}
@@ -34,7 +34,7 @@
         ""value"": ""{{ pillar.get('storage_backend', 'etcd3') }}""
       },
       { ""name"": ""TARGET_VERSION"",
-        ""value"": ""{{ pillar.get('etcd_version', '3.6.4') }}""
+        ""value"": ""{{ pillar.get('etcd_version', '3.6.5') }}""
       },
       {
         ""name"": ""DO_NOT_MOVE_BINARIES"","
kubernetes/kubernetes,070d4c1846b98a144ba3ffcb2ce885280efca420,joshjms,2025-09-24T17:12:57Z,"bump etcd to v3.6.5

Signed-off-by: joshjms <joshjms1607@gmail.com>",cluster/gce/upgrade-aliases.sh,2,2,4,"@@ -170,8 +170,8 @@ export KUBE_GCE_ENABLE_IP_ALIASES=true
 export SECONDARY_RANGE_NAME=""pods-default""
 export STORAGE_BACKEND=""etcd3""
 export STORAGE_MEDIA_TYPE=""application/vnd.kubernetes.protobuf""
-export ETCD_IMAGE=3.6.4-0
-export ETCD_VERSION=3.6.4
+export ETCD_IMAGE=3.6.5-0
+export ETCD_VERSION=3.6.5
 
 # Upgrade master with updated kube envs
 ""${KUBE_ROOT}/cluster/gce/upgrade.sh"" -M -l"
kubernetes/kubernetes,070d4c1846b98a144ba3ffcb2ce885280efca420,joshjms,2025-09-24T17:12:57Z,"bump etcd to v3.6.5

Signed-off-by: joshjms <joshjms1607@gmail.com>",cmd/kubeadm/app/constants/constants.go,2,2,4,"@@ -326,7 +326,7 @@ const (
 	MinExternalEtcdVersion = ""3.5.21-0""
 
 	// DefaultEtcdVersion indicates the default etcd version that kubeadm uses
-	DefaultEtcdVersion = ""3.6.4-0""
+	DefaultEtcdVersion = ""3.6.5-0""
 
 	// Etcd defines variable used internally when referring to etcd component
 	Etcd = ""etcd""
@@ -501,7 +501,7 @@ var (
 		31: ""3.5.21-0"",
 		32: ""3.5.21-0"",
 		33: ""3.5.21-0"",
-		34: ""3.6.4-0"",
+		34: ""3.6.5-0"",
 	}
 
 	// KubeadmCertsClusterRoleName sets the name for the ClusterRole that allows"
kubernetes/kubernetes,070d4c1846b98a144ba3ffcb2ce885280efca420,joshjms,2025-09-24T17:12:57Z,"bump etcd to v3.6.5

Signed-off-by: joshjms <joshjms1607@gmail.com>",hack/lib/etcd.sh,1,1,2,"@@ -16,7 +16,7 @@
 
 # A set of helpers for starting/running etcd for tests
 
-ETCD_VERSION=${ETCD_VERSION:-3.6.4}
+ETCD_VERSION=${ETCD_VERSION:-3.6.5}
 ETCD_HOST=${ETCD_HOST:-127.0.0.1}
 ETCD_PORT=${ETCD_PORT:-2379}
 # This is intentionally not called ETCD_LOG_LEVEL:"
kubernetes/kubernetes,070d4c1846b98a144ba3ffcb2ce885280efca420,joshjms,2025-09-24T17:12:57Z,"bump etcd to v3.6.5

Signed-off-by: joshjms <joshjms1607@gmail.com>",staging/src/k8s.io/sample-apiserver/artifacts/example/deployment.yaml,1,1,2,"@@ -26,4 +26,4 @@ spec:
         imagePullPolicy: Never
         args: [ ""--etcd-servers=http://localhost:2379"" ]
       - name: etcd
-        image: gcr.io/etcd-development/etcd:v3.6.4
+        image: registry.k8s.io/etcd:v3.6.5"
kubernetes/kubernetes,070d4c1846b98a144ba3ffcb2ce885280efca420,joshjms,2025-09-24T17:12:57Z,"bump etcd to v3.6.5

Signed-off-by: joshjms <joshjms1607@gmail.com>",test/utils/image/manifest.go,1,1,2,"@@ -226,7 +226,7 @@ func initImageConfigs(list RegistryList) (map[ImageID]Config, map[ImageID]Config
 	configs[AppArmorLoader] = Config{list.PromoterE2eRegistry, ""apparmor-loader"", ""1.4""}
 	configs[BusyBox] = Config{list.PromoterE2eRegistry, ""busybox"", ""1.37.0-1""}
 	configs[DistrolessIptables] = Config{list.BuildImageRegistry, ""distroless-iptables"", ""v0.8.2""}
-	configs[Etcd] = Config{list.GcEtcdRegistry, ""etcd"", ""3.6.4-0""}
+	configs[Etcd] = Config{list.GcEtcdRegistry, ""etcd"", ""3.6.5-0""}
 	configs[InvalidRegistryImage] = Config{list.InvalidRegistry, ""alpine"", ""3.1""}
 	configs[IpcUtils] = Config{list.PromoterE2eRegistry, ""ipc-utils"", ""1.3""}
 	configs[JessieDnsutils] = Config{list.PromoterE2eRegistry, ""jessie-dnsutils"", ""1.7""}"
kubernetes/kubernetes,7c5967221374839e51e0f72b914ddc11fc24c8b6,Ania Borowiec,2025-09-26T12:05:52Z,"Fix in code and integration test that verifies that when victim pod is stuck in binding, preemptor pod remains waiting in unschedulable queue until deletion of the victim pod is completed",pkg/scheduler/framework/preemption/preemption.go,6,2,8,"@@ -184,8 +184,12 @@ func NewEvaluator(pluginName string, fh fwk.Handle, i Interface, enableAsyncPree
 			updated := apipod.UpdatePodCondition(newStatus, condition)
 			if updated {
 				if err := util.PatchPodStatus(ctx, ev.Handler.ClientSet(), victim.Name, victim.Namespace, &victim.Status, newStatus); err != nil {
-					logger.Error(err, ""Could not add DisruptionTarget condition due to preemption"", ""pod"", klog.KObj(victim), ""preemptor"", klog.KObj(preemptor))
-					return err
+					if !apierrors.IsNotFound(err) {
+						logger.Error(err, ""Could not add DisruptionTarget condition due to preemption"", ""preemptor"", klog.KObj(preemptor), ""victim"", klog.KObj(victim))
+						return err
+					}
+					logger.V(2).Info(""Victim Pod is already deleted"", ""preemptor"", klog.KObj(preemptor), ""victim"", klog.KObj(victim), ""node"", c.Name())
+					return nil
 				}
 			}
 			if err := util.DeletePod(ctx, ev.Handler.ClientSet(), victim); err != nil {"
kubernetes/kubernetes,7c5967221374839e51e0f72b914ddc11fc24c8b6,Ania Borowiec,2025-09-26T12:05:52Z,"Fix in code and integration test that verifies that when victim pod is stuck in binding, preemptor pod remains waiting in unschedulable queue until deletion of the victim pod is completed",test/integration/scheduler/preemption/preemption_test.go,189,13,202,"@@ -20,7 +20,9 @@ package preemption
 
 import (
 	""context""
+	""errors""
 	""fmt""
+	""strings""
 	""sync""
 	""testing""
 	""time""
@@ -41,6 +43,7 @@ import (
 	""k8s.io/kubernetes/pkg/scheduler/apis/config""
 	configtesting ""k8s.io/kubernetes/pkg/scheduler/apis/config/testing""
 	""k8s.io/kubernetes/pkg/scheduler/backend/queue""
+	""k8s.io/kubernetes/pkg/scheduler/framework/plugins/defaultbinder""
 	""k8s.io/kubernetes/pkg/scheduler/framework/plugins/defaultpreemption""
 	plfeature ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/feature""
 	""k8s.io/kubernetes/pkg/scheduler/framework/plugins/names""
@@ -478,6 +481,8 @@ func TestPreemption(t *testing.T) {
 }
 
 func TestAsyncPreemption(t *testing.T) {
+	const podBlockedInBindingName = ""pod-blocked-in-binding""
+
 	type createPod struct {
 		pod *v1.Pod
 		// count is the number of times the pod should be created by this action.
@@ -487,8 +492,9 @@ func TestAsyncPreemption(t *testing.T) {
 	}
 
 	type schedulePod struct {
-		podName       string
-		expectSuccess bool
+		podName             string
+		expectSuccess       bool
+		expectUnschedulable bool
 	}
 
 	type scenario struct {
@@ -512,6 +518,15 @@ func TestAsyncPreemption(t *testing.T) {
 		// You should give a Pod index representing the order of Pod creation.
 		// e.g., if you want to check the Pod created first in the test case, you should give 0.
 		podRunningPreemption *int
+		// activatePod moves the pod from unschedulable to active or backoff.
+		// The value is the name of the pod to activate.
+		activatePod string
+		// resumeBind resumes the binding operation that keeps the pod blocked.
+		// Note: The pod will only become blocked in the first place, if pod name matches string defined in podBlockedInBinding.
+		resumeBind bool
+		// verifyPodInUnschedulable waits for some time and confirms that the given pod is in the unschedulable pool.
+		// The value is the name of the checked pod.
+		verifyPodInUnschedulable string
 	}
 
 	tests := []struct {
@@ -539,7 +554,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the preemptor Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor"",
+						podName:             ""preemptor"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -582,7 +598,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the preemptor Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-high-priority"",
+						podName:             ""preemptor-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -604,7 +621,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the mid-priority Pod"",
 					schedulePod: &schedulePod{
-						podName: ""pod-mid-priority"",
+						podName:             ""pod-mid-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -622,7 +640,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the mid-priority Pod again"",
 					schedulePod: &schedulePod{
-						podName: ""pod-mid-priority"",
+						podName:             ""pod-mid-priority"",
+						expectUnschedulable: true,
 					},
 				},
 			},
@@ -646,7 +665,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the preemptor Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-high-priority"",
+						podName:             ""preemptor-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -668,7 +688,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the super-high-priority Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-super-high-priority"",
+						podName:             ""preemptor-super-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -700,7 +721,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the high-priority Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-high-priority"",
+						podName:             ""preemptor-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 			},
@@ -725,7 +747,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the preemptor Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-high-priority"",
+						podName:             ""preemptor-high-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -748,7 +771,8 @@ func TestAsyncPreemption(t *testing.T) {
 				{
 					name: ""schedule the mid-priority Pod"",
 					schedulePod: &schedulePod{
-						podName: ""preemptor-mid-priority"",
+						podName:             ""preemptor-mid-priority"",
+						expectUnschedulable: true,
 					},
 				},
 				{
@@ -784,6 +808,74 @@ func TestAsyncPreemption(t *testing.T) {
 				},
 			},
 		},
+		{
+			// This scenario verifies the fix for https://github.com/kubernetes/kubernetes/issues/134249
+			// Scenario reproduces the issue:
+			// Victim pod takes long in binding. Preemptor pod attempts preemption, goes to unschedulable, then gets activated by some unknown trigger.
+			// Preemptor pod is expected to go back to unschedulable queue and remain there until victim binding and preemption is completed.
+			name: ""victim blocked in binding, preemptor pod gets activated randomly and returns to unschedulable queue until victim is bound and deleted"",
+			scenarios: []scenario{
+				{
+					name: ""create victim Pod that is going to be blocked in binding"",
+					createPod: &createPod{
+						pod: st.MakePod().Name(podBlockedInBindingName).Req(map[v1.ResourceName]string{v1.ResourceCPU: ""2""}).Container(""image"").ZeroTerminationGracePeriod().Priority(1).Obj(),
+					},
+				},
+				{
+					name: ""schedule victim Pod"",
+					schedulePod: &schedulePod{
+						podName: podBlockedInBindingName,
+					},
+				},
+				{
+					name: ""create a preemptor Pod"",
+					createPod: &createPod{
+						pod: st.MakePod().Name(""preemptor"").Req(map[v1.ResourceName]string{v1.ResourceCPU: ""4""}).Container(""image"").Priority(100).Obj(),
+					},
+				},
+				{
+					name: ""schedule the preemptor Pod"",
+					schedulePod: &schedulePod{
+						podName:             ""preemptor"",
+						expectUnschedulable: true,
+					},
+				},
+				{
+					name:               ""complete the preemption API call"",
+					completePreemption: ""preemptor"",
+				},
+				{
+					name:        ""activate preemptor Pod, simulating a random event that activated it"",
+					activatePod: ""preemptor"",
+				},
+				{
+					name: ""schedule the preemptor Pod again and expect it to end up in unschedulable (waiting for preemption to finish)"",
+					schedulePod: &schedulePod{
+						podName:             ""preemptor"",
+						expectUnschedulable: true,
+					},
+				},
+				{
+					name:               ""complete the preemption API call"",
+					completePreemption: ""preemptor"",
+				},
+				{
+					name:                     ""check that preemptor remained in unschedulable queue"",
+					verifyPodInUnschedulable: ""preemptor"",
+				},
+				{
+					name:       ""resume binding of the blocked pod"",
+					resumeBind: true,
+				},
+				{
+					name: ""schedule the preemptor Pod after the completed binding and preemption of the blocked pod"",
+					schedulePod: &schedulePod{
+						podName:       ""preemptor"",
+						expectSuccess: true,
+					},
+				},
+			},
+		},
 	}
 
 	// All test cases have the same node.
@@ -840,16 +932,40 @@ func TestAsyncPreemption(t *testing.T) {
 				if err != nil {
 					t.Fatalf(""Error registering a filter: %v"", err)
 				}
+
+				// Register fake bind plugin that will block on binding for the specified pod name, until it receives a resume signal via the blockBindingChannel.
+				blockBindingChannel := make(chan struct{})
+				defer close(blockBindingChannel)
+				blockingBindPluginName := ""blockingBindPlugin""
+				err = registry.Register(blockingBindPluginName, func(ctx context.Context, o runtime.Object, fh fwk.Handle) (fwk.Plugin, error) {
+					db, err := defaultbinder.New(ctx, o, fh)
+					if err != nil {
+						t.Fatalf(""Error creating a default binder plugin: %v"", err)
+					}
+					var bindPlugin = blockingBindPlugin{
+						name:                blockingBindPluginName,
+						nameOfPodToBlock:    podBlockedInBindingName,
+						realPlugin:          db.(fwk.BindPlugin),
+						blockBindingChannel: blockBindingChannel,
+					}
+					return &bindPlugin, nil
+				})
+				if err != nil {
+					t.Fatalf(""Error registering a bind plugin: %v"", err)
+				}
+
 				cfg := configtesting.V1ToInternalWithDefaults(t, configv1.KubeSchedulerConfiguration{
 					Profiles: []configv1.KubeSchedulerProfile{{
 						SchedulerName: ptr.To(v1.DefaultSchedulerName),
 						Plugins: &configv1.Plugins{
 							MultiPoint: configv1.PluginSet{
 								Enabled: []configv1.Plugin{
+									{Name: blockingBindPluginName},
 									{Name: delayedPreemptionPluginName},
 								},
 								Disabled: []configv1.Plugin{
 									{Name: names.DefaultPreemption},
+									{Name: names.DefaultBinder},
 								},
 							},
 						},
@@ -937,15 +1053,23 @@ func TestAsyncPreemption(t *testing.T) {
 						preemptionDoneChannels[scenario.schedulePod.podName] = make(chan struct{})
 						lock.Unlock()
 						testCtx.Scheduler.ScheduleOne(testCtx.Ctx)
+
 						if scenario.schedulePod.expectSuccess {
 							if err := wait.PollUntilContextTimeout(testCtx.Ctx, 200*time.Millisecond, wait.ForeverTestTimeout, false, testutils.PodScheduled(cs, testCtx.NS.Name, scenario.schedulePod.podName)); err != nil {
 								t.Fatalf(""Expected the pod %s to be scheduled"", scenario.schedulePod.podName)
 							}
-						} else {
+						} else if scenario.schedulePod.expectUnschedulable {
 							if !podInUnschedulablePodPool(t, testCtx.Scheduler.SchedulingQueue, scenario.schedulePod.podName) {
-								t.Fatalf(""Expected the pod %s to be in the queue after the scheduling attempt"", scenario.schedulePod.podName)
+								t.Fatalf(""Expected the pod %s to be in the unschedulable queue after the scheduling attempt"", scenario.schedulePod.podName)
 							}
 						}
+					case scenario.activatePod != """":
+						pod := unschedulablePod(t, testCtx.Scheduler.SchedulingQueue, scenario.activatePod)
+						if pod == nil {
+							t.Fatalf(""Expected the pod %s to be in unschedulable queue before activation phase"", scenario.activatePod)
+						}
+						m := map[string]*v1.Pod{scenario.activatePod: pod}
+						testCtx.Scheduler.SchedulingQueue.Activate(logger, m)
 					case scenario.completePreemption != """":
 						lock.Lock()
 						if _, ok := preemptionDoneChannels[scenario.completePreemption]; !ok {
@@ -973,6 +1097,20 @@ func TestAsyncPreemption(t *testing.T) {
 						}); err != nil {
 							t.Fatalf(""Expected the pod %s to be running preemption"", createdPods[*scenario.podRunningPreemption].Name)
 						}
+					case scenario.resumeBind:
+						blockBindingChannel <- struct{}{}
+					case scenario.verifyPodInUnschedulable != """":
+						if err := wait.PollUntilContextTimeout(testCtx.Ctx, 50*time.Millisecond, 200*time.Millisecond, false, func(ctx context.Context) (bool, error) {
+							if !podInUnschedulablePodPool(t, testCtx.Scheduler.SchedulingQueue, scenario.verifyPodInUnschedulable) {
+								return false, fmt.Errorf(""expected the pod %s to remain in the unschedulable queue after the scheduling attempt"", scenario.verifyPodInUnschedulable)
+							}
+							// Continue polling to confirm that pod remains in unschedulable queue and does not get activated.
+							return false, nil
+						}); err != nil && !errors.Is(err, context.DeadlineExceeded) {
+							// If timeout was reached or context was cancelled without finding that vanished from unschedulable, it means the state is as expected.
+							// If a different error occurred, it means that the pod got unexpectedly activated, or something else went wrong.
+							t.Fatalf(""Error in scenario verifyPodInUnschedulable: %v"", err)
+						}
 					}
 				}
 			})
@@ -998,3 +1136,41 @@ func podInUnschedulablePodPool(t *testing.T, queue queue.SchedulingQueue, podNam
 	}
 	return false
 }
+
+// unschedulablePod checks if the given Pod is in the unschedulable queue and returns it.
+func unschedulablePod(t *testing.T, queue queue.SchedulingQueue, podName string) *v1.Pod {
+	t.Helper()
+	unschedPods := queue.UnschedulablePods()
+	for _, pod := range unschedPods {
+		if pod.Name == podName {
+			return pod
+		}
+	}
+	return nil
+}
+
+// blockingBindPlugin is a fake plugin that simulates a long binding operation.
+// Underneath it calls realPlugin.Bind(), after receiving a signal that binding can be unblocked.
+type blockingBindPlugin struct {
+	name                string
+	nameOfPodToBlock    string
+	realPlugin          fwk.BindPlugin
+	blockBindingChannel chan struct{}
+}
+
+func (bp *blockingBindPlugin) Name() string {
+	return bp.name
+}
+
+func (bp *blockingBindPlugin) Bind(ctx context.Context, state fwk.CycleState, p *v1.Pod, nodeName string) *fwk.Status {
+	if strings.Contains(p.Name, bp.nameOfPodToBlock) {
+		// block the bind goroutine to complete until the test case allows it to proceed.
+		select {
+		case <-bp.blockBindingChannel:
+		case <-ctx.Done():
+		}
+	}
+	return bp.realPlugin.Bind(ctx, state, p, nodeName)
+}
+
+var _ fwk.BindPlugin = &blockingBindPlugin{}"
kubernetes/kubernetes,e9f61ce511d0ffdbc33b76def09955d3fe3721aa,Aleksander Mistewicz,2025-09-10T09:54:20Z,"Move stats updates to getList

Signed-off-by: Aleksander Mistewicz <amistewicz@google.com>",staging/src/k8s.io/apiserver/pkg/storage/etcd3/store.go,21,21,42,"@@ -778,8 +778,6 @@ func (s *store) GetList(ctx context.Context, key string, opts storage.ListOption
 		metrics.RecordStorageListMetrics(s.groupResource, numFetched, numEvald, numReturn)
 	}()
 
-	stats := s.getResourceSizeEstimator()
-
 	aggregator := s.listErrAggrFactory()
 	for {
 		getResp, err = s.getList(ctx, keyPrefix, opts.Recursive, kubernetes.ListOptions{
@@ -819,9 +817,6 @@ func (s *store) GetList(ctx context.Context, key string, opts storage.ListOption
 		} else {
 			growSlice(v, 2048, len(getResp.Kvs))
 		}
-		if stats != nil {
-			stats.Update(getResp.Kvs)
-		}
 
 		// take items from the response until the bucket is full, filtering as we go
 		for i, kv := range getResp.Kvs {
@@ -903,26 +898,31 @@ func (s *store) GetList(ctx context.Context, key string, opts storage.ListOption
 	return s.versioner.UpdateList(listObj, uint64(withRev), continueValue, remainingItemCount)
 }
 
-func (s *store) getList(ctx context.Context, keyPrefix string, recursive bool, options kubernetes.ListOptions) (kubernetes.ListResponse, error) {
+func (s *store) getList(ctx context.Context, keyPrefix string, recursive bool, options kubernetes.ListOptions) (resp kubernetes.ListResponse, err error) {
 	startTime := time.Now()
 	if recursive {
-		resp, err := s.client.Kubernetes.List(ctx, keyPrefix, options)
+		resp, err = s.client.Kubernetes.List(ctx, keyPrefix, options)
 		metrics.RecordEtcdRequest(""list"", s.groupResource, err, startTime)
-		return resp, err
-	}
-	getResp, err := s.client.Kubernetes.Get(ctx, keyPrefix, kubernetes.GetOptions{
-		Revision: options.Revision,
-	})
-	metrics.RecordEtcdRequest(""get"", s.groupResource, err, startTime)
-	var resp kubernetes.ListResponse
-	if getResp.KV != nil {
-		resp.Kvs = []*mvccpb.KeyValue{getResp.KV}
-		resp.Count = 1
-		resp.Revision = getResp.Revision
 	} else {
-		resp.Kvs = []*mvccpb.KeyValue{}
-		resp.Count = 0
-		resp.Revision = getResp.Revision
+		var getResp kubernetes.GetResponse
+		getResp, err = s.client.Kubernetes.Get(ctx, keyPrefix, kubernetes.GetOptions{
+			Revision: options.Revision,
+		})
+		metrics.RecordEtcdRequest(""get"", s.groupResource, err, startTime)
+		if getResp.KV != nil {
+			resp.Kvs = []*mvccpb.KeyValue{getResp.KV}
+			resp.Count = 1
+			resp.Revision = getResp.Revision
+		} else {
+			resp.Kvs = []*mvccpb.KeyValue{}
+			resp.Count = 0
+			resp.Revision = getResp.Revision
+		}
+	}
+
+	stats := s.getResourceSizeEstimator()
+	if len(resp.Kvs) > 0 && stats != nil {
+		stats.Update(resp.Kvs)
 	}
 	return resp, err
 }"
kubernetes/kubernetes,aa38aeaca288996e2b29ca0642a663c27afbe45f,Kubernetes Prow Robot,2025-10-03T03:23:03Z,"Merge pull request #134390 from liggitt/metric-hidden-race

Use lock-free for unguarded isHidden/isDeprecated fields",staging/src/k8s.io/component-base/metrics/metric.go,10,9,19,"@@ -18,6 +18,7 @@ package metrics
 
 import (
 	""sync""
+	""sync/atomic""
 
 	""github.com/blang/semver/v4""
 	""github.com/prometheus/client_golang/prometheus""
@@ -65,8 +66,8 @@ with the kubeCollector itself as an argument.
 */
 type lazyMetric struct {
 	fqName              string
-	isDeprecated        bool
-	isHidden            bool
+	isDeprecated        atomic.Bool
+	isHidden            atomic.Bool
 	isCreated           bool
 	createLock          sync.RWMutex
 	markDeprecationOnce sync.Once
@@ -104,15 +105,15 @@ func (r *lazyMetric) preprocessMetric(currentVersion semver.Version) {
 	defer disabledMetricsLock.RUnlock()
 	// disabling metrics is higher in precedence than showing hidden metrics
 	if _, ok := disabledMetrics[r.fqName]; ok {
-		r.isHidden = true
+		r.isHidden.Store(true)
 		return
 	}
 	deprecatedVersion := r.self.DeprecatedVersion()
 	if deprecatedVersion == nil {
 		return
 	}
 	r.markDeprecationOnce.Do(func() {
-		r.isDeprecated = isDeprecated(currentVersion, *deprecatedVersion)
+		r.isDeprecated.Store(isDeprecated(currentVersion, *deprecatedVersion))
 
 		if shouldHide(r.stabilityLevel, &currentVersion, deprecatedVersion) {
 			if shouldShowHidden() {
@@ -121,17 +122,17 @@ func (r *lazyMetric) preprocessMetric(currentVersion semver.Version) {
 			}
 			// TODO(RainbowMango): Remove this log temporarily. https://github.com/kubernetes/kubernetes/issues/85369
 			// klog.Warningf(""This metric has been deprecated for more than one release, hiding."")
-			r.isHidden = true
+			r.isHidden.Store(true)
 		}
 	})
 }
 
 func (r *lazyMetric) IsHidden() bool {
-	return r.isHidden
+	return r.isHidden.Load()
 }
 
 func (r *lazyMetric) IsDeprecated() bool {
-	return r.isDeprecated
+	return r.isDeprecated.Load()
 }
 
 // Create forces the initialization of metric which has been deferred until
@@ -174,8 +175,8 @@ func (r *lazyMetric) ClearState() {
 	r.createLock.Lock()
 	defer r.createLock.Unlock()
 
-	r.isDeprecated = false
-	r.isHidden = false
+	r.isDeprecated.Store(false)
+	r.isHidden.Store(false)
 	r.isCreated = false
 	r.markDeprecationOnce = sync.Once{}
 	r.createOnce = sync.Once{}"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",go.mod,1,1,2,"@@ -118,6 +118,7 @@ require (
 	k8s.io/sample-apiserver v0.0.0
 	k8s.io/system-validators v1.11.1
 	k8s.io/utils v0.0.0-20250604170112-4c0f3b243397
+	sigs.k8s.io/json v0.0.0-20250730193827-2d320260d730
 	sigs.k8s.io/knftables v0.0.17
 	sigs.k8s.io/randfill v1.0.0
 	sigs.k8s.io/structured-merge-diff/v6 v6.3.0
@@ -217,7 +218,6 @@ require (
 	gopkg.in/yaml.v3 v3.0.1 // indirect
 	k8s.io/gengo/v2 v2.0.0-20250922181213-ec3ebc5fd46b // indirect
 	sigs.k8s.io/apiserver-network-proxy/konnectivity-client v0.31.2 // indirect
-	sigs.k8s.io/json v0.0.0-20250730193827-2d320260d730 // indirect
 	sigs.k8s.io/kustomize/api v0.20.1 // indirect
 	sigs.k8s.io/kustomize/kustomize/v5 v5.7.1 // indirect
 	sigs.k8s.io/kustomize/kyaml v0.20.1 // indirect"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/dra/dra.go,151,0,151,"@@ -52,6 +52,7 @@ import (
 	drautils ""k8s.io/kubernetes/test/e2e/dra/utils""
 	""k8s.io/kubernetes/test/e2e/feature""
 	""k8s.io/kubernetes/test/e2e/framework""
+	e2econformance ""k8s.io/kubernetes/test/e2e/framework/conformance""
 	e2edaemonset ""k8s.io/kubernetes/test/e2e/framework/daemonset""
 	e2eevents ""k8s.io/kubernetes/test/e2e/framework/events""
 	e2epod ""k8s.io/kubernetes/test/e2e/framework/pod""
@@ -77,6 +78,156 @@ var _ = framework.SIGDescribe(""node"")(framework.WithLabel(""DRA""), func() {
 	// modify /var/lib/kubelet/plugins.
 	f.NamespacePodSecurityLevel = admissionapi.LevelPrivileged
 
+	f.Context(""CRUD Tests"", func() {
+		/*
+		   Release: v1.?
+		   Testname: CRUD operations for deviceclasses
+		   Description: kube-apiserver must support create/update/list/patch/delete operations for resource.k8s.io/v1 DeviceClass.
+		*/
+		framework.It(""resource.k8s.io/v1 DeviceClass"", func(ctx context.Context) {
+			e2econformance.TestResource(ctx, f,
+				&e2econformance.ResourceTestcase[*resourceapi.DeviceClass]{
+					GVR:        resourceapi.SchemeGroupVersion.WithResource(""deviceclasses""),
+					Namespaced: ptr.To(false),
+					InitialSpec: &resourceapi.DeviceClass{
+						Spec: resourceapi.DeviceClassSpec{
+							Selectors: []resourceapi.DeviceSelector{{
+								CEL: &resourceapi.CELDeviceSelector{
+									Expression: ""false"", // Matches no devices
+								},
+							}},
+						},
+					},
+					UpdateSpec: func(obj *resourceapi.DeviceClass) *resourceapi.DeviceClass {
+						obj.Spec.Selectors[0].CEL.Expression = ""1 == 0"" // Still matches no devices.
+						return obj
+					},
+					StrategicMergePatchSpec: `{""spec"": {""selectors"": [{""cel"": {""expression"": ""1 == 0""}}]}}`,
+				},
+			)
+		})
+
+		/*
+		   Release: v1.?
+		   Testname: CRUD operations for resourceclaims
+		   Description: kube-apiserver must support create/update/list/patch/delete operations for resource.k8s.io/v1 ResourceClaim.
+		*/
+		framework.It(""resource.k8s.io/v1 ResourceClaim"", func(ctx context.Context) {
+			e2econformance.TestResource(ctx, f,
+				&e2econformance.ResourceTestcase[*resourceapi.ResourceClaim]{
+					GVR:        resourceapi.SchemeGroupVersion.WithResource(""resourceclaims""),
+					Namespaced: ptr.To(true),
+					InitialSpec: &resourceapi.ResourceClaim{
+						Spec: resourceapi.ResourceClaimSpec{
+							Devices: resourceapi.DeviceClaim{
+								Requests: []resourceapi.DeviceRequest{{
+									Name: ""req-0"",
+									Exactly: &resourceapi.ExactDeviceRequest{
+										DeviceClassName: ""dra.example.com"",
+									},
+								}},
+							},
+						},
+					},
+					UpdateSpec: func(obj *resourceapi.ResourceClaim) *resourceapi.ResourceClaim {
+						// The spec is immutable, so let's add a label instead.
+						if obj.Labels == nil {
+							obj.Labels = make(map[string]string)
+						}
+						obj.Labels[""test.dra.example.com""] = ""test""
+						return obj
+					},
+					UpdateStatus: func(obj *resourceapi.ResourceClaim) *resourceapi.ResourceClaim {
+						// Nothing allocated"" is a valid allocation result.
+						obj.Status.Allocation = &resourceapi.AllocationResult{}
+						return obj
+					},
+
+					// This test case uses all available patch types to demonstrate what this looks like
+					// and that TestResource supports them. Strategic merge patch, apply patch, and JSON
+					// merge patch are identical for these simple modifications.
+					//
+					// Testing with only one patch type would be sufficient for conformance.
+					ApplyPatchSpec:            `{""metadata"": {""labels"": {""test.dra.example.com"": ""test""}}}`,
+					StrategicMergePatchSpec:   `{""metadata"": {""labels"": {""test.dra.example.com"": ""test""}}}`,
+					JSONMergePatchSpec:        `{""metadata"": {""labels"": {""test.dra.example.com"": ""test""}}}`,
+					JSONPatchSpec:             `[{""op"": ""add"", ""path"": ""/metadata/labels/test.dra.example.com"", ""value"": ""test""}]`,
+					ApplyPatchStatus:          `{""status"": {""allocation"": {}}}`,
+					StrategicMergePatchStatus: `{""status"": {""allocation"": {}}}`,
+					JSONMergePatchStatus:      `{""status"": {""allocation"": {}}}`,
+					JSONPatchStatus:           `[{""op"": ""add"", ""path"": ""/status/allocation"", ""value"": {}}]`,
+				})
+		})
+
+		/*
+		   Release: v1.?
+		   Testname: CRUD operations for resourceclaimtemplates
+		   Description: kube-apiserver must support create/update/list/patch/delete operations for resource.k8s.io/v1 ResourceClaimTemplate.
+		*/
+		framework.It(""resource.k8s.io/v1 ResourceClaimTemplate"", func(ctx context.Context) {
+			e2econformance.TestResource(ctx, f,
+				&e2econformance.ResourceTestcase[*resourceapi.ResourceClaimTemplate]{
+					GVR:        resourceapi.SchemeGroupVersion.WithResource(""resourceclaimtemplates""),
+					Namespaced: ptr.To(true),
+					InitialSpec: &resourceapi.ResourceClaimTemplate{
+						Spec: resourceapi.ResourceClaimTemplateSpec{
+							Spec: resourceapi.ResourceClaimSpec{
+								Devices: resourceapi.DeviceClaim{
+									Requests: []resourceapi.DeviceRequest{{
+										Name: ""req-0"",
+										Exactly: &resourceapi.ExactDeviceRequest{
+											DeviceClassName: ""dra.example.com"",
+										},
+									}},
+								},
+							},
+						},
+					},
+					UpdateSpec: func(obj *resourceapi.ResourceClaimTemplate) *resourceapi.ResourceClaimTemplate {
+						// The spec is immutable, so let's add a label instead.
+						if obj.Labels == nil {
+							obj.Labels = make(map[string]string)
+						}
+						obj.Labels[""test.dra.example.com""] = ""test""
+						return obj
+					},
+					StrategicMergePatchSpec: `{""metadata"": {""labels"": {""test.dra.example.com"": ""test""}}}`,
+				},
+			)
+		})
+
+		/*
+		   Release: v1.?
+		   Testname: CRUD operations for resoureslices
+		   Description: kube-apiserver must support create/update/list/patch/delete operations for resource.k8s.io/v1 ResourceSlice.
+		*/
+		framework.It(""resource.k8s.io/v1 ResourceSlice"", func(ctx context.Context) {
+			e2econformance.TestResource(ctx, f,
+				&e2econformance.ResourceTestcase[*resourceapi.ResourceSlice]{
+					GVR:        resourceapi.SchemeGroupVersion.WithResource(""resourceslices""),
+					Namespaced: ptr.To(false),
+					InitialSpec: &resourceapi.ResourceSlice{
+						Spec: resourceapi.ResourceSliceSpec{
+							Driver: ""dra.example.com"",
+							Pool: resourceapi.ResourcePool{
+								Name:               ""cluster"",
+								Generation:         1,
+								ResourceSliceCount: 1,
+							},
+							NodeName: ptr.To(""no-such-node""),
+							// The pool is empty -> no devices.
+						},
+					},
+					UpdateSpec: func(obj *resourceapi.ResourceSlice) *resourceapi.ResourceSlice {
+						obj.Spec.Devices = []resourceapi.Device{{Name: ""device-0""}}
+						return obj
+					},
+					StrategicMergePatchSpec: `{""spec"": {""devices"": [{""name"": ""device-0""}]}}`,
+				},
+			)
+		})
+	})
+
 	f.Context(""kubelet"", feature.DynamicResourceAllocation, func() {
 		nodes := drautils.NewNodes(f, 1, 1)
 		driver := drautils.NewDriver(f, nodes, drautils.NetworkResources(10, false))"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/dra/utils/deploy.go,2,2,4,"@@ -149,7 +149,7 @@ func (nodes *Nodes) init(ctx context.Context, f *framework.Framework, minNodes,
 	claimInformer := cache.NewSharedIndexInformer(
 		&cache.ListWatch{
 			ListWithContextFunc: func(ctx context.Context, options metav1.ListOptions) (runtime.Object, error) {
-				slices, err := resourceClient.ResourceClaims("""").List(ctx, options)
+				slices, err := resourceClient.ResourceClaims(f.Namespace.Name).List(ctx, options)
 				if err == nil {
 					resourceClaimLogger.Info(""Listed ResourceClaims"", ""resourceAPI"", resourceClient.CurrentAPI(), ""numClaims"", len(slices.Items), ""listMeta"", slices.ListMeta)
 				} else {
@@ -158,7 +158,7 @@ func (nodes *Nodes) init(ctx context.Context, f *framework.Framework, minNodes,
 				return slices, err
 			},
 			WatchFuncWithContext: func(ctx context.Context, options metav1.ListOptions) (watch.Interface, error) {
-				w, err := resourceClient.ResourceClaims("""").Watch(ctx, options)
+				w, err := resourceClient.ResourceClaims(f.Namespace.Name).Watch(ctx, options)
 				if err == nil {
 					resourceClaimLogger.Info(""Started watching ResourceClaims"", ""resourceAPI"", resourceClient.CurrentAPI())
 					wrapper := newWatchWrapper(klog.LoggerWithName(resourceClaimLogger, fmt.Sprintf(""%d"", resourceClaimWatchCounter.Load())), w)"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/framework/conformance/.import-restrictions,12,0,12,"@@ -0,0 +1,12 @@
+# This E2E framework sub-package is currently allowed to use arbitrary
+# dependencies except of k/k/pkg, therefore we need to override the
+# restrictions from the parent .import-restrictions file.
+#
+# At some point it may become useful to also check this package's
+# dependencies more careful.
+rules:
+  - selectorRegexp: ""^k8s[.]io/kubernetes/pkg""
+    allowedPrefixes: []
+
+  - selectorRegexp: """"
+    allowedPrefixes: [ """" ]"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/framework/conformance/compare.go,99,0,99,"@@ -0,0 +1,99 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package architecture
+
+import (
+	""github.com/google/go-cmp/cmp""
+
+	""k8s.io/apimachinery/pkg/apis/meta/v1/unstructured""
+)
+
+// compareObjects checks that all expected fields are set as expected.
+// The actual object may have additional fields, their values are ignored.
+func compareObjects(expected, actual *unstructured.Unstructured) string {
+	diff := cmp.Diff(expected.Object, actual.Object,
+		// Fields which are not in the expected object can be ignored.
+		// Only existing fields need to be compared.
+		//
+		// A maybe (?) simpler approach would be to trim the actual object,
+		// then compare with go-cmp. The advantage of telling go-cmp to
+		// ignore fields is that they show up as truncated (""..."") in the diff,
+		// which is a bit more correct.
+		cmp.FilterPath(func(path cmp.Path) bool {
+			return fieldIsMissing(expected.Object, path)
+		}, cmp.Ignore()),
+	)
+	return diff
+}
+
+// fieldIsMissing returns true if the field identified by the path is not
+// present in the object. It works by recursively descending along the
+// path and checking the corresponding content of the object along the way.
+func fieldIsMissing(obj map[string]any, path cmp.Path) bool {
+	// First entry is a NOP.
+	missing := fieldIsMissingStep(obj, path[1:])
+	// Uncomment for debugging...
+	// fmt.Printf(""fieldIsMissing: %s %v\n"", path.GoString(), missing)
+	return missing
+}
+
+func fieldIsMissingStep(value any, path []cmp.PathStep) bool {
+	if len(path) == 0 {
+		// Done, full path was checked.
+		return false
+	}
+	// We only need to descend for certain lookup steps,
+	// everything else is treated as ""not missing"" and thus
+	// gets compared.
+	switch pathElement := path[0].(type) {
+	case cmp.MapIndex:
+		key := pathElement.Key().String()
+		value, ok := value.(map[string]any)
+		if !ok {
+			// Type mismatch.
+			return false
+		}
+		entry, found := value[key]
+		if !found {
+			return true
+		}
+		return fieldIsMissingStep(entry, path[1:])
+	case cmp.SliceIndex:
+		key := pathElement.Key()
+		value, ok := value.([]any)
+		if !ok {
+			// Type mismatch.
+			return false
+		}
+		if key < 0 {
+			// Not sure why go-cmp uses a negative index, so let's compare it.
+			return false
+		}
+		if key >= len(value) {
+			// Slice is smaller -> missing entry.
+			return true
+		}
+		entry := value[key]
+		return fieldIsMissingStep(entry, path[1:])
+	case cmp.TypeAssertion:
+		// Actual value type will be checked when needed,
+		// skip the assertion here.
+		return fieldIsMissingStep(value, path[1:])
+	default:
+		return false
+	}
+}"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/framework/conformance/compare_test.go,113,0,113,"@@ -0,0 +1,113 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package architecture
+
+import (
+	""testing""
+
+	""github.com/stretchr/testify/require""
+
+	""k8s.io/apimachinery/pkg/apis/meta/v1/unstructured""
+)
+
+func TestCompareObjects(t *testing.T) {
+	for name, tc := range map[string]struct {
+		expected, actual string
+		expectedDiff     string
+	}{
+		""equal"": {
+			expected: `{""kind"":""test"",""hello"":""world""}`,
+			actual:   `{""kind"":""test"",""hello"":""world""}`,
+		},
+
+		""missing"": {
+			expected: `{""kind"":""test"",""hello"":""world""}`,
+			actual:   `{""kind"":""test""}`,
+			expectedDiff: `  map[string]any{
+- 	""hello"": string(""world""),
+  	""kind"":  string(""test""),
+  }
+`,
+		},
+
+		""added"": {
+			expected: `{""kind"":""test"",""hello"":""world""}`,
+			actual:   `{""kind"":""test"",""hello"":""world"",""foo"":""bar""}`,
+		},
+
+		""replaced"": {
+			expected: `{""kind"":""test"",""hello"":""world""}`,
+			actual:   `{""kind"":""test"",""hello"":1}`,
+			expectedDiff: `  map[string]any{
+- 	""hello"": string(""world""),
++ 	""hello"": int64(1),
+  	""kind"":  string(""test""),
+  }
+`,
+		},
+
+		""recursive"": {
+			expected: `{""kind"":""test"",""spec"":{""hello"":""world"",""removed"":42}}`,
+			actual:   `{""kind"":""test"",""spec"":{""hello"":1,""added"":42}}`,
+			expectedDiff: `  map[string]any{
+  	""kind"": string(""test""),
+  	""spec"": map[string]any{
+  		... // 1 ignored entry
+- 		""hello"":   string(""world""),
++ 		""hello"":   int64(1),
+- 		""removed"": int64(42),
+  	},
+  }
+`,
+		},
+
+		""list"": {
+			expected: `{""kind"":""test"",""items"":[{""index"":0},{""hello"":""world"",""removed"":42}]}`,
+			actual:   `{""kind"":""test"",""items"":[{""index"":0,""added"":true},{""hello"":1,""added"":42},{""new-entry"": true},""new-non-object-entry""]}`,
+			expectedDiff: `  map[string]any{
+  	""items"": []any{
+  		map[string]any{""index"": int64(0), ...},
++ 		map[string]any{""added"": int64(42), ""hello"": int64(1)},
++ 		map[string]any{""new-entry"": bool(true)},
+- 		map[string]any{""hello"": string(""world""), ""removed"": int64(42)},
++ 		string(""new-non-object-entry""),
+  	},
+  	""kind"": string(""test""),
+  }`,
+		},
+	} {
+		t.Run(name, func(t *testing.T) {
+			var expected, actual unstructured.Unstructured
+			require.NoError(t, expected.UnmarshalJSON([]byte(tc.expected)), ""unmarshal expected"")
+			require.NoError(t, actual.UnmarshalJSON([]byte(tc.actual)), ""unmarshal actual"")
+			actualDiff := compareObjects(&expected, &actual)
+			t.Logf(""Actual diff:\n%s"", actualDiff)
+			// Upstream go-cmp does not want the diff output to be checked in
+			// tests because it is not stable. They intentionally randomly
+			// switch between space and non-break space to enforce that
+			// (https://github.com/google/go-cmp/issues/366).
+			//
+			// Therefore the expected diff is merely informative, we only check
+			// for empty vs. not empty.
+			if tc.expectedDiff == """" {
+				require.Empty(t, actualDiff)
+			} else {
+				require.NotEmpty(t, actualDiff)
+			}
+		})
+	}
+}"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/framework/conformance/conformance.go,946,0,946,"@@ -0,0 +1,946 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package architecture
+
+import (
+	""context""
+	""encoding/json""
+	""fmt""
+	""slices""
+	""time""
+
+	""github.com/onsi/ginkgo/v2""
+	""github.com/onsi/gomega""
+	gtypes ""github.com/onsi/gomega/types""
+
+	v1 ""k8s.io/api/core/v1""
+	apierrors ""k8s.io/apimachinery/pkg/api/errors""
+	""k8s.io/apimachinery/pkg/api/meta""
+	metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
+	""k8s.io/apimachinery/pkg/apis/meta/v1/unstructured""
+	""k8s.io/apimachinery/pkg/labels""
+	""k8s.io/apimachinery/pkg/runtime""
+	""k8s.io/apimachinery/pkg/runtime/schema""
+	""k8s.io/apimachinery/pkg/types""
+	""k8s.io/apimachinery/pkg/util/resourceversion""
+	""k8s.io/client-go/dynamic""
+	""k8s.io/client-go/dynamic/dynamicinformer""
+	""k8s.io/client-go/informers""
+	""k8s.io/client-go/rest""
+	""k8s.io/client-go/tools/cache""
+	""k8s.io/klog/v2""
+	apimachineryutils ""k8s.io/kubernetes/test/e2e/common/apimachinery""
+	""k8s.io/kubernetes/test/e2e/framework""
+	""k8s.io/kubernetes/test/utils/format""
+	""k8s.io/utils/ptr""
+	k8sjson ""sigs.k8s.io/json""
+)
+
+// ResourceTestcaseInterface describes how to test one particular API endpoint
+// by executing different operations against it.
+//
+// The content of created or patched objects is verified by ensuring that
+// all fields are set as in the sent object. Extra fields or map entries
+// are ignored.
+//
+// Basic create/read/update/delete (CRUD) semantic is covered, which
+// is the minimum that is required for conformance testing of a
+// GA feature. Actual functional testing is desirable, but not
+// required.
+//
+// See [ResourceTestcase] for an implementation of this interface
+// where test data is provided as Go objects and patch strings.
+type ResourceTestcaseInterface interface {
+	// GetGroupVersionResource returns the API group, version, and resource (plural form, lower case).
+	GetGroupVersionResource() schema.GroupVersionResource
+
+	// IsNamespaced defines whether the object must be created inside a namespace.
+	IsNamespaced() bool
+
+	// HasStatus defines whether the resource has a ""status"" sub-resource.
+	//
+	// Other sub-resources are not supported by this common test code.
+	HasStatus() bool
+
+	// VerifyContent defines whether the content of objects returned by
+	// the apiserver gets compared against the content that was sent.
+	//
+	// If enabled, all field values that were sent must also be included
+	// in the returned object. Additional fields and list or map entries
+	// may get added (for example, because of defaulting or mutating
+	// admission).
+	//
+	// This should not be enabled in conformance tests because admission
+	// is allowed to modify what is being stored.
+	VerifyContent() bool
+
+	// GetInitialObject returns the data which is going to be used in a Create call.
+	//
+	// For cluster-scoped resources the test namespace can be used
+	// to create a name which does not conflict with other objects
+	// because it is unique while the test runs.
+	//
+	// It does not need to be set for namespaced resources because the
+	// caller will ensure that. The caller cannot do that for the name because
+	// different resources have different rules for what names are valid
+	GetInitialObject(namespace string) *unstructured.Unstructured
+
+	// GetUpdateSpec modifies an existing object.
+	// It gets called for the result of creating the initial object.
+	//
+	// Ideally it should  change the spec (hence the name).
+	// If that is impossible, then adding some label is also okay.
+	// The goal is to add some fields that can be checked for
+	// after an Update.
+	//
+	// May modify and return the input object.
+	GetUpdateSpec(object *unstructured.Unstructured) *unstructured.Unstructured
+
+	// GetUpdateStatus modifies the status of an existing object.
+	// It gets called for the result of creating the initial object
+	// and then updating its spec.
+	//
+	// May modify and return the input object.
+	GetUpdateStatus(object *unstructured.Unstructured) *unstructured.Unstructured
+
+	// GetPatchSpec describes how to generate patches.
+	//
+	// Each patch is applied to the initial object by itself, without the other patches.
+	// An empty slice is valid and disables testing of patching. This may not be sufficient
+	// for full conformance testing of the resource.
+	//
+	// If content verification is enabled, then this must cause the same change as GetUpdateSpec
+	// because verification of the patch result uses the GetUpdateSpec result as reference.
+	GetPatchSpec() []Patch
+
+	// GetPatchStatus is like GetPatchSpec for the status.
+	//
+	// The initial object with the updated spec gets patched,
+	// so the result must match the result of GetUpdateStatus
+	// applied to GetInitialObject if content verification is
+	// enabled.
+	GetPatchStatus(object *unstructured.Unstructured) []Patch
+}
+
+// Patch contains the parameters for a Patch API call.
+//
+// The data must match an existing object.
+//
+// There's no retry loop because of conflicts, so the patch should not include
+// a check of the ResourceVersion. Checking the UID in the patch is encouraged to prevent
+// patching a replaced resource.
+type Patch struct {
+	GetData func(object *unstructured.Unstructured) []byte
+	Type    types.PatchType
+}
+
+// ResourceTestcase provides test data for testing operations for a resource.
+// Test data is based on the native Go type of the resource.
+// The template parameter must be a pointer to the native Go type.
+//
+// The data is used like this:
+// - create InitialSpec -> update with UpdateSpec -> update status with UpdateStatus
+// - create InitialSpec -> apply StrategicMergePatchSpec and compare against UpdateSpec -> apply StrategicMergePatchStatus and compare against UpdateStatus
+type ResourceTestcase[T runtime.Object] struct {
+	// GroupResourceVersion identifies the API group, version and resource (plural form, lower case)
+	// within that API which is to be tested.
+	GVR schema.GroupVersionResource
+
+	// Namespaced must be true if the resource must be created in a
+	// namespace, false if it is cluster-scoped. Leaving it unset is
+	// an error.
+	//
+	// Namespaced resources get created in the test namespace.
+	//
+	// The name of cluster-scoped resources gets extended with
+	// `-<test namespace name>` to make it unique.
+	Namespaced *bool
+
+	// ContentVerificationEnabled defines whether the content of objects returned by
+	// the apiserver gets compared against the content that was sent.
+	//
+	// If enabled, all field values that were sent must also be included
+	// in the returned object. Additional fields and list or map entries
+	// may get added (for example, because of defaulting or mutating
+	// admission).
+	//
+	// This should not be enabled in conformance tests because admission
+	// is allowed to modify what is being stored.
+	ContentVerificationEnabled bool
+
+	// InitialSpec must contain the initial state of a valid resource, without a status.
+	InitialSpec T
+
+	// UpdateSpec gets called for the created initial object
+	// and must update something, ideally the spec (hence the name).
+	// If that is not possible, then adding some label also works
+	// for the sake of testing an update.
+	//
+	// May modify and return the input object.
+	UpdateSpec func(T) T
+
+	// UpdateStatus gets called for the updated object
+	// and must add a status.
+	//
+	// May be nil if no status is supported.
+	//
+	// May modify and return the input object.
+	UpdateStatus func(T) T
+
+	// StrategicMergePatchSpec may modify fields in InitialSpec
+	// with a strategic merge patch
+	// (https://github.com/kubernetes/community/blob/master/contributors/devel/sig-api-machinery/strategic-merge-patch.md).
+	// Muse use JSON encoding.
+	//
+	// If content verification is enabled, then this must contain the same change as UpdateSpec
+	// because verification of the patch result uses UpdateSpec as reference.
+	StrategicMergePatchSpec string
+
+	// StrategicMergePatchStatus may add status fields
+	// with a strategic merge patch
+	// (https://github.com/kubernetes/community/blob/master/contributors/devel/sig-api-machinery/strategic-merge-patch.md)
+	// Must use JSON encoding.
+	//
+	// The initial object with the updated spec gets patched,
+	// so the result must match GetUpdateStatus
+	// applied to GetInitialObject if content verification is
+	// enabled.
+	//
+	// If empty, the status sub-resource is not getting tested.
+	// May contain the name, but that's not required.
+	StrategicMergePatchStatus string
+
+	// ApplyPatchSpec corresponds to StrategicMergePatchSpec,
+	// using the JSON encoding of a server-side-apply (SSA) patch
+	// (https://kubernetes.io/docs/reference/using-api/server-side-apply).
+	ApplyPatchSpec string
+
+	// ApplyPatchStatus corresponds to StrategicMergePatchStatus,
+	// using the JSON encoding of a server-side-apply (SSA) patch
+	// (https://kubernetes.io/docs/reference/using-api/server-side-apply).
+	ApplyPatchStatus string
+
+	// JSONPatchSpec corresponds to StrategicMergePatchSpec,
+	// using a JSON patch (https://tools.ietf.org/html/rfc6902).
+	JSONPatchSpec string
+
+	// JSONPatchStatus corresponds to StrategicMergePatchStatus,
+	// using a JSON patch (https://tools.ietf.org/html/rfc6902).
+	JSONPatchStatus string
+
+	// JSONMergePatchSpec corresponds to StrategicMergePatchSpec,
+	// using a JSON merge patch (https://tools.ietf.org/html/rfc7386).
+	JSONMergePatchSpec string
+
+	// JSONMergePatchStatus corresponds to StrategicMergePatchStatus,
+	// using a JSON merge patch (https://tools.ietf.org/html/rfc7386).
+	JSONMergePatchStatus string
+}
+
+var _ ResourceTestcaseInterface = &ResourceTestcase[*v1.Pod]{}
+
+func (tc *ResourceTestcase[T]) GetGroupVersionResource() schema.GroupVersionResource {
+	return tc.GVR
+}
+
+func (tc *ResourceTestcase[T]) IsNamespaced() bool {
+	if tc.Namespaced == nil {
+		framework.Fail(""Test case error: Namespaced must be set"")
+	}
+
+	return *tc.Namespaced
+}
+
+func (tc *ResourceTestcase[T]) HasStatus() bool {
+	return tc.UpdateStatus != nil
+}
+
+func (tc *ResourceTestcase[T]) VerifyContent() bool {
+	return tc.ContentVerificationEnabled
+}
+
+func (tc *ResourceTestcase[T]) GetInitialObject(namespace string) *unstructured.Unstructured {
+	object := tc.toUnstructured(""InitialSpec"", tc.InitialSpec)
+	if object.GetName() == """" {
+		object.SetName(""test"")
+	}
+	if !tc.IsNamespaced() {
+		object.SetName(object.GetName() + ""-"" + namespace)
+	}
+
+	return object
+}
+
+func (tc *ResourceTestcase[T]) GetUpdateSpec(in *unstructured.Unstructured) *unstructured.Unstructured {
+	out := tc.fromUnstructured(""existing object"", in)
+	out = tc.UpdateSpec(out)
+	return tc.toUnstructured(""updated object"", out)
+}
+
+func (tc *ResourceTestcase[T]) GetUpdateStatus(in *unstructured.Unstructured) *unstructured.Unstructured {
+	out := tc.fromUnstructured(""updated object"", in)
+	out = tc.UpdateStatus(out)
+	return tc.toUnstructured(""updated object with status"", out)
+}
+
+func (tc *ResourceTestcase[T]) GetPatchSpec() []Patch {
+	var patches []Patch
+
+	if tc.StrategicMergePatchSpec != """" {
+		patches = append(patches, Patch{
+			Type: types.StrategicMergePatchType,
+			GetData: func(existingObject *unstructured.Unstructured) []byte {
+				patch := tc.createPatchObject(""StrategicMergePatchSpec"", tc.StrategicMergePatchSpec, existingObject)
+
+				jsonData, err := patch.MarshalJSON()
+				framework.ExpectNoError(err, ""re-encode spec patch as JSON"")
+
+				return jsonData
+			},
+		})
+	}
+
+	if tc.ApplyPatchSpec != """" {
+		patches = append(patches, Patch{
+			Type: types.ApplyPatchType,
+			GetData: func(existingObject *unstructured.Unstructured) []byte {
+				patch := tc.createPatchObject(""ApplyPatchSpec"", tc.ApplyPatchSpec, existingObject)
+
+				jsonData, err := patch.MarshalJSON()
+				framework.ExpectNoError(err, ""re-encode spec patch as JSON"")
+
+				return jsonData
+			},
+		})
+	}
+
+	if tc.JSONMergePatchSpec != """" {
+		patches = append(patches, Patch{
+			Type: types.MergePatchType,
+			GetData: func(existingObject *unstructured.Unstructured) []byte {
+				patch := tc.createPatchObject(""JSONMergePatchSpec"", tc.JSONMergePatchSpec, existingObject)
+
+				jsonData, err := patch.MarshalJSON()
+				framework.ExpectNoError(err, ""re-encode spec patch as JSON"")
+
+				return jsonData
+			},
+		})
+	}
+
+	if tc.JSONPatchSpec != """" {
+		patches = append(patches, Patch{
+			Type: types.JSONPatchType,
+			GetData: func(existingObject *unstructured.Unstructured) []byte {
+				return []byte(tc.JSONPatchSpec)
+			},
+		})
+	}
+
+	return patches
+}
+
+func (tc *ResourceTestcase[T]) GetPatchStatus(object *unstructured.Unstructured) []Patch {
+	var patches []Patch
+
+	if tc.StrategicMergePatchStatus != """" {
+		patches = append(patches, Patch{
+			Type: types.StrategicMergePatchType,
+			GetData: func(existingObject *unstructured.Unstructured) []byte {
+				patch := tc.createPatchObject(""StrategicMergePatchStatus"", tc.StrategicMergePatchStatus, existingObject)
+
+				jsonData, err := patch.MarshalJSON()
+				framework.ExpectNoError(err, ""re-encode status patch as JSON"")
+
+				return jsonData
+			},
+		})
+	}
+
+	if tc.ApplyPatchStatus != """" {
+		patches = append(patches, Patch{
+			Type: types.ApplyPatchType,
+			GetData: func(existingObject *unstructured.Unstructured) []byte {
+				patch := tc.createPatchObject(""ApplyPatchStatus"", tc.ApplyPatchStatus, existingObject)
+
+				jsonData, err := patch.MarshalJSON()
+				framework.ExpectNoError(err, ""re-encode status patch as JSON"")
+
+				return jsonData
+			},
+		})
+	}
+
+	if tc.JSONMergePatchStatus != """" {
+		patches = append(patches, Patch{
+			Type: types.MergePatchType,
+			GetData: func(existingObject *unstructured.Unstructured) []byte {
+				patch := tc.createPatchObject(""JSONMergePatchStatus"", tc.JSONMergePatchStatus, existingObject)
+
+				jsonData, err := patch.MarshalJSON()
+				framework.ExpectNoError(err, ""re-encode status patch as JSON"")
+
+				return jsonData
+			},
+		})
+	}
+
+	if tc.JSONPatchStatus != """" {
+		patches = append(patches, Patch{
+			Type: types.JSONPatchType,
+			GetData: func(existingObject *unstructured.Unstructured) []byte {
+				return []byte(tc.JSONPatchStatus)
+			},
+		})
+	}
+
+	return patches
+}
+
+func (tc *ResourceTestcase[T]) toUnstructured(what string, in T) *unstructured.Unstructured {
+	data, err := json.Marshal(in)
+	framework.ExpectNoError(err, ""encode %s as JSON"", what)
+
+	out := tc.toUnstructuredFromJSON(what, data)
+
+	return out
+}
+
+func (tc *ResourceTestcase[T]) toUnstructuredFromJSON(what string, in []byte) *unstructured.Unstructured {
+	// UnmarshalCaseSensitivePreserveInts does not need kind (in contrast to unstructured.Unstructured.UnmarshalJSON)
+	// and matches the behavior of preserving ints that we get when receiving from the apiserver (in contrast to plain json.Unmarshal).
+	var out unstructured.Unstructured
+	err := k8sjson.UnmarshalCaseSensitivePreserveInts(in, &out.Object)
+	framework.ExpectNoError(err, ""decode %s from JSON"", what)
+
+	return &out
+
+}
+
+func (tc *ResourceTestcase[T]) fromUnstructured(what string, in *unstructured.Unstructured) T {
+	data, err := in.MarshalJSON()
+	framework.ExpectNoError(err, ""encode %s as JSON"", what)
+
+	var out T
+	err = k8sjson.UnmarshalCaseSensitivePreserveInts(data, &out)
+	framework.ExpectNoError(err, ""decode %s from JSON"", what)
+
+	return out
+
+}
+
+// createPatchObject parses JSON data and then copies namespace/name/uid/kind/apiVersion from the existing object
+// to make the patch complete. This works for strategic merge patches, apply patches and JSON merge patches.
+func (tc *ResourceTestcase[T]) createPatchObject(what string, data string, existingObject *unstructured.Unstructured) *unstructured.Unstructured {
+	object := tc.toUnstructuredFromJSON(what, []byte(data))
+	object.SetNamespace(existingObject.GetNamespace())
+	object.SetName(existingObject.GetName())
+	object.SetUID(existingObject.GetUID())
+	object.SetAPIVersion(existingObject.GetAPIVersion())
+	object.SetKind(existingObject.GetKind())
+	return object
+}
+
+// TestResource covers all the typical endpoints for a resource through
+// dynamic client calls.
+func TestResource(ctx context.Context, f *framework.Framework, tc ResourceTestcaseInterface) {
+	// Set up clients.
+	gvr := tc.GetGroupVersionResource()
+	gv := gvr.GroupVersion()
+	resource := gvr.Resource
+	resourceClient := f.DynamicClient.Resource(gvr)
+	var client dynamic.ResourceInterface
+	var resourceType string
+	if tc.IsNamespaced() {
+		client = resourceClient.Namespace(f.Namespace.Name)
+		resourceType = ""namespaced resource""
+	} else {
+		client = resourceClient
+		resourceType = ""cluster-scoped resource""
+	}
+	// e.g. `cluster-scoped resource ""deviceclasses""`
+	// gvr.String() is too long and includes a comma (""resource.k8s.io/v1, Resource=deviceclasses"").
+	resourceType = fmt.Sprintf(""%s %q"", resourceType, gvr.Resource)
+	config := dynamic.ConfigFor(f.ClientConfig())
+	httpClient, err := rest.HTTPClientFor(config)
+	framework.ExpectNoError(err, ""construct HTTP client"")
+	restClient, err := rest.UnversionedRESTClientForConfigAndClient(config, httpClient)
+	framework.ExpectNoError(err, ""construct REST client"")
+
+	// All objects get one label added by the test for List and DeleteCollection.
+	// The label must get added to all objects returned by ResourceTestcase
+	// because the implementation of that interface is unaware of the extra label.
+	labelName := ""e2e-test.kubernetes.io""
+	labelValue := f.UniqueName
+	listOptions := metav1.ListOptions{LabelSelector: labelName + ""="" + labelValue}
+	addLabel := func(obj *unstructured.Unstructured) *unstructured.Unstructured {
+		obj = obj.DeepCopy()
+		labels := obj.GetLabels()
+		if labels == nil {
+			labels = make(map[string]string)
+		}
+		labels[labelName] = labelValue
+		obj.SetLabels(labels)
+		return obj
+	}
+
+	// Prepare for Create, Get and List.
+	desiredInitialObject := addLabel(tc.GetInitialObject(f.Namespace.Name))
+	if tc.IsNamespaced() {
+		desiredInitialObject.SetNamespace(f.Namespace.Name)
+	}
+
+	getResource := func(ctx context.Context) (*unstructured.Unstructured, error) {
+		return client.Get(ctx, desiredInitialObject.GetName(), metav1.GetOptions{})
+	}
+	desiredUpdatedObject := tc.GetUpdateSpec(desiredInitialObject.DeepCopy())
+	var desiredUpdatedObjectWithStatus *unstructured.Unstructured
+	if tc.HasStatus() {
+		desiredUpdatedObjectWithStatus = addLabel(tc.GetUpdateStatus(desiredUpdatedObject))
+	}
+
+	// Get all resources in the API. The resulting list of resources must include what we are testing.
+	ginkgo.By(fmt.Sprintf(""Get %s"", gv))
+	path := ""/apis/"" + gv.String()
+	var api unstructured.Unstructured
+	err = restClient.
+		Get().
+		AbsPath(path).
+		Do(ctx).
+		Into(&api)
+	framework.ExpectNoError(err, ""get resource API"")
+	resources := api.Object[""resources""].([]any)
+	index := slices.IndexFunc(resources, func(entry any) bool {
+		return entry.(map[string]any)[""name""].(string) == resource
+	})
+	if index < 0 {
+		framework.Failf(""API for %s does not include entry for %s, got:\n%s"", gv, resource, format.Object(api, 1))
+	}
+
+	// Set up informers, optionally also in the namespace.
+	// After each step we check that the informers catch up
+	// and what events they received in the meantime.
+	// They get stopped through test context cancellation.
+	var resourceEvents, namespaceEvents eventRecorder
+	resourceInformer := dynamicinformer.NewFilteredDynamicInformer(f.DynamicClient, gvr, """", 0, nil, func(options *metav1.ListOptions) {
+		options.LabelSelector = listOptions.LabelSelector
+	})
+	_, err = resourceInformer.Informer().AddEventHandler(&resourceEvents)
+	framework.ExpectNoError(err, ""register resource event handler"")
+	listResource := func(_ context.Context) ([]runtime.Object, error) {
+		return resourceInformer.Lister().List(labels.Everything())
+	}
+	go resourceInformer.Informer().RunWithContext(ctx)
+	informersHaveSynced := []cache.InformerSynced{resourceInformer.Informer().HasSynced}
+	var namespaceInformer informers.GenericInformer
+	var listNamespace func(_ context.Context) ([]runtime.Object, error)
+	if tc.IsNamespaced() {
+		namespaceInformer = dynamicinformer.NewFilteredDynamicInformer(f.DynamicClient, gvr, f.Namespace.Name, 0, nil, func(options *metav1.ListOptions) {
+			options.LabelSelector = listOptions.LabelSelector
+		})
+		_, err = namespaceInformer.Informer().AddEventHandler(&namespaceEvents)
+		framework.ExpectNoError(err, ""register namespace event handler"")
+		listNamespace = func(_ context.Context) ([]runtime.Object, error) {
+			return namespaceInformer.Lister().List(labels.Everything())
+		}
+		go namespaceInformer.Informer().RunWithContext(ctx)
+		informersHaveSynced = append(informersHaveSynced, namespaceInformer.Informer().HasSynced)
+	}
+	if !cache.WaitForNamedCacheSyncWithContext(ctx, informersHaveSynced...) {
+		ginkgo.Fail(""informers should have synced and didn't"")
+	}
+
+	// matchObject generates a matcher which checks the result of a list operation
+	// against the expected object. Content verification is optional. Without it,
+	// only the namespace and name are checked.
+	matchObject := func(expectedObject *unstructured.Unstructured) gtypes.GomegaMatcher {
+		return &matchObjectList{expectedObject: expectedObject, verifyContent: tc.VerifyContent()}
+	}
+	gomega.Expect(listResource(ctx)).Should(matchObject(nil), ""initial list of resources from informer cache"")
+	gomega.Expect(resourceEvents.list()).To(gomega.HaveField(""Events"", gomega.BeEmpty()), ""no events from resource informer yet"")
+	if listNamespace != nil {
+		gomega.Expect(listNamespace(ctx)).Should(matchObject(nil), ""initial list of namespace from informer cache"")
+		gomega.Expect(resourceEvents.list()).To(gomega.HaveField(""Events"", gomega.BeEmpty()), ""no events from namespace informer yet"")
+	}
+
+	// matchEvents generates a matcher which checks the informer event list.
+	//
+	// The events are expected to involve only the given object.
+	// The ResourceVersion must not decrease.
+	// The sequence of valid events is given as a regular expression
+	// which is applied to the string returned by [EventList.Types].
+	matchEvents := func(obj *unstructured.Unstructured, regexp string) gtypes.GomegaMatcher {
+		// Verify namespace/name/uid of ids event.
+		ids := gomega.HaveField(""Events"", gomega.Or(gomega.BeEmpty(), gomega.HaveEach(gomega.HaveField(""ID()"", gomega.Equal(fmt.Sprintf(""%s, %s"", klog.KObj(obj), obj.GetUID()))))))
+
+		// Match the regexp against the result of Types().
+		order := gomega.HaveField(""Types()"", gomega.MatchRegexp(regexp))
+
+		// Include full object dump, HaveField itself doesn't.
+		return framework.GomegaObject(gomega.And(ids, order))
+	}
+
+	// ResourceVersion must not decrease. Delete events reset the sequence.
+	var resourceRV, namespaceRV string
+	nextEvents := func(rv *string, events eventList) {
+		ginkgo.GinkgoHelper()
+
+		checkNext := func(obj any) {
+			ginkgo.GinkgoHelper()
+			if obj == nil {
+				return
+			}
+			if tomb, ok := obj.(cache.DeletedFinalStateUnknown); ok {
+				obj = tomb.Obj
+			}
+			metaData, err := meta.Accessor(obj)
+			framework.ExpectNoError(err, ""access meta data"")
+			gomega.Expect(metaData).To(apimachineryutils.HaveValidResourceVersion())
+
+			nextRV := metaData.GetResourceVersion()
+			if *rv == """" {
+				// Nothing to compare yet, initial version.
+				*rv = nextRV
+				return
+			}
+
+			cmpResult, err := resourceversion.CompareResourceVersion(nextRV, *rv)
+			framework.ExpectNoError(err, ""compare ResourceVersions"")
+			if cmpResult < 0 {
+				framework.Failf(""ResourceVersion %s in %s with UID %s is smaller than previous %s, should be equal or larger"", nextRV, klog.KObj(metaData), metaData.GetUID(), *rv)
+			}
+			*rv = nextRV
+		}
+
+		for _, e := range events.Events {
+			checkNext(e.oldObj)
+			checkNext(e.newObj)
+		}
+	}
+
+	// Verification of the result after each step (= what).
+	//
+	// Can check the content of an object or be limited to just name/namespace.
+	//
+	// Also checks the informers. This is a bit redundant after read-only steps,
+	// but then it's also fast and thus can be done more often than strictly necessary.
+	// Collected informer events get reset, so each verify call must match
+	// events since the previous one.
+	verify := func(what string, expected, actual *unstructured.Unstructured, haveExpectedEvents gtypes.GomegaMatcher) {
+		ginkgo.GinkgoHelper()
+
+		// This captures several different failures before handing them to Ginkgo.
+		var failures gomegaFailures
+
+		if expected != nil {
+			if tc.VerifyContent() {
+				diff := compareObjects(expected, actual)
+				failures.Add(fmt.Sprintf(""%s: unexpected actual object (- expected, + actual):\n%s"", what, diff))
+			} else {
+				failures.G().Expect(actual.GetName()).Should(gomega.Equal(expected.GetName()), ""%s: name in returned object"", what)
+				failures.G().Expect(actual.GetNamespace()).Should(gomega.Equal(expected.GetNamespace()), ""%s: namespace in returned object"", what)
+			}
+			failures.G().Expect(actual).To(apimachineryutils.HaveValidResourceVersion())
+		}
+
+		// Abort checking now if there were failures, otherwise we just risk timining out slowly.
+		failures.Check()
+
+		failures.G().Eventually(ctx, listResource).Should(matchObject(expected), ""list of resources from informer cache after %s"", what)
+		if haveExpectedEvents != nil {
+			// Even if the cache is up-to-date we still need to wait for event delivery.
+			failures.G().Eventually(resourceEvents.list).
+				WithTimeout(5*time.Second).
+				Should(haveExpectedEvents, ""list of resource informer events after %s"", what)
+		}
+		nextEvents(&resourceRV, resourceEvents.reset())
+		if listNamespace != nil {
+			failures.G().Eventually(ctx, listNamespace).Should(matchObject(expected), ""list of namespace from informer cache after %s"", what)
+			if haveExpectedEvents != nil {
+				failures.G().Eventually(namespaceEvents.list).
+					WithTimeout(5*time.Second).
+					Should(haveExpectedEvents, ""list of namespace informer events after %s"", what)
+			}
+			nextEvents(&namespaceRV, namespaceEvents.reset())
+		}
+		failures.Check()
+	}
+
+	// Create the initial resource.
+	ginkgo.By(fmt.Sprintf(""Creating:\n%s"", format.Object(desiredInitialObject, 1)))
+	existingObject, err := client.Create(ctx, desiredInitialObject, metav1.CreateOptions{FieldValidation: ""Strict""})
+	framework.ExpectNoError(err, ""create initial %s"", resourceType)
+	ginkgo.DeferCleanup(func(ctx context.Context) {
+		// Always clean up.
+		err = client.Delete(ctx, desiredInitialObject.GetName(), metav1.DeleteOptions{})
+		if apierrors.IsNotFound(err) {
+			return
+		}
+		framework.ExpectNoError(err, ""delete %s"", resourceType)
+		ensureNotFound(ctx, getResource)
+	})
+	verify(""create"", desiredInitialObject, existingObject,
+		// Initial creation of the object followed by some optional updates by cluster components.
+		matchEvents(existingObject, ""^add,(update,)*$""),
+	)
+	createdResourceVersion := existingObject.GetResourceVersion()
+
+	// Get to check for existence.
+	ginkgo.By(fmt.Sprintf(""Getting %s"", klog.KObj(desiredInitialObject)))
+	existingObject, err = client.Get(ctx, desiredInitialObject.GetName(), metav1.GetOptions{})
+	framework.ExpectNoError(err, ""get updated %s"", resourceType)
+	verify(""get"", desiredInitialObject, existingObject,
+		// Optional updates by cluster components.
+		matchEvents(existingObject, ""^(update,)*$""),
+	)
+
+	// Update the resource. Retry because the existing object might have been updated in the meantime.
+	mustGet := false
+	gomega.Eventually(ctx, func(ctx context.Context) error {
+		if mustGet {
+			ginkgo.By(fmt.Sprintf(""Getting updated %s"", klog.KObj(desiredInitialObject)))
+			existingObject, err = getResource(ctx)
+			if err != nil {
+				return fmt.Errorf(""get existing %s: %w"", resourceType, err)
+			}
+		}
+		object := tc.GetUpdateSpec(existingObject.DeepCopy())
+		ginkgo.By(fmt.Sprintf(""Updating:\n%s"", format.Object(object, 1)))
+		existingObject, err = client.Update(ctx, object, metav1.UpdateOptions{})
+		if err == nil {
+			return nil
+		}
+		mustGet = apierrors.IsConflict(err)
+		if mustGet {
+			// Retry immediately.
+			return fmt.Errorf(""update %s: %w"", resourceType, err)
+		}
+		if retry, retryAfter := framework.ShouldRetry(err); retry {
+			// Retry with a delay.
+			return gomega.TryAgainAfter(retryAfter)
+		}
+		// Give up, some other error occurred.
+		return gomega.StopTrying(fmt.Sprintf(""update %s"", resourceType)).Wrap(err)
+	}).Should(gomega.Succeed())
+	verify(""update"", desiredUpdatedObject, existingObject,
+		// At least one update.
+		matchEvents(existingObject, ""^(update,)+$""),
+	)
+	updatedResourceVersion := existingObject.GetResourceVersion()
+	cmpResult, err := resourceversion.CompareResourceVersion(createdResourceVersion, updatedResourceVersion)
+	framework.ExpectNoError(err, ""compare ResourceVersion after create against ResourceVersion after update"")
+	if cmpResult >= 0 {
+		framework.Failf(""ResourceVersion should have increased during update and didn't (before: %s, after: %s)"", createdResourceVersion, updatedResourceVersion)
+	}
+
+	// Same for the status. In addition, read the status (same result, but different endpoint+method).
+	if tc.HasStatus() {
+		mustGet := false
+		gomega.Eventually(ctx, func(ctx context.Context) error {
+			if mustGet {
+				ginkgo.By(fmt.Sprintf(""Getting updated %s"", klog.KObj(desiredInitialObject)))
+				existingObject, err = client.Get(ctx, desiredInitialObject.GetName(), metav1.GetOptions{}, ""status"")
+				if err != nil {
+					return fmt.Errorf(""get existing %s: %w"", resourceType, err)
+				}
+			}
+			object := tc.GetUpdateStatus(existingObject)
+			ginkgo.By(fmt.Sprintf(""Updating status:\n%s"", format.Object(object, 1)))
+			existingObject, err = client.Update(ctx, object, metav1.UpdateOptions{}, ""status"")
+			if err == nil {
+				return nil
+			}
+			mustGet = apierrors.IsConflict(err)
+			if mustGet {
+				// Retry immediately.
+				return fmt.Errorf(""update %s status: %w"", resourceType, err)
+			}
+			if retry, retryAfter := framework.ShouldRetry(err); retry {
+				// Retry with a delay.
+				return gomega.TryAgainAfter(retryAfter)
+			}
+			// Give up, some other error occurred.
+			return gomega.StopTrying(fmt.Sprintf(""update %s status"", resourceType)).Wrap(err)
+		}).Should(gomega.Succeed())
+		verify(""update status"", desiredUpdatedObjectWithStatus, existingObject,
+			// At least one update.
+			matchEvents(existingObject, ""^(update,)+$""),
+		)
+
+		ginkgo.By(fmt.Sprintf(""Getting %s status"", klog.KObj(desiredInitialObject)))
+		existingObject, err = client.Get(ctx, desiredInitialObject.GetName(), metav1.GetOptions{}, ""status"")
+		framework.ExpectNoError(err, ""get updated %s"", resourceType)
+		verify(""get"", desiredUpdatedObjectWithStatus, existingObject,
+			// Optional updates by cluster components.
+			matchEvents(existingObject, ""^(update,)*$""),
+		)
+	}
+
+	// Patch the resource, potentially using multiple different patch types.
+	// The result must be the same each time if content verification is enabled.
+	for _, patch := range tc.GetPatchSpec() {
+		// Delete the resource to start anew.
+		ginkgo.By(fmt.Sprintf(""Deleting %s"", klog.KObj(desiredInitialObject)))
+		err = client.Delete(ctx, desiredInitialObject.GetName(), metav1.DeleteOptions{})
+		framework.ExpectNoError(err, ""delete updated %s"", resourceType)
+		ensureNotFound(ctx, getResource)
+		verify(""delete"", nil, nil,
+			// Optional updates, deletion.
+			//
+			// We have to verify this here because
+			// otherwise we have no guarantee that we see the delete event.
+			matchEvents(existingObject, ""^(update,)*delete,$""),
+		)
+
+		// Recreate for patching.
+		ginkgo.By(fmt.Sprintf(""Creating again:\n%s"", format.Object(desiredInitialObject, 1)))
+		existingObject, err = client.Create(ctx, desiredInitialObject, metav1.CreateOptions{})
+		framework.ExpectNoError(err, ""create %s again"", resourceType)
+		patchData := patch.GetData(existingObject)
+
+		ginkgo.By(fmt.Sprintf(""Patching with %s:\n%s"", patch.Type, string(patchData)))
+		options := metav1.PatchOptions{FieldValidation: ""Strict""}
+		switch patch.Type {
+		case types.ApplyYAMLPatchType, types.ApplyCBORPatchType:
+			options.FieldManager = ""test-apply""
+			options.Force = ptr.To(true)
+		}
+		existingObject, err = client.Patch(ctx, desiredInitialObject.GetName(), patch.Type, patchData, options)
+		framework.ExpectNoError(err, ""patch %s %s"", patch.Type, resourceType)
+		verify(fmt.Sprintf(""patch %s"", patch.Type), desiredUpdatedObject, existingObject,
+			// Recreation and then at least one update.
+			matchEvents(existingObject, ""^add,(update,)+$""),
+		)
+	}
+
+	// Same for status. The patches apply on top of the updated object.
+	for _, patch := range tc.GetPatchStatus(existingObject) {
+		// Delete the resource to start anew.
+		ginkgo.By(fmt.Sprintf(""Deleting %s"", klog.KObj(desiredInitialObject)))
+		err = client.Delete(ctx, desiredInitialObject.GetName(), metav1.DeleteOptions{})
+		framework.ExpectNoError(err, ""delete updated %s"", resourceType)
+		ensureNotFound(ctx, getResource)
+		verify(""delete"", nil, nil,
+			// Optional updates, deletion.
+			//
+			// We have to verify this here because
+			// otherwise we have no guarantee that we see the delete event.
+			matchEvents(existingObject, ""^(update,)*delete,$""),
+		)
+
+		// Recreate for patching.
+		ginkgo.By(fmt.Sprintf(""Creating again:\n%s"", format.Object(desiredInitialObject, 1)))
+		existingObject, err = client.Create(ctx, desiredInitialObject, metav1.CreateOptions{})
+		framework.ExpectNoError(err, ""create %s again"", resourceType)
+
+		// Update again.
+		mustGet := false
+		gomega.Eventually(ctx, func(ctx context.Context) error {
+			if mustGet {
+				ginkgo.By(fmt.Sprintf(""Getting updated %s"", klog.KObj(desiredInitialObject)))
+				existingObject, err = getResource(ctx)
+				if err != nil {
+					return fmt.Errorf(""get existing %s: %w"", resourceType, err)
+				}
+			}
+			object := tc.GetUpdateSpec(existingObject.DeepCopy())
+			ginkgo.By(fmt.Sprintf(""Updating:\n%s"", format.Object(object, 1)))
+			existingObject, err = client.Update(ctx, object, metav1.UpdateOptions{})
+			if err == nil {
+				return nil
+			}
+			mustGet = apierrors.IsConflict(err)
+			if mustGet {
+				// Retry immediately.
+				return fmt.Errorf(""update %s: %w"", resourceType, err)
+			}
+			if retry, retryAfter := framework.ShouldRetry(err); retry {
+				// Retry with a delay.
+				return gomega.TryAgainAfter(retryAfter)
+			}
+			// Give up, some other error occurred.
+			return gomega.StopTrying(fmt.Sprintf(""update %s"", resourceType)).Wrap(err)
+		}).Should(gomega.Succeed())
+		patchData := patch.GetData(existingObject)
+
+		ginkgo.By(fmt.Sprintf(""Patching status with %s:\n%s"", patch.Type, string(patchData)))
+		options := metav1.PatchOptions{FieldValidation: ""Strict""}
+		switch patch.Type {
+		case types.ApplyYAMLPatchType, types.ApplyCBORPatchType:
+			options.FieldManager = ""test-apply""
+			options.Force = ptr.To(true)
+		}
+		existingObject, err = client.Patch(ctx, desiredInitialObject.GetName(), patch.Type, patchData, options, ""status"")
+		framework.ExpectNoError(err, ""patch %s %s status"", patch.Type, resourceType)
+		verify(fmt.Sprintf(""patch %s status"", patch.Type), desiredUpdatedObject, existingObject,
+			// Recreation and then at least one update.
+			matchEvents(existingObject, ""^add,(update,)+$""),
+		)
+	}
+
+	// Use the label as selector in List and DeleteCollection calls.
+	ginkgo.By(fmt.Sprintf(""Listing %s collection with label selector %s"", gvr, listOptions.LabelSelector))
+	items, err := client.List(ctx, listOptions)
+	framework.ExpectNoError(err, ""list %s"", resourceType)
+	gomega.Expect(items.Items).Should(gomega.HaveLen(1), ""Should have listed exactly the test resource."")
+	verify(""list"", desiredUpdatedObject, &items.Items[0],
+		// Optional updates by cluster components.
+		matchEvents(existingObject, ""^(update,)*$""),
+	)
+
+	if tc.IsNamespaced() {
+		ginkgo.By(fmt.Sprintf(""Listing %s without namespace and with label selector %s"", gvr, listOptions.LabelSelector))
+		items, err := resourceClient.List(ctx, listOptions)
+		framework.ExpectNoError(err, ""list %s in all namespaces"", resourceType)
+		gomega.Expect(items.Items).Should(gomega.HaveLen(1), ""Should have listed exactly the test resource in all namespaces."")
+		verify(""list all namespaces"", desiredUpdatedObject, &items.Items[0],
+			// Optional updates by cluster components.
+			matchEvents(existingObject, ""^(update,)*$""),
+		)
+	}
+
+	ginkgo.By(fmt.Sprintf(""Deleting %s collection with label selector %s"", gvr, listOptions.LabelSelector))
+	err = client.DeleteCollection(ctx, metav1.DeleteOptions{}, listOptions)
+	framework.ExpectNoError(err, ""delete collection of %s"", resourceType)
+	ensureNotFound(ctx, getResource)
+	verify(""list"", nil, nil,
+		// Optional updates by cluster components, then deletion.
+		matchEvents(existingObject, ""^(update,)*delete,$""),
+	)
+}
+
+// ensureNotFound ensures that the error returned by the get function is NotFound.
+// This can be called after deleting an object to ensure that it really got removed
+// and not just marked for deletion with a DeletionTimestamp. Deletion is not
+// necessarily instantaneous e.g. because some cluster component might add its
+// own finalizer.
+func ensureNotFound(ctx context.Context, get func(context.Context) (*unstructured.Unstructured, error)) {
+	ginkgo.GinkgoHelper()
+	ginkgo.By(""Checking for existence"")
+	gomega.Eventually(ctx, func(ctx context.Context) error {
+		obj, err := framework.HandleRetry(get)(ctx)
+		switch {
+		case apierrors.IsNotFound(err):
+			return nil
+		case err != nil:
+			return fmt.Errorf(""unexpected error after GET: %w"", err)
+		default:
+			return fmt.Errorf(""resource not removed yet:\n%s"", format.Object(obj, 1))
+		}
+	}).WithTimeout(30 * time.Second /* From prior conformance tests, e.g. https://github.com/kubernetes/kubernetes/blame/be361a18dda0f2fab1f5e25f8067a9ed43fc3b89/test/e2e/storage/storageclass.go#L152 */).
+		Should(gomega.Succeed())
+}"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/framework/conformance/failures.go,60,0,60,"@@ -0,0 +1,60 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package architecture
+
+import (
+	""fmt""
+	""strings""
+
+	""github.com/onsi/ginkgo/v2""
+	""github.com/onsi/gomega""
+	gtypes ""github.com/onsi/gomega/types""
+)
+
+type gomegaFailures struct {
+	failures []string
+}
+
+var _ gtypes.GomegaTestingT = &gomegaFailures{}
+
+// Helper implements [gtyppes.GomegaTestingT].
+func (g *gomegaFailures) Helper() {}
+
+// Fatalf implements [gtypes.GomegaTestingT].
+func (g *gomegaFailures) Fatalf(format string, args ...any) {
+	g.Add(fmt.Sprintf(format, args...))
+}
+
+// Adds one failure.
+func (g *gomegaFailures) Add(failure string) {
+	if !strings.HasSuffix(failure, ""\n"") {
+		failure += ""\n""
+	}
+	g.failures = append(g.failures, failure)
+}
+
+// Check fails via [ginkgo.Fail] if there were any failures.
+func (g *gomegaFailures) Check() {
+	if len(g.failures) > 0 {
+		ginkgo.GinkgoHelper()
+		ginkgo.Fail(strings.Join(g.failures, ""\n\n""))
+	}
+}
+
+func (g *gomegaFailures) G() *gomega.WithT {
+	return gomega.NewWithT(g)
+}"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/framework/conformance/informerevents.go,167,0,167,"@@ -0,0 +1,167 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package architecture
+
+import (
+	""fmt""
+	""slices""
+	""strings""
+	""sync""
+
+	""k8s.io/apimachinery/pkg/api/meta""
+	""k8s.io/client-go/tools/cache""
+	""k8s.io/klog/v2""
+)
+
+// eventRecorder implements [cache.ResourceEventHandler] by recording all events.
+// It is thread-safe.
+type eventRecorder struct {
+	mutex  sync.Mutex
+	events []event
+}
+
+// event describes one add/update/delete event.
+// They can be distinguished based on which object(s) are set.
+// Delete events may contain a tombstone instead of the actual
+// deleted object.
+type event struct {
+	oldObj, newObj any
+	isInitialList  bool
+}
+
+func (e event) Type() string {
+	switch {
+	case e.oldObj == nil:
+		return ""add""
+	case e.newObj == nil:
+		return ""delete""
+	case e.oldObj != nil && e.newObj != nil:
+		return ""update""
+	default:
+		return ""null""
+	}
+}
+
+// ID returns ""[namespace/]name, uid"" for the object
+// described in the event. If for whatever reason
+// that is different for the old and new event (an error!),
+// it returns both strings separated by semicolon.
+// If meta data access is not possible, the error string is returned.
+//
+// This is meant to be used with gomega.HaveEach and a matcher
+// which checks for the expected ID.
+func (e event) ID() string {
+	oldID := id(e.oldObj)
+	newID := id(e.newObj)
+	if oldID == newID {
+		return newID
+	}
+	if oldID != """" && newID != """" {
+		return oldID + ""; "" + newID
+	}
+	if newID != """" {
+		return newID
+	}
+	return oldID
+}
+
+func id(obj any) string {
+	if obj == nil {
+		return """"
+	}
+	if tomb, ok := obj.(cache.DeletedFinalStateUnknown); ok {
+		obj = tomb.Obj
+	}
+	metaData, err := meta.Accessor(obj)
+	if err != nil {
+		return err.Error()
+	}
+	return fmt.Sprintf(""%s, %s"", klog.KObj(metaData).String(), metaData.GetUID())
+}
+
+var _ cache.ResourceEventHandler = &eventRecorder{}
+
+func (er *eventRecorder) OnAdd(obj any, isInitialList bool) {
+	er.mutex.Lock()
+	defer er.mutex.Unlock()
+
+	er.events = append(er.events, event{
+		newObj:        obj,
+		isInitialList: isInitialList,
+	})
+}
+
+func (er *eventRecorder) OnUpdate(oldObj, newObj any) {
+	er.mutex.Lock()
+	defer er.mutex.Unlock()
+
+	er.events = append(er.events, event{
+		oldObj: oldObj,
+		newObj: newObj,
+	})
+}
+
+func (er *eventRecorder) OnDelete(obj any) {
+	er.mutex.Lock()
+	defer er.mutex.Unlock()
+
+	er.events = append(er.events, event{
+		oldObj: obj,
+	})
+}
+
+// list returns a shallow copy of the current list of events.
+func (er *eventRecorder) list() eventList {
+	er.mutex.Lock()
+	defer er.mutex.Unlock()
+
+	return eventList{Events: slices.Clone(er.events)}
+}
+
+// reset clears the current list of events.
+// Should only be called during idle periods.
+func (er *eventRecorder) reset() eventList {
+	er.mutex.Lock()
+	defer er.mutex.Unlock()
+
+	events := eventList{Events: er.events}
+	er.events = nil
+	return events
+}
+
+// eventList adds pretty-printing to a slice of events.
+type eventList struct {
+	Events []event
+}
+
+// Types returns a comma-separated list of the type of each event.
+// For the sake of simplicity the last entry also ends with a comma.
+//
+// This can be used in Gomega assertions like this:
+//
+//	gomega.Expect(events).To(gomega.HaveField(""Types()"", gomega.MatchRegexp(""^add,(update,)*$""))
+//	gomega.Expect(events).To(gomega.HaveField(""Types()"", gomega.MatchRegexp(""^(update,)*$""))
+func (el eventList) Types() string {
+	var buffer strings.Builder
+
+	for _, e := range el.Events {
+		buffer.WriteString(e.Type())
+		buffer.WriteRune(',')
+	}
+
+	return buffer.String()
+}"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/framework/conformance/objectmatcher.go,114,0,114,"@@ -0,0 +1,114 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package architecture
+
+import (
+	""fmt""
+	""strings""
+
+	""github.com/onsi/gomega/format""
+	gtypes ""github.com/onsi/gomega/types""
+
+	""k8s.io/apimachinery/pkg/apis/meta/v1/unstructured""
+	""k8s.io/apimachinery/pkg/runtime""
+	""k8s.io/klog/v2""
+)
+
+// matchObjectList is a custom matcher for the result of a generic lister List result
+// ([]runtime.Object where each entry is *unstructured.Unstructed). The list is
+// expected to have exactly one element or none.
+type matchObjectList struct {
+	expectedObject *unstructured.Unstructured
+	verifyContent  bool
+	lastDiff       string
+}
+
+var _ gtypes.GomegaMatcher = &matchObjectList{}
+
+func (m *matchObjectList) Match(actual any) (bool, error) {
+	// Reset state.
+	m.lastDiff = """"
+
+	actualObjects, ok := actual.([]runtime.Object)
+	if !ok {
+		return false, fmt.Errorf(""must be passed a []runtime.Object, got %T"", actual)
+	}
+
+	if m.expectedObject == nil {
+		// Must be empty,
+		return len(actualObjects) == 0, nil
+	}
+
+	// Must have exactly the expected object.
+	if len(actualObjects) != 1 {
+		return false, nil
+	}
+	actualObject, ok := actualObjects[0].(*unstructured.Unstructured)
+	if !ok {
+		// Shouldn't happen.
+		return false, fmt.Errorf(""expected *unstructured.Unstructured, got %T"", actualObjects[0])
+	}
+
+	if m.verifyContent {
+		// Remember diff for failure message.
+		m.lastDiff = compareObjects(m.expectedObject, actualObject)
+		if m.lastDiff != """" {
+			return false, nil
+		}
+		return true, nil
+	}
+	return m.expectedObject.GetName() == actualObject.GetName() && m.expectedObject.GetNamespace() == actualObject.GetNamespace(), nil
+}
+
+func (m *matchObjectList) FailureMessage(actual any) string {
+	return m.message(actual, ""to"")
+}
+
+func (m *matchObjectList) NegatedFailureMessage(actual any) string {
+	return m.message(actual, ""not to"")
+}
+
+func (m *matchObjectList) message(actual any, to string) string {
+	// Gomega renders []runtime.Object as nested maps.
+	// YAML is more readable.
+	var buffer strings.Builder
+	buffer.WriteString(""Expected\n"")
+	if actualObjects, ok := actual.([]runtime.Object); ok {
+		buffer.WriteString(fmt.Sprintf(""   %T len:%d:\n"", actualObjects, len(actualObjects)))
+		for _, object := range actualObjects {
+			buffer.WriteString(""      ---\n"")
+			if o, ok := object.(*unstructured.Unstructured); ok {
+				buffer.WriteString(format.Object(o, 2))
+			} else {
+				buffer.WriteString(format.Object(object, 2))
+			}
+		}
+	} else {
+		buffer.WriteString(format.Object(actual, 1))
+	}
+	buffer.WriteString(fmt.Sprintf(""\n%s contain exactly the following element:\n"", to))
+	if m.verifyContent {
+		buffer.WriteString(format.Object(m.expectedObject, 1))
+	} else {
+		buffer.WriteString(""      "" + klog.KObj(m.expectedObject).String())
+	}
+	if m.lastDiff != """" {
+		buffer.WriteString(""\nDiff of checked fields (- expected, + actual):\n"")
+		buffer.WriteString(m.lastDiff)
+	}
+	return buffer.String()
+}"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/e2e/framework/gomega.go,65,0,65,"@@ -0,0 +1,65 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+// Package framework contains provider-independent helper code for
+// building and running E2E tests with Ginkgo. The actual Ginkgo test
+// suites gets assembled by combining this framework, the optional
+// provider support code and specific tests via a separate .go file
+// like Kubernetes' test/e2e.go.
+package framework
+
+import (
+	""fmt""
+	""strings""
+
+	""github.com/onsi/gomega/format""
+	gtypes ""github.com/onsi/gomega/types""
+)
+
+// GomegaObject returns a matcher which appends a full dump of the actual value
+// to the failure of the matcher that it wraps. This is useful e.g. for
+// gomega.HaveField which otherwise only generates a message containing
+// the field that it is checking, but not the object in which that field occurs.
+func GomegaObject(shouldMatch gtypes.GomegaMatcher) gtypes.GomegaMatcher {
+	return &gomegaObjectMatcher{
+		shouldMatch: shouldMatch,
+	}
+}
+
+type gomegaObjectMatcher struct {
+	shouldMatch gtypes.GomegaMatcher
+}
+
+func (m *gomegaObjectMatcher) Match(actual interface{}) (success bool, err error) {
+	return m.shouldMatch.Match(actual)
+}
+
+func (m *gomegaObjectMatcher) FailureMessage(actual interface{}) (message string) {
+	return m.withDump(actual, m.shouldMatch.FailureMessage(actual))
+}
+
+func (m *gomegaObjectMatcher) NegatedFailureMessage(actual interface{}) (message string) {
+	return m.withDump(actual, m.shouldMatch.NegatedFailureMessage(actual))
+}
+
+func (m *gomegaObjectMatcher) withDump(actual any, message string) string {
+	dump := format.Object(actual, 1)
+	if !strings.HasSuffix(message, ""\n"") {
+		message += ""\n""
+	}
+	message += fmt.Sprintf(""\nFull object:\n%s"", dump)
+	return message
+}"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/utils/format/format.go,12,0,12,"@@ -28,6 +28,7 @@ import (
 
 	""github.com/onsi/gomega/format""
 
+	""k8s.io/apimachinery/pkg/apis/meta/v1/unstructured""
 	""sigs.k8s.io/yaml""
 )
 
@@ -59,7 +60,18 @@ func handleYAML(object interface{}) (string, bool) {
 	return ""\n"" + strings.TrimSpace(string(y)), true
 }
 
+var unstructuredObjectType = reflect.TypeOf(unstructured.Unstructured{})
+
 func useYAML(t reflect.Type) bool {
+	if t == unstructuredObjectType {
+		// It looks nicer as YAML.
+		//
+		// unstructured.Unstructured is a map, but because
+		// it's wrapped in a struct it does not get recognized
+		// as one by the code below and thus needs a direct check.
+		return true
+	}
+
 	switch t.Kind() {
 	case reflect.Pointer, reflect.Slice, reflect.Array:
 		return useYAML(t.Elem())"
kubernetes/kubernetes,0dd78f632e42c576f1c28bcfad1a67efeaa79c0f,Kubernetes Prow Robot,2025-10-03T03:22:56Z,"Merge pull request #133747 from pohly/dra-e2e-crud-conformance

DRA: CRUD conformance tests",test/utils/format/format_test.go,8,0,8,"@@ -25,6 +25,7 @@ import (
 	""github.com/stretchr/testify/assert""
 
 	v1 ""k8s.io/api/core/v1""
+	""k8s.io/apimachinery/pkg/apis/meta/v1/unstructured""
 )
 
 func TestGomegaFormatObject(t *testing.T) {
@@ -57,6 +58,13 @@ func TestGomegaFormatObject(t *testing.T) {
 		""podlist"": {value: v1.PodList{}, expected: `<v1.PodList>: 
     items: null
     metadata: {}`},
+		""unstructured"": {value: func() any {
+			var obj unstructured.Unstructured
+			obj.SetName(""some-name"")
+			return &obj
+		}(), expected: `<*unstructured.Unstructured | <hex>>: 
+    metadata:
+      name: some-name`},
 	} {
 		t.Run(name, func(t *testing.T) {
 			actual := format.Object(test.value, test.indentation)"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",pkg/apis/resource/v1/zz_generated.validations.go,101,0,101,"@@ -39,6 +39,22 @@ func init() { localSchemeBuilder.Register(RegisterValidations) }
 // RegisterValidations adds validation functions to the given scheme.
 // Public to allow building arbitrary schemes.
 func RegisterValidations(scheme *runtime.Scheme) error {
+	// type DeviceClass
+	scheme.AddValidationFunc((*resourcev1.DeviceClass)(nil), func(ctx context.Context, op operation.Operation, obj, oldObj interface{}) field.ErrorList {
+		switch op.Request.SubresourcePath() {
+		case ""/"":
+			return Validate_DeviceClass(ctx, op, nil /* fldPath */, obj.(*resourcev1.DeviceClass), safe.Cast[*resourcev1.DeviceClass](oldObj))
+		}
+		return field.ErrorList{field.InternalError(nil, fmt.Errorf(""no validation found for %T, subresource: %v"", obj, op.Request.SubresourcePath()))}
+	})
+	// type DeviceClassList
+	scheme.AddValidationFunc((*resourcev1.DeviceClassList)(nil), func(ctx context.Context, op operation.Operation, obj, oldObj interface{}) field.ErrorList {
+		switch op.Request.SubresourcePath() {
+		case ""/"":
+			return Validate_DeviceClassList(ctx, op, nil /* fldPath */, obj.(*resourcev1.DeviceClassList), safe.Cast[*resourcev1.DeviceClassList](oldObj))
+		}
+		return field.ErrorList{field.InternalError(nil, fmt.Errorf(""no validation found for %T, subresource: %v"", obj, op.Request.SubresourcePath()))}
+	})
 	// type ResourceClaim
 	scheme.AddValidationFunc((*resourcev1.ResourceClaim)(nil), func(ctx context.Context, op operation.Operation, obj, oldObj interface{}) field.ErrorList {
 		switch op.Request.SubresourcePath() {
@@ -166,6 +182,91 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 	return errs
 }
 
+// Validate_DeviceClass validates an instance of DeviceClass according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClass(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceClass) (errs field.ErrorList) {
+	// field resourcev1.DeviceClass.TypeMeta has no validation
+	// field resourcev1.DeviceClass.ObjectMeta has no validation
+
+	// field resourcev1.DeviceClass.Spec
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *resourcev1.DeviceClassSpec) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call the type's validation function
+			errs = append(errs, Validate_DeviceClassSpec(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""spec""), &obj.Spec, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClass) *resourcev1.DeviceClassSpec { return &oldObj.Spec }))...)
+
+	return errs
+}
+
+// Validate_DeviceClassList validates an instance of DeviceClassList according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClassList(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceClassList) (errs field.ErrorList) {
+	// field resourcev1.DeviceClassList.TypeMeta has no validation
+	// field resourcev1.DeviceClassList.ListMeta has no validation
+
+	// field resourcev1.DeviceClassList.Items
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1.DeviceClass) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceClass)...)
+			return
+		}(fldPath.Child(""items""), obj.Items, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClassList) []resourcev1.DeviceClass { return oldObj.Items }))...)
+
+	return errs
+}
+
+// Validate_DeviceClassSpec validates an instance of DeviceClassSpec according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClassSpec(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceClassSpec) (errs field.ErrorList) {
+	// field resourcev1.DeviceClassSpec.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClassSpec) []resourcev1.DeviceSelector { return oldObj.Selectors }))...)
+
+	// field resourcev1.DeviceClassSpec.Config
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1.DeviceClassConfiguration) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""config""), obj.Config, safe.Field(oldObj, func(oldObj *resourcev1.DeviceClassSpec) []resourcev1.DeviceClassConfiguration { return oldObj.Config }))...)
+
+	// field resourcev1.DeviceClassSpec.ExtendedResourceName has no validation
+	return errs
+}
+
 // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1.DeviceRequestAllocationResult) (errs field.ErrorList) {"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",pkg/apis/resource/v1beta1/zz_generated.validations.go,105,0,105,"@@ -39,6 +39,22 @@ func init() { localSchemeBuilder.Register(RegisterValidations) }
 // RegisterValidations adds validation functions to the given scheme.
 // Public to allow building arbitrary schemes.
 func RegisterValidations(scheme *runtime.Scheme) error {
+	// type DeviceClass
+	scheme.AddValidationFunc((*resourcev1beta1.DeviceClass)(nil), func(ctx context.Context, op operation.Operation, obj, oldObj interface{}) field.ErrorList {
+		switch op.Request.SubresourcePath() {
+		case ""/"":
+			return Validate_DeviceClass(ctx, op, nil /* fldPath */, obj.(*resourcev1beta1.DeviceClass), safe.Cast[*resourcev1beta1.DeviceClass](oldObj))
+		}
+		return field.ErrorList{field.InternalError(nil, fmt.Errorf(""no validation found for %T, subresource: %v"", obj, op.Request.SubresourcePath()))}
+	})
+	// type DeviceClassList
+	scheme.AddValidationFunc((*resourcev1beta1.DeviceClassList)(nil), func(ctx context.Context, op operation.Operation, obj, oldObj interface{}) field.ErrorList {
+		switch op.Request.SubresourcePath() {
+		case ""/"":
+			return Validate_DeviceClassList(ctx, op, nil /* fldPath */, obj.(*resourcev1beta1.DeviceClassList), safe.Cast[*resourcev1beta1.DeviceClassList](oldObj))
+		}
+		return field.ErrorList{field.InternalError(nil, fmt.Errorf(""no validation found for %T, subresource: %v"", obj, op.Request.SubresourcePath()))}
+	})
 	// type ResourceClaim
 	scheme.AddValidationFunc((*resourcev1beta1.ResourceClaim)(nil), func(ctx context.Context, op operation.Operation, obj, oldObj interface{}) field.ErrorList {
 		switch op.Request.SubresourcePath() {
@@ -172,6 +188,95 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 	return errs
 }
 
+// Validate_DeviceClass validates an instance of DeviceClass according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClass(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceClass) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceClass.TypeMeta has no validation
+	// field resourcev1beta1.DeviceClass.ObjectMeta has no validation
+
+	// field resourcev1beta1.DeviceClass.Spec
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceClassSpec) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call the type's validation function
+			errs = append(errs, Validate_DeviceClassSpec(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""spec""), &obj.Spec, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClass) *resourcev1beta1.DeviceClassSpec { return &oldObj.Spec }))...)
+
+	return errs
+}
+
+// Validate_DeviceClassList validates an instance of DeviceClassList according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClassList(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceClassList) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceClassList.TypeMeta has no validation
+	// field resourcev1beta1.DeviceClassList.ListMeta has no validation
+
+	// field resourcev1beta1.DeviceClassList.Items
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceClass) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceClass)...)
+			return
+		}(fldPath.Child(""items""), obj.Items, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClassList) []resourcev1beta1.DeviceClass { return oldObj.Items }))...)
+
+	return errs
+}
+
+// Validate_DeviceClassSpec validates an instance of DeviceClassSpec according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClassSpec(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceClassSpec) (errs field.ErrorList) {
+	// field resourcev1beta1.DeviceClassSpec.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClassSpec) []resourcev1beta1.DeviceSelector {
+			return oldObj.Selectors
+		}))...)
+
+	// field resourcev1beta1.DeviceClassSpec.Config
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta1.DeviceClassConfiguration) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""config""), obj.Config, safe.Field(oldObj, func(oldObj *resourcev1beta1.DeviceClassSpec) []resourcev1beta1.DeviceClassConfiguration {
+			return oldObj.Config
+		}))...)
+
+	// field resourcev1beta1.DeviceClassSpec.ExtendedResourceName has no validation
+	return errs
+}
+
 // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta1.DeviceRequestAllocationResult) (errs field.ErrorList) {"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",pkg/apis/resource/v1beta2/zz_generated.validations.go,105,0,105,"@@ -39,6 +39,22 @@ func init() { localSchemeBuilder.Register(RegisterValidations) }
 // RegisterValidations adds validation functions to the given scheme.
 // Public to allow building arbitrary schemes.
 func RegisterValidations(scheme *runtime.Scheme) error {
+	// type DeviceClass
+	scheme.AddValidationFunc((*resourcev1beta2.DeviceClass)(nil), func(ctx context.Context, op operation.Operation, obj, oldObj interface{}) field.ErrorList {
+		switch op.Request.SubresourcePath() {
+		case ""/"":
+			return Validate_DeviceClass(ctx, op, nil /* fldPath */, obj.(*resourcev1beta2.DeviceClass), safe.Cast[*resourcev1beta2.DeviceClass](oldObj))
+		}
+		return field.ErrorList{field.InternalError(nil, fmt.Errorf(""no validation found for %T, subresource: %v"", obj, op.Request.SubresourcePath()))}
+	})
+	// type DeviceClassList
+	scheme.AddValidationFunc((*resourcev1beta2.DeviceClassList)(nil), func(ctx context.Context, op operation.Operation, obj, oldObj interface{}) field.ErrorList {
+		switch op.Request.SubresourcePath() {
+		case ""/"":
+			return Validate_DeviceClassList(ctx, op, nil /* fldPath */, obj.(*resourcev1beta2.DeviceClassList), safe.Cast[*resourcev1beta2.DeviceClassList](oldObj))
+		}
+		return field.ErrorList{field.InternalError(nil, fmt.Errorf(""no validation found for %T, subresource: %v"", obj, op.Request.SubresourcePath()))}
+	})
 	// type ResourceClaim
 	scheme.AddValidationFunc((*resourcev1beta2.ResourceClaim)(nil), func(ctx context.Context, op operation.Operation, obj, oldObj interface{}) field.ErrorList {
 		switch op.Request.SubresourcePath() {
@@ -172,6 +188,95 @@ func Validate_DeviceClaim(ctx context.Context, op operation.Operation, fldPath *
 	return errs
 }
 
+// Validate_DeviceClass validates an instance of DeviceClass according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClass(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceClass) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceClass.TypeMeta has no validation
+	// field resourcev1beta2.DeviceClass.ObjectMeta has no validation
+
+	// field resourcev1beta2.DeviceClass.Spec
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceClassSpec) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call the type's validation function
+			errs = append(errs, Validate_DeviceClassSpec(ctx, op, fldPath, obj, oldObj)...)
+			return
+		}(fldPath.Child(""spec""), &obj.Spec, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClass) *resourcev1beta2.DeviceClassSpec { return &oldObj.Spec }))...)
+
+	return errs
+}
+
+// Validate_DeviceClassList validates an instance of DeviceClassList according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClassList(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceClassList) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceClassList.TypeMeta has no validation
+	// field resourcev1beta2.DeviceClassList.ListMeta has no validation
+
+	// field resourcev1beta2.DeviceClassList.Items
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta2.DeviceClass) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// iterate the list and call the type's validation function
+			errs = append(errs, validate.EachSliceVal(ctx, op, fldPath, obj, oldObj, nil, nil, Validate_DeviceClass)...)
+			return
+		}(fldPath.Child(""items""), obj.Items, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClassList) []resourcev1beta2.DeviceClass { return oldObj.Items }))...)
+
+	return errs
+}
+
+// Validate_DeviceClassSpec validates an instance of DeviceClassSpec according
+// to declarative validation rules in the API schema.
+func Validate_DeviceClassSpec(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceClassSpec) (errs field.ErrorList) {
+	// field resourcev1beta2.DeviceClassSpec.Selectors
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta2.DeviceSelector) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""selectors""), obj.Selectors, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClassSpec) []resourcev1beta2.DeviceSelector {
+			return oldObj.Selectors
+		}))...)
+
+	// field resourcev1beta2.DeviceClassSpec.Config
+	errs = append(errs,
+		func(fldPath *field.Path, obj, oldObj []resourcev1beta2.DeviceClassConfiguration) (errs field.ErrorList) {
+			// don't revalidate unchanged data
+			if op.Type == operation.Update && equality.Semantic.DeepEqual(obj, oldObj) {
+				return nil
+			}
+			// call field-attached validations
+			if e := validate.MaxItems(ctx, op, fldPath, obj, oldObj, 32); len(e) != 0 {
+				errs = append(errs, e...)
+				return // do not proceed
+			}
+			if e := validate.OptionalSlice(ctx, op, fldPath, obj, oldObj); len(e) != 0 {
+				return // do not proceed
+			}
+			return
+		}(fldPath.Child(""config""), obj.Config, safe.Field(oldObj, func(oldObj *resourcev1beta2.DeviceClassSpec) []resourcev1beta2.DeviceClassConfiguration {
+			return oldObj.Config
+		}))...)
+
+	// field resourcev1beta2.DeviceClassSpec.ExtendedResourceName has no validation
+	return errs
+}
+
 // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according
 // to declarative validation rules in the API schema.
 func Validate_DeviceRequestAllocationResult(ctx context.Context, op operation.Operation, fldPath *field.Path, obj, oldObj *resourcev1beta2.DeviceRequestAllocationResult) (errs field.ErrorList) {"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",pkg/apis/resource/validation/validation.go,3,2,5,"@@ -544,16 +544,17 @@ func validateDeviceClassSpec(spec, oldSpec *resource.DeviceClassSpec, fldPath *f
 		func(selector resource.DeviceSelector, fldPath *field.Path) field.ErrorList {
 			return validateSelector(selector, fldPath, stored)
 		},
-		fldPath.Child(""selectors""))...)
+		fldPath.Child(""selectors""), sizeCovered)...)
 	// Same logic as above for configs.
+	stored = false
 	if oldSpec != nil {
 		stored = apiequality.Semantic.DeepEqual(spec.Config, oldSpec.Config)
 	}
 	allErrs = append(allErrs, validateSlice(spec.Config, resource.DeviceConfigMaxSize,
 		func(config resource.DeviceClassConfiguration, fldPath *field.Path) field.ErrorList {
 			return validateDeviceClassConfiguration(config, fldPath, stored)
 		},
-		fldPath.Child(""config""))...)
+		fldPath.Child(""config""), sizeCovered)...)
 	if spec.ExtendedResourceName != nil && !v1helper.IsExtendedResourceName(corev1.ResourceName(*spec.ExtendedResourceName)) {
 		allErrs = append(allErrs, field.Invalid(fldPath.Child(""extendedResourceName""), *spec.ExtendedResourceName,
 			""must be a valid extended resource name""))"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",pkg/apis/resource/validation/validation_deviceclass_test.go,2,2,4,"@@ -219,7 +219,7 @@ func TestValidateClass(t *testing.T) {
 		},
 		""too-many-selectors"": {
 			wantFailures: field.ErrorList{
-				field.TooMany(field.NewPath(""spec"", ""selectors""), resource.DeviceSelectorsMaxSize+1, resource.DeviceSelectorsMaxSize),
+				field.TooMany(field.NewPath(""spec"", ""selectors""), resource.DeviceSelectorsMaxSize+1, resource.DeviceSelectorsMaxSize).WithOrigin(""maxItems"").MarkCoveredByDeclarative(),
 			},
 			class: func() *resource.DeviceClass {
 				class := testClass(goodName)
@@ -313,7 +313,7 @@ func TestValidateClass(t *testing.T) {
 		},
 		""too-many-configs"": {
 			wantFailures: field.ErrorList{
-				field.TooMany(field.NewPath(""spec"", ""config""), resource.DeviceConfigMaxSize+1, resource.DeviceConfigMaxSize),
+				field.TooMany(field.NewPath(""spec"", ""config""), resource.DeviceConfigMaxSize+1, resource.DeviceConfigMaxSize).WithOrigin(""maxItems"").MarkCoveredByDeclarative(),
 			},
 			class: func() *resource.DeviceClass {
 				class := testClass(goodName)"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",pkg/registry/resource/deviceclass/declarative_validation_test.go,75,0,75,"@@ -17,6 +17,7 @@ limitations under the License.
 package deviceclass
 
 import (
+	""fmt""
 	""testing""
 
 	metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
@@ -48,6 +49,26 @@ func TestDeclarativeValidate(t *testing.T) {
 				""valid"": {
 					input: mkDeviceClass(),
 				},
+				// spec.selectors.
+				""valid: at limit selectors"": {
+					input: mkDeviceClass(tweakSelectors(32)),
+				},
+				""too many selectors"": {
+					input: mkDeviceClass(tweakSelectors(33)),
+					expectedErrs: field.ErrorList{
+						field.TooMany(field.NewPath(""spec"", ""selectors""), 33, 32).WithOrigin(""maxItems""),
+					},
+				},
+				// spec.config
+				""too many configs"": {
+					input: mkDeviceClass(tweakConfig(33)),
+					expectedErrs: field.ErrorList{
+						field.TooMany(field.NewPath(""spec"", ""config""), 33, 32).WithOrigin(""maxItems""),
+					},
+				},
+				""valid: at limit configs"": {
+					input: mkDeviceClass(tweakConfig(32)),
+				},
 				// TODO: Add more test cases
 			}
 
@@ -80,6 +101,28 @@ func TestDeclarativeValidateUpdate(t *testing.T) {
 					old:    mkDeviceClass(),
 					update: mkDeviceClass(),
 				},
+				""valid update: at limit selectors"": {
+					old:    mkDeviceClass(),
+					update: mkDeviceClass(tweakSelectors(32)),
+				},
+				""update with too many selectors"": {
+					old:    mkDeviceClass(),
+					update: mkDeviceClass(tweakSelectors(33)),
+					expectedErrs: field.ErrorList{
+						field.TooMany(field.NewPath(""spec"", ""selectors""), 33, 32).WithOrigin(""maxItems""),
+					},
+				},
+				""valid update: at limit configs"": {
+					old:    mkDeviceClass(),
+					update: mkDeviceClass(tweakConfig(32)),
+				},
+				""update with too many configs"": {
+					old:    mkDeviceClass(),
+					update: mkDeviceClass(tweakConfig(33)),
+					expectedErrs: field.ErrorList{
+						field.TooMany(field.NewPath(""spec"", ""config""), 33, 32).WithOrigin(""maxItems""),
+					},
+				},
 				// TODO: Add more test cases
 			}
 
@@ -127,3 +170,35 @@ func mkDeviceClass(mutators ...func(*resource.DeviceClass)) resource.DeviceClass
 	}
 	return dc
 }
+
+func tweakSelectors(count int) func(*resource.DeviceClass) {
+	return func(dc *resource.DeviceClass) {
+		dc.Spec.Selectors = []resource.DeviceSelector{}
+
+		for i := 0; i < count; i++ {
+			dc.Spec.Selectors = append(dc.Spec.Selectors, resource.DeviceSelector{
+				CEL: &resource.CELDeviceSelector{
+					Expression: fmt.Sprintf(""device.driver == \""test.driver.io%d\"""", i),
+				},
+			})
+		}
+	}
+}
+
+func tweakConfig(count int) func(*resource.DeviceClass) {
+	return func(dc *resource.DeviceClass) {
+		dc.Spec.Config = []resource.DeviceClassConfiguration{}
+		for i := 0; i < count; i++ {
+			dc.Spec.Config = append(dc.Spec.Config, resource.DeviceClassConfiguration{
+				DeviceConfiguration: resource.DeviceConfiguration{
+					Opaque: &resource.OpaqueDeviceConfiguration{
+						Driver: ""test.driver.io"",
+						Parameters: runtime.RawExtension{
+							Raw: []byte(fmt.Sprintf(`{""key"":""value%d""}`, i)),
+						},
+					},
+				},
+			})
+		}
+	}
+}"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",pkg/registry/resource/deviceclass/strategy.go,1,2,3,"@@ -84,8 +84,7 @@ func (deviceClassStrategy) ValidateUpdate(ctx context.Context, obj, old runtime.
 	newClass := obj.(*resource.DeviceClass)
 	oldClass := old.(*resource.DeviceClass)
 
-	errorList := validation.ValidateDeviceClass(newClass)
-	errorList = append(errorList, validation.ValidateDeviceClassUpdate(newClass, oldClass)...)
+	errorList := validation.ValidateDeviceClassUpdate(newClass, oldClass)
 
 	return rest.ValidateDeclarativelyWithMigrationChecks(ctx, legacyscheme.Scheme, newClass, oldClass, errorList, operation.Update)
 }"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",staging/src/k8s.io/api/resource/v1/generated.proto,4,0,4,"@@ -642,6 +642,8 @@ message DeviceClassSpec {
   //
   // +optional
   // +listType=atomic
+  // +k8s:optional
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 1;
 
   // Config defines configuration parameters that apply to each device that is claimed via this class.
@@ -652,6 +654,8 @@ message DeviceClassSpec {
   //
   // +optional
   // +listType=atomic
+  // +k8s:optional
+  // +k8s:maxItems=32
   repeated DeviceClassConfiguration config = 2;
 
   // ExtendedResourceName is the extended resource name for the devices of this class."
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",staging/src/k8s.io/api/resource/v1/types.go,4,0,4,"@@ -1672,6 +1672,8 @@ type DeviceClassSpec struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:optional
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,1,opt,name=selectors""`
 
 	// Config defines configuration parameters that apply to each device that is claimed via this class.
@@ -1682,6 +1684,8 @@ type DeviceClassSpec struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:optional
+	// +k8s:maxItems=32
 	Config []DeviceClassConfiguration `json:""config,omitempty"" protobuf:""bytes,2,opt,name=config""`
 
 	// SuitableNodes is tombstoned since Kubernetes 1.32 where"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",staging/src/k8s.io/api/resource/v1beta1/generated.proto,4,0,4,"@@ -650,6 +650,8 @@ message DeviceClassSpec {
   //
   // +optional
   // +listType=atomic
+  // +k8s:optional
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 1;
 
   // Config defines configuration parameters that apply to each device that is claimed via this class.
@@ -660,6 +662,8 @@ message DeviceClassSpec {
   //
   // +optional
   // +listType=atomic
+  // +k8s:optional
+  // +k8s:maxItems=32
   repeated DeviceClassConfiguration config = 2;
 
   // ExtendedResourceName is the extended resource name for the devices of this class."
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",staging/src/k8s.io/api/resource/v1beta1/types.go,4,0,4,"@@ -1680,6 +1680,8 @@ type DeviceClassSpec struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:optional
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,1,opt,name=selectors""`
 
 	// Config defines configuration parameters that apply to each device that is claimed via this class.
@@ -1690,6 +1692,8 @@ type DeviceClassSpec struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:optional
+	// +k8s:maxItems=32
 	Config []DeviceClassConfiguration `json:""config,omitempty"" protobuf:""bytes,2,opt,name=config""`
 
 	// SuitableNodes is tombstoned since Kubernetes 1.32 where"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",staging/src/k8s.io/api/resource/v1beta2/generated.proto,4,0,4,"@@ -642,6 +642,8 @@ message DeviceClassSpec {
   //
   // +optional
   // +listType=atomic
+  // +k8s:optional
+  // +k8s:maxItems=32
   repeated DeviceSelector selectors = 1;
 
   // Config defines configuration parameters that apply to each device that is claimed via this class.
@@ -652,6 +654,8 @@ message DeviceClassSpec {
   //
   // +optional
   // +listType=atomic
+  // +k8s:optional
+  // +k8s:maxItems=32
   repeated DeviceClassConfiguration config = 2;
 
   // ExtendedResourceName is the extended resource name for the devices of this class."
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",staging/src/k8s.io/api/resource/v1beta2/types.go,4,0,4,"@@ -1672,6 +1672,8 @@ type DeviceClassSpec struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:optional
+	// +k8s:maxItems=32
 	Selectors []DeviceSelector `json:""selectors,omitempty"" protobuf:""bytes,1,opt,name=selectors""`
 
 	// Config defines configuration parameters that apply to each device that is claimed via this class.
@@ -1682,6 +1684,8 @@ type DeviceClassSpec struct {
 	//
 	// +optional
 	// +listType=atomic
+	// +k8s:optional
+	// +k8s:maxItems=32
 	Config []DeviceClassConfiguration `json:""config,omitempty"" protobuf:""bytes,2,opt,name=config""`
 
 	// SuitableNodes is tombstoned since Kubernetes 1.32 where"
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",staging/src/k8s.io/apimachinery/pkg/api/validate/limits_test.go,42,47,89,"@@ -76,62 +76,57 @@ func TestMaxLength(t *testing.T) {
 
 func TestMaxItems(t *testing.T) {
 	cases := []struct {
-		fn  func(op operation.Operation, fp *field.Path) field.ErrorList
-		err string // regex
+		name  string
+		items int
+		max   int
+		err   string // regex
 	}{{
-		fn: func(op operation.Operation, fp *field.Path) field.ErrorList {
-			value := make([]string, 0)
-			max := 0
-			return MaxItems(context.Background(), op, fp, value, nil, max)
-		},
+		name:  ""0 items, max 0"",
+		items: 0,
+		max:   0,
 	}, {
-		fn: func(op operation.Operation, fp *field.Path) field.ErrorList {
-			value := make([]string, 1)
-			max := 0
-			return MaxItems(context.Background(), op, fp, value, nil, max)
-		},
-		err: ""fldpath: Too many.*must have at most"",
+		name:  ""1 item, max 0"",
+		items: 1,
+		max:   0,
+		err:   ""fldpath: Too many.*must have at most"",
 	}, {
-		fn: func(op operation.Operation, fp *field.Path) field.ErrorList {
-			value := make([]int, 1)
-			max := 1
-			return MaxItems(context.Background(), op, fp, value, nil, max)
-		},
+		name:  ""1 item, max 1"",
+		items: 1,
+		max:   1,
 	}, {
-		fn: func(op operation.Operation, fp *field.Path) field.ErrorList {
-			value := make([]int, 2)
-			max := 1
-			return MaxItems(context.Background(), op, fp, value, nil, max)
-		},
-		err: ""fldpath: Too many.*must have at most"",
+		name:  ""2 items, max 1"",
+		items: 2,
+		max:   1,
+		err:   ""fldpath: Too many.*must have at most"",
 	}, {
-		fn: func(op operation.Operation, fp *field.Path) field.ErrorList {
-			value := make([]bool, 0)
-			max := -1
-			return MaxItems(context.Background(), op, fp, value, nil, max)
-		},
-		err: ""fldpath: Too many.*too many items"",
+		name:  ""0 items, max -1"",
+		items: 0,
+		max:   -1,
+		err:   ""fldpath: Too many.*too many items"",
 	}}
 
-	for i, tc := range cases {
-		result := tc.fn(operation.Operation{}, field.NewPath(""fldpath""))
-		if len(result) > 0 && tc.err == """" {
-			t.Errorf(""case %d: unexpected failure: %v"", i, fmtErrs(result))
-			continue
-		}
-		if len(result) == 0 && tc.err != """" {
-			t.Errorf(""case %d: unexpected success: expected %q"", i, tc.err)
-			continue
-		}
-		if len(result) > 0 {
-			if len(result) > 1 {
-				t.Errorf(""case %d: unexepected multi-error: %v"", i, fmtErrs(result))
-				continue
+	for _, tc := range cases {
+		t.Run(tc.name, func(t *testing.T) {
+			value := make([]bool, tc.items)
+			result := MaxItems(context.Background(), operation.Operation{}, field.NewPath(""fldpath""), value, nil, tc.max)
+			if len(result) > 0 && tc.err == """" {
+				t.Errorf(""unexpected failure: %v"", fmtErrs(result))
+				return
 			}
-			if re := regexp.MustCompile(tc.err); !re.MatchString(result[0].Error()) {
-				t.Errorf(""case %d: wrong error\nexpected: %q\n     got: %v"", i, tc.err, fmtErrs(result))
+			if len(result) == 0 && tc.err != """" {
+				t.Errorf(""unexpected success: expected %q"", tc.err)
+				return
 			}
-		}
+			if len(result) > 0 {
+				if len(result) > 1 {
+					t.Errorf(""unexepected multi-error: %v"", fmtErrs(result))
+					return
+				}
+				if re := regexp.MustCompile(tc.err); !re.MatchString(result[0].Error()) {
+					t.Errorf(""wrong error\nexpected: %q\n     got: %v"", tc.err, fmtErrs(result))
+				}
+			}
+		})
 	}
 }
 "
kubernetes/kubernetes,ab89efc573d01f4836d64d50ff1958a833c543d0,Kubernetes Prow Robot,2025-10-03T01:30:56Z,"Merge pull request #134302 from lalitc375/device-class-selectors

feat(resource): Add validation for DeviceClass selectors and configs",staging/src/k8s.io/code-generator/cmd/validation-gen/validators/limits.go,2,2,4,"@@ -83,10 +83,10 @@ func (mitv maxItemsTagValidator) Docs() TagDoc {
 	return TagDoc{
 		Tag:         mitv.TagName(),
 		Scopes:      mitv.ValidScopes().UnsortedList(),
-		Description: ""Indicates that a list field has a limit on its size."",
+		Description: ""Indicates that a list has a limit on its size."",
 		Payloads: []TagPayloadDoc{{
 			Description: ""<non-negative integer>"",
-			Docs:        ""This field must be no more than X items long."",
+			Docs:        ""This list must be no more than X items long."",
 		}},
 		PayloadsType:     codetags.ValueTypeInt,
 		PayloadsRequired: true,"
kubernetes/kubernetes,5c73384abb1ef3b15b95b7aa1ccc7455b8fd5620,Kubernetes Prow Robot,2025-10-03T00:39:10Z,"Merge pull request #134283 from natasha41575/ippr-tests

[InPlacePodVerticalScaling] refactor and increase coverage for pod resize tests",test/e2e/common/node/framework/podresize/resize.go,7,0,7,"@@ -203,6 +203,10 @@ func verifyPodContainersStatusResources(gotCtrStatuses []v1.ContainerStatus, wan
 			continue
 		}
 
+		if err := framework.Gomega().Expect(gotCtrStatus.AllocatedResources).To(gomega.BeComparableTo(wantCtr.Resources.Requests)); err != nil {
+			errs = append(errs, fmt.Errorf(""container[%s] status allocatedResources mismatch: %w"", wantCtr.Name, err))
+		}
+
 		if err := framework.Gomega().Expect(*gotCtrStatus.Resources).To(gomega.BeComparableTo(wantCtr.Resources)); err != nil {
 			errs = append(errs, fmt.Errorf(""container[%s] status resources mismatch: %w"", wantCtr.Name, err))
 		}
@@ -373,6 +377,9 @@ func UpdateExpectedContainerRestarts(ctx context.Context, pod *v1.Pod, expectedC
 	for _, ctr := range pod.Status.ContainerStatuses {
 		initialRestarts[ctr.Name] = ctr.RestartCount
 	}
+	for _, ctr := range pod.Status.InitContainerStatuses {
+		initialRestarts[ctr.Name] = ctr.RestartCount
+	}
 	for i, ctr := range expectedContainers {
 		newExpectedContainers = append(newExpectedContainers, expectedContainers[i])
 		newExpectedContainers[i].RestartCount += initialRestarts[ctr.Name]"
kubernetes/kubernetes,5c73384abb1ef3b15b95b7aa1ccc7455b8fd5620,Kubernetes Prow Robot,2025-10-03T00:39:10Z,"Merge pull request #134283 from natasha41575/ippr-tests

[InPlacePodVerticalScaling] refactor and increase coverage for pod resize tests",test/e2e/common/node/pod_resize.go,467,1091,1558,"@@ -71,1205 +71,478 @@ func offsetMemory(index int64, value string) string {
 	return ptr.String()
 }
 
-func doPodResizeTests(f *framework.Framework) {
-	type testCase struct {
-		name                string
-		containers          []podresize.ResizableContainerInfo
-		expected            []podresize.ResizableContainerInfo
-		addExtendedResource bool
-		// TODO(123940): test rollback for all test cases once resize is more responsive.
-		testRollback bool
-	}
+func doGuaranteedPodResizeTests(f *framework.Framework) {
+	ginkgo.DescribeTableSubtree(""guaranteed qos - 1 container with resize policy"", func(cpuPolicy, memPolicy v1.ResourceResizeRestartPolicy, resizeInitCtrs bool) {
+		ginkgo.DescribeTable(""resizing"", func(ctx context.Context, desiredCPU, desiredMem string) {
+
+			// The tests for guaranteed pods include extended resources.
+			nodes, err := e2enode.GetReadySchedulableNodes(context.Background(), f.ClientSet)
+			framework.ExpectNoError(err)
+			for _, node := range nodes.Items {
+				e2enode.AddExtendedResource(ctx, f.ClientSet, node.Name, fakeExtendedResource, resource.MustParse(""123""))
+			}
+			defer func() {
+				for _, node := range nodes.Items {
+					e2enode.RemoveExtendedResource(ctx, f.ClientSet, node.Name, fakeExtendedResource)
+				}
+			}()
+
+			originalContainers := makeGuaranteedContainers(1, cpuPolicy, memPolicy, true, true, originalCPU, originalMem)
+			expectedContainers := makeGuaranteedContainers(1, cpuPolicy, memPolicy, true, true, desiredCPU, desiredMem)
+			for i, c := range expectedContainers {
+				// If the pod has init containers, but we are not resizing them, keep the original resources.
+				if c.InitCtr && !resizeInitCtrs {
+					c.Resources = originalContainers[i].Resources
+					expectedContainers[i] = c
+					continue
+				}
+				// For containers where the resize policy is ""restart"", we expect a restart.
+				expectRestart := int32(0)
+				if cpuPolicy == v1.RestartContainer && desiredCPU != originalCPU {
+					expectRestart = 1
+				}
+				if memPolicy == v1.RestartContainer && desiredMem != originalMem {
+					expectRestart = 1
+				}
+				c.RestartCount = expectRestart
+				expectedContainers[i] = c
+			}
+
+			doPatchAndRollback(ctx, f, originalContainers, expectedContainers, true)
 
-	noRestart := v1.NotRequired
-	doRestart := v1.RestartContainer
-	tests := []testCase{
-		{
-			name: ""Guaranteed QoS pod, one container - increase CPU & memory"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one container - decrease CPU only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Guaranteed QoS pod, three containers (c1, c2, c3) - increase: CPU (c1,c3), memory (c2, c3) ; decrease: CPU (c2)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPU), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMem)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPU), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMem)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, reducedCPU), CPULim: offsetCPU(1, reducedCPU), MemReq: offsetMemory(1, increasedMem), MemLim: offsetMemory(1, increasedMem)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, increasedCPU), CPULim: offsetCPU(2, increasedCPU), MemReq: offsetMemory(2, increasedMem), MemLim: offsetMemory(2, increasedMem)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease memory requests only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase memory requests only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: increasedMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase memory limits only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: increasedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod with memory requests + limits - decrease memory limit"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: reducedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU requests only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU limits only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: reducedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase CPU requests only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase CPU limits only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU requests and limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase CPU requests and limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU requests and increase CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase CPU requests and decrease CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: reducedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase memory requests and limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: increasedMem, MemLim: increasedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease memory requests and increase memory limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: reducedMem, MemLim: increasedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU requests and increase memory limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: increasedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease memory requests and increase CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: increasedCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase memory requests and decrease CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: reducedCPULimit, MemReq: increasedMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests - decrease memory request"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: reducedMem},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests - increase cpu request"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, MemReq: originalMem},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu requests and limits - resize with equivalents"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: ""2m"", CPULim: ""10m""},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: ""1m"", CPULim: ""5m""},
-				},
-			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one container - increase CPU (NotRequired) & memory (RestartContainer)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:         ""c1"",
-					Resources:    &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container - decrease CPU (NotRequired) & memory (RestartContainer)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:         ""c1"",
-					Resources:    &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: reducedMem, MemLim: reducedMemLimit},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container - decrease memory request (RestartContainer memory resize policy)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:         ""c1"",
-					Resources:    &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container - increase memory request (NoRestart memory resize policy)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:         ""c1"",
-					Resources:    &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: increasedMem, MemLim: originalMemLimit},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &noRestart,
-					RestartCount: 0,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, three containers - increase c1 resources, no change for c2, decrease c3 resources (no net change for pod)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPULimit), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPULimit), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit, MemReq: increasedMem, MemLim: increasedMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPULimit), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, reducedCPU), CPULim: offsetCPU(2, reducedCPULimit), MemReq: offsetMemory(2, reducedMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, three containers - decrease c1 resources, increase c2 resources, no change for c3 (net increase for pod)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPULimit), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPULimit), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:         ""c2"",
-					Resources:    &cgroups.ContainerResources{CPUReq: offsetCPU(2, increasedCPU), CPULim: offsetCPU(2, increasedCPULimit), MemReq: offsetMemory(2, increasedMem), MemLim: offsetMemory(2, increasedMemLimit)},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPULimit), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, three containers - no change for c1, increase c2 resources, decrease c3 (net decrease for pod)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &doRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPULimit), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMemLimit)},
-					CPUPolicy: &doRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPULimit), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &doRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:         ""c2"",
-					Resources:    &cgroups.ContainerResources{CPUReq: offsetCPU(1, increasedCPU), CPULim: offsetCPU(1, increasedCPULimit), MemReq: offsetMemory(1, increasedMem), MemLim: offsetMemory(1, increasedMemLimit)},
-					CPUPolicy:    &doRestart,
-					MemPolicy:    &noRestart,
-					RestartCount: 1,
-				},
-				{
-					Name:         ""c3"",
-					Resources:    &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: reducedMem, MemLim: reducedMemLimit},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, mixed containers - scale up cpu and memory"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{},
-				},
-			},
 		},
-		{
-			name: ""Burstable QoS pod, mixed containers - add requests"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
+			// All tests will perform the requested resize, and once completed, will roll back the change.
+			// This results in the coverage of both increase and decrease of resources.
+			ginkgo.Entry(""cpu"", increasedCPU, originalMem),
+			ginkgo.Entry(""mem"", originalCPU, increasedMem),
+			ginkgo.Entry(""cpu & mem in the same direction"", increasedCPU, increasedMem),
+			ginkgo.Entry(""cpu & mem in opposite directions"", increasedCPU, reducedMem),
+		)
+	},
+		ginkgo.Entry(""no restart"", v1.NotRequired, v1.NotRequired, false),
+		ginkgo.Entry(""no restart + resize initContainers"", v1.NotRequired, v1.NotRequired, true),
+		ginkgo.Entry(""mem restart"", v1.NotRequired, v1.RestartContainer, false),
+		ginkgo.Entry(""cpu restart"", v1.RestartContainer, v1.NotRequired, false),
+		ginkgo.Entry(""cpu & mem restart"", v1.RestartContainer, v1.RestartContainer, false),
+		ginkgo.Entry(""cpu & mem restart + resize initContainers"", v1.RestartContainer, v1.RestartContainer, true),
+	)
+
+	ginkgo.DescribeTable(""guaranteed pods with multiple containers"", func(ctx context.Context, expectedContainers []podresize.ResizableContainerInfo) {
+		originalContainers := makeGuaranteedContainers(3, v1.NotRequired, v1.NotRequired, false, false, originalCPU, originalMem)
+		for i := range originalContainers {
+			originalContainers[i].CPUPolicy = nil
+			originalContainers[i].MemPolicy = nil
+		}
+
+		doPatchAndRollback(ctx, f, originalContainers, expectedContainers, true)
+	},
+		// All tests will perform the requested resize, and once completed, will roll back the change.
+		// This results in coverage of both the operation as described, and its reverse.
+		ginkgo.Entry(""3 containers - increase cpu & mem on c1, c2, decrease cpu & mem on c3 - net increase"", []podresize.ResizableContainerInfo{
+			{
+				Name:      ""c1"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(0, increasedCPU), CPULim: offsetCPU(0, increasedCPU), MemReq: offsetMemory(0, increasedMem), MemLim: offsetMemory(0, increasedMem)},
+			},
+			{
+				Name:      ""c2"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, increasedCPU), CPULim: offsetCPU(1, increasedCPU), MemReq: offsetMemory(1, increasedMem), MemLim: offsetMemory(1, increasedMem)},
+			},
+			{
+				Name:      ""c3"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, reducedCPU), CPULim: offsetCPU(2, reducedCPU), MemReq: offsetMemory(2, reducedMem), MemLim: offsetMemory(2, reducedMem)},
+			},
+		}),
+		ginkgo.Entry(""3 containers - increase cpu & mem on c1, decrease cpu & mem on c2, c3 - net decrease"", []podresize.ResizableContainerInfo{
+			{
+				Name:      ""c1"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(0, increasedCPU), CPULim: offsetCPU(0, increasedCPU), MemReq: offsetMemory(0, increasedMem), MemLim: offsetMemory(0, increasedMem)},
+			},
+			{
+				Name:      ""c2"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, reducedCPU), CPULim: offsetCPU(1, reducedCPU), MemReq: offsetMemory(1, reducedMem), MemLim: offsetMemory(1, reducedMem)},
+			},
+			{
+				Name:      ""c3"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, reducedCPU), CPULim: offsetCPU(2, reducedCPU), MemReq: offsetMemory(2, reducedMem), MemLim: offsetMemory(2, reducedMem)},
+			},
+		}),
+		ginkgo.Entry(""3 containers - increase: CPU (c1,c3), memory (c2, c3) ; decrease: CPU (c2)"", []podresize.ResizableContainerInfo{
+			{
+				Name:      ""c1"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(0, increasedCPU), CPULim: offsetCPU(0, increasedCPU), MemReq: offsetMemory(0, originalMem), MemLim: offsetMemory(0, originalMem)},
+			},
+			{
+				Name:      ""c2"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, reducedCPU), CPULim: offsetCPU(1, reducedCPU), MemReq: offsetMemory(1, increasedMem), MemLim: offsetMemory(1, increasedMem)},
+			},
+			{
+				Name:      ""c3"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, increasedCPU), CPULim: offsetCPU(2, increasedCPU), MemReq: offsetMemory(2, increasedMem), MemLim: offsetMemory(2, increasedMem)},
+			},
+		}),
+	)
+}
+
+func doBurstablePodResizeTests(f *framework.Framework) {
+	ginkgo.DescribeTableSubtree(""burstable pods - 1 container with all requests & limits set and resize policy"", func(cpuPolicy, memPolicy v1.ResourceResizeRestartPolicy) {
+		ginkgo.DescribeTable(""resizing"", func(ctx context.Context, desiredCPU, desiredCPULimit, desiredMem, desiredMemLimit string) {
+			originalContainers := makeBurstableContainers(1, cpuPolicy, memPolicy, originalCPU, originalCPULimit, originalMem, originalMemLimit)
+			expectedContainers := makeBurstableContainers(1, cpuPolicy, memPolicy, desiredCPU, desiredCPULimit, desiredMem, desiredMemLimit)
+			for i, c := range expectedContainers {
+				// For containers where the resize policy is ""restart"", we expect a restart.
+				expectRestart := int32(0)
+				if cpuPolicy == v1.RestartContainer && (desiredCPU != originalCPU || desiredCPULimit != originalCPULimit) {
+					expectRestart = 1
+				}
+				if memPolicy == v1.RestartContainer && (desiredMem != originalMem || desiredMemLimit != originalMemLimit) {
+					expectRestart = 1
+				}
+				c.RestartCount = expectRestart
+				expectedContainers[i] = c
+			}
+
+			doPatchAndRollback(ctx, f, originalContainers, expectedContainers, true)
+		},
+			// All tests will perform the requested resize, and once completed, will roll back the change.
+			// This results in the coverage of both increase and decrease of resources.
+			ginkgo.Entry(""cpu requests"", increasedCPU, originalCPULimit, originalMem, originalMemLimit),
+			ginkgo.Entry(""cpu limits"", originalCPU, increasedCPULimit, originalMem, originalMemLimit),
+			ginkgo.Entry(""mem requests"", originalCPU, originalCPULimit, increasedMem, originalMemLimit),
+			ginkgo.Entry(""mem limits"", originalCPU, originalCPULimit, originalMem, increasedMemLimit),
+			ginkgo.Entry(""all resources in the same direction"", increasedCPU, increasedCPULimit, increasedMem, increasedMemLimit),
+			ginkgo.Entry(""cpu & mem in opposite directions"", increasedCPU, increasedCPULimit, reducedMem, reducedMemLimit),
+			ginkgo.Entry(""requests & limits in opposite directions"", reducedCPU, increasedCPULimit, increasedMem, reducedMemLimit),
+		)
+	},
+		ginkgo.Entry(""no restart"", v1.NotRequired, v1.NotRequired),
+		ginkgo.Entry(""cpu restart"", v1.RestartContainer, v1.NotRequired),
+		ginkgo.Entry(""mem restart"", v1.NotRequired, v1.RestartContainer),
+		ginkgo.Entry(""cpu & mem restart"", v1.RestartContainer, v1.RestartContainer),
+	)
+
+	// The following tests cover the remaining burstable pod scenarios:
+	// - multiple containers
+	// - adding limits where only requests were previously set
+	// - adding requests where none were previously set
+	// - resizing with equivalents (e.g. 2m -> 1m)
+	ginkgo.DescribeTable(""burstable pods - extended"", func(ctx context.Context, originalContainers, expectedContainers []podresize.ResizableContainerInfo, doRollback bool) {
+		doPatchAndRollback(ctx, f, originalContainers, expectedContainers, doRollback)
+	},
+		ginkgo.Entry(""6 containers - various operations performed (including adding limits and requests)"",
+			[]podresize.ResizableContainerInfo{
+				{
+					// c1 starts with CPU requests only; increase CPU requests + add CPU limits
+					Name:      ""c1"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
+				},
+				{
+					// c2 starts with memory requests only; increase memory requests + add memory limits
 					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					Resources: &cgroups.ContainerResources{MemReq: originalMem},
 				},
 				{
-					Name:      ""c2"",
+					// c3 starts with CPU and memory requests; decrease memory requests only
+					Name:      ""c3"",
 					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
 				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, mixed containers - add limits"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					// c4 starts with CPU requests only; decrease CPU requests + add memory requests
+					Name:      ""c4"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					// c5 starts with memory requests only; increase memory requests + add CPU requests
+					Name:      ""c5"",
+					Resources: &cgroups.ContainerResources{MemReq: originalMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
+					// c1 starts with CPU requests only; increase CPU requests + add CPU limits
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit},
 				},
 				{
+					// c2 starts with memory requests only; decrease memory requests + add memory limits
 					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					Resources: &cgroups.ContainerResources{MemReq: reducedMem, MemLim: increasedMemLimit},
 				},
-			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one container - increase CPU & memory with an extended resource"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name: ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem,
-						ExtendedResourceReq: ""1"", ExtendedResourceLim: ""1""},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					// c3 starts with CPU and memory requests; decrease memory requests onloy
+					Name:      ""c3"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: reducedMem},
 				},
-			},
-			expected: []podresize.ResizableContainerInfo{
 				{
-					Name: ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem,
-						ExtendedResourceReq: ""1"", ExtendedResourceLim: ""1""},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					// c4 starts with CPU requests only; decrease CPU requests + add memory requests
+					Name:      ""c4"",
+					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, MemReq: originalMem},
 				},
-			},
-			addExtendedResource: true,
-		},
-		{
-			name: ""BestEffort QoS pod - empty resize"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{},
+					// c5 starts with memory requests only; increase memory requests + add CPU requests
+					Name:      ""c5"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: increasedMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			false,
+		),
+		ginkgo.Entry(""resize with equivalents"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{},
+					Resources: &cgroups.ContainerResources{CPUReq: ""2m"", CPULim: ""10m""},
 				},
 			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one restartable init container - increase CPU & memory"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy:     &noRestart,
-					MemPolicy:     &noRestart,
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: ""1m"", CPULim: ""5m""},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
+			true,
+		),
+	)
+
+}
+
+func doPodResizePatchErrorTests(f *framework.Framework) {
+	ginkgo.DescribeTable(""apply invalid resize patch requests"", func(ctx context.Context, originalContainers, desiredContainers []podresize.ResizableContainerInfo, patchError string, waitForStart bool) {
+		podClient := e2epod.NewPodClient(f)
+		var newPod *v1.Pod
+
+		ginkgo.By(""creating and verifying pod"")
+		if waitForStart {
+			newPod = createAndVerifyPod(ctx, f, podClient, originalContainers)
+		} else {
+			tStamp := strconv.Itoa(time.Now().Nanosecond())
+			testPod := podresize.MakePodWithResizableContainers(f.Namespace.Name, ""testpod"", tStamp, originalContainers)
+			testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
+			newPod = podClient.Create(ctx, testPod)
+		}
+
+		ginkgo.By(""patching pod for resize"")
+		patch := podresize.MakeResizePatch(originalContainers, desiredContainers)
+		_, pErr := f.ClientSet.CoreV1().Pods(newPod.Namespace).Patch(ctx, newPod.Name,
+			types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
+		gomega.Expect(pErr).To(gomega.HaveOccurred())
+		gomega.Expect(pErr.Error()).To(gomega.ContainSubstring(patchError))
+
+		patchedPod, getErr := f.ClientSet.CoreV1().Pods(newPod.Namespace).Get(ctx, newPod.Name, metav1.GetOptions{})
+		framework.ExpectNoError(getErr)
+
+		ginkgo.By(""verifying pod resources after patch"")
+		podresize.VerifyPodResources(patchedPod, originalContainers)
+
+		if waitForStart {
+			ginkgo.By(""verifying pod status resources after patch"")
+			framework.ExpectNoError(podresize.VerifyPodStatusResources(patchedPod, originalContainers))
+		}
+
+		ginkgo.By(""deleting pod"")
+		podClient.DeleteSync(ctx, newPod.Name, metav1.DeleteOptions{}, f.Timeouts.PodDelete)
+	},
+		ginkgo.Entry(""BestEffort pod - request memory"",
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					CPUPolicy:     &noRestart,
-					MemPolicy:     &noRestart,
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Name: ""c1"",
 				},
 			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one restartable init container - decrease CPU & increase memory"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{MemReq: originalMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
+			""Pod QOS Class may not change as a result of resizing"",
+			true,
+		),
+		ginkgo.Entry(""BestEffort pod - request cpu"",
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Name: ""c1"",
 				},
 			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one container, one restartable init container - decrease init container CPU"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""Pod QOS Class may not change as a result of resizing"",
+			true,
+		),
+		ginkgo.Entry(""Guaranteed pod - remove cpu & memory limits"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
 					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPU, MemReq: originalMem, MemLim: originalMem},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
-				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - increase init container CPU & memory"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""resource limits cannot be removed"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - remove cpu & memory limits + increase requests"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit, MemReq: increasedMem, MemLim: increasedMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: increasedMemLimit},
 				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - decrease init container CPU only"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, MemReq: increasedMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""resource limits cannot be removed"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - remove memory requests"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{MemReq: originalMem},
 				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - increase init container CPU only"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""resource requests cannot be removed"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - remove cpu requests"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - decrease init container memory requests only"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""resource requests cannot be removed"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - reorder containers"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Name:      ""c2"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - increase init container memory only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Name:      ""c2"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
-			},
-			expected: []podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: increasedMem, MemLim: increasedMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
-				},
-			},
-		},
-	}
-
-	for idx := range tests {
-		tc := tests[idx]
-
-		ginkgo.It(tc.name, func(ctx context.Context) {
-			podClient := e2epod.NewPodClient(f)
-			var testPod, patchedPod *v1.Pod
-			var pErr error
-
-			tStamp := strconv.Itoa(time.Now().Nanosecond())
-			testPod = podresize.MakePodWithResizableContainers(f.Namespace.Name, """", tStamp, tc.containers)
-			testPod.GenerateName = ""resize-test-""
-			testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
-
-			if tc.addExtendedResource {
-				nodes, err := e2enode.GetReadySchedulableNodes(context.Background(), f.ClientSet)
-				framework.ExpectNoError(err)
-
-				for _, node := range nodes.Items {
-					e2enode.AddExtendedResource(ctx, f.ClientSet, node.Name, fakeExtendedResource, resource.MustParse(""123""))
-				}
-				defer func() {
-					for _, node := range nodes.Items {
-						e2enode.RemoveExtendedResource(ctx, f.ClientSet, node.Name, fakeExtendedResource)
-					}
-				}()
-			}
-
-			ginkgo.By(""creating pod"")
-			newPod := podClient.CreateSync(ctx, testPod)
-
-			ginkgo.By(""verifying initial pod resources are as expected"")
-			podresize.VerifyPodResources(newPod, tc.containers)
-			ginkgo.By(""verifying initial pod resize policy is as expected"")
-			podresize.VerifyPodResizePolicy(newPod, tc.containers)
-
-			ginkgo.By(""verifying initial pod status resources are as expected"")
-			framework.ExpectNoError(podresize.VerifyPodStatusResources(newPod, tc.containers))
-			ginkgo.By(""verifying initial cgroup config are as expected"")
-			framework.ExpectNoError(podresize.VerifyPodContainersCgroupValues(ctx, f, newPod, tc.containers))
-
-			patchAndVerify := func(containers, desiredContainers []podresize.ResizableContainerInfo, opStr string) {
-				ginkgo.By(fmt.Sprintf(""patching pod for %s"", opStr))
-				patch := podresize.MakeResizePatch(containers, desiredContainers)
-				patchedPod, pErr = f.ClientSet.CoreV1().Pods(newPod.Namespace).Patch(ctx, newPod.Name,
-					types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
-				framework.ExpectNoError(pErr, fmt.Sprintf(""failed to patch pod for %s"", opStr))
-				expected := podresize.UpdateExpectedContainerRestarts(ctx, patchedPod, desiredContainers)
-
-				ginkgo.By(fmt.Sprintf(""verifying pod patched for %s"", opStr))
-				podresize.VerifyPodResources(patchedPod, expected)
-
-				ginkgo.By(fmt.Sprintf(""waiting for %s to be actuated"", opStr))
-				resizedPod := podresize.WaitForPodResizeActuation(ctx, f, podClient, newPod, expected)
-				podresize.ExpectPodResized(ctx, f, resizedPod, expected)
-			}
-
-			patchAndVerify(tc.containers, tc.expected, ""resize"")
-
-			if tc.testRollback {
-				// Resize has been actuated, test rollback
-				rollbackContainers := make([]podresize.ResizableContainerInfo, len(tc.containers))
-				copy(rollbackContainers, tc.containers)
-				for i, c := range rollbackContainers {
-					gomega.Expect(c.Name).To(gomega.Equal(tc.expected[i].Name),
-						""test case containers & expectations should be in the same order"")
-					// Resizes that trigger a restart should trigger a second restart when rolling back.
-					rollbackContainers[i].RestartCount = tc.expected[i].RestartCount
-				}
-
-				patchAndVerify(tc.expected, rollbackContainers, ""rollback"")
-			}
-
-			ginkgo.By(""deleting pod"")
-			podClient.DeleteSync(ctx, newPod.Name, metav1.DeleteOptions{}, f.Timeouts.PodDelete)
-		})
-	}
-}
-
-func doPodResizeErrorTests(f *framework.Framework) {
-
-	type testCase struct {
-		name          string
-		containers    []podresize.ResizableContainerInfo
-		attemptResize []podresize.ResizableContainerInfo // attempted resize target
-		patchError    string
-	}
-
-	tests := []testCase{
-		{
-			name: ""BestEffort pod - try requesting memory, expect error"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name: ""c1"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			""spec.containers[0].name: Forbidden: containers may not be renamed or reordered on resize, spec.containers[1].name: Forbidden: containers may not be renamed or reordered on resize"",
+			true,
+		),
+		ginkgo.Entry(""Guaranteed pod - rename containers"",
+			[]podresize.ResizableContainerInfo{
 				{
-					Name: ""c1"",
-					Resources: &cgroups.ContainerResources{
-						MemReq: originalMem,
-					},
+					Name:      ""c1-old"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
-			},
-			patchError: ""Pod QOS Class may not change as a result of resizing"",
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - remove memory limits"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Name:      ""c2-old"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem},
+					Name:      ""c1-new"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
-			},
-			patchError: ""resource limits cannot be removed"",
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - remove CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Name:      ""c2-new"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			""spec.containers[0].name: Forbidden: containers may not be renamed or reordered on resize, spec.containers[1].name: Forbidden: containers may not be renamed or reordered on resize"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - set requests == limits"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: increasedMemLimit},
 				},
 			},
-			patchError: ""resource limits cannot be removed"",
-		},
-		{
-			name: ""Burstable QoS pod, one container with memory requests + limits, cpu requests - remove CPU requests"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{CPUReq: increasedCPULimit, CPULim: increasedCPULimit, MemReq: increasedMemLimit, MemLim: increasedMemLimit},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			""Pod QOS Class may not change as a result of resizing"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - resize ephemeral storage"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem, EphStorReq: ""1""},
 				},
 			},
-			patchError: ""resource requests cannot be removed"",
-		},
-		{
-			name: ""Burstable QoS pod, one container with CPU requests + limits, cpu requests - remove memory requests"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem},
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem, EphStorReq: ""3""},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			""only cpu and memory resources are mutable"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - nonrestartable initContainer"",
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit},
+					Name:          ""c1-init"",
+					InitCtr:       true,
+					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
+					RestartPolicy: v1.ContainerRestartPolicyNever,
 				},
-			},
-			patchError: ""resource requests cannot be removed"",
-		},
-		{
-			name: ""Burstable QoS pod, two containers with cpu & memory requests + limits - reorder containers"",
-			containers: []podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Name:          ""c1-init"",
+					InitCtr:       true,
+					Resources:     &cgroups.ContainerResources{CPUReq: increasedCPU, MemReq: increasedMem},
+					RestartPolicy: v1.ContainerRestartPolicyNever,
 				},
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{},
 				},
 			},
-			patchError: ""spec.containers[0].name: Forbidden: containers may not be renamed or reordered on resize, spec.containers[1].name: Forbidden: containers may not be renamed or reordered on resize"",
-		},
-	}
-
-	for idx := range tests {
-		tc := tests[idx]
-
-		ginkgo.It(tc.name, func(ctx context.Context) {
-			podClient := e2epod.NewPodClient(f)
-			var testPod, patchedPod *v1.Pod
-			var pErr error
-
-			tStamp := strconv.Itoa(time.Now().Nanosecond())
-			testPod = podresize.MakePodWithResizableContainers(f.Namespace.Name, ""testpod"", tStamp, tc.containers)
-			testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
-
-			ginkgo.By(""creating pod"")
-			newPod := podClient.CreateSync(ctx, testPod)
-
-			ginkgo.By(""verifying initial pod resources, and policy are as expected"")
-			podresize.VerifyPodResources(newPod, tc.containers)
-			podresize.VerifyPodResizePolicy(newPod, tc.containers)
-
-			ginkgo.By(""verifying initial pod status resources and cgroup config are as expected"")
-			framework.ExpectNoError(podresize.VerifyPodStatusResources(newPod, tc.containers))
-
-			ginkgo.By(""patching pod for resize"")
-			patch := podresize.MakeResizePatch(tc.containers, tc.attemptResize)
-			patchedPod, pErr = f.ClientSet.CoreV1().Pods(newPod.Namespace).Patch(ctx, newPod.Name,
-				types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
-			if tc.patchError == """" {
-				framework.ExpectNoError(pErr, ""failed to patch pod for resize"")
-			} else {
-				gomega.Expect(pErr).To(gomega.HaveOccurred())
-				gomega.Expect(pErr.Error()).To(gomega.ContainSubstring(tc.patchError))
-				patchedPod = newPod
-			}
-
-			ginkgo.By(""verifying pod resources after patch"")
-			podresize.VerifyPodResources(patchedPod, tc.containers)
-
-			ginkgo.By(""verifying pod status resources after patch"")
-			framework.ExpectNoError(podresize.VerifyPodStatusResources(patchedPod, tc.containers))
-
-			ginkgo.By(""deleting pod"")
-			podClient.DeleteSync(ctx, newPod.Name, metav1.DeleteOptions{}, f.Timeouts.PodDelete)
-		})
-	}
+			""resources for non-sidecar init containers are immutable"",
+			false,
+		),
+	)
 }
 
 func doPodResizeMemoryLimitDecreaseTest(f *framework.Framework) {
@@ -1279,30 +552,13 @@ func doPodResizeMemoryLimitDecreaseTest(f *framework.Framework) {
 	// 3. Revert the limit back to the original value - should succeed
 	ginkgo.It(""decrease memory limit below usage"", func(ctx context.Context) {
 		podClient := e2epod.NewPodClient(f)
-		var testPod *v1.Pod
-		var pErr error
-
 		original := []podresize.ResizableContainerInfo{{
 			Name:      ""c1"",
 			Resources: &cgroups.ContainerResources{MemReq: originalMem, MemLim: originalMem},
 		}}
 
-		tStamp := strconv.Itoa(time.Now().Nanosecond())
-		testPod = podresize.MakePodWithResizableContainers(f.Namespace.Name, ""testpod"", tStamp, original)
-		testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
-
-		ginkgo.By(""creating pod"")
-		testPod = podClient.CreateSync(ctx, testPod)
-
-		ginkgo.By(""verifying initial pod resources are as expected"")
-		podresize.VerifyPodResources(testPod, original)
-		ginkgo.By(""verifying initial pod resize policy is as expected"")
-		podresize.VerifyPodResizePolicy(testPod, original)
-
-		ginkgo.By(""verifying initial pod status resources are as expected"")
-		framework.ExpectNoError(podresize.VerifyPodStatusResources(testPod, original))
-		ginkgo.By(""verifying initial cgroup config are as expected"")
-		framework.ExpectNoError(podresize.VerifyPodContainersCgroupValues(ctx, f, testPod, original))
+		ginkgo.By(""creating and verifying pod"")
+		testPod := createAndVerifyPod(ctx, f, podClient, original)
 
 		// 1. Decrease the limit a little bit - should succeed
 		ginkgo.By(""Patching pod with a slightly lowered memory limit"")
@@ -1311,7 +567,7 @@ func doPodResizeMemoryLimitDecreaseTest(f *framework.Framework) {
 			Resources: &cgroups.ContainerResources{MemReq: reducedMem, MemLim: reducedMem},
 		}}
 		patch := podresize.MakeResizePatch(original, viableLoweredLimit)
-		testPod, pErr = f.ClientSet.CoreV1().Pods(testPod.Namespace).Patch(ctx, testPod.Name,
+		testPod, pErr := f.ClientSet.CoreV1().Pods(testPod.Namespace).Patch(ctx, testPod.Name,
 			types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
 		framework.ExpectNoError(pErr, ""failed to patch pod for viable lowered limit"")
 
@@ -1419,7 +675,127 @@ var _ = SIGDescribe(""Pod InPlace Resize Container"", framework.WithFeatureGate(fe
 		}
 	})
 
-	doPodResizeTests(f)
-	doPodResizeErrorTests(f)
+	doGuaranteedPodResizeTests(f)
+	doBurstablePodResizeTests(f)
+	doPodResizePatchErrorTests(f)
 	doPodResizeMemoryLimitDecreaseTest(f)
 })
+
+func doPatchAndRollback(ctx context.Context, f *framework.Framework, originalContainers, expectedContainers []podresize.ResizableContainerInfo, doRollback bool) {
+	ginkgo.By(""creating and verifying pod"")
+	podClient := e2epod.NewPodClient(f)
+	newPod := createAndVerifyPod(ctx, f, podClient, originalContainers)
+
+	ginkgo.By(""patching and verifying pod for resize"")
+	patchAndVerify(ctx, f, podClient, newPod, originalContainers, expectedContainers, ""resize"")
+
+	if doRollback {
+		// Resize has been actuated, test the reverse operation.
+		rollbackContainers := createRollbackContainers(originalContainers, expectedContainers)
+		ginkgo.By(""patching and verifying pod for rollback"")
+		patchAndVerify(ctx, f, podClient, newPod, expectedContainers, rollbackContainers, ""rollback"")
+	}
+
+	ginkgo.By(""deleting pod"")
+	podClient.DeleteSync(ctx, newPod.Name, metav1.DeleteOptions{}, f.Timeouts.PodDelete)
+}
+
+func patchAndVerify(ctx context.Context, f *framework.Framework, podClient *e2epod.PodClient, newPod *v1.Pod, originalContainers, expectedContainers []podresize.ResizableContainerInfo, opStr string) {
+	patch := podresize.MakeResizePatch(originalContainers, expectedContainers)
+	patchedPod, pErr := f.ClientSet.CoreV1().Pods(newPod.Namespace).Patch(ctx, newPod.Name,
+		types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
+	framework.ExpectNoError(pErr, fmt.Sprintf(""failed to patch pod for %s"", opStr))
+
+	expected := podresize.UpdateExpectedContainerRestarts(ctx, patchedPod, expectedContainers)
+
+	podresize.VerifyPodResources(patchedPod, expected)
+	resizedPod := podresize.WaitForPodResizeActuation(ctx, f, podClient, newPod, expected)
+	podresize.ExpectPodResized(ctx, f, resizedPod, expected)
+}
+
+func createAndVerifyPod(ctx context.Context, f *framework.Framework, podClient *e2epod.PodClient, originalContainers []podresize.ResizableContainerInfo) *v1.Pod {
+	tStamp := strconv.Itoa(time.Now().Nanosecond())
+	testPod := podresize.MakePodWithResizableContainers(f.Namespace.Name, """", tStamp, originalContainers)
+	testPod.GenerateName = ""resize-test-""
+	testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
+
+	newPod := podClient.CreateSync(ctx, testPod)
+	podresize.VerifyPodResources(newPod, originalContainers)
+	podresize.VerifyPodResizePolicy(newPod, originalContainers)
+	framework.ExpectNoError(podresize.VerifyPodStatusResources(newPod, originalContainers))
+	framework.ExpectNoError(podresize.VerifyPodContainersCgroupValues(ctx, f, newPod, originalContainers))
+
+	return newPod
+}
+
+func makeGuaranteedContainers(numContainers int,
+	cpuPolicy, memPolicy v1.ResourceResizeRestartPolicy,
+	initContainers, extendedResources bool,
+	cpu, mem string) []podresize.ResizableContainerInfo {
+
+	containers := []podresize.ResizableContainerInfo{}
+	for i := range numContainers {
+		// Offset the resources a bit so that in multi-container pods, not all containers have the same resources.
+		resources := &cgroups.ContainerResources{
+			CPUReq: offsetCPU(i, cpu),
+			CPULim: offsetCPU(i, cpu),
+			MemReq: offsetMemory(int64(i), mem),
+			MemLim: offsetMemory(int64(i), mem),
+		}
+
+		if extendedResources {
+			resources.ExtendedResourceReq = ""1""
+			resources.ExtendedResourceLim = ""1""
+		}
+
+		containers = append(containers, podresize.ResizableContainerInfo{
+			Name:      fmt.Sprintf(""c%d"", i+1),
+			Resources: resources,
+			CPUPolicy: &cpuPolicy,
+			MemPolicy: &memPolicy,
+		})
+	}
+
+	if initContainers {
+		containers = append(containers, podresize.ResizableContainerInfo{
+			Name:          ""c1-init"",
+			Resources:     &cgroups.ContainerResources{CPUReq: cpu, CPULim: cpu, MemReq: mem, MemLim: mem},
+			InitCtr:       true,
+			RestartPolicy: v1.ContainerRestartPolicyAlways,
+			CPUPolicy:     &cpuPolicy,
+			MemPolicy:     &memPolicy,
+		})
+	}
+
+	return containers
+}
+
+func makeBurstableContainers(numContainers int,
+	cpuPolicy, memPolicy v1.ResourceResizeRestartPolicy,
+	cpu, cpuLimit, mem, memLimit string) []podresize.ResizableContainerInfo {
+
+	containers := []podresize.ResizableContainerInfo{}
+	for i := range numContainers {
+		// Offset the resources a bit so that in multi-container pods, not all containers have the same resources.
+		resources := &cgroups.ContainerResources{CPUReq: offsetCPU(i, cpu), CPULim: offsetCPU(i, cpuLimit), MemReq: offsetMemory(int64(i), mem), MemLim: offsetMemory(int64(i), memLimit)}
+		containers = append(containers, podresize.ResizableContainerInfo{
+			Name:      fmt.Sprintf(""c%d"", i+1),
+			Resources: resources,
+			CPUPolicy: &cpuPolicy,
+			MemPolicy: &memPolicy,
+		})
+	}
+	return containers
+}
+
+func createRollbackContainers(originalContainers, expectedContainers []podresize.ResizableContainerInfo) []podresize.ResizableContainerInfo {
+	rollbackContainers := make([]podresize.ResizableContainerInfo, len(originalContainers))
+	copy(rollbackContainers, originalContainers)
+	for i, c := range rollbackContainers {
+		gomega.Expect(c.Name).To(gomega.Equal(expectedContainers[i].Name),
+			""test case containers & expectations should be in the same order"")
+		// Resizes that trigger a restart should trigger a second restart when rolling back.
+		rollbackContainers[i].RestartCount = expectedContainers[i].RestartCount
+	}
+	return rollbackContainers
+}"
kubernetes/kubernetes,5da3bd6eb5d5a1a3d885ea5b21ce6b6d198029d5,Kubernetes Prow Robot,2025-10-03T00:38:58Z,"Merge pull request #134127 from aojea/apiserver_noproxy

integration test: webhook proxy behavior",test/integration/apiserver/httpproxy/httpproxy_test.go,259,0,259,"@@ -0,0 +1,259 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package httpproxy
+
+import (
+	""context""
+	""encoding/json""
+	""encoding/pem""
+	""fmt""
+	""io""
+	""net/http""
+	""net/http/httptest""
+	""net/url""
+	""strings""
+	""testing""
+	""time""
+
+	admissionv1 ""k8s.io/api/admission/v1""
+	admissionregistrationv1 ""k8s.io/api/admissionregistration/v1""
+	corev1 ""k8s.io/api/core/v1""
+	metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
+	utilnettesting ""k8s.io/apimachinery/pkg/util/net/testing""
+	""k8s.io/client-go/kubernetes""
+	kastesting ""k8s.io/kubernetes/cmd/kube-apiserver/app/testing""
+	""k8s.io/kubernetes/test/integration/framework""
+	""k8s.io/kubernetes/test/utils/fakedns""
+)
+
+func TestEgressToWebhookWithProxy(t *testing.T) {
+	// Go's http.ProxyFromEnvironment bypasses the proxy
+	// for localhost/127.0.0.1. To test this, we must make the HTTP client
+	// resolve a non-local hostname to 127.0.0.1.
+	const (
+		webhookHostname = ""webhook.example.com""
+		proxyHostname   = ""proxy.example.com""
+	)
+
+	hosts := map[string]string{
+		webhookHostname: ""127.0.0.1"",
+		proxyHostname:   ""127.0.0.1"",
+	}
+
+	// Fake DNS server
+	dnsServer, err := fakedns.NewServer(hosts)
+	if err != nil {
+		t.Fatalf(""failed to create fake DNS server: %v"", err)
+	}
+	dnsServer.Hijack(t)
+
+	webhookHit := make(chan struct{}, 2)
+	webhookServer := httptest.NewUnstartedServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
+		t.Log(""Webhook received request"")
+		w.Header().Set(""Content-Type"", ""application/json"")
+		body, err := io.ReadAll(r.Body)
+		if err != nil {
+			t.Logf(""Failed to read webhook request body: %v"", err)
+			http.Error(w, ""failed to read body"", http.StatusBadRequest)
+			return
+		}
+		var review admissionv1.AdmissionReview
+		if err := json.Unmarshal(body, &review); err != nil {
+			t.Logf(""Failed to unmarshal admission review: %v"", err)
+			http.Error(w, ""failed to unmarshal"", http.StatusBadRequest)
+			return
+		}
+
+		resp, err := json.Marshal(admissionv1.AdmissionReview{
+			TypeMeta: metav1.TypeMeta{APIVersion: ""admission.k8s.io/v1"", Kind: ""AdmissionReview""},
+			Response: &admissionv1.AdmissionResponse{UID: review.Request.UID, Allowed: true},
+		})
+		if err != nil {
+			t.Logf(""Failed to marshal admission response: %v"", err)
+			http.Error(w, ""failed to marshal response"", http.StatusInternalServerError)
+			return
+		}
+		_, _ = w.Write(resp)
+		select {
+		case webhookHit <- struct{}{}:
+		default:
+		}
+	}))
+	webhookServer.EnableHTTP2 = true
+	webhookServer.StartTLS()
+	defer webhookServer.Close() //nolint:errcheck
+
+	// Proxy server
+	proxyHit := make(chan struct{}, 2)
+	proxyHandler := utilnettesting.NewHTTPProxyHandler(t, func(r *http.Request) bool {
+		t.Logf(""Proxy received request for: %s %s"", r.Method, r.URL.String())
+		select {
+		case proxyHit <- struct{}{}:
+		default:
+		}
+		return true
+	})
+	defer proxyHandler.Wait()
+
+	proxyServer := httptest.NewUnstartedServer(proxyHandler)
+	proxyServer.Start()
+	defer proxyServer.Close() //nolint:errcheck
+
+	proxyServerURL, err := url.Parse(proxyServer.URL)
+	if err != nil {
+		t.Fatalf(""failed to parse proxy server URL: %v"", err)
+	}
+	proxyURL := fmt.Sprintf(""http://%s:%s"", proxyHostname, proxyServerURL.Port())
+
+	etcd := framework.SharedEtcd()
+
+	// Construct the webhook URL using our fake hostname and the real port.
+	webhookServerURL, err := url.Parse(webhookServer.URL)
+	if err != nil {
+		t.Fatalf(""failed to parse webhook server URL: %v"", err)
+	}
+	webhookURL := fmt.Sprintf(""https://%s:%s"", webhookHostname, webhookServerURL.Port())
+	caCertDER := webhookServer.TLS.Certificates[0].Certificate[0]
+	caCertPEM := pem.EncodeToMemory(&pem.Block{
+		Type:  ""CERTIFICATE"",
+		Bytes: caCertDER,
+	})
+
+	sideEffectsNone := admissionregistrationv1.SideEffectClassNone
+	failPolicy := admissionregistrationv1.Fail
+	webhookConfig := &admissionregistrationv1.ValidatingWebhookConfiguration{
+		ObjectMeta: metav1.ObjectMeta{Name: ""test-webhook-proxy""},
+		Webhooks: []admissionregistrationv1.ValidatingWebhook{
+			{
+				Name: ""test-proxy.example.com"",
+				ClientConfig: admissionregistrationv1.WebhookClientConfig{
+					URL:      &webhookURL,
+					CABundle: caCertPEM,
+				},
+				Rules: []admissionregistrationv1.RuleWithOperations{
+					{
+						Operations: []admissionregistrationv1.OperationType{admissionregistrationv1.Create},
+						Rule: admissionregistrationv1.Rule{
+							APIGroups:   []string{""""},
+							APIVersions: []string{""v1""},
+							Resources:   []string{""pods""},
+						},
+					},
+				},
+				SideEffects:             &sideEffectsNone,
+				AdmissionReviewVersions: []string{""v1""},
+				TimeoutSeconds:          &[]int32{30}[0],
+				FailurePolicy:           &failPolicy,
+			},
+		},
+	}
+
+	// Test with HTTP_PROXY
+	t.Log(""Testing with HTTP_PROXY"")
+	t.Setenv(""HTTP_PROXY"", proxyURL)
+	t.Setenv(""HTTPS_PROXY"", proxyURL)
+	t.Setenv(""NO_PROXY"", """") // Ensure NO_PROXY is cleared
+	serverA := kastesting.StartTestServerOrDie(t, kastesting.NewDefaultTestServerOptions(), []string{""--disable-admission-plugins=ServiceAccount""}, etcd)
+
+	clientA, err := kubernetes.NewForConfig(serverA.ClientConfig)
+	if err != nil {
+		t.Fatalf(""failed to create kubernetes client: %v"", err)
+	}
+
+	_, err = clientA.AdmissionregistrationV1().ValidatingWebhookConfigurations().Create(context.Background(), webhookConfig, metav1.CreateOptions{})
+	if err != nil {
+		t.Fatalf(""failed to create webhook config: %v"", err)
+	}
+	// It can take a moment for the webhook to be consistently available.
+	time.Sleep(2 * time.Second)
+
+	pod := &corev1.Pod{
+		ObjectMeta: metav1.ObjectMeta{Name: ""test-pod""},
+		Spec: corev1.PodSpec{
+			Containers: []corev1.Container{{Name: ""test"", Image: ""test""}},
+		},
+	}
+	_, err = clientA.CoreV1().Pods(""default"").Create(context.Background(), pod, metav1.CreateOptions{})
+	if err != nil {
+		t.Errorf(""failed to create pod: %v"", err)
+	}
+
+	select {
+	case <-proxyHit:
+		t.Log(""Proxy was hit as expected"")
+	case <-time.After(5 * time.Second):
+		t.Fatal(""Proxy was not hit"")
+	}
+	select {
+	case <-webhookHit:
+		t.Log(""Webhook was hit as expected"")
+	case <-time.After(5 * time.Second):
+		t.Fatal(""Webhook was not hit"")
+	}
+
+	serverA.TearDownFn()
+
+	// Clear channels for the next run
+	for len(proxyHit) > 0 {
+		<-proxyHit
+	}
+	for len(webhookHit) > 0 {
+		<-webhookHit
+	}
+
+	// Part 2: Test with NO_PROXY
+	t.Log(""Testing with NO_PROXY"")
+	t.Setenv(""HTTP_PROXY"", proxyURL)
+	t.Setenv(""HTTPS_PROXY"", proxyURL)
+	// Use the fake hostname in NO_PROXY
+	t.Setenv(""NO_PROXY"", strings.Join([]string{webhookHostname, ""127.0.0.1"", ""localhost""}, "",""))
+
+	serverB := kastesting.StartTestServerOrDie(t, kastesting.NewDefaultTestServerOptions(), []string{""--disable-admission-plugins=ServiceAccount""}, etcd)
+	defer serverB.TearDownFn()
+
+	clientB, err := kubernetes.NewForConfig(serverB.ClientConfig)
+	if err != nil {
+		t.Fatalf(""failed to create kubernetes client: %v"", err)
+	}
+
+	pod2 := &corev1.Pod{
+		ObjectMeta: metav1.ObjectMeta{Name: ""test-pod-2""},
+		Spec: corev1.PodSpec{
+			Containers: []corev1.Container{{Name: ""test"", Image: ""test""}},
+		},
+	}
+	_, err = clientB.CoreV1().Pods(""default"").Create(context.Background(), pod2, metav1.CreateOptions{})
+	if err != nil {
+		t.Fatalf(""failed to create pod: %v"", err)
+	}
+
+	select {
+	case <-webhookHit:
+		t.Log(""Webhook was hit as expected"")
+	case <-time.After(5 * time.Second):
+		t.Fatal(""Webhook was not hit"")
+	}
+
+	select {
+	case <-proxyHit:
+		t.Fatal(""Proxy was hit, but should have been bypassed by NO_PROXY"")
+	case <-time.After(2 * time.Second):
+		t.Log(""Proxy was not hit, as expected"")
+	}
+	// It needs to break the proxy connection or it will panic at cleanup
+	webhookServer.Close()
+}"
kubernetes/kubernetes,5da3bd6eb5d5a1a3d885ea5b21ce6b6d198029d5,Kubernetes Prow Robot,2025-10-03T00:38:58Z,"Merge pull request #134127 from aojea/apiserver_noproxy

integration test: webhook proxy behavior",test/integration/apiserver/httpproxy/main_test.go,27,0,27,"@@ -0,0 +1,27 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package httpproxy
+
+import (
+	""testing""
+
+	""k8s.io/kubernetes/test/integration/framework""
+)
+
+func TestMain(m *testing.M) {
+	framework.EtcdMain(m.Run)
+}"
kubernetes/kubernetes,5da3bd6eb5d5a1a3d885ea5b21ce6b6d198029d5,Kubernetes Prow Robot,2025-10-03T00:38:58Z,"Merge pull request #134127 from aojea/apiserver_noproxy

integration test: webhook proxy behavior",test/utils/fakedns/fakedns.go,129,0,129,"@@ -0,0 +1,129 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package fakedns
+
+import (
+	""fmt""
+	""net""
+	""strings""
+	""sync""
+	""testing""
+	""time""
+
+	netutils ""k8s.io/utils/net""
+
+	""golang.org/x/net/dns/dnsmessage""
+
+	nettesting ""k8s.io/kubernetes/third_party/forked/golang/net/testing""
+)
+
+// dnsHijackLock is a mutex to ensure that only one test can hijack DNS at a time.
+// This is necessary because net.DefaultResolver is a global variable.
+var dnsHijackLock sync.Mutex
+
+// Server is a fake DNS server that can be used to override DNS resolution in tests.
+// This is particularly useful for testing components that rely on DNS without needing
+// to set up an actual DNS server. The server can be configured with a map of domain
+// names to IP addresses, and it will respond to DNS queries accordingly.
+// To use the fake DNS server, create an instance using NewServer, then call
+// Hijack to redirect DNS queries to the fake server.
+// This helper does not support running tests in parallel.
+type Server struct {
+	dnsServer nettesting.FakeDNSServer
+}
+
+// NewServer creates a new fake DNS server. The hosts map should contain
+// domain names as keys and their corresponding IP addresses as string values.
+// It returns an error if any of the IP addresses are invalid.
+func NewServer(hosts map[string]string) (*Server, error) {
+	parsedHosts := make(map[string]net.IP, len(hosts))
+	for domain, ipStr := range hosts {
+		ip := netutils.ParseIPSloppy(ipStr)
+		if ip == nil {
+			return nil, fmt.Errorf(""invalid IP address for domain %s: %s"", domain, ipStr)
+		}
+		// Ensure domain is clean without trailing dot for map key
+		parsedHosts[strings.TrimSuffix(domain, ""."")] = ip
+	}
+	dnsServer := nettesting.FakeDNSServer{}
+	dnsServer.ResponseHandler = func(n, s string, q dnsmessage.Message, t time.Time) (dnsmessage.Message, error) {
+		resp := dnsmessage.Message{
+			Header: dnsmessage.Header{
+				ID:            q.Header.ID,
+				Response:      true,
+				Authoritative: true,
+			},
+			Questions: q.Questions,
+		}
+
+		if len(q.Questions) == 0 {
+			return resp, nil
+		}
+
+		question := q.Questions[0]
+		domain := strings.TrimSuffix(question.Name.String(), ""."")
+
+		if ip, ok := parsedHosts[domain]; ok {
+			var resource dnsmessage.Resource
+			if ipv4 := ip.To4(); ipv4 != nil {
+				resource = dnsmessage.Resource{
+					Header: dnsmessage.ResourceHeader{Name: question.Name, Type: dnsmessage.TypeA, Class: dnsmessage.ClassINET, TTL: 300},
+					Body:   &dnsmessage.AResource{A: [4]byte(ipv4)},
+				}
+			} else { // Assume IPv6
+				resource = dnsmessage.Resource{
+					Header: dnsmessage.ResourceHeader{Name: question.Name, Type: dnsmessage.TypeAAAA, Class: dnsmessage.ClassINET, TTL: 300},
+					Body:   &dnsmessage.AAAAResource{AAAA: [16]byte(ip)},
+				}
+			}
+			resp.Answers = []dnsmessage.Resource{resource}
+		}
+
+		return resp, nil
+	}
+
+	return &Server{
+		dnsServer: dnsServer,
+	}, nil
+}
+
+// Hijack takes control of the net.DefaultResolver to redirect DNS queries
+// to the fake server. It uses t.Cleanup to automatically restore the original
+// resolver after the test.
+// This helper does not support running tests in parallel.
+//
+// Example:
+//
+//	dnsServer, _ := fakedns.NewServer(hosts)
+//	dnsServer.Hijack(t)
+func (s *Server) Hijack(t *testing.T) {
+	t.Helper()
+
+	dnsHijackLock.Lock()
+
+	originalDial := net.DefaultResolver.Dial
+	originalPreferGo := net.DefaultResolver.PreferGo
+
+	net.DefaultResolver.PreferGo = true
+	net.DefaultResolver.Dial = s.dnsServer.DialContext
+
+	t.Cleanup(func() {
+		net.DefaultResolver.Dial = originalDial
+		net.DefaultResolver.PreferGo = originalPreferGo
+		dnsHijackLock.Unlock()
+	})
+}"
kubernetes/kubernetes,5da3bd6eb5d5a1a3d885ea5b21ce6b6d198029d5,Kubernetes Prow Robot,2025-10-03T00:38:58Z,"Merge pull request #134127 from aojea/apiserver_noproxy

integration test: webhook proxy behavior",third_party/forked/golang/net/testing/fakedns.go,112,0,112,"@@ -0,0 +1,112 @@
+// Copyright 2013 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// This package is copied from Go library net.
+// https://golang.org/src/net/dnsclient_unix_test.go
+// The original private type FakeDNSServer
+// is exported as public type for testing.
+
+package testing
+
+import (
+	""context""
+	""errors""
+	""fmt""
+	""net""
+	""time""
+
+	_ ""testing""
+
+	""golang.org/x/net/dns/dnsmessage""
+)
+
+type FakeDNSServer struct {
+	ResponseHandler func(n, s string, q dnsmessage.Message, t time.Time) (dnsmessage.Message, error)
+	alwaysTCP       bool
+}
+
+func (server *FakeDNSServer) DialContext(_ context.Context, n, s string) (net.Conn, error) {
+	if server.alwaysTCP || n == ""tcp"" || n == ""tcp4"" || n == ""tcp6"" {
+		return &fakeDNSConn{tcp: true, server: server, n: n, s: s}, nil
+	}
+	return &fakeDNSPacketConn{fakeDNSConn: fakeDNSConn{tcp: false, server: server, n: n, s: s}}, nil
+}
+
+type fakeDNSConn struct {
+	net.Conn
+	tcp    bool
+	server *FakeDNSServer
+	n      string
+	s      string
+	q      dnsmessage.Message
+	t      time.Time
+	buf    []byte
+}
+
+func (f *fakeDNSConn) Close() error {
+	return nil
+}
+
+func (f *fakeDNSConn) Read(b []byte) (int, error) {
+	if len(f.buf) > 0 {
+		n := copy(b, f.buf)
+		f.buf = f.buf[n:]
+		return n, nil
+	}
+
+	resp, err := f.server.ResponseHandler(f.n, f.s, f.q, f.t)
+	if err != nil {
+		return 0, err
+	}
+
+	bb := make([]byte, 2, 514)
+	bb, err = resp.AppendPack(bb)
+	if err != nil {
+		return 0, fmt.Errorf(""cannot marshal DNS message: %v"", err)
+	}
+
+	if f.tcp {
+		l := len(bb) - 2
+		bb[0] = byte(l >> 8)
+		bb[1] = byte(l)
+		f.buf = bb
+		return f.Read(b)
+	}
+
+	bb = bb[2:]
+	if len(b) < len(bb) {
+		return 0, errors.New(""read would fragment DNS message"")
+	}
+
+	copy(b, bb)
+	return len(bb), nil
+}
+
+func (f *fakeDNSConn) Write(b []byte) (int, error) {
+	if f.tcp && len(b) >= 2 {
+		b = b[2:]
+	}
+	if f.q.Unpack(b) != nil {
+		return 0, fmt.Errorf(""cannot unmarshal DNS message fake %s (%d)"", f.n, len(b))
+	}
+	return len(b), nil
+}
+
+func (f *fakeDNSConn) SetDeadline(t time.Time) error {
+	f.t = t
+	return nil
+}
+
+type fakeDNSPacketConn struct {
+	net.PacketConn
+	fakeDNSConn
+}
+
+func (f *fakeDNSPacketConn) SetDeadline(t time.Time) error {
+	return f.fakeDNSConn.SetDeadline(t)
+}
+
+func (f *fakeDNSPacketConn) Close() error {
+	return f.fakeDNSConn.Close()
+}"
kubernetes/kubernetes,5da3bd6eb5d5a1a3d885ea5b21ce6b6d198029d5,Kubernetes Prow Robot,2025-10-03T00:38:58Z,"Merge pull request #134127 from aojea/apiserver_noproxy

integration test: webhook proxy behavior",vendor/golang.org/x/net/dns/dnsmessage/message.go,2712,0,2712,"@@ -0,0 +1,2712 @@
+// Copyright 2009 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Package dnsmessage provides a mostly RFC 1035 compliant implementation of
+// DNS message packing and unpacking.
+//
+// The package also supports messages with Extension Mechanisms for DNS
+// (EDNS(0)) as defined in RFC 6891.
+//
+// This implementation is designed to minimize heap allocations and avoid
+// unnecessary packing and unpacking as much as possible.
+package dnsmessage
+
+import (
+	""errors""
+)
+
+// Message formats
+
+// A Type is a type of DNS request and response.
+type Type uint16
+
+const (
+	// ResourceHeader.Type and Question.Type
+	TypeA     Type = 1
+	TypeNS    Type = 2
+	TypeCNAME Type = 5
+	TypeSOA   Type = 6
+	TypePTR   Type = 12
+	TypeMX    Type = 15
+	TypeTXT   Type = 16
+	TypeAAAA  Type = 28
+	TypeSRV   Type = 33
+	TypeOPT   Type = 41
+
+	// Question.Type
+	TypeWKS   Type = 11
+	TypeHINFO Type = 13
+	TypeMINFO Type = 14
+	TypeAXFR  Type = 252
+	TypeALL   Type = 255
+)
+
+var typeNames = map[Type]string{
+	TypeA:     ""TypeA"",
+	TypeNS:    ""TypeNS"",
+	TypeCNAME: ""TypeCNAME"",
+	TypeSOA:   ""TypeSOA"",
+	TypePTR:   ""TypePTR"",
+	TypeMX:    ""TypeMX"",
+	TypeTXT:   ""TypeTXT"",
+	TypeAAAA:  ""TypeAAAA"",
+	TypeSRV:   ""TypeSRV"",
+	TypeOPT:   ""TypeOPT"",
+	TypeWKS:   ""TypeWKS"",
+	TypeHINFO: ""TypeHINFO"",
+	TypeMINFO: ""TypeMINFO"",
+	TypeAXFR:  ""TypeAXFR"",
+	TypeALL:   ""TypeALL"",
+}
+
+// String implements fmt.Stringer.String.
+func (t Type) String() string {
+	if n, ok := typeNames[t]; ok {
+		return n
+	}
+	return printUint16(uint16(t))
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (t Type) GoString() string {
+	if n, ok := typeNames[t]; ok {
+		return ""dnsmessage."" + n
+	}
+	return printUint16(uint16(t))
+}
+
+// A Class is a type of network.
+type Class uint16
+
+const (
+	// ResourceHeader.Class and Question.Class
+	ClassINET   Class = 1
+	ClassCSNET  Class = 2
+	ClassCHAOS  Class = 3
+	ClassHESIOD Class = 4
+
+	// Question.Class
+	ClassANY Class = 255
+)
+
+var classNames = map[Class]string{
+	ClassINET:   ""ClassINET"",
+	ClassCSNET:  ""ClassCSNET"",
+	ClassCHAOS:  ""ClassCHAOS"",
+	ClassHESIOD: ""ClassHESIOD"",
+	ClassANY:    ""ClassANY"",
+}
+
+// String implements fmt.Stringer.String.
+func (c Class) String() string {
+	if n, ok := classNames[c]; ok {
+		return n
+	}
+	return printUint16(uint16(c))
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (c Class) GoString() string {
+	if n, ok := classNames[c]; ok {
+		return ""dnsmessage."" + n
+	}
+	return printUint16(uint16(c))
+}
+
+// An OpCode is a DNS operation code.
+type OpCode uint16
+
+// GoString implements fmt.GoStringer.GoString.
+func (o OpCode) GoString() string {
+	return printUint16(uint16(o))
+}
+
+// An RCode is a DNS response status code.
+type RCode uint16
+
+// Header.RCode values.
+const (
+	RCodeSuccess        RCode = 0 // NoError
+	RCodeFormatError    RCode = 1 // FormErr
+	RCodeServerFailure  RCode = 2 // ServFail
+	RCodeNameError      RCode = 3 // NXDomain
+	RCodeNotImplemented RCode = 4 // NotImp
+	RCodeRefused        RCode = 5 // Refused
+)
+
+var rCodeNames = map[RCode]string{
+	RCodeSuccess:        ""RCodeSuccess"",
+	RCodeFormatError:    ""RCodeFormatError"",
+	RCodeServerFailure:  ""RCodeServerFailure"",
+	RCodeNameError:      ""RCodeNameError"",
+	RCodeNotImplemented: ""RCodeNotImplemented"",
+	RCodeRefused:        ""RCodeRefused"",
+}
+
+// String implements fmt.Stringer.String.
+func (r RCode) String() string {
+	if n, ok := rCodeNames[r]; ok {
+		return n
+	}
+	return printUint16(uint16(r))
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r RCode) GoString() string {
+	if n, ok := rCodeNames[r]; ok {
+		return ""dnsmessage."" + n
+	}
+	return printUint16(uint16(r))
+}
+
+func printPaddedUint8(i uint8) string {
+	b := byte(i)
+	return string([]byte{
+		b/100 + '0',
+		b/10%10 + '0',
+		b%10 + '0',
+	})
+}
+
+func printUint8Bytes(buf []byte, i uint8) []byte {
+	b := byte(i)
+	if i >= 100 {
+		buf = append(buf, b/100+'0')
+	}
+	if i >= 10 {
+		buf = append(buf, b/10%10+'0')
+	}
+	return append(buf, b%10+'0')
+}
+
+func printByteSlice(b []byte) string {
+	if len(b) == 0 {
+		return """"
+	}
+	buf := make([]byte, 0, 5*len(b))
+	buf = printUint8Bytes(buf, uint8(b[0]))
+	for _, n := range b[1:] {
+		buf = append(buf, ',', ' ')
+		buf = printUint8Bytes(buf, uint8(n))
+	}
+	return string(buf)
+}
+
+const hexDigits = ""0123456789abcdef""
+
+func printString(str []byte) string {
+	buf := make([]byte, 0, len(str))
+	for i := 0; i < len(str); i++ {
+		c := str[i]
+		if c == '.' || c == '-' || c == ' ' ||
+			'A' <= c && c <= 'Z' ||
+			'a' <= c && c <= 'z' ||
+			'0' <= c && c <= '9' {
+			buf = append(buf, c)
+			continue
+		}
+
+		upper := c >> 4
+		lower := (c << 4) >> 4
+		buf = append(
+			buf,
+			'\\',
+			'x',
+			hexDigits[upper],
+			hexDigits[lower],
+		)
+	}
+	return string(buf)
+}
+
+func printUint16(i uint16) string {
+	return printUint32(uint32(i))
+}
+
+func printUint32(i uint32) string {
+	// Max value is 4294967295.
+	buf := make([]byte, 10)
+	for b, d := buf, uint32(1000000000); d > 0; d /= 10 {
+		b[0] = byte(i/d%10 + '0')
+		if b[0] == '0' && len(b) == len(buf) && len(buf) > 1 {
+			buf = buf[1:]
+		}
+		b = b[1:]
+		i %= d
+	}
+	return string(buf)
+}
+
+func printBool(b bool) string {
+	if b {
+		return ""true""
+	}
+	return ""false""
+}
+
+var (
+	// ErrNotStarted indicates that the prerequisite information isn't
+	// available yet because the previous records haven't been appropriately
+	// parsed, skipped or finished.
+	ErrNotStarted = errors.New(""parsing/packing of this type isn't available yet"")
+
+	// ErrSectionDone indicated that all records in the section have been
+	// parsed or finished.
+	ErrSectionDone = errors.New(""parsing/packing of this section has completed"")
+
+	errBaseLen            = errors.New(""insufficient data for base length type"")
+	errCalcLen            = errors.New(""insufficient data for calculated length type"")
+	errReserved           = errors.New(""segment prefix is reserved"")
+	errTooManyPtr         = errors.New(""too many pointers (>10)"")
+	errInvalidPtr         = errors.New(""invalid pointer"")
+	errInvalidName        = errors.New(""invalid dns name"")
+	errNilResouceBody     = errors.New(""nil resource body"")
+	errResourceLen        = errors.New(""insufficient data for resource body length"")
+	errSegTooLong         = errors.New(""segment length too long"")
+	errNameTooLong        = errors.New(""name too long"")
+	errZeroSegLen         = errors.New(""zero length segment"")
+	errResTooLong         = errors.New(""resource length too long"")
+	errTooManyQuestions   = errors.New(""too many Questions to pack (>65535)"")
+	errTooManyAnswers     = errors.New(""too many Answers to pack (>65535)"")
+	errTooManyAuthorities = errors.New(""too many Authorities to pack (>65535)"")
+	errTooManyAdditionals = errors.New(""too many Additionals to pack (>65535)"")
+	errNonCanonicalName   = errors.New(""name is not in canonical format (it must end with a .)"")
+	errStringTooLong      = errors.New(""character string exceeds maximum length (255)"")
+)
+
+// Internal constants.
+const (
+	// packStartingCap is the default initial buffer size allocated during
+	// packing.
+	//
+	// The starting capacity doesn't matter too much, but most DNS responses
+	// Will be <= 512 bytes as it is the limit for DNS over UDP.
+	packStartingCap = 512
+
+	// uint16Len is the length (in bytes) of a uint16.
+	uint16Len = 2
+
+	// uint32Len is the length (in bytes) of a uint32.
+	uint32Len = 4
+
+	// headerLen is the length (in bytes) of a DNS header.
+	//
+	// A header is comprised of 6 uint16s and no padding.
+	headerLen = 6 * uint16Len
+)
+
+type nestedError struct {
+	// s is the current level's error message.
+	s string
+
+	// err is the nested error.
+	err error
+}
+
+// nestedError implements error.Error.
+func (e *nestedError) Error() string {
+	return e.s + "": "" + e.err.Error()
+}
+
+// Header is a representation of a DNS message header.
+type Header struct {
+	ID                 uint16
+	Response           bool
+	OpCode             OpCode
+	Authoritative      bool
+	Truncated          bool
+	RecursionDesired   bool
+	RecursionAvailable bool
+	AuthenticData      bool
+	CheckingDisabled   bool
+	RCode              RCode
+}
+
+func (m *Header) pack() (id uint16, bits uint16) {
+	id = m.ID
+	bits = uint16(m.OpCode)<<11 | uint16(m.RCode)
+	if m.RecursionAvailable {
+		bits |= headerBitRA
+	}
+	if m.RecursionDesired {
+		bits |= headerBitRD
+	}
+	if m.Truncated {
+		bits |= headerBitTC
+	}
+	if m.Authoritative {
+		bits |= headerBitAA
+	}
+	if m.Response {
+		bits |= headerBitQR
+	}
+	if m.AuthenticData {
+		bits |= headerBitAD
+	}
+	if m.CheckingDisabled {
+		bits |= headerBitCD
+	}
+	return
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (m *Header) GoString() string {
+	return ""dnsmessage.Header{"" +
+		""ID: "" + printUint16(m.ID) + "", "" +
+		""Response: "" + printBool(m.Response) + "", "" +
+		""OpCode: "" + m.OpCode.GoString() + "", "" +
+		""Authoritative: "" + printBool(m.Authoritative) + "", "" +
+		""Truncated: "" + printBool(m.Truncated) + "", "" +
+		""RecursionDesired: "" + printBool(m.RecursionDesired) + "", "" +
+		""RecursionAvailable: "" + printBool(m.RecursionAvailable) + "", "" +
+		""AuthenticData: "" + printBool(m.AuthenticData) + "", "" +
+		""CheckingDisabled: "" + printBool(m.CheckingDisabled) + "", "" +
+		""RCode: "" + m.RCode.GoString() + ""}""
+}
+
+// Message is a representation of a DNS message.
+type Message struct {
+	Header
+	Questions   []Question
+	Answers     []Resource
+	Authorities []Resource
+	Additionals []Resource
+}
+
+type section uint8
+
+const (
+	sectionNotStarted section = iota
+	sectionHeader
+	sectionQuestions
+	sectionAnswers
+	sectionAuthorities
+	sectionAdditionals
+	sectionDone
+
+	headerBitQR = 1 << 15 // query/response (response=1)
+	headerBitAA = 1 << 10 // authoritative
+	headerBitTC = 1 << 9  // truncated
+	headerBitRD = 1 << 8  // recursion desired
+	headerBitRA = 1 << 7  // recursion available
+	headerBitAD = 1 << 5  // authentic data
+	headerBitCD = 1 << 4  // checking disabled
+)
+
+var sectionNames = map[section]string{
+	sectionHeader:      ""header"",
+	sectionQuestions:   ""Question"",
+	sectionAnswers:     ""Answer"",
+	sectionAuthorities: ""Authority"",
+	sectionAdditionals: ""Additional"",
+}
+
+// header is the wire format for a DNS message header.
+type header struct {
+	id          uint16
+	bits        uint16
+	questions   uint16
+	answers     uint16
+	authorities uint16
+	additionals uint16
+}
+
+func (h *header) count(sec section) uint16 {
+	switch sec {
+	case sectionQuestions:
+		return h.questions
+	case sectionAnswers:
+		return h.answers
+	case sectionAuthorities:
+		return h.authorities
+	case sectionAdditionals:
+		return h.additionals
+	}
+	return 0
+}
+
+// pack appends the wire format of the header to msg.
+func (h *header) pack(msg []byte) []byte {
+	msg = packUint16(msg, h.id)
+	msg = packUint16(msg, h.bits)
+	msg = packUint16(msg, h.questions)
+	msg = packUint16(msg, h.answers)
+	msg = packUint16(msg, h.authorities)
+	return packUint16(msg, h.additionals)
+}
+
+func (h *header) unpack(msg []byte, off int) (int, error) {
+	newOff := off
+	var err error
+	if h.id, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""id"", err}
+	}
+	if h.bits, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""bits"", err}
+	}
+	if h.questions, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""questions"", err}
+	}
+	if h.answers, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""answers"", err}
+	}
+	if h.authorities, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""authorities"", err}
+	}
+	if h.additionals, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""additionals"", err}
+	}
+	return newOff, nil
+}
+
+func (h *header) header() Header {
+	return Header{
+		ID:                 h.id,
+		Response:           (h.bits & headerBitQR) != 0,
+		OpCode:             OpCode(h.bits>>11) & 0xF,
+		Authoritative:      (h.bits & headerBitAA) != 0,
+		Truncated:          (h.bits & headerBitTC) != 0,
+		RecursionDesired:   (h.bits & headerBitRD) != 0,
+		RecursionAvailable: (h.bits & headerBitRA) != 0,
+		AuthenticData:      (h.bits & headerBitAD) != 0,
+		CheckingDisabled:   (h.bits & headerBitCD) != 0,
+		RCode:              RCode(h.bits & 0xF),
+	}
+}
+
+// A Resource is a DNS resource record.
+type Resource struct {
+	Header ResourceHeader
+	Body   ResourceBody
+}
+
+func (r *Resource) GoString() string {
+	return ""dnsmessage.Resource{"" +
+		""Header: "" + r.Header.GoString() +
+		"", Body: &"" + r.Body.GoString() +
+		""}""
+}
+
+// A ResourceBody is a DNS resource record minus the header.
+type ResourceBody interface {
+	// pack packs a Resource except for its header.
+	pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error)
+
+	// realType returns the actual type of the Resource. This is used to
+	// fill in the header Type field.
+	realType() Type
+
+	// GoString implements fmt.GoStringer.GoString.
+	GoString() string
+}
+
+// pack appends the wire format of the Resource to msg.
+func (r *Resource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	if r.Body == nil {
+		return msg, errNilResouceBody
+	}
+	oldMsg := msg
+	r.Header.Type = r.Body.realType()
+	msg, lenOff, err := r.Header.pack(msg, compression, compressionOff)
+	if err != nil {
+		return msg, &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	msg, err = r.Body.pack(msg, compression, compressionOff)
+	if err != nil {
+		return msg, &nestedError{""content"", err}
+	}
+	if err := r.Header.fixLen(msg, lenOff, preLen); err != nil {
+		return oldMsg, err
+	}
+	return msg, nil
+}
+
+// A Parser allows incrementally parsing a DNS message.
+//
+// When parsing is started, the Header is parsed. Next, each Question can be
+// either parsed or skipped. Alternatively, all Questions can be skipped at
+// once. When all Questions have been parsed, attempting to parse Questions
+// will return the [ErrSectionDone] error.
+// After all Questions have been either parsed or skipped, all
+// Answers, Authorities and Additionals can be either parsed or skipped in the
+// same way, and each type of Resource must be fully parsed or skipped before
+// proceeding to the next type of Resource.
+//
+// Parser is safe to copy to preserve the parsing state.
+//
+// Note that there is no requirement to fully skip or parse the message.
+type Parser struct {
+	msg    []byte
+	header header
+
+	section         section
+	off             int
+	index           int
+	resHeaderValid  bool
+	resHeaderOffset int
+	resHeaderType   Type
+	resHeaderLength uint16
+}
+
+// Start parses the header and enables the parsing of Questions.
+func (p *Parser) Start(msg []byte) (Header, error) {
+	if p.msg != nil {
+		*p = Parser{}
+	}
+	p.msg = msg
+	var err error
+	if p.off, err = p.header.unpack(msg, 0); err != nil {
+		return Header{}, &nestedError{""unpacking header"", err}
+	}
+	p.section = sectionQuestions
+	return p.header.header(), nil
+}
+
+func (p *Parser) checkAdvance(sec section) error {
+	if p.section < sec {
+		return ErrNotStarted
+	}
+	if p.section > sec {
+		return ErrSectionDone
+	}
+	p.resHeaderValid = false
+	if p.index == int(p.header.count(sec)) {
+		p.index = 0
+		p.section++
+		return ErrSectionDone
+	}
+	return nil
+}
+
+func (p *Parser) resource(sec section) (Resource, error) {
+	var r Resource
+	var err error
+	r.Header, err = p.resourceHeader(sec)
+	if err != nil {
+		return r, err
+	}
+	p.resHeaderValid = false
+	r.Body, p.off, err = unpackResourceBody(p.msg, p.off, r.Header)
+	if err != nil {
+		return Resource{}, &nestedError{""unpacking "" + sectionNames[sec], err}
+	}
+	p.index++
+	return r, nil
+}
+
+func (p *Parser) resourceHeader(sec section) (ResourceHeader, error) {
+	if p.resHeaderValid {
+		p.off = p.resHeaderOffset
+	}
+
+	if err := p.checkAdvance(sec); err != nil {
+		return ResourceHeader{}, err
+	}
+	var hdr ResourceHeader
+	off, err := hdr.unpack(p.msg, p.off)
+	if err != nil {
+		return ResourceHeader{}, err
+	}
+	p.resHeaderValid = true
+	p.resHeaderOffset = p.off
+	p.resHeaderType = hdr.Type
+	p.resHeaderLength = hdr.Length
+	p.off = off
+	return hdr, nil
+}
+
+func (p *Parser) skipResource(sec section) error {
+	if p.resHeaderValid && p.section == sec {
+		newOff := p.off + int(p.resHeaderLength)
+		if newOff > len(p.msg) {
+			return errResourceLen
+		}
+		p.off = newOff
+		p.resHeaderValid = false
+		p.index++
+		return nil
+	}
+	if err := p.checkAdvance(sec); err != nil {
+		return err
+	}
+	var err error
+	p.off, err = skipResource(p.msg, p.off)
+	if err != nil {
+		return &nestedError{""skipping: "" + sectionNames[sec], err}
+	}
+	p.index++
+	return nil
+}
+
+// Question parses a single Question.
+func (p *Parser) Question() (Question, error) {
+	if err := p.checkAdvance(sectionQuestions); err != nil {
+		return Question{}, err
+	}
+	var name Name
+	off, err := name.unpack(p.msg, p.off)
+	if err != nil {
+		return Question{}, &nestedError{""unpacking Question.Name"", err}
+	}
+	typ, off, err := unpackType(p.msg, off)
+	if err != nil {
+		return Question{}, &nestedError{""unpacking Question.Type"", err}
+	}
+	class, off, err := unpackClass(p.msg, off)
+	if err != nil {
+		return Question{}, &nestedError{""unpacking Question.Class"", err}
+	}
+	p.off = off
+	p.index++
+	return Question{name, typ, class}, nil
+}
+
+// AllQuestions parses all Questions.
+func (p *Parser) AllQuestions() ([]Question, error) {
+	// Multiple questions are valid according to the spec,
+	// but servers don't actually support them. There will
+	// be at most one question here.
+	//
+	// Do not pre-allocate based on info in p.header, since
+	// the data is untrusted.
+	qs := []Question{}
+	for {
+		q, err := p.Question()
+		if err == ErrSectionDone {
+			return qs, nil
+		}
+		if err != nil {
+			return nil, err
+		}
+		qs = append(qs, q)
+	}
+}
+
+// SkipQuestion skips a single Question.
+func (p *Parser) SkipQuestion() error {
+	if err := p.checkAdvance(sectionQuestions); err != nil {
+		return err
+	}
+	off, err := skipName(p.msg, p.off)
+	if err != nil {
+		return &nestedError{""skipping Question Name"", err}
+	}
+	if off, err = skipType(p.msg, off); err != nil {
+		return &nestedError{""skipping Question Type"", err}
+	}
+	if off, err = skipClass(p.msg, off); err != nil {
+		return &nestedError{""skipping Question Class"", err}
+	}
+	p.off = off
+	p.index++
+	return nil
+}
+
+// SkipAllQuestions skips all Questions.
+func (p *Parser) SkipAllQuestions() error {
+	for {
+		if err := p.SkipQuestion(); err == ErrSectionDone {
+			return nil
+		} else if err != nil {
+			return err
+		}
+	}
+}
+
+// AnswerHeader parses a single Answer ResourceHeader.
+func (p *Parser) AnswerHeader() (ResourceHeader, error) {
+	return p.resourceHeader(sectionAnswers)
+}
+
+// Answer parses a single Answer Resource.
+func (p *Parser) Answer() (Resource, error) {
+	return p.resource(sectionAnswers)
+}
+
+// AllAnswers parses all Answer Resources.
+func (p *Parser) AllAnswers() ([]Resource, error) {
+	// The most common query is for A/AAAA, which usually returns
+	// a handful of IPs.
+	//
+	// Pre-allocate up to a certain limit, since p.header is
+	// untrusted data.
+	n := int(p.header.answers)
+	if n > 20 {
+		n = 20
+	}
+	as := make([]Resource, 0, n)
+	for {
+		a, err := p.Answer()
+		if err == ErrSectionDone {
+			return as, nil
+		}
+		if err != nil {
+			return nil, err
+		}
+		as = append(as, a)
+	}
+}
+
+// SkipAnswer skips a single Answer Resource.
+//
+// It does not perform a complete validation of the resource header, which means
+// it may return a nil error when the [AnswerHeader] would actually return an error.
+func (p *Parser) SkipAnswer() error {
+	return p.skipResource(sectionAnswers)
+}
+
+// SkipAllAnswers skips all Answer Resources.
+func (p *Parser) SkipAllAnswers() error {
+	for {
+		if err := p.SkipAnswer(); err == ErrSectionDone {
+			return nil
+		} else if err != nil {
+			return err
+		}
+	}
+}
+
+// AuthorityHeader parses a single Authority ResourceHeader.
+func (p *Parser) AuthorityHeader() (ResourceHeader, error) {
+	return p.resourceHeader(sectionAuthorities)
+}
+
+// Authority parses a single Authority Resource.
+func (p *Parser) Authority() (Resource, error) {
+	return p.resource(sectionAuthorities)
+}
+
+// AllAuthorities parses all Authority Resources.
+func (p *Parser) AllAuthorities() ([]Resource, error) {
+	// Authorities contains SOA in case of NXDOMAIN and friends,
+	// otherwise it is empty.
+	//
+	// Pre-allocate up to a certain limit, since p.header is
+	// untrusted data.
+	n := int(p.header.authorities)
+	if n > 10 {
+		n = 10
+	}
+	as := make([]Resource, 0, n)
+	for {
+		a, err := p.Authority()
+		if err == ErrSectionDone {
+			return as, nil
+		}
+		if err != nil {
+			return nil, err
+		}
+		as = append(as, a)
+	}
+}
+
+// SkipAuthority skips a single Authority Resource.
+//
+// It does not perform a complete validation of the resource header, which means
+// it may return a nil error when the [AuthorityHeader] would actually return an error.
+func (p *Parser) SkipAuthority() error {
+	return p.skipResource(sectionAuthorities)
+}
+
+// SkipAllAuthorities skips all Authority Resources.
+func (p *Parser) SkipAllAuthorities() error {
+	for {
+		if err := p.SkipAuthority(); err == ErrSectionDone {
+			return nil
+		} else if err != nil {
+			return err
+		}
+	}
+}
+
+// AdditionalHeader parses a single Additional ResourceHeader.
+func (p *Parser) AdditionalHeader() (ResourceHeader, error) {
+	return p.resourceHeader(sectionAdditionals)
+}
+
+// Additional parses a single Additional Resource.
+func (p *Parser) Additional() (Resource, error) {
+	return p.resource(sectionAdditionals)
+}
+
+// AllAdditionals parses all Additional Resources.
+func (p *Parser) AllAdditionals() ([]Resource, error) {
+	// Additionals usually contain OPT, and sometimes A/AAAA
+	// glue records.
+	//
+	// Pre-allocate up to a certain limit, since p.header is
+	// untrusted data.
+	n := int(p.header.additionals)
+	if n > 10 {
+		n = 10
+	}
+	as := make([]Resource, 0, n)
+	for {
+		a, err := p.Additional()
+		if err == ErrSectionDone {
+			return as, nil
+		}
+		if err != nil {
+			return nil, err
+		}
+		as = append(as, a)
+	}
+}
+
+// SkipAdditional skips a single Additional Resource.
+//
+// It does not perform a complete validation of the resource header, which means
+// it may return a nil error when the [AdditionalHeader] would actually return an error.
+func (p *Parser) SkipAdditional() error {
+	return p.skipResource(sectionAdditionals)
+}
+
+// SkipAllAdditionals skips all Additional Resources.
+func (p *Parser) SkipAllAdditionals() error {
+	for {
+		if err := p.SkipAdditional(); err == ErrSectionDone {
+			return nil
+		} else if err != nil {
+			return err
+		}
+	}
+}
+
+// CNAMEResource parses a single CNAMEResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) CNAMEResource() (CNAMEResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeCNAME {
+		return CNAMEResource{}, ErrNotStarted
+	}
+	r, err := unpackCNAMEResource(p.msg, p.off)
+	if err != nil {
+		return CNAMEResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// MXResource parses a single MXResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) MXResource() (MXResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeMX {
+		return MXResource{}, ErrNotStarted
+	}
+	r, err := unpackMXResource(p.msg, p.off)
+	if err != nil {
+		return MXResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// NSResource parses a single NSResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) NSResource() (NSResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeNS {
+		return NSResource{}, ErrNotStarted
+	}
+	r, err := unpackNSResource(p.msg, p.off)
+	if err != nil {
+		return NSResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// PTRResource parses a single PTRResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) PTRResource() (PTRResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypePTR {
+		return PTRResource{}, ErrNotStarted
+	}
+	r, err := unpackPTRResource(p.msg, p.off)
+	if err != nil {
+		return PTRResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// SOAResource parses a single SOAResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) SOAResource() (SOAResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeSOA {
+		return SOAResource{}, ErrNotStarted
+	}
+	r, err := unpackSOAResource(p.msg, p.off)
+	if err != nil {
+		return SOAResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// TXTResource parses a single TXTResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) TXTResource() (TXTResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeTXT {
+		return TXTResource{}, ErrNotStarted
+	}
+	r, err := unpackTXTResource(p.msg, p.off, p.resHeaderLength)
+	if err != nil {
+		return TXTResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// SRVResource parses a single SRVResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) SRVResource() (SRVResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeSRV {
+		return SRVResource{}, ErrNotStarted
+	}
+	r, err := unpackSRVResource(p.msg, p.off)
+	if err != nil {
+		return SRVResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// AResource parses a single AResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) AResource() (AResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeA {
+		return AResource{}, ErrNotStarted
+	}
+	r, err := unpackAResource(p.msg, p.off)
+	if err != nil {
+		return AResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// AAAAResource parses a single AAAAResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) AAAAResource() (AAAAResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeAAAA {
+		return AAAAResource{}, ErrNotStarted
+	}
+	r, err := unpackAAAAResource(p.msg, p.off)
+	if err != nil {
+		return AAAAResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// OPTResource parses a single OPTResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) OPTResource() (OPTResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeOPT {
+		return OPTResource{}, ErrNotStarted
+	}
+	r, err := unpackOPTResource(p.msg, p.off, p.resHeaderLength)
+	if err != nil {
+		return OPTResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// UnknownResource parses a single UnknownResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) UnknownResource() (UnknownResource, error) {
+	if !p.resHeaderValid {
+		return UnknownResource{}, ErrNotStarted
+	}
+	r, err := unpackUnknownResource(p.resHeaderType, p.msg, p.off, p.resHeaderLength)
+	if err != nil {
+		return UnknownResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// Unpack parses a full Message.
+func (m *Message) Unpack(msg []byte) error {
+	var p Parser
+	var err error
+	if m.Header, err = p.Start(msg); err != nil {
+		return err
+	}
+	if m.Questions, err = p.AllQuestions(); err != nil {
+		return err
+	}
+	if m.Answers, err = p.AllAnswers(); err != nil {
+		return err
+	}
+	if m.Authorities, err = p.AllAuthorities(); err != nil {
+		return err
+	}
+	if m.Additionals, err = p.AllAdditionals(); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Pack packs a full Message.
+func (m *Message) Pack() ([]byte, error) {
+	return m.AppendPack(make([]byte, 0, packStartingCap))
+}
+
+// AppendPack is like Pack but appends the full Message to b and returns the
+// extended buffer.
+func (m *Message) AppendPack(b []byte) ([]byte, error) {
+	// Validate the lengths. It is very unlikely that anyone will try to
+	// pack more than 65535 of any particular type, but it is possible and
+	// we should fail gracefully.
+	if len(m.Questions) > int(^uint16(0)) {
+		return nil, errTooManyQuestions
+	}
+	if len(m.Answers) > int(^uint16(0)) {
+		return nil, errTooManyAnswers
+	}
+	if len(m.Authorities) > int(^uint16(0)) {
+		return nil, errTooManyAuthorities
+	}
+	if len(m.Additionals) > int(^uint16(0)) {
+		return nil, errTooManyAdditionals
+	}
+
+	var h header
+	h.id, h.bits = m.Header.pack()
+
+	h.questions = uint16(len(m.Questions))
+	h.answers = uint16(len(m.Answers))
+	h.authorities = uint16(len(m.Authorities))
+	h.additionals = uint16(len(m.Additionals))
+
+	compressionOff := len(b)
+	msg := h.pack(b)
+
+	// RFC 1035 allows (but does not require) compression for packing. RFC
+	// 1035 requires unpacking implementations to support compression, so
+	// unconditionally enabling it is fine.
+	//
+	// DNS lookups are typically done over UDP, and RFC 1035 states that UDP
+	// DNS messages can be a maximum of 512 bytes long. Without compression,
+	// many DNS response messages are over this limit, so enabling
+	// compression will help ensure compliance.
+	compression := map[string]uint16{}
+
+	for i := range m.Questions {
+		var err error
+		if msg, err = m.Questions[i].pack(msg, compression, compressionOff); err != nil {
+			return nil, &nestedError{""packing Question"", err}
+		}
+	}
+	for i := range m.Answers {
+		var err error
+		if msg, err = m.Answers[i].pack(msg, compression, compressionOff); err != nil {
+			return nil, &nestedError{""packing Answer"", err}
+		}
+	}
+	for i := range m.Authorities {
+		var err error
+		if msg, err = m.Authorities[i].pack(msg, compression, compressionOff); err != nil {
+			return nil, &nestedError{""packing Authority"", err}
+		}
+	}
+	for i := range m.Additionals {
+		var err error
+		if msg, err = m.Additionals[i].pack(msg, compression, compressionOff); err != nil {
+			return nil, &nestedError{""packing Additional"", err}
+		}
+	}
+
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (m *Message) GoString() string {
+	s := ""dnsmessage.Message{Header: "" + m.Header.GoString() + "", "" +
+		""Questions: []dnsmessage.Question{""
+	if len(m.Questions) > 0 {
+		s += m.Questions[0].GoString()
+		for _, q := range m.Questions[1:] {
+			s += "", "" + q.GoString()
+		}
+	}
+	s += ""}, Answers: []dnsmessage.Resource{""
+	if len(m.Answers) > 0 {
+		s += m.Answers[0].GoString()
+		for _, a := range m.Answers[1:] {
+			s += "", "" + a.GoString()
+		}
+	}
+	s += ""}, Authorities: []dnsmessage.Resource{""
+	if len(m.Authorities) > 0 {
+		s += m.Authorities[0].GoString()
+		for _, a := range m.Authorities[1:] {
+			s += "", "" + a.GoString()
+		}
+	}
+	s += ""}, Additionals: []dnsmessage.Resource{""
+	if len(m.Additionals) > 0 {
+		s += m.Additionals[0].GoString()
+		for _, a := range m.Additionals[1:] {
+			s += "", "" + a.GoString()
+		}
+	}
+	return s + ""}}""
+}
+
+// A Builder allows incrementally packing a DNS message.
+//
+// Example usage:
+//
+//	buf := make([]byte, 2, 514)
+//	b := NewBuilder(buf, Header{...})
+//	b.EnableCompression()
+//	// Optionally start a section and add things to that section.
+//	// Repeat adding sections as necessary.
+//	buf, err := b.Finish()
+//	// If err is nil, buf[2:] will contain the built bytes.
+type Builder struct {
+	// msg is the storage for the message being built.
+	msg []byte
+
+	// section keeps track of the current section being built.
+	section section
+
+	// header keeps track of what should go in the header when Finish is
+	// called.
+	header header
+
+	// start is the starting index of the bytes allocated in msg for header.
+	start int
+
+	// compression is a mapping from name suffixes to their starting index
+	// in msg.
+	compression map[string]uint16
+}
+
+// NewBuilder creates a new builder with compression disabled.
+//
+// Note: Most users will want to immediately enable compression with the
+// EnableCompression method. See that method's comment for why you may or may
+// not want to enable compression.
+//
+// The DNS message is appended to the provided initial buffer buf (which may be
+// nil) as it is built. The final message is returned by the (*Builder).Finish
+// method, which includes buf[:len(buf)] and may return the same underlying
+// array if there was sufficient capacity in the slice.
+func NewBuilder(buf []byte, h Header) Builder {
+	if buf == nil {
+		buf = make([]byte, 0, packStartingCap)
+	}
+	b := Builder{msg: buf, start: len(buf)}
+	b.header.id, b.header.bits = h.pack()
+	var hb [headerLen]byte
+	b.msg = append(b.msg, hb[:]...)
+	b.section = sectionHeader
+	return b
+}
+
+// EnableCompression enables compression in the Builder.
+//
+// Leaving compression disabled avoids compression related allocations, but can
+// result in larger message sizes. Be careful with this mode as it can cause
+// messages to exceed the UDP size limit.
+//
+// According to RFC 1035, section 4.1.4, the use of compression is optional, but
+// all implementations must accept both compressed and uncompressed DNS
+// messages.
+//
+// Compression should be enabled before any sections are added for best results.
+func (b *Builder) EnableCompression() {
+	b.compression = map[string]uint16{}
+}
+
+func (b *Builder) startCheck(s section) error {
+	if b.section <= sectionNotStarted {
+		return ErrNotStarted
+	}
+	if b.section > s {
+		return ErrSectionDone
+	}
+	return nil
+}
+
+// StartQuestions prepares the builder for packing Questions.
+func (b *Builder) StartQuestions() error {
+	if err := b.startCheck(sectionQuestions); err != nil {
+		return err
+	}
+	b.section = sectionQuestions
+	return nil
+}
+
+// StartAnswers prepares the builder for packing Answers.
+func (b *Builder) StartAnswers() error {
+	if err := b.startCheck(sectionAnswers); err != nil {
+		return err
+	}
+	b.section = sectionAnswers
+	return nil
+}
+
+// StartAuthorities prepares the builder for packing Authorities.
+func (b *Builder) StartAuthorities() error {
+	if err := b.startCheck(sectionAuthorities); err != nil {
+		return err
+	}
+	b.section = sectionAuthorities
+	return nil
+}
+
+// StartAdditionals prepares the builder for packing Additionals.
+func (b *Builder) StartAdditionals() error {
+	if err := b.startCheck(sectionAdditionals); err != nil {
+		return err
+	}
+	b.section = sectionAdditionals
+	return nil
+}
+
+func (b *Builder) incrementSectionCount() error {
+	var count *uint16
+	var err error
+	switch b.section {
+	case sectionQuestions:
+		count = &b.header.questions
+		err = errTooManyQuestions
+	case sectionAnswers:
+		count = &b.header.answers
+		err = errTooManyAnswers
+	case sectionAuthorities:
+		count = &b.header.authorities
+		err = errTooManyAuthorities
+	case sectionAdditionals:
+		count = &b.header.additionals
+		err = errTooManyAdditionals
+	}
+	if *count == ^uint16(0) {
+		return err
+	}
+	*count++
+	return nil
+}
+
+// Question adds a single Question.
+func (b *Builder) Question(q Question) error {
+	if b.section < sectionQuestions {
+		return ErrNotStarted
+	}
+	if b.section > sectionQuestions {
+		return ErrSectionDone
+	}
+	msg, err := q.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+func (b *Builder) checkResourceSection() error {
+	if b.section < sectionAnswers {
+		return ErrNotStarted
+	}
+	if b.section > sectionAdditionals {
+		return ErrSectionDone
+	}
+	return nil
+}
+
+// CNAMEResource adds a single CNAMEResource.
+func (b *Builder) CNAMEResource(h ResourceHeader, r CNAMEResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""CNAMEResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// MXResource adds a single MXResource.
+func (b *Builder) MXResource(h ResourceHeader, r MXResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""MXResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// NSResource adds a single NSResource.
+func (b *Builder) NSResource(h ResourceHeader, r NSResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""NSResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// PTRResource adds a single PTRResource.
+func (b *Builder) PTRResource(h ResourceHeader, r PTRResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""PTRResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// SOAResource adds a single SOAResource.
+func (b *Builder) SOAResource(h ResourceHeader, r SOAResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""SOAResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// TXTResource adds a single TXTResource.
+func (b *Builder) TXTResource(h ResourceHeader, r TXTResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""TXTResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// SRVResource adds a single SRVResource.
+func (b *Builder) SRVResource(h ResourceHeader, r SRVResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""SRVResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// AResource adds a single AResource.
+func (b *Builder) AResource(h ResourceHeader, r AResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""AResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// AAAAResource adds a single AAAAResource.
+func (b *Builder) AAAAResource(h ResourceHeader, r AAAAResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""AAAAResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// OPTResource adds a single OPTResource.
+func (b *Builder) OPTResource(h ResourceHeader, r OPTResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""OPTResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// UnknownResource adds a single UnknownResource.
+func (b *Builder) UnknownResource(h ResourceHeader, r UnknownResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""UnknownResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// Finish ends message building and generates a binary message.
+func (b *Builder) Finish() ([]byte, error) {
+	if b.section < sectionHeader {
+		return nil, ErrNotStarted
+	}
+	b.section = sectionDone
+	// Space for the header was allocated in NewBuilder.
+	b.header.pack(b.msg[b.start:b.start])
+	return b.msg, nil
+}
+
+// A ResourceHeader is the header of a DNS resource record. There are
+// many types of DNS resource records, but they all share the same header.
+type ResourceHeader struct {
+	// Name is the domain name for which this resource record pertains.
+	Name Name
+
+	// Type is the type of DNS resource record.
+	//
+	// This field will be set automatically during packing.
+	Type Type
+
+	// Class is the class of network to which this DNS resource record
+	// pertains.
+	Class Class
+
+	// TTL is the length of time (measured in seconds) which this resource
+	// record is valid for (time to live). All Resources in a set should
+	// have the same TTL (RFC 2181 Section 5.2).
+	TTL uint32
+
+	// Length is the length of data in the resource record after the header.
+	//
+	// This field will be set automatically during packing.
+	Length uint16
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (h *ResourceHeader) GoString() string {
+	return ""dnsmessage.ResourceHeader{"" +
+		""Name: "" + h.Name.GoString() + "", "" +
+		""Type: "" + h.Type.GoString() + "", "" +
+		""Class: "" + h.Class.GoString() + "", "" +
+		""TTL: "" + printUint32(h.TTL) + "", "" +
+		""Length: "" + printUint16(h.Length) + ""}""
+}
+
+// pack appends the wire format of the ResourceHeader to oldMsg.
+//
+// lenOff is the offset in msg where the Length field was packed.
+func (h *ResourceHeader) pack(oldMsg []byte, compression map[string]uint16, compressionOff int) (msg []byte, lenOff int, err error) {
+	msg = oldMsg
+	if msg, err = h.Name.pack(msg, compression, compressionOff); err != nil {
+		return oldMsg, 0, &nestedError{""Name"", err}
+	}
+	msg = packType(msg, h.Type)
+	msg = packClass(msg, h.Class)
+	msg = packUint32(msg, h.TTL)
+	lenOff = len(msg)
+	msg = packUint16(msg, h.Length)
+	return msg, lenOff, nil
+}
+
+func (h *ResourceHeader) unpack(msg []byte, off int) (int, error) {
+	newOff := off
+	var err error
+	if newOff, err = h.Name.unpack(msg, newOff); err != nil {
+		return off, &nestedError{""Name"", err}
+	}
+	if h.Type, newOff, err = unpackType(msg, newOff); err != nil {
+		return off, &nestedError{""Type"", err}
+	}
+	if h.Class, newOff, err = unpackClass(msg, newOff); err != nil {
+		return off, &nestedError{""Class"", err}
+	}
+	if h.TTL, newOff, err = unpackUint32(msg, newOff); err != nil {
+		return off, &nestedError{""TTL"", err}
+	}
+	if h.Length, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""Length"", err}
+	}
+	return newOff, nil
+}
+
+// fixLen updates a packed ResourceHeader to include the length of the
+// ResourceBody.
+//
+// lenOff is the offset of the ResourceHeader.Length field in msg.
+//
+// preLen is the length that msg was before the ResourceBody was packed.
+func (h *ResourceHeader) fixLen(msg []byte, lenOff int, preLen int) error {
+	conLen := len(msg) - preLen
+	if conLen > int(^uint16(0)) {
+		return errResTooLong
+	}
+
+	// Fill in the length now that we know how long the content is.
+	packUint16(msg[lenOff:lenOff], uint16(conLen))
+	h.Length = uint16(conLen)
+
+	return nil
+}
+
+// EDNS(0) wire constants.
+const (
+	edns0Version = 0
+
+	edns0DNSSECOK     = 0x00008000
+	ednsVersionMask   = 0x00ff0000
+	edns0DNSSECOKMask = 0x00ff8000
+)
+
+// SetEDNS0 configures h for EDNS(0).
+//
+// The provided extRCode must be an extended RCode.
+func (h *ResourceHeader) SetEDNS0(udpPayloadLen int, extRCode RCode, dnssecOK bool) error {
+	h.Name = Name{Data: [255]byte{'.'}, Length: 1} // RFC 6891 section 6.1.2
+	h.Type = TypeOPT
+	h.Class = Class(udpPayloadLen)
+	h.TTL = uint32(extRCode) >> 4 << 24
+	if dnssecOK {
+		h.TTL |= edns0DNSSECOK
+	}
+	return nil
+}
+
+// DNSSECAllowed reports whether the DNSSEC OK bit is set.
+func (h *ResourceHeader) DNSSECAllowed() bool {
+	return h.TTL&edns0DNSSECOKMask == edns0DNSSECOK // RFC 6891 section 6.1.3
+}
+
+// ExtendedRCode returns an extended RCode.
+//
+// The provided rcode must be the RCode in DNS message header.
+func (h *ResourceHeader) ExtendedRCode(rcode RCode) RCode {
+	if h.TTL&ednsVersionMask == edns0Version { // RFC 6891 section 6.1.3
+		return RCode(h.TTL>>24<<4) | rcode
+	}
+	return rcode
+}
+
+func skipResource(msg []byte, off int) (int, error) {
+	newOff, err := skipName(msg, off)
+	if err != nil {
+		return off, &nestedError{""Name"", err}
+	}
+	if newOff, err = skipType(msg, newOff); err != nil {
+		return off, &nestedError{""Type"", err}
+	}
+	if newOff, err = skipClass(msg, newOff); err != nil {
+		return off, &nestedError{""Class"", err}
+	}
+	if newOff, err = skipUint32(msg, newOff); err != nil {
+		return off, &nestedError{""TTL"", err}
+	}
+	length, newOff, err := unpackUint16(msg, newOff)
+	if err != nil {
+		return off, &nestedError{""Length"", err}
+	}
+	if newOff += int(length); newOff > len(msg) {
+		return off, errResourceLen
+	}
+	return newOff, nil
+}
+
+// packUint16 appends the wire format of field to msg.
+func packUint16(msg []byte, field uint16) []byte {
+	return append(msg, byte(field>>8), byte(field))
+}
+
+func unpackUint16(msg []byte, off int) (uint16, int, error) {
+	if off+uint16Len > len(msg) {
+		return 0, off, errBaseLen
+	}
+	return uint16(msg[off])<<8 | uint16(msg[off+1]), off + uint16Len, nil
+}
+
+func skipUint16(msg []byte, off int) (int, error) {
+	if off+uint16Len > len(msg) {
+		return off, errBaseLen
+	}
+	return off + uint16Len, nil
+}
+
+// packType appends the wire format of field to msg.
+func packType(msg []byte, field Type) []byte {
+	return packUint16(msg, uint16(field))
+}
+
+func unpackType(msg []byte, off int) (Type, int, error) {
+	t, o, err := unpackUint16(msg, off)
+	return Type(t), o, err
+}
+
+func skipType(msg []byte, off int) (int, error) {
+	return skipUint16(msg, off)
+}
+
+// packClass appends the wire format of field to msg.
+func packClass(msg []byte, field Class) []byte {
+	return packUint16(msg, uint16(field))
+}
+
+func unpackClass(msg []byte, off int) (Class, int, error) {
+	c, o, err := unpackUint16(msg, off)
+	return Class(c), o, err
+}
+
+func skipClass(msg []byte, off int) (int, error) {
+	return skipUint16(msg, off)
+}
+
+// packUint32 appends the wire format of field to msg.
+func packUint32(msg []byte, field uint32) []byte {
+	return append(
+		msg,
+		byte(field>>24),
+		byte(field>>16),
+		byte(field>>8),
+		byte(field),
+	)
+}
+
+func unpackUint32(msg []byte, off int) (uint32, int, error) {
+	if off+uint32Len > len(msg) {
+		return 0, off, errBaseLen
+	}
+	v := uint32(msg[off])<<24 | uint32(msg[off+1])<<16 | uint32(msg[off+2])<<8 | uint32(msg[off+3])
+	return v, off + uint32Len, nil
+}
+
+func skipUint32(msg []byte, off int) (int, error) {
+	if off+uint32Len > len(msg) {
+		return off, errBaseLen
+	}
+	return off + uint32Len, nil
+}
+
+// packText appends the wire format of field to msg.
+func packText(msg []byte, field string) ([]byte, error) {
+	l := len(field)
+	if l > 255 {
+		return nil, errStringTooLong
+	}
+	msg = append(msg, byte(l))
+	msg = append(msg, field...)
+
+	return msg, nil
+}
+
+func unpackText(msg []byte, off int) (string, int, error) {
+	if off >= len(msg) {
+		return """", off, errBaseLen
+	}
+	beginOff := off + 1
+	endOff := beginOff + int(msg[off])
+	if endOff > len(msg) {
+		return """", off, errCalcLen
+	}
+	return string(msg[beginOff:endOff]), endOff, nil
+}
+
+// packBytes appends the wire format of field to msg.
+func packBytes(msg []byte, field []byte) []byte {
+	return append(msg, field...)
+}
+
+func unpackBytes(msg []byte, off int, field []byte) (int, error) {
+	newOff := off + len(field)
+	if newOff > len(msg) {
+		return off, errBaseLen
+	}
+	copy(field, msg[off:newOff])
+	return newOff, nil
+}
+
+const nonEncodedNameMax = 254
+
+// A Name is a non-encoded and non-escaped domain name. It is used instead of strings to avoid
+// allocations.
+type Name struct {
+	Data   [255]byte
+	Length uint8
+}
+
+// NewName creates a new Name from a string.
+func NewName(name string) (Name, error) {
+	n := Name{Length: uint8(len(name))}
+	if len(name) > len(n.Data) {
+		return Name{}, errCalcLen
+	}
+	copy(n.Data[:], name)
+	return n, nil
+}
+
+// MustNewName creates a new Name from a string and panics on error.
+func MustNewName(name string) Name {
+	n, err := NewName(name)
+	if err != nil {
+		panic(""creating name: "" + err.Error())
+	}
+	return n
+}
+
+// String implements fmt.Stringer.String.
+//
+// Note: characters inside the labels are not escaped in any way.
+func (n Name) String() string {
+	return string(n.Data[:n.Length])
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (n *Name) GoString() string {
+	return `dnsmessage.MustNewName(""` + printString(n.Data[:n.Length]) + `"")`
+}
+
+// pack appends the wire format of the Name to msg.
+//
+// Domain names are a sequence of counted strings split at the dots. They end
+// with a zero-length string. Compression can be used to reuse domain suffixes.
+//
+// The compression map will be updated with new domain suffixes. If compression
+// is nil, compression will not be used.
+func (n *Name) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+
+	if n.Length > nonEncodedNameMax {
+		return nil, errNameTooLong
+	}
+
+	// Add a trailing dot to canonicalize name.
+	if n.Length == 0 || n.Data[n.Length-1] != '.' {
+		return oldMsg, errNonCanonicalName
+	}
+
+	// Allow root domain.
+	if n.Data[0] == '.' && n.Length == 1 {
+		return append(msg, 0), nil
+	}
+
+	var nameAsStr string
+
+	// Emit sequence of counted strings, chopping at dots.
+	for i, begin := 0, 0; i < int(n.Length); i++ {
+		// Check for the end of the segment.
+		if n.Data[i] == '.' {
+			// The two most significant bits have special meaning.
+			// It isn't allowed for segments to be long enough to
+			// need them.
+			if i-begin >= 1<<6 {
+				return oldMsg, errSegTooLong
+			}
+
+			// Segments must have a non-zero length.
+			if i-begin == 0 {
+				return oldMsg, errZeroSegLen
+			}
+
+			msg = append(msg, byte(i-begin))
+
+			for j := begin; j < i; j++ {
+				msg = append(msg, n.Data[j])
+			}
+
+			begin = i + 1
+			continue
+		}
+
+		// We can only compress domain suffixes starting with a new
+		// segment. A pointer is two bytes with the two most significant
+		// bits set to 1 to indicate that it is a pointer.
+		if (i == 0 || n.Data[i-1] == '.') && compression != nil {
+			if ptr, ok := compression[string(n.Data[i:n.Length])]; ok {
+				// Hit. Emit a pointer instead of the rest of
+				// the domain.
+				return append(msg, byte(ptr>>8|0xC0), byte(ptr)), nil
+			}
+
+			// Miss. Add the suffix to the compression table if the
+			// offset can be stored in the available 14 bits.
+			newPtr := len(msg) - compressionOff
+			if newPtr <= int(^uint16(0)>>2) {
+				if nameAsStr == """" {
+					// allocate n.Data on the heap once, to avoid allocating it
+					// multiple times (for next labels).
+					nameAsStr = string(n.Data[:n.Length])
+				}
+				compression[nameAsStr[i:]] = uint16(newPtr)
+			}
+		}
+	}
+	return append(msg, 0), nil
+}
+
+// unpack unpacks a domain name.
+func (n *Name) unpack(msg []byte, off int) (int, error) {
+	// currOff is the current working offset.
+	currOff := off
+
+	// newOff is the offset where the next record will start. Pointers lead
+	// to data that belongs to other names and thus doesn't count towards to
+	// the usage of this name.
+	newOff := off
+
+	// ptr is the number of pointers followed.
+	var ptr int
+
+	// Name is a slice representation of the name data.
+	name := n.Data[:0]
+
+Loop:
+	for {
+		if currOff >= len(msg) {
+			return off, errBaseLen
+		}
+		c := int(msg[currOff])
+		currOff++
+		switch c & 0xC0 {
+		case 0x00: // String segment
+			if c == 0x00 {
+				// A zero length signals the end of the name.
+				break Loop
+			}
+			endOff := currOff + c
+			if endOff > len(msg) {
+				return off, errCalcLen
+			}
+
+			// Reject names containing dots.
+			// See issue golang/go#56246
+			for _, v := range msg[currOff:endOff] {
+				if v == '.' {
+					return off, errInvalidName
+				}
+			}
+
+			name = append(name, msg[currOff:endOff]...)
+			name = append(name, '.')
+			currOff = endOff
+		case 0xC0: // Pointer
+			if currOff >= len(msg) {
+				return off, errInvalidPtr
+			}
+			c1 := msg[currOff]
+			currOff++
+			if ptr == 0 {
+				newOff = currOff
+			}
+			// Don't follow too many pointers, maybe there's a loop.
+			if ptr++; ptr > 10 {
+				return off, errTooManyPtr
+			}
+			currOff = (c^0xC0)<<8 | int(c1)
+		default:
+			// Prefixes 0x80 and 0x40 are reserved.
+			return off, errReserved
+		}
+	}
+	if len(name) == 0 {
+		name = append(name, '.')
+	}
+	if len(name) > nonEncodedNameMax {
+		return off, errNameTooLong
+	}
+	n.Length = uint8(len(name))
+	if ptr == 0 {
+		newOff = currOff
+	}
+	return newOff, nil
+}
+
+func skipName(msg []byte, off int) (int, error) {
+	// newOff is the offset where the next record will start. Pointers lead
+	// to data that belongs to other names and thus doesn't count towards to
+	// the usage of this name.
+	newOff := off
+
+Loop:
+	for {
+		if newOff >= len(msg) {
+			return off, errBaseLen
+		}
+		c := int(msg[newOff])
+		newOff++
+		switch c & 0xC0 {
+		case 0x00:
+			if c == 0x00 {
+				// A zero length signals the end of the name.
+				break Loop
+			}
+			// literal string
+			newOff += c
+			if newOff > len(msg) {
+				return off, errCalcLen
+			}
+		case 0xC0:
+			// Pointer to somewhere else in msg.
+
+			// Pointers are two bytes.
+			newOff++
+
+			// Don't follow the pointer as the data here has ended.
+			break Loop
+		default:
+			// Prefixes 0x80 and 0x40 are reserved.
+			return off, errReserved
+		}
+	}
+
+	return newOff, nil
+}
+
+// A Question is a DNS query.
+type Question struct {
+	Name  Name
+	Type  Type
+	Class Class
+}
+
+// pack appends the wire format of the Question to msg.
+func (q *Question) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	msg, err := q.Name.pack(msg, compression, compressionOff)
+	if err != nil {
+		return msg, &nestedError{""Name"", err}
+	}
+	msg = packType(msg, q.Type)
+	return packClass(msg, q.Class), nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (q *Question) GoString() string {
+	return ""dnsmessage.Question{"" +
+		""Name: "" + q.Name.GoString() + "", "" +
+		""Type: "" + q.Type.GoString() + "", "" +
+		""Class: "" + q.Class.GoString() + ""}""
+}
+
+func unpackResourceBody(msg []byte, off int, hdr ResourceHeader) (ResourceBody, int, error) {
+	var (
+		r    ResourceBody
+		err  error
+		name string
+	)
+	switch hdr.Type {
+	case TypeA:
+		var rb AResource
+		rb, err = unpackAResource(msg, off)
+		r = &rb
+		name = ""A""
+	case TypeNS:
+		var rb NSResource
+		rb, err = unpackNSResource(msg, off)
+		r = &rb
+		name = ""NS""
+	case TypeCNAME:
+		var rb CNAMEResource
+		rb, err = unpackCNAMEResource(msg, off)
+		r = &rb
+		name = ""CNAME""
+	case TypeSOA:
+		var rb SOAResource
+		rb, err = unpackSOAResource(msg, off)
+		r = &rb
+		name = ""SOA""
+	case TypePTR:
+		var rb PTRResource
+		rb, err = unpackPTRResource(msg, off)
+		r = &rb
+		name = ""PTR""
+	case TypeMX:
+		var rb MXResource
+		rb, err = unpackMXResource(msg, off)
+		r = &rb
+		name = ""MX""
+	case TypeTXT:
+		var rb TXTResource
+		rb, err = unpackTXTResource(msg, off, hdr.Length)
+		r = &rb
+		name = ""TXT""
+	case TypeAAAA:
+		var rb AAAAResource
+		rb, err = unpackAAAAResource(msg, off)
+		r = &rb
+		name = ""AAAA""
+	case TypeSRV:
+		var rb SRVResource
+		rb, err = unpackSRVResource(msg, off)
+		r = &rb
+		name = ""SRV""
+	case TypeOPT:
+		var rb OPTResource
+		rb, err = unpackOPTResource(msg, off, hdr.Length)
+		r = &rb
+		name = ""OPT""
+	default:
+		var rb UnknownResource
+		rb, err = unpackUnknownResource(hdr.Type, msg, off, hdr.Length)
+		r = &rb
+		name = ""Unknown""
+	}
+	if err != nil {
+		return nil, off, &nestedError{name + "" record"", err}
+	}
+	return r, off + int(hdr.Length), nil
+}
+
+// A CNAMEResource is a CNAME Resource record.
+type CNAMEResource struct {
+	CNAME Name
+}
+
+func (r *CNAMEResource) realType() Type {
+	return TypeCNAME
+}
+
+// pack appends the wire format of the CNAMEResource to msg.
+func (r *CNAMEResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return r.CNAME.pack(msg, compression, compressionOff)
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *CNAMEResource) GoString() string {
+	return ""dnsmessage.CNAMEResource{CNAME: "" + r.CNAME.GoString() + ""}""
+}
+
+func unpackCNAMEResource(msg []byte, off int) (CNAMEResource, error) {
+	var cname Name
+	if _, err := cname.unpack(msg, off); err != nil {
+		return CNAMEResource{}, err
+	}
+	return CNAMEResource{cname}, nil
+}
+
+// An MXResource is an MX Resource record.
+type MXResource struct {
+	Pref uint16
+	MX   Name
+}
+
+func (r *MXResource) realType() Type {
+	return TypeMX
+}
+
+// pack appends the wire format of the MXResource to msg.
+func (r *MXResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+	msg = packUint16(msg, r.Pref)
+	msg, err := r.MX.pack(msg, compression, compressionOff)
+	if err != nil {
+		return oldMsg, &nestedError{""MXResource.MX"", err}
+	}
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *MXResource) GoString() string {
+	return ""dnsmessage.MXResource{"" +
+		""Pref: "" + printUint16(r.Pref) + "", "" +
+		""MX: "" + r.MX.GoString() + ""}""
+}
+
+func unpackMXResource(msg []byte, off int) (MXResource, error) {
+	pref, off, err := unpackUint16(msg, off)
+	if err != nil {
+		return MXResource{}, &nestedError{""Pref"", err}
+	}
+	var mx Name
+	if _, err := mx.unpack(msg, off); err != nil {
+		return MXResource{}, &nestedError{""MX"", err}
+	}
+	return MXResource{pref, mx}, nil
+}
+
+// An NSResource is an NS Resource record.
+type NSResource struct {
+	NS Name
+}
+
+func (r *NSResource) realType() Type {
+	return TypeNS
+}
+
+// pack appends the wire format of the NSResource to msg.
+func (r *NSResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return r.NS.pack(msg, compression, compressionOff)
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *NSResource) GoString() string {
+	return ""dnsmessage.NSResource{NS: "" + r.NS.GoString() + ""}""
+}
+
+func unpackNSResource(msg []byte, off int) (NSResource, error) {
+	var ns Name
+	if _, err := ns.unpack(msg, off); err != nil {
+		return NSResource{}, err
+	}
+	return NSResource{ns}, nil
+}
+
+// A PTRResource is a PTR Resource record.
+type PTRResource struct {
+	PTR Name
+}
+
+func (r *PTRResource) realType() Type {
+	return TypePTR
+}
+
+// pack appends the wire format of the PTRResource to msg.
+func (r *PTRResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return r.PTR.pack(msg, compression, compressionOff)
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *PTRResource) GoString() string {
+	return ""dnsmessage.PTRResource{PTR: "" + r.PTR.GoString() + ""}""
+}
+
+func unpackPTRResource(msg []byte, off int) (PTRResource, error) {
+	var ptr Name
+	if _, err := ptr.unpack(msg, off); err != nil {
+		return PTRResource{}, err
+	}
+	return PTRResource{ptr}, nil
+}
+
+// An SOAResource is an SOA Resource record.
+type SOAResource struct {
+	NS      Name
+	MBox    Name
+	Serial  uint32
+	Refresh uint32
+	Retry   uint32
+	Expire  uint32
+
+	// MinTTL the is the default TTL of Resources records which did not
+	// contain a TTL value and the TTL of negative responses. (RFC 2308
+	// Section 4)
+	MinTTL uint32
+}
+
+func (r *SOAResource) realType() Type {
+	return TypeSOA
+}
+
+// pack appends the wire format of the SOAResource to msg.
+func (r *SOAResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+	msg, err := r.NS.pack(msg, compression, compressionOff)
+	if err != nil {
+		return oldMsg, &nestedError{""SOAResource.NS"", err}
+	}
+	msg, err = r.MBox.pack(msg, compression, compressionOff)
+	if err != nil {
+		return oldMsg, &nestedError{""SOAResource.MBox"", err}
+	}
+	msg = packUint32(msg, r.Serial)
+	msg = packUint32(msg, r.Refresh)
+	msg = packUint32(msg, r.Retry)
+	msg = packUint32(msg, r.Expire)
+	return packUint32(msg, r.MinTTL), nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *SOAResource) GoString() string {
+	return ""dnsmessage.SOAResource{"" +
+		""NS: "" + r.NS.GoString() + "", "" +
+		""MBox: "" + r.MBox.GoString() + "", "" +
+		""Serial: "" + printUint32(r.Serial) + "", "" +
+		""Refresh: "" + printUint32(r.Refresh) + "", "" +
+		""Retry: "" + printUint32(r.Retry) + "", "" +
+		""Expire: "" + printUint32(r.Expire) + "", "" +
+		""MinTTL: "" + printUint32(r.MinTTL) + ""}""
+}
+
+func unpackSOAResource(msg []byte, off int) (SOAResource, error) {
+	var ns Name
+	off, err := ns.unpack(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""NS"", err}
+	}
+	var mbox Name
+	if off, err = mbox.unpack(msg, off); err != nil {
+		return SOAResource{}, &nestedError{""MBox"", err}
+	}
+	serial, off, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""Serial"", err}
+	}
+	refresh, off, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""Refresh"", err}
+	}
+	retry, off, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""Retry"", err}
+	}
+	expire, off, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""Expire"", err}
+	}
+	minTTL, _, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""MinTTL"", err}
+	}
+	return SOAResource{ns, mbox, serial, refresh, retry, expire, minTTL}, nil
+}
+
+// A TXTResource is a TXT Resource record.
+type TXTResource struct {
+	TXT []string
+}
+
+func (r *TXTResource) realType() Type {
+	return TypeTXT
+}
+
+// pack appends the wire format of the TXTResource to msg.
+func (r *TXTResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+	for _, s := range r.TXT {
+		var err error
+		msg, err = packText(msg, s)
+		if err != nil {
+			return oldMsg, err
+		}
+	}
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *TXTResource) GoString() string {
+	s := ""dnsmessage.TXTResource{TXT: []string{""
+	if len(r.TXT) == 0 {
+		return s + ""}}""
+	}
+	s += `""` + printString([]byte(r.TXT[0]))
+	for _, t := range r.TXT[1:] {
+		s += `"", ""` + printString([]byte(t))
+	}
+	return s + `""}}`
+}
+
+func unpackTXTResource(msg []byte, off int, length uint16) (TXTResource, error) {
+	txts := make([]string, 0, 1)
+	for n := uint16(0); n < length; {
+		var t string
+		var err error
+		if t, off, err = unpackText(msg, off); err != nil {
+			return TXTResource{}, &nestedError{""text"", err}
+		}
+		// Check if we got too many bytes.
+		if length-n < uint16(len(t))+1 {
+			return TXTResource{}, errCalcLen
+		}
+		n += uint16(len(t)) + 1
+		txts = append(txts, t)
+	}
+	return TXTResource{txts}, nil
+}
+
+// An SRVResource is an SRV Resource record.
+type SRVResource struct {
+	Priority uint16
+	Weight   uint16
+	Port     uint16
+	Target   Name // Not compressed as per RFC 2782.
+}
+
+func (r *SRVResource) realType() Type {
+	return TypeSRV
+}
+
+// pack appends the wire format of the SRVResource to msg.
+func (r *SRVResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+	msg = packUint16(msg, r.Priority)
+	msg = packUint16(msg, r.Weight)
+	msg = packUint16(msg, r.Port)
+	msg, err := r.Target.pack(msg, nil, compressionOff)
+	if err != nil {
+		return oldMsg, &nestedError{""SRVResource.Target"", err}
+	}
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *SRVResource) GoString() string {
+	return ""dnsmessage.SRVResource{"" +
+		""Priority: "" + printUint16(r.Priority) + "", "" +
+		""Weight: "" + printUint16(r.Weight) + "", "" +
+		""Port: "" + printUint16(r.Port) + "", "" +
+		""Target: "" + r.Target.GoString() + ""}""
+}
+
+func unpackSRVResource(msg []byte, off int) (SRVResource, error) {
+	priority, off, err := unpackUint16(msg, off)
+	if err != nil {
+		return SRVResource{}, &nestedError{""Priority"", err}
+	}
+	weight, off, err := unpackUint16(msg, off)
+	if err != nil {
+		return SRVResource{}, &nestedError{""Weight"", err}
+	}
+	port, off, err := unpackUint16(msg, off)
+	if err != nil {
+		return SRVResource{}, &nestedError{""Port"", err}
+	}
+	var target Name
+	if _, err := target.unpack(msg, off); err != nil {
+		return SRVResource{}, &nestedError{""Target"", err}
+	}
+	return SRVResource{priority, weight, port, target}, nil
+}
+
+// An AResource is an A Resource record.
+type AResource struct {
+	A [4]byte
+}
+
+func (r *AResource) realType() Type {
+	return TypeA
+}
+
+// pack appends the wire format of the AResource to msg.
+func (r *AResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return packBytes(msg, r.A[:]), nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *AResource) GoString() string {
+	return ""dnsmessage.AResource{"" +
+		""A: [4]byte{"" + printByteSlice(r.A[:]) + ""}}""
+}
+
+func unpackAResource(msg []byte, off int) (AResource, error) {
+	var a [4]byte
+	if _, err := unpackBytes(msg, off, a[:]); err != nil {
+		return AResource{}, err
+	}
+	return AResource{a}, nil
+}
+
+// An AAAAResource is an AAAA Resource record.
+type AAAAResource struct {
+	AAAA [16]byte
+}
+
+func (r *AAAAResource) realType() Type {
+	return TypeAAAA
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *AAAAResource) GoString() string {
+	return ""dnsmessage.AAAAResource{"" +
+		""AAAA: [16]byte{"" + printByteSlice(r.AAAA[:]) + ""}}""
+}
+
+// pack appends the wire format of the AAAAResource to msg.
+func (r *AAAAResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return packBytes(msg, r.AAAA[:]), nil
+}
+
+func unpackAAAAResource(msg []byte, off int) (AAAAResource, error) {
+	var aaaa [16]byte
+	if _, err := unpackBytes(msg, off, aaaa[:]); err != nil {
+		return AAAAResource{}, err
+	}
+	return AAAAResource{aaaa}, nil
+}
+
+// An OPTResource is an OPT pseudo Resource record.
+//
+// The pseudo resource record is part of the extension mechanisms for DNS
+// as defined in RFC 6891.
+type OPTResource struct {
+	Options []Option
+}
+
+// An Option represents a DNS message option within OPTResource.
+//
+// The message option is part of the extension mechanisms for DNS as
+// defined in RFC 6891.
+type Option struct {
+	Code uint16 // option code
+	Data []byte
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (o *Option) GoString() string {
+	return ""dnsmessage.Option{"" +
+		""Code: "" + printUint16(o.Code) + "", "" +
+		""Data: []byte{"" + printByteSlice(o.Data) + ""}}""
+}
+
+func (r *OPTResource) realType() Type {
+	return TypeOPT
+}
+
+func (r *OPTResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	for _, opt := range r.Options {
+		msg = packUint16(msg, opt.Code)
+		l := uint16(len(opt.Data))
+		msg = packUint16(msg, l)
+		msg = packBytes(msg, opt.Data)
+	}
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *OPTResource) GoString() string {
+	s := ""dnsmessage.OPTResource{Options: []dnsmessage.Option{""
+	if len(r.Options) == 0 {
+		return s + ""}}""
+	}
+	s += r.Options[0].GoString()
+	for _, o := range r.Options[1:] {
+		s += "", "" + o.GoString()
+	}
+	return s + ""}}""
+}
+
+func unpackOPTResource(msg []byte, off int, length uint16) (OPTResource, error) {
+	var opts []Option
+	for oldOff := off; off < oldOff+int(length); {
+		var err error
+		var o Option
+		o.Code, off, err = unpackUint16(msg, off)
+		if err != nil {
+			return OPTResource{}, &nestedError{""Code"", err}
+		}
+		var l uint16
+		l, off, err = unpackUint16(msg, off)
+		if err != nil {
+			return OPTResource{}, &nestedError{""Data"", err}
+		}
+		o.Data = make([]byte, l)
+		if copy(o.Data, msg[off:]) != int(l) {
+			return OPTResource{}, &nestedError{""Data"", errCalcLen}
+		}
+		off += int(l)
+		opts = append(opts, o)
+	}
+	return OPTResource{opts}, nil
+}
+
+// An UnknownResource is a catch-all container for unknown record types.
+type UnknownResource struct {
+	Type Type
+	Data []byte
+}
+
+func (r *UnknownResource) realType() Type {
+	return r.Type
+}
+
+// pack appends the wire format of the UnknownResource to msg.
+func (r *UnknownResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return packBytes(msg, r.Data[:]), nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *UnknownResource) GoString() string {
+	return ""dnsmessage.UnknownResource{"" +
+		""Type: "" + r.Type.GoString() + "", "" +
+		""Data: []byte{"" + printByteSlice(r.Data) + ""}}""
+}
+
+func unpackUnknownResource(recordType Type, msg []byte, off int, length uint16) (UnknownResource, error) {
+	parsed := UnknownResource{
+		Type: recordType,
+		Data: make([]byte, length),
+	}
+	if _, err := unpackBytes(msg, off, parsed.Data); err != nil {
+		return UnknownResource{}, err
+	}
+	return parsed, nil
+}"
kubernetes/kubernetes,5da3bd6eb5d5a1a3d885ea5b21ce6b6d198029d5,Kubernetes Prow Robot,2025-10-03T00:38:58Z,"Merge pull request #134127 from aojea/apiserver_noproxy

integration test: webhook proxy behavior",vendor/modules.txt,1,0,1,"@@ -806,6 +806,7 @@ golang.org/x/mod/semver
 # golang.org/x/net v0.43.0
 ## explicit; go 1.23.0
 golang.org/x/net/context
+golang.org/x/net/dns/dnsmessage
 golang.org/x/net/html
 golang.org/x/net/html/atom
 golang.org/x/net/html/charset"
kubernetes/kubernetes,d9405d9eafb8a1af5d6c20efc3f4b3d7c2ddd02a,Kubernetes Prow Robot,2025-10-02T23:00:57Z,"Merge pull request #133394 from BenTheElder/invariants

check invariant metrics after e2e tests",test/e2e/e2e_test.go,1,0,1,"@@ -54,6 +54,7 @@ import (
 	_ ""k8s.io/kubernetes/test/e2e/common""
 	_ ""k8s.io/kubernetes/test/e2e/dra""
 	_ ""k8s.io/kubernetes/test/e2e/instrumentation""
+	_ ""k8s.io/kubernetes/test/e2e/invariants""
 	_ ""k8s.io/kubernetes/test/e2e/kubectl""
 	_ ""k8s.io/kubernetes/test/e2e/lifecycle""
 	_ ""k8s.io/kubernetes/test/e2e/lifecycle/bootstrap"""
kubernetes/kubernetes,d9405d9eafb8a1af5d6c20efc3f4b3d7c2ddd02a,Kubernetes Prow Robot,2025-10-02T23:00:57Z,"Merge pull request #133394 from BenTheElder/invariants

check invariant metrics after e2e tests",test/e2e/invariants/OWNERS,11,0,11,"@@ -0,0 +1,11 @@
+# go.k8s.io/owners
+options:
+  no_parent_owners: true
+approvers:
+  - bentheelder
+  - aojea
+  - pohly
+reviewers:
+  - bentheelder
+  - aojea
+  - pohly"
kubernetes/kubernetes,d9405d9eafb8a1af5d6c20efc3f4b3d7c2ddd02a,Kubernetes Prow Robot,2025-10-02T23:00:57Z,"Merge pull request #133394 from BenTheElder/invariants

check invariant metrics after e2e tests",test/e2e/invariants/README.md,12,0,12,"@@ -0,0 +1,12 @@
+# Invariant Tests
+
+This package implements [KEP-5468 Invariant Testing][kep].
+
+Before adding new tests here, please reach out to SIG-Testing to discuss
+with the SIG and Tech Leads.
+
+https://github.com/kubernetes/community/tree/master/sig-testing#contact
+
+For more details, see [the kep][kep].
+
+[kep]: https://git.k8s.io/enhancements/keps/sig-testing/5468-invariant-testing"
kubernetes/kubernetes,d9405d9eafb8a1af5d6c20efc3f4b3d7c2ddd02a,Kubernetes Prow Robot,2025-10-02T23:00:57Z,"Merge pull request #133394 from BenTheElder/invariants

check invariant metrics after e2e tests",test/e2e/invariants/metrics.go,182,0,182,"@@ -0,0 +1,182 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+// please speak to SIG-Testing leads before adding anything to this package
+// see: https://git.k8s.io/enhancements/keps/sig-testing/5468-invariant-testing
+package invariants
+
+import (
+	""context""
+	""strings""
+
+	clientset ""k8s.io/client-go/kubernetes""
+	""k8s.io/component-base/metrics/testutil""
+	""k8s.io/kubernetes/test/e2e/framework""
+	e2emetrics ""k8s.io/kubernetes/test/e2e/framework/metrics""
+
+	""github.com/onsi/ginkgo/v2""
+	ginkgotypes ""github.com/onsi/ginkgo/v2/types""
+)
+
+// checks for api-server metrics that indicate an internal bug has occurred
+const invariantMetricsLeafText = ""should enable checking invariant metrics""
+
+var _ = framework.SIGDescribe(""testing"")(""Invariant Metrics"", func() {
+	// this test is a sentinel for selecting the report after suite logic
+	//
+	// this allows us to run it by default in most jobs, but it can be opted-out,
+	// does not run when selecting Conformance, and it can be tagged Flaky
+	// if we encounter issues with it
+	ginkgo.It(invariantMetricsLeafText, func() {})
+})
+
+var _ = ginkgo.ReportAfterSuite(""Invariant Metrics"", func(ctx ginkgo.SpecContext, report ginkgo.Report) {
+	// skip early if we are in dry-run mode and didn't really run any tests
+	if report.SuiteConfig.DryRun {
+		return
+	}
+	// check if we ran the 'should enabled checking invariants' ""test""
+	invariantsSelected := false
+	for _, spec := range report.SpecReports {
+		if spec.LeafNodeText == invariantMetricsLeafText {
+			invariantsSelected = spec.State.Is(ginkgotypes.SpecStatePassed)
+			break
+		}
+	}
+	// skip if the associated ""test"" was skipped
+	if !invariantsSelected {
+		return
+	}
+	// otherwise actually check invariants now
+	checkInvariantMetrics(ctx)
+})
+
+// apiServerMetricInvariant represents an api-server metric invariant, all
+// fields must be specified
+type apiServerMetricInvariant struct {
+	// Metric is the metric name
+	Metric string
+	// SIG associated with the invariant
+	// Bugs related to this invariant check failing should be labeled with
+	// this SIG.
+	SIG string
+	// Owners are the individuals responsible for the invariant
+	// Bugs related to this invariant check failing should be assigned to these
+	// GitHub handles
+	Owners []string
+	// IsValid should return false if the metric samples violate the invariant
+	IsValid func(testutil.Samples) bool
+}
+
+// Please speak to SIG-Testing leads before adding anything here.
+// All fields must be specified
+var apiServerMetricInvariants = []apiServerMetricInvariant{
+	{
+		// TODO: Migrate to apiserver_validation_declarative_validation_parity_discrepancies_total
+		// when it reaches beta / when this metric is deprecated.
+		// For now we uare using the previous beta metric.
+		Metric: ""apiserver_validation_declarative_validation_mismatch_total"",
+		SIG:    ""api-machinery"",
+		Owners: []string{""aaron-prindle"", ""jpbetz"", ""thockin""},
+		IsValid: func(samples testutil.Samples) bool {
+			// declarative validation mismatch should never be non-zero
+			for _, sample := range samples {
+				if sample.Value != 0 {
+					return false
+				}
+			}
+			return true
+		},
+	},
+	{
+		// TODO: Migrate to apiserver_validation_declarative_validation_panics_total
+		// when it reaches beta / when this metric is deprecated.
+		// For now we uare using the previous beta metric.
+		Metric: ""apiserver_validation_declarative_validation_panic_total"",
+		SIG:    ""api-machinery"",
+		Owners: []string{""aaron-prindle"", ""jpbetz"", ""thockin""},
+		IsValid: func(samples testutil.Samples) bool {
+			// declarative validation panics should never be non-zero
+			for _, sample := range samples {
+				if sample.Value != 0 {
+					return false
+				}
+			}
+			return true
+		},
+	},
+}
+
+func checkInvariantMetrics(ctx context.Context) {
+	// Grab metrics
+	config, err := framework.LoadConfig()
+	if err != nil {
+		framework.Failf(""error loading client config: %v"", err)
+	}
+	c, err := clientset.NewForConfig(config)
+	if err != nil {
+		framework.Failf(""error loading client config: %v"", err)
+	}
+	grabber, err := e2emetrics.NewMetricsGrabber(ctx, c, nil, config, false, false, false, true, false, false)
+	if err != nil {
+		framework.Failf(""error creating metrics grabber: %v"", err)
+	}
+	apiserverMetrics, err := grabber.GrabFromAPIServer(ctx)
+	if err != nil {
+		framework.Failf(""error grabbing api-server metrics: %v"", err)
+	}
+
+	// Check invariant metrics.
+	//
+	//
+	// Please speak to SIG-Testing leads before adding anything here.
+	for _, invariant := range apiServerMetricInvariants {
+		checkAPIServerInvariant(apiserverMetrics, &invariant)
+	}
+}
+
+func checkAPIServerInvariant(metrics e2emetrics.APIServerMetrics, invariant *apiServerMetricInvariant) {
+	metric := invariant.Metric
+	samples, ok := metrics[metric]
+	if !ok || len(samples) == 0 {
+		framework.Failf(
+			`Invariant failed for missing metric: %v
+
+If this failed on a pull request, please check if the PR changes may be related to the failure.
+If not, you can also search for an existing GitHub issue before filing a new issue.
+
+If this failed in a periodic CI job, please file a bug and /assign the owners.
+
+Owners for this metric: %v
+Associated SIG: %v`,
+			metric, strings.Join(invariant.Owners, "" ""), invariant.SIG,
+		)
+	}
+	if !invariant.IsValid(samples) {
+		framework.Failf(
+			`Invariant failed for metric: %v
+
+If this failed on a pull request, please check if the PR changes may be related to the failure.
+If not, you can also search for an existing GitHub issue before filing a new issue.
+
+If this failed in a periodic CI job, please file a bug and /assign the owners.
+
+Owners for this metric: %v
+Associated SIG: %v`,
+			metric, strings.Join(invariant.Owners, "" ""), invariant.SIG,
+		)
+	}
+}"
kubernetes/kubernetes,d9405d9eafb8a1af5d6c20efc3f4b3d7c2ddd02a,Kubernetes Prow Robot,2025-10-02T23:00:57Z,"Merge pull request #133394 from BenTheElder/invariants

check invariant metrics after e2e tests",test/e2e/invariants/metrics_test.go,37,0,37,"@@ -0,0 +1,37 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package invariants
+
+import ""testing""
+
+func TestApiServerMetricInvariantsFieldsAreSet(t *testing.T) {
+	// enforce that all fields are set for all registered metrics
+	for i, inv := range apiServerMetricInvariants {
+		if inv.Metric == """" {
+			t.Errorf(""apiServerMetricInvariants[%d].Metric is not set"", i)
+		}
+		if inv.SIG == """" {
+			t.Errorf(""apiServerMetricInvariants[%d].SIG is not set"", i)
+		}
+		if len(inv.Owners) == 0 {
+			t.Errorf(""apiServerMetricInvariants[%d].Owners is not set"", i)
+		}
+		if inv.IsValid == nil {
+			t.Errorf(""apiServerMetricInvariants[%d].IsValid is not set"", i)
+		}
+	}
+}"
kubernetes/kubernetes,d9405d9eafb8a1af5d6c20efc3f4b3d7c2ddd02a,Kubernetes Prow Robot,2025-10-02T23:00:57Z,"Merge pull request #133394 from BenTheElder/invariants

check invariant metrics after e2e tests",test/e2e/suites.go,1,0,1,"@@ -35,6 +35,7 @@ func AfterSuiteActions(ctx context.Context) {
 	if framework.TestContext.ReportDir != """" {
 		framework.CoreDump(framework.TestContext.ReportDir)
 	}
+	// TODO: nothing is using this? what should we do with it?
 	if framework.TestContext.GatherSuiteMetricsAfterTest {
 		if err := gatherTestSuiteMetrics(ctx); err != nil {
 			framework.Logf(""Error gathering metrics: %v"", err)"
kubernetes/kubernetes,0b0a5974f829f4d8ff0f4c43165d1a0e492a5742,Antonio Ojea,2025-09-18T08:51:32Z,"integration test: webhook proxy behavior

adds a new integration test to verify that the API server's egress
to admission webhooks correctly respects the standard `HTTPS_PROXY`
and `NO_PROXY` environment variables.

It adds a new test util to implement a Fake DNS server that allows
to override DNS resolution in tests, specially useful for integration
test that can only bind to localhost the servers, that is ignored
by certain functionalities.",test/integration/apiserver/httpproxy/httpproxy_test.go,259,0,259,"@@ -0,0 +1,259 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package httpproxy
+
+import (
+	""context""
+	""encoding/json""
+	""encoding/pem""
+	""fmt""
+	""io""
+	""net/http""
+	""net/http/httptest""
+	""net/url""
+	""strings""
+	""testing""
+	""time""
+
+	admissionv1 ""k8s.io/api/admission/v1""
+	admissionregistrationv1 ""k8s.io/api/admissionregistration/v1""
+	corev1 ""k8s.io/api/core/v1""
+	metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1""
+	utilnettesting ""k8s.io/apimachinery/pkg/util/net/testing""
+	""k8s.io/client-go/kubernetes""
+	kastesting ""k8s.io/kubernetes/cmd/kube-apiserver/app/testing""
+	""k8s.io/kubernetes/test/integration/framework""
+	""k8s.io/kubernetes/test/utils/fakedns""
+)
+
+func TestEgressToWebhookWithProxy(t *testing.T) {
+	// Go's http.ProxyFromEnvironment bypasses the proxy
+	// for localhost/127.0.0.1. To test this, we must make the HTTP client
+	// resolve a non-local hostname to 127.0.0.1.
+	const (
+		webhookHostname = ""webhook.example.com""
+		proxyHostname   = ""proxy.example.com""
+	)
+
+	hosts := map[string]string{
+		webhookHostname: ""127.0.0.1"",
+		proxyHostname:   ""127.0.0.1"",
+	}
+
+	// Fake DNS server
+	dnsServer, err := fakedns.NewServer(hosts)
+	if err != nil {
+		t.Fatalf(""failed to create fake DNS server: %v"", err)
+	}
+	dnsServer.Hijack(t)
+
+	webhookHit := make(chan struct{}, 2)
+	webhookServer := httptest.NewUnstartedServer(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
+		t.Log(""Webhook received request"")
+		w.Header().Set(""Content-Type"", ""application/json"")
+		body, err := io.ReadAll(r.Body)
+		if err != nil {
+			t.Logf(""Failed to read webhook request body: %v"", err)
+			http.Error(w, ""failed to read body"", http.StatusBadRequest)
+			return
+		}
+		var review admissionv1.AdmissionReview
+		if err := json.Unmarshal(body, &review); err != nil {
+			t.Logf(""Failed to unmarshal admission review: %v"", err)
+			http.Error(w, ""failed to unmarshal"", http.StatusBadRequest)
+			return
+		}
+
+		resp, err := json.Marshal(admissionv1.AdmissionReview{
+			TypeMeta: metav1.TypeMeta{APIVersion: ""admission.k8s.io/v1"", Kind: ""AdmissionReview""},
+			Response: &admissionv1.AdmissionResponse{UID: review.Request.UID, Allowed: true},
+		})
+		if err != nil {
+			t.Logf(""Failed to marshal admission response: %v"", err)
+			http.Error(w, ""failed to marshal response"", http.StatusInternalServerError)
+			return
+		}
+		_, _ = w.Write(resp)
+		select {
+		case webhookHit <- struct{}{}:
+		default:
+		}
+	}))
+	webhookServer.EnableHTTP2 = true
+	webhookServer.StartTLS()
+	defer webhookServer.Close() //nolint:errcheck
+
+	// Proxy server
+	proxyHit := make(chan struct{}, 2)
+	proxyHandler := utilnettesting.NewHTTPProxyHandler(t, func(r *http.Request) bool {
+		t.Logf(""Proxy received request for: %s %s"", r.Method, r.URL.String())
+		select {
+		case proxyHit <- struct{}{}:
+		default:
+		}
+		return true
+	})
+	defer proxyHandler.Wait()
+
+	proxyServer := httptest.NewUnstartedServer(proxyHandler)
+	proxyServer.Start()
+	defer proxyServer.Close() //nolint:errcheck
+
+	proxyServerURL, err := url.Parse(proxyServer.URL)
+	if err != nil {
+		t.Fatalf(""failed to parse proxy server URL: %v"", err)
+	}
+	proxyURL := fmt.Sprintf(""http://%s:%s"", proxyHostname, proxyServerURL.Port())
+
+	etcd := framework.SharedEtcd()
+
+	// Construct the webhook URL using our fake hostname and the real port.
+	webhookServerURL, err := url.Parse(webhookServer.URL)
+	if err != nil {
+		t.Fatalf(""failed to parse webhook server URL: %v"", err)
+	}
+	webhookURL := fmt.Sprintf(""https://%s:%s"", webhookHostname, webhookServerURL.Port())
+	caCertDER := webhookServer.TLS.Certificates[0].Certificate[0]
+	caCertPEM := pem.EncodeToMemory(&pem.Block{
+		Type:  ""CERTIFICATE"",
+		Bytes: caCertDER,
+	})
+
+	sideEffectsNone := admissionregistrationv1.SideEffectClassNone
+	failPolicy := admissionregistrationv1.Fail
+	webhookConfig := &admissionregistrationv1.ValidatingWebhookConfiguration{
+		ObjectMeta: metav1.ObjectMeta{Name: ""test-webhook-proxy""},
+		Webhooks: []admissionregistrationv1.ValidatingWebhook{
+			{
+				Name: ""test-proxy.example.com"",
+				ClientConfig: admissionregistrationv1.WebhookClientConfig{
+					URL:      &webhookURL,
+					CABundle: caCertPEM,
+				},
+				Rules: []admissionregistrationv1.RuleWithOperations{
+					{
+						Operations: []admissionregistrationv1.OperationType{admissionregistrationv1.Create},
+						Rule: admissionregistrationv1.Rule{
+							APIGroups:   []string{""""},
+							APIVersions: []string{""v1""},
+							Resources:   []string{""pods""},
+						},
+					},
+				},
+				SideEffects:             &sideEffectsNone,
+				AdmissionReviewVersions: []string{""v1""},
+				TimeoutSeconds:          &[]int32{30}[0],
+				FailurePolicy:           &failPolicy,
+			},
+		},
+	}
+
+	// Test with HTTP_PROXY
+	t.Log(""Testing with HTTP_PROXY"")
+	t.Setenv(""HTTP_PROXY"", proxyURL)
+	t.Setenv(""HTTPS_PROXY"", proxyURL)
+	t.Setenv(""NO_PROXY"", """") // Ensure NO_PROXY is cleared
+	serverA := kastesting.StartTestServerOrDie(t, kastesting.NewDefaultTestServerOptions(), []string{""--disable-admission-plugins=ServiceAccount""}, etcd)
+
+	clientA, err := kubernetes.NewForConfig(serverA.ClientConfig)
+	if err != nil {
+		t.Fatalf(""failed to create kubernetes client: %v"", err)
+	}
+
+	_, err = clientA.AdmissionregistrationV1().ValidatingWebhookConfigurations().Create(context.Background(), webhookConfig, metav1.CreateOptions{})
+	if err != nil {
+		t.Fatalf(""failed to create webhook config: %v"", err)
+	}
+	// It can take a moment for the webhook to be consistently available.
+	time.Sleep(2 * time.Second)
+
+	pod := &corev1.Pod{
+		ObjectMeta: metav1.ObjectMeta{Name: ""test-pod""},
+		Spec: corev1.PodSpec{
+			Containers: []corev1.Container{{Name: ""test"", Image: ""test""}},
+		},
+	}
+	_, err = clientA.CoreV1().Pods(""default"").Create(context.Background(), pod, metav1.CreateOptions{})
+	if err != nil {
+		t.Errorf(""failed to create pod: %v"", err)
+	}
+
+	select {
+	case <-proxyHit:
+		t.Log(""Proxy was hit as expected"")
+	case <-time.After(5 * time.Second):
+		t.Fatal(""Proxy was not hit"")
+	}
+	select {
+	case <-webhookHit:
+		t.Log(""Webhook was hit as expected"")
+	case <-time.After(5 * time.Second):
+		t.Fatal(""Webhook was not hit"")
+	}
+
+	serverA.TearDownFn()
+
+	// Clear channels for the next run
+	for len(proxyHit) > 0 {
+		<-proxyHit
+	}
+	for len(webhookHit) > 0 {
+		<-webhookHit
+	}
+
+	// Part 2: Test with NO_PROXY
+	t.Log(""Testing with NO_PROXY"")
+	t.Setenv(""HTTP_PROXY"", proxyURL)
+	t.Setenv(""HTTPS_PROXY"", proxyURL)
+	// Use the fake hostname in NO_PROXY
+	t.Setenv(""NO_PROXY"", strings.Join([]string{webhookHostname, ""127.0.0.1"", ""localhost""}, "",""))
+
+	serverB := kastesting.StartTestServerOrDie(t, kastesting.NewDefaultTestServerOptions(), []string{""--disable-admission-plugins=ServiceAccount""}, etcd)
+	defer serverB.TearDownFn()
+
+	clientB, err := kubernetes.NewForConfig(serverB.ClientConfig)
+	if err != nil {
+		t.Fatalf(""failed to create kubernetes client: %v"", err)
+	}
+
+	pod2 := &corev1.Pod{
+		ObjectMeta: metav1.ObjectMeta{Name: ""test-pod-2""},
+		Spec: corev1.PodSpec{
+			Containers: []corev1.Container{{Name: ""test"", Image: ""test""}},
+		},
+	}
+	_, err = clientB.CoreV1().Pods(""default"").Create(context.Background(), pod2, metav1.CreateOptions{})
+	if err != nil {
+		t.Fatalf(""failed to create pod: %v"", err)
+	}
+
+	select {
+	case <-webhookHit:
+		t.Log(""Webhook was hit as expected"")
+	case <-time.After(5 * time.Second):
+		t.Fatal(""Webhook was not hit"")
+	}
+
+	select {
+	case <-proxyHit:
+		t.Fatal(""Proxy was hit, but should have been bypassed by NO_PROXY"")
+	case <-time.After(2 * time.Second):
+		t.Log(""Proxy was not hit, as expected"")
+	}
+	// It needs to break the proxy connection or it will panic at cleanup
+	webhookServer.Close()
+}"
kubernetes/kubernetes,0b0a5974f829f4d8ff0f4c43165d1a0e492a5742,Antonio Ojea,2025-09-18T08:51:32Z,"integration test: webhook proxy behavior

adds a new integration test to verify that the API server's egress
to admission webhooks correctly respects the standard `HTTPS_PROXY`
and `NO_PROXY` environment variables.

It adds a new test util to implement a Fake DNS server that allows
to override DNS resolution in tests, specially useful for integration
test that can only bind to localhost the servers, that is ignored
by certain functionalities.",test/integration/apiserver/httpproxy/main_test.go,27,0,27,"@@ -0,0 +1,27 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package httpproxy
+
+import (
+	""testing""
+
+	""k8s.io/kubernetes/test/integration/framework""
+)
+
+func TestMain(m *testing.M) {
+	framework.EtcdMain(m.Run)
+}"
kubernetes/kubernetes,0b0a5974f829f4d8ff0f4c43165d1a0e492a5742,Antonio Ojea,2025-09-18T08:51:32Z,"integration test: webhook proxy behavior

adds a new integration test to verify that the API server's egress
to admission webhooks correctly respects the standard `HTTPS_PROXY`
and `NO_PROXY` environment variables.

It adds a new test util to implement a Fake DNS server that allows
to override DNS resolution in tests, specially useful for integration
test that can only bind to localhost the servers, that is ignored
by certain functionalities.",test/utils/fakedns/fakedns.go,129,0,129,"@@ -0,0 +1,129 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package fakedns
+
+import (
+	""fmt""
+	""net""
+	""strings""
+	""sync""
+	""testing""
+	""time""
+
+	netutils ""k8s.io/utils/net""
+
+	""golang.org/x/net/dns/dnsmessage""
+
+	nettesting ""k8s.io/kubernetes/third_party/forked/golang/net/testing""
+)
+
+// dnsHijackLock is a mutex to ensure that only one test can hijack DNS at a time.
+// This is necessary because net.DefaultResolver is a global variable.
+var dnsHijackLock sync.Mutex
+
+// Server is a fake DNS server that can be used to override DNS resolution in tests.
+// This is particularly useful for testing components that rely on DNS without needing
+// to set up an actual DNS server. The server can be configured with a map of domain
+// names to IP addresses, and it will respond to DNS queries accordingly.
+// To use the fake DNS server, create an instance using NewServer, then call
+// Hijack to redirect DNS queries to the fake server.
+// This helper does not support running tests in parallel.
+type Server struct {
+	dnsServer nettesting.FakeDNSServer
+}
+
+// NewServer creates a new fake DNS server. The hosts map should contain
+// domain names as keys and their corresponding IP addresses as string values.
+// It returns an error if any of the IP addresses are invalid.
+func NewServer(hosts map[string]string) (*Server, error) {
+	parsedHosts := make(map[string]net.IP, len(hosts))
+	for domain, ipStr := range hosts {
+		ip := netutils.ParseIPSloppy(ipStr)
+		if ip == nil {
+			return nil, fmt.Errorf(""invalid IP address for domain %s: %s"", domain, ipStr)
+		}
+		// Ensure domain is clean without trailing dot for map key
+		parsedHosts[strings.TrimSuffix(domain, ""."")] = ip
+	}
+	dnsServer := nettesting.FakeDNSServer{}
+	dnsServer.ResponseHandler = func(n, s string, q dnsmessage.Message, t time.Time) (dnsmessage.Message, error) {
+		resp := dnsmessage.Message{
+			Header: dnsmessage.Header{
+				ID:            q.Header.ID,
+				Response:      true,
+				Authoritative: true,
+			},
+			Questions: q.Questions,
+		}
+
+		if len(q.Questions) == 0 {
+			return resp, nil
+		}
+
+		question := q.Questions[0]
+		domain := strings.TrimSuffix(question.Name.String(), ""."")
+
+		if ip, ok := parsedHosts[domain]; ok {
+			var resource dnsmessage.Resource
+			if ipv4 := ip.To4(); ipv4 != nil {
+				resource = dnsmessage.Resource{
+					Header: dnsmessage.ResourceHeader{Name: question.Name, Type: dnsmessage.TypeA, Class: dnsmessage.ClassINET, TTL: 300},
+					Body:   &dnsmessage.AResource{A: [4]byte(ipv4)},
+				}
+			} else { // Assume IPv6
+				resource = dnsmessage.Resource{
+					Header: dnsmessage.ResourceHeader{Name: question.Name, Type: dnsmessage.TypeAAAA, Class: dnsmessage.ClassINET, TTL: 300},
+					Body:   &dnsmessage.AAAAResource{AAAA: [16]byte(ip)},
+				}
+			}
+			resp.Answers = []dnsmessage.Resource{resource}
+		}
+
+		return resp, nil
+	}
+
+	return &Server{
+		dnsServer: dnsServer,
+	}, nil
+}
+
+// Hijack takes control of the net.DefaultResolver to redirect DNS queries
+// to the fake server. It uses t.Cleanup to automatically restore the original
+// resolver after the test.
+// This helper does not support running tests in parallel.
+//
+// Example:
+//
+//	dnsServer, _ := fakedns.NewServer(hosts)
+//	dnsServer.Hijack(t)
+func (s *Server) Hijack(t *testing.T) {
+	t.Helper()
+
+	dnsHijackLock.Lock()
+
+	originalDial := net.DefaultResolver.Dial
+	originalPreferGo := net.DefaultResolver.PreferGo
+
+	net.DefaultResolver.PreferGo = true
+	net.DefaultResolver.Dial = s.dnsServer.DialContext
+
+	t.Cleanup(func() {
+		net.DefaultResolver.Dial = originalDial
+		net.DefaultResolver.PreferGo = originalPreferGo
+		dnsHijackLock.Unlock()
+	})
+}"
kubernetes/kubernetes,0b0a5974f829f4d8ff0f4c43165d1a0e492a5742,Antonio Ojea,2025-09-18T08:51:32Z,"integration test: webhook proxy behavior

adds a new integration test to verify that the API server's egress
to admission webhooks correctly respects the standard `HTTPS_PROXY`
and `NO_PROXY` environment variables.

It adds a new test util to implement a Fake DNS server that allows
to override DNS resolution in tests, specially useful for integration
test that can only bind to localhost the servers, that is ignored
by certain functionalities.",third_party/forked/golang/net/testing/fakedns.go,112,0,112,"@@ -0,0 +1,112 @@
+// Copyright 2013 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// This package is copied from Go library net.
+// https://golang.org/src/net/dnsclient_unix_test.go
+// The original private type FakeDNSServer
+// is exported as public type for testing.
+
+package testing
+
+import (
+	""context""
+	""errors""
+	""fmt""
+	""net""
+	""time""
+
+	_ ""testing""
+
+	""golang.org/x/net/dns/dnsmessage""
+)
+
+type FakeDNSServer struct {
+	ResponseHandler func(n, s string, q dnsmessage.Message, t time.Time) (dnsmessage.Message, error)
+	alwaysTCP       bool
+}
+
+func (server *FakeDNSServer) DialContext(_ context.Context, n, s string) (net.Conn, error) {
+	if server.alwaysTCP || n == ""tcp"" || n == ""tcp4"" || n == ""tcp6"" {
+		return &fakeDNSConn{tcp: true, server: server, n: n, s: s}, nil
+	}
+	return &fakeDNSPacketConn{fakeDNSConn: fakeDNSConn{tcp: false, server: server, n: n, s: s}}, nil
+}
+
+type fakeDNSConn struct {
+	net.Conn
+	tcp    bool
+	server *FakeDNSServer
+	n      string
+	s      string
+	q      dnsmessage.Message
+	t      time.Time
+	buf    []byte
+}
+
+func (f *fakeDNSConn) Close() error {
+	return nil
+}
+
+func (f *fakeDNSConn) Read(b []byte) (int, error) {
+	if len(f.buf) > 0 {
+		n := copy(b, f.buf)
+		f.buf = f.buf[n:]
+		return n, nil
+	}
+
+	resp, err := f.server.ResponseHandler(f.n, f.s, f.q, f.t)
+	if err != nil {
+		return 0, err
+	}
+
+	bb := make([]byte, 2, 514)
+	bb, err = resp.AppendPack(bb)
+	if err != nil {
+		return 0, fmt.Errorf(""cannot marshal DNS message: %v"", err)
+	}
+
+	if f.tcp {
+		l := len(bb) - 2
+		bb[0] = byte(l >> 8)
+		bb[1] = byte(l)
+		f.buf = bb
+		return f.Read(b)
+	}
+
+	bb = bb[2:]
+	if len(b) < len(bb) {
+		return 0, errors.New(""read would fragment DNS message"")
+	}
+
+	copy(b, bb)
+	return len(bb), nil
+}
+
+func (f *fakeDNSConn) Write(b []byte) (int, error) {
+	if f.tcp && len(b) >= 2 {
+		b = b[2:]
+	}
+	if f.q.Unpack(b) != nil {
+		return 0, fmt.Errorf(""cannot unmarshal DNS message fake %s (%d)"", f.n, len(b))
+	}
+	return len(b), nil
+}
+
+func (f *fakeDNSConn) SetDeadline(t time.Time) error {
+	f.t = t
+	return nil
+}
+
+type fakeDNSPacketConn struct {
+	net.PacketConn
+	fakeDNSConn
+}
+
+func (f *fakeDNSPacketConn) SetDeadline(t time.Time) error {
+	return f.fakeDNSConn.SetDeadline(t)
+}
+
+func (f *fakeDNSPacketConn) Close() error {
+	return f.fakeDNSConn.Close()
+}"
kubernetes/kubernetes,0b0a5974f829f4d8ff0f4c43165d1a0e492a5742,Antonio Ojea,2025-09-18T08:51:32Z,"integration test: webhook proxy behavior

adds a new integration test to verify that the API server's egress
to admission webhooks correctly respects the standard `HTTPS_PROXY`
and `NO_PROXY` environment variables.

It adds a new test util to implement a Fake DNS server that allows
to override DNS resolution in tests, specially useful for integration
test that can only bind to localhost the servers, that is ignored
by certain functionalities.",vendor/golang.org/x/net/dns/dnsmessage/message.go,2712,0,2712,"@@ -0,0 +1,2712 @@
+// Copyright 2009 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+// Package dnsmessage provides a mostly RFC 1035 compliant implementation of
+// DNS message packing and unpacking.
+//
+// The package also supports messages with Extension Mechanisms for DNS
+// (EDNS(0)) as defined in RFC 6891.
+//
+// This implementation is designed to minimize heap allocations and avoid
+// unnecessary packing and unpacking as much as possible.
+package dnsmessage
+
+import (
+	""errors""
+)
+
+// Message formats
+
+// A Type is a type of DNS request and response.
+type Type uint16
+
+const (
+	// ResourceHeader.Type and Question.Type
+	TypeA     Type = 1
+	TypeNS    Type = 2
+	TypeCNAME Type = 5
+	TypeSOA   Type = 6
+	TypePTR   Type = 12
+	TypeMX    Type = 15
+	TypeTXT   Type = 16
+	TypeAAAA  Type = 28
+	TypeSRV   Type = 33
+	TypeOPT   Type = 41
+
+	// Question.Type
+	TypeWKS   Type = 11
+	TypeHINFO Type = 13
+	TypeMINFO Type = 14
+	TypeAXFR  Type = 252
+	TypeALL   Type = 255
+)
+
+var typeNames = map[Type]string{
+	TypeA:     ""TypeA"",
+	TypeNS:    ""TypeNS"",
+	TypeCNAME: ""TypeCNAME"",
+	TypeSOA:   ""TypeSOA"",
+	TypePTR:   ""TypePTR"",
+	TypeMX:    ""TypeMX"",
+	TypeTXT:   ""TypeTXT"",
+	TypeAAAA:  ""TypeAAAA"",
+	TypeSRV:   ""TypeSRV"",
+	TypeOPT:   ""TypeOPT"",
+	TypeWKS:   ""TypeWKS"",
+	TypeHINFO: ""TypeHINFO"",
+	TypeMINFO: ""TypeMINFO"",
+	TypeAXFR:  ""TypeAXFR"",
+	TypeALL:   ""TypeALL"",
+}
+
+// String implements fmt.Stringer.String.
+func (t Type) String() string {
+	if n, ok := typeNames[t]; ok {
+		return n
+	}
+	return printUint16(uint16(t))
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (t Type) GoString() string {
+	if n, ok := typeNames[t]; ok {
+		return ""dnsmessage."" + n
+	}
+	return printUint16(uint16(t))
+}
+
+// A Class is a type of network.
+type Class uint16
+
+const (
+	// ResourceHeader.Class and Question.Class
+	ClassINET   Class = 1
+	ClassCSNET  Class = 2
+	ClassCHAOS  Class = 3
+	ClassHESIOD Class = 4
+
+	// Question.Class
+	ClassANY Class = 255
+)
+
+var classNames = map[Class]string{
+	ClassINET:   ""ClassINET"",
+	ClassCSNET:  ""ClassCSNET"",
+	ClassCHAOS:  ""ClassCHAOS"",
+	ClassHESIOD: ""ClassHESIOD"",
+	ClassANY:    ""ClassANY"",
+}
+
+// String implements fmt.Stringer.String.
+func (c Class) String() string {
+	if n, ok := classNames[c]; ok {
+		return n
+	}
+	return printUint16(uint16(c))
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (c Class) GoString() string {
+	if n, ok := classNames[c]; ok {
+		return ""dnsmessage."" + n
+	}
+	return printUint16(uint16(c))
+}
+
+// An OpCode is a DNS operation code.
+type OpCode uint16
+
+// GoString implements fmt.GoStringer.GoString.
+func (o OpCode) GoString() string {
+	return printUint16(uint16(o))
+}
+
+// An RCode is a DNS response status code.
+type RCode uint16
+
+// Header.RCode values.
+const (
+	RCodeSuccess        RCode = 0 // NoError
+	RCodeFormatError    RCode = 1 // FormErr
+	RCodeServerFailure  RCode = 2 // ServFail
+	RCodeNameError      RCode = 3 // NXDomain
+	RCodeNotImplemented RCode = 4 // NotImp
+	RCodeRefused        RCode = 5 // Refused
+)
+
+var rCodeNames = map[RCode]string{
+	RCodeSuccess:        ""RCodeSuccess"",
+	RCodeFormatError:    ""RCodeFormatError"",
+	RCodeServerFailure:  ""RCodeServerFailure"",
+	RCodeNameError:      ""RCodeNameError"",
+	RCodeNotImplemented: ""RCodeNotImplemented"",
+	RCodeRefused:        ""RCodeRefused"",
+}
+
+// String implements fmt.Stringer.String.
+func (r RCode) String() string {
+	if n, ok := rCodeNames[r]; ok {
+		return n
+	}
+	return printUint16(uint16(r))
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r RCode) GoString() string {
+	if n, ok := rCodeNames[r]; ok {
+		return ""dnsmessage."" + n
+	}
+	return printUint16(uint16(r))
+}
+
+func printPaddedUint8(i uint8) string {
+	b := byte(i)
+	return string([]byte{
+		b/100 + '0',
+		b/10%10 + '0',
+		b%10 + '0',
+	})
+}
+
+func printUint8Bytes(buf []byte, i uint8) []byte {
+	b := byte(i)
+	if i >= 100 {
+		buf = append(buf, b/100+'0')
+	}
+	if i >= 10 {
+		buf = append(buf, b/10%10+'0')
+	}
+	return append(buf, b%10+'0')
+}
+
+func printByteSlice(b []byte) string {
+	if len(b) == 0 {
+		return """"
+	}
+	buf := make([]byte, 0, 5*len(b))
+	buf = printUint8Bytes(buf, uint8(b[0]))
+	for _, n := range b[1:] {
+		buf = append(buf, ',', ' ')
+		buf = printUint8Bytes(buf, uint8(n))
+	}
+	return string(buf)
+}
+
+const hexDigits = ""0123456789abcdef""
+
+func printString(str []byte) string {
+	buf := make([]byte, 0, len(str))
+	for i := 0; i < len(str); i++ {
+		c := str[i]
+		if c == '.' || c == '-' || c == ' ' ||
+			'A' <= c && c <= 'Z' ||
+			'a' <= c && c <= 'z' ||
+			'0' <= c && c <= '9' {
+			buf = append(buf, c)
+			continue
+		}
+
+		upper := c >> 4
+		lower := (c << 4) >> 4
+		buf = append(
+			buf,
+			'\\',
+			'x',
+			hexDigits[upper],
+			hexDigits[lower],
+		)
+	}
+	return string(buf)
+}
+
+func printUint16(i uint16) string {
+	return printUint32(uint32(i))
+}
+
+func printUint32(i uint32) string {
+	// Max value is 4294967295.
+	buf := make([]byte, 10)
+	for b, d := buf, uint32(1000000000); d > 0; d /= 10 {
+		b[0] = byte(i/d%10 + '0')
+		if b[0] == '0' && len(b) == len(buf) && len(buf) > 1 {
+			buf = buf[1:]
+		}
+		b = b[1:]
+		i %= d
+	}
+	return string(buf)
+}
+
+func printBool(b bool) string {
+	if b {
+		return ""true""
+	}
+	return ""false""
+}
+
+var (
+	// ErrNotStarted indicates that the prerequisite information isn't
+	// available yet because the previous records haven't been appropriately
+	// parsed, skipped or finished.
+	ErrNotStarted = errors.New(""parsing/packing of this type isn't available yet"")
+
+	// ErrSectionDone indicated that all records in the section have been
+	// parsed or finished.
+	ErrSectionDone = errors.New(""parsing/packing of this section has completed"")
+
+	errBaseLen            = errors.New(""insufficient data for base length type"")
+	errCalcLen            = errors.New(""insufficient data for calculated length type"")
+	errReserved           = errors.New(""segment prefix is reserved"")
+	errTooManyPtr         = errors.New(""too many pointers (>10)"")
+	errInvalidPtr         = errors.New(""invalid pointer"")
+	errInvalidName        = errors.New(""invalid dns name"")
+	errNilResouceBody     = errors.New(""nil resource body"")
+	errResourceLen        = errors.New(""insufficient data for resource body length"")
+	errSegTooLong         = errors.New(""segment length too long"")
+	errNameTooLong        = errors.New(""name too long"")
+	errZeroSegLen         = errors.New(""zero length segment"")
+	errResTooLong         = errors.New(""resource length too long"")
+	errTooManyQuestions   = errors.New(""too many Questions to pack (>65535)"")
+	errTooManyAnswers     = errors.New(""too many Answers to pack (>65535)"")
+	errTooManyAuthorities = errors.New(""too many Authorities to pack (>65535)"")
+	errTooManyAdditionals = errors.New(""too many Additionals to pack (>65535)"")
+	errNonCanonicalName   = errors.New(""name is not in canonical format (it must end with a .)"")
+	errStringTooLong      = errors.New(""character string exceeds maximum length (255)"")
+)
+
+// Internal constants.
+const (
+	// packStartingCap is the default initial buffer size allocated during
+	// packing.
+	//
+	// The starting capacity doesn't matter too much, but most DNS responses
+	// Will be <= 512 bytes as it is the limit for DNS over UDP.
+	packStartingCap = 512
+
+	// uint16Len is the length (in bytes) of a uint16.
+	uint16Len = 2
+
+	// uint32Len is the length (in bytes) of a uint32.
+	uint32Len = 4
+
+	// headerLen is the length (in bytes) of a DNS header.
+	//
+	// A header is comprised of 6 uint16s and no padding.
+	headerLen = 6 * uint16Len
+)
+
+type nestedError struct {
+	// s is the current level's error message.
+	s string
+
+	// err is the nested error.
+	err error
+}
+
+// nestedError implements error.Error.
+func (e *nestedError) Error() string {
+	return e.s + "": "" + e.err.Error()
+}
+
+// Header is a representation of a DNS message header.
+type Header struct {
+	ID                 uint16
+	Response           bool
+	OpCode             OpCode
+	Authoritative      bool
+	Truncated          bool
+	RecursionDesired   bool
+	RecursionAvailable bool
+	AuthenticData      bool
+	CheckingDisabled   bool
+	RCode              RCode
+}
+
+func (m *Header) pack() (id uint16, bits uint16) {
+	id = m.ID
+	bits = uint16(m.OpCode)<<11 | uint16(m.RCode)
+	if m.RecursionAvailable {
+		bits |= headerBitRA
+	}
+	if m.RecursionDesired {
+		bits |= headerBitRD
+	}
+	if m.Truncated {
+		bits |= headerBitTC
+	}
+	if m.Authoritative {
+		bits |= headerBitAA
+	}
+	if m.Response {
+		bits |= headerBitQR
+	}
+	if m.AuthenticData {
+		bits |= headerBitAD
+	}
+	if m.CheckingDisabled {
+		bits |= headerBitCD
+	}
+	return
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (m *Header) GoString() string {
+	return ""dnsmessage.Header{"" +
+		""ID: "" + printUint16(m.ID) + "", "" +
+		""Response: "" + printBool(m.Response) + "", "" +
+		""OpCode: "" + m.OpCode.GoString() + "", "" +
+		""Authoritative: "" + printBool(m.Authoritative) + "", "" +
+		""Truncated: "" + printBool(m.Truncated) + "", "" +
+		""RecursionDesired: "" + printBool(m.RecursionDesired) + "", "" +
+		""RecursionAvailable: "" + printBool(m.RecursionAvailable) + "", "" +
+		""AuthenticData: "" + printBool(m.AuthenticData) + "", "" +
+		""CheckingDisabled: "" + printBool(m.CheckingDisabled) + "", "" +
+		""RCode: "" + m.RCode.GoString() + ""}""
+}
+
+// Message is a representation of a DNS message.
+type Message struct {
+	Header
+	Questions   []Question
+	Answers     []Resource
+	Authorities []Resource
+	Additionals []Resource
+}
+
+type section uint8
+
+const (
+	sectionNotStarted section = iota
+	sectionHeader
+	sectionQuestions
+	sectionAnswers
+	sectionAuthorities
+	sectionAdditionals
+	sectionDone
+
+	headerBitQR = 1 << 15 // query/response (response=1)
+	headerBitAA = 1 << 10 // authoritative
+	headerBitTC = 1 << 9  // truncated
+	headerBitRD = 1 << 8  // recursion desired
+	headerBitRA = 1 << 7  // recursion available
+	headerBitAD = 1 << 5  // authentic data
+	headerBitCD = 1 << 4  // checking disabled
+)
+
+var sectionNames = map[section]string{
+	sectionHeader:      ""header"",
+	sectionQuestions:   ""Question"",
+	sectionAnswers:     ""Answer"",
+	sectionAuthorities: ""Authority"",
+	sectionAdditionals: ""Additional"",
+}
+
+// header is the wire format for a DNS message header.
+type header struct {
+	id          uint16
+	bits        uint16
+	questions   uint16
+	answers     uint16
+	authorities uint16
+	additionals uint16
+}
+
+func (h *header) count(sec section) uint16 {
+	switch sec {
+	case sectionQuestions:
+		return h.questions
+	case sectionAnswers:
+		return h.answers
+	case sectionAuthorities:
+		return h.authorities
+	case sectionAdditionals:
+		return h.additionals
+	}
+	return 0
+}
+
+// pack appends the wire format of the header to msg.
+func (h *header) pack(msg []byte) []byte {
+	msg = packUint16(msg, h.id)
+	msg = packUint16(msg, h.bits)
+	msg = packUint16(msg, h.questions)
+	msg = packUint16(msg, h.answers)
+	msg = packUint16(msg, h.authorities)
+	return packUint16(msg, h.additionals)
+}
+
+func (h *header) unpack(msg []byte, off int) (int, error) {
+	newOff := off
+	var err error
+	if h.id, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""id"", err}
+	}
+	if h.bits, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""bits"", err}
+	}
+	if h.questions, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""questions"", err}
+	}
+	if h.answers, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""answers"", err}
+	}
+	if h.authorities, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""authorities"", err}
+	}
+	if h.additionals, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""additionals"", err}
+	}
+	return newOff, nil
+}
+
+func (h *header) header() Header {
+	return Header{
+		ID:                 h.id,
+		Response:           (h.bits & headerBitQR) != 0,
+		OpCode:             OpCode(h.bits>>11) & 0xF,
+		Authoritative:      (h.bits & headerBitAA) != 0,
+		Truncated:          (h.bits & headerBitTC) != 0,
+		RecursionDesired:   (h.bits & headerBitRD) != 0,
+		RecursionAvailable: (h.bits & headerBitRA) != 0,
+		AuthenticData:      (h.bits & headerBitAD) != 0,
+		CheckingDisabled:   (h.bits & headerBitCD) != 0,
+		RCode:              RCode(h.bits & 0xF),
+	}
+}
+
+// A Resource is a DNS resource record.
+type Resource struct {
+	Header ResourceHeader
+	Body   ResourceBody
+}
+
+func (r *Resource) GoString() string {
+	return ""dnsmessage.Resource{"" +
+		""Header: "" + r.Header.GoString() +
+		"", Body: &"" + r.Body.GoString() +
+		""}""
+}
+
+// A ResourceBody is a DNS resource record minus the header.
+type ResourceBody interface {
+	// pack packs a Resource except for its header.
+	pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error)
+
+	// realType returns the actual type of the Resource. This is used to
+	// fill in the header Type field.
+	realType() Type
+
+	// GoString implements fmt.GoStringer.GoString.
+	GoString() string
+}
+
+// pack appends the wire format of the Resource to msg.
+func (r *Resource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	if r.Body == nil {
+		return msg, errNilResouceBody
+	}
+	oldMsg := msg
+	r.Header.Type = r.Body.realType()
+	msg, lenOff, err := r.Header.pack(msg, compression, compressionOff)
+	if err != nil {
+		return msg, &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	msg, err = r.Body.pack(msg, compression, compressionOff)
+	if err != nil {
+		return msg, &nestedError{""content"", err}
+	}
+	if err := r.Header.fixLen(msg, lenOff, preLen); err != nil {
+		return oldMsg, err
+	}
+	return msg, nil
+}
+
+// A Parser allows incrementally parsing a DNS message.
+//
+// When parsing is started, the Header is parsed. Next, each Question can be
+// either parsed or skipped. Alternatively, all Questions can be skipped at
+// once. When all Questions have been parsed, attempting to parse Questions
+// will return the [ErrSectionDone] error.
+// After all Questions have been either parsed or skipped, all
+// Answers, Authorities and Additionals can be either parsed or skipped in the
+// same way, and each type of Resource must be fully parsed or skipped before
+// proceeding to the next type of Resource.
+//
+// Parser is safe to copy to preserve the parsing state.
+//
+// Note that there is no requirement to fully skip or parse the message.
+type Parser struct {
+	msg    []byte
+	header header
+
+	section         section
+	off             int
+	index           int
+	resHeaderValid  bool
+	resHeaderOffset int
+	resHeaderType   Type
+	resHeaderLength uint16
+}
+
+// Start parses the header and enables the parsing of Questions.
+func (p *Parser) Start(msg []byte) (Header, error) {
+	if p.msg != nil {
+		*p = Parser{}
+	}
+	p.msg = msg
+	var err error
+	if p.off, err = p.header.unpack(msg, 0); err != nil {
+		return Header{}, &nestedError{""unpacking header"", err}
+	}
+	p.section = sectionQuestions
+	return p.header.header(), nil
+}
+
+func (p *Parser) checkAdvance(sec section) error {
+	if p.section < sec {
+		return ErrNotStarted
+	}
+	if p.section > sec {
+		return ErrSectionDone
+	}
+	p.resHeaderValid = false
+	if p.index == int(p.header.count(sec)) {
+		p.index = 0
+		p.section++
+		return ErrSectionDone
+	}
+	return nil
+}
+
+func (p *Parser) resource(sec section) (Resource, error) {
+	var r Resource
+	var err error
+	r.Header, err = p.resourceHeader(sec)
+	if err != nil {
+		return r, err
+	}
+	p.resHeaderValid = false
+	r.Body, p.off, err = unpackResourceBody(p.msg, p.off, r.Header)
+	if err != nil {
+		return Resource{}, &nestedError{""unpacking "" + sectionNames[sec], err}
+	}
+	p.index++
+	return r, nil
+}
+
+func (p *Parser) resourceHeader(sec section) (ResourceHeader, error) {
+	if p.resHeaderValid {
+		p.off = p.resHeaderOffset
+	}
+
+	if err := p.checkAdvance(sec); err != nil {
+		return ResourceHeader{}, err
+	}
+	var hdr ResourceHeader
+	off, err := hdr.unpack(p.msg, p.off)
+	if err != nil {
+		return ResourceHeader{}, err
+	}
+	p.resHeaderValid = true
+	p.resHeaderOffset = p.off
+	p.resHeaderType = hdr.Type
+	p.resHeaderLength = hdr.Length
+	p.off = off
+	return hdr, nil
+}
+
+func (p *Parser) skipResource(sec section) error {
+	if p.resHeaderValid && p.section == sec {
+		newOff := p.off + int(p.resHeaderLength)
+		if newOff > len(p.msg) {
+			return errResourceLen
+		}
+		p.off = newOff
+		p.resHeaderValid = false
+		p.index++
+		return nil
+	}
+	if err := p.checkAdvance(sec); err != nil {
+		return err
+	}
+	var err error
+	p.off, err = skipResource(p.msg, p.off)
+	if err != nil {
+		return &nestedError{""skipping: "" + sectionNames[sec], err}
+	}
+	p.index++
+	return nil
+}
+
+// Question parses a single Question.
+func (p *Parser) Question() (Question, error) {
+	if err := p.checkAdvance(sectionQuestions); err != nil {
+		return Question{}, err
+	}
+	var name Name
+	off, err := name.unpack(p.msg, p.off)
+	if err != nil {
+		return Question{}, &nestedError{""unpacking Question.Name"", err}
+	}
+	typ, off, err := unpackType(p.msg, off)
+	if err != nil {
+		return Question{}, &nestedError{""unpacking Question.Type"", err}
+	}
+	class, off, err := unpackClass(p.msg, off)
+	if err != nil {
+		return Question{}, &nestedError{""unpacking Question.Class"", err}
+	}
+	p.off = off
+	p.index++
+	return Question{name, typ, class}, nil
+}
+
+// AllQuestions parses all Questions.
+func (p *Parser) AllQuestions() ([]Question, error) {
+	// Multiple questions are valid according to the spec,
+	// but servers don't actually support them. There will
+	// be at most one question here.
+	//
+	// Do not pre-allocate based on info in p.header, since
+	// the data is untrusted.
+	qs := []Question{}
+	for {
+		q, err := p.Question()
+		if err == ErrSectionDone {
+			return qs, nil
+		}
+		if err != nil {
+			return nil, err
+		}
+		qs = append(qs, q)
+	}
+}
+
+// SkipQuestion skips a single Question.
+func (p *Parser) SkipQuestion() error {
+	if err := p.checkAdvance(sectionQuestions); err != nil {
+		return err
+	}
+	off, err := skipName(p.msg, p.off)
+	if err != nil {
+		return &nestedError{""skipping Question Name"", err}
+	}
+	if off, err = skipType(p.msg, off); err != nil {
+		return &nestedError{""skipping Question Type"", err}
+	}
+	if off, err = skipClass(p.msg, off); err != nil {
+		return &nestedError{""skipping Question Class"", err}
+	}
+	p.off = off
+	p.index++
+	return nil
+}
+
+// SkipAllQuestions skips all Questions.
+func (p *Parser) SkipAllQuestions() error {
+	for {
+		if err := p.SkipQuestion(); err == ErrSectionDone {
+			return nil
+		} else if err != nil {
+			return err
+		}
+	}
+}
+
+// AnswerHeader parses a single Answer ResourceHeader.
+func (p *Parser) AnswerHeader() (ResourceHeader, error) {
+	return p.resourceHeader(sectionAnswers)
+}
+
+// Answer parses a single Answer Resource.
+func (p *Parser) Answer() (Resource, error) {
+	return p.resource(sectionAnswers)
+}
+
+// AllAnswers parses all Answer Resources.
+func (p *Parser) AllAnswers() ([]Resource, error) {
+	// The most common query is for A/AAAA, which usually returns
+	// a handful of IPs.
+	//
+	// Pre-allocate up to a certain limit, since p.header is
+	// untrusted data.
+	n := int(p.header.answers)
+	if n > 20 {
+		n = 20
+	}
+	as := make([]Resource, 0, n)
+	for {
+		a, err := p.Answer()
+		if err == ErrSectionDone {
+			return as, nil
+		}
+		if err != nil {
+			return nil, err
+		}
+		as = append(as, a)
+	}
+}
+
+// SkipAnswer skips a single Answer Resource.
+//
+// It does not perform a complete validation of the resource header, which means
+// it may return a nil error when the [AnswerHeader] would actually return an error.
+func (p *Parser) SkipAnswer() error {
+	return p.skipResource(sectionAnswers)
+}
+
+// SkipAllAnswers skips all Answer Resources.
+func (p *Parser) SkipAllAnswers() error {
+	for {
+		if err := p.SkipAnswer(); err == ErrSectionDone {
+			return nil
+		} else if err != nil {
+			return err
+		}
+	}
+}
+
+// AuthorityHeader parses a single Authority ResourceHeader.
+func (p *Parser) AuthorityHeader() (ResourceHeader, error) {
+	return p.resourceHeader(sectionAuthorities)
+}
+
+// Authority parses a single Authority Resource.
+func (p *Parser) Authority() (Resource, error) {
+	return p.resource(sectionAuthorities)
+}
+
+// AllAuthorities parses all Authority Resources.
+func (p *Parser) AllAuthorities() ([]Resource, error) {
+	// Authorities contains SOA in case of NXDOMAIN and friends,
+	// otherwise it is empty.
+	//
+	// Pre-allocate up to a certain limit, since p.header is
+	// untrusted data.
+	n := int(p.header.authorities)
+	if n > 10 {
+		n = 10
+	}
+	as := make([]Resource, 0, n)
+	for {
+		a, err := p.Authority()
+		if err == ErrSectionDone {
+			return as, nil
+		}
+		if err != nil {
+			return nil, err
+		}
+		as = append(as, a)
+	}
+}
+
+// SkipAuthority skips a single Authority Resource.
+//
+// It does not perform a complete validation of the resource header, which means
+// it may return a nil error when the [AuthorityHeader] would actually return an error.
+func (p *Parser) SkipAuthority() error {
+	return p.skipResource(sectionAuthorities)
+}
+
+// SkipAllAuthorities skips all Authority Resources.
+func (p *Parser) SkipAllAuthorities() error {
+	for {
+		if err := p.SkipAuthority(); err == ErrSectionDone {
+			return nil
+		} else if err != nil {
+			return err
+		}
+	}
+}
+
+// AdditionalHeader parses a single Additional ResourceHeader.
+func (p *Parser) AdditionalHeader() (ResourceHeader, error) {
+	return p.resourceHeader(sectionAdditionals)
+}
+
+// Additional parses a single Additional Resource.
+func (p *Parser) Additional() (Resource, error) {
+	return p.resource(sectionAdditionals)
+}
+
+// AllAdditionals parses all Additional Resources.
+func (p *Parser) AllAdditionals() ([]Resource, error) {
+	// Additionals usually contain OPT, and sometimes A/AAAA
+	// glue records.
+	//
+	// Pre-allocate up to a certain limit, since p.header is
+	// untrusted data.
+	n := int(p.header.additionals)
+	if n > 10 {
+		n = 10
+	}
+	as := make([]Resource, 0, n)
+	for {
+		a, err := p.Additional()
+		if err == ErrSectionDone {
+			return as, nil
+		}
+		if err != nil {
+			return nil, err
+		}
+		as = append(as, a)
+	}
+}
+
+// SkipAdditional skips a single Additional Resource.
+//
+// It does not perform a complete validation of the resource header, which means
+// it may return a nil error when the [AdditionalHeader] would actually return an error.
+func (p *Parser) SkipAdditional() error {
+	return p.skipResource(sectionAdditionals)
+}
+
+// SkipAllAdditionals skips all Additional Resources.
+func (p *Parser) SkipAllAdditionals() error {
+	for {
+		if err := p.SkipAdditional(); err == ErrSectionDone {
+			return nil
+		} else if err != nil {
+			return err
+		}
+	}
+}
+
+// CNAMEResource parses a single CNAMEResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) CNAMEResource() (CNAMEResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeCNAME {
+		return CNAMEResource{}, ErrNotStarted
+	}
+	r, err := unpackCNAMEResource(p.msg, p.off)
+	if err != nil {
+		return CNAMEResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// MXResource parses a single MXResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) MXResource() (MXResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeMX {
+		return MXResource{}, ErrNotStarted
+	}
+	r, err := unpackMXResource(p.msg, p.off)
+	if err != nil {
+		return MXResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// NSResource parses a single NSResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) NSResource() (NSResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeNS {
+		return NSResource{}, ErrNotStarted
+	}
+	r, err := unpackNSResource(p.msg, p.off)
+	if err != nil {
+		return NSResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// PTRResource parses a single PTRResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) PTRResource() (PTRResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypePTR {
+		return PTRResource{}, ErrNotStarted
+	}
+	r, err := unpackPTRResource(p.msg, p.off)
+	if err != nil {
+		return PTRResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// SOAResource parses a single SOAResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) SOAResource() (SOAResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeSOA {
+		return SOAResource{}, ErrNotStarted
+	}
+	r, err := unpackSOAResource(p.msg, p.off)
+	if err != nil {
+		return SOAResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// TXTResource parses a single TXTResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) TXTResource() (TXTResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeTXT {
+		return TXTResource{}, ErrNotStarted
+	}
+	r, err := unpackTXTResource(p.msg, p.off, p.resHeaderLength)
+	if err != nil {
+		return TXTResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// SRVResource parses a single SRVResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) SRVResource() (SRVResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeSRV {
+		return SRVResource{}, ErrNotStarted
+	}
+	r, err := unpackSRVResource(p.msg, p.off)
+	if err != nil {
+		return SRVResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// AResource parses a single AResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) AResource() (AResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeA {
+		return AResource{}, ErrNotStarted
+	}
+	r, err := unpackAResource(p.msg, p.off)
+	if err != nil {
+		return AResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// AAAAResource parses a single AAAAResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) AAAAResource() (AAAAResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeAAAA {
+		return AAAAResource{}, ErrNotStarted
+	}
+	r, err := unpackAAAAResource(p.msg, p.off)
+	if err != nil {
+		return AAAAResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// OPTResource parses a single OPTResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) OPTResource() (OPTResource, error) {
+	if !p.resHeaderValid || p.resHeaderType != TypeOPT {
+		return OPTResource{}, ErrNotStarted
+	}
+	r, err := unpackOPTResource(p.msg, p.off, p.resHeaderLength)
+	if err != nil {
+		return OPTResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// UnknownResource parses a single UnknownResource.
+//
+// One of the XXXHeader methods must have been called before calling this
+// method.
+func (p *Parser) UnknownResource() (UnknownResource, error) {
+	if !p.resHeaderValid {
+		return UnknownResource{}, ErrNotStarted
+	}
+	r, err := unpackUnknownResource(p.resHeaderType, p.msg, p.off, p.resHeaderLength)
+	if err != nil {
+		return UnknownResource{}, err
+	}
+	p.off += int(p.resHeaderLength)
+	p.resHeaderValid = false
+	p.index++
+	return r, nil
+}
+
+// Unpack parses a full Message.
+func (m *Message) Unpack(msg []byte) error {
+	var p Parser
+	var err error
+	if m.Header, err = p.Start(msg); err != nil {
+		return err
+	}
+	if m.Questions, err = p.AllQuestions(); err != nil {
+		return err
+	}
+	if m.Answers, err = p.AllAnswers(); err != nil {
+		return err
+	}
+	if m.Authorities, err = p.AllAuthorities(); err != nil {
+		return err
+	}
+	if m.Additionals, err = p.AllAdditionals(); err != nil {
+		return err
+	}
+	return nil
+}
+
+// Pack packs a full Message.
+func (m *Message) Pack() ([]byte, error) {
+	return m.AppendPack(make([]byte, 0, packStartingCap))
+}
+
+// AppendPack is like Pack but appends the full Message to b and returns the
+// extended buffer.
+func (m *Message) AppendPack(b []byte) ([]byte, error) {
+	// Validate the lengths. It is very unlikely that anyone will try to
+	// pack more than 65535 of any particular type, but it is possible and
+	// we should fail gracefully.
+	if len(m.Questions) > int(^uint16(0)) {
+		return nil, errTooManyQuestions
+	}
+	if len(m.Answers) > int(^uint16(0)) {
+		return nil, errTooManyAnswers
+	}
+	if len(m.Authorities) > int(^uint16(0)) {
+		return nil, errTooManyAuthorities
+	}
+	if len(m.Additionals) > int(^uint16(0)) {
+		return nil, errTooManyAdditionals
+	}
+
+	var h header
+	h.id, h.bits = m.Header.pack()
+
+	h.questions = uint16(len(m.Questions))
+	h.answers = uint16(len(m.Answers))
+	h.authorities = uint16(len(m.Authorities))
+	h.additionals = uint16(len(m.Additionals))
+
+	compressionOff := len(b)
+	msg := h.pack(b)
+
+	// RFC 1035 allows (but does not require) compression for packing. RFC
+	// 1035 requires unpacking implementations to support compression, so
+	// unconditionally enabling it is fine.
+	//
+	// DNS lookups are typically done over UDP, and RFC 1035 states that UDP
+	// DNS messages can be a maximum of 512 bytes long. Without compression,
+	// many DNS response messages are over this limit, so enabling
+	// compression will help ensure compliance.
+	compression := map[string]uint16{}
+
+	for i := range m.Questions {
+		var err error
+		if msg, err = m.Questions[i].pack(msg, compression, compressionOff); err != nil {
+			return nil, &nestedError{""packing Question"", err}
+		}
+	}
+	for i := range m.Answers {
+		var err error
+		if msg, err = m.Answers[i].pack(msg, compression, compressionOff); err != nil {
+			return nil, &nestedError{""packing Answer"", err}
+		}
+	}
+	for i := range m.Authorities {
+		var err error
+		if msg, err = m.Authorities[i].pack(msg, compression, compressionOff); err != nil {
+			return nil, &nestedError{""packing Authority"", err}
+		}
+	}
+	for i := range m.Additionals {
+		var err error
+		if msg, err = m.Additionals[i].pack(msg, compression, compressionOff); err != nil {
+			return nil, &nestedError{""packing Additional"", err}
+		}
+	}
+
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (m *Message) GoString() string {
+	s := ""dnsmessage.Message{Header: "" + m.Header.GoString() + "", "" +
+		""Questions: []dnsmessage.Question{""
+	if len(m.Questions) > 0 {
+		s += m.Questions[0].GoString()
+		for _, q := range m.Questions[1:] {
+			s += "", "" + q.GoString()
+		}
+	}
+	s += ""}, Answers: []dnsmessage.Resource{""
+	if len(m.Answers) > 0 {
+		s += m.Answers[0].GoString()
+		for _, a := range m.Answers[1:] {
+			s += "", "" + a.GoString()
+		}
+	}
+	s += ""}, Authorities: []dnsmessage.Resource{""
+	if len(m.Authorities) > 0 {
+		s += m.Authorities[0].GoString()
+		for _, a := range m.Authorities[1:] {
+			s += "", "" + a.GoString()
+		}
+	}
+	s += ""}, Additionals: []dnsmessage.Resource{""
+	if len(m.Additionals) > 0 {
+		s += m.Additionals[0].GoString()
+		for _, a := range m.Additionals[1:] {
+			s += "", "" + a.GoString()
+		}
+	}
+	return s + ""}}""
+}
+
+// A Builder allows incrementally packing a DNS message.
+//
+// Example usage:
+//
+//	buf := make([]byte, 2, 514)
+//	b := NewBuilder(buf, Header{...})
+//	b.EnableCompression()
+//	// Optionally start a section and add things to that section.
+//	// Repeat adding sections as necessary.
+//	buf, err := b.Finish()
+//	// If err is nil, buf[2:] will contain the built bytes.
+type Builder struct {
+	// msg is the storage for the message being built.
+	msg []byte
+
+	// section keeps track of the current section being built.
+	section section
+
+	// header keeps track of what should go in the header when Finish is
+	// called.
+	header header
+
+	// start is the starting index of the bytes allocated in msg for header.
+	start int
+
+	// compression is a mapping from name suffixes to their starting index
+	// in msg.
+	compression map[string]uint16
+}
+
+// NewBuilder creates a new builder with compression disabled.
+//
+// Note: Most users will want to immediately enable compression with the
+// EnableCompression method. See that method's comment for why you may or may
+// not want to enable compression.
+//
+// The DNS message is appended to the provided initial buffer buf (which may be
+// nil) as it is built. The final message is returned by the (*Builder).Finish
+// method, which includes buf[:len(buf)] and may return the same underlying
+// array if there was sufficient capacity in the slice.
+func NewBuilder(buf []byte, h Header) Builder {
+	if buf == nil {
+		buf = make([]byte, 0, packStartingCap)
+	}
+	b := Builder{msg: buf, start: len(buf)}
+	b.header.id, b.header.bits = h.pack()
+	var hb [headerLen]byte
+	b.msg = append(b.msg, hb[:]...)
+	b.section = sectionHeader
+	return b
+}
+
+// EnableCompression enables compression in the Builder.
+//
+// Leaving compression disabled avoids compression related allocations, but can
+// result in larger message sizes. Be careful with this mode as it can cause
+// messages to exceed the UDP size limit.
+//
+// According to RFC 1035, section 4.1.4, the use of compression is optional, but
+// all implementations must accept both compressed and uncompressed DNS
+// messages.
+//
+// Compression should be enabled before any sections are added for best results.
+func (b *Builder) EnableCompression() {
+	b.compression = map[string]uint16{}
+}
+
+func (b *Builder) startCheck(s section) error {
+	if b.section <= sectionNotStarted {
+		return ErrNotStarted
+	}
+	if b.section > s {
+		return ErrSectionDone
+	}
+	return nil
+}
+
+// StartQuestions prepares the builder for packing Questions.
+func (b *Builder) StartQuestions() error {
+	if err := b.startCheck(sectionQuestions); err != nil {
+		return err
+	}
+	b.section = sectionQuestions
+	return nil
+}
+
+// StartAnswers prepares the builder for packing Answers.
+func (b *Builder) StartAnswers() error {
+	if err := b.startCheck(sectionAnswers); err != nil {
+		return err
+	}
+	b.section = sectionAnswers
+	return nil
+}
+
+// StartAuthorities prepares the builder for packing Authorities.
+func (b *Builder) StartAuthorities() error {
+	if err := b.startCheck(sectionAuthorities); err != nil {
+		return err
+	}
+	b.section = sectionAuthorities
+	return nil
+}
+
+// StartAdditionals prepares the builder for packing Additionals.
+func (b *Builder) StartAdditionals() error {
+	if err := b.startCheck(sectionAdditionals); err != nil {
+		return err
+	}
+	b.section = sectionAdditionals
+	return nil
+}
+
+func (b *Builder) incrementSectionCount() error {
+	var count *uint16
+	var err error
+	switch b.section {
+	case sectionQuestions:
+		count = &b.header.questions
+		err = errTooManyQuestions
+	case sectionAnswers:
+		count = &b.header.answers
+		err = errTooManyAnswers
+	case sectionAuthorities:
+		count = &b.header.authorities
+		err = errTooManyAuthorities
+	case sectionAdditionals:
+		count = &b.header.additionals
+		err = errTooManyAdditionals
+	}
+	if *count == ^uint16(0) {
+		return err
+	}
+	*count++
+	return nil
+}
+
+// Question adds a single Question.
+func (b *Builder) Question(q Question) error {
+	if b.section < sectionQuestions {
+		return ErrNotStarted
+	}
+	if b.section > sectionQuestions {
+		return ErrSectionDone
+	}
+	msg, err := q.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+func (b *Builder) checkResourceSection() error {
+	if b.section < sectionAnswers {
+		return ErrNotStarted
+	}
+	if b.section > sectionAdditionals {
+		return ErrSectionDone
+	}
+	return nil
+}
+
+// CNAMEResource adds a single CNAMEResource.
+func (b *Builder) CNAMEResource(h ResourceHeader, r CNAMEResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""CNAMEResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// MXResource adds a single MXResource.
+func (b *Builder) MXResource(h ResourceHeader, r MXResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""MXResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// NSResource adds a single NSResource.
+func (b *Builder) NSResource(h ResourceHeader, r NSResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""NSResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// PTRResource adds a single PTRResource.
+func (b *Builder) PTRResource(h ResourceHeader, r PTRResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""PTRResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// SOAResource adds a single SOAResource.
+func (b *Builder) SOAResource(h ResourceHeader, r SOAResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""SOAResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// TXTResource adds a single TXTResource.
+func (b *Builder) TXTResource(h ResourceHeader, r TXTResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""TXTResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// SRVResource adds a single SRVResource.
+func (b *Builder) SRVResource(h ResourceHeader, r SRVResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""SRVResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// AResource adds a single AResource.
+func (b *Builder) AResource(h ResourceHeader, r AResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""AResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// AAAAResource adds a single AAAAResource.
+func (b *Builder) AAAAResource(h ResourceHeader, r AAAAResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""AAAAResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// OPTResource adds a single OPTResource.
+func (b *Builder) OPTResource(h ResourceHeader, r OPTResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""OPTResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// UnknownResource adds a single UnknownResource.
+func (b *Builder) UnknownResource(h ResourceHeader, r UnknownResource) error {
+	if err := b.checkResourceSection(); err != nil {
+		return err
+	}
+	h.Type = r.realType()
+	msg, lenOff, err := h.pack(b.msg, b.compression, b.start)
+	if err != nil {
+		return &nestedError{""ResourceHeader"", err}
+	}
+	preLen := len(msg)
+	if msg, err = r.pack(msg, b.compression, b.start); err != nil {
+		return &nestedError{""UnknownResource body"", err}
+	}
+	if err := h.fixLen(msg, lenOff, preLen); err != nil {
+		return err
+	}
+	if err := b.incrementSectionCount(); err != nil {
+		return err
+	}
+	b.msg = msg
+	return nil
+}
+
+// Finish ends message building and generates a binary message.
+func (b *Builder) Finish() ([]byte, error) {
+	if b.section < sectionHeader {
+		return nil, ErrNotStarted
+	}
+	b.section = sectionDone
+	// Space for the header was allocated in NewBuilder.
+	b.header.pack(b.msg[b.start:b.start])
+	return b.msg, nil
+}
+
+// A ResourceHeader is the header of a DNS resource record. There are
+// many types of DNS resource records, but they all share the same header.
+type ResourceHeader struct {
+	// Name is the domain name for which this resource record pertains.
+	Name Name
+
+	// Type is the type of DNS resource record.
+	//
+	// This field will be set automatically during packing.
+	Type Type
+
+	// Class is the class of network to which this DNS resource record
+	// pertains.
+	Class Class
+
+	// TTL is the length of time (measured in seconds) which this resource
+	// record is valid for (time to live). All Resources in a set should
+	// have the same TTL (RFC 2181 Section 5.2).
+	TTL uint32
+
+	// Length is the length of data in the resource record after the header.
+	//
+	// This field will be set automatically during packing.
+	Length uint16
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (h *ResourceHeader) GoString() string {
+	return ""dnsmessage.ResourceHeader{"" +
+		""Name: "" + h.Name.GoString() + "", "" +
+		""Type: "" + h.Type.GoString() + "", "" +
+		""Class: "" + h.Class.GoString() + "", "" +
+		""TTL: "" + printUint32(h.TTL) + "", "" +
+		""Length: "" + printUint16(h.Length) + ""}""
+}
+
+// pack appends the wire format of the ResourceHeader to oldMsg.
+//
+// lenOff is the offset in msg where the Length field was packed.
+func (h *ResourceHeader) pack(oldMsg []byte, compression map[string]uint16, compressionOff int) (msg []byte, lenOff int, err error) {
+	msg = oldMsg
+	if msg, err = h.Name.pack(msg, compression, compressionOff); err != nil {
+		return oldMsg, 0, &nestedError{""Name"", err}
+	}
+	msg = packType(msg, h.Type)
+	msg = packClass(msg, h.Class)
+	msg = packUint32(msg, h.TTL)
+	lenOff = len(msg)
+	msg = packUint16(msg, h.Length)
+	return msg, lenOff, nil
+}
+
+func (h *ResourceHeader) unpack(msg []byte, off int) (int, error) {
+	newOff := off
+	var err error
+	if newOff, err = h.Name.unpack(msg, newOff); err != nil {
+		return off, &nestedError{""Name"", err}
+	}
+	if h.Type, newOff, err = unpackType(msg, newOff); err != nil {
+		return off, &nestedError{""Type"", err}
+	}
+	if h.Class, newOff, err = unpackClass(msg, newOff); err != nil {
+		return off, &nestedError{""Class"", err}
+	}
+	if h.TTL, newOff, err = unpackUint32(msg, newOff); err != nil {
+		return off, &nestedError{""TTL"", err}
+	}
+	if h.Length, newOff, err = unpackUint16(msg, newOff); err != nil {
+		return off, &nestedError{""Length"", err}
+	}
+	return newOff, nil
+}
+
+// fixLen updates a packed ResourceHeader to include the length of the
+// ResourceBody.
+//
+// lenOff is the offset of the ResourceHeader.Length field in msg.
+//
+// preLen is the length that msg was before the ResourceBody was packed.
+func (h *ResourceHeader) fixLen(msg []byte, lenOff int, preLen int) error {
+	conLen := len(msg) - preLen
+	if conLen > int(^uint16(0)) {
+		return errResTooLong
+	}
+
+	// Fill in the length now that we know how long the content is.
+	packUint16(msg[lenOff:lenOff], uint16(conLen))
+	h.Length = uint16(conLen)
+
+	return nil
+}
+
+// EDNS(0) wire constants.
+const (
+	edns0Version = 0
+
+	edns0DNSSECOK     = 0x00008000
+	ednsVersionMask   = 0x00ff0000
+	edns0DNSSECOKMask = 0x00ff8000
+)
+
+// SetEDNS0 configures h for EDNS(0).
+//
+// The provided extRCode must be an extended RCode.
+func (h *ResourceHeader) SetEDNS0(udpPayloadLen int, extRCode RCode, dnssecOK bool) error {
+	h.Name = Name{Data: [255]byte{'.'}, Length: 1} // RFC 6891 section 6.1.2
+	h.Type = TypeOPT
+	h.Class = Class(udpPayloadLen)
+	h.TTL = uint32(extRCode) >> 4 << 24
+	if dnssecOK {
+		h.TTL |= edns0DNSSECOK
+	}
+	return nil
+}
+
+// DNSSECAllowed reports whether the DNSSEC OK bit is set.
+func (h *ResourceHeader) DNSSECAllowed() bool {
+	return h.TTL&edns0DNSSECOKMask == edns0DNSSECOK // RFC 6891 section 6.1.3
+}
+
+// ExtendedRCode returns an extended RCode.
+//
+// The provided rcode must be the RCode in DNS message header.
+func (h *ResourceHeader) ExtendedRCode(rcode RCode) RCode {
+	if h.TTL&ednsVersionMask == edns0Version { // RFC 6891 section 6.1.3
+		return RCode(h.TTL>>24<<4) | rcode
+	}
+	return rcode
+}
+
+func skipResource(msg []byte, off int) (int, error) {
+	newOff, err := skipName(msg, off)
+	if err != nil {
+		return off, &nestedError{""Name"", err}
+	}
+	if newOff, err = skipType(msg, newOff); err != nil {
+		return off, &nestedError{""Type"", err}
+	}
+	if newOff, err = skipClass(msg, newOff); err != nil {
+		return off, &nestedError{""Class"", err}
+	}
+	if newOff, err = skipUint32(msg, newOff); err != nil {
+		return off, &nestedError{""TTL"", err}
+	}
+	length, newOff, err := unpackUint16(msg, newOff)
+	if err != nil {
+		return off, &nestedError{""Length"", err}
+	}
+	if newOff += int(length); newOff > len(msg) {
+		return off, errResourceLen
+	}
+	return newOff, nil
+}
+
+// packUint16 appends the wire format of field to msg.
+func packUint16(msg []byte, field uint16) []byte {
+	return append(msg, byte(field>>8), byte(field))
+}
+
+func unpackUint16(msg []byte, off int) (uint16, int, error) {
+	if off+uint16Len > len(msg) {
+		return 0, off, errBaseLen
+	}
+	return uint16(msg[off])<<8 | uint16(msg[off+1]), off + uint16Len, nil
+}
+
+func skipUint16(msg []byte, off int) (int, error) {
+	if off+uint16Len > len(msg) {
+		return off, errBaseLen
+	}
+	return off + uint16Len, nil
+}
+
+// packType appends the wire format of field to msg.
+func packType(msg []byte, field Type) []byte {
+	return packUint16(msg, uint16(field))
+}
+
+func unpackType(msg []byte, off int) (Type, int, error) {
+	t, o, err := unpackUint16(msg, off)
+	return Type(t), o, err
+}
+
+func skipType(msg []byte, off int) (int, error) {
+	return skipUint16(msg, off)
+}
+
+// packClass appends the wire format of field to msg.
+func packClass(msg []byte, field Class) []byte {
+	return packUint16(msg, uint16(field))
+}
+
+func unpackClass(msg []byte, off int) (Class, int, error) {
+	c, o, err := unpackUint16(msg, off)
+	return Class(c), o, err
+}
+
+func skipClass(msg []byte, off int) (int, error) {
+	return skipUint16(msg, off)
+}
+
+// packUint32 appends the wire format of field to msg.
+func packUint32(msg []byte, field uint32) []byte {
+	return append(
+		msg,
+		byte(field>>24),
+		byte(field>>16),
+		byte(field>>8),
+		byte(field),
+	)
+}
+
+func unpackUint32(msg []byte, off int) (uint32, int, error) {
+	if off+uint32Len > len(msg) {
+		return 0, off, errBaseLen
+	}
+	v := uint32(msg[off])<<24 | uint32(msg[off+1])<<16 | uint32(msg[off+2])<<8 | uint32(msg[off+3])
+	return v, off + uint32Len, nil
+}
+
+func skipUint32(msg []byte, off int) (int, error) {
+	if off+uint32Len > len(msg) {
+		return off, errBaseLen
+	}
+	return off + uint32Len, nil
+}
+
+// packText appends the wire format of field to msg.
+func packText(msg []byte, field string) ([]byte, error) {
+	l := len(field)
+	if l > 255 {
+		return nil, errStringTooLong
+	}
+	msg = append(msg, byte(l))
+	msg = append(msg, field...)
+
+	return msg, nil
+}
+
+func unpackText(msg []byte, off int) (string, int, error) {
+	if off >= len(msg) {
+		return """", off, errBaseLen
+	}
+	beginOff := off + 1
+	endOff := beginOff + int(msg[off])
+	if endOff > len(msg) {
+		return """", off, errCalcLen
+	}
+	return string(msg[beginOff:endOff]), endOff, nil
+}
+
+// packBytes appends the wire format of field to msg.
+func packBytes(msg []byte, field []byte) []byte {
+	return append(msg, field...)
+}
+
+func unpackBytes(msg []byte, off int, field []byte) (int, error) {
+	newOff := off + len(field)
+	if newOff > len(msg) {
+		return off, errBaseLen
+	}
+	copy(field, msg[off:newOff])
+	return newOff, nil
+}
+
+const nonEncodedNameMax = 254
+
+// A Name is a non-encoded and non-escaped domain name. It is used instead of strings to avoid
+// allocations.
+type Name struct {
+	Data   [255]byte
+	Length uint8
+}
+
+// NewName creates a new Name from a string.
+func NewName(name string) (Name, error) {
+	n := Name{Length: uint8(len(name))}
+	if len(name) > len(n.Data) {
+		return Name{}, errCalcLen
+	}
+	copy(n.Data[:], name)
+	return n, nil
+}
+
+// MustNewName creates a new Name from a string and panics on error.
+func MustNewName(name string) Name {
+	n, err := NewName(name)
+	if err != nil {
+		panic(""creating name: "" + err.Error())
+	}
+	return n
+}
+
+// String implements fmt.Stringer.String.
+//
+// Note: characters inside the labels are not escaped in any way.
+func (n Name) String() string {
+	return string(n.Data[:n.Length])
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (n *Name) GoString() string {
+	return `dnsmessage.MustNewName(""` + printString(n.Data[:n.Length]) + `"")`
+}
+
+// pack appends the wire format of the Name to msg.
+//
+// Domain names are a sequence of counted strings split at the dots. They end
+// with a zero-length string. Compression can be used to reuse domain suffixes.
+//
+// The compression map will be updated with new domain suffixes. If compression
+// is nil, compression will not be used.
+func (n *Name) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+
+	if n.Length > nonEncodedNameMax {
+		return nil, errNameTooLong
+	}
+
+	// Add a trailing dot to canonicalize name.
+	if n.Length == 0 || n.Data[n.Length-1] != '.' {
+		return oldMsg, errNonCanonicalName
+	}
+
+	// Allow root domain.
+	if n.Data[0] == '.' && n.Length == 1 {
+		return append(msg, 0), nil
+	}
+
+	var nameAsStr string
+
+	// Emit sequence of counted strings, chopping at dots.
+	for i, begin := 0, 0; i < int(n.Length); i++ {
+		// Check for the end of the segment.
+		if n.Data[i] == '.' {
+			// The two most significant bits have special meaning.
+			// It isn't allowed for segments to be long enough to
+			// need them.
+			if i-begin >= 1<<6 {
+				return oldMsg, errSegTooLong
+			}
+
+			// Segments must have a non-zero length.
+			if i-begin == 0 {
+				return oldMsg, errZeroSegLen
+			}
+
+			msg = append(msg, byte(i-begin))
+
+			for j := begin; j < i; j++ {
+				msg = append(msg, n.Data[j])
+			}
+
+			begin = i + 1
+			continue
+		}
+
+		// We can only compress domain suffixes starting with a new
+		// segment. A pointer is two bytes with the two most significant
+		// bits set to 1 to indicate that it is a pointer.
+		if (i == 0 || n.Data[i-1] == '.') && compression != nil {
+			if ptr, ok := compression[string(n.Data[i:n.Length])]; ok {
+				// Hit. Emit a pointer instead of the rest of
+				// the domain.
+				return append(msg, byte(ptr>>8|0xC0), byte(ptr)), nil
+			}
+
+			// Miss. Add the suffix to the compression table if the
+			// offset can be stored in the available 14 bits.
+			newPtr := len(msg) - compressionOff
+			if newPtr <= int(^uint16(0)>>2) {
+				if nameAsStr == """" {
+					// allocate n.Data on the heap once, to avoid allocating it
+					// multiple times (for next labels).
+					nameAsStr = string(n.Data[:n.Length])
+				}
+				compression[nameAsStr[i:]] = uint16(newPtr)
+			}
+		}
+	}
+	return append(msg, 0), nil
+}
+
+// unpack unpacks a domain name.
+func (n *Name) unpack(msg []byte, off int) (int, error) {
+	// currOff is the current working offset.
+	currOff := off
+
+	// newOff is the offset where the next record will start. Pointers lead
+	// to data that belongs to other names and thus doesn't count towards to
+	// the usage of this name.
+	newOff := off
+
+	// ptr is the number of pointers followed.
+	var ptr int
+
+	// Name is a slice representation of the name data.
+	name := n.Data[:0]
+
+Loop:
+	for {
+		if currOff >= len(msg) {
+			return off, errBaseLen
+		}
+		c := int(msg[currOff])
+		currOff++
+		switch c & 0xC0 {
+		case 0x00: // String segment
+			if c == 0x00 {
+				// A zero length signals the end of the name.
+				break Loop
+			}
+			endOff := currOff + c
+			if endOff > len(msg) {
+				return off, errCalcLen
+			}
+
+			// Reject names containing dots.
+			// See issue golang/go#56246
+			for _, v := range msg[currOff:endOff] {
+				if v == '.' {
+					return off, errInvalidName
+				}
+			}
+
+			name = append(name, msg[currOff:endOff]...)
+			name = append(name, '.')
+			currOff = endOff
+		case 0xC0: // Pointer
+			if currOff >= len(msg) {
+				return off, errInvalidPtr
+			}
+			c1 := msg[currOff]
+			currOff++
+			if ptr == 0 {
+				newOff = currOff
+			}
+			// Don't follow too many pointers, maybe there's a loop.
+			if ptr++; ptr > 10 {
+				return off, errTooManyPtr
+			}
+			currOff = (c^0xC0)<<8 | int(c1)
+		default:
+			// Prefixes 0x80 and 0x40 are reserved.
+			return off, errReserved
+		}
+	}
+	if len(name) == 0 {
+		name = append(name, '.')
+	}
+	if len(name) > nonEncodedNameMax {
+		return off, errNameTooLong
+	}
+	n.Length = uint8(len(name))
+	if ptr == 0 {
+		newOff = currOff
+	}
+	return newOff, nil
+}
+
+func skipName(msg []byte, off int) (int, error) {
+	// newOff is the offset where the next record will start. Pointers lead
+	// to data that belongs to other names and thus doesn't count towards to
+	// the usage of this name.
+	newOff := off
+
+Loop:
+	for {
+		if newOff >= len(msg) {
+			return off, errBaseLen
+		}
+		c := int(msg[newOff])
+		newOff++
+		switch c & 0xC0 {
+		case 0x00:
+			if c == 0x00 {
+				// A zero length signals the end of the name.
+				break Loop
+			}
+			// literal string
+			newOff += c
+			if newOff > len(msg) {
+				return off, errCalcLen
+			}
+		case 0xC0:
+			// Pointer to somewhere else in msg.
+
+			// Pointers are two bytes.
+			newOff++
+
+			// Don't follow the pointer as the data here has ended.
+			break Loop
+		default:
+			// Prefixes 0x80 and 0x40 are reserved.
+			return off, errReserved
+		}
+	}
+
+	return newOff, nil
+}
+
+// A Question is a DNS query.
+type Question struct {
+	Name  Name
+	Type  Type
+	Class Class
+}
+
+// pack appends the wire format of the Question to msg.
+func (q *Question) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	msg, err := q.Name.pack(msg, compression, compressionOff)
+	if err != nil {
+		return msg, &nestedError{""Name"", err}
+	}
+	msg = packType(msg, q.Type)
+	return packClass(msg, q.Class), nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (q *Question) GoString() string {
+	return ""dnsmessage.Question{"" +
+		""Name: "" + q.Name.GoString() + "", "" +
+		""Type: "" + q.Type.GoString() + "", "" +
+		""Class: "" + q.Class.GoString() + ""}""
+}
+
+func unpackResourceBody(msg []byte, off int, hdr ResourceHeader) (ResourceBody, int, error) {
+	var (
+		r    ResourceBody
+		err  error
+		name string
+	)
+	switch hdr.Type {
+	case TypeA:
+		var rb AResource
+		rb, err = unpackAResource(msg, off)
+		r = &rb
+		name = ""A""
+	case TypeNS:
+		var rb NSResource
+		rb, err = unpackNSResource(msg, off)
+		r = &rb
+		name = ""NS""
+	case TypeCNAME:
+		var rb CNAMEResource
+		rb, err = unpackCNAMEResource(msg, off)
+		r = &rb
+		name = ""CNAME""
+	case TypeSOA:
+		var rb SOAResource
+		rb, err = unpackSOAResource(msg, off)
+		r = &rb
+		name = ""SOA""
+	case TypePTR:
+		var rb PTRResource
+		rb, err = unpackPTRResource(msg, off)
+		r = &rb
+		name = ""PTR""
+	case TypeMX:
+		var rb MXResource
+		rb, err = unpackMXResource(msg, off)
+		r = &rb
+		name = ""MX""
+	case TypeTXT:
+		var rb TXTResource
+		rb, err = unpackTXTResource(msg, off, hdr.Length)
+		r = &rb
+		name = ""TXT""
+	case TypeAAAA:
+		var rb AAAAResource
+		rb, err = unpackAAAAResource(msg, off)
+		r = &rb
+		name = ""AAAA""
+	case TypeSRV:
+		var rb SRVResource
+		rb, err = unpackSRVResource(msg, off)
+		r = &rb
+		name = ""SRV""
+	case TypeOPT:
+		var rb OPTResource
+		rb, err = unpackOPTResource(msg, off, hdr.Length)
+		r = &rb
+		name = ""OPT""
+	default:
+		var rb UnknownResource
+		rb, err = unpackUnknownResource(hdr.Type, msg, off, hdr.Length)
+		r = &rb
+		name = ""Unknown""
+	}
+	if err != nil {
+		return nil, off, &nestedError{name + "" record"", err}
+	}
+	return r, off + int(hdr.Length), nil
+}
+
+// A CNAMEResource is a CNAME Resource record.
+type CNAMEResource struct {
+	CNAME Name
+}
+
+func (r *CNAMEResource) realType() Type {
+	return TypeCNAME
+}
+
+// pack appends the wire format of the CNAMEResource to msg.
+func (r *CNAMEResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return r.CNAME.pack(msg, compression, compressionOff)
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *CNAMEResource) GoString() string {
+	return ""dnsmessage.CNAMEResource{CNAME: "" + r.CNAME.GoString() + ""}""
+}
+
+func unpackCNAMEResource(msg []byte, off int) (CNAMEResource, error) {
+	var cname Name
+	if _, err := cname.unpack(msg, off); err != nil {
+		return CNAMEResource{}, err
+	}
+	return CNAMEResource{cname}, nil
+}
+
+// An MXResource is an MX Resource record.
+type MXResource struct {
+	Pref uint16
+	MX   Name
+}
+
+func (r *MXResource) realType() Type {
+	return TypeMX
+}
+
+// pack appends the wire format of the MXResource to msg.
+func (r *MXResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+	msg = packUint16(msg, r.Pref)
+	msg, err := r.MX.pack(msg, compression, compressionOff)
+	if err != nil {
+		return oldMsg, &nestedError{""MXResource.MX"", err}
+	}
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *MXResource) GoString() string {
+	return ""dnsmessage.MXResource{"" +
+		""Pref: "" + printUint16(r.Pref) + "", "" +
+		""MX: "" + r.MX.GoString() + ""}""
+}
+
+func unpackMXResource(msg []byte, off int) (MXResource, error) {
+	pref, off, err := unpackUint16(msg, off)
+	if err != nil {
+		return MXResource{}, &nestedError{""Pref"", err}
+	}
+	var mx Name
+	if _, err := mx.unpack(msg, off); err != nil {
+		return MXResource{}, &nestedError{""MX"", err}
+	}
+	return MXResource{pref, mx}, nil
+}
+
+// An NSResource is an NS Resource record.
+type NSResource struct {
+	NS Name
+}
+
+func (r *NSResource) realType() Type {
+	return TypeNS
+}
+
+// pack appends the wire format of the NSResource to msg.
+func (r *NSResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return r.NS.pack(msg, compression, compressionOff)
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *NSResource) GoString() string {
+	return ""dnsmessage.NSResource{NS: "" + r.NS.GoString() + ""}""
+}
+
+func unpackNSResource(msg []byte, off int) (NSResource, error) {
+	var ns Name
+	if _, err := ns.unpack(msg, off); err != nil {
+		return NSResource{}, err
+	}
+	return NSResource{ns}, nil
+}
+
+// A PTRResource is a PTR Resource record.
+type PTRResource struct {
+	PTR Name
+}
+
+func (r *PTRResource) realType() Type {
+	return TypePTR
+}
+
+// pack appends the wire format of the PTRResource to msg.
+func (r *PTRResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return r.PTR.pack(msg, compression, compressionOff)
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *PTRResource) GoString() string {
+	return ""dnsmessage.PTRResource{PTR: "" + r.PTR.GoString() + ""}""
+}
+
+func unpackPTRResource(msg []byte, off int) (PTRResource, error) {
+	var ptr Name
+	if _, err := ptr.unpack(msg, off); err != nil {
+		return PTRResource{}, err
+	}
+	return PTRResource{ptr}, nil
+}
+
+// An SOAResource is an SOA Resource record.
+type SOAResource struct {
+	NS      Name
+	MBox    Name
+	Serial  uint32
+	Refresh uint32
+	Retry   uint32
+	Expire  uint32
+
+	// MinTTL the is the default TTL of Resources records which did not
+	// contain a TTL value and the TTL of negative responses. (RFC 2308
+	// Section 4)
+	MinTTL uint32
+}
+
+func (r *SOAResource) realType() Type {
+	return TypeSOA
+}
+
+// pack appends the wire format of the SOAResource to msg.
+func (r *SOAResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+	msg, err := r.NS.pack(msg, compression, compressionOff)
+	if err != nil {
+		return oldMsg, &nestedError{""SOAResource.NS"", err}
+	}
+	msg, err = r.MBox.pack(msg, compression, compressionOff)
+	if err != nil {
+		return oldMsg, &nestedError{""SOAResource.MBox"", err}
+	}
+	msg = packUint32(msg, r.Serial)
+	msg = packUint32(msg, r.Refresh)
+	msg = packUint32(msg, r.Retry)
+	msg = packUint32(msg, r.Expire)
+	return packUint32(msg, r.MinTTL), nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *SOAResource) GoString() string {
+	return ""dnsmessage.SOAResource{"" +
+		""NS: "" + r.NS.GoString() + "", "" +
+		""MBox: "" + r.MBox.GoString() + "", "" +
+		""Serial: "" + printUint32(r.Serial) + "", "" +
+		""Refresh: "" + printUint32(r.Refresh) + "", "" +
+		""Retry: "" + printUint32(r.Retry) + "", "" +
+		""Expire: "" + printUint32(r.Expire) + "", "" +
+		""MinTTL: "" + printUint32(r.MinTTL) + ""}""
+}
+
+func unpackSOAResource(msg []byte, off int) (SOAResource, error) {
+	var ns Name
+	off, err := ns.unpack(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""NS"", err}
+	}
+	var mbox Name
+	if off, err = mbox.unpack(msg, off); err != nil {
+		return SOAResource{}, &nestedError{""MBox"", err}
+	}
+	serial, off, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""Serial"", err}
+	}
+	refresh, off, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""Refresh"", err}
+	}
+	retry, off, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""Retry"", err}
+	}
+	expire, off, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""Expire"", err}
+	}
+	minTTL, _, err := unpackUint32(msg, off)
+	if err != nil {
+		return SOAResource{}, &nestedError{""MinTTL"", err}
+	}
+	return SOAResource{ns, mbox, serial, refresh, retry, expire, minTTL}, nil
+}
+
+// A TXTResource is a TXT Resource record.
+type TXTResource struct {
+	TXT []string
+}
+
+func (r *TXTResource) realType() Type {
+	return TypeTXT
+}
+
+// pack appends the wire format of the TXTResource to msg.
+func (r *TXTResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+	for _, s := range r.TXT {
+		var err error
+		msg, err = packText(msg, s)
+		if err != nil {
+			return oldMsg, err
+		}
+	}
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *TXTResource) GoString() string {
+	s := ""dnsmessage.TXTResource{TXT: []string{""
+	if len(r.TXT) == 0 {
+		return s + ""}}""
+	}
+	s += `""` + printString([]byte(r.TXT[0]))
+	for _, t := range r.TXT[1:] {
+		s += `"", ""` + printString([]byte(t))
+	}
+	return s + `""}}`
+}
+
+func unpackTXTResource(msg []byte, off int, length uint16) (TXTResource, error) {
+	txts := make([]string, 0, 1)
+	for n := uint16(0); n < length; {
+		var t string
+		var err error
+		if t, off, err = unpackText(msg, off); err != nil {
+			return TXTResource{}, &nestedError{""text"", err}
+		}
+		// Check if we got too many bytes.
+		if length-n < uint16(len(t))+1 {
+			return TXTResource{}, errCalcLen
+		}
+		n += uint16(len(t)) + 1
+		txts = append(txts, t)
+	}
+	return TXTResource{txts}, nil
+}
+
+// An SRVResource is an SRV Resource record.
+type SRVResource struct {
+	Priority uint16
+	Weight   uint16
+	Port     uint16
+	Target   Name // Not compressed as per RFC 2782.
+}
+
+func (r *SRVResource) realType() Type {
+	return TypeSRV
+}
+
+// pack appends the wire format of the SRVResource to msg.
+func (r *SRVResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	oldMsg := msg
+	msg = packUint16(msg, r.Priority)
+	msg = packUint16(msg, r.Weight)
+	msg = packUint16(msg, r.Port)
+	msg, err := r.Target.pack(msg, nil, compressionOff)
+	if err != nil {
+		return oldMsg, &nestedError{""SRVResource.Target"", err}
+	}
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *SRVResource) GoString() string {
+	return ""dnsmessage.SRVResource{"" +
+		""Priority: "" + printUint16(r.Priority) + "", "" +
+		""Weight: "" + printUint16(r.Weight) + "", "" +
+		""Port: "" + printUint16(r.Port) + "", "" +
+		""Target: "" + r.Target.GoString() + ""}""
+}
+
+func unpackSRVResource(msg []byte, off int) (SRVResource, error) {
+	priority, off, err := unpackUint16(msg, off)
+	if err != nil {
+		return SRVResource{}, &nestedError{""Priority"", err}
+	}
+	weight, off, err := unpackUint16(msg, off)
+	if err != nil {
+		return SRVResource{}, &nestedError{""Weight"", err}
+	}
+	port, off, err := unpackUint16(msg, off)
+	if err != nil {
+		return SRVResource{}, &nestedError{""Port"", err}
+	}
+	var target Name
+	if _, err := target.unpack(msg, off); err != nil {
+		return SRVResource{}, &nestedError{""Target"", err}
+	}
+	return SRVResource{priority, weight, port, target}, nil
+}
+
+// An AResource is an A Resource record.
+type AResource struct {
+	A [4]byte
+}
+
+func (r *AResource) realType() Type {
+	return TypeA
+}
+
+// pack appends the wire format of the AResource to msg.
+func (r *AResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return packBytes(msg, r.A[:]), nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *AResource) GoString() string {
+	return ""dnsmessage.AResource{"" +
+		""A: [4]byte{"" + printByteSlice(r.A[:]) + ""}}""
+}
+
+func unpackAResource(msg []byte, off int) (AResource, error) {
+	var a [4]byte
+	if _, err := unpackBytes(msg, off, a[:]); err != nil {
+		return AResource{}, err
+	}
+	return AResource{a}, nil
+}
+
+// An AAAAResource is an AAAA Resource record.
+type AAAAResource struct {
+	AAAA [16]byte
+}
+
+func (r *AAAAResource) realType() Type {
+	return TypeAAAA
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *AAAAResource) GoString() string {
+	return ""dnsmessage.AAAAResource{"" +
+		""AAAA: [16]byte{"" + printByteSlice(r.AAAA[:]) + ""}}""
+}
+
+// pack appends the wire format of the AAAAResource to msg.
+func (r *AAAAResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return packBytes(msg, r.AAAA[:]), nil
+}
+
+func unpackAAAAResource(msg []byte, off int) (AAAAResource, error) {
+	var aaaa [16]byte
+	if _, err := unpackBytes(msg, off, aaaa[:]); err != nil {
+		return AAAAResource{}, err
+	}
+	return AAAAResource{aaaa}, nil
+}
+
+// An OPTResource is an OPT pseudo Resource record.
+//
+// The pseudo resource record is part of the extension mechanisms for DNS
+// as defined in RFC 6891.
+type OPTResource struct {
+	Options []Option
+}
+
+// An Option represents a DNS message option within OPTResource.
+//
+// The message option is part of the extension mechanisms for DNS as
+// defined in RFC 6891.
+type Option struct {
+	Code uint16 // option code
+	Data []byte
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (o *Option) GoString() string {
+	return ""dnsmessage.Option{"" +
+		""Code: "" + printUint16(o.Code) + "", "" +
+		""Data: []byte{"" + printByteSlice(o.Data) + ""}}""
+}
+
+func (r *OPTResource) realType() Type {
+	return TypeOPT
+}
+
+func (r *OPTResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	for _, opt := range r.Options {
+		msg = packUint16(msg, opt.Code)
+		l := uint16(len(opt.Data))
+		msg = packUint16(msg, l)
+		msg = packBytes(msg, opt.Data)
+	}
+	return msg, nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *OPTResource) GoString() string {
+	s := ""dnsmessage.OPTResource{Options: []dnsmessage.Option{""
+	if len(r.Options) == 0 {
+		return s + ""}}""
+	}
+	s += r.Options[0].GoString()
+	for _, o := range r.Options[1:] {
+		s += "", "" + o.GoString()
+	}
+	return s + ""}}""
+}
+
+func unpackOPTResource(msg []byte, off int, length uint16) (OPTResource, error) {
+	var opts []Option
+	for oldOff := off; off < oldOff+int(length); {
+		var err error
+		var o Option
+		o.Code, off, err = unpackUint16(msg, off)
+		if err != nil {
+			return OPTResource{}, &nestedError{""Code"", err}
+		}
+		var l uint16
+		l, off, err = unpackUint16(msg, off)
+		if err != nil {
+			return OPTResource{}, &nestedError{""Data"", err}
+		}
+		o.Data = make([]byte, l)
+		if copy(o.Data, msg[off:]) != int(l) {
+			return OPTResource{}, &nestedError{""Data"", errCalcLen}
+		}
+		off += int(l)
+		opts = append(opts, o)
+	}
+	return OPTResource{opts}, nil
+}
+
+// An UnknownResource is a catch-all container for unknown record types.
+type UnknownResource struct {
+	Type Type
+	Data []byte
+}
+
+func (r *UnknownResource) realType() Type {
+	return r.Type
+}
+
+// pack appends the wire format of the UnknownResource to msg.
+func (r *UnknownResource) pack(msg []byte, compression map[string]uint16, compressionOff int) ([]byte, error) {
+	return packBytes(msg, r.Data[:]), nil
+}
+
+// GoString implements fmt.GoStringer.GoString.
+func (r *UnknownResource) GoString() string {
+	return ""dnsmessage.UnknownResource{"" +
+		""Type: "" + r.Type.GoString() + "", "" +
+		""Data: []byte{"" + printByteSlice(r.Data) + ""}}""
+}
+
+func unpackUnknownResource(recordType Type, msg []byte, off int, length uint16) (UnknownResource, error) {
+	parsed := UnknownResource{
+		Type: recordType,
+		Data: make([]byte, length),
+	}
+	if _, err := unpackBytes(msg, off, parsed.Data); err != nil {
+		return UnknownResource{}, err
+	}
+	return parsed, nil
+}"
kubernetes/kubernetes,0b0a5974f829f4d8ff0f4c43165d1a0e492a5742,Antonio Ojea,2025-09-18T08:51:32Z,"integration test: webhook proxy behavior

adds a new integration test to verify that the API server's egress
to admission webhooks correctly respects the standard `HTTPS_PROXY`
and `NO_PROXY` environment variables.

It adds a new test util to implement a Fake DNS server that allows
to override DNS resolution in tests, specially useful for integration
test that can only bind to localhost the servers, that is ignored
by certain functionalities.",vendor/modules.txt,1,0,1,"@@ -806,6 +806,7 @@ golang.org/x/mod/semver
 # golang.org/x/net v0.43.0
 ## explicit; go 1.23.0
 golang.org/x/net/context
+golang.org/x/net/dns/dnsmessage
 golang.org/x/net/html
 golang.org/x/net/html/atom
 golang.org/x/net/html/charset"
kubernetes/kubernetes,26c7846e6dd5d0fb43c1e1e82315e2fbc20f1f11,Jordan Liggitt,2025-10-02T22:11:59Z,Use lock-free for unguarded isHidden/isDeprecated fields,staging/src/k8s.io/component-base/metrics/metric.go,10,9,19,"@@ -18,6 +18,7 @@ package metrics
 
 import (
 	""sync""
+	""sync/atomic""
 
 	""github.com/blang/semver/v4""
 	""github.com/prometheus/client_golang/prometheus""
@@ -65,8 +66,8 @@ with the kubeCollector itself as an argument.
 */
 type lazyMetric struct {
 	fqName              string
-	isDeprecated        bool
-	isHidden            bool
+	isDeprecated        atomic.Bool
+	isHidden            atomic.Bool
 	isCreated           bool
 	createLock          sync.RWMutex
 	markDeprecationOnce sync.Once
@@ -104,15 +105,15 @@ func (r *lazyMetric) preprocessMetric(currentVersion semver.Version) {
 	defer disabledMetricsLock.RUnlock()
 	// disabling metrics is higher in precedence than showing hidden metrics
 	if _, ok := disabledMetrics[r.fqName]; ok {
-		r.isHidden = true
+		r.isHidden.Store(true)
 		return
 	}
 	deprecatedVersion := r.self.DeprecatedVersion()
 	if deprecatedVersion == nil {
 		return
 	}
 	r.markDeprecationOnce.Do(func() {
-		r.isDeprecated = isDeprecated(currentVersion, *deprecatedVersion)
+		r.isDeprecated.Store(isDeprecated(currentVersion, *deprecatedVersion))
 
 		if shouldHide(r.stabilityLevel, &currentVersion, deprecatedVersion) {
 			if shouldShowHidden() {
@@ -121,17 +122,17 @@ func (r *lazyMetric) preprocessMetric(currentVersion semver.Version) {
 			}
 			// TODO(RainbowMango): Remove this log temporarily. https://github.com/kubernetes/kubernetes/issues/85369
 			// klog.Warningf(""This metric has been deprecated for more than one release, hiding."")
-			r.isHidden = true
+			r.isHidden.Store(true)
 		}
 	})
 }
 
 func (r *lazyMetric) IsHidden() bool {
-	return r.isHidden
+	return r.isHidden.Load()
 }
 
 func (r *lazyMetric) IsDeprecated() bool {
-	return r.isDeprecated
+	return r.isDeprecated.Load()
 }
 
 // Create forces the initialization of metric which has been deferred until
@@ -174,8 +175,8 @@ func (r *lazyMetric) ClearState() {
 	r.createLock.Lock()
 	defer r.createLock.Unlock()
 
-	r.isDeprecated = false
-	r.isHidden = false
+	r.isDeprecated.Store(false)
+	r.isHidden.Store(false)
 	r.isCreated = false
 	r.markDeprecationOnce = sync.Once{}
 	r.createOnce = sync.Once{}"
kubernetes/kubernetes,52dec274b362dc43883d1985b54bf0802e202f41,Benjamin Elder,2025-10-02T22:03:29Z,add TODO to migrate when new metrics mature and old metrics are deprecated,test/e2e/invariants/metrics.go,6,0,6,"@@ -85,6 +85,9 @@ type apiServerMetricInvariant struct {
 // All fields must be specified
 var apiServerMetricInvariants = []apiServerMetricInvariant{
 	{
+		// TODO: Migrate to apiserver_validation_declarative_validation_parity_discrepancies_total
+		// when it reaches beta / when this metric is deprecated.
+		// For now we uare using the previous beta metric.
 		Metric: ""apiserver_validation_declarative_validation_mismatch_total"",
 		SIG:    ""api-machinery"",
 		Owners: []string{""aaron-prindle"", ""jpbetz"", ""thockin""},
@@ -99,6 +102,9 @@ var apiServerMetricInvariants = []apiServerMetricInvariant{
 		},
 	},
 	{
+		// TODO: Migrate to apiserver_validation_declarative_validation_panics_total
+		// when it reaches beta / when this metric is deprecated.
+		// For now we uare using the previous beta metric.
 		Metric: ""apiserver_validation_declarative_validation_panic_total"",
 		SIG:    ""api-machinery"",
 		Owners: []string{""aaron-prindle"", ""jpbetz"", ""thockin""},"
kubernetes/kubernetes,7c529f25f4dbc9e12e62a53cd48f74b6386a012e,Benjamin Elder,2025-10-02T22:00:44Z,add apiserver_validation_declarative_validation_panic_total invariant,test/e2e/invariants/metrics.go,14,0,14,"@@ -98,6 +98,20 @@ var apiServerMetricInvariants = []apiServerMetricInvariant{
 			return true
 		},
 	},
+	{
+		Metric: ""apiserver_validation_declarative_validation_panic_total"",
+		SIG:    ""api-machinery"",
+		Owners: []string{""aaron-prindle"", ""jpbetz"", ""thockin""},
+		IsValid: func(samples testutil.Samples) bool {
+			// declarative validation panics should never be non-zero
+			for _, sample := range samples {
+				if sample.Value != 0 {
+					return false
+				}
+			}
+			return true
+		},
+	},
 }
 
 func checkInvariantMetrics(ctx context.Context) {"
kubernetes/kubernetes,84ce0f57f27280ed5f82e84819f5b1fad8f20bc5,Benjamin Elder,2025-10-02T21:57:49Z,add test to verify invariants are fully specified,test/e2e/invariants/metrics_test.go,37,0,37,"@@ -0,0 +1,37 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package invariants
+
+import ""testing""
+
+func TestApiServerMetricInvariantsFieldsAreSet(t *testing.T) {
+	// enforce that all fields are set for all registered metrics
+	for i, inv := range apiServerMetricInvariants {
+		if inv.Metric == """" {
+			t.Errorf(""apiServerMetricInvariants[%d].Metric is not set"", i)
+		}
+		if inv.SIG == """" {
+			t.Errorf(""apiServerMetricInvariants[%d].SIG is not set"", i)
+		}
+		if len(inv.Owners) == 0 {
+			t.Errorf(""apiServerMetricInvariants[%d].Owners is not set"", i)
+		}
+		if inv.IsValid == nil {
+			t.Errorf(""apiServerMetricInvariants[%d].IsValid is not set"", i)
+		}
+	}
+}"
kubernetes/kubernetes,41ae5cdf4b0d54e05e7ebb59e76c53bc14c180b0,Benjamin Elder,2025-08-05T23:10:25Z,check invariant metrics after e2e tests,test/e2e/e2e_test.go,1,0,1,"@@ -54,6 +54,7 @@ import (
 	_ ""k8s.io/kubernetes/test/e2e/common""
 	_ ""k8s.io/kubernetes/test/e2e/dra""
 	_ ""k8s.io/kubernetes/test/e2e/instrumentation""
+	_ ""k8s.io/kubernetes/test/e2e/invariants""
 	_ ""k8s.io/kubernetes/test/e2e/kubectl""
 	_ ""k8s.io/kubernetes/test/e2e/lifecycle""
 	_ ""k8s.io/kubernetes/test/e2e/lifecycle/bootstrap"""
kubernetes/kubernetes,41ae5cdf4b0d54e05e7ebb59e76c53bc14c180b0,Benjamin Elder,2025-08-05T23:10:25Z,check invariant metrics after e2e tests,test/e2e/invariants/OWNERS,11,0,11,"@@ -0,0 +1,11 @@
+# go.k8s.io/owners
+options:
+  no_parent_owners: true
+approvers:
+  - bentheelder
+  - aojea
+  - pohly
+reviewers:
+  - bentheelder
+  - aojea
+  - pohly"
kubernetes/kubernetes,41ae5cdf4b0d54e05e7ebb59e76c53bc14c180b0,Benjamin Elder,2025-08-05T23:10:25Z,check invariant metrics after e2e tests,test/e2e/invariants/README.md,12,0,12,"@@ -0,0 +1,12 @@
+# Invariant Tests
+
+This package implements [KEP-5468 Invariant Testing][kep].
+
+Before adding new tests here, please reach out to SIG-Testing to discuss
+with the SIG and Tech Leads.
+
+https://github.com/kubernetes/community/tree/master/sig-testing#contact
+
+For more details, see [the kep][kep].
+
+[kep]: https://git.k8s.io/enhancements/keps/sig-testing/5468-invariant-testing"
kubernetes/kubernetes,41ae5cdf4b0d54e05e7ebb59e76c53bc14c180b0,Benjamin Elder,2025-08-05T23:10:25Z,check invariant metrics after e2e tests,test/e2e/invariants/metrics.go,162,0,162,"@@ -0,0 +1,162 @@
+/*
+Copyright 2025 The Kubernetes Authors.
+
+Licensed under the Apache License, Version 2.0 (the ""License"");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an ""AS IS"" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+// please speak to SIG-Testing leads before adding anything to this package
+// see: https://git.k8s.io/enhancements/keps/sig-testing/5468-invariant-testing
+package invariants
+
+import (
+	""context""
+	""strings""
+
+	clientset ""k8s.io/client-go/kubernetes""
+	""k8s.io/component-base/metrics/testutil""
+	""k8s.io/kubernetes/test/e2e/framework""
+	e2emetrics ""k8s.io/kubernetes/test/e2e/framework/metrics""
+
+	""github.com/onsi/ginkgo/v2""
+	ginkgotypes ""github.com/onsi/ginkgo/v2/types""
+)
+
+// checks for api-server metrics that indicate an internal bug has occurred
+const invariantMetricsLeafText = ""should enable checking invariant metrics""
+
+var _ = framework.SIGDescribe(""testing"")(""Invariant Metrics"", func() {
+	// this test is a sentinel for selecting the report after suite logic
+	//
+	// this allows us to run it by default in most jobs, but it can be opted-out,
+	// does not run when selecting Conformance, and it can be tagged Flaky
+	// if we encounter issues with it
+	ginkgo.It(invariantMetricsLeafText, func() {})
+})
+
+var _ = ginkgo.ReportAfterSuite(""Invariant Metrics"", func(ctx ginkgo.SpecContext, report ginkgo.Report) {
+	// skip early if we are in dry-run mode and didn't really run any tests
+	if report.SuiteConfig.DryRun {
+		return
+	}
+	// check if we ran the 'should enabled checking invariants' ""test""
+	invariantsSelected := false
+	for _, spec := range report.SpecReports {
+		if spec.LeafNodeText == invariantMetricsLeafText {
+			invariantsSelected = spec.State.Is(ginkgotypes.SpecStatePassed)
+			break
+		}
+	}
+	// skip if the associated ""test"" was skipped
+	if !invariantsSelected {
+		return
+	}
+	// otherwise actually check invariants now
+	checkInvariantMetrics(ctx)
+})
+
+// apiServerMetricInvariant represents an api-server metric invariant, all
+// fields must be specified
+type apiServerMetricInvariant struct {
+	// Metric is the metric name
+	Metric string
+	// SIG associated with the invariant
+	// Bugs related to this invariant check failing should be labeled with
+	// this SIG.
+	SIG string
+	// Owners are the individuals responsible for the invariant
+	// Bugs related to this invariant check failing should be assigned to these
+	// GitHub handles
+	Owners []string
+	// IsValid should return false if the metric samples violate the invariant
+	IsValid func(testutil.Samples) bool
+}
+
+// Please speak to SIG-Testing leads before adding anything here.
+// All fields must be specified
+var apiServerMetricInvariants = []apiServerMetricInvariant{
+	{
+		Metric: ""apiserver_validation_declarative_validation_mismatch_total"",
+		SIG:    ""api-machinery"",
+		Owners: []string{""aaron-prindle"", ""jpbetz"", ""thockin""},
+		IsValid: func(samples testutil.Samples) bool {
+			// declarative validation mismatch should never be non-zero
+			for _, sample := range samples {
+				if sample.Value != 0 {
+					return false
+				}
+			}
+			return true
+		},
+	},
+}
+
+func checkInvariantMetrics(ctx context.Context) {
+	// Grab metrics
+	config, err := framework.LoadConfig()
+	if err != nil {
+		framework.Failf(""error loading client config: %v"", err)
+	}
+	c, err := clientset.NewForConfig(config)
+	if err != nil {
+		framework.Failf(""error loading client config: %v"", err)
+	}
+	grabber, err := e2emetrics.NewMetricsGrabber(ctx, c, nil, config, false, false, false, true, false, false)
+	if err != nil {
+		framework.Failf(""error creating metrics grabber: %v"", err)
+	}
+	apiserverMetrics, err := grabber.GrabFromAPIServer(ctx)
+	if err != nil {
+		framework.Failf(""error grabbing api-server metrics: %v"", err)
+	}
+
+	// Check invariant metrics.
+	//
+	//
+	// Please speak to SIG-Testing leads before adding anything here.
+	for _, invariant := range apiServerMetricInvariants {
+		checkAPIServerInvariant(apiserverMetrics, &invariant)
+	}
+}
+
+func checkAPIServerInvariant(metrics e2emetrics.APIServerMetrics, invariant *apiServerMetricInvariant) {
+	metric := invariant.Metric
+	samples, ok := metrics[metric]
+	if !ok || len(samples) == 0 {
+		framework.Failf(
+			`Invariant failed for missing metric: %v
+
+If this failed on a pull request, please check if the PR changes may be related to the failure.
+If not, you can also search for an existing GitHub issue before filing a new issue.
+
+If this failed in a periodic CI job, please file a bug and /assign the owners.
+
+Owners for this metric: %v
+Associated SIG: %v`,
+			metric, strings.Join(invariant.Owners, "" ""), invariant.SIG,
+		)
+	}
+	if !invariant.IsValid(samples) {
+		framework.Failf(
+			`Invariant failed for metric: %v
+
+If this failed on a pull request, please check if the PR changes may be related to the failure.
+If not, you can also search for an existing GitHub issue before filing a new issue.
+
+If this failed in a periodic CI job, please file a bug and /assign the owners.
+
+Owners for this metric: %v
+Associated SIG: %v`,
+			metric, strings.Join(invariant.Owners, "" ""), invariant.SIG,
+		)
+	}
+}"
kubernetes/kubernetes,41ae5cdf4b0d54e05e7ebb59e76c53bc14c180b0,Benjamin Elder,2025-08-05T23:10:25Z,check invariant metrics after e2e tests,test/e2e/suites.go,1,0,1,"@@ -35,6 +35,7 @@ func AfterSuiteActions(ctx context.Context) {
 	if framework.TestContext.ReportDir != """" {
 		framework.CoreDump(framework.TestContext.ReportDir)
 	}
+	// TODO: nothing is using this? what should we do with it?
 	if framework.TestContext.GatherSuiteMetricsAfterTest {
 		if err := gatherTestSuiteMetrics(ctx); err != nil {
 			framework.Logf(""Error gathering metrics: %v"", err)"
kubernetes/kubernetes,748510b8ee0210dffabd1321305d7c678a825080,Natasha Sarkar,2025-09-23T18:51:19Z,refactor and increase coverage for pod resize tests,test/e2e/common/node/framework/podresize/resize.go,7,0,7,"@@ -203,6 +203,10 @@ func verifyPodContainersStatusResources(gotCtrStatuses []v1.ContainerStatus, wan
 			continue
 		}
 
+		if err := framework.Gomega().Expect(gotCtrStatus.AllocatedResources).To(gomega.BeComparableTo(wantCtr.Resources.Requests)); err != nil {
+			errs = append(errs, fmt.Errorf(""container[%s] status allocatedResources mismatch: %w"", wantCtr.Name, err))
+		}
+
 		if err := framework.Gomega().Expect(*gotCtrStatus.Resources).To(gomega.BeComparableTo(wantCtr.Resources)); err != nil {
 			errs = append(errs, fmt.Errorf(""container[%s] status resources mismatch: %w"", wantCtr.Name, err))
 		}
@@ -373,6 +377,9 @@ func UpdateExpectedContainerRestarts(ctx context.Context, pod *v1.Pod, expectedC
 	for _, ctr := range pod.Status.ContainerStatuses {
 		initialRestarts[ctr.Name] = ctr.RestartCount
 	}
+	for _, ctr := range pod.Status.InitContainerStatuses {
+		initialRestarts[ctr.Name] = ctr.RestartCount
+	}
 	for i, ctr := range expectedContainers {
 		newExpectedContainers = append(newExpectedContainers, expectedContainers[i])
 		newExpectedContainers[i].RestartCount += initialRestarts[ctr.Name]"
kubernetes/kubernetes,748510b8ee0210dffabd1321305d7c678a825080,Natasha Sarkar,2025-09-23T18:51:19Z,refactor and increase coverage for pod resize tests,test/e2e/common/node/pod_resize.go,467,1091,1558,"@@ -71,1205 +71,478 @@ func offsetMemory(index int64, value string) string {
 	return ptr.String()
 }
 
-func doPodResizeTests(f *framework.Framework) {
-	type testCase struct {
-		name                string
-		containers          []podresize.ResizableContainerInfo
-		expected            []podresize.ResizableContainerInfo
-		addExtendedResource bool
-		// TODO(123940): test rollback for all test cases once resize is more responsive.
-		testRollback bool
-	}
+func doGuaranteedPodResizeTests(f *framework.Framework) {
+	ginkgo.DescribeTableSubtree(""guaranteed qos - 1 container with resize policy"", func(cpuPolicy, memPolicy v1.ResourceResizeRestartPolicy, resizeInitCtrs bool) {
+		ginkgo.DescribeTable(""resizing"", func(ctx context.Context, desiredCPU, desiredMem string) {
+
+			// The tests for guaranteed pods include extended resources.
+			nodes, err := e2enode.GetReadySchedulableNodes(context.Background(), f.ClientSet)
+			framework.ExpectNoError(err)
+			for _, node := range nodes.Items {
+				e2enode.AddExtendedResource(ctx, f.ClientSet, node.Name, fakeExtendedResource, resource.MustParse(""123""))
+			}
+			defer func() {
+				for _, node := range nodes.Items {
+					e2enode.RemoveExtendedResource(ctx, f.ClientSet, node.Name, fakeExtendedResource)
+				}
+			}()
+
+			originalContainers := makeGuaranteedContainers(1, cpuPolicy, memPolicy, true, true, originalCPU, originalMem)
+			expectedContainers := makeGuaranteedContainers(1, cpuPolicy, memPolicy, true, true, desiredCPU, desiredMem)
+			for i, c := range expectedContainers {
+				// If the pod has init containers, but we are not resizing them, keep the original resources.
+				if c.InitCtr && !resizeInitCtrs {
+					c.Resources = originalContainers[i].Resources
+					expectedContainers[i] = c
+					continue
+				}
+				// For containers where the resize policy is ""restart"", we expect a restart.
+				expectRestart := int32(0)
+				if cpuPolicy == v1.RestartContainer && desiredCPU != originalCPU {
+					expectRestart = 1
+				}
+				if memPolicy == v1.RestartContainer && desiredMem != originalMem {
+					expectRestart = 1
+				}
+				c.RestartCount = expectRestart
+				expectedContainers[i] = c
+			}
+
+			doPatchAndRollback(ctx, f, originalContainers, expectedContainers, true)
 
-	noRestart := v1.NotRequired
-	doRestart := v1.RestartContainer
-	tests := []testCase{
-		{
-			name: ""Guaranteed QoS pod, one container - increase CPU & memory"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one container - decrease CPU only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Guaranteed QoS pod, three containers (c1, c2, c3) - increase: CPU (c1,c3), memory (c2, c3) ; decrease: CPU (c2)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPU), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMem)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPU), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMem)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, reducedCPU), CPULim: offsetCPU(1, reducedCPU), MemReq: offsetMemory(1, increasedMem), MemLim: offsetMemory(1, increasedMem)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, increasedCPU), CPULim: offsetCPU(2, increasedCPU), MemReq: offsetMemory(2, increasedMem), MemLim: offsetMemory(2, increasedMem)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease memory requests only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase memory requests only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: increasedMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase memory limits only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: increasedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod with memory requests + limits - decrease memory limit"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: reducedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU requests only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU limits only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: reducedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase CPU requests only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase CPU limits only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU requests and limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase CPU requests and limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU requests and increase CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase CPU requests and decrease CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: reducedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase memory requests and limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: increasedMem, MemLim: increasedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease memory requests and increase memory limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: reducedMem, MemLim: increasedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease CPU requests and increase memory limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: increasedMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - decrease memory requests and increase CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: increasedCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - increase memory requests and decrease CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: reducedCPULimit, MemReq: increasedMem, MemLim: originalMemLimit},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests - decrease memory request"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: reducedMem},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests - increase cpu request"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, MemReq: originalMem},
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu requests and limits - resize with equivalents"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: ""2m"", CPULim: ""10m""},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: ""1m"", CPULim: ""5m""},
-				},
-			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one container - increase CPU (NotRequired) & memory (RestartContainer)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:         ""c1"",
-					Resources:    &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container - decrease CPU (NotRequired) & memory (RestartContainer)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:         ""c1"",
-					Resources:    &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: reducedMem, MemLim: reducedMemLimit},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-			},
-			testRollback: true,
-		},
-		{
-			name: ""Burstable QoS pod, one container - decrease memory request (RestartContainer memory resize policy)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:         ""c1"",
-					Resources:    &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, one container - increase memory request (NoRestart memory resize policy)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:         ""c1"",
-					Resources:    &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: increasedMem, MemLim: originalMemLimit},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &noRestart,
-					RestartCount: 0,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, three containers - increase c1 resources, no change for c2, decrease c3 resources (no net change for pod)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPULimit), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPULimit), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit, MemReq: increasedMem, MemLim: increasedMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPULimit), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, reducedCPU), CPULim: offsetCPU(2, reducedCPULimit), MemReq: offsetMemory(2, reducedMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, three containers - decrease c1 resources, increase c2 resources, no change for c3 (net increase for pod)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPULimit), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPULimit), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:         ""c2"",
-					Resources:    &cgroups.ContainerResources{CPUReq: offsetCPU(2, increasedCPU), CPULim: offsetCPU(2, increasedCPULimit), MemReq: offsetMemory(2, increasedMem), MemLim: offsetMemory(2, increasedMemLimit)},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPULimit), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, three containers - no change for c1, increase c2 resources, decrease c3 (net decrease for pod)"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &doRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, originalCPU), CPULim: offsetCPU(1, originalCPULimit), MemReq: offsetMemory(1, originalMem), MemLim: offsetMemory(1, originalMemLimit)},
-					CPUPolicy: &doRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c3"",
-					Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, originalCPU), CPULim: offsetCPU(2, originalCPULimit), MemReq: offsetMemory(2, originalMem), MemLim: offsetMemory(2, originalMemLimit)},
-					CPUPolicy: &noRestart,
-					MemPolicy: &doRestart,
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					CPUPolicy: &doRestart,
-					MemPolicy: &doRestart,
-				},
-				{
-					Name:         ""c2"",
-					Resources:    &cgroups.ContainerResources{CPUReq: offsetCPU(1, increasedCPU), CPULim: offsetCPU(1, increasedCPULimit), MemReq: offsetMemory(1, increasedMem), MemLim: offsetMemory(1, increasedMemLimit)},
-					CPUPolicy:    &doRestart,
-					MemPolicy:    &noRestart,
-					RestartCount: 1,
-				},
-				{
-					Name:         ""c3"",
-					Resources:    &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: reducedMem, MemLim: reducedMemLimit},
-					CPUPolicy:    &noRestart,
-					MemPolicy:    &doRestart,
-					RestartCount: 1,
-				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, mixed containers - scale up cpu and memory"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{},
-				},
-			},
 		},
-		{
-			name: ""Burstable QoS pod, mixed containers - add requests"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
+			// All tests will perform the requested resize, and once completed, will roll back the change.
+			// This results in the coverage of both increase and decrease of resources.
+			ginkgo.Entry(""cpu"", increasedCPU, originalMem),
+			ginkgo.Entry(""mem"", originalCPU, increasedMem),
+			ginkgo.Entry(""cpu & mem in the same direction"", increasedCPU, increasedMem),
+			ginkgo.Entry(""cpu & mem in opposite directions"", increasedCPU, reducedMem),
+		)
+	},
+		ginkgo.Entry(""no restart"", v1.NotRequired, v1.NotRequired, false),
+		ginkgo.Entry(""no restart + resize initContainers"", v1.NotRequired, v1.NotRequired, true),
+		ginkgo.Entry(""mem restart"", v1.NotRequired, v1.RestartContainer, false),
+		ginkgo.Entry(""cpu restart"", v1.RestartContainer, v1.NotRequired, false),
+		ginkgo.Entry(""cpu & mem restart"", v1.RestartContainer, v1.RestartContainer, false),
+		ginkgo.Entry(""cpu & mem restart + resize initContainers"", v1.RestartContainer, v1.RestartContainer, true),
+	)
+
+	ginkgo.DescribeTable(""guaranteed pods with multiple containers"", func(ctx context.Context, expectedContainers []podresize.ResizableContainerInfo) {
+		originalContainers := makeGuaranteedContainers(3, v1.NotRequired, v1.NotRequired, false, false, originalCPU, originalMem)
+		for i := range originalContainers {
+			originalContainers[i].CPUPolicy = nil
+			originalContainers[i].MemPolicy = nil
+		}
+
+		doPatchAndRollback(ctx, f, originalContainers, expectedContainers, true)
+	},
+		// All tests will perform the requested resize, and once completed, will roll back the change.
+		// This results in coverage of both the operation as described, and its reverse.
+		ginkgo.Entry(""3 containers - increase cpu & mem on c1, c2, decrease cpu & mem on c3 - net increase"", []podresize.ResizableContainerInfo{
+			{
+				Name:      ""c1"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(0, increasedCPU), CPULim: offsetCPU(0, increasedCPU), MemReq: offsetMemory(0, increasedMem), MemLim: offsetMemory(0, increasedMem)},
+			},
+			{
+				Name:      ""c2"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, increasedCPU), CPULim: offsetCPU(1, increasedCPU), MemReq: offsetMemory(1, increasedMem), MemLim: offsetMemory(1, increasedMem)},
+			},
+			{
+				Name:      ""c3"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, reducedCPU), CPULim: offsetCPU(2, reducedCPU), MemReq: offsetMemory(2, reducedMem), MemLim: offsetMemory(2, reducedMem)},
+			},
+		}),
+		ginkgo.Entry(""3 containers - increase cpu & mem on c1, decrease cpu & mem on c2, c3 - net decrease"", []podresize.ResizableContainerInfo{
+			{
+				Name:      ""c1"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(0, increasedCPU), CPULim: offsetCPU(0, increasedCPU), MemReq: offsetMemory(0, increasedMem), MemLim: offsetMemory(0, increasedMem)},
+			},
+			{
+				Name:      ""c2"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, reducedCPU), CPULim: offsetCPU(1, reducedCPU), MemReq: offsetMemory(1, reducedMem), MemLim: offsetMemory(1, reducedMem)},
+			},
+			{
+				Name:      ""c3"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, reducedCPU), CPULim: offsetCPU(2, reducedCPU), MemReq: offsetMemory(2, reducedMem), MemLim: offsetMemory(2, reducedMem)},
+			},
+		}),
+		ginkgo.Entry(""3 containers - increase: CPU (c1,c3), memory (c2, c3) ; decrease: CPU (c2)"", []podresize.ResizableContainerInfo{
+			{
+				Name:      ""c1"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(0, increasedCPU), CPULim: offsetCPU(0, increasedCPU), MemReq: offsetMemory(0, originalMem), MemLim: offsetMemory(0, originalMem)},
+			},
+			{
+				Name:      ""c2"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(1, reducedCPU), CPULim: offsetCPU(1, reducedCPU), MemReq: offsetMemory(1, increasedMem), MemLim: offsetMemory(1, increasedMem)},
+			},
+			{
+				Name:      ""c3"",
+				Resources: &cgroups.ContainerResources{CPUReq: offsetCPU(2, increasedCPU), CPULim: offsetCPU(2, increasedCPU), MemReq: offsetMemory(2, increasedMem), MemLim: offsetMemory(2, increasedMem)},
+			},
+		}),
+	)
+}
+
+func doBurstablePodResizeTests(f *framework.Framework) {
+	ginkgo.DescribeTableSubtree(""burstable pods - 1 container with all requests & limits set and resize policy"", func(cpuPolicy, memPolicy v1.ResourceResizeRestartPolicy) {
+		ginkgo.DescribeTable(""resizing"", func(ctx context.Context, desiredCPU, desiredCPULimit, desiredMem, desiredMemLimit string) {
+			originalContainers := makeBurstableContainers(1, cpuPolicy, memPolicy, originalCPU, originalCPULimit, originalMem, originalMemLimit)
+			expectedContainers := makeBurstableContainers(1, cpuPolicy, memPolicy, desiredCPU, desiredCPULimit, desiredMem, desiredMemLimit)
+			for i, c := range expectedContainers {
+				// For containers where the resize policy is ""restart"", we expect a restart.
+				expectRestart := int32(0)
+				if cpuPolicy == v1.RestartContainer && (desiredCPU != originalCPU || desiredCPULimit != originalCPULimit) {
+					expectRestart = 1
+				}
+				if memPolicy == v1.RestartContainer && (desiredMem != originalMem || desiredMemLimit != originalMemLimit) {
+					expectRestart = 1
+				}
+				c.RestartCount = expectRestart
+				expectedContainers[i] = c
+			}
+
+			doPatchAndRollback(ctx, f, originalContainers, expectedContainers, true)
+		},
+			// All tests will perform the requested resize, and once completed, will roll back the change.
+			// This results in the coverage of both increase and decrease of resources.
+			ginkgo.Entry(""cpu requests"", increasedCPU, originalCPULimit, originalMem, originalMemLimit),
+			ginkgo.Entry(""cpu limits"", originalCPU, increasedCPULimit, originalMem, originalMemLimit),
+			ginkgo.Entry(""mem requests"", originalCPU, originalCPULimit, increasedMem, originalMemLimit),
+			ginkgo.Entry(""mem limits"", originalCPU, originalCPULimit, originalMem, increasedMemLimit),
+			ginkgo.Entry(""all resources in the same direction"", increasedCPU, increasedCPULimit, increasedMem, increasedMemLimit),
+			ginkgo.Entry(""cpu & mem in opposite directions"", increasedCPU, increasedCPULimit, reducedMem, reducedMemLimit),
+			ginkgo.Entry(""requests & limits in opposite directions"", reducedCPU, increasedCPULimit, increasedMem, reducedMemLimit),
+		)
+	},
+		ginkgo.Entry(""no restart"", v1.NotRequired, v1.NotRequired),
+		ginkgo.Entry(""cpu restart"", v1.RestartContainer, v1.NotRequired),
+		ginkgo.Entry(""mem restart"", v1.NotRequired, v1.RestartContainer),
+		ginkgo.Entry(""cpu & mem restart"", v1.RestartContainer, v1.RestartContainer),
+	)
+
+	// The following tests cover the remaining burstable pod scenarios:
+	// - multiple containers
+	// - adding limits where only requests were previously set
+	// - adding requests where none were previously set
+	// - resizing with equivalents (e.g. 2m -> 1m)
+	ginkgo.DescribeTable(""burstable pods - extended"", func(ctx context.Context, originalContainers, expectedContainers []podresize.ResizableContainerInfo, doRollback bool) {
+		doPatchAndRollback(ctx, f, originalContainers, expectedContainers, doRollback)
+	},
+		ginkgo.Entry(""6 containers - various operations performed (including adding limits and requests)"",
+			[]podresize.ResizableContainerInfo{
+				{
+					// c1 starts with CPU requests only; increase CPU requests + add CPU limits
+					Name:      ""c1"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
+				},
+				{
+					// c2 starts with memory requests only; increase memory requests + add memory limits
 					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{},
-				},
-			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					Resources: &cgroups.ContainerResources{MemReq: originalMem},
 				},
 				{
-					Name:      ""c2"",
+					// c3 starts with CPU and memory requests; decrease memory requests only
+					Name:      ""c3"",
 					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
 				},
-			},
-		},
-		{
-			name: ""Burstable QoS pod, mixed containers - add limits"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					// c4 starts with CPU requests only; decrease CPU requests + add memory requests
+					Name:      ""c4"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					// c5 starts with memory requests only; increase memory requests + add CPU requests
+					Name:      ""c5"",
+					Resources: &cgroups.ContainerResources{MemReq: originalMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
+					// c1 starts with CPU requests only; increase CPU requests + add CPU limits
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit},
 				},
 				{
+					// c2 starts with memory requests only; decrease memory requests + add memory limits
 					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					Resources: &cgroups.ContainerResources{MemReq: reducedMem, MemLim: increasedMemLimit},
 				},
-			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one container - increase CPU & memory with an extended resource"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name: ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem,
-						ExtendedResourceReq: ""1"", ExtendedResourceLim: ""1""},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					// c3 starts with CPU and memory requests; decrease memory requests onloy
+					Name:      ""c3"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: reducedMem},
 				},
-			},
-			expected: []podresize.ResizableContainerInfo{
 				{
-					Name: ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem,
-						ExtendedResourceReq: ""1"", ExtendedResourceLim: ""1""},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
+					// c4 starts with CPU requests only; decrease CPU requests + add memory requests
+					Name:      ""c4"",
+					Resources: &cgroups.ContainerResources{CPUReq: reducedCPU, MemReq: originalMem},
 				},
-			},
-			addExtendedResource: true,
-		},
-		{
-			name: ""BestEffort QoS pod - empty resize"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{},
+					// c5 starts with memory requests only; increase memory requests + add CPU requests
+					Name:      ""c5"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: increasedMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			false,
+		),
+		ginkgo.Entry(""resize with equivalents"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{},
+					Resources: &cgroups.ContainerResources{CPUReq: ""2m"", CPULim: ""10m""},
 				},
 			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one restartable init container - increase CPU & memory"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy:     &noRestart,
-					MemPolicy:     &noRestart,
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: ""1m"", CPULim: ""5m""},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					CPUPolicy: &noRestart,
-					MemPolicy: &noRestart,
-				},
+			true,
+		),
+	)
+
+}
+
+func doPodResizePatchErrorTests(f *framework.Framework) {
+	ginkgo.DescribeTable(""apply invalid resize patch requests"", func(ctx context.Context, originalContainers, desiredContainers []podresize.ResizableContainerInfo, patchError string, waitForStart bool) {
+		podClient := e2epod.NewPodClient(f)
+		var newPod *v1.Pod
+
+		ginkgo.By(""creating and verifying pod"")
+		if waitForStart {
+			newPod = createAndVerifyPod(ctx, f, podClient, originalContainers)
+		} else {
+			tStamp := strconv.Itoa(time.Now().Nanosecond())
+			testPod := podresize.MakePodWithResizableContainers(f.Namespace.Name, ""testpod"", tStamp, originalContainers)
+			testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
+			newPod = podClient.Create(ctx, testPod)
+		}
+
+		ginkgo.By(""patching pod for resize"")
+		patch := podresize.MakeResizePatch(originalContainers, desiredContainers)
+		_, pErr := f.ClientSet.CoreV1().Pods(newPod.Namespace).Patch(ctx, newPod.Name,
+			types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
+		gomega.Expect(pErr).To(gomega.HaveOccurred())
+		gomega.Expect(pErr.Error()).To(gomega.ContainSubstring(patchError))
+
+		patchedPod, getErr := f.ClientSet.CoreV1().Pods(newPod.Namespace).Get(ctx, newPod.Name, metav1.GetOptions{})
+		framework.ExpectNoError(getErr)
+
+		ginkgo.By(""verifying pod resources after patch"")
+		podresize.VerifyPodResources(patchedPod, originalContainers)
+
+		if waitForStart {
+			ginkgo.By(""verifying pod status resources after patch"")
+			framework.ExpectNoError(podresize.VerifyPodStatusResources(patchedPod, originalContainers))
+		}
+
+		ginkgo.By(""deleting pod"")
+		podClient.DeleteSync(ctx, newPod.Name, metav1.DeleteOptions{}, f.Timeouts.PodDelete)
+	},
+		ginkgo.Entry(""BestEffort pod - request memory"",
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					CPUPolicy:     &noRestart,
-					MemPolicy:     &noRestart,
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Name: ""c1"",
 				},
 			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one restartable init container - decrease CPU & increase memory"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{MemReq: originalMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
+			""Pod QOS Class may not change as a result of resizing"",
+			true,
+		),
+		ginkgo.Entry(""BestEffort pod - request cpu"",
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPU, MemReq: increasedMem, MemLim: increasedMem},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Name: ""c1"",
 				},
 			},
-		},
-		{
-			name: ""Guaranteed QoS pod, one container, one restartable init container - decrease init container CPU"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""Pod QOS Class may not change as a result of resizing"",
+			true,
+		),
+		ginkgo.Entry(""Guaranteed pod - remove cpu & memory limits"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
 					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPU, MemReq: originalMem, MemLim: originalMem},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
-				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - increase init container CPU & memory"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""resource limits cannot be removed"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - remove cpu & memory limits + increase requests"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit, MemReq: increasedMem, MemLim: increasedMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: increasedMemLimit},
 				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - decrease init container CPU only"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: increasedCPU, MemReq: increasedMem},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""resource limits cannot be removed"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - remove memory requests"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: reducedCPU, CPULim: reducedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{MemReq: originalMem},
 				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - increase init container CPU only"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""resource requests cannot be removed"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - remove cpu requests"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: increasedCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - decrease init container memory requests only"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Resources: &cgroups.ContainerResources{},
 				},
 			},
-			expected: []podresize.ResizableContainerInfo{
+			""resource requests cannot be removed"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - reorder containers"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: reducedMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Name:      ""c2"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 			},
-		},
-		{
-			name: ""Burstable QoS pod, one container, one restartable init container - increase init container memory only"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
+					Name:      ""c2"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
-			},
-			expected: []podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
-				},
-				{
-					Name:          ""c1-init"",
-					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: increasedMem, MemLim: increasedMemLimit},
-					InitCtr:       true,
-					RestartPolicy: v1.ContainerRestartPolicyAlways,
-				},
-			},
-		},
-	}
-
-	for idx := range tests {
-		tc := tests[idx]
-
-		ginkgo.It(tc.name, func(ctx context.Context) {
-			podClient := e2epod.NewPodClient(f)
-			var testPod, patchedPod *v1.Pod
-			var pErr error
-
-			tStamp := strconv.Itoa(time.Now().Nanosecond())
-			testPod = podresize.MakePodWithResizableContainers(f.Namespace.Name, """", tStamp, tc.containers)
-			testPod.GenerateName = ""resize-test-""
-			testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
-
-			if tc.addExtendedResource {
-				nodes, err := e2enode.GetReadySchedulableNodes(context.Background(), f.ClientSet)
-				framework.ExpectNoError(err)
-
-				for _, node := range nodes.Items {
-					e2enode.AddExtendedResource(ctx, f.ClientSet, node.Name, fakeExtendedResource, resource.MustParse(""123""))
-				}
-				defer func() {
-					for _, node := range nodes.Items {
-						e2enode.RemoveExtendedResource(ctx, f.ClientSet, node.Name, fakeExtendedResource)
-					}
-				}()
-			}
-
-			ginkgo.By(""creating pod"")
-			newPod := podClient.CreateSync(ctx, testPod)
-
-			ginkgo.By(""verifying initial pod resources are as expected"")
-			podresize.VerifyPodResources(newPod, tc.containers)
-			ginkgo.By(""verifying initial pod resize policy is as expected"")
-			podresize.VerifyPodResizePolicy(newPod, tc.containers)
-
-			ginkgo.By(""verifying initial pod status resources are as expected"")
-			framework.ExpectNoError(podresize.VerifyPodStatusResources(newPod, tc.containers))
-			ginkgo.By(""verifying initial cgroup config are as expected"")
-			framework.ExpectNoError(podresize.VerifyPodContainersCgroupValues(ctx, f, newPod, tc.containers))
-
-			patchAndVerify := func(containers, desiredContainers []podresize.ResizableContainerInfo, opStr string) {
-				ginkgo.By(fmt.Sprintf(""patching pod for %s"", opStr))
-				patch := podresize.MakeResizePatch(containers, desiredContainers)
-				patchedPod, pErr = f.ClientSet.CoreV1().Pods(newPod.Namespace).Patch(ctx, newPod.Name,
-					types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
-				framework.ExpectNoError(pErr, fmt.Sprintf(""failed to patch pod for %s"", opStr))
-				expected := podresize.UpdateExpectedContainerRestarts(ctx, patchedPod, desiredContainers)
-
-				ginkgo.By(fmt.Sprintf(""verifying pod patched for %s"", opStr))
-				podresize.VerifyPodResources(patchedPod, expected)
-
-				ginkgo.By(fmt.Sprintf(""waiting for %s to be actuated"", opStr))
-				resizedPod := podresize.WaitForPodResizeActuation(ctx, f, podClient, newPod, expected)
-				podresize.ExpectPodResized(ctx, f, resizedPod, expected)
-			}
-
-			patchAndVerify(tc.containers, tc.expected, ""resize"")
-
-			if tc.testRollback {
-				// Resize has been actuated, test rollback
-				rollbackContainers := make([]podresize.ResizableContainerInfo, len(tc.containers))
-				copy(rollbackContainers, tc.containers)
-				for i, c := range rollbackContainers {
-					gomega.Expect(c.Name).To(gomega.Equal(tc.expected[i].Name),
-						""test case containers & expectations should be in the same order"")
-					// Resizes that trigger a restart should trigger a second restart when rolling back.
-					rollbackContainers[i].RestartCount = tc.expected[i].RestartCount
-				}
-
-				patchAndVerify(tc.expected, rollbackContainers, ""rollback"")
-			}
-
-			ginkgo.By(""deleting pod"")
-			podClient.DeleteSync(ctx, newPod.Name, metav1.DeleteOptions{}, f.Timeouts.PodDelete)
-		})
-	}
-}
-
-func doPodResizeErrorTests(f *framework.Framework) {
-
-	type testCase struct {
-		name          string
-		containers    []podresize.ResizableContainerInfo
-		attemptResize []podresize.ResizableContainerInfo // attempted resize target
-		patchError    string
-	}
-
-	tests := []testCase{
-		{
-			name: ""BestEffort pod - try requesting memory, expect error"",
-			containers: []podresize.ResizableContainerInfo{
-				{
-					Name: ""c1"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			""spec.containers[0].name: Forbidden: containers may not be renamed or reordered on resize, spec.containers[1].name: Forbidden: containers may not be renamed or reordered on resize"",
+			true,
+		),
+		ginkgo.Entry(""Guaranteed pod - rename containers"",
+			[]podresize.ResizableContainerInfo{
 				{
-					Name: ""c1"",
-					Resources: &cgroups.ContainerResources{
-						MemReq: originalMem,
-					},
+					Name:      ""c1-old"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
-			},
-			patchError: ""Pod QOS Class may not change as a result of resizing"",
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - remove memory limits"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Name:      ""c2-old"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem},
+					Name:      ""c1-new"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
-			},
-			patchError: ""resource limits cannot be removed"",
-		},
-		{
-			name: ""Burstable QoS pod, one container with cpu & memory requests + limits - remove CPU limits"",
-			containers: []podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Name:      ""c2-new"",
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPU, MemReq: originalMem, MemLim: originalMem},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			""spec.containers[0].name: Forbidden: containers may not be renamed or reordered on resize, spec.containers[1].name: Forbidden: containers may not be renamed or reordered on resize"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - set requests == limits"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: increasedCPULimit, MemReq: originalMem, MemLim: increasedMemLimit},
 				},
 			},
-			patchError: ""resource limits cannot be removed"",
-		},
-		{
-			name: ""Burstable QoS pod, one container with memory requests + limits, cpu requests - remove CPU requests"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{CPUReq: increasedCPULimit, CPULim: increasedCPULimit, MemReq: increasedMemLimit, MemLim: increasedMemLimit},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			""Pod QOS Class may not change as a result of resizing"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - resize ephemeral storage"",
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem, EphStorReq: ""1""},
 				},
 			},
-			patchError: ""resource requests cannot be removed"",
-		},
-		{
-			name: ""Burstable QoS pod, one container with CPU requests + limits, cpu requests - remove memory requests"",
-			containers: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem},
+					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem, EphStorReq: ""3""},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			""only cpu and memory resources are mutable"",
+			true,
+		),
+		ginkgo.Entry(""Burstable pod - nonrestartable initContainer"",
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit},
+					Name:          ""c1-init"",
+					InitCtr:       true,
+					Resources:     &cgroups.ContainerResources{CPUReq: originalCPU, MemReq: originalMem},
+					RestartPolicy: v1.ContainerRestartPolicyNever,
 				},
-			},
-			patchError: ""resource requests cannot be removed"",
-		},
-		{
-			name: ""Burstable QoS pod, two containers with cpu & memory requests + limits - reorder containers"",
-			containers: []podresize.ResizableContainerInfo{
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
-				},
-				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{},
 				},
 			},
-			attemptResize: []podresize.ResizableContainerInfo{
+			[]podresize.ResizableContainerInfo{
 				{
-					Name:      ""c2"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Name:          ""c1-init"",
+					InitCtr:       true,
+					Resources:     &cgroups.ContainerResources{CPUReq: increasedCPU, MemReq: increasedMem},
+					RestartPolicy: v1.ContainerRestartPolicyNever,
 				},
 				{
 					Name:      ""c1"",
-					Resources: &cgroups.ContainerResources{CPUReq: originalCPU, CPULim: originalCPULimit, MemReq: originalMem, MemLim: originalMemLimit},
+					Resources: &cgroups.ContainerResources{},
 				},
 			},
-			patchError: ""spec.containers[0].name: Forbidden: containers may not be renamed or reordered on resize, spec.containers[1].name: Forbidden: containers may not be renamed or reordered on resize"",
-		},
-	}
-
-	for idx := range tests {
-		tc := tests[idx]
-
-		ginkgo.It(tc.name, func(ctx context.Context) {
-			podClient := e2epod.NewPodClient(f)
-			var testPod, patchedPod *v1.Pod
-			var pErr error
-
-			tStamp := strconv.Itoa(time.Now().Nanosecond())
-			testPod = podresize.MakePodWithResizableContainers(f.Namespace.Name, ""testpod"", tStamp, tc.containers)
-			testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
-
-			ginkgo.By(""creating pod"")
-			newPod := podClient.CreateSync(ctx, testPod)
-
-			ginkgo.By(""verifying initial pod resources, and policy are as expected"")
-			podresize.VerifyPodResources(newPod, tc.containers)
-			podresize.VerifyPodResizePolicy(newPod, tc.containers)
-
-			ginkgo.By(""verifying initial pod status resources and cgroup config are as expected"")
-			framework.ExpectNoError(podresize.VerifyPodStatusResources(newPod, tc.containers))
-
-			ginkgo.By(""patching pod for resize"")
-			patch := podresize.MakeResizePatch(tc.containers, tc.attemptResize)
-			patchedPod, pErr = f.ClientSet.CoreV1().Pods(newPod.Namespace).Patch(ctx, newPod.Name,
-				types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
-			if tc.patchError == """" {
-				framework.ExpectNoError(pErr, ""failed to patch pod for resize"")
-			} else {
-				gomega.Expect(pErr).To(gomega.HaveOccurred())
-				gomega.Expect(pErr.Error()).To(gomega.ContainSubstring(tc.patchError))
-				patchedPod = newPod
-			}
-
-			ginkgo.By(""verifying pod resources after patch"")
-			podresize.VerifyPodResources(patchedPod, tc.containers)
-
-			ginkgo.By(""verifying pod status resources after patch"")
-			framework.ExpectNoError(podresize.VerifyPodStatusResources(patchedPod, tc.containers))
-
-			ginkgo.By(""deleting pod"")
-			podClient.DeleteSync(ctx, newPod.Name, metav1.DeleteOptions{}, f.Timeouts.PodDelete)
-		})
-	}
+			""resources for non-sidecar init containers are immutable"",
+			false,
+		),
+	)
 }
 
 func doPodResizeMemoryLimitDecreaseTest(f *framework.Framework) {
@@ -1279,30 +552,13 @@ func doPodResizeMemoryLimitDecreaseTest(f *framework.Framework) {
 	// 3. Revert the limit back to the original value - should succeed
 	ginkgo.It(""decrease memory limit below usage"", func(ctx context.Context) {
 		podClient := e2epod.NewPodClient(f)
-		var testPod *v1.Pod
-		var pErr error
-
 		original := []podresize.ResizableContainerInfo{{
 			Name:      ""c1"",
 			Resources: &cgroups.ContainerResources{MemReq: originalMem, MemLim: originalMem},
 		}}
 
-		tStamp := strconv.Itoa(time.Now().Nanosecond())
-		testPod = podresize.MakePodWithResizableContainers(f.Namespace.Name, ""testpod"", tStamp, original)
-		testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
-
-		ginkgo.By(""creating pod"")
-		testPod = podClient.CreateSync(ctx, testPod)
-
-		ginkgo.By(""verifying initial pod resources are as expected"")
-		podresize.VerifyPodResources(testPod, original)
-		ginkgo.By(""verifying initial pod resize policy is as expected"")
-		podresize.VerifyPodResizePolicy(testPod, original)
-
-		ginkgo.By(""verifying initial pod status resources are as expected"")
-		framework.ExpectNoError(podresize.VerifyPodStatusResources(testPod, original))
-		ginkgo.By(""verifying initial cgroup config are as expected"")
-		framework.ExpectNoError(podresize.VerifyPodContainersCgroupValues(ctx, f, testPod, original))
+		ginkgo.By(""creating and verifying pod"")
+		testPod := createAndVerifyPod(ctx, f, podClient, original)
 
 		// 1. Decrease the limit a little bit - should succeed
 		ginkgo.By(""Patching pod with a slightly lowered memory limit"")
@@ -1311,7 +567,7 @@ func doPodResizeMemoryLimitDecreaseTest(f *framework.Framework) {
 			Resources: &cgroups.ContainerResources{MemReq: reducedMem, MemLim: reducedMem},
 		}}
 		patch := podresize.MakeResizePatch(original, viableLoweredLimit)
-		testPod, pErr = f.ClientSet.CoreV1().Pods(testPod.Namespace).Patch(ctx, testPod.Name,
+		testPod, pErr := f.ClientSet.CoreV1().Pods(testPod.Namespace).Patch(ctx, testPod.Name,
 			types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
 		framework.ExpectNoError(pErr, ""failed to patch pod for viable lowered limit"")
 
@@ -1419,7 +675,127 @@ var _ = SIGDescribe(""Pod InPlace Resize Container"", framework.WithFeatureGate(fe
 		}
 	})
 
-	doPodResizeTests(f)
-	doPodResizeErrorTests(f)
+	doGuaranteedPodResizeTests(f)
+	doBurstablePodResizeTests(f)
+	doPodResizePatchErrorTests(f)
 	doPodResizeMemoryLimitDecreaseTest(f)
 })
+
+func doPatchAndRollback(ctx context.Context, f *framework.Framework, originalContainers, expectedContainers []podresize.ResizableContainerInfo, doRollback bool) {
+	ginkgo.By(""creating and verifying pod"")
+	podClient := e2epod.NewPodClient(f)
+	newPod := createAndVerifyPod(ctx, f, podClient, originalContainers)
+
+	ginkgo.By(""patching and verifying pod for resize"")
+	patchAndVerify(ctx, f, podClient, newPod, originalContainers, expectedContainers, ""resize"")
+
+	if doRollback {
+		// Resize has been actuated, test the reverse operation.
+		rollbackContainers := createRollbackContainers(originalContainers, expectedContainers)
+		ginkgo.By(""patching and verifying pod for rollback"")
+		patchAndVerify(ctx, f, podClient, newPod, expectedContainers, rollbackContainers, ""rollback"")
+	}
+
+	ginkgo.By(""deleting pod"")
+	podClient.DeleteSync(ctx, newPod.Name, metav1.DeleteOptions{}, f.Timeouts.PodDelete)
+}
+
+func patchAndVerify(ctx context.Context, f *framework.Framework, podClient *e2epod.PodClient, newPod *v1.Pod, originalContainers, expectedContainers []podresize.ResizableContainerInfo, opStr string) {
+	patch := podresize.MakeResizePatch(originalContainers, expectedContainers)
+	patchedPod, pErr := f.ClientSet.CoreV1().Pods(newPod.Namespace).Patch(ctx, newPod.Name,
+		types.StrategicMergePatchType, patch, metav1.PatchOptions{}, ""resize"")
+	framework.ExpectNoError(pErr, fmt.Sprintf(""failed to patch pod for %s"", opStr))
+
+	expected := podresize.UpdateExpectedContainerRestarts(ctx, patchedPod, expectedContainers)
+
+	podresize.VerifyPodResources(patchedPod, expected)
+	resizedPod := podresize.WaitForPodResizeActuation(ctx, f, podClient, newPod, expected)
+	podresize.ExpectPodResized(ctx, f, resizedPod, expected)
+}
+
+func createAndVerifyPod(ctx context.Context, f *framework.Framework, podClient *e2epod.PodClient, originalContainers []podresize.ResizableContainerInfo) *v1.Pod {
+	tStamp := strconv.Itoa(time.Now().Nanosecond())
+	testPod := podresize.MakePodWithResizableContainers(f.Namespace.Name, """", tStamp, originalContainers)
+	testPod.GenerateName = ""resize-test-""
+	testPod = e2epod.MustMixinRestrictedPodSecurity(testPod)
+
+	newPod := podClient.CreateSync(ctx, testPod)
+	podresize.VerifyPodResources(newPod, originalContainers)
+	podresize.VerifyPodResizePolicy(newPod, originalContainers)
+	framework.ExpectNoError(podresize.VerifyPodStatusResources(newPod, originalContainers))
+	framework.ExpectNoError(podresize.VerifyPodContainersCgroupValues(ctx, f, newPod, originalContainers))
+
+	return newPod
+}
+
+func makeGuaranteedContainers(numContainers int,
+	cpuPolicy, memPolicy v1.ResourceResizeRestartPolicy,
+	initContainers, extendedResources bool,
+	cpu, mem string) []podresize.ResizableContainerInfo {
+
+	containers := []podresize.ResizableContainerInfo{}
+	for i := range numContainers {
+		// Offset the resources a bit so that in multi-container pods, not all containers have the same resources.
+		resources := &cgroups.ContainerResources{
+			CPUReq: offsetCPU(i, cpu),
+			CPULim: offsetCPU(i, cpu),
+			MemReq: offsetMemory(int64(i), mem),
+			MemLim: offsetMemory(int64(i), mem),
+		}
+
+		if extendedResources {
+			resources.ExtendedResourceReq = ""1""
+			resources.ExtendedResourceLim = ""1""
+		}
+
+		containers = append(containers, podresize.ResizableContainerInfo{
+			Name:      fmt.Sprintf(""c%d"", i+1),
+			Resources: resources,
+			CPUPolicy: &cpuPolicy,
+			MemPolicy: &memPolicy,
+		})
+	}
+
+	if initContainers {
+		containers = append(containers, podresize.ResizableContainerInfo{
+			Name:          ""c1-init"",
+			Resources:     &cgroups.ContainerResources{CPUReq: cpu, CPULim: cpu, MemReq: mem, MemLim: mem},
+			InitCtr:       true,
+			RestartPolicy: v1.ContainerRestartPolicyAlways,
+			CPUPolicy:     &cpuPolicy,
+			MemPolicy:     &memPolicy,
+		})
+	}
+
+	return containers
+}
+
+func makeBurstableContainers(numContainers int,
+	cpuPolicy, memPolicy v1.ResourceResizeRestartPolicy,
+	cpu, cpuLimit, mem, memLimit string) []podresize.ResizableContainerInfo {
+
+	containers := []podresize.ResizableContainerInfo{}
+	for i := range numContainers {
+		// Offset the resources a bit so that in multi-container pods, not all containers have the same resources.
+		resources := &cgroups.ContainerResources{CPUReq: offsetCPU(i, cpu), CPULim: offsetCPU(i, cpuLimit), MemReq: offsetMemory(int64(i), mem), MemLim: offsetMemory(int64(i), memLimit)}
+		containers = append(containers, podresize.ResizableContainerInfo{
+			Name:      fmt.Sprintf(""c%d"", i+1),
+			Resources: resources,
+			CPUPolicy: &cpuPolicy,
+			MemPolicy: &memPolicy,
+		})
+	}
+	return containers
+}
+
+func createRollbackContainers(originalContainers, expectedContainers []podresize.ResizableContainerInfo) []podresize.ResizableContainerInfo {
+	rollbackContainers := make([]podresize.ResizableContainerInfo, len(originalContainers))
+	copy(rollbackContainers, originalContainers)
+	for i, c := range rollbackContainers {
+		gomega.Expect(c.Name).To(gomega.Equal(expectedContainers[i].Name),
+			""test case containers & expectations should be in the same order"")
+		// Resizes that trigger a restart should trigger a second restart when rolling back.
+		rollbackContainers[i].RestartCount = expectedContainers[i].RestartCount
+	}
+	return rollbackContainers
+}"
kubernetes/kubernetes,a412a15109529c4cf059303892646563434c4da8,Kubernetes Prow Robot,2025-10-02T20:00:57Z,"Merge pull request #134304 from humblec/volume-fixes

Update CSI sidecar container images in test manifest",pkg/volume/util/fsquota/common/quota_common_linux_impl.go,4,2,6,"@@ -71,9 +71,11 @@ var (
 type VolumeProvider struct {
 }
 
-var quotaCmds = []string{""/sbin/xfs_quota"",
+var quotaCmds = []string{
+	""/sbin/xfs_quota"",
 	""/usr/sbin/xfs_quota"",
-	""/bin/xfs_quota""}
+	""/bin/xfs_quota"",
+}
 
 var quotaParseRegexp = regexp.MustCompilePOSIX(""^[^ \t]*[ \t]*([0-9]+)"")
 "
kubernetes/kubernetes,a412a15109529c4cf059303892646563434c4da8,Kubernetes Prow Robot,2025-10-02T20:00:57Z,"Merge pull request #134304 from humblec/volume-fixes

Update CSI sidecar container images in test manifest",pkg/volume/util/nested_volumes.go,3,3,6,"@@ -50,7 +50,7 @@ func getNestedMountpoints(name, baseDir string, pod v1.Pod) ([]string, error) {
 				// Don't let a container trick us into creating directories outside of its rootfs
 				return fmt.Errorf(""invalid container mount point %v"", myMountPoint)
 			}
-			myMPSlash := myMountPoint + string(os.PathSeparator)
+			myMountPointWithSlash := myMountPoint + string(os.PathSeparator)
 			// The previously found nested mountpoints.
 			// NOTE: We can't simply rely on sort.Strings to have all the mountpoints sorted and
 			// grouped. For example, the following strings are sorted in this exact order:
@@ -64,7 +64,7 @@ func getNestedMountpoints(name, baseDir string, pod v1.Pod) ([]string, error) {
 			// For example, if this volume is mounted as /dir and other volumes are mounted
 			//              as /dir/nested and /dir/nested/other, only create /dir/nested.
 			for _, mp := range allMountPoints {
-				if !strings.HasPrefix(mp, myMPSlash) {
+				if !strings.HasPrefix(mp, myMountPointWithSlash) {
 					continue // skip -- not nested beneath myMountPoint
 				}
 
@@ -80,7 +80,7 @@ func getNestedMountpoints(name, baseDir string, pod v1.Pod) ([]string, error) {
 				}
 				// since this mount point is nested, remember it so that we can check that following ones aren't nested beneath this one
 				prevNestedMPs = append(prevNestedMPs, mp+string(os.PathSeparator))
-				retval = append(retval, mp[len(myMPSlash):])
+				retval = append(retval, mp[len(myMountPointWithSlash):])
 			}
 		}
 		return nil"
kubernetes/kubernetes,a412a15109529c4cf059303892646563434c4da8,Kubernetes Prow Robot,2025-10-02T20:00:57Z,"Merge pull request #134304 from humblec/volume-fixes

Update CSI sidecar container images in test manifest",pkg/volume/util/operationexecutor/operation_executor.go,3,3,6,"@@ -302,7 +302,7 @@ type VolumeLogger interface {
 	GenerateError(prefixMsg string, err error) (simpleErr, detailedErr error)
 }
 
-// Generates an error string with the format "": <err>"" if err exists
+// errSuffix generates an error string with the format "": <err>"" if err exists
 func errSuffix(err error) string {
 	errStr := """"
 	if err != nil {
@@ -311,12 +311,12 @@ func errSuffix(err error) string {
 	return errStr
 }
 
-// Generate a detailed error msg for logs
+// generateVolumeMsgDetailed generates a detailed error msg for logs
 func generateVolumeMsgDetailed(prefixMsg, suffixMsg, volumeName, details string) (detailedMsg string) {
 	return fmt.Sprintf(""%v for volume %q %v %v"", prefixMsg, volumeName, details, suffixMsg)
 }
 
-// Generate a simplified error msg for events and a detailed error msg for logs
+// generateVolumeMsg generates a simplified error msg for events and a detailed error msg for logs
 func generateVolumeMsg(prefixMsg, suffixMsg, volumeName, details string) (simpleMsg, detailedMsg string) {
 	simpleMsg = fmt.Sprintf(""%v for volume %q %v"", prefixMsg, volumeName, suffixMsg)
 	return simpleMsg, generateVolumeMsgDetailed(prefixMsg, suffixMsg, volumeName, details)"
kubernetes/kubernetes,a412a15109529c4cf059303892646563434c4da8,Kubernetes Prow Robot,2025-10-02T20:00:57Z,"Merge pull request #134304 from humblec/volume-fixes

Update CSI sidecar container images in test manifest",test/e2e/testing-manifests/storage-csi/external-snapshotter/volume-group-snapshots/csi-hostpath-plugin.yaml,5,5,10,"@@ -276,7 +276,7 @@ spec:
               mountPath: /csi
 
         - name: node-driver-registrar
-          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0
+          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.15.0
           args:
             - --v=5
             - --csi-address=/csi/csi.sock
@@ -304,13 +304,13 @@ spec:
           volumeMounts:
           - mountPath: /csi
             name: socket-dir
-          image: registry.k8s.io/sig-storage/livenessprobe:v2.15.0
+          image: registry.k8s.io/sig-storage/livenessprobe:v2.17.0
           args:
           - --csi-address=/csi/csi.sock
           - --health-port=9898
 
         - name: csi-attacher
-          image: registry.k8s.io/sig-storage/csi-attacher:v4.8.0
+          image: registry.k8s.io/sig-storage/csi-attacher:v4.10.0
           args:
             - --v=5
             - --csi-address=/csi/csi.sock
@@ -324,7 +324,7 @@ spec:
             name: socket-dir
 
         - name: csi-provisioner
-          image: registry.k8s.io/sig-storage/csi-provisioner:v5.1.0
+          image: registry.k8s.io/sig-storage/csi-provisioner:v5.3.0
           args:
             - -v=5
             - --csi-address=/csi/csi.sock
@@ -340,7 +340,7 @@ spec:
               name: socket-dir
 
         - name: csi-resizer
-          image: registry.k8s.io/sig-storage/csi-resizer:v1.13.1
+          image: registry.k8s.io/sig-storage/csi-resizer:v1.14.0
           args:
             - -v=5
             - -csi-address=/csi/csi.sock"
kubernetes/kubernetes,a412a15109529c4cf059303892646563434c4da8,Kubernetes Prow Robot,2025-10-02T20:00:57Z,"Merge pull request #134304 from humblec/volume-fixes

Update CSI sidecar container images in test manifest",test/e2e/testing-manifests/storage-csi/hostpath/hostpath/csi-hostpath-plugin.yaml,5,5,10,"@@ -276,7 +276,7 @@ spec:
               mountPath: /csi
 
         - name: node-driver-registrar
-          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0
+          image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.15.0
           args:
             - --v=5
             - --csi-address=/csi/csi.sock
@@ -304,13 +304,13 @@ spec:
           volumeMounts:
           - mountPath: /csi
             name: socket-dir
-          image: registry.k8s.io/sig-storage/livenessprobe:v2.15.0
+          image: registry.k8s.io/sig-storage/livenessprobe:v2.17.0
           args:
           - --csi-address=/csi/csi.sock
           - --health-port=9898
 
         - name: csi-attacher
-          image: registry.k8s.io/sig-storage/csi-attacher:v4.8.0
+          image: registry.k8s.io/sig-storage/csi-attacher:v4.10.0
           args:
             - --v=5
             - --csi-address=/csi/csi.sock
@@ -324,7 +324,7 @@ spec:
             name: socket-dir
 
         - name: csi-provisioner
-          image: registry.k8s.io/sig-storage/csi-provisioner:v5.1.0
+          image: registry.k8s.io/sig-storage/csi-provisioner:v5.3.0
           args:
             - -v=5
             - --csi-address=/csi/csi.sock
@@ -340,7 +340,7 @@ spec:
               name: socket-dir
 
         - name: csi-resizer
-          image: registry.k8s.io/sig-storage/csi-resizer:v1.13.1
+          image: registry.k8s.io/sig-storage/csi-resizer:v1.14.0
           args:
             - -v=5
             - -csi-address=/csi/csi.sock"
kubernetes/kubernetes,ae2597979033240481a93b65751249cf46a35d26,Adrian Moisey,2025-10-02T19:22:10Z,"Use a dedicated delete channel in HPA test

This is an attempt to fix a flake",pkg/controller/podautoscaler/horizontal_test.go,3,2,5,"@@ -5192,6 +5192,7 @@ func TestMultipleHPAs(t *testing.T) {
 	const testNamespace = ""dummy-namespace""
 
 	processed := make(chan string, hpaCount)
+	processedDeleted := make(chan string, 1)
 
 	testClient := &fake.Clientset{}
 	testScaleClient := &scalefake.FakeScaleClient{}
@@ -5423,7 +5424,7 @@ func TestMultipleHPAs(t *testing.T) {
 	testClient.AddReactor(""delete"", ""horizontalpodautoscalers"", func(action core.Action) (handled bool, ret runtime.Object, err error) {
 		deleteAction := action.(core.DeleteAction)
 		hpaName := deleteAction.GetName()
-		processed <- hpaName
+		processedDeleted <- hpaName
 		return true, nil, nil
 	})
 
@@ -5481,7 +5482,7 @@ func TestMultipleHPAs(t *testing.T) {
 
 	// Wait for deletion to be processed
 	select {
-	case deletedHPAName := <-processed:
+	case deletedHPAName := <-processedDeleted:
 		assert.Equal(t, hpaName, deletedHPAName, ""Expected the deleted HPA name to match"")
 	case <-time.After(5 * time.Second):
 		t.Fatalf(""Timeout waiting for HPA deletion to be processed"")"
